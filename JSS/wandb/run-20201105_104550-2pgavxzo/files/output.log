2020-11-05 10:45:54,444	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1524f_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=50544)[0m 2020-11-05 10:45:57,239	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=50544)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=50544)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=50544)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=50544)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=50544)[0m 
[2m[36m(pid=50544)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=50564)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50564)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50564)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50509)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50509)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50509)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50562)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50562)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50528)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50528)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50528)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50528)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50528)[0m *** SIGSEGV (@0x0) received by PID 50528 (TID 0x7f4ec7550700) from PID 0; stack trace: ***
[2m[36m(pid=50549)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50549)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50549)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50549)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50549)[0m *** SIGSEGV (@0x0) received by PID 50549 (TID 0x7f6c6ce05700) from PID 0; stack trace: ***
[2m[36m(pid=50549)[0m     @     0x7f6c6c9de390 (unknown)
[2m[36m(pid=50564)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50564)[0m *** SIGSEGV (@0x0) received by PID 50564 (TID 0x7fc2d89ad700) from PID 0; stack trace: ***
[2m[36m(pid=50564)[0m     @     0x7fc2d8586390 (unknown)
[2m[36m(pid=50517)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50517)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50517)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50517)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50517)[0m *** SIGSEGV (@0x0) received by PID 50517 (TID 0x7f0bf1ed4700) from PID 0; stack trace: ***
[2m[36m(pid=50546)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50546)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50546)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50546)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50546)[0m *** SIGSEGV (@0x0) received by PID 50546 (TID 0x7f002f8df700) from PID 0; stack trace: ***
[2m[36m(pid=50509)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50509)[0m *** SIGSEGV (@0x0) received by PID 50509 (TID 0x7ff08a853700) from PID 0; stack trace: ***
[2m[36m(pid=50509)[0m     @     0x7ff08a42c390 (unknown)
[2m[36m(pid=50513)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50513)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50513)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50513)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50513)[0m *** SIGSEGV (@0x0) received by PID 50513 (TID 0x7f265227c700) from PID 0; stack trace: ***
[2m[36m(pid=50511)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50511)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50511)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50511)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50562)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50562)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50562)[0m *** SIGSEGV (@0x0) received by PID 50562 (TID 0x7f3c2e2a2700) from PID 0; stack trace: ***
[2m[36m(pid=50503)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50503)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50503)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50503)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50503)[0m *** SIGSEGV (@0x0) received by PID 50503 (TID 0x7f5dddc10700) from PID 0; stack trace: ***
[2m[36m(pid=50548)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50548)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50548)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50548)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50548)[0m *** SIGSEGV (@0x0) received by PID 50548 (TID 0x7f0e22f12700) from PID 0; stack trace: ***
[2m[36m(pid=50542)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50542)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50542)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50542)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50542)[0m *** SIGSEGV (@0x0) received by PID 50542 (TID 0x7f4bbd650700) from PID 0; stack trace: ***
[2m[36m(pid=50532)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50532)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50532)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50532)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50532)[0m *** SIGSEGV (@0x0) received by PID 50532 (TID 0x7fd6a07d2700) from PID 0; stack trace: ***
[2m[36m(pid=50532)[0m     @     0x7fd6a03ab390 (unknown)
[2m[36m(pid=50532)[0m     @     0x7fa7a0136f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50528)[0m     @     0x7f4ec7129390 (unknown)
[2m[36m(pid=50528)[0m     @     0x7f1fc70b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50528)[0m     @     0x7f1fc67e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50528)[0m     @     0x7f1fc67e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50549)[0m     @     0x7f3d6c9a1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50549)[0m     @     0x7f3d6c0cc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50549)[0m     @     0x7f3d6c0cf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50564)[0m     @     0x7f93d83e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50564)[0m     @     0x7f93d7b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50564)[0m     @     0x7f93d7b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50517)[0m     @     0x7f0bf1aad390 (unknown)
[2m[36m(pid=50517)[0m     @     0x7edcf1a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50517)[0m     @     0x7edcf11357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50546)[0m     @     0x7f002f4b8390 (unknown)
[2m[36m(pid=50546)[0m     @     0x7ed12f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50546)[0m     @     0x7ed12e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50546)[0m     @     0x7ed12e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50509)[0m     @     0x7fc18a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50509)[0m     @     0x7fc189a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50509)[0m     @     0x7fc189a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50513)[0m     @     0x7f2651e55390 (unknown)
[2m[36m(pid=50513)[0m     @     0x7ef751d73f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50513)[0m     @     0x7ef75149e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50513)[0m     @     0x7ef7514a18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50511)[0m *** SIGSEGV (@0x0) received by PID 50511 (TID 0x7f52760b0700) from PID 0; stack trace: ***
[2m[36m(pid=50511)[0m     @     0x7f5275c89390 (unknown)
[2m[36m(pid=50511)[0m     @     0x7f2375c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50511)[0m     @     0x7f237533c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50562)[0m     @     0x7f3c2de7b390 (unknown)
[2m[36m(pid=50562)[0m     @     0x7f0d2ddf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50562)[0m     @     0x7f0d2d5227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50562)[0m     @     0x7f0d2d5258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50503)[0m     @     0x7f5ddd7e9390 (unknown)
[2m[36m(pid=50503)[0m     @     0x7f2edd6f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50503)[0m     @     0x7f2edce1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50548)[0m     @     0x7f0e22aeb390 (unknown)
[2m[36m(pid=50548)[0m     @     0x7edf22a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50548)[0m     @     0x7edf2214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50548)[0m     @     0x7edf2214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50542)[0m     @     0x7f4bbd229390 (unknown)
[2m[36m(pid=50542)[0m     @     0x7f1cbd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50542)[0m     @     0x7f1cbc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50532)[0m     @     0x7fa79f8617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50528)[0m     @     0x7f1fc67e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=50549)[0m     @     0x7f3d6c0cfad3 at::TensorIterator::for_each()
[2m[36m(pid=50564)[0m     @     0x7f93d7b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=50517)[0m     @     0x7edcf11388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50546)[0m     @     0x7ed12e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=50509)[0m     @     0x7fc189a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=50513)[0m     @     0x7ef7514a1ad3 at::TensorIterator::for_each()
[2m[36m(pid=50511)[0m     @     0x7f237533f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50562)[0m     @     0x7f0d2d525ad3 at::TensorIterator::for_each()
[2m[36m(pid=50516)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50516)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50516)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50516)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50516)[0m *** SIGSEGV (@0x0) received by PID 50516 (TID 0x7f1b32664700) from PID 0; stack trace: ***
[2m[36m(pid=50524)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50524)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50524)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50429)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50434)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50434)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50434)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50434)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50434)[0m *** SIGSEGV (@0x0) received by PID 50434 (TID 0x7f5f0c402700) from PID 0; stack trace: ***
[2m[36m(pid=50503)[0m     @     0x7f2edce228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50503)[0m     @     0x7f2edce22ad3 at::TensorIterator::for_each()
[2m[36m(pid=50503)[0m     @     0x7f2edce22d91 at::TensorIterator::for_each()
[2m[36m(pid=50503)[0m     @     0x7f2edd705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50548)[0m     @     0x7edf2214fad3 at::TensorIterator::for_each()
[2m[36m(pid=50548)[0m     @     0x7edf2214fd91 at::TensorIterator::for_each()
[2m[36m(pid=50548)[0m     @     0x7edf22a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50548)[0m     @     0x7edf22a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50467)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50467)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50467)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50466)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50466)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50466)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50466)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50466)[0m *** SIGSEGV (@0x0) received by PID 50466 (TID 0x7fd4530ed700) from PID 0; stack trace: ***
[2m[36m(pid=50530)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50530)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50530)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50530)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50530)[0m *** SIGSEGV (@0x0) received by PID 50530 (TID 0x7f628d568700) from PID 0; stack trace: ***
[2m[36m(pid=50530)[0m     @     0x7f628d141390 (unknown)
[2m[36m(pid=50551)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50551)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50551)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50535)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50535)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50535)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50535)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50535)[0m *** SIGSEGV (@0x0) received by PID 50535 (TID 0x7fed13897700) from PID 0; stack trace: ***
[2m[36m(pid=50491)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50491)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50491)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50491)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50491)[0m *** SIGSEGV (@0x0) received by PID 50491 (TID 0x7f2427739700) from PID 0; stack trace: ***
[2m[36m(pid=50540)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50540)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50540)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50540)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50540)[0m *** SIGSEGV (@0x0) received by PID 50540 (TID 0x7f23612f5700) from PID 0; stack trace: ***
[2m[36m(pid=50526)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50526)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50526)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50526)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50526)[0m *** SIGSEGV (@0x0) received by PID 50526 (TID 0x7f08e9d66700) from PID 0; stack trace: ***
[2m[36m(pid=50526)[0m     @     0x7f08e993f390 (unknown)
[2m[36m(pid=50496)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50496)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50496)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50496)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50496)[0m *** SIGSEGV (@0x0) received by PID 50496 (TID 0x7f33fb981700) from PID 0; stack trace: ***
[2m[36m(pid=50496)[0m     @     0x7f33fb55a390 (unknown)
[2m[36m(pid=50496)[0m     @     0x7f04fb43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50537)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50537)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50537)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50537)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50537)[0m *** SIGSEGV (@0x0) received by PID 50537 (TID 0x7f831a7a8700) from PID 0; stack trace: ***
[2m[36m(pid=50542)[0m     @     0x7f1cbc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50542)[0m     @     0x7f1cbc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=50542)[0m     @     0x7f1cbc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=50542)[0m     @     0x7f1cbd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50542)[0m     @     0x7f1cbd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50554)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50554)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50554)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50554)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50554)[0m *** SIGSEGV (@0x0) received by PID 50554 (TID 0x7fcccaa89700) from PID 0; stack trace: ***
[2m[36m(pid=50554)[0m     @     0x7fccca662390 (unknown)
[2m[36m(pid=50532)[0m     @     0x7fa79f8648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50532)[0m     @     0x7fa79f864ad3 at::TensorIterator::for_each()
[2m[36m(pid=50532)[0m     @     0x7fa79f864d91 at::TensorIterator::for_each()
[2m[36m(pid=50532)[0m     @     0x7fa7a0147b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50532)[0m     @     0x7fa7a016ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50441)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50433)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50433)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50433)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50437)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50439)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50439)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50439)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50453)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50453)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50453)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50506)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50506)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50506)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50506)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50501)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50501)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50487)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50487)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50487)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50487)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50487)[0m *** SIGSEGV (@0x0) received by PID 50487 (TID 0x7fcbe1550700) from PID 0; stack trace: ***
[2m[36m(pid=50485)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50485)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50485)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50435)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50435)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50435)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50435)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50432)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50432)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50432)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50432)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50432)[0m *** SIGSEGV (@0x0) received by PID 50432 (TID 0x7fc843901700) from PID 0; stack trace: ***
[2m[36m(pid=50432)[0m     @     0x7fc8434da390 (unknown)
[2m[36m(pid=50438)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50438)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50438)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50438)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50438)[0m *** SIGSEGV (@0x0) received by PID 50438 (TID 0x7fbec8075700) from PID 0; stack trace: ***
[2m[36m(pid=50438)[0m     @     0x7fbec7c4e390 (unknown)
[2m[36m(pid=50438)[0m     @     0x7f8fc7af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50438)[0m     @     0x7f8fc72207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50457)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50457)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50457)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50457)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50457)[0m *** SIGSEGV (@0x0) received by PID 50457 (TID 0x7f2a58bc5700) from PID 0; stack trace: ***
[2m[36m(pid=50457)[0m     @     0x7f2a5879e390 (unknown)
[2m[36m(pid=50457)[0m     @     0x7efb58339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50457)[0m     @     0x7efb57a647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50457)[0m     @     0x7efb57a678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50520)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50520)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50520)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50520)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50520)[0m *** SIGSEGV (@0x0) received by PID 50520 (TID 0x7ffa9d17f700) from PID 0; stack trace: ***
[2m[36m(pid=50520)[0m     @     0x7ffa9cd58390 (unknown)
[2m[36m(pid=50560)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50560)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50560)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50560)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50560)[0m *** SIGSEGV (@0x0) received by PID 50560 (TID 0x7f8e1f89a700) from PID 0; stack trace: ***
[2m[36m(pid=50560)[0m     @     0x7f8e1f473390 (unknown)
[2m[36m(pid=50560)[0m     @     0x7f5f1f398f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50560)[0m     @     0x7f5f1eac37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50560)[0m     @     0x7f5f1eac68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50507)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50507)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50507)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50507)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50507)[0m *** SIGSEGV (@0x0) received by PID 50507 (TID 0x7f878181e700) from PID 0; stack trace: ***
[2m[36m(pid=50507)[0m     @     0x7f87813f7390 (unknown)
[2m[36m(pid=50507)[0m     @     0x7f588139ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50507)[0m     @     0x7f5880aca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50507)[0m     @     0x7f5880acd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50463)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50463)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50463)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50463)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50463)[0m *** SIGSEGV (@0x0) received by PID 50463 (TID 0x7f86936b5700) from PID 0; stack trace: ***
[2m[36m(pid=50463)[0m     @     0x7f869328e390 (unknown)
[2m[36m(pid=50463)[0m     @     0x7f5793229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50463)[0m     @     0x7f57929547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50519)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50519)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50519)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50519)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50519)[0m *** SIGSEGV (@0x0) received by PID 50519 (TID 0x7f39962c5700) from PID 0; stack trace: ***
[2m[36m(pid=50446)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50446)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50446)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50456)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50456)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50456)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50456)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50456)[0m *** SIGSEGV (@0x0) received by PID 50456 (TID 0x7f30cae24700) from PID 0; stack trace: ***
[2m[36m(pid=50459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50459)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50459)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50459)[0m *** SIGSEGV (@0x0) received by PID 50459 (TID 0x7fb2dd318700) from PID 0; stack trace: ***
[2m[36m(pid=50459)[0m     @     0x7fb2dcef1390 (unknown)
[2m[36m(pid=50459)[0m     @     0x7f83dce77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50492)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50492)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50492)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50492)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50492)[0m *** SIGSEGV (@0x0) received by PID 50492 (TID 0x7fb3862b3700) from PID 0; stack trace: ***
[2m[36m(pid=50492)[0m     @     0x7fb385e8c390 (unknown)
[2m[36m(pid=50492)[0m     @     0x7f8485df7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50492)[0m     @     0x7f84855227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50518)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50518)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50518)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50528)[0m     @     0x7f1fc67e5d91 at::TensorIterator::for_each()
[2m[36m(pid=50528)[0m     @     0x7f1fc70c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50528)[0m     @     0x7f1fc70ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50528)[0m     @     0x7f1fc658da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50528)[0m     @     0x7f1fc658b388 at::native::copy_impl()
[2m[36m(pid=50528)[0m     @     0x7f1fc658d5a4 at::native::copy_()
[2m[36m(pid=50528)[0m     @     0x7f1fc6c784f5 at::Tensor::copy_()
[2m[36m(pid=50528)[0m     @     0x7f1fc914b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50549)[0m     @     0x7f3d6c0cfd91 at::TensorIterator::for_each()
[2m[36m(pid=50549)[0m     @     0x7f3d6c9b2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50549)[0m     @     0x7f3d6c9d5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50549)[0m     @     0x7f3d6be77a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50549)[0m     @     0x7f3d6be75388 at::native::copy_impl()
[2m[36m(pid=50549)[0m     @     0x7f3d6be775a4 at::native::copy_()
[2m[36m(pid=50549)[0m     @     0x7f3d6c5624f5 at::Tensor::copy_()
[2m[36m(pid=50549)[0m     @     0x7f3d6ea358de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50484)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50484)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50484)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50484)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50484)[0m *** SIGSEGV (@0x0) received by PID 50484 (TID 0x7fc784cbb700) from PID 0; stack trace: ***
[2m[36m(pid=50484)[0m     @     0x7fc784894390 (unknown)
[2m[36m(pid=50484)[0m     @     0x7f9884825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50484)[0m     @     0x7f9883f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50484)[0m     @     0x7f9883f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50484)[0m     @     0x7f9883f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=50430)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50430)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50430)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50430)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50430)[0m *** SIGSEGV (@0x0) received by PID 50430 (TID 0x7fcc49752700) from PID 0; stack trace: ***
[2m[36m(pid=50430)[0m     @     0x7fcc4932b390 (unknown)
[2m[36m(pid=50430)[0m     @     0x7f9d492a7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50430)[0m     @     0x7f9d489d27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50430)[0m     @     0x7f9d489d58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50502)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50502)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50502)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50502)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50502)[0m *** SIGSEGV (@0x0) received by PID 50502 (TID 0x7f92ae350700) from PID 0; stack trace: ***
[2m[36m(pid=50502)[0m     @     0x7f92adf29390 (unknown)
[2m[36m(pid=50502)[0m     @     0x7f63ade24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50502)[0m     @     0x7f63ad54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50502)[0m     @     0x7f63ad5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50493)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50493)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50493)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50493)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50493)[0m *** SIGSEGV (@0x0) received by PID 50493 (TID 0x7fc11b812700) from PID 0; stack trace: ***
[2m[36m(pid=50465)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50465)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50465)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50465)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50465)[0m *** SIGSEGV (@0x0) received by PID 50465 (TID 0x7f335e535700) from PID 0; stack trace: ***
[2m[36m(pid=50465)[0m     @     0x7f335e10e390 (unknown)
[2m[36m(pid=50465)[0m     @     0x7f045e0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50465)[0m     @     0x7f045d7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50465)[0m     @     0x7f045d7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50489)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50489)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50489)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50489)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50489)[0m *** SIGSEGV (@0x0) received by PID 50489 (TID 0x7f7a9d1e8700) from PID 0; stack trace: ***
[2m[36m(pid=50489)[0m     @     0x7f7a9cdc1390 (unknown)
[2m[36m(pid=50489)[0m     @     0x7f4b9cc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50489)[0m     @     0x7f4b9c39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50489)[0m     @     0x7f4b9c3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50447)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50447)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50447)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50447)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50447)[0m *** SIGSEGV (@0x0) received by PID 50447 (TID 0x7f9534726700) from PID 0; stack trace: ***
[2m[36m(pid=50447)[0m     @     0x7f95342ff390 (unknown)
[2m[36m(pid=50447)[0m     @     0x7f6634297f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50447)[0m     @     0x7f66339c27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50447)[0m     @     0x7f66339c58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50449)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50449)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50449)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50449)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50449)[0m *** SIGSEGV (@0x0) received by PID 50449 (TID 0x7fca16584700) from PID 0; stack trace: ***
[2m[36m(pid=50449)[0m     @     0x7fca1615d390 (unknown)
[2m[36m(pid=50449)[0m     @     0x7f9b1610df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50449)[0m     @     0x7f9b158387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50449)[0m     @     0x7f9b1583b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50449)[0m     @     0x7f9b1583bad3 at::TensorIterator::for_each()
[2m[36m(pid=50445)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50445)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50445)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50445)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50445)[0m *** SIGSEGV (@0x0) received by PID 50445 (TID 0x7fadf92da700) from PID 0; stack trace: ***
[2m[36m(pid=50445)[0m     @     0x7fadf8eb3390 (unknown)
[2m[36m(pid=50445)[0m     @     0x7f7ef8e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50445)[0m     @     0x7f7ef85627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50445)[0m     @     0x7f7ef85658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50445)[0m     @     0x7f7ef8565ad3 at::TensorIterator::for_each()
[2m[36m(pid=50500)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50500)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50500)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50500)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50500)[0m *** SIGSEGV (@0x0) received by PID 50500 (TID 0x7f8eaa62b700) from PID 0; stack trace: ***
[2m[36m(pid=50500)[0m     @     0x7f8eaa204390 (unknown)
[2m[36m(pid=50500)[0m     @     0x7f5faa13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50500)[0m     @     0x7f5fa98657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50500)[0m     @     0x7f5fa98688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50431)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50431)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50431)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50431)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50431)[0m *** SIGSEGV (@0x0) received by PID 50431 (TID 0x7f200f17c700) from PID 0; stack trace: ***
[2m[36m(pid=50431)[0m     @     0x7f200ed55390 (unknown)
[2m[36m(pid=50431)[0m     @     0x7ef10ec15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50431)[0m     @     0x7ef10e3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50431)[0m     @     0x7ef10e3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50522)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50522)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50522)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50522)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50522)[0m *** SIGSEGV (@0x0) received by PID 50522 (TID 0x7f32c632b700) from PID 0; stack trace: ***
[2m[36m(pid=50522)[0m     @     0x7f32c5f04390 (unknown)
[2m[36m(pid=50522)[0m     @     0x7f03c5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50522)[0m     @     0x7f03c554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50522)[0m     @     0x7f03c55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50564)[0m     @     0x7f93d7b11d91 at::TensorIterator::for_each()
[2m[36m(pid=50564)[0m     @     0x7f93d83f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50564)[0m     @     0x7f93d8417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50564)[0m     @     0x7f93d78b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50564)[0m     @     0x7f93d78b7388 at::native::copy_impl()
[2m[36m(pid=50564)[0m     @     0x7f93d78b95a4 at::native::copy_()
[2m[36m(pid=50564)[0m     @     0x7f93d7fa44f5 at::Tensor::copy_()
[2m[36m(pid=50564)[0m     @     0x7f93da4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50564)[0m     @     0x7f93d7fa44f5 at::Tensor::copy_()
[2m[36m(pid=50517)[0m     @     0x7edcf1138ad3 at::TensorIterator::for_each()
[2m[36m(pid=50517)[0m     @     0x7edcf1138d91 at::TensorIterator::for_each()
[2m[36m(pid=50517)[0m     @     0x7edcf1a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50517)[0m     @     0x7edcf1a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50517)[0m     @     0x7edcf0ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50517)[0m     @     0x7edcf0ede388 at::native::copy_impl()
[2m[36m(pid=50517)[0m     @     0x7edcf0ee05a4 at::native::copy_()
[2m[36m(pid=50515)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50515)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50515)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50515)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50515)[0m *** SIGSEGV (@0x0) received by PID 50515 (TID 0x7f4245699700) from PID 0; stack trace: ***
[2m[36m(pid=50515)[0m     @     0x7f4245272390 (unknown)
[2m[36m(pid=50515)[0m     @     0x7f13450b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50515)[0m     @     0x7f13447e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50515)[0m     @     0x7f13447e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50515)[0m     @     0x7f13447e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=50546)[0m     @     0x7ed12e957d91 at::TensorIterator::for_each()
[2m[36m(pid=50546)[0m     @     0x7ed12f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50546)[0m     @     0x7ed12f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50546)[0m     @     0x7ed12e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50546)[0m     @     0x7ed12e6fd388 at::native::copy_impl()
[2m[36m(pid=50546)[0m     @     0x7ed12e6ff5a4 at::native::copy_()
[2m[36m(pid=50546)[0m     @     0x7ed12edea4f5 at::Tensor::copy_()
[2m[36m(pid=50546)[0m     @     0x7ed1312bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50509)[0m     @     0x7fc189a79d91 at::TensorIterator::for_each()
[2m[36m(pid=50509)[0m     @     0x7fc18a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50509)[0m     @     0x7fc18a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50509)[0m     @     0x7fc189821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50509)[0m     @     0x7fc18981f388 at::native::copy_impl()
[2m[36m(pid=50509)[0m     @     0x7fc1898215a4 at::native::copy_()
[2m[36m(pid=50509)[0m     @     0x7fc189f0c4f5 at::Tensor::copy_()
[2m[36m(pid=50509)[0m     @     0x7fc18c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50513)[0m     @     0x7ef7514a1d91 at::TensorIterator::for_each()
[2m[36m(pid=50513)[0m     @     0x7ef751d84b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50513)[0m     @     0x7ef751da7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50513)[0m     @     0x7ef751249a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50513)[0m     @     0x7ef751247388 at::native::copy_impl()
[2m[36m(pid=50513)[0m     @     0x7ef7512495a4 at::native::copy_()
[2m[36m(pid=50513)[0m     @     0x7ef7519344f5 at::Tensor::copy_()
[2m[36m(pid=50513)[0m     @     0x7ef753e078de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50511)[0m     @     0x7f237533fad3 at::TensorIterator::for_each()
[2m[36m(pid=50511)[0m     @     0x7f237533fd91 at::TensorIterator::for_each()
[2m[36m(pid=50511)[0m     @     0x7f2375c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50511)[0m     @     0x7f2375c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50511)[0m     @     0x7f23750e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50511)[0m     @     0x7f23750e5388 at::native::copy_impl()
[2m[36m(pid=50511)[0m     @     0x7f23750e75a4 at::native::copy_()
[2m[36m(pid=50511)[0m     @     0x7f23757d24f5 at::Tensor::copy_()
[2m[36m(pid=50508)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50508)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50508)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50508)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50508)[0m *** SIGSEGV (@0x0) received by PID 50508 (TID 0x7effa6751700) from PID 0; stack trace: ***
[2m[36m(pid=50508)[0m     @     0x7effa632a390 (unknown)
[2m[36m(pid=50508)[0m     @     0x7ed0a62b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50508)[0m     @     0x7ed0a59e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50508)[0m     @     0x7ed0a59e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50508)[0m     @     0x7ed0a59e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=50562)[0m     @     0x7f0d2d525d91 at::TensorIterator::for_each()
[2m[36m(pid=50562)[0m     @     0x7f0d2de08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50562)[0m     @     0x7f0d2de2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50562)[0m     @     0x7f0d2d2cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50562)[0m     @     0x7f0d2d2cb388 at::native::copy_impl()
[2m[36m(pid=50562)[0m     @     0x7f0d2d2cd5a4 at::native::copy_()
[2m[36m(pid=50562)[0m     @     0x7f0d2d9b84f5 at::Tensor::copy_()
[2m[36m(pid=50562)[0m     @     0x7f0d2fe8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50452)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50452)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50452)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50452)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50452)[0m *** SIGSEGV (@0x0) received by PID 50452 (TID 0x7f36018cc700) from PID 0; stack trace: ***
[2m[36m(pid=50452)[0m     @     0x7f36014a5390 (unknown)
[2m[36m(pid=50452)[0m     @     0x7f07013ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50452)[0m     @     0x7f0700af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50452)[0m     @     0x7f0700afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50452)[0m     @     0x7f0700afaad3 at::TensorIterator::for_each()
[2m[36m(pid=50541)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50541)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50541)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50541)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50541)[0m *** SIGSEGV (@0x0) received by PID 50541 (TID 0x7fb9ff64b700) from PID 0; stack trace: ***
[2m[36m(pid=50541)[0m     @     0x7fb9ff224390 (unknown)
[2m[36m(pid=50541)[0m     @     0x7f8afec15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50541)[0m     @     0x7f8afe3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50541)[0m     @     0x7f8afe3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50448)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50448)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50448)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50448)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50448)[0m *** SIGSEGV (@0x0) received by PID 50448 (TID 0x7fe21a7df700) from PID 0; stack trace: ***
[2m[36m(pid=50448)[0m     @     0x7fe21a3b8390 (unknown)
[2m[36m(pid=50448)[0m     @     0x7fb31a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50448)[0m     @     0x7fb319a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50448)[0m     @     0x7fb319a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50461)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50461)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50461)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50461)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50461)[0m *** SIGSEGV (@0x0) received by PID 50461 (TID 0x7f675187d700) from PID 0; stack trace: ***
[2m[36m(pid=50461)[0m     @     0x7f6751456390 (unknown)
[2m[36m(pid=50461)[0m     @     0x7f38513ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50461)[0m     @     0x7f3850af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50461)[0m     @     0x7f3850afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50461)[0m     @     0x7f3850afaad3 at::TensorIterator::for_each()
[2m[36m(pid=50516)[0m     @     0x7f1b3223d390 (unknown)
[2m[36m(pid=50516)[0m     @     0x7eec3213af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50516)[0m     @     0x7eec318657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50516)[0m     @     0x7eec318688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50516)[0m     @     0x7eec31868ad3 at::TensorIterator::for_each()
[2m[36m(pid=50524)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50524)[0m *** SIGSEGV (@0x0) received by PID 50524 (TID 0x7f74ba051700) from PID 0; stack trace: ***
[2m[36m(pid=50524)[0m     @     0x7f74b9c2a390 (unknown)
[2m[36m(pid=50524)[0m     @     0x7f45b9701f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50524)[0m     @     0x7f45b8e2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50524)[0m     @     0x7f45b8e2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50524)[0m     @     0x7f45b8e2fad3 at::TensorIterator::for_each()
[2m[36m(pid=50429)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50429)[0m *** SIGSEGV (@0x0) received by PID 50429 (TID 0x7f2c3356f700) from PID 0; stack trace: ***
[2m[36m(pid=50429)[0m     @     0x7f2c33148390 (unknown)
[2m[36m(pid=50429)[0m     @     0x7efd330d6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50429)[0m     @     0x7efd328017db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50429)[0m     @     0x7efd328048f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50429)[0m     @     0x7efd32804ad3 at::TensorIterator::for_each()
[2m[36m(pid=50434)[0m     @     0x7f5f0bfdb390 (unknown)
[2m[36m(pid=50434)[0m     @     0x7f300be0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50434)[0m     @     0x7f300b5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50434)[0m     @     0x7f300b5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50434)[0m     @     0x7f300b539ad3 at::TensorIterator::for_each()
[2m[36m(pid=50503)[0m     @     0x7f2edd728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50503)[0m     @     0x7f2edcbcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50503)[0m     @     0x7f2edcbc8388 at::native::copy_impl()
[2m[36m(pid=50503)[0m     @     0x7f2edcbca5a4 at::native::copy_()
[2m[36m(pid=50503)[0m     @     0x7f2edd2b54f5 at::Tensor::copy_()
[2m[36m(pid=50548)[0m     @     0x7edf21ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50548)[0m     @     0x7edf21ef5388 at::native::copy_impl()
[2m[36m(pid=50548)[0m     @     0x7edf21ef75a4 at::native::copy_()
[2m[36m(pid=50548)[0m     @     0x7edf225e24f5 at::Tensor::copy_()
[2m[36m(pid=50548)[0m     @     0x7edf24ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50499)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50499)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50499)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50499)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50499)[0m *** SIGSEGV (@0x0) received by PID 50499 (TID 0x7f0eb4c98700) from PID 0; stack trace: ***
[2m[36m(pid=50499)[0m     @     0x7f0eb4871390 (unknown)
[2m[36m(pid=50499)[0m     @     0x7edfb474cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50499)[0m     @     0x7edfb3e777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50442)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50442)[0m *** SIGSEGV (@0x0) received by PID 50442 (TID 0x7f3b8419d700) from PID 0; stack trace: ***
[2m[36m(pid=50442)[0m     @     0x7f3b83d76390 (unknown)
[2m[36m(pid=50442)[0m     @     0x7f0c83bc7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50442)[0m     @     0x7f0c832f27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50442)[0m     @     0x7f0c832f58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50467)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50467)[0m *** SIGSEGV (@0x0) received by PID 50467 (TID 0x7f3011aa2700) from PID 0; stack trace: ***
[2m[36m(pid=50467)[0m     @     0x7f301167b390 (unknown)
[2m[36m(pid=50467)[0m     @     0x7f0111607f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50467)[0m     @     0x7f0110d327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50467)[0m     @     0x7f0110d358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50467)[0m     @     0x7f0110d35ad3 at::TensorIterator::for_each()
[2m[36m(pid=50466)[0m     @     0x7fd452cc6390 (unknown)
[2m[36m(pid=50466)[0m     @     0x7fa552c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50466)[0m     @     0x7fa5523407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50466)[0m     @     0x7fa5523438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50466)[0m     @     0x7fa552343ad3 at::TensorIterator::for_each()
[2m[36m(pid=50466)[0m     @     0x7fa552343d91 at::TensorIterator::for_each()
[2m[36m(pid=50466)[0m     @     0x7fa552c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50530)[0m     @     0x7f338d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50530)[0m     @     0x7f338c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50530)[0m     @     0x7f338c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50530)[0m     @     0x7f338c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=50530)[0m     @     0x7f338c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=50530)[0m     @     0x7f338d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50551)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50551)[0m *** SIGSEGV (@0x0) received by PID 50551 (TID 0x7fb712415700) from PID 0; stack trace: ***
[2m[36m(pid=50551)[0m     @     0x7fb711fee390 (unknown)
[2m[36m(pid=50551)[0m     @     0x7f8811e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50551)[0m     @     0x7f881154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50551)[0m     @     0x7f88115528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50551)[0m     @     0x7f8811552ad3 at::TensorIterator::for_each()
[2m[36m(pid=50535)[0m     @     0x7fed13470390 (unknown)
[2m[36m(pid=50535)[0m     @     0x7fbe13229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50535)[0m     @     0x7fbe129547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50535)[0m     @     0x7fbe129578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50535)[0m     @     0x7fbe12957ad3 at::TensorIterator::for_each()
[2m[36m(pid=50535)[0m     @     0x7fbe12957d91 at::TensorIterator::for_each()
[2m[36m(pid=50535)[0m     @     0x7fbe1323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50535)[0m     @     0x7fbe1325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50491)[0m     @     0x7f2427312390 (unknown)
[2m[36m(pid=50491)[0m     @     0x7ef5272b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50491)[0m     @     0x7ef5269e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50491)[0m     @     0x7ef5269e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50491)[0m     @     0x7ef5269e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=50540)[0m     @     0x7f2360ece390 (unknown)
[2m[36m(pid=50540)[0m     @     0x7ef460e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50540)[0m     @     0x7ef4605a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50540)[0m     @     0x7ef4605a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50540)[0m     @     0x7ef4605a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=50526)[0m     @     0x7ed9e97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50526)[0m     @     0x7ed9e8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50526)[0m     @     0x7ed9e8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50526)[0m     @     0x7ed9e8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=50526)[0m     @     0x7ed9e8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=50526)[0m     @     0x7ed9e980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50496)[0m     @     0x7f04fab657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50496)[0m     @     0x7f04fab688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50496)[0m     @     0x7f04fab68ad3 at::TensorIterator::for_each()
[2m[36m(pid=50496)[0m     @     0x7f04fab68d91 at::TensorIterator::for_each()
[2m[36m(pid=50496)[0m     @     0x7f04fb44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50496)[0m     @     0x7f04fb46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50537)[0m     @     0x7f831a381390 (unknown)
[2m[36m(pid=50537)[0m     @     0x7f541a31ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50537)[0m     @     0x7f5419a497db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50537)[0m     @     0x7f5419a4c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50537)[0m     @     0x7f5419a4cad3 at::TensorIterator::for_each()
[2m[36m(pid=50542)[0m     @     0x7f1cbc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50542)[0m     @     0x7f1cbc589388 at::native::copy_impl()
[2m[36m(pid=50542)[0m     @     0x7f1cbc58b5a4 at::native::copy_()
[2m[36m(pid=50542)[0m     @     0x7f1cbcc764f5 at::Tensor::copy_()
[2m[36m(pid=50542)[0m     @     0x7f1cbf1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50554)[0m     @     0x7f9dca4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50554)[0m     @     0x7f9dc9c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50554)[0m     @     0x7f9dc9c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50554)[0m     @     0x7f9dc9c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=50554)[0m     @     0x7f9dc9c27d91 at::TensorIterator::for_each()
[2m[36m(pid=50554)[0m     @     0x7f9dca50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50532)[0m     @     0x7fa79f60ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50532)[0m     @     0x7fa79f60a388 at::native::copy_impl()
[2m[36m(pid=50532)[0m     @     0x7fa79f60c5a4 at::native::copy_()
[2m[36m(pid=50532)[0m     @     0x7fa79fcf74f5 at::Tensor::copy_()
[2m[36m(pid=50532)[0m     @     0x7fa7a21ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50441)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50441)[0m *** SIGSEGV (@0x0) received by PID 50441 (TID 0x7f7d84cec700) from PID 0; stack trace: ***
[2m[36m(pid=50441)[0m     @     0x7f7d848c5390 (unknown)
[2m[36m(pid=50441)[0m     @     0x7f4e8484bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50441)[0m     @     0x7f4e83f767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50441)[0m     @     0x7f4e83f798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50441)[0m     @     0x7f4e83f79ad3 at::TensorIterator::for_each()
[2m[36m(pid=50441)[0m     @     0x7f4e83f79d91 at::TensorIterator::for_each()
[2m[36m(pid=50433)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50433)[0m *** SIGSEGV (@0x0) received by PID 50433 (TID 0x7fe4e3aa4700) from PID 0; stack trace: ***
[2m[36m(pid=50433)[0m     @     0x7fe4e367d390 (unknown)
[2m[36m(pid=50433)[0m     @     0x7fb5e361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50433)[0m     @     0x7fb5e2d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50433)[0m     @     0x7fb5e2d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50433)[0m     @     0x7fb5e2d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=50512)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50512)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50512)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50512)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50512)[0m *** SIGSEGV (@0x0) received by PID 50512 (TID 0x7f289c0e3700) from PID 0; stack trace: ***
[2m[36m(pid=50512)[0m     @     0x7f289bcbc390 (unknown)
[2m[36m(pid=50512)[0m     @     0x7ef99baf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50512)[0m     @     0x7ef99b2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50512)[0m     @     0x7ef99b2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50428)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50428)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50428)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50428)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50428)[0m *** SIGSEGV (@0x0) received by PID 50428 (TID 0x7f9cd1ad1700) from PID 0; stack trace: ***
[2m[36m(pid=50428)[0m     @     0x7f9cd16aa390 (unknown)
[2m[36m(pid=50428)[0m     @     0x7f6dd1634f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50428)[0m     @     0x7f6dd0d5f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50428)[0m     @     0x7f6dd0d628f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50490)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50490)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50490)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50490)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50490)[0m *** SIGSEGV (@0x0) received by PID 50490 (TID 0x7fd0c7be6700) from PID 0; stack trace: ***
[2m[36m(pid=50490)[0m     @     0x7fd0c77bf390 (unknown)
[2m[36m(pid=50490)[0m     @     0x7fa1c761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50490)[0m     @     0x7fa1c6d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50490)[0m     @     0x7fa1c6d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50437)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50437)[0m *** SIGSEGV (@0x0) received by PID 50437 (TID 0x7fa19e37c700) from PID 0; stack trace: ***
[2m[36m(pid=50437)[0m     @     0x7fa19df55390 (unknown)
[2m[36m(pid=50437)[0m     @     0x7f729de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50437)[0m     @     0x7f729d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50437)[0m     @     0x7f729d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50437)[0m     @     0x7f729d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=50439)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50439)[0m *** SIGSEGV (@0x0) received by PID 50439 (TID 0x7fe5172a4700) from PID 0; stack trace: ***
[2m[36m(pid=50439)[0m     @     0x7fe516e7d390 (unknown)
[2m[36m(pid=50439)[0m     @     0x7fb616e26f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50439)[0m     @     0x7fb6165517db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50439)[0m     @     0x7fb6165548f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50439)[0m     @     0x7fb616554ad3 at::TensorIterator::for_each()
[2m[36m(pid=50439)[0m     @     0x7fb616554d91 at::TensorIterator::for_each()
[2m[36m(pid=50453)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50453)[0m *** SIGSEGV (@0x0) received by PID 50453 (TID 0x7f0b93d99700) from PID 0; stack trace: ***
[2m[36m(pid=50453)[0m     @     0x7f0b93972390 (unknown)
[2m[36m(pid=50453)[0m     @     0x7edc938def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50453)[0m     @     0x7edc930097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50453)[0m     @     0x7edc9300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50453)[0m     @     0x7edc9300cad3 at::TensorIterator::for_each()
[2m[36m(pid=50453)[0m     @     0x7edc9300cd91 at::TensorIterator::for_each()
[2m[36m(pid=50453)[0m     @     0x7edc938efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50506)[0m *** SIGSEGV (@0x0) received by PID 50506 (TID 0x7f935393e700) from PID 0; stack trace: ***
[2m[36m(pid=50506)[0m     @     0x7f9353517390 (unknown)
[2m[36m(pid=50506)[0m     @     0x7f645348ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50506)[0m     @     0x7f6452bba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50506)[0m     @     0x7f6452bbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50506)[0m     @     0x7f6452bbdad3 at::TensorIterator::for_each()
[2m[36m(pid=50506)[0m     @     0x7f6452bbdd91 at::TensorIterator::for_each()
[2m[36m(pid=50506)[0m     @     0x7f64534a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50506)[0m     @     0x7f64534c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50440)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50440)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50440)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50440)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50440)[0m *** SIGSEGV (@0x0) received by PID 50440 (TID 0x7f7df0f47700) from PID 0; stack trace: ***
[2m[36m(pid=50440)[0m     @     0x7f7df0b20390 (unknown)
[2m[36m(pid=50440)[0m     @     0x7f4ef0acdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50440)[0m     @     0x7f4ef01f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50440)[0m     @     0x7f4ef01fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50501)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50501)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50501)[0m *** SIGSEGV (@0x0) received by PID 50501 (TID 0x7fa1309ac700) from PID 0; stack trace: ***
[2m[36m(pid=50501)[0m     @     0x7fa130585390 (unknown)
[2m[36m(pid=50501)[0m     @     0x7f72304f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50501)[0m     @     0x7f722fc217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50501)[0m     @     0x7f722fc248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50501)[0m     @     0x7f722fc24ad3 at::TensorIterator::for_each()
[2m[36m(pid=50501)[0m     @     0x7f722fc24d91 at::TensorIterator::for_each()
[2m[36m(pid=50514)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50514)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50514)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50514)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50514)[0m *** SIGSEGV (@0x0) received by PID 50514 (TID 0x7fc26a620700) from PID 0; stack trace: ***
[2m[36m(pid=50514)[0m     @     0x7fc26a1f9390 (unknown)
[2m[36m(pid=50514)[0m     @     0x7f936a13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50514)[0m     @     0x7f93698657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50514)[0m     @     0x7f93698688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50487)[0m     @     0x7fcbe1129390 (unknown)
[2m[36m(pid=50487)[0m     @     0x7f9ce10b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50487)[0m     @     0x7f9ce07e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50487)[0m     @     0x7f9ce07e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50487)[0m     @     0x7f9ce07e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=50487)[0m     @     0x7f9ce07e3d91 at::TensorIterator::for_each()
[2m[36m(pid=50487)[0m     @     0x7f9ce10c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50487)[0m     @     0x7f9ce10e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50510)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50510)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50510)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50510)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50510)[0m *** SIGSEGV (@0x0) received by PID 50510 (TID 0x7f0270d53700) from PID 0; stack trace: ***
[2m[36m(pid=50510)[0m     @     0x7f027092c390 (unknown)
[2m[36m(pid=50510)[0m     @     0x7ed370825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50510)[0m     @     0x7ed36ff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50510)[0m     @     0x7ed36ff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50510)[0m     @     0x7ed36ff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=50556)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50556)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50556)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50556)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50556)[0m *** SIGSEGV (@0x0) received by PID 50556 (TID 0x7f2f437da700) from PID 0; stack trace: ***
[2m[36m(pid=50556)[0m     @     0x7f2f433b3390 (unknown)
[2m[36m(pid=50556)[0m     @     0x7f004332bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50556)[0m     @     0x7f0042a567db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50556)[0m     @     0x7f0042a598f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50556)[0m     @     0x7f0042a59ad3 at::TensorIterator::for_each()
[2m[36m(pid=50444)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=50444)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=50444)[0m *** Aborted at 1604573162 (unix time) try "date -d @1604573162" if you are using GNU date ***
[2m[36m(pid=50444)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50444)[0m *** SIGSEGV (@0x0) received by PID 50444 (TID 0x7f7a491f6700) from PID 0; stack trace: ***
[2m[36m(pid=50485)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50485)[0m *** SIGSEGV (@0x0) received by PID 50485 (TID 0x7f553a4cc700) from PID 0; stack trace: ***
[2m[36m(pid=50485)[0m     @     0x7f553a0a5390 (unknown)
[2m[36m(pid=50485)[0m     @     0x7f2639e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50485)[0m     @     0x7f263954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50485)[0m     @     0x7f26395528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50485)[0m     @     0x7f2639552ad3 at::TensorIterator::for_each()
[2m[36m(pid=50485)[0m     @     0x7f2639552d91 at::TensorIterator::for_each()
[2m[36m(pid=50485)[0m     @     0x7f2639e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50435)[0m *** SIGSEGV (@0x0) received by PID 50435 (TID 0x7f501756a700) from PID 0; stack trace: ***
[2m[36m(pid=50435)[0m     @     0x7f5017143390 (unknown)
[2m[36m(pid=50435)[0m     @     0x7f21170e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50435)[0m     @     0x7f211680f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50435)[0m     @     0x7f21168128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50435)[0m     @     0x7f2116812ad3 at::TensorIterator::for_each()
[2m[36m(pid=50435)[0m     @     0x7f2116812d91 at::TensorIterator::for_each()
[2m[36m(pid=50435)[0m     @     0x7f21170f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50435)[0m     @     0x7f2117118c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50432)[0m     @     0x7f9942c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50432)[0m     @     0x7f99423407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50432)[0m     @     0x7f99423438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50432)[0m     @     0x7f9942343ad3 at::TensorIterator::for_each()
[2m[36m(pid=50432)[0m     @     0x7f9942343d91 at::TensorIterator::for_each()
[2m[36m(pid=50432)[0m     @     0x7f9942c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50432)[0m     @     0x7f9942c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50438)[0m     @     0x7f8fc72238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50438)[0m     @     0x7f8fc7223ad3 at::TensorIterator::for_each()
[2m[36m(pid=50438)[0m     @     0x7f8fc7223d91 at::TensorIterator::for_each()
[2m[36m(pid=50438)[0m     @     0x7f8fc7b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50438)[0m     @     0x7f8fc7b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50457)[0m     @     0x7efb57a67ad3 at::TensorIterator::for_each()
[2m[36m(pid=50457)[0m     @     0x7efb57a67d91 at::TensorIterator::for_each()
[2m[36m(pid=50457)[0m     @     0x7efb5834ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50457)[0m     @     0x7efb5836dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50457)[0m     @     0x7efb5780fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50457)[0m     @     0x7efb5780d388 at::native::copy_impl()
[2m[36m(pid=50520)[0m     @     0x7fcb9cc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50520)[0m     @     0x7fcb9c39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50520)[0m     @     0x7fcb9c3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50560)[0m     @     0x7f5f1eac6ad3 at::TensorIterator::for_each()
[2m[36m(pid=50560)[0m     @     0x7f5f1eac6d91 at::TensorIterator::for_each()
[2m[36m(pid=50560)[0m     @     0x7f5f1f3a9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50560)[0m     @     0x7f5f1f3ccc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50507)[0m     @     0x7f5880acdad3 at::TensorIterator::for_each()
[2m[36m(pid=50507)[0m     @     0x7f5880acdd91 at::TensorIterator::for_each()
[2m[36m(pid=50507)[0m     @     0x7f58813b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50507)[0m     @     0x7f58813d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50463)[0m     @     0x7f57929578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50463)[0m     @     0x7f5792957ad3 at::TensorIterator::for_each()
[2m[36m(pid=50463)[0m     @     0x7f5792957d91 at::TensorIterator::for_each()
[2m[36m(pid=50463)[0m     @     0x7f579323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50463)[0m     @     0x7f579325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50463)[0m     @     0x7f57926ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50519)[0m     @     0x7f3995e9e390 (unknown)
[2m[36m(pid=50519)[0m     @     0x7f0a95e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50519)[0m     @     0x7f0a9554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50519)[0m     @     0x7f0a955528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50446)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50446)[0m *** SIGSEGV (@0x0) received by PID 50446 (TID 0x7f5138963700) from PID 0; stack trace: ***
[2m[36m(pid=50446)[0m     @     0x7f513853c390 (unknown)
[2m[36m(pid=50446)[0m     @     0x7f22384d9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50446)[0m     @     0x7f2237c047db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50456)[0m     @     0x7f30ca9fd390 (unknown)
[2m[36m(pid=50456)[0m     @     0x7f01ca70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50456)[0m     @     0x7f01c9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50456)[0m     @     0x7f01c9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50456)[0m     @     0x7f01c9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=50459)[0m     @     0x7f83dc5a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50459)[0m     @     0x7f83dc5a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50459)[0m     @     0x7f83dc5a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=50459)[0m     @     0x7f83dc5a5d91 at::TensorIterator::for_each()
[2m[36m(pid=50492)[0m     @     0x7f84855258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50492)[0m     @     0x7f8485525ad3 at::TensorIterator::for_each()
[2m[36m(pid=50492)[0m     @     0x7f8485525d91 at::TensorIterator::for_each()
[2m[36m(pid=50492)[0m     @     0x7f8485e08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50492)[0m     @     0x7f8485e2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50518)[0m PC: @                0x0 (unknown)
[2m[36m(pid=50518)[0m *** SIGSEGV (@0x0) received by PID 50518 (TID 0x7f1d184b5700) from PID 0; stack trace: ***
[2m[36m(pid=50518)[0m     @     0x7f1d1808e390 (unknown)
[2m[36m(pid=50518)[0m     @     0x7eee17eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50528)[0m     @     0x7f1fc6c784f5 at::Tensor::copy_()
[2m[36m(pid=50528)[0m     @     0x7f1fccd2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50528)[0m     @     0x557ede121fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50528)[0m     @     0x557ede07cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50528)[0m     @     0x557ede107baf _PyEval_EvalCodeWithName
[2m[36m(pid=50528)[0m     @     0x557ede108a20 method_vectorcall
[2m[36m(pid=50528)[0m     @     0x557ede07cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50528)[0m     @     0x557ede107baf _PyEval_EvalCodeWithName
[2m[36m(pid=50528)[0m     @     0x557ede108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50528)[0m     @     0x557ede07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50528)[0m     @     0x557ede107baf _PyEval_EvalCodeWithName
[2m[36m(pid=50528)[0m     @     0x557ede108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50528)[0m     @     0x557ede07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50528)[0m     @     0x557ede107baf _PyEval_EvalCodeWithName
[2m[36m(pid=50528)[0m     @     0x557ede108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50528)[0m     @     0x557ede07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50528)[0m     @     0x557ede107baf _PyEval_EvalCodeWithName
[2m[36m(pid=50528)[0m     @     0x557ede108643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50528)[0m     @     0x557ede07d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50549)[0m     @     0x7f3d6c5624f5 at::Tensor::copy_()
[2m[36m(pid=50549)[0m     @     0x7f3d7260d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50549)[0m     @     0x55850d9b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50549)[0m     @     0x55850d913b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50549)[0m     @     0x55850d99ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50549)[0m     @     0x55850d99fa20 method_vectorcall
[2m[36m(pid=50549)[0m     @     0x55850d913bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50549)[0m     @     0x55850d99ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50549)[0m     @     0x55850d99f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50549)[0m     @     0x55850d914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50549)[0m     @     0x55850d99ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50549)[0m     @     0x55850d99f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50549)[0m     @     0x55850d914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50549)[0m     @     0x55850d99ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50549)[0m     @     0x55850d99f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50549)[0m     @     0x55850d914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50549)[0m     @     0x55850d99ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50549)[0m     @     0x55850d99f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50549)[0m     @     0x55850d914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50484)[0m     @     0x7f9883f53d91 at::TensorIterator::for_each()
[2m[36m(pid=50484)[0m     @     0x7f9884836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50484)[0m     @     0x7f9884859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50484)[0m     @     0x7f9883cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50484)[0m     @     0x7f9883cf9388 at::native::copy_impl()
[2m[36m(pid=50430)[0m     @     0x7f9d489d5ad3 at::TensorIterator::for_each()
[2m[36m(pid=50430)[0m     @     0x7f9d489d5d91 at::TensorIterator::for_each()
[2m[36m(pid=50430)[0m     @     0x7f9d492b8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50430)[0m     @     0x7f9d492dbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50430)[0m     @     0x7f9d4877da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50430)[0m     @     0x7f9d4877b388 at::native::copy_impl()
[2m[36m(pid=50502)[0m     @     0x7f63ad552ad3 at::TensorIterator::for_each()
[2m[36m(pid=50502)[0m     @     0x7f63ad552d91 at::TensorIterator::for_each()
[2m[36m(pid=50502)[0m     @     0x7f63ade35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50502)[0m     @     0x7f63ade58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50493)[0m     @     0x7fc11b3eb390 (unknown)
[2m[36m(pid=50493)[0m     @     0x7f921b36bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50493)[0m     @     0x7f921aa967db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50465)[0m     @     0x7f045d7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=50465)[0m     @     0x7f045d7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=50465)[0m     @     0x7f045e0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50465)[0m     @     0x7f045e101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50465)[0m     @     0x7f045d5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50465)[0m     @     0x7f045d5a1388 at::native::copy_impl()
[2m[36m(pid=50489)[0m     @     0x7f4b9c3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=50489)[0m     @     0x7f4b9c3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=50489)[0m     @     0x7f4b9cc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50489)[0m     @     0x7f4b9cca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50489)[0m     @     0x7f4b9c14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50489)[0m     @     0x7f4b9c148388 at::native::copy_impl()
[2m[36m(pid=50489)[0m     @     0x7f4b9c14a5a4 at::native::copy_()
[2m[36m(pid=50447)[0m     @     0x7f66339c5ad3 at::TensorIterator::for_each()
[2m[36m(pid=50447)[0m     @     0x7f66339c5d91 at::TensorIterator::for_each()
[2m[36m(pid=50447)[0m     @     0x7f66342a8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50447)[0m     @     0x7f66342cbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50447)[0m     @     0x7f663376da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50447)[0m     @     0x7f663376b388 at::native::copy_impl()
[2m[36m(pid=50449)[0m     @     0x7f9b1583bd91 at::TensorIterator::for_each()
[2m[36m(pid=50449)[0m     @     0x7f9b1611eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50449)[0m     @     0x7f9b16141c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50449)[0m     @     0x7f9b155e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50449)[0m     @     0x7f9b155e1388 at::native::copy_impl()
[2m[36m(pid=50449)[0m     @     0x7f9b155e35a4 at::native::copy_()
[2m[36m(pid=50445)[0m     @     0x7f7ef8565d91 at::TensorIterator::for_each()
[2m[36m(pid=50445)[0m     @     0x7f7ef8e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50445)[0m     @     0x7f7ef8e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50445)[0m     @     0x7f7ef830da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50445)[0m     @     0x7f7ef830b388 at::native::copy_impl()
[2m[36m(pid=50445)[0m     @     0x7f7ef830d5a4 at::native::copy_()
[2m[36m(pid=50445)[0m     @     0x7f7ef89f84f5 at::Tensor::copy_()
[2m[36m(pid=50500)[0m     @     0x7f5fa9868ad3 at::TensorIterator::for_each()
[2m[36m(pid=50500)[0m     @     0x7f5fa9868d91 at::TensorIterator::for_each()
[2m[36m(pid=50500)[0m     @     0x7f5faa14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50500)[0m     @     0x7f5faa16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50500)[0m     @     0x7f5fa9610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50500)[0m     @     0x7f5fa960e388 at::native::copy_impl()
[2m[36m(pid=50431)[0m     @     0x7ef10e343ad3 at::TensorIterator::for_each()
[2m[36m(pid=50431)[0m     @     0x7ef10e343d91 at::TensorIterator::for_each()
[2m[36m(pid=50431)[0m     @     0x7ef10ec26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50431)[0m     @     0x7ef10ec49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50431)[0m     @     0x7ef10e0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50431)[0m     @     0x7ef10e0e9388 at::native::copy_impl()
[2m[36m(pid=50522)[0m     @     0x7f03c5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=50522)[0m     @     0x7f03c5552d91 at::TensorIterator::for_each()
[2m[36m(pid=50522)[0m     @     0x7f03c5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50522)[0m     @     0x7f03c5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50522)[0m     @     0x7f03c52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50522)[0m     @     0x7f03c52f8388 at::native::copy_impl()
[2m[36m(pid=50564)[0m     @     0x7f93de04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50564)[0m     @     0x55c79669dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50564)[0m     @     0x55c7965f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50564)[0m     @     0x55c796683baf _PyEval_EvalCodeWithName
[2m[36m(pid=50564)[0m     @     0x55c796684a20 method_vectorcall
[2m[36m(pid=50564)[0m     @     0x55c7965f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50564)[0m     @     0x55c796683baf _PyEval_EvalCodeWithName
[2m[36m(pid=50564)[0m     @     0x55c796684643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50564)[0m     @     0x55c7965f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50564)[0m     @     0x55c796683baf _PyEval_EvalCodeWithName
[2m[36m(pid=50564)[0m     @     0x55c796684643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50564)[0m     @     0x55c7965f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50564)[0m     @     0x55c796683baf _PyEval_EvalCodeWithName
[2m[36m(pid=50564)[0m     @     0x55c796684643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50564)[0m     @     0x55c7965f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50564)[0m     @     0x55c796683baf _PyEval_EvalCodeWithName
[2m[36m(pid=50564)[0m     @     0x55c796684643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50564)[0m     @     0x55c7965f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50517)[0m     @     0x7edcf15cb4f5 at::Tensor::copy_()
[2m[36m(pid=50517)[0m     @     0x7edcf3a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50517)[0m     @     0x7edcf15cb4f5 at::Tensor::copy_()
[2m[36m(pid=50517)[0m     @     0x7edcf767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50517)[0m     @     0x5648de4b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50517)[0m     @     0x5648de410b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50517)[0m     @     0x5648de49bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50517)[0m     @     0x5648de49ca20 method_vectorcall
[2m[36m(pid=50517)[0m     @     0x5648de410bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50517)[0m     @     0x5648de49bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50517)[0m     @     0x5648de49c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50517)[0m     @     0x5648de411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50517)[0m     @     0x5648de49bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50517)[0m     @     0x5648de49c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50517)[0m     @     0x5648de411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50517)[0m     @     0x5648de49bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50517)[0m     @     0x5648de49c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50517)[0m     @     0x5648de411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50517)[0m     @     0x5648de49bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50517)[0m     @     0x5648de49c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50517)[0m     @     0x5648de411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50515)[0m     @     0x7f13447e3d91 at::TensorIterator::for_each()
[2m[36m(pid=50515)[0m     @     0x7f13450c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50515)[0m     @     0x7f13450e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50515)[0m     @     0x7f134458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50515)[0m     @     0x7f1344589388 at::native::copy_impl()
[2m[36m(pid=50515)[0m     @     0x7f134458b5a4 at::native::copy_()
[2m[36m(pid=50546)[0m     @     0x7ed12edea4f5 at::Tensor::copy_()
[2m[36m(pid=50546)[0m     @     0x7ed134e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50546)[0m     @     0x55a090f86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50546)[0m     @     0x55a090ee1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50546)[0m     @     0x55a090f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50546)[0m     @     0x55a090f6da20 method_vectorcall
[2m[36m(pid=50546)[0m     @     0x55a090ee1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50546)[0m     @     0x55a090f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50546)[0m     @     0x55a090f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50546)[0m     @     0x55a090ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50546)[0m     @     0x55a090f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50546)[0m     @     0x55a090f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50546)[0m     @     0x55a090ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50546)[0m     @     0x55a090f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50546)[0m     @     0x55a090f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50546)[0m     @     0x55a090ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50546)[0m     @     0x55a090f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50546)[0m     @     0x55a090f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50546)[0m     @     0x55a090ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50509)[0m     @     0x7fc189f0c4f5 at::Tensor::copy_()
[2m[36m(pid=50509)[0m     @     0x7fc18ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50509)[0m     @     0x5569e96b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50509)[0m     @     0x5569e960eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50509)[0m     @     0x5569e9699baf _PyEval_EvalCodeWithName
[2m[36m(pid=50509)[0m     @     0x5569e969aa20 method_vectorcall
[2m[36m(pid=50509)[0m     @     0x5569e960ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50509)[0m     @     0x5569e9699baf _PyEval_EvalCodeWithName
[2m[36m(pid=50509)[0m     @     0x5569e969a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50509)[0m     @     0x5569e960f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50509)[0m     @     0x5569e9699baf _PyEval_EvalCodeWithName
[2m[36m(pid=50509)[0m     @     0x5569e969a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50509)[0m     @     0x5569e960f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50509)[0m     @     0x5569e9699baf _PyEval_EvalCodeWithName
[2m[36m(pid=50509)[0m     @     0x5569e969a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50509)[0m     @     0x5569e960f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50509)[0m     @     0x5569e9699baf _PyEval_EvalCodeWithName
[2m[36m(pid=50509)[0m     @     0x5569e969a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50509)[0m     @     0x5569e960f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50513)[0m     @     0x7ef7519344f5 at::Tensor::copy_()
[2m[36m(pid=50513)[0m     @     0x7ef7579df79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50513)[0m     @     0x559df8d5cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50513)[0m     @     0x559df8cb7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50513)[0m     @     0x559df8d42baf _PyEval_EvalCodeWithName
[2m[36m(pid=50513)[0m     @     0x559df8d43a20 method_vectorcall
[2m[36m(pid=50513)[0m     @     0x559df8cb7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50513)[0m     @     0x559df8d42baf _PyEval_EvalCodeWithName
[2m[36m(pid=50513)[0m     @     0x559df8d43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50513)[0m     @     0x559df8cb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50513)[0m     @     0x559df8d42baf _PyEval_EvalCodeWithName
[2m[36m(pid=50513)[0m     @     0x559df8d43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50513)[0m     @     0x559df8cb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50513)[0m     @     0x559df8d42baf _PyEval_EvalCodeWithName
[2m[36m(pid=50513)[0m     @     0x559df8d43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50513)[0m     @     0x559df8cb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50513)[0m     @     0x559df8d42baf _PyEval_EvalCodeWithName
[2m[36m(pid=50513)[0m     @     0x559df8d43643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50513)[0m     @     0x559df8cb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50511)[0m     @     0x7f2377ca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50511)[0m     @     0x7f23757d24f5 at::Tensor::copy_()
[2m[36m(pid=50511)[0m     @     0x7f237b87d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50511)[0m     @     0x55c6c12f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50511)[0m     @     0x55c6c124bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50511)[0m     @     0x55c6c12d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50511)[0m     @     0x55c6c12d7a20 method_vectorcall
[2m[36m(pid=50511)[0m     @     0x55c6c124bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50511)[0m     @     0x55c6c12d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50511)[0m     @     0x55c6c12d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50511)[0m     @     0x55c6c124c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50511)[0m     @     0x55c6c12d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50511)[0m     @     0x55c6c12d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50511)[0m     @     0x55c6c124c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50511)[0m     @     0x55c6c12d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50511)[0m     @     0x55c6c12d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50511)[0m     @     0x55c6c124c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50511)[0m     @     0x55c6c12d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50511)[0m     @     0x55c6c12d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50511)[0m     @     0x55c6c124c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50508)[0m     @     0x7ed0a59e7d91 at::TensorIterator::for_each()
[2m[36m(pid=50508)[0m     @     0x7ed0a62cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50508)[0m     @     0x7ed0a62edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50508)[0m     @     0x7ed0a578fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50508)[0m     @     0x7ed0a578d388 at::native::copy_impl()
[2m[36m(pid=50508)[0m     @     0x7ed0a578f5a4 at::native::copy_()
[2m[36m(pid=50562)[0m     @     0x7f0d2d9b84f5 at::Tensor::copy_()
[2m[36m(pid=50562)[0m     @     0x7f0d33a6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50562)[0m     @     0x55cf572dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50562)[0m     @     0x55cf57235b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50562)[0m     @     0x55cf572c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50562)[0m     @     0x55cf572c1a20 method_vectorcall
[2m[36m(pid=50562)[0m     @     0x55cf57235bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50562)[0m     @     0x55cf572c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50562)[0m     @     0x55cf572c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50562)[0m     @     0x55cf57236689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50562)[0m     @     0x55cf572c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50562)[0m     @     0x55cf572c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50562)[0m     @     0x55cf57236689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50562)[0m     @     0x55cf572c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50562)[0m     @     0x55cf572c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50562)[0m     @     0x55cf57236689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50562)[0m     @     0x55cf572c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50562)[0m     @     0x55cf572c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50562)[0m     @     0x55cf57236689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50452)[0m     @     0x7f0700afad91 at::TensorIterator::for_each()
[2m[36m(pid=50452)[0m     @     0x7f07013ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50452)[0m     @     0x7f0701400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50452)[0m     @     0x7f07008a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50452)[0m     @     0x7f07008a0388 at::native::copy_impl()
[2m[36m(pid=50452)[0m     @     0x7f07008a25a4 at::native::copy_()
[2m[36m(pid=50541)[0m     @     0x7f8afe343ad3 at::TensorIterator::for_each()
[2m[36m(pid=50541)[0m     @     0x7f8afe343d91 at::TensorIterator::for_each()
[2m[36m(pid=50541)[0m     @     0x7f8afec26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50541)[0m     @     0x7f8afec49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50541)[0m     @     0x7f8afe0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50541)[0m     @     0x7f8afe0e9388 at::native::copy_impl()
[2m[36m(pid=50541)[0m     @     0x7f8afe0eb5a4 at::native::copy_()
[2m[36m(pid=50448)[0m     @     0x7fb319a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=50448)[0m     @     0x7fb319a79d91 at::TensorIterator::for_each()
[2m[36m(pid=50448)[0m     @     0x7fb31a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50448)[0m     @     0x7fb31a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50448)[0m     @     0x7fb319821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50448)[0m     @     0x7fb31981f388 at::native::copy_impl()
[2m[36m(pid=50461)[0m     @     0x7f3850afad91 at::TensorIterator::for_each()
[2m[36m(pid=50461)[0m     @     0x7f38513ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50461)[0m     @     0x7f3851400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50461)[0m     @     0x7f38508a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50461)[0m     @     0x7f38508a0388 at::native::copy_impl()
[2m[36m(pid=50461)[0m     @     0x7f38508a25a4 at::native::copy_()
[2m[36m(pid=50461)[0m     @     0x7f3850f8d4f5 at::Tensor::copy_()
[2m[36m(pid=50516)[0m     @     0x7eec31868d91 at::TensorIterator::for_each()
[2m[36m(pid=50516)[0m     @     0x7eec3214bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50516)[0m     @     0x7eec3216ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50516)[0m     @     0x7eec31610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50516)[0m     @     0x7eec3160e388 at::native::copy_impl()
[2m[36m(pid=50516)[0m     @     0x7eec316105a4 at::native::copy_()
[2m[36m(pid=50524)[0m     @     0x7f45b8e2fd91 at::TensorIterator::for_each()
[2m[36m(pid=50524)[0m     @     0x7f45b9712b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50524)[0m     @     0x7f45b9735c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50524)[0m     @     0x7f45b8bd7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50524)[0m     @     0x7f45b8bd5388 at::native::copy_impl()
[2m[36m(pid=50524)[0m     @     0x7f45b8bd75a4 at::native::copy_()
[2m[36m(pid=50429)[0m     @     0x7efd32804d91 at::TensorIterator::for_each()
[2m[36m(pid=50429)[0m     @     0x7efd330e7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50429)[0m     @     0x7efd3310ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50429)[0m     @     0x7efd325aca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50429)[0m     @     0x7efd325aa388 at::native::copy_impl()
[2m[36m(pid=50429)[0m     @     0x7efd325ac5a4 at::native::copy_()
[2m[36m(pid=50434)[0m     @     0x7f300b539d91 at::TensorIterator::for_each()
[2m[36m(pid=50434)[0m     @     0x7f300be1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50434)[0m     @     0x7f300be3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50434)[0m     @     0x7f300b2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50434)[0m     @     0x7f300b2df388 at::native::copy_impl()
[2m[36m(pid=50434)[0m     @     0x7f300b2e15a4 at::native::copy_()
[2m[36m(pid=50503)[0m     @     0x7f2edf7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50503)[0m     @     0x7f2edd2b54f5 at::Tensor::copy_()
[2m[36m(pid=50503)[0m     @     0x7f2ee336079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50503)[0m     @     0x555b0311cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50503)[0m     @     0x555b03077b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50503)[0m     @     0x555b03102baf _PyEval_EvalCodeWithName
[2m[36m(pid=50503)[0m     @     0x555b03103a20 method_vectorcall
[2m[36m(pid=50503)[0m     @     0x555b03077bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50503)[0m     @     0x555b03102baf _PyEval_EvalCodeWithName
[2m[36m(pid=50503)[0m     @     0x555b03103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50503)[0m     @     0x555b03078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50503)[0m     @     0x555b03102baf _PyEval_EvalCodeWithName
[2m[36m(pid=50503)[0m     @     0x555b03103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50503)[0m     @     0x555b03078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50503)[0m     @     0x555b03102baf _PyEval_EvalCodeWithName
[2m[36m(pid=50503)[0m     @     0x555b03103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50503)[0m     @     0x555b03078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50503)[0m     @     0x555b03102baf _PyEval_EvalCodeWithName
[2m[36m(pid=50503)[0m     @     0x555b03103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50503)[0m     @     0x555b03078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50548)[0m     @     0x7edf225e24f5 at::Tensor::copy_()
[2m[36m(pid=50548)[0m     @     0x7edf2868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50548)[0m     @     0x5607581a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50548)[0m     @     0x560758103b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50548)[0m     @     0x56075818ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50548)[0m     @     0x56075818fa20 method_vectorcall
[2m[36m(pid=50548)[0m     @     0x560758103bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50548)[0m     @     0x56075818ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50548)[0m     @     0x56075818f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50548)[0m     @     0x560758104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50548)[0m     @     0x56075818ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50548)[0m     @     0x56075818f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50548)[0m     @     0x560758104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50548)[0m     @     0x56075818ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50548)[0m     @     0x56075818f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50548)[0m     @     0x560758104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50548)[0m     @     0x56075818ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50548)[0m     @     0x56075818f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50548)[0m     @     0x560758104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x7edfb3e7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50499)[0m     @     0x7edfb3e7aad3 at::TensorIterator::for_each()
[2m[36m(pid=50499)[0m     @     0x7edfb3e7ad91 at::TensorIterator::for_each()
[2m[36m(pid=50499)[0m     @     0x7edfb475db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50499)[0m     @     0x7edfb4780c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50499)[0m     @     0x7edfb3c22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50442)[0m     @     0x7f0c832f5ad3 at::TensorIterator::for_each()
[2m[36m(pid=50442)[0m     @     0x7f0c832f5d91 at::TensorIterator::for_each()
[2m[36m(pid=50442)[0m     @     0x7f0c83bd8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50442)[0m     @     0x7f0c83bfbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50442)[0m     @     0x7f0c8309da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50442)[0m     @     0x7f0c8309b388 at::native::copy_impl()
[2m[36m(pid=50467)[0m     @     0x7f0110d35d91 at::TensorIterator::for_each()
[2m[36m(pid=50467)[0m     @     0x7f0111618b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50467)[0m     @     0x7f011163bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50467)[0m     @     0x7f0110adda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50467)[0m     @     0x7f0110adb388 at::native::copy_impl()
[2m[36m(pid=50467)[0m     @     0x7f0110add5a4 at::native::copy_()
[2m[36m(pid=50466)[0m     @     0x7fa552c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50466)[0m     @     0x7fa5520eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50466)[0m     @     0x7fa5520e9388 at::native::copy_impl()
[2m[36m(pid=50466)[0m     @     0x7fa5520eb5a4 at::native::copy_()
[2m[36m(pid=50466)[0m     @     0x7fa5527d64f5 at::Tensor::copy_()
[2m[36m(pid=50530)[0m     @     0x7f338d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50530)[0m     @     0x7f338c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50530)[0m     @     0x7f338c589388 at::native::copy_impl()
[2m[36m(pid=50530)[0m     @     0x7f338c58b5a4 at::native::copy_()
[2m[36m(pid=50530)[0m     @     0x7f338cc764f5 at::Tensor::copy_()
[2m[36m(pid=50551)[0m     @     0x7f8811552d91 at::TensorIterator::for_each()
[2m[36m(pid=50551)[0m     @     0x7f8811e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50551)[0m     @     0x7f8811e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50551)[0m     @     0x7f88112faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50551)[0m     @     0x7f88112f8388 at::native::copy_impl()
[2m[36m(pid=50551)[0m     @     0x7f88112fa5a4 at::native::copy_()
[2m[36m(pid=50535)[0m     @     0x7fbe126ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50535)[0m     @     0x7fbe126fd388 at::native::copy_impl()
[2m[36m(pid=50535)[0m     @     0x7fbe126ff5a4 at::native::copy_()
[2m[36m(pid=50535)[0m     @     0x7fbe12dea4f5 at::Tensor::copy_()
[2m[36m(pid=50535)[0m     @     0x7fbe152bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50491)[0m     @     0x7ef5269e7d91 at::TensorIterator::for_each()
[2m[36m(pid=50491)[0m     @     0x7ef5272cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50491)[0m     @     0x7ef5272edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50491)[0m     @     0x7ef52678fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50491)[0m     @     0x7ef52678d388 at::native::copy_impl()
[2m[36m(pid=50491)[0m     @     0x7ef52678f5a4 at::native::copy_()
[2m[36m(pid=50540)[0m     @     0x7ef4605a5d91 at::TensorIterator::for_each()
[2m[36m(pid=50540)[0m     @     0x7ef460e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50540)[0m     @     0x7ef460eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50540)[0m     @     0x7ef46034da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50540)[0m     @     0x7ef46034b388 at::native::copy_impl()
[2m[36m(pid=50540)[0m     @     0x7ef46034d5a4 at::native::copy_()
[2m[36m(pid=50526)[0m     @     0x7ed9e982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50526)[0m     @     0x7ed9e8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50526)[0m     @     0x7ed9e8ccd388 at::native::copy_impl()
[2m[36m(pid=50526)[0m     @     0x7ed9e8ccf5a4 at::native::copy_()
[2m[36m(pid=50526)[0m     @     0x7ed9e93ba4f5 at::Tensor::copy_()
[2m[36m(pid=50496)[0m     @     0x7f04fa910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50496)[0m     @     0x7f04fa90e388 at::native::copy_impl()
[2m[36m(pid=50496)[0m     @     0x7f04fa9105a4 at::native::copy_()
[2m[36m(pid=50496)[0m     @     0x7f04faffb4f5 at::Tensor::copy_()
[2m[36m(pid=50496)[0m     @     0x7f04fd4ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50537)[0m     @     0x7f5419a4cd91 at::TensorIterator::for_each()
[2m[36m(pid=50537)[0m     @     0x7f541a32fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50537)[0m     @     0x7f541a352c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50537)[0m     @     0x7f54197f4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50537)[0m     @     0x7f54197f2388 at::native::copy_impl()
[2m[36m(pid=50537)[0m     @     0x7f54197f45a4 at::native::copy_()
[2m[36m(pid=50542)[0m     @     0x7f1cbcc764f5 at::Tensor::copy_()
[2m[36m(pid=50542)[0m     @     0x7f1cc2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50542)[0m     @     0x558ba0390fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50542)[0m     @     0x558ba02ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50542)[0m     @     0x558ba0376baf _PyEval_EvalCodeWithName
[2m[36m(pid=50542)[0m     @     0x558ba0377a20 method_vectorcall
[2m[36m(pid=50542)[0m     @     0x558ba02ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50542)[0m     @     0x558ba0376baf _PyEval_EvalCodeWithName
[2m[36m(pid=50542)[0m     @     0x558ba0377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50542)[0m     @     0x558ba02ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50542)[0m     @     0x558ba0376baf _PyEval_EvalCodeWithName
[2m[36m(pid=50542)[0m     @     0x558ba0377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50542)[0m     @     0x558ba02ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50542)[0m     @     0x558ba0376baf _PyEval_EvalCodeWithName
[2m[36m(pid=50542)[0m     @     0x558ba0377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50542)[0m     @     0x558ba02ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50542)[0m     @     0x558ba0376baf _PyEval_EvalCodeWithName
[2m[36m(pid=50542)[0m     @     0x558ba0377643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50542)[0m     @     0x558ba02ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50554)[0m     @     0x7f9dca52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50554)[0m     @     0x7f9dc99cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50554)[0m     @     0x7f9dc99cd388 at::native::copy_impl()
[2m[36m(pid=50554)[0m     @     0x7f9dc99cf5a4 at::native::copy_()
[2m[36m(pid=50554)[0m     @     0x7f9dca0ba4f5 at::Tensor::copy_()
[2m[36m(pid=50554)[0m     @     0x7f9dcc58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50532)[0m     @     0x7fa79fcf74f5 at::Tensor::copy_()
[2m[36m(pid=50532)[0m     @     0x7fa7a5da279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50532)[0m     @     0x55df34cbafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50532)[0m     @     0x55df34c15b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50532)[0m     @     0x55df34ca0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50532)[0m     @     0x55df34ca1a20 method_vectorcall
[2m[36m(pid=50532)[0m     @     0x55df34c15bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50532)[0m     @     0x55df34ca0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50532)[0m     @     0x55df34ca1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50532)[0m     @     0x55df34c16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50532)[0m     @     0x55df34ca0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50532)[0m     @     0x55df34ca1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50532)[0m     @     0x55df34c16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50532)[0m     @     0x55df34ca0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50532)[0m     @     0x55df34ca1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50532)[0m     @     0x55df34c16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50532)[0m     @     0x55df34ca0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50532)[0m     @     0x55df34ca1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50532)[0m     @     0x55df34c16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50441)[0m     @     0x7f4e8485cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50441)[0m     @     0x7f4e8487fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50441)[0m     @     0x7f4e83d21a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50441)[0m     @     0x7f4e83d1f388 at::native::copy_impl()
[2m[36m(pid=50441)[0m     @     0x7f4e83d215a4 at::native::copy_()
[2m[36m(pid=50433)[0m     @     0x7fb5e2d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=50433)[0m     @     0x7fb5e3630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50433)[0m     @     0x7fb5e3653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50433)[0m     @     0x7fb5e2af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50433)[0m     @     0x7fb5e2af3388 at::native::copy_impl()
[2m[36m(pid=50433)[0m     @     0x7fb5e2af55a4 at::native::copy_()
[2m[36m(pid=50512)[0m     @     0x7ef99b223ad3 at::TensorIterator::for_each()
[2m[36m(pid=50512)[0m     @     0x7ef99b223d91 at::TensorIterator::for_each()
[2m[36m(pid=50512)[0m     @     0x7ef99bb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50512)[0m     @     0x7ef99bb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50512)[0m     @     0x7ef99afcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50512)[0m     @     0x7ef99afc9388 at::native::copy_impl()
[2m[36m(pid=50428)[0m     @     0x7f6dd0d62ad3 at::TensorIterator::for_each()
[2m[36m(pid=50428)[0m     @     0x7f6dd0d62d91 at::TensorIterator::for_each()
[2m[36m(pid=50428)[0m     @     0x7f6dd1645b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50428)[0m     @     0x7f6dd1668c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50428)[0m     @     0x7f6dd0b0aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50428)[0m     @     0x7f6dd0b08388 at::native::copy_impl()
[2m[36m(pid=50490)[0m     @     0x7fa1c6d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=50490)[0m     @     0x7fa1c6d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=50490)[0m     @     0x7fa1c7630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50490)[0m     @     0x7fa1c7653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50490)[0m     @     0x7fa1c6af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50490)[0m     @     0x7fa1c6af3388 at::native::copy_impl()
[2m[36m(pid=50437)[0m     @     0x7f729d552d91 at::TensorIterator::for_each()
[2m[36m(pid=50437)[0m     @     0x7f729de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50437)[0m     @     0x7f729de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50437)[0m     @     0x7f729d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50437)[0m     @     0x7f729d2f8388 at::native::copy_impl()
[2m[36m(pid=50439)[0m     @     0x7fb616e37b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50439)[0m     @     0x7fb616e5ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50439)[0m     @     0x7fb6162fca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50439)[0m     @     0x7fb6162fa388 at::native::copy_impl()
[2m[36m(pid=50453)[0m     @     0x7edc93912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50453)[0m     @     0x7edc92db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50453)[0m     @     0x7edc92db2388 at::native::copy_impl()
[2m[36m(pid=50453)[0m     @     0x7edc92db45a4 at::native::copy_()
[2m[36m(pid=50506)[0m     @     0x7f6452965a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50506)[0m     @     0x7f6452963388 at::native::copy_impl()
[2m[36m(pid=50506)[0m     @     0x7f64529655a4 at::native::copy_()
[2m[36m(pid=50506)[0m     @     0x7f64530504f5 at::Tensor::copy_()
[2m[36m(pid=50506)[0m     @     0x7f64555238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50440)[0m     @     0x7f4ef01fbad3 at::TensorIterator::for_each()
[2m[36m(pid=50440)[0m     @     0x7f4ef01fbd91 at::TensorIterator::for_each()
[2m[36m(pid=50440)[0m     @     0x7f4ef0adeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50440)[0m     @     0x7f4ef0b01c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50440)[0m     @     0x7f4eeffa3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50440)[0m     @     0x7f4eeffa1388 at::native::copy_impl()
[2m[36m(pid=50501)[0m     @     0x7f7230507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50501)[0m     @     0x7f723052ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50501)[0m     @     0x7f722f9cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50501)[0m     @     0x7f722f9ca388 at::native::copy_impl()
[2m[36m(pid=50514)[0m     @     0x7f9369868ad3 at::TensorIterator::for_each()
[2m[36m(pid=50514)[0m     @     0x7f9369868d91 at::TensorIterator::for_each()
[2m[36m(pid=50514)[0m     @     0x7f936a14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50514)[0m     @     0x7f936a16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50514)[0m     @     0x7f9369610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50487)[0m     @     0x7f9ce058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50487)[0m     @     0x7f9ce0589388 at::native::copy_impl()
[2m[36m(pid=50487)[0m     @     0x7f9ce058b5a4 at::native::copy_()
[2m[36m(pid=50487)[0m     @     0x7f9ce0c764f5 at::Tensor::copy_()
[2m[36m(pid=50487)[0m     @     0x7f9ce31498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50510)[0m     @     0x7ed36ff53d91 at::TensorIterator::for_each()
[2m[36m(pid=50510)[0m     @     0x7ed370836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50510)[0m     @     0x7ed370859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50510)[0m     @     0x7ed36fcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50510)[0m     @     0x7ed36fcf9388 at::native::copy_impl()
[2m[36m(pid=50510)[0m     @     0x7ed36fcfb5a4 at::native::copy_()
[2m[36m(pid=50556)[0m     @     0x7f0042a59d91 at::TensorIterator::for_each()
[2m[36m(pid=50556)[0m     @     0x7f004333cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50556)[0m     @     0x7f004335fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50556)[0m     @     0x7f0042801a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50556)[0m     @     0x7f00427ff388 at::native::copy_impl()
[2m[36m(pid=50444)[0m     @     0x7f7a48dcf390 (unknown)
[2m[36m(pid=50444)[0m     @     0x7f4b48c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=50444)[0m     @     0x7f4b4839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50444)[0m     @     0x7f4b483a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50485)[0m     @     0x7f2639e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50485)[0m     @     0x7f26392faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50485)[0m     @     0x7f26392f8388 at::native::copy_impl()
[2m[36m(pid=50485)[0m     @     0x7f26392fa5a4 at::native::copy_()
[2m[36m(pid=50485)[0m     @     0x7f26399e54f5 at::Tensor::copy_()
[2m[36m(pid=50435)[0m     @     0x7f21165baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50435)[0m     @     0x7f21165b8388 at::native::copy_impl()
[2m[36m(pid=50435)[0m     @     0x7f21165ba5a4 at::native::copy_()
[2m[36m(pid=50435)[0m     @     0x7f2116ca54f5 at::Tensor::copy_()
[2m[36m(pid=50432)[0m     @     0x7f99420eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50432)[0m     @     0x7f99420e9388 at::native::copy_impl()
[2m[36m(pid=50432)[0m     @     0x7f99420eb5a4 at::native::copy_()
[2m[36m(pid=50432)[0m     @     0x7f99427d64f5 at::Tensor::copy_()
[2m[36m(pid=50438)[0m     @     0x7f8fc6fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50438)[0m     @     0x7f8fc6fc9388 at::native::copy_impl()
[2m[36m(pid=50438)[0m     @     0x7f8fc6fcb5a4 at::native::copy_()
[2m[36m(pid=50438)[0m     @     0x7f8fc76b64f5 at::Tensor::copy_()
[2m[36m(pid=50438)[0m     @     0x7f8fc9b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50457)[0m     @     0x7efb5780f5a4 at::native::copy_()
[2m[36m(pid=50457)[0m     @     0x7efb57efa4f5 at::Tensor::copy_()
[2m[36m(pid=50457)[0m     @     0x7efb5a3cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50457)[0m     @     0x7efb57efa4f5 at::Tensor::copy_()
[2m[36m(pid=50457)[0m     @     0x7efb5dfa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50457)[0m     @     0x55e5879a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50457)[0m     @     0x55e587900b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50457)[0m     @     0x55e58798bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50457)[0m     @     0x55e58798ca20 method_vectorcall
[2m[36m(pid=50457)[0m     @     0x55e587900bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50457)[0m     @     0x55e58798bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50457)[0m     @     0x55e58798c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50457)[0m     @     0x55e587901689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50457)[0m     @     0x55e58798bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50457)[0m     @     0x55e58798c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50457)[0m     @     0x55e587901689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x7fcb9c3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=50520)[0m     @     0x7fcb9c3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=50520)[0m     @     0x7fcb9cc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50520)[0m     @     0x7fcb9cca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50520)[0m     @     0x7fcb9c14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50520)[0m     @     0x7fcb9c148388 at::native::copy_impl()
[2m[36m(pid=50560)[0m     @     0x7f5f1e86ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50560)[0m     @     0x7f5f1e86c388 at::native::copy_impl()
[2m[36m(pid=50560)[0m     @     0x7f5f1e86e5a4 at::native::copy_()
[2m[36m(pid=50560)[0m     @     0x7f5f1ef594f5 at::Tensor::copy_()
[2m[36m(pid=50560)[0m     @     0x7f5f2142c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50507)[0m     @     0x7f5880875a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50507)[0m     @     0x7f5880873388 at::native::copy_impl()
[2m[36m(pid=50507)[0m     @     0x7f58808755a4 at::native::copy_()
[2m[36m(pid=50507)[0m     @     0x7f5880f604f5 at::Tensor::copy_()
[2m[36m(pid=50507)[0m     @     0x7f58834338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50463)[0m     @     0x7f57926fd388 at::native::copy_impl()
[2m[36m(pid=50463)[0m     @     0x7f57926ff5a4 at::native::copy_()
[2m[36m(pid=50463)[0m     @     0x7f5792dea4f5 at::Tensor::copy_()
[2m[36m(pid=50463)[0m     @     0x7f57952bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50519)[0m     @     0x7f0a95552ad3 at::TensorIterator::for_each()
[2m[36m(pid=50519)[0m     @     0x7f0a95552d91 at::TensorIterator::for_each()
[2m[36m(pid=50519)[0m     @     0x7f0a95e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50519)[0m     @     0x7f0a95e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50446)[0m     @     0x7f2237c078f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50456)[0m     @     0x7f01c9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=50456)[0m     @     0x7f01ca71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50456)[0m     @     0x7f01ca73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50456)[0m     @     0x7f01c9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50456)[0m     @     0x7f01c9bde388 at::native::copy_impl()
[2m[36m(pid=50459)[0m     @     0x7f83dce88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50459)[0m     @     0x7f83dceabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50459)[0m     @     0x7f83dc34da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50459)[0m     @     0x7f83dc34b388 at::native::copy_impl()
[2m[36m(pid=50459)[0m     @     0x7f83dc34d5a4 at::native::copy_()
[2m[36m(pid=50492)[0m     @     0x7f84852cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50492)[0m     @     0x7f84852cb388 at::native::copy_impl()
[2m[36m(pid=50492)[0m     @     0x7f84852cd5a4 at::native::copy_()
[2m[36m(pid=50492)[0m     @     0x7f84859b84f5 at::Tensor::copy_()
[2m[36m(pid=50492)[0m     @     0x7f8487e8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50518)[0m     @     0x7eee175e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=50518)[0m     @     0x7eee175e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50518)[0m     @     0x7eee175e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=50484)[0m     @     0x7f9883cfb5a4 at::native::copy_()
[2m[36m(pid=50484)[0m     @     0x7f98843e64f5 at::Tensor::copy_()
[2m[36m(pid=50484)[0m     @     0x7f98868b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50484)[0m     @     0x7f98843e64f5 at::Tensor::copy_()
[2m[36m(pid=50484)[0m     @     0x7f988a49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50484)[0m     @     0x558f84ec4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50484)[0m     @     0x558f84e1fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50484)[0m     @     0x558f84eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50484)[0m     @     0x558f84eaba20 method_vectorcall
[2m[36m(pid=50484)[0m     @     0x558f84e1fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50484)[0m     @     0x558f84eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50484)[0m     @     0x558f84eab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50484)[0m     @     0x558f84e20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50484)[0m     @     0x558f84eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50484)[0m     @     0x558f84eab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50484)[0m     @     0x558f84e20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50484)[0m     @     0x558f84eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50484)[0m     @     0x558f84eab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50484)[0m     @     0x558f84e20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50484)[0m     @     0x558f84eaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50484)[0m     @     0x558f84eab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50484)[0m     @     0x558f84e20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50430)[0m     @     0x7f9d4877d5a4 at::native::copy_()
[2m[36m(pid=50430)[0m     @     0x7f9d48e684f5 at::Tensor::copy_()
[2m[36m(pid=50430)[0m     @     0x7f9d4b33b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50430)[0m     @     0x7f9d48e684f5 at::Tensor::copy_()
[2m[36m(pid=50430)[0m     @     0x7f9d4ef1379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50502)[0m     @     0x7f63ad2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50502)[0m     @     0x7f63ad2f8388 at::native::copy_impl()
[2m[36m(pid=50502)[0m     @     0x7f63ad2fa5a4 at::native::copy_()
[2m[36m(pid=50502)[0m     @     0x7f63ad9e54f5 at::Tensor::copy_()
[2m[36m(pid=50502)[0m     @     0x7f63afeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50493)[0m     @     0x7f921aa998f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=50493)[0m     @     0x7f921aa99ad3 at::TensorIterator::for_each()
[2m[36m(pid=50465)[0m     @     0x7f045d5a35a4 at::native::copy_()
[2m[36m(pid=50465)[0m     @     0x7f045dc8e4f5 at::Tensor::copy_()
[2m[36m(pid=50465)[0m     @     0x7f04601618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50465)[0m     @     0x7f045dc8e4f5 at::Tensor::copy_()
[2m[36m(pid=50465)[0m     @     0x7f0463d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50465)[0m     @     0x55e5bf735fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50465)[0m     @     0x55e5bf690b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50465)[0m     @     0x55e5bf71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50465)[0m     @     0x55e5bf71ca20 method_vectorcall
[2m[36m(pid=50465)[0m     @     0x55e5bf690bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50465)[0m     @     0x55e5bf71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50465)[0m     @     0x55e5bf71c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50465)[0m     @     0x55e5bf691689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50465)[0m     @     0x55e5bf71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50465)[0m     @     0x55e5bf71c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50489)[0m     @     0x7f4b9c8354f5 at::Tensor::copy_()
[2m[36m(pid=50489)[0m     @     0x7f4b9ed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50447)[0m     @     0x7f663376d5a4 at::native::copy_()
[2m[36m(pid=50447)[0m     @     0x7f6633e584f5 at::Tensor::copy_()
[2m[36m(pid=50447)[0m     @     0x7f663632b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50449)[0m     @     0x7f9b15cce4f5 at::Tensor::copy_()
[2m[36m(pid=50449)[0m     @     0x7f9b181a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50449)[0m     @     0x7f9b15cce4f5 at::Tensor::copy_()
[2m[36m(pid=50449)[0m     @     0x7f9b1bd7979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50449)[0m     @     0x56183dbaefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50449)[0m     @     0x56183db09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50449)[0m     @     0x56183db94baf _PyEval_EvalCodeWithName
[2m[36m(pid=50449)[0m     @     0x56183db95a20 method_vectorcall
[2m[36m(pid=50445)[0m     @     0x7f7efaecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50445)[0m     @     0x7f7ef89f84f5 at::Tensor::copy_()
[2m[36m(pid=50445)[0m     @     0x7f7efeaa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50445)[0m     @     0x5589fd41bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50445)[0m     @     0x5589fd376b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50445)[0m     @     0x5589fd401baf _PyEval_EvalCodeWithName
[2m[36m(pid=50445)[0m     @     0x5589fd402a20 method_vectorcall
[2m[36m(pid=50445)[0m     @     0x5589fd376bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50445)[0m     @     0x5589fd401baf _PyEval_EvalCodeWithName
[2m[36m(pid=50445)[0m     @     0x5589fd402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50445)[0m     @     0x5589fd377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50445)[0m     @     0x5589fd401baf _PyEval_EvalCodeWithName
[2m[36m(pid=50445)[0m     @     0x5589fd402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50445)[0m     @     0x5589fd377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50445)[0m     @     0x5589fd401baf _PyEval_EvalCodeWithName
[2m[36m(pid=50445)[0m     @     0x5589fd402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50445)[0m     @     0x5589fd377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50445)[0m     @     0x5589fd401baf _PyEval_EvalCodeWithName
[2m[36m(pid=50445)[0m     @     0x5589fd402643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50445)[0m     @     0x5589fd377689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50500)[0m     @     0x7f5fa96105a4 at::native::copy_()
[2m[36m(pid=50500)[0m     @     0x7f5fa9cfb4f5 at::Tensor::copy_()
[2m[36m(pid=50500)[0m     @     0x7f5fac1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50431)[0m     @     0x7ef10e0eb5a4 at::native::copy_()
[2m[36m(pid=50431)[0m     @     0x7ef10e7d64f5 at::Tensor::copy_()
[2m[36m(pid=50431)[0m     @     0x7ef110ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50522)[0m     @     0x7f03c52fa5a4 at::native::copy_()
[2m[36m(pid=50522)[0m     @     0x7f03c59e54f5 at::Tensor::copy_()
[2m[36m(pid=50522)[0m     @     0x7f03c7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50515)[0m     @     0x7f1344c764f5 at::Tensor::copy_()
[2m[36m(pid=50515)[0m     @     0x7f13471498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50515)[0m     @     0x7f1344c764f5 at::Tensor::copy_()
[2m[36m(pid=50515)[0m     @     0x7f134ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50515)[0m     @     0x55bbc922dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50508)[0m     @     0x7ed0a5e7a4f5 at::Tensor::copy_()
[2m[36m(pid=50508)[0m     @     0x7ed0a834d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50452)[0m     @     0x7f0700f8d4f5 at::Tensor::copy_()
[2m[36m(pid=50452)[0m     @     0x7f07034608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50541)[0m     @     0x7f8afe7d64f5 at::Tensor::copy_()
[2m[36m(pid=50541)[0m     @     0x7f8b00ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50448)[0m     @     0x7fb3198215a4 at::native::copy_()
[2m[36m(pid=50448)[0m     @     0x7fb319f0c4f5 at::Tensor::copy_()
[2m[36m(pid=50448)[0m     @     0x7fb31c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50461)[0m     @     0x7f38534608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50461)[0m     @     0x7f3850f8d4f5 at::Tensor::copy_()
[2m[36m(pid=50461)[0m     @     0x7f385703879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50461)[0m     @     0x56288efeafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50461)[0m     @     0x56288ef45b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50461)[0m     @     0x56288efd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50461)[0m     @     0x56288efd1a20 method_vectorcall
[2m[36m(pid=50461)[0m     @     0x56288ef45bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50461)[0m     @     0x56288efd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50461)[0m     @     0x56288efd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50461)[0m     @     0x56288ef46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50461)[0m     @     0x56288efd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50461)[0m     @     0x56288efd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50461)[0m     @     0x56288ef46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50461)[0m     @     0x56288efd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50461)[0m     @     0x56288efd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50461)[0m     @     0x56288ef46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50461)[0m     @     0x56288efd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50461)[0m     @     0x56288efd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50461)[0m     @     0x56288ef46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50516)[0m     @     0x7eec31cfb4f5 at::Tensor::copy_()
[2m[36m(pid=50516)[0m     @     0x7eec341ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50516)[0m     @     0x7eec31cfb4f5 at::Tensor::copy_()
[2m[36m(pid=50516)[0m     @     0x7eec37da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50516)[0m     @     0x557dac6adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50516)[0m     @     0x557dac608b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50516)[0m     @     0x557dac693baf _PyEval_EvalCodeWithName
[2m[36m(pid=50516)[0m     @     0x557dac694a20 method_vectorcall
[2m[36m(pid=50516)[0m     @     0x557dac608bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50516)[0m     @     0x557dac693baf _PyEval_EvalCodeWithName
[2m[36m(pid=50516)[0m     @     0x557dac694643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50516)[0m     @     0x557dac609689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50516)[0m     @     0x557dac693baf _PyEval_EvalCodeWithName
[2m[36m(pid=50516)[0m     @     0x557dac694643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50516)[0m     @     0x557dac609689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50516)[0m     @     0x557dac693baf _PyEval_EvalCodeWithName
[2m[36m(pid=50516)[0m     @     0x557dac694643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50516)[0m     @     0x557dac609689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50516)[0m     @     0x557dac693baf _PyEval_EvalCodeWithName
[2m[36m(pid=50516)[0m     @     0x557dac694643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50516)[0m     @     0x557dac609689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50524)[0m     @     0x7f45b92c24f5 at::Tensor::copy_()
[2m[36m(pid=50524)[0m     @     0x7f45bb7958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50524)[0m     @     0x7f45b92c24f5 at::Tensor::copy_()
[2m[36m(pid=50429)[0m     @     0x7efd32c974f5 at::Tensor::copy_()
[2m[36m(pid=50429)[0m     @     0x7efd3516a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50429)[0m     @     0x7efd32c974f5 at::Tensor::copy_()
[2m[36m(pid=50429)[0m     @     0x7efd38d4279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50429)[0m     @     0x55ad903a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50429)[0m     @     0x55ad902fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50429)[0m     @     0x55ad90388baf _PyEval_EvalCodeWithName
[2m[36m(pid=50429)[0m     @     0x55ad90389a20 method_vectorcall
[2m[36m(pid=50429)[0m     @     0x55ad902fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50434)[0m     @     0x7f300b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=50434)[0m     @     0x7f300de9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50434)[0m     @     0x7f300b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=50434)[0m     @     0x7f3011a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50434)[0m     @     0x55c805b80fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50434)[0m     @     0x55c805adbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50434)[0m     @     0x55c805b66baf _PyEval_EvalCodeWithName
[2m[36m(pid=50434)[0m     @     0x55c805b67a20 method_vectorcall
[2m[36m(pid=50434)[0m     @     0x55c805adbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50434)[0m     @     0x55c805b66baf _PyEval_EvalCodeWithName
[2m[36m(pid=50434)[0m     @     0x55c805b67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50434)[0m     @     0x55c805adc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50434)[0m     @     0x55c805b66baf _PyEval_EvalCodeWithName
[2m[36m(pid=50434)[0m     @     0x55c805b67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50434)[0m     @     0x55c805adc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50434)[0m     @     0x55c805b66baf _PyEval_EvalCodeWithName
[2m[36m(pid=50434)[0m     @     0x55c805b67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50434)[0m     @     0x55c805adc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x7edfb3c20388 at::native::copy_impl()
[2m[36m(pid=50499)[0m     @     0x7edfb3c225a4 at::native::copy_()
[2m[36m(pid=50499)[0m     @     0x7edfb430d4f5 at::Tensor::copy_()
[2m[36m(pid=50442)[0m     @     0x7f0c8309d5a4 at::native::copy_()
[2m[36m(pid=50442)[0m     @     0x7f0c837884f5 at::Tensor::copy_()
[2m[36m(pid=50442)[0m     @     0x7f0c85c5b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50467)[0m     @     0x7f01111c84f5 at::Tensor::copy_()
[2m[36m(pid=50467)[0m     @     0x7f011369b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50467)[0m     @     0x7f01111c84f5 at::Tensor::copy_()
[2m[36m(pid=50467)[0m     @     0x7f011727379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50467)[0m     @     0x55c33931cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50467)[0m     @     0x55c339277b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50467)[0m     @     0x55c339302baf _PyEval_EvalCodeWithName
[2m[36m(pid=50467)[0m     @     0x55c339303a20 method_vectorcall
[2m[36m(pid=50467)[0m     @     0x55c339277bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50467)[0m     @     0x55c339302baf _PyEval_EvalCodeWithName
[2m[36m(pid=50467)[0m     @     0x55c339303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50467)[0m     @     0x55c339278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50467)[0m     @     0x55c339302baf _PyEval_EvalCodeWithName
[2m[36m(pid=50467)[0m     @     0x55c339303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50467)[0m     @     0x55c339278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50467)[0m     @     0x55c339302baf _PyEval_EvalCodeWithName
[2m[36m(pid=50467)[0m     @     0x55c339303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50467)[0m     @     0x55c339278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50467)[0m     @     0x55c339302baf _PyEval_EvalCodeWithName
[2m[36m(pid=50467)[0m     @     0x55c339303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50467)[0m     @     0x55c339278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50466)[0m     @     0x7fa554ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50466)[0m     @     0x7fa5527d64f5 at::Tensor::copy_()
[2m[36m(pid=50466)[0m     @     0x7fa55847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50466)[0m     @     0x55a5976aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50466)[0m     @     0x55a597605b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50466)[0m     @     0x55a597690baf _PyEval_EvalCodeWithName
[2m[36m(pid=50466)[0m     @     0x55a597691a20 method_vectorcall
[2m[36m(pid=50466)[0m     @     0x55a597605bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50466)[0m     @     0x55a597690baf _PyEval_EvalCodeWithName
[2m[36m(pid=50466)[0m     @     0x55a597691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50466)[0m     @     0x55a597606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50466)[0m     @     0x55a597690baf _PyEval_EvalCodeWithName
[2m[36m(pid=50466)[0m     @     0x55a597691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50466)[0m     @     0x55a597606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50466)[0m     @     0x55a597690baf _PyEval_EvalCodeWithName
[2m[36m(pid=50466)[0m     @     0x55a597691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50466)[0m     @     0x55a597606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50466)[0m     @     0x55a597690baf _PyEval_EvalCodeWithName
[2m[36m(pid=50466)[0m     @     0x55a597691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50466)[0m     @     0x55a597606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50530)[0m     @     0x7f338f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50530)[0m     @     0x7f338cc764f5 at::Tensor::copy_()
[2m[36m(pid=50530)[0m     @     0x7f3392d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50530)[0m     @     0x5646d5fb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50530)[0m     @     0x5646d5f0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50530)[0m     @     0x5646d5f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50530)[0m     @     0x5646d5f9ba20 method_vectorcall
[2m[36m(pid=50530)[0m     @     0x5646d5f0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50530)[0m     @     0x5646d5f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50530)[0m     @     0x5646d5f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50530)[0m     @     0x5646d5f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50530)[0m     @     0x5646d5f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50530)[0m     @     0x5646d5f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50530)[0m     @     0x5646d5f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50530)[0m     @     0x5646d5f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50530)[0m     @     0x5646d5f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50530)[0m     @     0x5646d5f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50530)[0m     @     0x5646d5f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50530)[0m     @     0x5646d5f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50530)[0m     @     0x5646d5f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50551)[0m     @     0x7f88119e54f5 at::Tensor::copy_()
[2m[36m(pid=50551)[0m     @     0x7f8813eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50551)[0m     @     0x7f88119e54f5 at::Tensor::copy_()
[2m[36m(pid=50551)[0m     @     0x7f8817a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50551)[0m     @     0x5613a9515fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50551)[0m     @     0x5613a9470b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50535)[0m     @     0x7fbe12dea4f5 at::Tensor::copy_()
[2m[36m(pid=50535)[0m     @     0x7fbe18e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50535)[0m     @     0x56515422dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50535)[0m     @     0x565154188b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50535)[0m     @     0x565154213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50535)[0m     @     0x565154214a20 method_vectorcall
[2m[36m(pid=50535)[0m     @     0x565154188bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50535)[0m     @     0x565154213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50535)[0m     @     0x565154214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50535)[0m     @     0x565154189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50535)[0m     @     0x565154213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50535)[0m     @     0x565154214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50535)[0m     @     0x565154189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50535)[0m     @     0x565154213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50535)[0m     @     0x565154214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50535)[0m     @     0x565154189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50535)[0m     @     0x565154213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50535)[0m     @     0x565154214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50535)[0m     @     0x565154189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50491)[0m     @     0x7ef526e7a4f5 at::Tensor::copy_()
[2m[36m(pid=50491)[0m     @     0x7ef52934d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50491)[0m     @     0x7ef526e7a4f5 at::Tensor::copy_()
[2m[36m(pid=50491)[0m     @     0x7ef52cf2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50491)[0m     @     0x56501ea98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50491)[0m     @     0x56501e9f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50491)[0m     @     0x56501ea7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50491)[0m     @     0x56501ea7fa20 method_vectorcall
[2m[36m(pid=50491)[0m     @     0x56501e9f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50491)[0m     @     0x56501ea7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50491)[0m     @     0x56501ea7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50491)[0m     @     0x56501e9f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50540)[0m     @     0x7ef460a384f5 at::Tensor::copy_()
[2m[36m(pid=50540)[0m     @     0x7ef462f0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50526)[0m     @     0x7ed9eb88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50526)[0m     @     0x7ed9e93ba4f5 at::Tensor::copy_()
[2m[36m(pid=50526)[0m     @     0x7ed9ef46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50526)[0m     @     0x55ace9eaffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50526)[0m     @     0x55ace9e0ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50526)[0m     @     0x55ace9e95baf _PyEval_EvalCodeWithName
[2m[36m(pid=50526)[0m     @     0x55ace9e96a20 method_vectorcall
[2m[36m(pid=50526)[0m     @     0x55ace9e0abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50526)[0m     @     0x55ace9e95baf _PyEval_EvalCodeWithName
[2m[36m(pid=50526)[0m     @     0x55ace9e96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50526)[0m     @     0x55ace9e0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50526)[0m     @     0x55ace9e95baf _PyEval_EvalCodeWithName
[2m[36m(pid=50526)[0m     @     0x55ace9e96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50526)[0m     @     0x55ace9e0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50526)[0m     @     0x55ace9e95baf _PyEval_EvalCodeWithName
[2m[36m(pid=50526)[0m     @     0x55ace9e96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50526)[0m     @     0x55ace9e0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50526)[0m     @     0x55ace9e95baf _PyEval_EvalCodeWithName
[2m[36m(pid=50526)[0m     @     0x55ace9e96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50526)[0m     @     0x55ace9e0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50496)[0m     @     0x7f04faffb4f5 at::Tensor::copy_()
[2m[36m(pid=50496)[0m     @     0x7f05010a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50496)[0m     @     0x555e91d3cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50496)[0m     @     0x555e91c97b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50496)[0m     @     0x555e91d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=50496)[0m     @     0x555e91d23a20 method_vectorcall
[2m[36m(pid=50496)[0m     @     0x555e91c97bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50496)[0m     @     0x555e91d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=50496)[0m     @     0x555e91d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50496)[0m     @     0x555e91c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50496)[0m     @     0x555e91d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=50496)[0m     @     0x555e91d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50496)[0m     @     0x555e91c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50496)[0m     @     0x555e91d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=50496)[0m     @     0x555e91d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50496)[0m     @     0x555e91c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50496)[0m     @     0x555e91d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=50496)[0m     @     0x555e91d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50496)[0m     @     0x555e91c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50537)[0m     @     0x7f5419edf4f5 at::Tensor::copy_()
[2m[36m(pid=50537)[0m     @     0x7f541c3b28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50537)[0m     @     0x7f5419edf4f5 at::Tensor::copy_()
[2m[36m(pid=50537)[0m     @     0x7f541ff8a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50537)[0m     @     0x55ccff57bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50537)[0m     @     0x55ccff4d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50537)[0m     @     0x55ccff561baf _PyEval_EvalCodeWithName
[2m[36m(pid=50537)[0m     @     0x55ccff562a20 method_vectorcall
[2m[36m(pid=50537)[0m     @     0x55ccff4d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50537)[0m     @     0x55ccff561baf _PyEval_EvalCodeWithName
[2m[36m(pid=50537)[0m     @     0x55ccff562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50537)[0m     @     0x55ccff4d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50554)[0m     @     0x7f9dca0ba4f5 at::Tensor::copy_()
[2m[36m(pid=50554)[0m     @     0x7f9dd016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50554)[0m     @     0x55ad33c16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50554)[0m     @     0x55ad33b71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50554)[0m     @     0x55ad33bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50554)[0m     @     0x55ad33bfda20 method_vectorcall
[2m[36m(pid=50554)[0m     @     0x55ad33b71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50554)[0m     @     0x55ad33bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50554)[0m     @     0x55ad33bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50554)[0m     @     0x55ad33b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50554)[0m     @     0x55ad33bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50554)[0m     @     0x55ad33bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50554)[0m     @     0x55ad33b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50554)[0m     @     0x55ad33bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50554)[0m     @     0x55ad33bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50554)[0m     @     0x55ad33b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50554)[0m     @     0x55ad33bfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50554)[0m     @     0x55ad33bfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50554)[0m     @     0x55ad33b72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50441)[0m     @     0x7f4e8440c4f5 at::Tensor::copy_()
[2m[36m(pid=50441)[0m     @     0x7f4e868df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50441)[0m     @     0x7f4e8440c4f5 at::Tensor::copy_()
[2m[36m(pid=50441)[0m     @     0x7f4e8a4b779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50441)[0m     @     0x5598dbf08fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50441)[0m     @     0x5598dbe63b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50441)[0m     @     0x5598dbeeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50441)[0m     @     0x5598dbeefa20 method_vectorcall
[2m[36m(pid=50441)[0m     @     0x5598dbe63bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50441)[0m     @     0x5598dbeeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50441)[0m     @     0x5598dbeef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50441)[0m     @     0x5598dbe64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50441)[0m     @     0x5598dbeeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50441)[0m     @     0x5598dbeef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50441)[0m     @     0x5598dbe64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50441)[0m     @     0x5598dbeeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50441)[0m     @     0x5598dbeef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50441)[0m     @     0x5598dbe64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50441)[0m     @     0x5598dbeeebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50441)[0m     @     0x5598dbeef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50441)[0m     @     0x5598dbe64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50433)[0m     @     0x7fb5e31e04f5 at::Tensor::copy_()
[2m[36m(pid=50433)[0m     @     0x7fb5e56b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50433)[0m     @     0x7fb5e31e04f5 at::Tensor::copy_()
[2m[36m(pid=50433)[0m     @     0x7fb5e928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50433)[0m     @     0x55ad4c673fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50433)[0m     @     0x55ad4c5ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50433)[0m     @     0x55ad4c659baf _PyEval_EvalCodeWithName
[2m[36m(pid=50433)[0m     @     0x55ad4c65aa20 method_vectorcall
[2m[36m(pid=50433)[0m     @     0x55ad4c5cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50433)[0m     @     0x55ad4c659baf _PyEval_EvalCodeWithName
[2m[36m(pid=50433)[0m     @     0x55ad4c65a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50433)[0m     @     0x55ad4c5cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50433)[0m     @     0x55ad4c659baf _PyEval_EvalCodeWithName
[2m[36m(pid=50433)[0m     @     0x55ad4c65a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50433)[0m     @     0x55ad4c5cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50512)[0m     @     0x7ef99afcb5a4 at::native::copy_()
[2m[36m(pid=50512)[0m     @     0x7ef99b6b64f5 at::Tensor::copy_()
[2m[36m(pid=50512)[0m     @     0x7ef99db898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50428)[0m     @     0x7f6dd0b0a5a4 at::native::copy_()
[2m[36m(pid=50428)[0m     @     0x7f6dd11f54f5 at::Tensor::copy_()
[2m[36m(pid=50428)[0m     @     0x7f6dd36c88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50490)[0m     @     0x7fa1c6af55a4 at::native::copy_()
[2m[36m(pid=50490)[0m     @     0x7fa1c71e04f5 at::Tensor::copy_()
[2m[36m(pid=50490)[0m     @     0x7fa1c96b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50437)[0m     @     0x7f729d2fa5a4 at::native::copy_()
[2m[36m(pid=50437)[0m     @     0x7f729d9e54f5 at::Tensor::copy_()
[2m[36m(pid=50437)[0m     @     0x7f729feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50437)[0m     @     0x7f729d9e54f5 at::Tensor::copy_()
[2m[36m(pid=50439)[0m     @     0x7fb6162fc5a4 at::native::copy_()
[2m[36m(pid=50439)[0m     @     0x7fb6169e74f5 at::Tensor::copy_()
[2m[36m(pid=50439)[0m     @     0x7fb618eba8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50439)[0m     @     0x7fb6169e74f5 at::Tensor::copy_()
[2m[36m(pid=50453)[0m     @     0x7edc9349f4f5 at::Tensor::copy_()
[2m[36m(pid=50453)[0m     @     0x7edc959728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50453)[0m     @     0x7edc9349f4f5 at::Tensor::copy_()
[2m[36m(pid=50453)[0m     @     0x7edc9954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50453)[0m     @     0x559129226fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50453)[0m     @     0x559129181b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50453)[0m     @     0x55912920cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50453)[0m     @     0x55912920da20 method_vectorcall
[2m[36m(pid=50453)[0m     @     0x559129181bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50453)[0m     @     0x55912920cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50453)[0m     @     0x55912920d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50506)[0m     @     0x7f64530504f5 at::Tensor::copy_()
[2m[36m(pid=50506)[0m     @     0x7f64590fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50506)[0m     @     0x557b06deffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50506)[0m     @     0x557b06d4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50506)[0m     @     0x557b06dd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50506)[0m     @     0x557b06dd6a20 method_vectorcall
[2m[36m(pid=50506)[0m     @     0x557b06d4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50506)[0m     @     0x557b06dd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50506)[0m     @     0x557b06dd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50506)[0m     @     0x557b06d4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50506)[0m     @     0x557b06dd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50506)[0m     @     0x557b06dd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50506)[0m     @     0x557b06d4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50506)[0m     @     0x557b06dd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50506)[0m     @     0x557b06dd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50506)[0m     @     0x557b06d4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50506)[0m     @     0x557b06dd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50506)[0m     @     0x557b06dd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50506)[0m     @     0x557b06d4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50440)[0m     @     0x7f4eeffa35a4 at::native::copy_()
[2m[36m(pid=50440)[0m     @     0x7f4ef068e4f5 at::Tensor::copy_()
[2m[36m(pid=50501)[0m     @     0x7f722f9cc5a4 at::native::copy_()
[2m[36m(pid=50501)[0m     @     0x7f72300b74f5 at::Tensor::copy_()
[2m[36m(pid=50514)[0m     @     0x7f936960e388 at::native::copy_impl()
[2m[36m(pid=50514)[0m     @     0x7f93696105a4 at::native::copy_()
[2m[36m(pid=50487)[0m     @     0x7f9ce0c764f5 at::Tensor::copy_()
[2m[36m(pid=50487)[0m     @     0x7f9ce6d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50487)[0m     @     0x560b2099efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50487)[0m     @     0x560b208f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50487)[0m     @     0x560b20984baf _PyEval_EvalCodeWithName
[2m[36m(pid=50487)[0m     @     0x560b20985a20 method_vectorcall
[2m[36m(pid=50487)[0m     @     0x560b208f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50487)[0m     @     0x560b20984baf _PyEval_EvalCodeWithName
[2m[36m(pid=50487)[0m     @     0x560b20985643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50487)[0m     @     0x560b208fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50487)[0m     @     0x560b20984baf _PyEval_EvalCodeWithName
[2m[36m(pid=50487)[0m     @     0x560b20985643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50487)[0m     @     0x560b208fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50487)[0m     @     0x560b20984baf _PyEval_EvalCodeWithName
[2m[36m(pid=50487)[0m     @     0x560b20985643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50487)[0m     @     0x560b208fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50487)[0m     @     0x560b20984baf _PyEval_EvalCodeWithName
[2m[36m(pid=50487)[0m     @     0x560b20985643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50487)[0m     @     0x560b208fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50510)[0m     @     0x7ed3703e64f5 at::Tensor::copy_()
[2m[36m(pid=50510)[0m     @     0x7ed3728b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50556)[0m     @     0x7f00428015a4 at::native::copy_()
[2m[36m(pid=50556)[0m     @     0x7f0042eec4f5 at::Tensor::copy_()
[2m[36m(pid=50556)[0m     @     0x7f00453bf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50444)[0m     @     0x7f4b483a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=50444)[0m     @     0x7f4b483a2d91 at::TensorIterator::for_each()
[2m[36m(pid=50444)[0m     @     0x7f4b48c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50485)[0m     @     0x7f263beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50485)[0m     @     0x7f26399e54f5 at::Tensor::copy_()
[2m[36m(pid=50485)[0m     @     0x7f263fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50485)[0m     @     0x5567072f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50485)[0m     @     0x55670724eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50485)[0m     @     0x5567072d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50485)[0m     @     0x5567072daa20 method_vectorcall
[2m[36m(pid=50485)[0m     @     0x55670724ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50485)[0m     @     0x5567072d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50485)[0m     @     0x5567072da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50485)[0m     @     0x55670724f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50485)[0m     @     0x5567072d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50485)[0m     @     0x5567072da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50485)[0m     @     0x55670724f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50485)[0m     @     0x5567072d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50485)[0m     @     0x5567072da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50485)[0m     @     0x55670724f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50485)[0m     @     0x5567072d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50485)[0m     @     0x5567072da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50435)[0m     @     0x7f21191788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50432)[0m     @     0x7f9944ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50432)[0m     @     0x7f99427d64f5 at::Tensor::copy_()
[2m[36m(pid=50432)[0m     @     0x7f994847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50432)[0m     @     0x5646e90b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50432)[0m     @     0x5646e900db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50432)[0m     @     0x5646e9098baf _PyEval_EvalCodeWithName
[2m[36m(pid=50432)[0m     @     0x5646e9099a20 method_vectorcall
[2m[36m(pid=50432)[0m     @     0x5646e900dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50432)[0m     @     0x5646e9098baf _PyEval_EvalCodeWithName
[2m[36m(pid=50432)[0m     @     0x5646e9099643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50432)[0m     @     0x5646e900e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50432)[0m     @     0x5646e9098baf _PyEval_EvalCodeWithName
[2m[36m(pid=50432)[0m     @     0x5646e9099643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50432)[0m     @     0x5646e900e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50432)[0m     @     0x5646e9098baf _PyEval_EvalCodeWithName
[2m[36m(pid=50432)[0m     @     0x5646e9099643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50432)[0m     @     0x5646e900e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50432)[0m     @     0x5646e9098baf _PyEval_EvalCodeWithName
[2m[36m(pid=50432)[0m     @     0x5646e9099643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50432)[0m     @     0x5646e900e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50438)[0m     @     0x7f8fc76b64f5 at::Tensor::copy_()
[2m[36m(pid=50438)[0m     @     0x7f8fcd76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50438)[0m     @     0x55e373e02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50438)[0m     @     0x55e373d5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50438)[0m     @     0x55e373de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50438)[0m     @     0x55e373de9a20 method_vectorcall
[2m[36m(pid=50438)[0m     @     0x55e373d5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50438)[0m     @     0x55e373de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50438)[0m     @     0x55e373de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50438)[0m     @     0x55e373d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50438)[0m     @     0x55e373de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50438)[0m     @     0x55e373de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50438)[0m     @     0x55e373d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50438)[0m     @     0x55e373de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50438)[0m     @     0x55e373de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50438)[0m     @     0x55e373d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50438)[0m     @     0x55e373de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50438)[0m     @     0x55e373de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50438)[0m     @     0x55e373d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50457)[0m     @     0x55e58798bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50457)[0m     @     0x55e58798c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50457)[0m     @     0x55e587901689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50457)[0m     @     0x55e58798bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50457)[0m     @     0x55e58798c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50457)[0m     @     0x55e587901689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x7fcb9c14a5a4 at::native::copy_()
[2m[36m(pid=50520)[0m     @     0x7fcb9c8354f5 at::Tensor::copy_()
[2m[36m(pid=50520)[0m     @     0x7fcb9ed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50560)[0m     @     0x7f5f1ef594f5 at::Tensor::copy_()
[2m[36m(pid=50560)[0m     @     0x7f5f2500479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50560)[0m     @     0x55bc4ff37fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50560)[0m     @     0x55bc4fe92b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50560)[0m     @     0x55bc4ff1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50560)[0m     @     0x55bc4ff1ea20 method_vectorcall
[2m[36m(pid=50560)[0m     @     0x55bc4fe92bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50560)[0m     @     0x55bc4ff1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50560)[0m     @     0x55bc4ff1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50560)[0m     @     0x55bc4fe93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50560)[0m     @     0x55bc4ff1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50560)[0m     @     0x55bc4ff1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50560)[0m     @     0x55bc4fe93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50560)[0m     @     0x55bc4ff1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50560)[0m     @     0x55bc4ff1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50560)[0m     @     0x55bc4fe93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50560)[0m     @     0x55bc4ff1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50560)[0m     @     0x55bc4ff1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50560)[0m     @     0x55bc4fe93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50507)[0m     @     0x7f5880f604f5 at::Tensor::copy_()
[2m[36m(pid=50507)[0m     @     0x7f588700b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50507)[0m     @     0x5652af1d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50507)[0m     @     0x5652af12fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50507)[0m     @     0x5652af1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=50507)[0m     @     0x5652af1bba20 method_vectorcall
[2m[36m(pid=50507)[0m     @     0x5652af12fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50507)[0m     @     0x5652af1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=50507)[0m     @     0x5652af1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50507)[0m     @     0x5652af130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50507)[0m     @     0x5652af1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=50507)[0m     @     0x5652af1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50507)[0m     @     0x5652af130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50507)[0m     @     0x5652af1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=50507)[0m     @     0x5652af1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50507)[0m     @     0x5652af130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50507)[0m     @     0x5652af1babaf _PyEval_EvalCodeWithName
[2m[36m(pid=50507)[0m     @     0x5652af1bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50507)[0m     @     0x5652af130689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50463)[0m     @     0x7f5792dea4f5 at::Tensor::copy_()
[2m[36m(pid=50463)[0m     @     0x7f5798e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50463)[0m     @     0x55ee76e6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50463)[0m     @     0x55ee76dc5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50463)[0m     @     0x55ee76e50baf _PyEval_EvalCodeWithName
[2m[36m(pid=50463)[0m     @     0x55ee76e51a20 method_vectorcall
[2m[36m(pid=50463)[0m     @     0x55ee76dc5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50463)[0m     @     0x55ee76e50baf _PyEval_EvalCodeWithName
[2m[36m(pid=50463)[0m     @     0x55ee76e51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50463)[0m     @     0x55ee76dc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50463)[0m     @     0x55ee76e50baf _PyEval_EvalCodeWithName
[2m[36m(pid=50463)[0m     @     0x55ee76e51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50463)[0m     @     0x55ee76dc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50463)[0m     @     0x55ee76e50baf _PyEval_EvalCodeWithName
[2m[36m(pid=50463)[0m     @     0x55ee76e51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50463)[0m     @     0x55ee76dc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50463)[0m     @     0x55ee76e50baf _PyEval_EvalCodeWithName
[2m[36m(pid=50463)[0m     @     0x55ee76e51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50463)[0m     @     0x55ee76dc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50519)[0m     @     0x7f0a952faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50519)[0m     @     0x7f0a952f8388 at::native::copy_impl()
[2m[36m(pid=50519)[0m     @     0x7f0a952fa5a4 at::native::copy_()
[2m[36m(pid=50519)[0m     @     0x7f0a959e54f5 at::Tensor::copy_()
[2m[36m(pid=50519)[0m     @     0x7f0a97eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50446)[0m     @     0x7f2237c07ad3 at::TensorIterator::for_each()
[2m[36m(pid=50446)[0m     @     0x7f2237c07d91 at::TensorIterator::for_each()
[2m[36m(pid=50446)[0m     @     0x7f22384eab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50446)[0m     @     0x7f223850dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50446)[0m     @     0x7f22379afa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50446)[0m     @     0x7f22379ad388 at::native::copy_impl()
[2m[36m(pid=50456)[0m     @     0x7f01c9be05a4 at::native::copy_()
[2m[36m(pid=50456)[0m     @     0x7f01ca2cb4f5 at::Tensor::copy_()
[2m[36m(pid=50456)[0m     @     0x7f01cc79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50456)[0m     @     0x7f01ca2cb4f5 at::Tensor::copy_()
[2m[36m(pid=50456)[0m     @     0x7f01d037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50456)[0m     @     0x55698c927fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50456)[0m     @     0x55698c882b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50456)[0m     @     0x55698c90dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50456)[0m     @     0x55698c90ea20 method_vectorcall
[2m[36m(pid=50456)[0m     @     0x55698c882bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50456)[0m     @     0x55698c90dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50456)[0m     @     0x55698c90e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50456)[0m     @     0x55698c883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50456)[0m     @     0x55698c90dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50456)[0m     @     0x55698c90e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50456)[0m     @     0x55698c883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50456)[0m     @     0x55698c90dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50459)[0m     @     0x7f83dca384f5 at::Tensor::copy_()
[2m[36m(pid=50459)[0m     @     0x7f83def0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50459)[0m     @     0x7f83dca384f5 at::Tensor::copy_()
[2m[36m(pid=50459)[0m     @     0x7f83e2ae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50459)[0m     @     0x561bbd185fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50459)[0m     @     0x561bbd0e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50459)[0m     @     0x561bbd16bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50459)[0m     @     0x561bbd16ca20 method_vectorcall
[2m[36m(pid=50459)[0m     @     0x561bbd0e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50459)[0m     @     0x561bbd16bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50459)[0m     @     0x561bbd16c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50459)[0m     @     0x561bbd0e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50459)[0m     @     0x561bbd16bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50459)[0m     @     0x561bbd16c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50459)[0m     @     0x561bbd0e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50459)[0m     @     0x561bbd16bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50459)[0m     @     0x561bbd16c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50459)[0m     @     0x561bbd0e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50459)[0m     @     0x561bbd16bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50459)[0m     @     0x561bbd16c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50459)[0m     @     0x561bbd0e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50492)[0m     @     0x7f84859b84f5 at::Tensor::copy_()
[2m[36m(pid=50492)[0m     @     0x7f848ba6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50492)[0m     @     0x55b7ef476fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50492)[0m     @     0x55b7ef3d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50492)[0m     @     0x55b7ef45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50492)[0m     @     0x55b7ef45da20 method_vectorcall
[2m[36m(pid=50492)[0m     @     0x55b7ef3d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50492)[0m     @     0x55b7ef45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50492)[0m     @     0x55b7ef45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50492)[0m     @     0x55b7ef3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50492)[0m     @     0x55b7ef45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50492)[0m     @     0x55b7ef45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50492)[0m     @     0x55b7ef3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50492)[0m     @     0x55b7ef45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50492)[0m     @     0x55b7ef45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50492)[0m     @     0x55b7ef3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50492)[0m     @     0x55b7ef45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50492)[0m     @     0x55b7ef45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50492)[0m     @     0x55b7ef3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x7eee175e4d91 at::TensorIterator::for_each()
[2m[36m(pid=50518)[0m     @     0x7eee17ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50518)[0m     @     0x7eee17eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50518)[0m     @     0x7eee1738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50518)[0m     @     0x7eee1738a388 at::native::copy_impl()
[2m[36m(pid=50430)[0m     @     0x55e358614fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50430)[0m     @     0x55e35856fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50430)[0m     @     0x55e3585fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50430)[0m     @     0x55e3585fba20 method_vectorcall
[2m[36m(pid=50430)[0m     @     0x55e35856fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50430)[0m     @     0x55e3585fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50430)[0m     @     0x55e3585fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50430)[0m     @     0x55e358570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50430)[0m     @     0x55e3585fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50430)[0m     @     0x55e3585fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50430)[0m     @     0x55e358570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50430)[0m     @     0x55e3585fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50430)[0m     @     0x55e3585fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50430)[0m     @     0x55e358570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50430)[0m     @     0x55e3585fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=50430)[0m     @     0x55e3585fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50430)[0m     @     0x55e358570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50502)[0m     @     0x7f63ad9e54f5 at::Tensor::copy_()
[2m[36m(pid=50502)[0m     @     0x7f63b3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50502)[0m     @     0x55f9be61bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50502)[0m     @     0x55f9be576b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50502)[0m     @     0x55f9be601baf _PyEval_EvalCodeWithName
[2m[36m(pid=50502)[0m     @     0x55f9be602a20 method_vectorcall
[2m[36m(pid=50502)[0m     @     0x55f9be576bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50502)[0m     @     0x55f9be601baf _PyEval_EvalCodeWithName
[2m[36m(pid=50502)[0m     @     0x55f9be602643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50502)[0m     @     0x55f9be577689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50502)[0m     @     0x55f9be601baf _PyEval_EvalCodeWithName
[2m[36m(pid=50502)[0m     @     0x55f9be602643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50502)[0m     @     0x55f9be577689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50502)[0m     @     0x55f9be601baf _PyEval_EvalCodeWithName
[2m[36m(pid=50502)[0m     @     0x55f9be602643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50502)[0m     @     0x55f9be577689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50502)[0m     @     0x55f9be601baf _PyEval_EvalCodeWithName
[2m[36m(pid=50502)[0m     @     0x55f9be602643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50502)[0m     @     0x55f9be577689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50493)[0m     @     0x7f921aa99d91 at::TensorIterator::for_each()
[2m[36m(pid=50493)[0m     @     0x7f921b37cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=50493)[0m     @     0x7f921b39fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50493)[0m     @     0x7f921a841a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50493)[0m     @     0x7f921a83f388 at::native::copy_impl()
[2m[36m(pid=50465)[0m     @     0x55e5bf691689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50465)[0m     @     0x55e5bf71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50465)[0m     @     0x55e5bf71c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50465)[0m     @     0x55e5bf691689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50465)[0m     @     0x55e5bf71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50465)[0m     @     0x55e5bf71c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50465)[0m     @     0x55e5bf691689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50489)[0m     @     0x7f4b9c8354f5 at::Tensor::copy_()
[2m[36m(pid=50489)[0m     @     0x7f4ba28e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50489)[0m     @     0x55e8c0adbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50489)[0m     @     0x55e8c0a36b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50489)[0m     @     0x55e8c0ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50489)[0m     @     0x55e8c0ac2a20 method_vectorcall
[2m[36m(pid=50489)[0m     @     0x55e8c0a36bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50489)[0m     @     0x55e8c0ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50489)[0m     @     0x55e8c0ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50489)[0m     @     0x55e8c0a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50489)[0m     @     0x55e8c0ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50489)[0m     @     0x55e8c0ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50489)[0m     @     0x55e8c0a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50489)[0m     @     0x55e8c0ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50489)[0m     @     0x55e8c0ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50489)[0m     @     0x55e8c0a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50489)[0m     @     0x55e8c0ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50489)[0m     @     0x55e8c0ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50489)[0m     @     0x55e8c0a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50447)[0m     @     0x7f6633e584f5 at::Tensor::copy_()
[2m[36m(pid=50447)[0m     @     0x7f6639f0379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50447)[0m     @     0x555e0388efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50447)[0m     @     0x555e037e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50447)[0m     @     0x555e03874baf _PyEval_EvalCodeWithName
[2m[36m(pid=50447)[0m     @     0x555e03875a20 method_vectorcall
[2m[36m(pid=50447)[0m     @     0x555e037e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50447)[0m     @     0x555e03874baf _PyEval_EvalCodeWithName
[2m[36m(pid=50447)[0m     @     0x555e03875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50447)[0m     @     0x555e037ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50447)[0m     @     0x555e03874baf _PyEval_EvalCodeWithName
[2m[36m(pid=50447)[0m     @     0x555e03875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50447)[0m     @     0x555e037ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50447)[0m     @     0x555e03874baf _PyEval_EvalCodeWithName
[2m[36m(pid=50447)[0m     @     0x555e03875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50447)[0m     @     0x555e037ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50447)[0m     @     0x555e03874baf _PyEval_EvalCodeWithName
[2m[36m(pid=50447)[0m     @     0x555e03875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50447)[0m     @     0x555e037ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50449)[0m     @     0x56183db09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50449)[0m     @     0x56183db94baf _PyEval_EvalCodeWithName
[2m[36m(pid=50449)[0m     @     0x56183db95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50449)[0m     @     0x56183db0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50449)[0m     @     0x56183db94baf _PyEval_EvalCodeWithName
[2m[36m(pid=50449)[0m     @     0x56183db95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50449)[0m     @     0x56183db0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50449)[0m     @     0x56183db94baf _PyEval_EvalCodeWithName
[2m[36m(pid=50449)[0m     @     0x56183db95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50449)[0m     @     0x56183db0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50449)[0m     @     0x56183db94baf _PyEval_EvalCodeWithName
[2m[36m(pid=50449)[0m     @     0x56183db95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50449)[0m     @     0x56183db0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50500)[0m     @     0x7f5fa9cfb4f5 at::Tensor::copy_()
[2m[36m(pid=50500)[0m     @     0x7f5fafda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50500)[0m     @     0x55c5d5a73fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50500)[0m     @     0x55c5d59ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50500)[0m     @     0x55c5d5a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=50500)[0m     @     0x55c5d5a5aa20 method_vectorcall
[2m[36m(pid=50500)[0m     @     0x55c5d59cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50500)[0m     @     0x55c5d5a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=50500)[0m     @     0x55c5d5a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50500)[0m     @     0x55c5d59cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50500)[0m     @     0x55c5d5a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=50500)[0m     @     0x55c5d5a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50500)[0m     @     0x55c5d59cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50500)[0m     @     0x55c5d5a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=50500)[0m     @     0x55c5d5a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50500)[0m     @     0x55c5d59cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50500)[0m     @     0x55c5d5a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=50500)[0m     @     0x55c5d5a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50500)[0m     @     0x55c5d59cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50431)[0m     @     0x7ef10e7d64f5 at::Tensor::copy_()
[2m[36m(pid=50431)[0m     @     0x7ef11447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50431)[0m     @     0x557ad13bbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50431)[0m     @     0x557ad1316b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50431)[0m     @     0x557ad13a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50431)[0m     @     0x557ad13a2a20 method_vectorcall
[2m[36m(pid=50431)[0m     @     0x557ad1316bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50431)[0m     @     0x557ad13a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50431)[0m     @     0x557ad13a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50431)[0m     @     0x557ad1317689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50431)[0m     @     0x557ad13a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50431)[0m     @     0x557ad13a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50431)[0m     @     0x557ad1317689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50431)[0m     @     0x557ad13a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50431)[0m     @     0x557ad13a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50431)[0m     @     0x557ad1317689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50431)[0m     @     0x557ad13a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50431)[0m     @     0x557ad13a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50431)[0m     @     0x557ad1317689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50522)[0m     @     0x7f03c59e54f5 at::Tensor::copy_()
[2m[36m(pid=50522)[0m     @     0x7f03cba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50522)[0m     @     0x55ea83685fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50522)[0m     @     0x55ea835e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50522)[0m     @     0x55ea8366bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50522)[0m     @     0x55ea8366ca20 method_vectorcall
[2m[36m(pid=50522)[0m     @     0x55ea835e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50522)[0m     @     0x55ea8366bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50522)[0m     @     0x55ea8366c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50522)[0m     @     0x55ea835e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50522)[0m     @     0x55ea8366bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50522)[0m     @     0x55ea8366c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50522)[0m     @     0x55ea835e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50522)[0m     @     0x55ea8366bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50522)[0m     @     0x55ea8366c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50522)[0m     @     0x55ea835e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50522)[0m     @     0x55ea8366bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50522)[0m     @     0x55ea8366c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50522)[0m     @     0x55ea835e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50515)[0m     @     0x55bbc9188b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50515)[0m     @     0x55bbc9213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50515)[0m     @     0x55bbc9214a20 method_vectorcall
[2m[36m(pid=50515)[0m     @     0x55bbc9188bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50515)[0m     @     0x55bbc9213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50515)[0m     @     0x55bbc9214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50515)[0m     @     0x55bbc9189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50515)[0m     @     0x55bbc9213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50515)[0m     @     0x55bbc9214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50515)[0m     @     0x55bbc9189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50515)[0m     @     0x55bbc9213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50515)[0m     @     0x55bbc9214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50515)[0m     @     0x55bbc9189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50515)[0m     @     0x55bbc9213baf _PyEval_EvalCodeWithName
[2m[36m(pid=50515)[0m     @     0x55bbc9214643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50515)[0m     @     0x55bbc9189689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50508)[0m     @     0x7ed0a5e7a4f5 at::Tensor::copy_()
[2m[36m(pid=50508)[0m     @     0x7ed0abf2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50508)[0m     @     0x5574a1287fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50508)[0m     @     0x5574a11e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50508)[0m     @     0x5574a126dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50508)[0m     @     0x5574a126ea20 method_vectorcall
[2m[36m(pid=50508)[0m     @     0x5574a11e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50508)[0m     @     0x5574a126dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50508)[0m     @     0x5574a126e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50508)[0m     @     0x5574a11e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50508)[0m     @     0x5574a126dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50508)[0m     @     0x5574a126e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50508)[0m     @     0x5574a11e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50508)[0m     @     0x5574a126dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50508)[0m     @     0x5574a126e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50508)[0m     @     0x5574a11e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50508)[0m     @     0x5574a126dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50508)[0m     @     0x5574a126e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50508)[0m     @     0x5574a11e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50452)[0m     @     0x7f0700f8d4f5 at::Tensor::copy_()
[2m[36m(pid=50452)[0m     @     0x7f070703879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50452)[0m     @     0x560af344efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50452)[0m     @     0x560af33a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50452)[0m     @     0x560af3434baf _PyEval_EvalCodeWithName
[2m[36m(pid=50452)[0m     @     0x560af3435a20 method_vectorcall
[2m[36m(pid=50452)[0m     @     0x560af33a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50452)[0m     @     0x560af3434baf _PyEval_EvalCodeWithName
[2m[36m(pid=50452)[0m     @     0x560af3435643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50452)[0m     @     0x560af33aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50452)[0m     @     0x560af3434baf _PyEval_EvalCodeWithName
[2m[36m(pid=50452)[0m     @     0x560af3435643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50452)[0m     @     0x560af33aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50452)[0m     @     0x560af3434baf _PyEval_EvalCodeWithName
[2m[36m(pid=50452)[0m     @     0x560af3435643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50452)[0m     @     0x560af33aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50452)[0m     @     0x560af3434baf _PyEval_EvalCodeWithName
[2m[36m(pid=50452)[0m     @     0x560af3435643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50452)[0m     @     0x560af33aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50541)[0m     @     0x7f8afe7d64f5 at::Tensor::copy_()
[2m[36m(pid=50541)[0m     @     0x7f8b0447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50541)[0m     @     0x556f00b49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50541)[0m     @     0x556f00aa4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50541)[0m     @     0x556f00b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50541)[0m     @     0x556f00b30a20 method_vectorcall
[2m[36m(pid=50541)[0m     @     0x556f00aa4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50541)[0m     @     0x556f00b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50541)[0m     @     0x556f00b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50541)[0m     @     0x556f00aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50541)[0m     @     0x556f00b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50541)[0m     @     0x556f00b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50541)[0m     @     0x556f00aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50541)[0m     @     0x556f00b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50541)[0m     @     0x556f00b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50541)[0m     @     0x556f00aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50541)[0m     @     0x556f00b2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50541)[0m     @     0x556f00b30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50541)[0m     @     0x556f00aa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50448)[0m     @     0x7fb319f0c4f5 at::Tensor::copy_()
[2m[36m(pid=50448)[0m     @     0x7fb31ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50448)[0m     @     0x55b02bd1ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50448)[0m     @     0x55b02bc7ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50448)[0m     @     0x55b02bd05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50448)[0m     @     0x55b02bd06a20 method_vectorcall
[2m[36m(pid=50448)[0m     @     0x55b02bc7abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50448)[0m     @     0x55b02bd05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50448)[0m     @     0x55b02bd06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50448)[0m     @     0x55b02bc7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50448)[0m     @     0x55b02bd05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50448)[0m     @     0x55b02bd06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50448)[0m     @     0x55b02bc7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50448)[0m     @     0x55b02bd05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50448)[0m     @     0x55b02bd06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50448)[0m     @     0x55b02bc7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50448)[0m     @     0x55b02bd05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50448)[0m     @     0x55b02bd06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50448)[0m     @     0x55b02bc7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50524)[0m     @     0x7f45bf36d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50524)[0m     @     0x55c683ab3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50524)[0m     @     0x55c683a0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50524)[0m     @     0x55c683a99baf _PyEval_EvalCodeWithName
[2m[36m(pid=50524)[0m     @     0x55c683a9aa20 method_vectorcall
[2m[36m(pid=50524)[0m     @     0x55c683a0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50524)[0m     @     0x55c683a99baf _PyEval_EvalCodeWithName
[2m[36m(pid=50524)[0m     @     0x55c683a9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50524)[0m     @     0x55c683a0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50524)[0m     @     0x55c683a99baf _PyEval_EvalCodeWithName
[2m[36m(pid=50524)[0m     @     0x55c683a9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50524)[0m     @     0x55c683a0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50524)[0m     @     0x55c683a99baf _PyEval_EvalCodeWithName
[2m[36m(pid=50524)[0m     @     0x55c683a9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50524)[0m     @     0x55c683a0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50524)[0m     @     0x55c683a99baf _PyEval_EvalCodeWithName
[2m[36m(pid=50524)[0m     @     0x55c683a9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50524)[0m     @     0x55c683a0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50429)[0m     @     0x55ad90388baf _PyEval_EvalCodeWithName
[2m[36m(pid=50429)[0m     @     0x55ad90389643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50429)[0m     @     0x55ad902fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50429)[0m     @     0x55ad90388baf _PyEval_EvalCodeWithName
[2m[36m(pid=50429)[0m     @     0x55ad90389643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50429)[0m     @     0x55ad902fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50429)[0m     @     0x55ad90388baf _PyEval_EvalCodeWithName
[2m[36m(pid=50429)[0m     @     0x55ad90389643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50429)[0m     @     0x55ad902fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50429)[0m     @     0x55ad90388baf _PyEval_EvalCodeWithName
[2m[36m(pid=50429)[0m     @     0x55ad90389643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50429)[0m     @     0x55ad902fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50434)[0m     @     0x55c805b66baf _PyEval_EvalCodeWithName
[2m[36m(pid=50434)[0m     @     0x55c805b67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50434)[0m     @     0x55c805adc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x7edfb67e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50442)[0m     @     0x7f0c837884f5 at::Tensor::copy_()
[2m[36m(pid=50442)[0m     @     0x7f0c8983379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50442)[0m     @     0x5606811b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50442)[0m     @     0x56068110fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50442)[0m     @     0x56068119abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50442)[0m     @     0x56068119ba20 method_vectorcall
[2m[36m(pid=50442)[0m     @     0x56068110fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50442)[0m     @     0x56068119abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50442)[0m     @     0x56068119b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50442)[0m     @     0x560681110689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50442)[0m     @     0x56068119abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50442)[0m     @     0x56068119b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50442)[0m     @     0x560681110689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50442)[0m     @     0x56068119abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50442)[0m     @     0x56068119b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50442)[0m     @     0x560681110689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50442)[0m     @     0x56068119abaf _PyEval_EvalCodeWithName
[2m[36m(pid=50442)[0m     @     0x56068119b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50442)[0m     @     0x560681110689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50551)[0m     @     0x5613a94fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50551)[0m     @     0x5613a94fca20 method_vectorcall
[2m[36m(pid=50551)[0m     @     0x5613a9470bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50551)[0m     @     0x5613a94fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50551)[0m     @     0x5613a94fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50551)[0m     @     0x5613a9471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50551)[0m     @     0x5613a94fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50551)[0m     @     0x5613a94fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50551)[0m     @     0x5613a9471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50551)[0m     @     0x5613a94fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50551)[0m     @     0x5613a94fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50551)[0m     @     0x5613a9471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50551)[0m     @     0x5613a94fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50551)[0m     @     0x5613a94fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50551)[0m     @     0x5613a9471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50491)[0m     @     0x56501ea7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50491)[0m     @     0x56501ea7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50491)[0m     @     0x56501e9f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50491)[0m     @     0x56501ea7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50491)[0m     @     0x56501ea7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50491)[0m     @     0x56501e9f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50491)[0m     @     0x56501ea7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50491)[0m     @     0x56501ea7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50491)[0m     @     0x56501e9f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50540)[0m     @     0x7ef460a384f5 at::Tensor::copy_()
[2m[36m(pid=50540)[0m     @     0x7ef466ae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50540)[0m     @     0x564942de0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50540)[0m     @     0x564942d3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50540)[0m     @     0x564942dc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50540)[0m     @     0x564942dc7a20 method_vectorcall
[2m[36m(pid=50540)[0m     @     0x564942d3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50540)[0m     @     0x564942dc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50540)[0m     @     0x564942dc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50540)[0m     @     0x564942d3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50540)[0m     @     0x564942dc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50540)[0m     @     0x564942dc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50540)[0m     @     0x564942d3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50540)[0m     @     0x564942dc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50540)[0m     @     0x564942dc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50540)[0m     @     0x564942d3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50540)[0m     @     0x564942dc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=50540)[0m     @     0x564942dc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50540)[0m     @     0x564942d3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50537)[0m     @     0x55ccff561baf _PyEval_EvalCodeWithName
[2m[36m(pid=50537)[0m     @     0x55ccff562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50537)[0m     @     0x55ccff4d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50537)[0m     @     0x55ccff561baf _PyEval_EvalCodeWithName
[2m[36m(pid=50537)[0m     @     0x55ccff562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50537)[0m     @     0x55ccff4d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50537)[0m     @     0x55ccff561baf _PyEval_EvalCodeWithName
[2m[36m(pid=50537)[0m     @     0x55ccff562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50537)[0m     @     0x55ccff4d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50433)[0m     @     0x55ad4c659baf _PyEval_EvalCodeWithName
[2m[36m(pid=50433)[0m     @     0x55ad4c65a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50433)[0m     @     0x55ad4c5cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50433)[0m     @     0x55ad4c659baf _PyEval_EvalCodeWithName
[2m[36m(pid=50433)[0m     @     0x55ad4c65a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50433)[0m     @     0x55ad4c5cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50512)[0m     @     0x7ef99b6b64f5 at::Tensor::copy_()
[2m[36m(pid=50512)[0m     @     0x7ef9a176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50512)[0m     @     0x5555faeb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50512)[0m     @     0x5555fae12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50512)[0m     @     0x5555fae9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50512)[0m     @     0x5555fae9ea20 method_vectorcall
[2m[36m(pid=50512)[0m     @     0x5555fae12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50512)[0m     @     0x5555fae9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50512)[0m     @     0x5555fae9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50512)[0m     @     0x5555fae13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50512)[0m     @     0x5555fae9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50512)[0m     @     0x5555fae9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50512)[0m     @     0x5555fae13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50512)[0m     @     0x5555fae9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50512)[0m     @     0x5555fae9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50512)[0m     @     0x5555fae13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50512)[0m     @     0x5555fae9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50512)[0m     @     0x5555fae9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50512)[0m     @     0x5555fae13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50428)[0m     @     0x7f6dd11f54f5 at::Tensor::copy_()
[2m[36m(pid=50428)[0m     @     0x7f6dd72a079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50428)[0m     @     0x555eddfd1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50428)[0m     @     0x555eddf2cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50428)[0m     @     0x555eddfb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50428)[0m     @     0x555eddfb8a20 method_vectorcall
[2m[36m(pid=50428)[0m     @     0x555eddf2cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50428)[0m     @     0x555eddfb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50428)[0m     @     0x555eddfb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50428)[0m     @     0x555eddf2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50428)[0m     @     0x555eddfb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50428)[0m     @     0x555eddfb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50428)[0m     @     0x555eddf2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50428)[0m     @     0x555eddfb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50428)[0m     @     0x555eddfb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50428)[0m     @     0x555eddf2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50428)[0m     @     0x555eddfb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50428)[0m     @     0x555eddfb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50428)[0m     @     0x555eddf2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50490)[0m     @     0x7fa1c71e04f5 at::Tensor::copy_()
[2m[36m(pid=50490)[0m     @     0x7fa1cd28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50490)[0m     @     0x55c545be3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50490)[0m     @     0x55c545b3eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50490)[0m     @     0x55c545bc9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50490)[0m     @     0x55c545bcaa20 method_vectorcall
[2m[36m(pid=50490)[0m     @     0x55c545b3ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50490)[0m     @     0x55c545bc9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50490)[0m     @     0x55c545bca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50490)[0m     @     0x55c545b3f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50490)[0m     @     0x55c545bc9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50490)[0m     @     0x55c545bca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50490)[0m     @     0x55c545b3f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50490)[0m     @     0x55c545bc9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50490)[0m     @     0x55c545bca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50490)[0m     @     0x55c545b3f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50490)[0m     @     0x55c545bc9baf _PyEval_EvalCodeWithName
[2m[36m(pid=50490)[0m     @     0x55c545bca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50490)[0m     @     0x55c545b3f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50437)[0m     @     0x7f72a3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50437)[0m     @     0x56516a680fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50437)[0m     @     0x56516a5dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50437)[0m     @     0x56516a666baf _PyEval_EvalCodeWithName
[2m[36m(pid=50437)[0m     @     0x56516a667a20 method_vectorcall
[2m[36m(pid=50437)[0m     @     0x56516a5dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50437)[0m     @     0x56516a666baf _PyEval_EvalCodeWithName
[2m[36m(pid=50437)[0m     @     0x56516a667643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50437)[0m     @     0x56516a5dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50437)[0m     @     0x56516a666baf _PyEval_EvalCodeWithName
[2m[36m(pid=50437)[0m     @     0x56516a667643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50437)[0m     @     0x56516a5dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50437)[0m     @     0x56516a666baf _PyEval_EvalCodeWithName
[2m[36m(pid=50437)[0m     @     0x56516a667643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50437)[0m     @     0x56516a5dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50437)[0m     @     0x56516a666baf _PyEval_EvalCodeWithName
[2m[36m(pid=50437)[0m     @     0x56516a667643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50437)[0m     @     0x56516a5dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50439)[0m     @     0x7fb61ca9279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50439)[0m     @     0x5593f3d1ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50439)[0m     @     0x5593f3c7ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50439)[0m     @     0x5593f3d05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50439)[0m     @     0x5593f3d06a20 method_vectorcall
[2m[36m(pid=50439)[0m     @     0x5593f3c7abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50439)[0m     @     0x5593f3d05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50439)[0m     @     0x5593f3d06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50439)[0m     @     0x5593f3c7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50439)[0m     @     0x5593f3d05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50439)[0m     @     0x5593f3d06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50439)[0m     @     0x5593f3c7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50439)[0m     @     0x5593f3d05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50439)[0m     @     0x5593f3d06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50439)[0m     @     0x5593f3c7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50439)[0m     @     0x5593f3d05baf _PyEval_EvalCodeWithName
[2m[36m(pid=50439)[0m     @     0x5593f3d06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50439)[0m     @     0x5593f3c7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50453)[0m     @     0x559129182689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50453)[0m     @     0x55912920cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50453)[0m     @     0x55912920d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50453)[0m     @     0x559129182689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50453)[0m     @     0x55912920cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50453)[0m     @     0x55912920d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50453)[0m     @     0x559129182689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50453)[0m     @     0x55912920cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50453)[0m     @     0x55912920d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50453)[0m     @     0x559129182689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50440)[0m     @     0x7f4ef2b618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50440)[0m     @     0x7f4ef068e4f5 at::Tensor::copy_()
[2m[36m(pid=50440)[0m     @     0x7f4ef673979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50440)[0m     @     0x563ab8bfbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50440)[0m     @     0x563ab8b56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50440)[0m     @     0x563ab8be1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50440)[0m     @     0x563ab8be2a20 method_vectorcall
[2m[36m(pid=50440)[0m     @     0x563ab8b56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50440)[0m     @     0x563ab8be1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50440)[0m     @     0x563ab8be2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50440)[0m     @     0x563ab8b57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50440)[0m     @     0x563ab8be1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50440)[0m     @     0x563ab8be2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50440)[0m     @     0x563ab8b57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50440)[0m     @     0x563ab8be1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50440)[0m     @     0x563ab8be2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50440)[0m     @     0x563ab8b57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50440)[0m     @     0x563ab8be1baf _PyEval_EvalCodeWithName
[2m[36m(pid=50440)[0m     @     0x563ab8be2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50440)[0m     @     0x563ab8b57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50501)[0m     @     0x7f723258a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50501)[0m     @     0x7f72300b74f5 at::Tensor::copy_()
[2m[36m(pid=50501)[0m     @     0x7f723616279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50501)[0m     @     0x558c757f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50501)[0m     @     0x558c75754b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50501)[0m     @     0x558c757dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50501)[0m     @     0x558c757e0a20 method_vectorcall
[2m[36m(pid=50501)[0m     @     0x558c75754bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50501)[0m     @     0x558c757dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50501)[0m     @     0x558c757e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50501)[0m     @     0x558c75755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50501)[0m     @     0x558c757dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50501)[0m     @     0x558c757e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50501)[0m     @     0x558c75755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50501)[0m     @     0x558c757dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50501)[0m     @     0x558c757e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50501)[0m     @     0x558c75755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50501)[0m     @     0x558c757dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50501)[0m     @     0x558c757e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50501)[0m     @     0x558c75755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50514)[0m     @     0x7f9369cfb4f5 at::Tensor::copy_()
[2m[36m(pid=50514)[0m     @     0x7f936c1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50514)[0m     @     0x7f9369cfb4f5 at::Tensor::copy_()
[2m[36m(pid=50514)[0m     @     0x7f936fda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50514)[0m     @     0x55a85abf7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50514)[0m     @     0x55a85ab52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50514)[0m     @     0x55a85abddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50514)[0m     @     0x55a85abdea20 method_vectorcall
[2m[36m(pid=50514)[0m     @     0x55a85ab52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50514)[0m     @     0x55a85abddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50514)[0m     @     0x55a85abde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50514)[0m     @     0x55a85ab53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50514)[0m     @     0x55a85abddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50514)[0m     @     0x55a85abde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50514)[0m     @     0x55a85ab53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50514)[0m     @     0x55a85abddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50514)[0m     @     0x55a85abde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50514)[0m     @     0x55a85ab53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50514)[0m     @     0x55a85abddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50514)[0m     @     0x55a85abde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50514)[0m     @     0x55a85ab53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50510)[0m     @     0x7ed3703e64f5 at::Tensor::copy_()
[2m[36m(pid=50510)[0m     @     0x7ed37649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50510)[0m     @     0x55c072f11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50510)[0m     @     0x55c072e6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50510)[0m     @     0x55c072ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50510)[0m     @     0x55c072ef8a20 method_vectorcall
[2m[36m(pid=50510)[0m     @     0x55c072e6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50510)[0m     @     0x55c072ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50510)[0m     @     0x55c072ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50510)[0m     @     0x55c072e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50510)[0m     @     0x55c072ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50510)[0m     @     0x55c072ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50510)[0m     @     0x55c072e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50510)[0m     @     0x55c072ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50510)[0m     @     0x55c072ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50510)[0m     @     0x55c072e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50510)[0m     @     0x55c072ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=50510)[0m     @     0x55c072ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50510)[0m     @     0x55c072e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50556)[0m     @     0x7f0042eec4f5 at::Tensor::copy_()
[2m[36m(pid=50556)[0m     @     0x7f0048f9779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50556)[0m     @     0x55c000a9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50556)[0m     @     0x55c0009f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50556)[0m     @     0x55c000a84baf _PyEval_EvalCodeWithName
[2m[36m(pid=50556)[0m     @     0x55c000a85a20 method_vectorcall
[2m[36m(pid=50556)[0m     @     0x55c0009f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50556)[0m     @     0x55c000a84baf _PyEval_EvalCodeWithName
[2m[36m(pid=50556)[0m     @     0x55c000a85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50556)[0m     @     0x55c0009fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50556)[0m     @     0x55c000a84baf _PyEval_EvalCodeWithName
[2m[36m(pid=50556)[0m     @     0x55c000a85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50556)[0m     @     0x55c0009fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50556)[0m     @     0x55c000a84baf _PyEval_EvalCodeWithName
[2m[36m(pid=50556)[0m     @     0x55c000a85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50556)[0m     @     0x55c0009fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50556)[0m     @     0x55c000a84baf _PyEval_EvalCodeWithName
[2m[36m(pid=50556)[0m     @     0x55c000a85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50556)[0m     @     0x55c0009fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x7f4b48ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=50444)[0m     @     0x7f4b4814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=50444)[0m     @     0x7f4b48148388 at::native::copy_impl()
[2m[36m(pid=50444)[0m     @     0x7f4b4814a5a4 at::native::copy_()
[2m[36m(pid=50485)[0m     @     0x55670724f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50435)[0m     @     0x7f2116ca54f5 at::Tensor::copy_()
[2m[36m(pid=50435)[0m     @     0x7f211cd5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50435)[0m     @     0x55a0a92f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50435)[0m     @     0x55a0a924db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50435)[0m     @     0x55a0a92d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50435)[0m     @     0x55a0a92d9a20 method_vectorcall
[2m[36m(pid=50435)[0m     @     0x55a0a924dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50435)[0m     @     0x55a0a92d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50435)[0m     @     0x55a0a92d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50435)[0m     @     0x55a0a924e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50435)[0m     @     0x55a0a92d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50435)[0m     @     0x55a0a92d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50435)[0m     @     0x55a0a924e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50435)[0m     @     0x55a0a92d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50435)[0m     @     0x55a0a92d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50435)[0m     @     0x55a0a924e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50435)[0m     @     0x55a0a92d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=50435)[0m     @     0x55a0a92d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50435)[0m     @     0x55a0a924e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x7fcb9c8354f5 at::Tensor::copy_()
[2m[36m(pid=50520)[0m     @     0x7fcba28e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50520)[0m     @     0x55fafe54efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50520)[0m     @     0x55fafe4a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x55fafe534baf _PyEval_EvalCodeWithName
[2m[36m(pid=50520)[0m     @     0x55fafe535a20 method_vectorcall
[2m[36m(pid=50520)[0m     @     0x55fafe4a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x55fafe534baf _PyEval_EvalCodeWithName
[2m[36m(pid=50520)[0m     @     0x55fafe535643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50520)[0m     @     0x55fafe4aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x55fafe534baf _PyEval_EvalCodeWithName
[2m[36m(pid=50520)[0m     @     0x55fafe535643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50520)[0m     @     0x55fafe4aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x55fafe534baf _PyEval_EvalCodeWithName
[2m[36m(pid=50520)[0m     @     0x55fafe535643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50520)[0m     @     0x55fafe4aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50520)[0m     @     0x55fafe534baf _PyEval_EvalCodeWithName
[2m[36m(pid=50520)[0m     @     0x55fafe535643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50520)[0m     @     0x55fafe4aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50519)[0m     @     0x7f0a959e54f5 at::Tensor::copy_()
[2m[36m(pid=50519)[0m     @     0x7f0a9ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50519)[0m     @     0x556ec75dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50519)[0m     @     0x556ec7537b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50519)[0m     @     0x556ec75c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=50519)[0m     @     0x556ec75c3a20 method_vectorcall
[2m[36m(pid=50519)[0m     @     0x556ec7537bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50519)[0m     @     0x556ec75c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=50519)[0m     @     0x556ec75c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50519)[0m     @     0x556ec7538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50519)[0m     @     0x556ec75c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=50519)[0m     @     0x556ec75c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50519)[0m     @     0x556ec7538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50519)[0m     @     0x556ec75c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=50519)[0m     @     0x556ec75c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50519)[0m     @     0x556ec7538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50519)[0m     @     0x556ec75c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=50519)[0m     @     0x556ec75c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50519)[0m     @     0x556ec7538689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50446)[0m     @     0x7f22379af5a4 at::native::copy_()
[2m[36m(pid=50446)[0m     @     0x7f223809a4f5 at::Tensor::copy_()
[2m[36m(pid=50446)[0m     @     0x7f223a56d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50456)[0m     @     0x55698c90e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50456)[0m     @     0x55698c883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50456)[0m     @     0x55698c90dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50456)[0m     @     0x55698c90e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50456)[0m     @     0x55698c883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x7eee1738c5a4 at::native::copy_()
[2m[36m(pid=50518)[0m     @     0x7eee17a774f5 at::Tensor::copy_()
[2m[36m(pid=50493)[0m     @     0x7f921a8415a4 at::native::copy_()
[2m[36m(pid=50493)[0m     @     0x7f921af2c4f5 at::Tensor::copy_()
[2m[36m(pid=50493)[0m     @     0x7f921d3ff8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50499)[0m     @     0x7edfb430d4f5 at::Tensor::copy_()
[2m[36m(pid=50499)[0m     @     0x7edfba3b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50499)[0m     @     0x558a5b2e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50499)[0m     @     0x558a5b243b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x558a5b2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50499)[0m     @     0x558a5b2cfa20 method_vectorcall
[2m[36m(pid=50499)[0m     @     0x558a5b243bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x558a5b2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50499)[0m     @     0x558a5b2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50499)[0m     @     0x558a5b244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x558a5b2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50499)[0m     @     0x558a5b2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50499)[0m     @     0x558a5b244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x558a5b2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50499)[0m     @     0x558a5b2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50499)[0m     @     0x558a5b244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50499)[0m     @     0x558a5b2cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=50499)[0m     @     0x558a5b2cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50499)[0m     @     0x558a5b244689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x7f4b488354f5 at::Tensor::copy_()
[2m[36m(pid=50444)[0m     @     0x7f4b4ad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50446)[0m     @     0x7f223809a4f5 at::Tensor::copy_()
[2m[36m(pid=50446)[0m     @     0x7f223e14579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50446)[0m     @     0x5590dc306fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50446)[0m     @     0x5590dc261b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50446)[0m     @     0x5590dc2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50446)[0m     @     0x5590dc2eda20 method_vectorcall
[2m[36m(pid=50446)[0m     @     0x5590dc261bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50446)[0m     @     0x5590dc2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50446)[0m     @     0x5590dc2ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50446)[0m     @     0x5590dc262689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50446)[0m     @     0x5590dc2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50446)[0m     @     0x5590dc2ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50446)[0m     @     0x5590dc262689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50446)[0m     @     0x5590dc2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50446)[0m     @     0x5590dc2ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50446)[0m     @     0x5590dc262689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50446)[0m     @     0x5590dc2ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=50446)[0m     @     0x5590dc2ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50446)[0m     @     0x5590dc262689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x7eee19f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=50518)[0m     @     0x7eee17a774f5 at::Tensor::copy_()
[2m[36m(pid=50518)[0m     @     0x7eee1db2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50518)[0m     @     0x55a0ce8cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50518)[0m     @     0x55a0ce825b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x55a0ce8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50518)[0m     @     0x55a0ce8b1a20 method_vectorcall
[2m[36m(pid=50518)[0m     @     0x55a0ce825bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x55a0ce8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50518)[0m     @     0x55a0ce8b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50518)[0m     @     0x55a0ce826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x55a0ce8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50518)[0m     @     0x55a0ce8b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50518)[0m     @     0x55a0ce826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x55a0ce8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50518)[0m     @     0x55a0ce8b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50518)[0m     @     0x55a0ce826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50518)[0m     @     0x55a0ce8b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=50518)[0m     @     0x55a0ce8b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50518)[0m     @     0x55a0ce826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50493)[0m     @     0x7f921af2c4f5 at::Tensor::copy_()
[2m[36m(pid=50493)[0m     @     0x7f9220fd779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50493)[0m     @     0x5648cefeffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50493)[0m     @     0x5648cef4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50493)[0m     @     0x5648cefd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50493)[0m     @     0x5648cefd6a20 method_vectorcall
[2m[36m(pid=50493)[0m     @     0x5648cef4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50493)[0m     @     0x5648cefd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50493)[0m     @     0x5648cefd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50493)[0m     @     0x5648cef4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50493)[0m     @     0x5648cefd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50493)[0m     @     0x5648cefd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50493)[0m     @     0x5648cef4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50493)[0m     @     0x5648cefd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50493)[0m     @     0x5648cefd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50493)[0m     @     0x5648cef4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50493)[0m     @     0x5648cefd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=50493)[0m     @     0x5648cefd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50493)[0m     @     0x5648cef4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x7f4b488354f5 at::Tensor::copy_()
[2m[36m(pid=50444)[0m     @     0x7f4b4e8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=50444)[0m     @     0x557b045affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=50444)[0m     @     0x557b0450ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x557b04595baf _PyEval_EvalCodeWithName
[2m[36m(pid=50444)[0m     @     0x557b04596a20 method_vectorcall
[2m[36m(pid=50444)[0m     @     0x557b0450abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x557b04595baf _PyEval_EvalCodeWithName
[2m[36m(pid=50444)[0m     @     0x557b04596643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50444)[0m     @     0x557b0450b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x557b04595baf _PyEval_EvalCodeWithName
[2m[36m(pid=50444)[0m     @     0x557b04596643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50444)[0m     @     0x557b0450b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x557b04595baf _PyEval_EvalCodeWithName
[2m[36m(pid=50444)[0m     @     0x557b04596643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50444)[0m     @     0x557b0450b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=50444)[0m     @     0x557b04595baf _PyEval_EvalCodeWithName
[2m[36m(pid=50444)[0m     @     0x557b04596643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=50444)[0m     @     0x557b0450b689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:46:02,901	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
[2m[36m(pid=50544)[0m E1105 10:46:02.902523 50544 51709 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=50544)[0m E1105 10:46:02.902817 50544 51709 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:46:02.897678 50387 50387 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:46:02,910	ERROR trial_runner.py:567 -- Trial PPO_jss_env_1524f_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=50544, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 24.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1524f_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1524f_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1524f_00000_0_2020-11-05_10-45-55/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1524f_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1524f_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1524f_00000_0_2020-11-05_10-45-55/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:46:02,925	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:46:02,925	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:46:02,925	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:46:02,925	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 10:46:02,936	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:46:02,936	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:46:02,936	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:46:02,937	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_1524f_00000])
2020-11-05 10:46:02,948	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
