2020-11-05 10:51:45,161	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_e639a_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=67688)[0m 2020-11-05 10:51:47,984	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=67688)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=67688)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=67688)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=67688)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=67688)[0m 
[2m[36m(pid=67688)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=67641)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67641)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67641)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67641)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67641)[0m *** SIGSEGV (@0x0) received by PID 67641 (TID 0x7fb515b38700) from PID 0; stack trace: ***
[2m[36m(pid=67641)[0m     @     0x7fb515711390 (unknown)
[2m[36m(pid=67641)[0m     @     0x7f86156b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67641)[0m     @     0x7f8614ddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67641)[0m     @     0x7f8614de28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67641)[0m     @     0x7f8614de2ad3 at::TensorIterator::for_each()
[2m[36m(pid=67661)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67661)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67661)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67661)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67661)[0m *** SIGSEGV (@0x0) received by PID 67661 (TID 0x7f51630e0700) from PID 0; stack trace: ***
[2m[36m(pid=67661)[0m     @     0x7f5162cb9390 (unknown)
[2m[36m(pid=67661)[0m     @     0x7f2262a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67661)[0m     @     0x7f226214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67661)[0m     @     0x7f226214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67689)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67689)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67689)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67689)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67689)[0m *** SIGSEGV (@0x0) received by PID 67689 (TID 0x7efe549a3700) from PID 0; stack trace: ***
[2m[36m(pid=67689)[0m     @     0x7efe5457c390 (unknown)
[2m[36m(pid=67689)[0m     @     0x7ecf54521f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67689)[0m     @     0x7ecf53c4c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67633)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67633)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67633)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67633)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67633)[0m *** SIGSEGV (@0x0) received by PID 67633 (TID 0x7f88a5da9700) from PID 0; stack trace: ***
[2m[36m(pid=67633)[0m     @     0x7f88a5982390 (unknown)
[2m[36m(pid=67633)[0m     @     0x7f59a57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67633)[0m     @     0x7f59a4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67667)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67667)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67667)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67667)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67667)[0m *** SIGSEGV (@0x0) received by PID 67667 (TID 0x7f066dc8f700) from PID 0; stack trace: ***
[2m[36m(pid=67667)[0m     @     0x7f066d868390 (unknown)
[2m[36m(pid=67667)[0m     @     0x7ed76d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67667)[0m     @     0x7ed76cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67667)[0m     @     0x7ed76cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67663)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67663)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67663)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67663)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67663)[0m *** SIGSEGV (@0x0) received by PID 67663 (TID 0x7f23283ae700) from PID 0; stack trace: ***
[2m[36m(pid=67663)[0m     @     0x7f2327f87390 (unknown)
[2m[36m(pid=67663)[0m     @     0x7ef427e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67663)[0m     @     0x7ef4275367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67663)[0m     @     0x7ef4275398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67686)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67686)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67686)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67686)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67686)[0m *** SIGSEGV (@0x0) received by PID 67686 (TID 0x7fd8121f2700) from PID 0; stack trace: ***
[2m[36m(pid=67686)[0m     @     0x7fd811dcb390 (unknown)
[2m[36m(pid=67686)[0m     @     0x7fa911d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67686)[0m     @     0x7fa91147d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67686)[0m     @     0x7fa9114808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67637)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67637)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67637)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67637)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67637)[0m *** SIGSEGV (@0x0) received by PID 67637 (TID 0x7f4635adc700) from PID 0; stack trace: ***
[2m[36m(pid=67637)[0m     @     0x7f46356b5390 (unknown)
[2m[36m(pid=67637)[0m     @     0x7f1735647f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67637)[0m     @     0x7f1734d727db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67647)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67647)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67647)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67647)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67647)[0m *** SIGSEGV (@0x0) received by PID 67647 (TID 0x7f19fe128700) from PID 0; stack trace: ***
[2m[36m(pid=67647)[0m     @     0x7f19fdd01390 (unknown)
[2m[36m(pid=67647)[0m     @     0x7eeafdc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67647)[0m     @     0x7eeafd3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67647)[0m     @     0x7eeafd33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67664)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67664)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67664)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67664)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67664)[0m *** SIGSEGV (@0x0) received by PID 67664 (TID 0x7fcf5bc2d700) from PID 0; stack trace: ***
[2m[36m(pid=67664)[0m     @     0x7fcf5b806390 (unknown)
[2m[36m(pid=67664)[0m     @     0x7fa05b78ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67664)[0m     @     0x7fa05aeb97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67664)[0m     @     0x7fa05aebc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67692)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67692)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67692)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67692)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67692)[0m *** SIGSEGV (@0x0) received by PID 67692 (TID 0x7f49c99af700) from PID 0; stack trace: ***
[2m[36m(pid=67692)[0m     @     0x7f49c9588390 (unknown)
[2m[36m(pid=67692)[0m     @     0x7f1ac94e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67692)[0m     @     0x7f1ac8c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67692)[0m     @     0x7f1ac8c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67645)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67645)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67645)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67645)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67645)[0m *** SIGSEGV (@0x0) received by PID 67645 (TID 0x7f7b4fdcb700) from PID 0; stack trace: ***
[2m[36m(pid=67645)[0m     @     0x7f7b4f9a4390 (unknown)
[2m[36m(pid=67645)[0m     @     0x7f4c4f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67645)[0m     @     0x7f4c4f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67645)[0m     @     0x7f4c4f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67631)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67631)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67631)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67631)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67631)[0m *** SIGSEGV (@0x0) received by PID 67631 (TID 0x7fa2e1481700) from PID 0; stack trace: ***
[2m[36m(pid=67631)[0m     @     0x7fa2e105a390 (unknown)
[2m[36m(pid=67631)[0m     @     0x7f73e0fe3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67631)[0m     @     0x7f73e070e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67631)[0m     @     0x7f73e07118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67665)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67665)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67665)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67665)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67665)[0m *** SIGSEGV (@0x0) received by PID 67665 (TID 0x7f3273cdd700) from PID 0; stack trace: ***
[2m[36m(pid=67665)[0m     @     0x7f32738b6390 (unknown)
[2m[36m(pid=67665)[0m     @     0x7f037384cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67665)[0m     @     0x7f0372f777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67665)[0m     @     0x7f0372f7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67683)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67683)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67683)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67683)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67683)[0m *** SIGSEGV (@0x0) received by PID 67683 (TID 0x7fe9df848700) from PID 0; stack trace: ***
[2m[36m(pid=67683)[0m     @     0x7fe9df421390 (unknown)
[2m[36m(pid=67683)[0m     @     0x7fbadf229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67683)[0m     @     0x7fbade9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67683)[0m     @     0x7fbade9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67676)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67676)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67676)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67676)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67676)[0m *** SIGSEGV (@0x0) received by PID 67676 (TID 0x7f1347a1e700) from PID 0; stack trace: ***
[2m[36m(pid=67676)[0m     @     0x7f13475f7390 (unknown)
[2m[36m(pid=67676)[0m     @     0x7ee44758df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67676)[0m     @     0x7ee446cb87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67676)[0m     @     0x7ee446cbb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67657)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67657)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67657)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67657)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67657)[0m *** SIGSEGV (@0x0) received by PID 67657 (TID 0x7fb38d206700) from PID 0; stack trace: ***
[2m[36m(pid=67657)[0m     @     0x7fb38cddf390 (unknown)
[2m[36m(pid=67657)[0m     @     0x7f848cd80f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67657)[0m     @     0x7f848c4ab7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67657)[0m     @     0x7f848c4ae8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67657)[0m     @     0x7f848c4aead3 at::TensorIterator::for_each()
[2m[36m(pid=67657)[0m     @     0x7f848c4aed91 at::TensorIterator::for_each()
[2m[36m(pid=67657)[0m     @     0x7f848cd91b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67657)[0m     @     0x7f848cdb4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67641)[0m     @     0x7f8614de2d91 at::TensorIterator::for_each()
[2m[36m(pid=67641)[0m     @     0x7f86156c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67641)[0m     @     0x7f86156e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67641)[0m     @     0x7f8614b8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67641)[0m     @     0x7f8614b88388 at::native::copy_impl()
[2m[36m(pid=67661)[0m     @     0x7f226214fad3 at::TensorIterator::for_each()
[2m[36m(pid=67661)[0m     @     0x7f226214fd91 at::TensorIterator::for_each()
[2m[36m(pid=67661)[0m     @     0x7f2262a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67661)[0m     @     0x7f2262a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67661)[0m     @     0x7f2261ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67661)[0m     @     0x7f2261ef5388 at::native::copy_impl()
[2m[36m(pid=67689)[0m     @     0x7ecf53c4f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67689)[0m     @     0x7ecf53c4fad3 at::TensorIterator::for_each()
[2m[36m(pid=67689)[0m     @     0x7ecf53c4fd91 at::TensorIterator::for_each()
[2m[36m(pid=67689)[0m     @     0x7ecf54532b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67689)[0m     @     0x7ecf54555c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67648)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67648)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67648)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67633)[0m     @     0x7f59a4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67633)[0m     @     0x7f59a4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=67633)[0m     @     0x7f59a4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=67633)[0m     @     0x7f59a580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67633)[0m     @     0x7f59a582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67667)[0m     @     0x7ed76cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=67667)[0m     @     0x7ed76cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=67667)[0m     @     0x7ed76d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67667)[0m     @     0x7ed76d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67667)[0m     @     0x7ed76cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67667)[0m     @     0x7ed76cccd388 at::native::copy_impl()
[2m[36m(pid=67663)[0m     @     0x7ef427539ad3 at::TensorIterator::for_each()
[2m[36m(pid=67663)[0m     @     0x7ef427539d91 at::TensorIterator::for_each()
[2m[36m(pid=67663)[0m     @     0x7ef427e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67663)[0m     @     0x7ef427e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67663)[0m     @     0x7ef4272e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67663)[0m     @     0x7ef4272df388 at::native::copy_impl()
[2m[36m(pid=67581)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67581)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67581)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67672)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67672)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67672)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67599)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67599)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67599)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67578)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67578)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67578)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67635)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67635)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67635)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67635)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67635)[0m *** SIGSEGV (@0x0) received by PID 67635 (TID 0x7f6725998700) from PID 0; stack trace: ***
[2m[36m(pid=67640)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67640)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67640)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67686)[0m     @     0x7fa911480ad3 at::TensorIterator::for_each()
[2m[36m(pid=67686)[0m     @     0x7fa911480d91 at::TensorIterator::for_each()
[2m[36m(pid=67686)[0m     @     0x7fa911d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67686)[0m     @     0x7fa911d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67686)[0m     @     0x7fa911228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67686)[0m     @     0x7fa911226388 at::native::copy_impl()
[2m[36m(pid=67637)[0m     @     0x7f1734d758f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67637)[0m     @     0x7f1734d75ad3 at::TensorIterator::for_each()
[2m[36m(pid=67637)[0m     @     0x7f1734d75d91 at::TensorIterator::for_each()
[2m[36m(pid=67637)[0m     @     0x7f1735658b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67637)[0m     @     0x7f173567bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67647)[0m     @     0x7eeafd33bad3 at::TensorIterator::for_each()
[2m[36m(pid=67647)[0m     @     0x7eeafd33bd91 at::TensorIterator::for_each()
[2m[36m(pid=67647)[0m     @     0x7eeafdc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67647)[0m     @     0x7eeafdc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67647)[0m     @     0x7eeafd0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67647)[0m     @     0x7eeafd0e1388 at::native::copy_impl()
[2m[36m(pid=67664)[0m     @     0x7fa05aebcad3 at::TensorIterator::for_each()
[2m[36m(pid=67664)[0m     @     0x7fa05aebcd91 at::TensorIterator::for_each()
[2m[36m(pid=67664)[0m     @     0x7fa05b79fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67664)[0m     @     0x7fa05b7c2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67664)[0m     @     0x7fa05ac64a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67664)[0m     @     0x7fa05ac62388 at::native::copy_impl()
[2m[36m(pid=67692)[0m     @     0x7f1ac8c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=67692)[0m     @     0x7f1ac8c11d91 at::TensorIterator::for_each()
[2m[36m(pid=67692)[0m     @     0x7f1ac94f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67692)[0m     @     0x7f1ac9517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67692)[0m     @     0x7f1ac89b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67692)[0m     @     0x7f1ac89b7388 at::native::copy_impl()
[2m[36m(pid=67658)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67658)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67658)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67622)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67622)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67622)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67622)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67622)[0m *** SIGSEGV (@0x0) received by PID 67622 (TID 0x7fb46a2e6700) from PID 0; stack trace: ***
[2m[36m(pid=67649)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67649)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67649)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67645)[0m     @     0x7f4c4f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=67645)[0m     @     0x7f4c4f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=67645)[0m     @     0x7f4c4f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67645)[0m     @     0x7f4c4f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67645)[0m     @     0x7f4c4edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67646)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67631)[0m     @     0x7f73e0711ad3 at::TensorIterator::for_each()
[2m[36m(pid=67631)[0m     @     0x7f73e0711d91 at::TensorIterator::for_each()
[2m[36m(pid=67631)[0m     @     0x7f73e0ff4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67631)[0m     @     0x7f73e1017c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67631)[0m     @     0x7f73e04b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67594)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67594)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67594)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67644)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67644)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67644)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67644)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67665)[0m     @     0x7f0372f7aad3 at::TensorIterator::for_each()
[2m[36m(pid=67665)[0m     @     0x7f0372f7ad91 at::TensorIterator::for_each()
[2m[36m(pid=67665)[0m     @     0x7f037385db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67665)[0m     @     0x7f0373880c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67665)[0m     @     0x7f0372d22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67665)[0m     @     0x7f0372d20388 at::native::copy_impl()
[2m[36m(pid=67568)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67568)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67568)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67652)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67652)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67652)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67654)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67654)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67654)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67569)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67569)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67569)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67569)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67569)[0m *** SIGSEGV (@0x0) received by PID 67569 (TID 0x7f65278ae700) from PID 0; stack trace: ***
[2m[36m(pid=67642)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67642)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67642)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67591)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67591)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67591)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67591)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67591)[0m *** SIGSEGV (@0x0) received by PID 67591 (TID 0x7fb4c55ac700) from PID 0; stack trace: ***
[2m[36m(pid=67580)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67580)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67580)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67596)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67596)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67596)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67596)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67596)[0m *** SIGSEGV (@0x0) received by PID 67596 (TID 0x7fa65fdfd700) from PID 0; stack trace: ***
[2m[36m(pid=67691)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67691)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67691)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67683)[0m     @     0x7fbade957ad3 at::TensorIterator::for_each()
[2m[36m(pid=67683)[0m     @     0x7fbade957d91 at::TensorIterator::for_each()
[2m[36m(pid=67683)[0m     @     0x7fbadf23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67683)[0m     @     0x7fbadf25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67683)[0m     @     0x7fbade6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67683)[0m     @     0x7fbade6fd388 at::native::copy_impl()
[2m[36m(pid=67651)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67651)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67651)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67651)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67651)[0m *** SIGSEGV (@0x0) received by PID 67651 (TID 0x7ff9db221700) from PID 0; stack trace: ***
[2m[36m(pid=67651)[0m     @     0x7ff9dadfa390 (unknown)
[2m[36m(pid=67651)[0m     @     0x7fcadad83f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67626)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67571)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67571)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67571)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67676)[0m     @     0x7ee446cbbad3 at::TensorIterator::for_each()
[2m[36m(pid=67676)[0m     @     0x7ee446cbbd91 at::TensorIterator::for_each()
[2m[36m(pid=67676)[0m     @     0x7ee44759eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67676)[0m     @     0x7ee4475c1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67676)[0m     @     0x7ee446a63a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67676)[0m     @     0x7ee446a61388 at::native::copy_impl()
[2m[36m(pid=67657)[0m     @     0x7f848c256a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67657)[0m     @     0x7f848c254388 at::native::copy_impl()
[2m[36m(pid=67657)[0m     @     0x7f848c2565a4 at::native::copy_()
[2m[36m(pid=67657)[0m     @     0x7f848c9414f5 at::Tensor::copy_()
[2m[36m(pid=67657)[0m     @     0x7f848ee148de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67570)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67570)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67570)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67582)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67582)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67582)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67582)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67582)[0m *** SIGSEGV (@0x0) received by PID 67582 (TID 0x7f93dd4b7700) from PID 0; stack trace: ***
[2m[36m(pid=67586)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67586)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67586)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67586)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67586)[0m *** SIGSEGV (@0x0) received by PID 67586 (TID 0x7f0b16fe2700) from PID 0; stack trace: ***
[2m[36m(pid=67566)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67566)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67566)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67619)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67619)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67619)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67587)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67587)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67587)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67628)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67628)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67628)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67634)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67634)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67634)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67634)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67634)[0m *** SIGSEGV (@0x0) received by PID 67634 (TID 0x7fdd6e086700) from PID 0; stack trace: ***
[2m[36m(pid=67679)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67679)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67679)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67624)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67583)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67583)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67583)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67682)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67682)[0m *** SIGSEGV (@0x0) received by PID 67682 (TID 0x7f82b104f700) from PID 0; stack trace: ***
[2m[36m(pid=67682)[0m     @     0x7f82b0c28390 (unknown)
[2m[36m(pid=67682)[0m     @     0x7f53b0b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67575)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67575)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67575)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67575)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67575)[0m *** SIGSEGV (@0x0) received by PID 67575 (TID 0x7f9aefd36700) from PID 0; stack trace: ***
[2m[36m(pid=67575)[0m     @     0x7f9aef90f390 (unknown)
[2m[36m(pid=67630)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67630)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67630)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67565)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67565)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67565)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67565)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67565)[0m *** SIGSEGV (@0x0) received by PID 67565 (TID 0x7fec2dfd3700) from PID 0; stack trace: ***
[2m[36m(pid=67678)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67678)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67678)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67678)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67678)[0m *** SIGSEGV (@0x0) received by PID 67678 (TID 0x7f8b0163d700) from PID 0; stack trace: ***
[2m[36m(pid=67574)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67574)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67574)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67574)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67574)[0m *** SIGSEGV (@0x0) received by PID 67574 (TID 0x7f4a8ac82700) from PID 0; stack trace: ***
[2m[36m(pid=67574)[0m     @     0x7f4a8a85b390 (unknown)
[2m[36m(pid=67574)[0m     @     0x7f1b8a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67574)[0m     @     0x7f1b89ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67567)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67567)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67567)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67567)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67567)[0m *** SIGSEGV (@0x0) received by PID 67567 (TID 0x7fe7e91b8700) from PID 0; stack trace: ***
[2m[36m(pid=67567)[0m     @     0x7fe7e8d91390 (unknown)
[2m[36m(pid=67694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67694)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67694)[0m *** SIGSEGV (@0x0) received by PID 67694 (TID 0x7f341435e700) from PID 0; stack trace: ***
[2m[36m(pid=67573)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67573)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67573)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67573)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67573)[0m *** SIGSEGV (@0x0) received by PID 67573 (TID 0x7f6978fec700) from PID 0; stack trace: ***
[2m[36m(pid=67573)[0m     @     0x7f6978bc5390 (unknown)
[2m[36m(pid=67656)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67656)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67656)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67656)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67656)[0m *** SIGSEGV (@0x0) received by PID 67656 (TID 0x7f60d7102700) from PID 0; stack trace: ***
[2m[36m(pid=67674)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67674)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67674)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67674)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67674)[0m *** SIGSEGV (@0x0) received by PID 67674 (TID 0x7f34c6ebd700) from PID 0; stack trace: ***
[2m[36m(pid=67674)[0m     @     0x7f34c6a96390 (unknown)
[2m[36m(pid=67674)[0m     @     0x7f05c69ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67674)[0m     @     0x7f05c60f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67600)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67600)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67641)[0m     @     0x7f8614b8a5a4 at::native::copy_()
[2m[36m(pid=67641)[0m     @     0x7f86152754f5 at::Tensor::copy_()
[2m[36m(pid=67641)[0m     @     0x7f86177488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67593)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67593)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67593)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67593)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67593)[0m *** SIGSEGV (@0x0) received by PID 67593 (TID 0x7ff6c1d5a700) from PID 0; stack trace: ***
[2m[36m(pid=67593)[0m     @     0x7ff6c1933390 (unknown)
[2m[36m(pid=67593)[0m     @     0x7fc7c1701f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67584)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67584)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67584)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67603)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67603)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67603)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67603)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67603)[0m *** SIGSEGV (@0x0) received by PID 67603 (TID 0x7f30b598f700) from PID 0; stack trace: ***
[2m[36m(pid=67603)[0m     @     0x7f30b5568390 (unknown)
[2m[36m(pid=67603)[0m     @     0x7f01b54e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67601)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67601)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67601)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67601)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67601)[0m *** SIGSEGV (@0x0) received by PID 67601 (TID 0x7fa9b6e6b700) from PID 0; stack trace: ***
[2m[36m(pid=67601)[0m     @     0x7fa9b6a44390 (unknown)
[2m[36m(pid=67601)[0m     @     0x7f7ab670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67696)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67696)[0m *** SIGSEGV (@0x0) received by PID 67696 (TID 0x7fded421b700) from PID 0; stack trace: ***
[2m[36m(pid=67696)[0m     @     0x7fded3df4390 (unknown)
[2m[36m(pid=67696)[0m     @     0x7fafd3d79f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67696)[0m     @     0x7fafd34a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67579)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67579)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67579)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67579)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67579)[0m *** SIGSEGV (@0x0) received by PID 67579 (TID 0x7fb19a06a700) from PID 0; stack trace: ***
[2m[36m(pid=67579)[0m     @     0x7fb199c43390 (unknown)
[2m[36m(pid=67579)[0m     @     0x7f8299becf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67579)[0m     @     0x7f82993177db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67661)[0m     @     0x7f2261ef75a4 at::native::copy_()
[2m[36m(pid=67661)[0m     @     0x7f22625e24f5 at::Tensor::copy_()
[2m[36m(pid=67689)[0m     @     0x7ecf539f7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67689)[0m     @     0x7ecf539f5388 at::native::copy_impl()
[2m[36m(pid=67689)[0m     @     0x7ecf539f75a4 at::native::copy_()
[2m[36m(pid=67648)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67648)[0m *** SIGSEGV (@0x0) received by PID 67648 (TID 0x7fefafedd700) from PID 0; stack trace: ***
[2m[36m(pid=67648)[0m     @     0x7fefafab6390 (unknown)
[2m[36m(pid=67648)[0m     @     0x7fc0afa48f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67633)[0m     @     0x7f59a4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67633)[0m     @     0x7f59a4ccd388 at::native::copy_impl()
[2m[36m(pid=67633)[0m     @     0x7f59a4ccf5a4 at::native::copy_()
[2m[36m(pid=67667)[0m     @     0x7ed76cccf5a4 at::native::copy_()
[2m[36m(pid=67667)[0m     @     0x7ed76d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=67670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67670)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67693)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67693)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67693)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67693)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67693)[0m *** SIGSEGV (@0x0) received by PID 67693 (TID 0x7fad62728700) from PID 0; stack trace: ***
[2m[36m(pid=67693)[0m     @     0x7fad62301390 (unknown)
[2m[36m(pid=67663)[0m     @     0x7ef4272e15a4 at::native::copy_()
[2m[36m(pid=67663)[0m     @     0x7ef4279cc4f5 at::Tensor::copy_()
[2m[36m(pid=67663)[0m     @     0x7ef429e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67581)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67581)[0m *** SIGSEGV (@0x0) received by PID 67581 (TID 0x7f96a0991700) from PID 0; stack trace: ***
[2m[36m(pid=67581)[0m     @     0x7f96a056a390 (unknown)
[2m[36m(pid=67581)[0m     @     0x7f67a04f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67581)[0m     @     0x7f679fc217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67672)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67672)[0m *** SIGSEGV (@0x0) received by PID 67672 (TID 0x7f6edc255700) from PID 0; stack trace: ***
[2m[36m(pid=67672)[0m     @     0x7f6edbe2e390 (unknown)
[2m[36m(pid=67672)[0m     @     0x7f3fdbddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67672)[0m     @     0x7f3fdb5097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67599)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67599)[0m *** SIGSEGV (@0x0) received by PID 67599 (TID 0x7fe92f231700) from PID 0; stack trace: ***
[2m[36m(pid=67599)[0m     @     0x7fe92ee0a390 (unknown)
[2m[36m(pid=67599)[0m     @     0x7fba2edb0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67578)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67578)[0m *** SIGSEGV (@0x0) received by PID 67578 (TID 0x7f3913942700) from PID 0; stack trace: ***
[2m[36m(pid=67635)[0m     @     0x7f6725571390 (unknown)
[2m[36m(pid=67635)[0m     @     0x7f38254e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67635)[0m     @     0x7f3824c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67640)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67640)[0m *** SIGSEGV (@0x0) received by PID 67640 (TID 0x7f0ba157c700) from PID 0; stack trace: ***
[2m[36m(pid=67640)[0m     @     0x7f0ba1155390 (unknown)
[2m[36m(pid=67640)[0m     @     0x7edca10b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67686)[0m     @     0x7fa9112285a4 at::native::copy_()
[2m[36m(pid=67637)[0m     @     0x7f1734b1da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67637)[0m     @     0x7f1734b1b388 at::native::copy_impl()
[2m[36m(pid=67637)[0m     @     0x7f1734b1d5a4 at::native::copy_()
[2m[36m(pid=67647)[0m     @     0x7eeafd0e35a4 at::native::copy_()
[2m[36m(pid=67664)[0m     @     0x7fa05ac645a4 at::native::copy_()
[2m[36m(pid=67664)[0m     @     0x7fa05b34f4f5 at::Tensor::copy_()
[2m[36m(pid=67692)[0m     @     0x7f1ac89b95a4 at::native::copy_()
[2m[36m(pid=67658)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67658)[0m *** SIGSEGV (@0x0) received by PID 67658 (TID 0x7fdf974dc700) from PID 0; stack trace: ***
[2m[36m(pid=67658)[0m     @     0x7fdf970b5390 (unknown)
[2m[36m(pid=67658)[0m     @     0x7fb097052f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67622)[0m     @     0x7fb469ebf390 (unknown)
[2m[36m(pid=67622)[0m     @     0x7f8569e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67622)[0m     @     0x7f856954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67649)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67649)[0m *** SIGSEGV (@0x0) received by PID 67649 (TID 0x7f7b2e966700) from PID 0; stack trace: ***
[2m[36m(pid=67649)[0m     @     0x7f7b2e53f390 (unknown)
[2m[36m(pid=67649)[0m     @     0x7f4c2e4ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67649)[0m     @     0x7f4c2dbf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67645)[0m     @     0x7f4c4edb2388 at::native::copy_impl()
[2m[36m(pid=67645)[0m     @     0x7f4c4edb45a4 at::native::copy_()
[2m[36m(pid=67646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67646)[0m *** SIGSEGV (@0x0) received by PID 67646 (TID 0x7fd0f12ae700) from PID 0; stack trace: ***
[2m[36m(pid=67646)[0m     @     0x7fd0f0e87390 (unknown)
[2m[36m(pid=67646)[0m     @     0x7fa1f0e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67646)[0m     @     0x7fa1f053d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67631)[0m     @     0x7f73e04b7388 at::native::copy_impl()
[2m[36m(pid=67631)[0m     @     0x7f73e04b95a4 at::native::copy_()
[2m[36m(pid=67594)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67594)[0m *** SIGSEGV (@0x0) received by PID 67594 (TID 0x7f73bc1fd700) from PID 0; stack trace: ***
[2m[36m(pid=67594)[0m     @     0x7f73bbdd6390 (unknown)
[2m[36m(pid=67594)[0m     @     0x7f44bbd66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67594)[0m     @     0x7f44bb4917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67644)[0m *** SIGSEGV (@0x0) received by PID 67644 (TID 0x7f61120c8700) from PID 0; stack trace: ***
[2m[36m(pid=67644)[0m     @     0x7f6111ca1390 (unknown)
[2m[36m(pid=67644)[0m     @     0x7f3211c51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67644)[0m     @     0x7f321137c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67665)[0m     @     0x7f0372d225a4 at::native::copy_()
[2m[36m(pid=67665)[0m     @     0x7f037340d4f5 at::Tensor::copy_()
[2m[36m(pid=67568)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67568)[0m *** SIGSEGV (@0x0) received by PID 67568 (TID 0x7fdd1790f700) from PID 0; stack trace: ***
[2m[36m(pid=67568)[0m     @     0x7fdd174e8390 (unknown)
[2m[36m(pid=67568)[0m     @     0x7fae1748ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67568)[0m     @     0x7fae16bba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67652)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67652)[0m *** SIGSEGV (@0x0) received by PID 67652 (TID 0x7fa80f85e700) from PID 0; stack trace: ***
[2m[36m(pid=67652)[0m     @     0x7fa80f437390 (unknown)
[2m[36m(pid=67652)[0m     @     0x7f790f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67654)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67654)[0m *** SIGSEGV (@0x0) received by PID 67654 (TID 0x7fcb21642700) from PID 0; stack trace: ***
[2m[36m(pid=67654)[0m     @     0x7fcb2121b390 (unknown)
[2m[36m(pid=67654)[0m     @     0x7f9c210b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67654)[0m     @     0x7f9c207e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67569)[0m     @     0x7f6527487390 (unknown)
[2m[36m(pid=67569)[0m     @     0x7f3627229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67569)[0m     @     0x7f36269547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67569)[0m     @     0x7f36269578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67569)[0m     @     0x7f3626957ad3 at::TensorIterator::for_each()
[2m[36m(pid=67642)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67642)[0m *** SIGSEGV (@0x0) received by PID 67642 (TID 0x7f5374e9b700) from PID 0; stack trace: ***
[2m[36m(pid=67642)[0m     @     0x7f5374a74390 (unknown)
[2m[36m(pid=67642)[0m     @     0x7f247497ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67642)[0m     @     0x7f24740aa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67591)[0m     @     0x7fb4c5185390 (unknown)
[2m[36m(pid=67591)[0m     @     0x7f85c50b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67591)[0m     @     0x7f85c47e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67591)[0m     @     0x7f85c47e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67580)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67580)[0m *** SIGSEGV (@0x0) received by PID 67580 (TID 0x7f4916ba0700) from PID 0; stack trace: ***
[2m[36m(pid=67580)[0m     @     0x7f4916779390 (unknown)
[2m[36m(pid=67580)[0m     @     0x7f1a16193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67580)[0m     @     0x7f1a158be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67580)[0m     @     0x7f1a158c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67596)[0m     @     0x7fa65f9d6390 (unknown)
[2m[36m(pid=67596)[0m     @     0x7f775f751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67596)[0m     @     0x7f775ee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67596)[0m     @     0x7f775ee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67691)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67691)[0m *** SIGSEGV (@0x0) received by PID 67691 (TID 0x7f4993bf4700) from PID 0; stack trace: ***
[2m[36m(pid=67691)[0m     @     0x7f49937cd390 (unknown)
[2m[36m(pid=67691)[0m     @     0x7f1a9361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67691)[0m     @     0x7f1a92d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67691)[0m     @     0x7f1a92d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67683)[0m     @     0x7fbade6ff5a4 at::native::copy_()
[2m[36m(pid=67683)[0m     @     0x7fbadedea4f5 at::Tensor::copy_()
[2m[36m(pid=67683)[0m     @     0x7fbae12bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67651)[0m     @     0x7fcada4ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67651)[0m     @     0x7fcada4b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67651)[0m     @     0x7fcada4b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=67626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67626)[0m *** SIGSEGV (@0x0) received by PID 67626 (TID 0x7f49dca9b700) from PID 0; stack trace: ***
[2m[36m(pid=67626)[0m     @     0x7f49dc674390 (unknown)
[2m[36m(pid=67626)[0m     @     0x7f1adc60ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67626)[0m     @     0x7f1adbd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67626)[0m     @     0x7f1adbd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67571)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67571)[0m *** SIGSEGV (@0x0) received by PID 67571 (TID 0x7fa74ced7700) from PID 0; stack trace: ***
[2m[36m(pid=67571)[0m     @     0x7fa74cab0390 (unknown)
[2m[36m(pid=67571)[0m     @     0x7f784c9e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67571)[0m     @     0x7f784c1137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67571)[0m     @     0x7f784c1168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67676)[0m     @     0x7ee446a635a4 at::native::copy_()
[2m[36m(pid=67676)[0m     @     0x7ee44714e4f5 at::Tensor::copy_()
[2m[36m(pid=67676)[0m     @     0x7ee4496218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67657)[0m     @     0x7f848c9414f5 at::Tensor::copy_()
[2m[36m(pid=67657)[0m     @     0x7f84929ec79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67657)[0m     @     0x55ccbfc61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67657)[0m     @     0x55ccbfbbcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67657)[0m     @     0x55ccbfc47baf _PyEval_EvalCodeWithName
[2m[36m(pid=67657)[0m     @     0x55ccbfc48a20 method_vectorcall
[2m[36m(pid=67657)[0m     @     0x55ccbfbbcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67657)[0m     @     0x55ccbfc47baf _PyEval_EvalCodeWithName
[2m[36m(pid=67657)[0m     @     0x55ccbfc48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67657)[0m     @     0x55ccbfbbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67657)[0m     @     0x55ccbfc47baf _PyEval_EvalCodeWithName
[2m[36m(pid=67657)[0m     @     0x55ccbfc48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67657)[0m     @     0x55ccbfbbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67657)[0m     @     0x55ccbfc47baf _PyEval_EvalCodeWithName
[2m[36m(pid=67657)[0m     @     0x55ccbfc48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67657)[0m     @     0x55ccbfbbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67657)[0m     @     0x55ccbfc47baf _PyEval_EvalCodeWithName
[2m[36m(pid=67657)[0m     @     0x55ccbfc48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67657)[0m     @     0x55ccbfbbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67570)[0m *** SIGSEGV (@0x0) received by PID 67570 (TID 0x7fb51090f700) from PID 0; stack trace: ***
[2m[36m(pid=67570)[0m     @     0x7fb5104e8390 (unknown)
[2m[36m(pid=67570)[0m     @     0x7f861032cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67570)[0m     @     0x7f860fa577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67570)[0m     @     0x7f860fa5a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67582)[0m     @     0x7f93dd090390 (unknown)
[2m[36m(pid=67582)[0m     @     0x7f64dd023f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67582)[0m     @     0x7f64dc74e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67582)[0m     @     0x7f64dc7518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67586)[0m     @     0x7f0b16bbb390 (unknown)
[2m[36m(pid=67586)[0m     @     0x7edc16a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67586)[0m     @     0x7edc1614c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67586)[0m     @     0x7edc1614f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67566)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67566)[0m *** SIGSEGV (@0x0) received by PID 67566 (TID 0x7f6ccb08e700) from PID 0; stack trace: ***
[2m[36m(pid=67566)[0m     @     0x7f6ccac67390 (unknown)
[2m[36m(pid=67566)[0m     @     0x7f3dcabf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67566)[0m     @     0x7f3dca3207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67619)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67619)[0m *** SIGSEGV (@0x0) received by PID 67619 (TID 0x7ff067877700) from PID 0; stack trace: ***
[2m[36m(pid=67619)[0m     @     0x7ff067450390 (unknown)
[2m[36m(pid=67643)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67643)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67643)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67643)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67643)[0m *** SIGSEGV (@0x0) received by PID 67643 (TID 0x7ff1abceb700) from PID 0; stack trace: ***
[2m[36m(pid=67643)[0m     @     0x7ff1ab8c4390 (unknown)
[2m[36m(pid=67643)[0m     @     0x7fc2ab84cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67588)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67588)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67587)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67587)[0m *** SIGSEGV (@0x0) received by PID 67587 (TID 0x7fb9efbe8700) from PID 0; stack trace: ***
[2m[36m(pid=67587)[0m     @     0x7fb9ef7c1390 (unknown)
[2m[36m(pid=67587)[0m     @     0x7f8aef61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67585)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67585)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67585)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67585)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67585)[0m *** SIGSEGV (@0x0) received by PID 67585 (TID 0x7ffa273ad700) from PID 0; stack trace: ***
[2m[36m(pid=67585)[0m     @     0x7ffa26f86390 (unknown)
[2m[36m(pid=67585)[0m     @     0x7fcb26f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67671)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67671)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67671)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67671)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67671)[0m *** SIGSEGV (@0x0) received by PID 67671 (TID 0x7f9b5c635700) from PID 0; stack trace: ***
[2m[36m(pid=67671)[0m     @     0x7f9b5c20e390 (unknown)
[2m[36m(pid=67628)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67628)[0m *** SIGSEGV (@0x0) received by PID 67628 (TID 0x7f9085fce700) from PID 0; stack trace: ***
[2m[36m(pid=67628)[0m     @     0x7f9085ba7390 (unknown)
[2m[36m(pid=67628)[0m     @     0x7f6185a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67628)[0m     @     0x7f61851357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67628)[0m     @     0x7f61851388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67634)[0m     @     0x7fdd6dc5f390 (unknown)
[2m[36m(pid=67634)[0m     @     0x7fae6dc11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67634)[0m     @     0x7fae6d33c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67634)[0m     @     0x7fae6d33f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67634)[0m     @     0x7fae6d33fad3 at::TensorIterator::for_each()
[2m[36m(pid=67679)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67679)[0m *** SIGSEGV (@0x0) received by PID 67679 (TID 0x7fa237d2c700) from PID 0; stack trace: ***
[2m[36m(pid=67679)[0m     @     0x7fa237905390 (unknown)
[2m[36m(pid=67679)[0m     @     0x7f7337751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67679)[0m     @     0x7f7336e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67679)[0m     @     0x7f7336e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67624)[0m *** SIGSEGV (@0x0) received by PID 67624 (TID 0x7fbc93caa700) from PID 0; stack trace: ***
[2m[36m(pid=67624)[0m     @     0x7fbc93883390 (unknown)
[2m[36m(pid=67624)[0m     @     0x7f8d93751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67583)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67583)[0m *** SIGSEGV (@0x0) received by PID 67583 (TID 0x7f8501d7c700) from PID 0; stack trace: ***
[2m[36m(pid=67583)[0m     @     0x7f8501955390 (unknown)
[2m[36m(pid=67583)[0m     @     0x7f56017f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67583)[0m     @     0x7f5600f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67682)[0m     @     0x7f53b02667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67682)[0m     @     0x7f53b02698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67575)[0m     @     0x7f6bef89ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67575)[0m     @     0x7f6beefc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67575)[0m     @     0x7f6beefcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67630)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67630)[0m *** SIGSEGV (@0x0) received by PID 67630 (TID 0x7f87871ae700) from PID 0; stack trace: ***
[2m[36m(pid=67630)[0m     @     0x7f8786d87390 (unknown)
[2m[36m(pid=67630)[0m     @     0x7f5886cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67630)[0m     @     0x7f58864277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67576)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67576)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67576)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67576)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67576)[0m *** SIGSEGV (@0x0) received by PID 67576 (TID 0x7f3146309700) from PID 0; stack trace: ***
[2m[36m(pid=67565)[0m     @     0x7fec2dbac390 (unknown)
[2m[36m(pid=67565)[0m     @     0x7fbd2d391f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67565)[0m     @     0x7fbd2cabc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=67684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=67684)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67684)[0m *** SIGSEGV (@0x0) received by PID 67684 (TID 0x7ff7633c3700) from PID 0; stack trace: ***
[2m[36m(pid=67678)[0m     @     0x7f8b01216390 (unknown)
[2m[36m(pid=67678)[0m     @     0x7f5c010b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67678)[0m     @     0x7f5c007e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67574)[0m     @     0x7f1b89ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67574)[0m     @     0x7f1b89ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=67567)[0m     @     0x7fb8e8c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67567)[0m     @     0x7fb8e839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67567)[0m     @     0x7fb8e83a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67567)[0m     @     0x7fb8e83a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=67694)[0m     @     0x7f3413f37390 (unknown)
[2m[36m(pid=67694)[0m     @     0x7f0513df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67694)[0m     @     0x7f051351b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67694)[0m     @     0x7f051351e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67694)[0m     @     0x7f051351ead3 at::TensorIterator::for_each()
[2m[36m(pid=67573)[0m     @     0x7f3a75940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67573)[0m     @     0x7f3a7506b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67573)[0m     @     0x7f3a7506e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67573)[0m     @     0x7f3a7506ead3 at::TensorIterator::for_each()
[2m[36m(pid=67656)[0m     @     0x7f60d6cdb390 (unknown)
[2m[36m(pid=67656)[0m     @     0x7f31d6c6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67656)[0m     @     0x7f31d63957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67656)[0m     @     0x7f31d63988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67674)[0m     @     0x7f05c60fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67674)[0m     @     0x7f05c60faad3 at::TensorIterator::for_each()
[2m[36m(pid=67674)[0m     @     0x7f05c60fad91 at::TensorIterator::for_each()
[2m[36m(pid=67674)[0m     @     0x7f05c69ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67674)[0m     @     0x7f05c6a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67600)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67600)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67600)[0m *** SIGSEGV (@0x0) received by PID 67600 (TID 0x7fe61d91e700) from PID 0; stack trace: ***
[2m[36m(pid=67600)[0m     @     0x7fe61d4f7390 (unknown)
[2m[36m(pid=67600)[0m     @     0x7fb71d4a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67600)[0m     @     0x7fb71cbce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67641)[0m     @     0x7f86152754f5 at::Tensor::copy_()
[2m[36m(pid=67641)[0m     @     0x7f861b32079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67641)[0m     @     0x5634b24b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67641)[0m     @     0x5634b240db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67641)[0m     @     0x5634b2498baf _PyEval_EvalCodeWithName
[2m[36m(pid=67641)[0m     @     0x5634b2499a20 method_vectorcall
[2m[36m(pid=67641)[0m     @     0x5634b240dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67641)[0m     @     0x5634b2498baf _PyEval_EvalCodeWithName
[2m[36m(pid=67641)[0m     @     0x5634b2499643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67641)[0m     @     0x5634b240e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67641)[0m     @     0x5634b2498baf _PyEval_EvalCodeWithName
[2m[36m(pid=67641)[0m     @     0x5634b2499643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67641)[0m     @     0x5634b240e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67641)[0m     @     0x5634b2498baf _PyEval_EvalCodeWithName
[2m[36m(pid=67641)[0m     @     0x5634b2499643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67641)[0m     @     0x5634b240e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67641)[0m     @     0x5634b2498baf _PyEval_EvalCodeWithName
[2m[36m(pid=67641)[0m     @     0x5634b2499643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67641)[0m     @     0x5634b240e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67593)[0m     @     0x7fc7c0e2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67593)[0m     @     0x7fc7c0e2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67593)[0m     @     0x7fc7c0e2fad3 at::TensorIterator::for_each()
[2m[36m(pid=67584)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67584)[0m *** SIGSEGV (@0x0) received by PID 67584 (TID 0x7f740d873700) from PID 0; stack trace: ***
[2m[36m(pid=67584)[0m     @     0x7f740d44c390 (unknown)
[2m[36m(pid=67584)[0m     @     0x7f450d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67584)[0m     @     0x7f450caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67603)[0m     @     0x7f01b4c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67603)[0m     @     0x7f01b4c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67603)[0m     @     0x7f01b4c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=67601)[0m     @     0x7f7ab5e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67601)[0m     @     0x7f7ab5e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67601)[0m     @     0x7f7ab5e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=67696)[0m     @     0x7fafd34a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67696)[0m     @     0x7fafd34a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=67696)[0m     @     0x7fafd34a7d91 at::TensorIterator::for_each()
[2m[36m(pid=67696)[0m     @     0x7fafd3d8ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67579)[0m     @     0x7f829931a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67579)[0m     @     0x7f829931aad3 at::TensorIterator::for_each()
[2m[36m(pid=67579)[0m     @     0x7f829931ad91 at::TensorIterator::for_each()
[2m[36m(pid=67579)[0m     @     0x7f8299bfdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67579)[0m     @     0x7f8299c20c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67661)[0m     @     0x7f2264ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67661)[0m     @     0x7f22625e24f5 at::Tensor::copy_()
[2m[36m(pid=67661)[0m     @     0x7f226868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67661)[0m     @     0x5567d968afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67661)[0m     @     0x5567d95e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67661)[0m     @     0x5567d9670baf _PyEval_EvalCodeWithName
[2m[36m(pid=67661)[0m     @     0x5567d9671a20 method_vectorcall
[2m[36m(pid=67661)[0m     @     0x5567d95e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67661)[0m     @     0x5567d9670baf _PyEval_EvalCodeWithName
[2m[36m(pid=67661)[0m     @     0x5567d9671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67661)[0m     @     0x5567d95e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67661)[0m     @     0x5567d9670baf _PyEval_EvalCodeWithName
[2m[36m(pid=67661)[0m     @     0x5567d9671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67661)[0m     @     0x5567d95e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67661)[0m     @     0x5567d9670baf _PyEval_EvalCodeWithName
[2m[36m(pid=67661)[0m     @     0x5567d9671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67661)[0m     @     0x5567d95e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67661)[0m     @     0x5567d9670baf _PyEval_EvalCodeWithName
[2m[36m(pid=67661)[0m     @     0x5567d9671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67661)[0m     @     0x5567d95e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67689)[0m     @     0x7ecf540e24f5 at::Tensor::copy_()
[2m[36m(pid=67689)[0m     @     0x7ecf565b58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67689)[0m     @     0x7ecf540e24f5 at::Tensor::copy_()
[2m[36m(pid=67689)[0m     @     0x7ecf5a18d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67689)[0m     @     0x55f591b8efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67689)[0m     @     0x55f591ae9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67689)[0m     @     0x55f591b74baf _PyEval_EvalCodeWithName
[2m[36m(pid=67689)[0m     @     0x55f591b75a20 method_vectorcall
[2m[36m(pid=67689)[0m     @     0x55f591ae9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67689)[0m     @     0x55f591b74baf _PyEval_EvalCodeWithName
[2m[36m(pid=67648)[0m     @     0x7fc0af1737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67648)[0m     @     0x7fc0af1768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67648)[0m     @     0x7fc0af176ad3 at::TensorIterator::for_each()
[2m[36m(pid=67633)[0m     @     0x7f59a53ba4f5 at::Tensor::copy_()
[2m[36m(pid=67633)[0m     @     0x7f59a788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67633)[0m     @     0x7f59a53ba4f5 at::Tensor::copy_()
[2m[36m(pid=67633)[0m     @     0x7f59ab46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67633)[0m     @     0x55df00c4cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67633)[0m     @     0x55df00ba7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67633)[0m     @     0x55df00c32baf _PyEval_EvalCodeWithName
[2m[36m(pid=67633)[0m     @     0x55df00c33a20 method_vectorcall
[2m[36m(pid=67633)[0m     @     0x55df00ba7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67633)[0m     @     0x55df00c32baf _PyEval_EvalCodeWithName
[2m[36m(pid=67633)[0m     @     0x55df00c33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67633)[0m     @     0x55df00ba8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67633)[0m     @     0x55df00c32baf _PyEval_EvalCodeWithName
[2m[36m(pid=67633)[0m     @     0x55df00c33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67633)[0m     @     0x55df00ba8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67633)[0m     @     0x55df00c32baf _PyEval_EvalCodeWithName
[2m[36m(pid=67633)[0m     @     0x55df00c33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67633)[0m     @     0x55df00ba8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67633)[0m     @     0x55df00c32baf _PyEval_EvalCodeWithName
[2m[36m(pid=67633)[0m     @     0x55df00c33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67633)[0m     @     0x55df00ba8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67667)[0m     @     0x7ed76f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67667)[0m     @     0x7ed76d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=67667)[0m     @     0x7ed77346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67667)[0m     @     0x560534de6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67667)[0m     @     0x560534d41b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67667)[0m     @     0x560534dccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67667)[0m     @     0x560534dcda20 method_vectorcall
[2m[36m(pid=67667)[0m     @     0x560534d41bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67667)[0m     @     0x560534dccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67667)[0m     @     0x560534dcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67667)[0m     @     0x560534d42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67667)[0m     @     0x560534dccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67667)[0m     @     0x560534dcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67667)[0m     @     0x560534d42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67667)[0m     @     0x560534dccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67667)[0m     @     0x560534dcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67667)[0m     @     0x560534d42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67667)[0m     @     0x560534dccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67667)[0m     @     0x560534dcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67667)[0m     @     0x560534d42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67670)[0m *** SIGSEGV (@0x0) received by PID 67670 (TID 0x7fc3c2ab8700) from PID 0; stack trace: ***
[2m[36m(pid=67670)[0m     @     0x7fc3c2691390 (unknown)
[2m[36m(pid=67670)[0m     @     0x7f94c2365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67670)[0m     @     0x7f94c1a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67670)[0m     @     0x7f94c1a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67693)[0m     @     0x7f7e622b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67693)[0m     @     0x7f7e619e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67693)[0m     @     0x7f7e619e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67693)[0m     @     0x7f7e619e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=67663)[0m     @     0x7ef4279cc4f5 at::Tensor::copy_()
[2m[36m(pid=67663)[0m     @     0x7ef42da7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67663)[0m     @     0x5590d7750fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67663)[0m     @     0x5590d76abb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67663)[0m     @     0x5590d7736baf _PyEval_EvalCodeWithName
[2m[36m(pid=67663)[0m     @     0x5590d7737a20 method_vectorcall
[2m[36m(pid=67663)[0m     @     0x5590d76abbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67663)[0m     @     0x5590d7736baf _PyEval_EvalCodeWithName
[2m[36m(pid=67663)[0m     @     0x5590d7737643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67663)[0m     @     0x5590d76ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67663)[0m     @     0x5590d7736baf _PyEval_EvalCodeWithName
[2m[36m(pid=67663)[0m     @     0x5590d7737643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67663)[0m     @     0x5590d76ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67663)[0m     @     0x5590d7736baf _PyEval_EvalCodeWithName
[2m[36m(pid=67663)[0m     @     0x5590d7737643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67663)[0m     @     0x5590d76ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67663)[0m     @     0x5590d7736baf _PyEval_EvalCodeWithName
[2m[36m(pid=67663)[0m     @     0x5590d7737643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67663)[0m     @     0x5590d76ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67581)[0m     @     0x7f679fc248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67581)[0m     @     0x7f679fc24ad3 at::TensorIterator::for_each()
[2m[36m(pid=67581)[0m     @     0x7f679fc24d91 at::TensorIterator::for_each()
[2m[36m(pid=67581)[0m     @     0x7f67a0507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67672)[0m     @     0x7f3fdb50c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67672)[0m     @     0x7f3fdb50cad3 at::TensorIterator::for_each()
[2m[36m(pid=67672)[0m     @     0x7f3fdb50cd91 at::TensorIterator::for_each()
[2m[36m(pid=67599)[0m     @     0x7fba2e4db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67599)[0m     @     0x7fba2e4de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67599)[0m     @     0x7fba2e4dead3 at::TensorIterator::for_each()
[2m[36m(pid=67578)[0m     @     0x7f391351b390 (unknown)
[2m[36m(pid=67578)[0m     @     0x7f0a1343af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67578)[0m     @     0x7f0a12b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67578)[0m     @     0x7f0a12b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67635)[0m     @     0x7f3824c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67635)[0m     @     0x7f3824c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=67635)[0m     @     0x7f3824c11d91 at::TensorIterator::for_each()
[2m[36m(pid=67635)[0m     @     0x7f38254f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67640)[0m     @     0x7edca07e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67640)[0m     @     0x7edca07e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67640)[0m     @     0x7edca07e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=67686)[0m     @     0x7fa9119134f5 at::Tensor::copy_()
[2m[36m(pid=67686)[0m     @     0x7fa913de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67686)[0m     @     0x7fa9119134f5 at::Tensor::copy_()
[2m[36m(pid=67686)[0m     @     0x7fa9179be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67686)[0m     @     0x55dca0337fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67686)[0m     @     0x55dca0292b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67686)[0m     @     0x55dca031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67686)[0m     @     0x55dca031ea20 method_vectorcall
[2m[36m(pid=67686)[0m     @     0x55dca0292bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67686)[0m     @     0x55dca031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67686)[0m     @     0x55dca031e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67686)[0m     @     0x55dca0293689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67686)[0m     @     0x55dca031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67686)[0m     @     0x55dca031e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67686)[0m     @     0x55dca0293689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67686)[0m     @     0x55dca031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67686)[0m     @     0x55dca031e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67686)[0m     @     0x55dca0293689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67686)[0m     @     0x55dca031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67686)[0m     @     0x55dca031e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67686)[0m     @     0x55dca0293689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67637)[0m     @     0x7f17352084f5 at::Tensor::copy_()
[2m[36m(pid=67637)[0m     @     0x7f17376db8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67637)[0m     @     0x7f17352084f5 at::Tensor::copy_()
[2m[36m(pid=67637)[0m     @     0x7f173b2b379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67637)[0m     @     0x55b29090cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67637)[0m     @     0x55b290867b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67637)[0m     @     0x55b2908f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67637)[0m     @     0x55b2908f3a20 method_vectorcall
[2m[36m(pid=67637)[0m     @     0x55b290867bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67637)[0m     @     0x55b2908f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67637)[0m     @     0x55b2908f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67637)[0m     @     0x55b290868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67637)[0m     @     0x55b2908f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67637)[0m     @     0x55b2908f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67637)[0m     @     0x55b290868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67637)[0m     @     0x55b2908f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67637)[0m     @     0x55b2908f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67637)[0m     @     0x55b290868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67637)[0m     @     0x55b2908f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67637)[0m     @     0x55b2908f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67637)[0m     @     0x55b290868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67647)[0m     @     0x7eeafd7ce4f5 at::Tensor::copy_()
[2m[36m(pid=67647)[0m     @     0x7eeaffca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67647)[0m     @     0x7eeafd7ce4f5 at::Tensor::copy_()
[2m[36m(pid=67647)[0m     @     0x7eeb0387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67647)[0m     @     0x563fef8a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67647)[0m     @     0x563fef7fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67647)[0m     @     0x563fef887baf _PyEval_EvalCodeWithName
[2m[36m(pid=67647)[0m     @     0x563fef888a20 method_vectorcall
[2m[36m(pid=67647)[0m     @     0x563fef7fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67647)[0m     @     0x563fef887baf _PyEval_EvalCodeWithName
[2m[36m(pid=67647)[0m     @     0x563fef888643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67647)[0m     @     0x563fef7fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67647)[0m     @     0x563fef887baf _PyEval_EvalCodeWithName
[2m[36m(pid=67647)[0m     @     0x563fef888643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67647)[0m     @     0x563fef7fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67647)[0m     @     0x563fef887baf _PyEval_EvalCodeWithName
[2m[36m(pid=67647)[0m     @     0x563fef888643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67647)[0m     @     0x563fef7fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67647)[0m     @     0x563fef887baf _PyEval_EvalCodeWithName
[2m[36m(pid=67647)[0m     @     0x563fef888643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67647)[0m     @     0x563fef7fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67664)[0m     @     0x7fa05d8228de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67664)[0m     @     0x7fa05b34f4f5 at::Tensor::copy_()
[2m[36m(pid=67664)[0m     @     0x7fa0613fa79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67664)[0m     @     0x5599f291afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67664)[0m     @     0x5599f2875b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67664)[0m     @     0x5599f2900baf _PyEval_EvalCodeWithName
[2m[36m(pid=67664)[0m     @     0x5599f2901a20 method_vectorcall
[2m[36m(pid=67664)[0m     @     0x5599f2875bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67664)[0m     @     0x5599f2900baf _PyEval_EvalCodeWithName
[2m[36m(pid=67664)[0m     @     0x5599f2901643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67664)[0m     @     0x5599f2876689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67664)[0m     @     0x5599f2900baf _PyEval_EvalCodeWithName
[2m[36m(pid=67664)[0m     @     0x5599f2901643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67664)[0m     @     0x5599f2876689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67664)[0m     @     0x5599f2900baf _PyEval_EvalCodeWithName
[2m[36m(pid=67664)[0m     @     0x5599f2901643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67664)[0m     @     0x5599f2876689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67664)[0m     @     0x5599f2900baf _PyEval_EvalCodeWithName
[2m[36m(pid=67664)[0m     @     0x5599f2901643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67664)[0m     @     0x5599f2876689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67692)[0m     @     0x7f1ac90a44f5 at::Tensor::copy_()
[2m[36m(pid=67692)[0m     @     0x7f1acb5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67692)[0m     @     0x7f1ac90a44f5 at::Tensor::copy_()
[2m[36m(pid=67692)[0m     @     0x7f1acf14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67692)[0m     @     0x55e331638fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67692)[0m     @     0x55e331593b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67692)[0m     @     0x55e33161ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67692)[0m     @     0x55e33161fa20 method_vectorcall
[2m[36m(pid=67692)[0m     @     0x55e331593bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67692)[0m     @     0x55e33161ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67692)[0m     @     0x55e33161f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67692)[0m     @     0x55e331594689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67692)[0m     @     0x55e33161ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67692)[0m     @     0x55e33161f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67692)[0m     @     0x55e331594689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67692)[0m     @     0x55e33161ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67692)[0m     @     0x55e33161f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67692)[0m     @     0x55e331594689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67692)[0m     @     0x55e33161ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67692)[0m     @     0x55e33161f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67692)[0m     @     0x55e331594689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67658)[0m     @     0x7fb09677d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67658)[0m     @     0x7fb0967808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67658)[0m     @     0x7fb096780ad3 at::TensorIterator::for_each()
[2m[36m(pid=67622)[0m     @     0x7f85695528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67622)[0m     @     0x7f8569552ad3 at::TensorIterator::for_each()
[2m[36m(pid=67622)[0m     @     0x7f8569552d91 at::TensorIterator::for_each()
[2m[36m(pid=67622)[0m     @     0x7f8569e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67649)[0m     @     0x7f4c2dbfa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67649)[0m     @     0x7f4c2dbfaad3 at::TensorIterator::for_each()
[2m[36m(pid=67649)[0m     @     0x7f4c2dbfad91 at::TensorIterator::for_each()
[2m[36m(pid=67649)[0m     @     0x7f4c2e4ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67649)[0m     @     0x7f4c2e500c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67645)[0m     @     0x7f4c4f49f4f5 at::Tensor::copy_()
[2m[36m(pid=67645)[0m     @     0x7f4c519728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67645)[0m     @     0x7f4c4f49f4f5 at::Tensor::copy_()
[2m[36m(pid=67645)[0m     @     0x7f4c5554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67645)[0m     @     0x559ded06dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67645)[0m     @     0x559decfc8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67645)[0m     @     0x559ded053baf _PyEval_EvalCodeWithName
[2m[36m(pid=67645)[0m     @     0x559ded054a20 method_vectorcall
[2m[36m(pid=67645)[0m     @     0x559decfc8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67645)[0m     @     0x559ded053baf _PyEval_EvalCodeWithName
[2m[36m(pid=67645)[0m     @     0x559ded054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67645)[0m     @     0x559decfc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67645)[0m     @     0x559ded053baf _PyEval_EvalCodeWithName
[2m[36m(pid=67645)[0m     @     0x559ded054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67645)[0m     @     0x559decfc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67645)[0m     @     0x559ded053baf _PyEval_EvalCodeWithName
[2m[36m(pid=67645)[0m     @     0x559ded054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67645)[0m     @     0x559decfc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67645)[0m     @     0x559ded053baf _PyEval_EvalCodeWithName
[2m[36m(pid=67645)[0m     @     0x559ded054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67645)[0m     @     0x559decfc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67646)[0m     @     0x7fa1f05408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67646)[0m     @     0x7fa1f0540ad3 at::TensorIterator::for_each()
[2m[36m(pid=67646)[0m     @     0x7fa1f0540d91 at::TensorIterator::for_each()
[2m[36m(pid=67646)[0m     @     0x7fa1f0e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67631)[0m     @     0x7f73e0ba44f5 at::Tensor::copy_()
[2m[36m(pid=67631)[0m     @     0x7f73e30778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67631)[0m     @     0x7f73e0ba44f5 at::Tensor::copy_()
[2m[36m(pid=67631)[0m     @     0x7f73e6c4f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67631)[0m     @     0x56363f677fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67631)[0m     @     0x56363f5d2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67631)[0m     @     0x56363f65dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67631)[0m     @     0x56363f65ea20 method_vectorcall
[2m[36m(pid=67631)[0m     @     0x56363f5d2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67631)[0m     @     0x56363f65dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67631)[0m     @     0x56363f65e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67631)[0m     @     0x56363f5d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67631)[0m     @     0x56363f65dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67631)[0m     @     0x56363f65e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67631)[0m     @     0x56363f5d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67631)[0m     @     0x56363f65dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67631)[0m     @     0x56363f65e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67631)[0m     @     0x56363f5d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67631)[0m     @     0x56363f65dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67631)[0m     @     0x56363f65e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67631)[0m     @     0x56363f5d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67594)[0m     @     0x7f44bb4948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67594)[0m     @     0x7f44bb494ad3 at::TensorIterator::for_each()
[2m[36m(pid=67594)[0m     @     0x7f44bb494d91 at::TensorIterator::for_each()
[2m[36m(pid=67594)[0m     @     0x7f44bbd77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67594)[0m     @     0x7f44bbd9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67644)[0m     @     0x7f321137f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67644)[0m     @     0x7f321137fad3 at::TensorIterator::for_each()
[2m[36m(pid=67644)[0m     @     0x7f321137fd91 at::TensorIterator::for_each()
[2m[36m(pid=67644)[0m     @     0x7f3211c62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67665)[0m     @     0x7f03758e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67665)[0m     @     0x7f037340d4f5 at::Tensor::copy_()
[2m[36m(pid=67665)[0m     @     0x7f03794b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67665)[0m     @     0x55931c0ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67665)[0m     @     0x55931c038b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67665)[0m     @     0x55931c0c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67665)[0m     @     0x55931c0c4a20 method_vectorcall
[2m[36m(pid=67665)[0m     @     0x55931c038bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67665)[0m     @     0x55931c0c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67665)[0m     @     0x55931c0c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67665)[0m     @     0x55931c039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67665)[0m     @     0x55931c0c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67665)[0m     @     0x55931c0c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67665)[0m     @     0x55931c039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67665)[0m     @     0x55931c0c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67665)[0m     @     0x55931c0c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67665)[0m     @     0x55931c039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67665)[0m     @     0x55931c0c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67665)[0m     @     0x55931c0c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67665)[0m     @     0x55931c039689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67568)[0m     @     0x7fae16bbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67568)[0m     @     0x7fae16bbdad3 at::TensorIterator::for_each()
[2m[36m(pid=67568)[0m     @     0x7fae16bbdd91 at::TensorIterator::for_each()
[2m[36m(pid=67568)[0m     @     0x7fae174a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67652)[0m     @     0x7f790e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67652)[0m     @     0x7f790e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67652)[0m     @     0x7f790e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=67654)[0m     @     0x7f9c207e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67654)[0m     @     0x7f9c207e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=67654)[0m     @     0x7f9c207e3d91 at::TensorIterator::for_each()
[2m[36m(pid=67654)[0m     @     0x7f9c210c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67569)[0m     @     0x7f3626957d91 at::TensorIterator::for_each()
[2m[36m(pid=67569)[0m     @     0x7f362723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67569)[0m     @     0x7f362725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67642)[0m     @     0x7f24740ad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67642)[0m     @     0x7f24740adad3 at::TensorIterator::for_each()
[2m[36m(pid=67591)[0m     @     0x7f85c47e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=67591)[0m     @     0x7f85c47e3d91 at::TensorIterator::for_each()
[2m[36m(pid=67591)[0m     @     0x7f85c50c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67591)[0m     @     0x7f85c50e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67580)[0m     @     0x7f1a158c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=67580)[0m     @     0x7f1a158c1d91 at::TensorIterator::for_each()
[2m[36m(pid=67580)[0m     @     0x7f1a161a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67580)[0m     @     0x7f1a161c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67596)[0m     @     0x7f775ee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=67596)[0m     @     0x7f775ee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=67596)[0m     @     0x7f775f762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67596)[0m     @     0x7f775f785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67691)[0m     @     0x7f1a92d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=67691)[0m     @     0x7f1a92d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=67691)[0m     @     0x7f1a93630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67683)[0m     @     0x7fbadedea4f5 at::Tensor::copy_()
[2m[36m(pid=67683)[0m     @     0x7fbae4e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67683)[0m     @     0x55c243141fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67683)[0m     @     0x55c24309cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67683)[0m     @     0x55c243127baf _PyEval_EvalCodeWithName
[2m[36m(pid=67683)[0m     @     0x55c243128a20 method_vectorcall
[2m[36m(pid=67683)[0m     @     0x55c24309cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67683)[0m     @     0x55c243127baf _PyEval_EvalCodeWithName
[2m[36m(pid=67683)[0m     @     0x55c243128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67683)[0m     @     0x55c24309d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67683)[0m     @     0x55c243127baf _PyEval_EvalCodeWithName
[2m[36m(pid=67683)[0m     @     0x55c243128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67683)[0m     @     0x55c24309d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67683)[0m     @     0x55c243127baf _PyEval_EvalCodeWithName
[2m[36m(pid=67683)[0m     @     0x55c243128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67683)[0m     @     0x55c24309d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67683)[0m     @     0x55c243127baf _PyEval_EvalCodeWithName
[2m[36m(pid=67683)[0m     @     0x55c243128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67683)[0m     @     0x55c24309d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67651)[0m     @     0x7fcada4b1d91 at::TensorIterator::for_each()
[2m[36m(pid=67651)[0m     @     0x7fcadad94b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67651)[0m     @     0x7fcadadb7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67651)[0m     @     0x7fcada259a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67626)[0m     @     0x7f1adbd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=67626)[0m     @     0x7f1adbd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=67626)[0m     @     0x7f1adc61fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67626)[0m     @     0x7f1adc642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67571)[0m     @     0x7f784c116ad3 at::TensorIterator::for_each()
[2m[36m(pid=67571)[0m     @     0x7f784c116d91 at::TensorIterator::for_each()
[2m[36m(pid=67571)[0m     @     0x7f784c9f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67571)[0m     @     0x7f784ca1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67676)[0m     @     0x7ee44714e4f5 at::Tensor::copy_()
[2m[36m(pid=67676)[0m     @     0x7ee44d1f979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67676)[0m     @     0x55bffce4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67676)[0m     @     0x55bffcda8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67676)[0m     @     0x55bffce33baf _PyEval_EvalCodeWithName
[2m[36m(pid=67676)[0m     @     0x55bffce34a20 method_vectorcall
[2m[36m(pid=67676)[0m     @     0x55bffcda8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67676)[0m     @     0x55bffce33baf _PyEval_EvalCodeWithName
[2m[36m(pid=67676)[0m     @     0x55bffce34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67676)[0m     @     0x55bffcda9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67676)[0m     @     0x55bffce33baf _PyEval_EvalCodeWithName
[2m[36m(pid=67676)[0m     @     0x55bffce34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67676)[0m     @     0x55bffcda9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67676)[0m     @     0x55bffce33baf _PyEval_EvalCodeWithName
[2m[36m(pid=67676)[0m     @     0x55bffce34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67676)[0m     @     0x55bffcda9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67676)[0m     @     0x55bffce33baf _PyEval_EvalCodeWithName
[2m[36m(pid=67676)[0m     @     0x55bffce34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67676)[0m     @     0x55bffcda9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m     @     0x7f860fa5aad3 at::TensorIterator::for_each()
[2m[36m(pid=67570)[0m     @     0x7f860fa5ad91 at::TensorIterator::for_each()
[2m[36m(pid=67570)[0m     @     0x7f861033db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67582)[0m     @     0x7f64dc751ad3 at::TensorIterator::for_each()
[2m[36m(pid=67582)[0m     @     0x7f64dc751d91 at::TensorIterator::for_each()
[2m[36m(pid=67582)[0m     @     0x7f64dd034b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67582)[0m     @     0x7f64dd057c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67586)[0m     @     0x7edc1614fad3 at::TensorIterator::for_each()
[2m[36m(pid=67586)[0m     @     0x7edc1614fd91 at::TensorIterator::for_each()
[2m[36m(pid=67586)[0m     @     0x7edc16a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67586)[0m     @     0x7edc16a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67566)[0m     @     0x7f3dca3238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67566)[0m     @     0x7f3dca323ad3 at::TensorIterator::for_each()
[2m[36m(pid=67619)[0m     @     0x7fc167229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67619)[0m     @     0x7fc1669547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67619)[0m     @     0x7fc1669578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67643)[0m     @     0x7fc2aaf777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67643)[0m     @     0x7fc2aaf7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67643)[0m     @     0x7fc2aaf7aad3 at::TensorIterator::for_each()
[2m[36m(pid=67588)[0m *** Aborted at 1604573513 (unix time) try "date -d @1604573513" if you are using GNU date ***
[2m[36m(pid=67588)[0m PC: @                0x0 (unknown)
[2m[36m(pid=67588)[0m *** SIGSEGV (@0x0) received by PID 67588 (TID 0x7f2bddafb700) from PID 0; stack trace: ***
[2m[36m(pid=67588)[0m     @     0x7f2bdd6d4390 (unknown)
[2m[36m(pid=67588)[0m     @     0x7efcdd674f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67587)[0m     @     0x7f8aeed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67585)[0m     @     0x7fcb2663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67585)[0m     @     0x7fcb266418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67671)[0m     @     0x7f6c5c0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67671)[0m     @     0x7f6c5b7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67671)[0m     @     0x7f6c5b7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67628)[0m     @     0x7f6185138ad3 at::TensorIterator::for_each()
[2m[36m(pid=67628)[0m     @     0x7f6185138d91 at::TensorIterator::for_each()
[2m[36m(pid=67628)[0m     @     0x7f6185a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67628)[0m     @     0x7f6185a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67634)[0m     @     0x7fae6d33fd91 at::TensorIterator::for_each()
[2m[36m(pid=67634)[0m     @     0x7fae6dc22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67634)[0m     @     0x7fae6dc45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67679)[0m     @     0x7f7336e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=67679)[0m     @     0x7f7336e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=67679)[0m     @     0x7f7337762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67679)[0m     @     0x7f7337785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67624)[0m     @     0x7f8d92e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67583)[0m     @     0x7f5600f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67583)[0m     @     0x7f5600f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=67583)[0m     @     0x7f5600f27d91 at::TensorIterator::for_each()
[2m[36m(pid=67682)[0m     @     0x7f53b0269ad3 at::TensorIterator::for_each()
[2m[36m(pid=67682)[0m     @     0x7f53b0269d91 at::TensorIterator::for_each()
[2m[36m(pid=67682)[0m     @     0x7f53b0b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67682)[0m     @     0x7f53b0b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67682)[0m     @     0x7f53b0011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67682)[0m     @     0x7f53b000f388 at::native::copy_impl()
[2m[36m(pid=67575)[0m     @     0x7f6beefccad3 at::TensorIterator::for_each()
[2m[36m(pid=67575)[0m     @     0x7f6beefccd91 at::TensorIterator::for_each()
[2m[36m(pid=67575)[0m     @     0x7f6bef8afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67575)[0m     @     0x7f6bef8d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67575)[0m     @     0x7f6beed74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67575)[0m     @     0x7f6beed72388 at::native::copy_impl()
[2m[36m(pid=67630)[0m     @     0x7f588642a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67630)[0m     @     0x7f588642aad3 at::TensorIterator::for_each()
[2m[36m(pid=67576)[0m     @     0x7f3145ee2390 (unknown)
[2m[36m(pid=67576)[0m     @     0x7f0245e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67576)[0m     @     0x7f024554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67576)[0m     @     0x7f02455528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67565)[0m     @     0x7fbd2cabf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67565)[0m     @     0x7fbd2cabfad3 at::TensorIterator::for_each()
[2m[36m(pid=67565)[0m     @     0x7fbd2cabfd91 at::TensorIterator::for_each()
[2m[36m(pid=67565)[0m     @     0x7fbd2d3a2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67565)[0m     @     0x7fbd2d3c5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67684)[0m     @     0x7ff762f9c390 (unknown)
[2m[36m(pid=67684)[0m     @     0x7fc862f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=67684)[0m     @     0x7fc86263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67684)[0m     @     0x7fc8626418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67678)[0m     @     0x7f5c007e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67678)[0m     @     0x7f5c007e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=67678)[0m     @     0x7f5c007e3d91 at::TensorIterator::for_each()
[2m[36m(pid=67678)[0m     @     0x7f5c010c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67678)[0m     @     0x7f5c010e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67574)[0m     @     0x7f1b89ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=67574)[0m     @     0x7f1b8a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67574)[0m     @     0x7f1b8a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67574)[0m     @     0x7f1b89c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67574)[0m     @     0x7f1b89c8f388 at::native::copy_impl()
[2m[36m(pid=67567)[0m     @     0x7fb8e83a2d91 at::TensorIterator::for_each()
[2m[36m(pid=67567)[0m     @     0x7fb8e8c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67567)[0m     @     0x7fb8e8ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67567)[0m     @     0x7fb8e814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67567)[0m     @     0x7fb8e8148388 at::native::copy_impl()
[2m[36m(pid=67694)[0m     @     0x7f051351ed91 at::TensorIterator::for_each()
[2m[36m(pid=67694)[0m     @     0x7f0513e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67694)[0m     @     0x7f0513e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67694)[0m     @     0x7f05132c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67694)[0m     @     0x7f05132c4388 at::native::copy_impl()
[2m[36m(pid=67573)[0m     @     0x7f3a7506ed91 at::TensorIterator::for_each()
[2m[36m(pid=67573)[0m     @     0x7f3a75951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67573)[0m     @     0x7f3a75974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67573)[0m     @     0x7f3a74e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67573)[0m     @     0x7f3a74e14388 at::native::copy_impl()
[2m[36m(pid=67656)[0m     @     0x7f31d6398ad3 at::TensorIterator::for_each()
[2m[36m(pid=67656)[0m     @     0x7f31d6398d91 at::TensorIterator::for_each()
[2m[36m(pid=67656)[0m     @     0x7f31d6c7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67656)[0m     @     0x7f31d6c9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67674)[0m     @     0x7f05c5ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67674)[0m     @     0x7f05c5ea0388 at::native::copy_impl()
[2m[36m(pid=67674)[0m     @     0x7f05c5ea25a4 at::native::copy_()
[2m[36m(pid=67600)[0m     @     0x7fb71cbd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67600)[0m     @     0x7fb71cbd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=67593)[0m     @     0x7fc7c0e2fd91 at::TensorIterator::for_each()
[2m[36m(pid=67593)[0m     @     0x7fc7c1712b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67593)[0m     @     0x7fc7c1735c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67593)[0m     @     0x7fc7c0bd7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67593)[0m     @     0x7fc7c0bd5388 at::native::copy_impl()
[2m[36m(pid=67584)[0m     @     0x7f450cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67584)[0m     @     0x7f450cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=67584)[0m     @     0x7f450cafad91 at::TensorIterator::for_each()
[2m[36m(pid=67584)[0m     @     0x7f450d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67603)[0m     @     0x7f01b4c11d91 at::TensorIterator::for_each()
[2m[36m(pid=67603)[0m     @     0x7f01b54f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67603)[0m     @     0x7f01b5517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67603)[0m     @     0x7f01b49b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67603)[0m     @     0x7f01b49b7388 at::native::copy_impl()
[2m[36m(pid=67601)[0m     @     0x7f7ab5e38d91 at::TensorIterator::for_each()
[2m[36m(pid=67601)[0m     @     0x7f7ab671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67601)[0m     @     0x7f7ab673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67601)[0m     @     0x7f7ab5be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67601)[0m     @     0x7f7ab5bde388 at::native::copy_impl()
[2m[36m(pid=67696)[0m     @     0x7fafd3dadc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67696)[0m     @     0x7fafd324fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67696)[0m     @     0x7fafd324d388 at::native::copy_impl()
[2m[36m(pid=67696)[0m     @     0x7fafd324f5a4 at::native::copy_()
[2m[36m(pid=67579)[0m     @     0x7f82990c2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67579)[0m     @     0x7f82990c0388 at::native::copy_impl()
[2m[36m(pid=67579)[0m     @     0x7f82990c25a4 at::native::copy_()
[2m[36m(pid=67689)[0m     @     0x55f591b75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67689)[0m     @     0x55f591aea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67689)[0m     @     0x55f591b74baf _PyEval_EvalCodeWithName
[2m[36m(pid=67689)[0m     @     0x55f591b75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67689)[0m     @     0x55f591aea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67689)[0m     @     0x55f591b74baf _PyEval_EvalCodeWithName
[2m[36m(pid=67689)[0m     @     0x55f591b75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67689)[0m     @     0x55f591aea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67689)[0m     @     0x55f591b74baf _PyEval_EvalCodeWithName
[2m[36m(pid=67689)[0m     @     0x55f591b75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67689)[0m     @     0x55f591aea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x7fc0af176d91 at::TensorIterator::for_each()
[2m[36m(pid=67648)[0m     @     0x7fc0afa59b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67648)[0m     @     0x7fc0afa7cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67648)[0m     @     0x7fc0aef1ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67648)[0m     @     0x7fc0aef1c388 at::native::copy_impl()
[2m[36m(pid=67670)[0m     @     0x7f94c1a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=67670)[0m     @     0x7f94c1a93d91 at::TensorIterator::for_each()
[2m[36m(pid=67670)[0m     @     0x7f94c2376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67670)[0m     @     0x7f94c2399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67693)[0m     @     0x7f7e619e7d91 at::TensorIterator::for_each()
[2m[36m(pid=67693)[0m     @     0x7f7e622cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67693)[0m     @     0x7f7e622edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67693)[0m     @     0x7f7e6178fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67581)[0m     @     0x7f67a052ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67581)[0m     @     0x7f679f9cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67581)[0m     @     0x7f679f9ca388 at::native::copy_impl()
[2m[36m(pid=67581)[0m     @     0x7f679f9cc5a4 at::native::copy_()
[2m[36m(pid=67581)[0m     @     0x7f67a00b74f5 at::Tensor::copy_()
[2m[36m(pid=67672)[0m     @     0x7f3fdbdefb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67672)[0m     @     0x7f3fdbe12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67672)[0m     @     0x7f3fdb2b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67672)[0m     @     0x7f3fdb2b2388 at::native::copy_impl()
[2m[36m(pid=67672)[0m     @     0x7f3fdb2b45a4 at::native::copy_()
[2m[36m(pid=67599)[0m     @     0x7fba2e4ded91 at::TensorIterator::for_each()
[2m[36m(pid=67599)[0m     @     0x7fba2edc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67599)[0m     @     0x7fba2ede4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67599)[0m     @     0x7fba2e286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67599)[0m     @     0x7fba2e284388 at::native::copy_impl()
[2m[36m(pid=67599)[0m     @     0x7fba2e2865a4 at::native::copy_()
[2m[36m(pid=67578)[0m     @     0x7f0a12b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=67578)[0m     @     0x7f0a12b68d91 at::TensorIterator::for_each()
[2m[36m(pid=67578)[0m     @     0x7f0a1344bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67578)[0m     @     0x7f0a1346ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67635)[0m     @     0x7f3825517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67635)[0m     @     0x7f38249b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67635)[0m     @     0x7f38249b7388 at::native::copy_impl()
[2m[36m(pid=67635)[0m     @     0x7f38249b95a4 at::native::copy_()
[2m[36m(pid=67635)[0m     @     0x7f38250a44f5 at::Tensor::copy_()
[2m[36m(pid=67640)[0m     @     0x7edca07e3d91 at::TensorIterator::for_each()
[2m[36m(pid=67640)[0m     @     0x7edca10c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67640)[0m     @     0x7edca10e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67640)[0m     @     0x7edca058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67640)[0m     @     0x7edca0589388 at::native::copy_impl()
[2m[36m(pid=67640)[0m     @     0x7edca058b5a4 at::native::copy_()
[2m[36m(pid=67658)[0m     @     0x7fb096780d91 at::TensorIterator::for_each()
[2m[36m(pid=67658)[0m     @     0x7fb097063b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67658)[0m     @     0x7fb097086c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67658)[0m     @     0x7fb096528a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67658)[0m     @     0x7fb096526388 at::native::copy_impl()
[2m[36m(pid=67658)[0m     @     0x7fb0965285a4 at::native::copy_()
[2m[36m(pid=67622)[0m     @     0x7f8569e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67622)[0m     @     0x7f85692faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67622)[0m     @     0x7f85692f8388 at::native::copy_impl()
[2m[36m(pid=67622)[0m     @     0x7f85692fa5a4 at::native::copy_()
[2m[36m(pid=67649)[0m     @     0x7f4c2d9a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67649)[0m     @     0x7f4c2d9a0388 at::native::copy_impl()
[2m[36m(pid=67649)[0m     @     0x7f4c2d9a25a4 at::native::copy_()
[2m[36m(pid=67649)[0m     @     0x7f4c2e08d4f5 at::Tensor::copy_()
[2m[36m(pid=67646)[0m     @     0x7fa1f0e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67646)[0m     @     0x7fa1f02e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67646)[0m     @     0x7fa1f02e6388 at::native::copy_impl()
[2m[36m(pid=67646)[0m     @     0x7fa1f02e85a4 at::native::copy_()
[2m[36m(pid=67594)[0m     @     0x7f44bb23ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67594)[0m     @     0x7f44bb23a388 at::native::copy_impl()
[2m[36m(pid=67594)[0m     @     0x7f44bb23c5a4 at::native::copy_()
[2m[36m(pid=67594)[0m     @     0x7f44bb9274f5 at::Tensor::copy_()
[2m[36m(pid=67644)[0m     @     0x7f3211c85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67644)[0m     @     0x7f3211127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67644)[0m     @     0x7f3211125388 at::native::copy_impl()
[2m[36m(pid=67644)[0m     @     0x7f32111275a4 at::native::copy_()
[2m[36m(pid=67568)[0m     @     0x7fae174c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67568)[0m     @     0x7fae16965a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67568)[0m     @     0x7fae16963388 at::native::copy_impl()
[2m[36m(pid=67568)[0m     @     0x7fae169655a4 at::native::copy_()
[2m[36m(pid=67568)[0m     @     0x7fae170504f5 at::Tensor::copy_()
[2m[36m(pid=67652)[0m     @     0x7f790e957d91 at::TensorIterator::for_each()
[2m[36m(pid=67652)[0m     @     0x7f790f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67652)[0m     @     0x7f790f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67652)[0m     @     0x7f790e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67652)[0m     @     0x7f790e6fd388 at::native::copy_impl()
[2m[36m(pid=67652)[0m     @     0x7f790e6ff5a4 at::native::copy_()
[2m[36m(pid=67654)[0m     @     0x7f9c210e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67654)[0m     @     0x7f9c2058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67654)[0m     @     0x7f9c20589388 at::native::copy_impl()
[2m[36m(pid=67654)[0m     @     0x7f9c2058b5a4 at::native::copy_()
[2m[36m(pid=67569)[0m     @     0x7f36266ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67569)[0m     @     0x7f36266fd388 at::native::copy_impl()
[2m[36m(pid=67569)[0m     @     0x7f36266ff5a4 at::native::copy_()
[2m[36m(pid=67569)[0m     @     0x7f3626dea4f5 at::Tensor::copy_()
[2m[36m(pid=67569)[0m     @     0x7f36292bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67642)[0m     @     0x7f24740add91 at::TensorIterator::for_each()
[2m[36m(pid=67642)[0m     @     0x7f2474990b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67642)[0m     @     0x7f24749b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67642)[0m     @     0x7f2473e55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67642)[0m     @     0x7f2473e53388 at::native::copy_impl()
[2m[36m(pid=67642)[0m     @     0x7f2473e555a4 at::native::copy_()
[2m[36m(pid=67591)[0m     @     0x7f85c458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67591)[0m     @     0x7f85c4589388 at::native::copy_impl()
[2m[36m(pid=67591)[0m     @     0x7f85c458b5a4 at::native::copy_()
[2m[36m(pid=67591)[0m     @     0x7f85c4c764f5 at::Tensor::copy_()
[2m[36m(pid=67591)[0m     @     0x7f85c71498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67580)[0m     @     0x7f1a15669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67580)[0m     @     0x7f1a15667388 at::native::copy_impl()
[2m[36m(pid=67580)[0m     @     0x7f1a156695a4 at::native::copy_()
[2m[36m(pid=67580)[0m     @     0x7f1a15d544f5 at::Tensor::copy_()
[2m[36m(pid=67596)[0m     @     0x7f775ec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67596)[0m     @     0x7f775ec25388 at::native::copy_impl()
[2m[36m(pid=67596)[0m     @     0x7f775ec275a4 at::native::copy_()
[2m[36m(pid=67596)[0m     @     0x7f775f3124f5 at::Tensor::copy_()
[2m[36m(pid=67596)[0m     @     0x7f77617e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67691)[0m     @     0x7f1a93653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67691)[0m     @     0x7f1a92af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67691)[0m     @     0x7f1a92af3388 at::native::copy_impl()
[2m[36m(pid=67691)[0m     @     0x7f1a92af55a4 at::native::copy_()
[2m[36m(pid=67651)[0m     @     0x7fcada257388 at::native::copy_impl()
[2m[36m(pid=67651)[0m     @     0x7fcada2595a4 at::native::copy_()
[2m[36m(pid=67651)[0m     @     0x7fcada9444f5 at::Tensor::copy_()
[2m[36m(pid=67651)[0m     @     0x7fcadce178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67626)[0m     @     0x7f1adbae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67626)[0m     @     0x7f1adbae2388 at::native::copy_impl()
[2m[36m(pid=67626)[0m     @     0x7f1adbae45a4 at::native::copy_()
[2m[36m(pid=67626)[0m     @     0x7f1adc1cf4f5 at::Tensor::copy_()
[2m[36m(pid=67571)[0m     @     0x7f784bebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67571)[0m     @     0x7f784bebc388 at::native::copy_impl()
[2m[36m(pid=67571)[0m     @     0x7f784bebe5a4 at::native::copy_()
[2m[36m(pid=67571)[0m     @     0x7f784c5a94f5 at::Tensor::copy_()
[2m[36m(pid=67570)[0m     @     0x7f8610360c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67570)[0m     @     0x7f860f802a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67570)[0m     @     0x7f860f800388 at::native::copy_impl()
[2m[36m(pid=67570)[0m     @     0x7f860f8025a4 at::native::copy_()
[2m[36m(pid=67570)[0m     @     0x7f860feed4f5 at::Tensor::copy_()
[2m[36m(pid=67582)[0m     @     0x7f64dc4f9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67582)[0m     @     0x7f64dc4f7388 at::native::copy_impl()
[2m[36m(pid=67582)[0m     @     0x7f64dc4f95a4 at::native::copy_()
[2m[36m(pid=67582)[0m     @     0x7f64dcbe44f5 at::Tensor::copy_()
[2m[36m(pid=67582)[0m     @     0x7f64df0b78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67586)[0m     @     0x7edc15ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67586)[0m     @     0x7edc15ef5388 at::native::copy_impl()
[2m[36m(pid=67586)[0m     @     0x7edc15ef75a4 at::native::copy_()
[2m[36m(pid=67586)[0m     @     0x7edc165e24f5 at::Tensor::copy_()
[2m[36m(pid=67586)[0m     @     0x7edc18ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67566)[0m     @     0x7f3dca323d91 at::TensorIterator::for_each()
[2m[36m(pid=67566)[0m     @     0x7f3dcac06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67566)[0m     @     0x7f3dcac29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67566)[0m     @     0x7f3dca0cba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67566)[0m     @     0x7f3dca0c9388 at::native::copy_impl()
[2m[36m(pid=67566)[0m     @     0x7f3dca0cb5a4 at::native::copy_()
[2m[36m(pid=67619)[0m     @     0x7fc166957ad3 at::TensorIterator::for_each()
[2m[36m(pid=67619)[0m     @     0x7fc166957d91 at::TensorIterator::for_each()
[2m[36m(pid=67619)[0m     @     0x7fc16723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67619)[0m     @     0x7fc16725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67619)[0m     @     0x7fc1666ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67619)[0m     @     0x7fc1666fd388 at::native::copy_impl()
[2m[36m(pid=67643)[0m     @     0x7fc2aaf7ad91 at::TensorIterator::for_each()
[2m[36m(pid=67643)[0m     @     0x7fc2ab85db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67643)[0m     @     0x7fc2ab880c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67643)[0m     @     0x7fc2aad22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67643)[0m     @     0x7fc2aad20388 at::native::copy_impl()
[2m[36m(pid=67588)[0m     @     0x7efcdcd9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=67588)[0m     @     0x7efcdcda28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67588)[0m     @     0x7efcdcda2ad3 at::TensorIterator::for_each()
[2m[36m(pid=67587)[0m     @     0x7f8aeed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67587)[0m     @     0x7f8aeed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=67587)[0m     @     0x7f8aeed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=67587)[0m     @     0x7f8aef630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67587)[0m     @     0x7f8aef653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67585)[0m     @     0x7fcb26641ad3 at::TensorIterator::for_each()
[2m[36m(pid=67585)[0m     @     0x7fcb26641d91 at::TensorIterator::for_each()
[2m[36m(pid=67585)[0m     @     0x7fcb26f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67585)[0m     @     0x7fcb26f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67585)[0m     @     0x7fcb263e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67585)[0m     @     0x7fcb263e7388 at::native::copy_impl()
[2m[36m(pid=67671)[0m     @     0x7f6c5b7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=67671)[0m     @     0x7f6c5b7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=67671)[0m     @     0x7f6c5c0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67671)[0m     @     0x7f6c5c101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67671)[0m     @     0x7f6c5b5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67671)[0m     @     0x7f6c5b5a1388 at::native::copy_impl()
[2m[36m(pid=67628)[0m     @     0x7f6184ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67628)[0m     @     0x7f6184ede388 at::native::copy_impl()
[2m[36m(pid=67628)[0m     @     0x7f6184ee05a4 at::native::copy_()
[2m[36m(pid=67628)[0m     @     0x7f61855cb4f5 at::Tensor::copy_()
[2m[36m(pid=67628)[0m     @     0x7f6187a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67634)[0m     @     0x7fae6d0e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67634)[0m     @     0x7fae6d0e5388 at::native::copy_impl()
[2m[36m(pid=67634)[0m     @     0x7fae6d0e75a4 at::native::copy_()
[2m[36m(pid=67634)[0m     @     0x7fae6d7d24f5 at::Tensor::copy_()
[2m[36m(pid=67634)[0m     @     0x7fae6fca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67679)[0m     @     0x7f7336c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67679)[0m     @     0x7f7336c25388 at::native::copy_impl()
[2m[36m(pid=67679)[0m     @     0x7f7336c275a4 at::native::copy_()
[2m[36m(pid=67679)[0m     @     0x7f73373124f5 at::Tensor::copy_()
[2m[36m(pid=67679)[0m     @     0x7f73397e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67624)[0m     @     0x7f8d92e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=67583)[0m     @     0x7f560180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67583)[0m     @     0x7f560182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67583)[0m     @     0x7f5600ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67583)[0m     @     0x7f5600ccd388 at::native::copy_impl()
[2m[36m(pid=67583)[0m     @     0x7f5600ccf5a4 at::native::copy_()
[2m[36m(pid=67682)[0m     @     0x7f53b00115a4 at::native::copy_()
[2m[36m(pid=67682)[0m     @     0x7f53b06fc4f5 at::Tensor::copy_()
[2m[36m(pid=67682)[0m     @     0x7f53b2bcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67575)[0m     @     0x7f6beed745a4 at::native::copy_()
[2m[36m(pid=67575)[0m     @     0x7f6bef45f4f5 at::Tensor::copy_()
[2m[36m(pid=67630)[0m     @     0x7f588642ad91 at::TensorIterator::for_each()
[2m[36m(pid=67630)[0m     @     0x7f5886d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67630)[0m     @     0x7f5886d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67630)[0m     @     0x7f58861d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67630)[0m     @     0x7f58861d0388 at::native::copy_impl()
[2m[36m(pid=67576)[0m     @     0x7f0245552ad3 at::TensorIterator::for_each()
[2m[36m(pid=67576)[0m     @     0x7f0245552d91 at::TensorIterator::for_each()
[2m[36m(pid=67565)[0m     @     0x7fbd2c867a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67565)[0m     @     0x7fbd2c865388 at::native::copy_impl()
[2m[36m(pid=67565)[0m     @     0x7fbd2c8675a4 at::native::copy_()
[2m[36m(pid=67684)[0m     @     0x7fc862641ad3 at::TensorIterator::for_each()
[2m[36m(pid=67684)[0m     @     0x7fc862641d91 at::TensorIterator::for_each()
[2m[36m(pid=67684)[0m     @     0x7fc862f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67684)[0m     @     0x7fc862f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67678)[0m     @     0x7f5c0058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67678)[0m     @     0x7f5c00589388 at::native::copy_impl()
[2m[36m(pid=67678)[0m     @     0x7f5c0058b5a4 at::native::copy_()
[2m[36m(pid=67574)[0m     @     0x7f1b89c915a4 at::native::copy_()
[2m[36m(pid=67574)[0m     @     0x7f1b8a37c4f5 at::Tensor::copy_()
[2m[36m(pid=67574)[0m     @     0x7f1b8c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67574)[0m     @     0x7f1b8a37c4f5 at::Tensor::copy_()
[2m[36m(pid=67574)[0m     @     0x7f1b9042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67574)[0m     @     0x562694eeafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67574)[0m     @     0x562694e45b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67574)[0m     @     0x562694ed0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67574)[0m     @     0x562694ed1a20 method_vectorcall
[2m[36m(pid=67574)[0m     @     0x562694e45bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67574)[0m     @     0x562694ed0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67574)[0m     @     0x562694ed1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67574)[0m     @     0x562694e46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67574)[0m     @     0x562694ed0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67567)[0m     @     0x7fb8e814a5a4 at::native::copy_()
[2m[36m(pid=67567)[0m     @     0x7fb8e88354f5 at::Tensor::copy_()
[2m[36m(pid=67567)[0m     @     0x7fb8ead088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67567)[0m     @     0x7fb8e88354f5 at::Tensor::copy_()
[2m[36m(pid=67567)[0m     @     0x7fb8ee8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67567)[0m     @     0x5609b2d58fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67567)[0m     @     0x5609b2cb3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67694)[0m     @     0x7f05132c65a4 at::native::copy_()
[2m[36m(pid=67694)[0m     @     0x7f05139b14f5 at::Tensor::copy_()
[2m[36m(pid=67694)[0m     @     0x7f0515e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67573)[0m     @     0x7f3a74e165a4 at::native::copy_()
[2m[36m(pid=67573)[0m     @     0x7f3a755014f5 at::Tensor::copy_()
[2m[36m(pid=67573)[0m     @     0x7f3a779d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67573)[0m     @     0x7f3a755014f5 at::Tensor::copy_()
[2m[36m(pid=67656)[0m     @     0x7f31d6140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67656)[0m     @     0x7f31d613e388 at::native::copy_impl()
[2m[36m(pid=67656)[0m     @     0x7f31d61405a4 at::native::copy_()
[2m[36m(pid=67656)[0m     @     0x7f31d682b4f5 at::Tensor::copy_()
[2m[36m(pid=67674)[0m     @     0x7f05c658d4f5 at::Tensor::copy_()
[2m[36m(pid=67674)[0m     @     0x7f05c8a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67674)[0m     @     0x7f05c658d4f5 at::Tensor::copy_()
[2m[36m(pid=67674)[0m     @     0x7f05cc63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67674)[0m     @     0x563241499fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67674)[0m     @     0x5632413f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67674)[0m     @     0x56324147fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67674)[0m     @     0x563241480a20 method_vectorcall
[2m[36m(pid=67674)[0m     @     0x5632413f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67674)[0m     @     0x56324147fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67674)[0m     @     0x563241480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67674)[0m     @     0x5632413f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67674)[0m     @     0x56324147fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67674)[0m     @     0x563241480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67674)[0m     @     0x5632413f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67674)[0m     @     0x56324147fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67674)[0m     @     0x563241480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67674)[0m     @     0x5632413f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67674)[0m     @     0x56324147fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67674)[0m     @     0x563241480643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67674)[0m     @     0x5632413f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x7fb71cbd1d91 at::TensorIterator::for_each()
[2m[36m(pid=67600)[0m     @     0x7fb71d4b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67600)[0m     @     0x7fb71d4d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67600)[0m     @     0x7fb71c979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67600)[0m     @     0x7fb71c977388 at::native::copy_impl()
[2m[36m(pid=67593)[0m     @     0x7fc7c0bd75a4 at::native::copy_()
[2m[36m(pid=67593)[0m     @     0x7fc7c12c24f5 at::Tensor::copy_()
[2m[36m(pid=67593)[0m     @     0x7fc7c37958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67593)[0m     @     0x7fc7c12c24f5 at::Tensor::copy_()
[2m[36m(pid=67584)[0m     @     0x7f450d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67584)[0m     @     0x7f450c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67584)[0m     @     0x7f450c8a0388 at::native::copy_impl()
[2m[36m(pid=67584)[0m     @     0x7f450c8a25a4 at::native::copy_()
[2m[36m(pid=67603)[0m     @     0x7f01b49b95a4 at::native::copy_()
[2m[36m(pid=67603)[0m     @     0x7f01b50a44f5 at::Tensor::copy_()
[2m[36m(pid=67603)[0m     @     0x7f01b75778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67603)[0m     @     0x7f01b50a44f5 at::Tensor::copy_()
[2m[36m(pid=67601)[0m     @     0x7f7ab5be05a4 at::native::copy_()
[2m[36m(pid=67601)[0m     @     0x7f7ab62cb4f5 at::Tensor::copy_()
[2m[36m(pid=67601)[0m     @     0x7f7ab879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67601)[0m     @     0x7f7ab62cb4f5 at::Tensor::copy_()
[2m[36m(pid=67696)[0m     @     0x7fafd393a4f5 at::Tensor::copy_()
[2m[36m(pid=67696)[0m     @     0x7fafd5e0d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67696)[0m     @     0x7fafd393a4f5 at::Tensor::copy_()
[2m[36m(pid=67696)[0m     @     0x7fafd99e579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67696)[0m     @     0x55aa17784fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67696)[0m     @     0x55aa176dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67696)[0m     @     0x55aa1776abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67696)[0m     @     0x55aa1776ba20 method_vectorcall
[2m[36m(pid=67696)[0m     @     0x55aa176dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67696)[0m     @     0x55aa1776abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67696)[0m     @     0x55aa1776b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67696)[0m     @     0x55aa176e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67696)[0m     @     0x55aa1776abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67696)[0m     @     0x55aa1776b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67696)[0m     @     0x55aa176e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67696)[0m     @     0x55aa1776abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67696)[0m     @     0x55aa1776b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67696)[0m     @     0x55aa176e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67696)[0m     @     0x55aa1776abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67696)[0m     @     0x55aa1776b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67696)[0m     @     0x55aa176e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67579)[0m     @     0x7f82997ad4f5 at::Tensor::copy_()
[2m[36m(pid=67579)[0m     @     0x7f829bc808de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67579)[0m     @     0x7f82997ad4f5 at::Tensor::copy_()
[2m[36m(pid=67579)[0m     @     0x7f829f85879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67579)[0m     @     0x564c3e0d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67579)[0m     @     0x564c3e033b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67579)[0m     @     0x564c3e0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67579)[0m     @     0x564c3e0bfa20 method_vectorcall
[2m[36m(pid=67579)[0m     @     0x564c3e033bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67579)[0m     @     0x564c3e0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67579)[0m     @     0x564c3e0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67579)[0m     @     0x564c3e034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67579)[0m     @     0x564c3e0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67579)[0m     @     0x564c3e0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67579)[0m     @     0x564c3e034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67579)[0m     @     0x564c3e0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67579)[0m     @     0x564c3e0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67579)[0m     @     0x564c3e034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67579)[0m     @     0x564c3e0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67579)[0m     @     0x564c3e0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67579)[0m     @     0x564c3e034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x7fc0aef1e5a4 at::native::copy_()
[2m[36m(pid=67648)[0m     @     0x7fc0af6094f5 at::Tensor::copy_()
[2m[36m(pid=67648)[0m     @     0x7fc0b1adc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67648)[0m     @     0x7fc0af6094f5 at::Tensor::copy_()
[2m[36m(pid=67670)[0m     @     0x7f94c183ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67670)[0m     @     0x7f94c1839388 at::native::copy_impl()
[2m[36m(pid=67670)[0m     @     0x7f94c183b5a4 at::native::copy_()
[2m[36m(pid=67670)[0m     @     0x7f94c1f264f5 at::Tensor::copy_()
[2m[36m(pid=67693)[0m     @     0x7f7e6178d388 at::native::copy_impl()
[2m[36m(pid=67693)[0m     @     0x7f7e6178f5a4 at::native::copy_()
[2m[36m(pid=67693)[0m     @     0x7f7e61e7a4f5 at::Tensor::copy_()
[2m[36m(pid=67581)[0m     @     0x7f67a258a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67581)[0m     @     0x7f67a00b74f5 at::Tensor::copy_()
[2m[36m(pid=67581)[0m     @     0x7f67a616279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67581)[0m     @     0x563ea972ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67581)[0m     @     0x563ea968ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67581)[0m     @     0x563ea9715baf _PyEval_EvalCodeWithName
[2m[36m(pid=67581)[0m     @     0x563ea9716a20 method_vectorcall
[2m[36m(pid=67581)[0m     @     0x563ea968abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67581)[0m     @     0x563ea9715baf _PyEval_EvalCodeWithName
[2m[36m(pid=67581)[0m     @     0x563ea9716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67581)[0m     @     0x563ea968b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67581)[0m     @     0x563ea9715baf _PyEval_EvalCodeWithName
[2m[36m(pid=67581)[0m     @     0x563ea9716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67581)[0m     @     0x563ea968b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67581)[0m     @     0x563ea9715baf _PyEval_EvalCodeWithName
[2m[36m(pid=67581)[0m     @     0x563ea9716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67581)[0m     @     0x563ea968b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67672)[0m     @     0x7f3fdb99f4f5 at::Tensor::copy_()
[2m[36m(pid=67672)[0m     @     0x7f3fdde728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67672)[0m     @     0x7f3fdb99f4f5 at::Tensor::copy_()
[2m[36m(pid=67672)[0m     @     0x7f3fe1a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67599)[0m     @     0x7fba2e9714f5 at::Tensor::copy_()
[2m[36m(pid=67599)[0m     @     0x7fba30e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67599)[0m     @     0x7fba2e9714f5 at::Tensor::copy_()
[2m[36m(pid=67599)[0m     @     0x7fba34a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67599)[0m     @     0x557352397fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67599)[0m     @     0x5573522f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67599)[0m     @     0x55735237dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67599)[0m     @     0x55735237ea20 method_vectorcall
[2m[36m(pid=67599)[0m     @     0x5573522f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67599)[0m     @     0x55735237dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67599)[0m     @     0x55735237e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67599)[0m     @     0x5573522f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67578)[0m     @     0x7f0a12910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67578)[0m     @     0x7f0a1290e388 at::native::copy_impl()
[2m[36m(pid=67635)[0m     @     0x7f38275778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67635)[0m     @     0x7f38250a44f5 at::Tensor::copy_()
[2m[36m(pid=67635)[0m     @     0x7f382b14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67635)[0m     @     0x558b81a0afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67635)[0m     @     0x558b81965b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67635)[0m     @     0x558b819f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67635)[0m     @     0x558b819f1a20 method_vectorcall
[2m[36m(pid=67635)[0m     @     0x558b81965bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67635)[0m     @     0x558b819f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67635)[0m     @     0x558b819f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67635)[0m     @     0x558b81966689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67635)[0m     @     0x558b819f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67635)[0m     @     0x558b819f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67635)[0m     @     0x558b81966689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67635)[0m     @     0x558b819f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67635)[0m     @     0x558b819f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67635)[0m     @     0x558b81966689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67635)[0m     @     0x558b819f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67640)[0m     @     0x7edca0c764f5 at::Tensor::copy_()
[2m[36m(pid=67640)[0m     @     0x7edca31498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67658)[0m     @     0x7fb096c134f5 at::Tensor::copy_()
[2m[36m(pid=67658)[0m     @     0x7fb0990e68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67658)[0m     @     0x7fb096c134f5 at::Tensor::copy_()
[2m[36m(pid=67622)[0m     @     0x7f85699e54f5 at::Tensor::copy_()
[2m[36m(pid=67622)[0m     @     0x7f856beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67622)[0m     @     0x7f85699e54f5 at::Tensor::copy_()
[2m[36m(pid=67622)[0m     @     0x7f856fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67622)[0m     @     0x55afc4356fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67622)[0m     @     0x55afc42b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67622)[0m     @     0x55afc433cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67622)[0m     @     0x55afc433da20 method_vectorcall
[2m[36m(pid=67622)[0m     @     0x55afc42b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67622)[0m     @     0x55afc433cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67622)[0m     @     0x55afc433d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67622)[0m     @     0x55afc42b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67622)[0m     @     0x55afc433cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67622)[0m     @     0x55afc433d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67649)[0m     @     0x7f4c305608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67649)[0m     @     0x7f4c2e08d4f5 at::Tensor::copy_()
[2m[36m(pid=67649)[0m     @     0x7f4c3413879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67649)[0m     @     0x556841d21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67649)[0m     @     0x556841c7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67649)[0m     @     0x556841d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=67649)[0m     @     0x556841d08a20 method_vectorcall
[2m[36m(pid=67649)[0m     @     0x556841c7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67649)[0m     @     0x556841d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=67649)[0m     @     0x556841d08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67649)[0m     @     0x556841c7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67649)[0m     @     0x556841d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=67649)[0m     @     0x556841d08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67649)[0m     @     0x556841c7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67649)[0m     @     0x556841d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=67649)[0m     @     0x556841d08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67649)[0m     @     0x556841c7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67649)[0m     @     0x556841d07baf _PyEval_EvalCodeWithName
[2m[36m(pid=67649)[0m     @     0x556841d08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67649)[0m     @     0x556841c7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67646)[0m     @     0x7fa1f09d34f5 at::Tensor::copy_()
[2m[36m(pid=67646)[0m     @     0x7fa1f2ea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67646)[0m     @     0x7fa1f09d34f5 at::Tensor::copy_()
[2m[36m(pid=67646)[0m     @     0x7fa1f6a7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67646)[0m     @     0x55dfc1df9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67646)[0m     @     0x55dfc1d54b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67646)[0m     @     0x55dfc1ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67646)[0m     @     0x55dfc1de0a20 method_vectorcall
[2m[36m(pid=67646)[0m     @     0x55dfc1d54bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67646)[0m     @     0x55dfc1ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67646)[0m     @     0x55dfc1de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67646)[0m     @     0x55dfc1d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67646)[0m     @     0x55dfc1ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67646)[0m     @     0x55dfc1de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67646)[0m     @     0x55dfc1d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67594)[0m     @     0x7f44bddfa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67594)[0m     @     0x7f44bb9274f5 at::Tensor::copy_()
[2m[36m(pid=67594)[0m     @     0x7f44c19d279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67594)[0m     @     0x5630aa702fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67594)[0m     @     0x5630aa65db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67594)[0m     @     0x5630aa6e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67594)[0m     @     0x5630aa6e9a20 method_vectorcall
[2m[36m(pid=67594)[0m     @     0x5630aa65dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67594)[0m     @     0x5630aa6e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67594)[0m     @     0x5630aa6e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67594)[0m     @     0x5630aa65e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67594)[0m     @     0x5630aa6e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67594)[0m     @     0x5630aa6e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67594)[0m     @     0x5630aa65e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67594)[0m     @     0x5630aa6e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67594)[0m     @     0x5630aa6e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67594)[0m     @     0x5630aa65e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67594)[0m     @     0x5630aa6e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67594)[0m     @     0x5630aa6e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67594)[0m     @     0x5630aa65e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67644)[0m     @     0x7f32118124f5 at::Tensor::copy_()
[2m[36m(pid=67644)[0m     @     0x7f3213ce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67644)[0m     @     0x7f32118124f5 at::Tensor::copy_()
[2m[36m(pid=67644)[0m     @     0x7f32178bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67644)[0m     @     0x5651c0f0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67644)[0m     @     0x5651c0e66b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67644)[0m     @     0x5651c0ef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=67644)[0m     @     0x5651c0ef2a20 method_vectorcall
[2m[36m(pid=67644)[0m     @     0x5651c0e66bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67644)[0m     @     0x5651c0ef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=67644)[0m     @     0x5651c0ef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67568)[0m     @     0x7fae195238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67568)[0m     @     0x7fae170504f5 at::Tensor::copy_()
[2m[36m(pid=67568)[0m     @     0x7fae1d0fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67568)[0m     @     0x55657e07bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67568)[0m     @     0x55657dfd6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67568)[0m     @     0x55657e061baf _PyEval_EvalCodeWithName
[2m[36m(pid=67568)[0m     @     0x55657e062a20 method_vectorcall
[2m[36m(pid=67568)[0m     @     0x55657dfd6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67568)[0m     @     0x55657e061baf _PyEval_EvalCodeWithName
[2m[36m(pid=67568)[0m     @     0x55657e062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67568)[0m     @     0x55657dfd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67568)[0m     @     0x55657e061baf _PyEval_EvalCodeWithName
[2m[36m(pid=67568)[0m     @     0x55657e062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67568)[0m     @     0x55657dfd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67568)[0m     @     0x55657e061baf _PyEval_EvalCodeWithName
[2m[36m(pid=67568)[0m     @     0x55657e062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67568)[0m     @     0x55657dfd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67568)[0m     @     0x55657e061baf _PyEval_EvalCodeWithName
[2m[36m(pid=67568)[0m     @     0x55657e062643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67568)[0m     @     0x55657dfd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67652)[0m     @     0x7f790edea4f5 at::Tensor::copy_()
[2m[36m(pid=67652)[0m     @     0x7f79112bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67652)[0m     @     0x7f790edea4f5 at::Tensor::copy_()
[2m[36m(pid=67654)[0m     @     0x7f9c20c764f5 at::Tensor::copy_()
[2m[36m(pid=67654)[0m     @     0x7f9c231498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67654)[0m     @     0x7f9c20c764f5 at::Tensor::copy_()
[2m[36m(pid=67654)[0m     @     0x7f9c26d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67654)[0m     @     0x557664b5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67654)[0m     @     0x557664ab8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67569)[0m     @     0x7f3626dea4f5 at::Tensor::copy_()
[2m[36m(pid=67569)[0m     @     0x7f362ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67569)[0m     @     0x55a4050ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67569)[0m     @     0x55a405047b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67569)[0m     @     0x55a4050d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67569)[0m     @     0x55a4050d3a20 method_vectorcall
[2m[36m(pid=67569)[0m     @     0x55a405047bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67569)[0m     @     0x55a4050d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67569)[0m     @     0x55a4050d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67569)[0m     @     0x55a405048689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67569)[0m     @     0x55a4050d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67569)[0m     @     0x55a4050d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67569)[0m     @     0x55a405048689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67569)[0m     @     0x55a4050d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67569)[0m     @     0x55a4050d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67569)[0m     @     0x55a405048689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67569)[0m     @     0x55a4050d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67569)[0m     @     0x55a4050d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67569)[0m     @     0x55a405048689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67642)[0m     @     0x7f24745404f5 at::Tensor::copy_()
[2m[36m(pid=67642)[0m     @     0x7f2476a138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67642)[0m     @     0x7f24745404f5 at::Tensor::copy_()
[2m[36m(pid=67591)[0m     @     0x7f85c4c764f5 at::Tensor::copy_()
[2m[36m(pid=67591)[0m     @     0x7f85cad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67591)[0m     @     0x56160970cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67591)[0m     @     0x561609667b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67591)[0m     @     0x5616096f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67591)[0m     @     0x5616096f3a20 method_vectorcall
[2m[36m(pid=67591)[0m     @     0x561609667bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67591)[0m     @     0x5616096f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67591)[0m     @     0x5616096f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67591)[0m     @     0x561609668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67591)[0m     @     0x5616096f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67591)[0m     @     0x5616096f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67591)[0m     @     0x561609668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67591)[0m     @     0x5616096f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67591)[0m     @     0x5616096f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67591)[0m     @     0x561609668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67591)[0m     @     0x5616096f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67591)[0m     @     0x5616096f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67591)[0m     @     0x561609668689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67580)[0m     @     0x7f1a182278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67580)[0m     @     0x7f1a15d544f5 at::Tensor::copy_()
[2m[36m(pid=67580)[0m     @     0x7f1a1bdff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67580)[0m     @     0x55d2a74f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67580)[0m     @     0x55d2a744bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67580)[0m     @     0x55d2a74d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=67580)[0m     @     0x55d2a74d7a20 method_vectorcall
[2m[36m(pid=67580)[0m     @     0x55d2a744bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67580)[0m     @     0x55d2a74d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=67580)[0m     @     0x55d2a74d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67580)[0m     @     0x55d2a744c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67580)[0m     @     0x55d2a74d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=67580)[0m     @     0x55d2a74d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67580)[0m     @     0x55d2a744c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67580)[0m     @     0x55d2a74d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=67580)[0m     @     0x55d2a74d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67580)[0m     @     0x55d2a744c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67580)[0m     @     0x55d2a74d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=67580)[0m     @     0x55d2a74d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67580)[0m     @     0x55d2a744c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67596)[0m     @     0x7f775f3124f5 at::Tensor::copy_()
[2m[36m(pid=67596)[0m     @     0x7f77653bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67596)[0m     @     0x556919ba8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67596)[0m     @     0x556919b03b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67596)[0m     @     0x556919b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67596)[0m     @     0x556919b8fa20 method_vectorcall
[2m[36m(pid=67596)[0m     @     0x556919b03bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67596)[0m     @     0x556919b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67596)[0m     @     0x556919b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67596)[0m     @     0x556919b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67596)[0m     @     0x556919b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67596)[0m     @     0x556919b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67596)[0m     @     0x556919b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67596)[0m     @     0x556919b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67596)[0m     @     0x556919b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67596)[0m     @     0x556919b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67596)[0m     @     0x556919b8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67596)[0m     @     0x556919b8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67596)[0m     @     0x556919b04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67691)[0m     @     0x7f1a931e04f5 at::Tensor::copy_()
[2m[36m(pid=67691)[0m     @     0x7f1a956b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67651)[0m     @     0x7fcada9444f5 at::Tensor::copy_()
[2m[36m(pid=67651)[0m     @     0x7fcae09ef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67651)[0m     @     0x5635787c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67651)[0m     @     0x56357871eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67651)[0m     @     0x5635787a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67651)[0m     @     0x5635787aaa20 method_vectorcall
[2m[36m(pid=67651)[0m     @     0x56357871ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67651)[0m     @     0x5635787a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67651)[0m     @     0x5635787aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67651)[0m     @     0x56357871f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67651)[0m     @     0x5635787a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67651)[0m     @     0x5635787aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67651)[0m     @     0x56357871f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67651)[0m     @     0x5635787a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67651)[0m     @     0x5635787aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67651)[0m     @     0x56357871f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67651)[0m     @     0x5635787a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67651)[0m     @     0x5635787aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67651)[0m     @     0x56357871f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67626)[0m     @     0x7f1ade6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67626)[0m     @     0x7f1adc1cf4f5 at::Tensor::copy_()
[2m[36m(pid=67626)[0m     @     0x7f1ae227a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67626)[0m     @     0x56440482afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67626)[0m     @     0x564404785b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67626)[0m     @     0x564404810baf _PyEval_EvalCodeWithName
[2m[36m(pid=67626)[0m     @     0x564404811a20 method_vectorcall
[2m[36m(pid=67626)[0m     @     0x564404785bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67626)[0m     @     0x564404810baf _PyEval_EvalCodeWithName
[2m[36m(pid=67626)[0m     @     0x564404811643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67626)[0m     @     0x564404786689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67626)[0m     @     0x564404810baf _PyEval_EvalCodeWithName
[2m[36m(pid=67626)[0m     @     0x564404811643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67626)[0m     @     0x564404786689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67626)[0m     @     0x564404810baf _PyEval_EvalCodeWithName
[2m[36m(pid=67626)[0m     @     0x564404811643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67626)[0m     @     0x564404786689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67626)[0m     @     0x564404810baf _PyEval_EvalCodeWithName
[2m[36m(pid=67626)[0m     @     0x564404811643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67626)[0m     @     0x564404786689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67571)[0m     @     0x7f784ea7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67571)[0m     @     0x7f784c5a94f5 at::Tensor::copy_()
[2m[36m(pid=67571)[0m     @     0x7f785265479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67571)[0m     @     0x55ee4272dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67571)[0m     @     0x55ee42688b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67571)[0m     @     0x55ee42713baf _PyEval_EvalCodeWithName
[2m[36m(pid=67571)[0m     @     0x55ee42714a20 method_vectorcall
[2m[36m(pid=67571)[0m     @     0x55ee42688bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67571)[0m     @     0x55ee42713baf _PyEval_EvalCodeWithName
[2m[36m(pid=67571)[0m     @     0x55ee42714643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67571)[0m     @     0x55ee42689689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67571)[0m     @     0x55ee42713baf _PyEval_EvalCodeWithName
[2m[36m(pid=67571)[0m     @     0x55ee42714643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67571)[0m     @     0x55ee42689689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67571)[0m     @     0x55ee42713baf _PyEval_EvalCodeWithName
[2m[36m(pid=67571)[0m     @     0x55ee42714643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67571)[0m     @     0x55ee42689689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67571)[0m     @     0x55ee42713baf _PyEval_EvalCodeWithName
[2m[36m(pid=67571)[0m     @     0x55ee42714643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67571)[0m     @     0x55ee42689689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m     @     0x7f86123c08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67570)[0m     @     0x7f860feed4f5 at::Tensor::copy_()
[2m[36m(pid=67570)[0m     @     0x7f8615f9879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67570)[0m     @     0x55c823dfefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67570)[0m     @     0x55c823d59b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m     @     0x55c823de4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67570)[0m     @     0x55c823de5a20 method_vectorcall
[2m[36m(pid=67570)[0m     @     0x55c823d59bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m     @     0x55c823de4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67570)[0m     @     0x55c823de5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67570)[0m     @     0x55c823d5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m     @     0x55c823de4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67570)[0m     @     0x55c823de5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67570)[0m     @     0x55c823d5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m     @     0x55c823de4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67570)[0m     @     0x55c823de5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67570)[0m     @     0x55c823d5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67570)[0m     @     0x55c823de4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67570)[0m     @     0x55c823de5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67570)[0m     @     0x55c823d5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67582)[0m     @     0x7f64dcbe44f5 at::Tensor::copy_()
[2m[36m(pid=67582)[0m     @     0x7f64e2c8f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67582)[0m     @     0x56478954bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67582)[0m     @     0x5647894a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67582)[0m     @     0x564789531baf _PyEval_EvalCodeWithName
[2m[36m(pid=67582)[0m     @     0x564789532a20 method_vectorcall
[2m[36m(pid=67582)[0m     @     0x5647894a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67582)[0m     @     0x564789531baf _PyEval_EvalCodeWithName
[2m[36m(pid=67582)[0m     @     0x564789532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67582)[0m     @     0x5647894a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67582)[0m     @     0x564789531baf _PyEval_EvalCodeWithName
[2m[36m(pid=67582)[0m     @     0x564789532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67582)[0m     @     0x5647894a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67582)[0m     @     0x564789531baf _PyEval_EvalCodeWithName
[2m[36m(pid=67582)[0m     @     0x564789532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67582)[0m     @     0x5647894a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67582)[0m     @     0x564789531baf _PyEval_EvalCodeWithName
[2m[36m(pid=67582)[0m     @     0x564789532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67582)[0m     @     0x5647894a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67586)[0m     @     0x7edc165e24f5 at::Tensor::copy_()
[2m[36m(pid=67586)[0m     @     0x7edc1c68d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67586)[0m     @     0x55c216e6bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67586)[0m     @     0x55c216dc6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67586)[0m     @     0x55c216e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=67586)[0m     @     0x55c216e52a20 method_vectorcall
[2m[36m(pid=67586)[0m     @     0x55c216dc6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67586)[0m     @     0x55c216e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=67586)[0m     @     0x55c216e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67586)[0m     @     0x55c216dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67586)[0m     @     0x55c216e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=67586)[0m     @     0x55c216e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67586)[0m     @     0x55c216dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67586)[0m     @     0x55c216e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=67586)[0m     @     0x55c216e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67586)[0m     @     0x55c216dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67586)[0m     @     0x55c216e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=67586)[0m     @     0x55c216e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67586)[0m     @     0x55c216dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67566)[0m     @     0x7f3dca7b64f5 at::Tensor::copy_()
[2m[36m(pid=67566)[0m     @     0x7f3dccc898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67566)[0m     @     0x7f3dca7b64f5 at::Tensor::copy_()
[2m[36m(pid=67566)[0m     @     0x7f3dd086179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67566)[0m     @     0x562213872fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67566)[0m     @     0x5622137cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67566)[0m     @     0x562213858baf _PyEval_EvalCodeWithName
[2m[36m(pid=67566)[0m     @     0x562213859a20 method_vectorcall
[2m[36m(pid=67566)[0m     @     0x5622137cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67566)[0m     @     0x562213858baf _PyEval_EvalCodeWithName
[2m[36m(pid=67566)[0m     @     0x562213859643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67566)[0m     @     0x5622137ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67566)[0m     @     0x562213858baf _PyEval_EvalCodeWithName
[2m[36m(pid=67566)[0m     @     0x562213859643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67566)[0m     @     0x5622137ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67566)[0m     @     0x562213858baf _PyEval_EvalCodeWithName
[2m[36m(pid=67566)[0m     @     0x562213859643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67566)[0m     @     0x5622137ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67566)[0m     @     0x562213858baf _PyEval_EvalCodeWithName
[2m[36m(pid=67566)[0m     @     0x562213859643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67566)[0m     @     0x5622137ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x7fc1666ff5a4 at::native::copy_()
[2m[36m(pid=67619)[0m     @     0x7fc166dea4f5 at::Tensor::copy_()
[2m[36m(pid=67643)[0m     @     0x7fc2aad225a4 at::native::copy_()
[2m[36m(pid=67643)[0m     @     0x7fc2ab40d4f5 at::Tensor::copy_()
[2m[36m(pid=67643)[0m     @     0x7fc2ad8e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67643)[0m     @     0x7fc2ab40d4f5 at::Tensor::copy_()
[2m[36m(pid=67643)[0m     @     0x7fc2b14b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67643)[0m     @     0x558990d93fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67588)[0m     @     0x7efcdcda2d91 at::TensorIterator::for_each()
[2m[36m(pid=67588)[0m     @     0x7efcdd685b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67588)[0m     @     0x7efcdd6a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67588)[0m     @     0x7efcdcb4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67588)[0m     @     0x7efcdcb48388 at::native::copy_impl()
[2m[36m(pid=67588)[0m     @     0x7efcdcb4a5a4 at::native::copy_()
[2m[36m(pid=67587)[0m     @     0x7f8aeeaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67587)[0m     @     0x7f8aeeaf3388 at::native::copy_impl()
[2m[36m(pid=67587)[0m     @     0x7f8aeeaf55a4 at::native::copy_()
[2m[36m(pid=67587)[0m     @     0x7f8aef1e04f5 at::Tensor::copy_()
[2m[36m(pid=67587)[0m     @     0x7f8af16b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67585)[0m     @     0x7fcb263e95a4 at::native::copy_()
[2m[36m(pid=67585)[0m     @     0x7fcb26ad44f5 at::Tensor::copy_()
[2m[36m(pid=67585)[0m     @     0x7fcb28fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67585)[0m     @     0x7fcb26ad44f5 at::Tensor::copy_()
[2m[36m(pid=67671)[0m     @     0x7f6c5b5a35a4 at::native::copy_()
[2m[36m(pid=67671)[0m     @     0x7f6c5bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=67671)[0m     @     0x7f6c5e1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67671)[0m     @     0x7f6c5bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=67628)[0m     @     0x7f61855cb4f5 at::Tensor::copy_()
[2m[36m(pid=67628)[0m     @     0x7f618b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67628)[0m     @     0x55ab155e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67628)[0m     @     0x55ab15544b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67628)[0m     @     0x55ab155cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67628)[0m     @     0x55ab155d0a20 method_vectorcall
[2m[36m(pid=67628)[0m     @     0x55ab15544bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67628)[0m     @     0x55ab155cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67628)[0m     @     0x55ab155d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67628)[0m     @     0x55ab15545689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67628)[0m     @     0x55ab155cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67628)[0m     @     0x55ab155d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67628)[0m     @     0x55ab15545689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67628)[0m     @     0x55ab155cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67628)[0m     @     0x55ab155d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67628)[0m     @     0x55ab15545689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67628)[0m     @     0x55ab155cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67628)[0m     @     0x55ab155d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67628)[0m     @     0x55ab15545689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67634)[0m     @     0x7fae6d7d24f5 at::Tensor::copy_()
[2m[36m(pid=67634)[0m     @     0x7fae7387d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67634)[0m     @     0x55c2621dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67634)[0m     @     0x55c26213ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67634)[0m     @     0x55c2621c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=67634)[0m     @     0x55c2621c6a20 method_vectorcall
[2m[36m(pid=67634)[0m     @     0x55c26213abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67634)[0m     @     0x55c2621c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=67634)[0m     @     0x55c2621c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67634)[0m     @     0x55c26213b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67634)[0m     @     0x55c2621c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=67634)[0m     @     0x55c2621c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67634)[0m     @     0x55c26213b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67634)[0m     @     0x55c2621c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=67634)[0m     @     0x55c2621c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67634)[0m     @     0x55c26213b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67634)[0m     @     0x55c2621c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=67634)[0m     @     0x55c2621c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67634)[0m     @     0x55c26213b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67679)[0m     @     0x7f73373124f5 at::Tensor::copy_()
[2m[36m(pid=67679)[0m     @     0x7f733d3bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67679)[0m     @     0x55ff9fc6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67679)[0m     @     0x55ff9fbcab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67679)[0m     @     0x55ff9fc55baf _PyEval_EvalCodeWithName
[2m[36m(pid=67679)[0m     @     0x55ff9fc56a20 method_vectorcall
[2m[36m(pid=67679)[0m     @     0x55ff9fbcabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67679)[0m     @     0x55ff9fc55baf _PyEval_EvalCodeWithName
[2m[36m(pid=67679)[0m     @     0x55ff9fc56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67679)[0m     @     0x55ff9fbcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67679)[0m     @     0x55ff9fc55baf _PyEval_EvalCodeWithName
[2m[36m(pid=67679)[0m     @     0x55ff9fc56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67679)[0m     @     0x55ff9fbcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67679)[0m     @     0x55ff9fc55baf _PyEval_EvalCodeWithName
[2m[36m(pid=67679)[0m     @     0x55ff9fc56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67679)[0m     @     0x55ff9fbcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67679)[0m     @     0x55ff9fc55baf _PyEval_EvalCodeWithName
[2m[36m(pid=67679)[0m     @     0x55ff9fc56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67679)[0m     @     0x55ff9fbcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67624)[0m     @     0x7f8d92e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=67583)[0m     @     0x7f56013ba4f5 at::Tensor::copy_()
[2m[36m(pid=67583)[0m     @     0x7f560388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67583)[0m     @     0x7f56013ba4f5 at::Tensor::copy_()
[2m[36m(pid=67583)[0m     @     0x7f560746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67583)[0m     @     0x56368d156fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67583)[0m     @     0x56368d0b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67583)[0m     @     0x56368d13cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67583)[0m     @     0x56368d13da20 method_vectorcall
[2m[36m(pid=67583)[0m     @     0x56368d0b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67583)[0m     @     0x56368d13cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67583)[0m     @     0x56368d13d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67583)[0m     @     0x56368d0b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67583)[0m     @     0x56368d13cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67583)[0m     @     0x56368d13d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67583)[0m     @     0x56368d0b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67583)[0m     @     0x56368d13cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67583)[0m     @     0x56368d13d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67583)[0m     @     0x56368d0b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67583)[0m     @     0x56368d13cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67583)[0m     @     0x56368d13d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67583)[0m     @     0x56368d0b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67682)[0m     @     0x7f53b06fc4f5 at::Tensor::copy_()
[2m[36m(pid=67682)[0m     @     0x7f53b67a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67682)[0m     @     0x55bb1f2cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67682)[0m     @     0x55bb1f225b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67682)[0m     @     0x55bb1f2b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67682)[0m     @     0x55bb1f2b1a20 method_vectorcall
[2m[36m(pid=67682)[0m     @     0x55bb1f225bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67682)[0m     @     0x55bb1f2b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67682)[0m     @     0x55bb1f2b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67682)[0m     @     0x55bb1f226689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67682)[0m     @     0x55bb1f2b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67682)[0m     @     0x55bb1f2b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67682)[0m     @     0x55bb1f226689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67682)[0m     @     0x55bb1f2b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67682)[0m     @     0x55bb1f2b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67682)[0m     @     0x55bb1f226689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67682)[0m     @     0x55bb1f2b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67682)[0m     @     0x55bb1f2b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67682)[0m     @     0x55bb1f226689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67575)[0m     @     0x7f6bf19328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67575)[0m     @     0x7f6bef45f4f5 at::Tensor::copy_()
[2m[36m(pid=67575)[0m     @     0x7f6bf550a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67575)[0m     @     0x55bc199ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67575)[0m     @     0x55bc19938b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67575)[0m     @     0x55bc199c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67575)[0m     @     0x55bc199c4a20 method_vectorcall
[2m[36m(pid=67575)[0m     @     0x55bc19938bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67575)[0m     @     0x55bc199c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67575)[0m     @     0x55bc199c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67575)[0m     @     0x55bc19939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67575)[0m     @     0x55bc199c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67575)[0m     @     0x55bc199c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67575)[0m     @     0x55bc19939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67575)[0m     @     0x55bc199c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67575)[0m     @     0x55bc199c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67575)[0m     @     0x55bc19939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67575)[0m     @     0x55bc199c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=67575)[0m     @     0x55bc199c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67575)[0m     @     0x55bc19939689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67630)[0m     @     0x7f58861d25a4 at::native::copy_()
[2m[36m(pid=67630)[0m     @     0x7f58868bd4f5 at::Tensor::copy_()
[2m[36m(pid=67630)[0m     @     0x7f5888d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67630)[0m     @     0x7f58868bd4f5 at::Tensor::copy_()
[2m[36m(pid=67576)[0m     @     0x7f0245e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67576)[0m     @     0x7f0245e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67576)[0m     @     0x7f02452faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67576)[0m     @     0x7f02452f8388 at::native::copy_impl()
[2m[36m(pid=67576)[0m     @     0x7f02452fa5a4 at::native::copy_()
[2m[36m(pid=67565)[0m     @     0x7fbd2cf524f5 at::Tensor::copy_()
[2m[36m(pid=67565)[0m     @     0x7fbd2f4258de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67565)[0m     @     0x7fbd2cf524f5 at::Tensor::copy_()
[2m[36m(pid=67565)[0m     @     0x7fbd6458379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67565)[0m     @     0x55b4ed42efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67565)[0m     @     0x55b4ed389b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67565)[0m     @     0x55b4ed414baf _PyEval_EvalCodeWithName
[2m[36m(pid=67565)[0m     @     0x55b4ed415a20 method_vectorcall
[2m[36m(pid=67565)[0m     @     0x55b4ed389bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67565)[0m     @     0x55b4ed414baf _PyEval_EvalCodeWithName
[2m[36m(pid=67565)[0m     @     0x55b4ed415643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67565)[0m     @     0x55b4ed38a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67565)[0m     @     0x55b4ed414baf _PyEval_EvalCodeWithName
[2m[36m(pid=67565)[0m     @     0x55b4ed415643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67565)[0m     @     0x55b4ed38a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67565)[0m     @     0x55b4ed414baf _PyEval_EvalCodeWithName
[2m[36m(pid=67565)[0m     @     0x55b4ed415643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67565)[0m     @     0x55b4ed38a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67565)[0m     @     0x55b4ed414baf _PyEval_EvalCodeWithName
[2m[36m(pid=67565)[0m     @     0x55b4ed415643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67565)[0m     @     0x55b4ed38a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67684)[0m     @     0x7fc8623e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67684)[0m     @     0x7fc8623e7388 at::native::copy_impl()
[2m[36m(pid=67684)[0m     @     0x7fc8623e95a4 at::native::copy_()
[2m[36m(pid=67684)[0m     @     0x7fc862ad44f5 at::Tensor::copy_()
[2m[36m(pid=67684)[0m     @     0x7fc864fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67678)[0m     @     0x7f5c00c764f5 at::Tensor::copy_()
[2m[36m(pid=67678)[0m     @     0x7f5c031498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67678)[0m     @     0x7f5c00c764f5 at::Tensor::copy_()
[2m[36m(pid=67678)[0m     @     0x7f5c06d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67678)[0m     @     0x562a67ad7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67678)[0m     @     0x562a67a32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67678)[0m     @     0x562a67abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67678)[0m     @     0x562a67abea20 method_vectorcall
[2m[36m(pid=67678)[0m     @     0x562a67a32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67678)[0m     @     0x562a67abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67678)[0m     @     0x562a67abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67678)[0m     @     0x562a67a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67678)[0m     @     0x562a67abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67678)[0m     @     0x562a67abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67678)[0m     @     0x562a67a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67678)[0m     @     0x562a67abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67678)[0m     @     0x562a67abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67678)[0m     @     0x562a67a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67678)[0m     @     0x562a67abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67678)[0m     @     0x562a67abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67678)[0m     @     0x562a67a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67574)[0m     @     0x562694ed1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67574)[0m     @     0x562694e46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67574)[0m     @     0x562694ed0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67574)[0m     @     0x562694ed1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67574)[0m     @     0x562694e46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67574)[0m     @     0x562694ed0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67574)[0m     @     0x562694ed1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67574)[0m     @     0x562694e46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67567)[0m     @     0x5609b2d3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67567)[0m     @     0x5609b2d3fa20 method_vectorcall
[2m[36m(pid=67567)[0m     @     0x5609b2cb3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67567)[0m     @     0x5609b2d3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67567)[0m     @     0x5609b2d3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67567)[0m     @     0x5609b2cb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67567)[0m     @     0x5609b2d3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67567)[0m     @     0x5609b2d3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67567)[0m     @     0x5609b2cb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67567)[0m     @     0x5609b2d3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67567)[0m     @     0x5609b2d3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67567)[0m     @     0x5609b2cb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67567)[0m     @     0x5609b2d3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=67567)[0m     @     0x5609b2d3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67567)[0m     @     0x5609b2cb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67694)[0m     @     0x7f05139b14f5 at::Tensor::copy_()
[2m[36m(pid=67694)[0m     @     0x7f0519a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67694)[0m     @     0x5588c6359fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67694)[0m     @     0x5588c62b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67694)[0m     @     0x5588c633fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67694)[0m     @     0x5588c6340a20 method_vectorcall
[2m[36m(pid=67694)[0m     @     0x5588c62b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67694)[0m     @     0x5588c633fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67694)[0m     @     0x5588c6340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67694)[0m     @     0x5588c62b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67694)[0m     @     0x5588c633fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67694)[0m     @     0x5588c6340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67694)[0m     @     0x5588c62b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67694)[0m     @     0x5588c633fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67694)[0m     @     0x5588c6340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67694)[0m     @     0x5588c62b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67694)[0m     @     0x5588c633fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67694)[0m     @     0x5588c6340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67694)[0m     @     0x5588c62b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67573)[0m     @     0x7f694055f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67573)[0m     @     0x56406251cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67573)[0m     @     0x564062477b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67573)[0m     @     0x564062502baf _PyEval_EvalCodeWithName
[2m[36m(pid=67573)[0m     @     0x564062503a20 method_vectorcall
[2m[36m(pid=67573)[0m     @     0x564062477bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67573)[0m     @     0x564062502baf _PyEval_EvalCodeWithName
[2m[36m(pid=67573)[0m     @     0x564062503643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67573)[0m     @     0x564062478689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67573)[0m     @     0x564062502baf _PyEval_EvalCodeWithName
[2m[36m(pid=67573)[0m     @     0x564062503643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67573)[0m     @     0x564062478689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67573)[0m     @     0x564062502baf _PyEval_EvalCodeWithName
[2m[36m(pid=67573)[0m     @     0x564062503643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67573)[0m     @     0x564062478689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67573)[0m     @     0x564062502baf _PyEval_EvalCodeWithName
[2m[36m(pid=67573)[0m     @     0x564062503643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67573)[0m     @     0x564062478689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67656)[0m     @     0x7f31d8cfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67656)[0m     @     0x7f31d682b4f5 at::Tensor::copy_()
[2m[36m(pid=67656)[0m     @     0x7f31dc8d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67656)[0m     @     0x55653d7a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67656)[0m     @     0x55653d700b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67656)[0m     @     0x55653d78bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67656)[0m     @     0x55653d78ca20 method_vectorcall
[2m[36m(pid=67656)[0m     @     0x55653d700bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67656)[0m     @     0x55653d78bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67656)[0m     @     0x55653d78c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67656)[0m     @     0x55653d701689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67656)[0m     @     0x55653d78bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67656)[0m     @     0x55653d78c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67656)[0m     @     0x55653d701689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67656)[0m     @     0x55653d78bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67656)[0m     @     0x55653d78c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67656)[0m     @     0x55653d701689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67656)[0m     @     0x55653d78bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67656)[0m     @     0x55653d78c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67656)[0m     @     0x55653d701689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x7fb71c9795a4 at::native::copy_()
[2m[36m(pid=67600)[0m     @     0x7fb71d0644f5 at::Tensor::copy_()
[2m[36m(pid=67593)[0m     @     0x7fc7c736d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67593)[0m     @     0x556c2a14bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67593)[0m     @     0x556c2a0a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67593)[0m     @     0x556c2a131baf _PyEval_EvalCodeWithName
[2m[36m(pid=67593)[0m     @     0x556c2a132a20 method_vectorcall
[2m[36m(pid=67593)[0m     @     0x556c2a0a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67593)[0m     @     0x556c2a131baf _PyEval_EvalCodeWithName
[2m[36m(pid=67593)[0m     @     0x556c2a132643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67593)[0m     @     0x556c2a0a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67593)[0m     @     0x556c2a131baf _PyEval_EvalCodeWithName
[2m[36m(pid=67593)[0m     @     0x556c2a132643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67593)[0m     @     0x556c2a0a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67593)[0m     @     0x556c2a131baf _PyEval_EvalCodeWithName
[2m[36m(pid=67593)[0m     @     0x556c2a132643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67593)[0m     @     0x556c2a0a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67593)[0m     @     0x556c2a131baf _PyEval_EvalCodeWithName
[2m[36m(pid=67593)[0m     @     0x556c2a132643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67593)[0m     @     0x556c2a0a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67584)[0m     @     0x7f450cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=67584)[0m     @     0x7f450f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67584)[0m     @     0x7f450cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=67584)[0m     @     0x7f451303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67584)[0m     @     0x55fc8b851fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67603)[0m     @     0x7f01bb14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67603)[0m     @     0x560d4f4c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67603)[0m     @     0x560d4f41eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67603)[0m     @     0x560d4f4a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67603)[0m     @     0x560d4f4aaa20 method_vectorcall
[2m[36m(pid=67603)[0m     @     0x560d4f41ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67603)[0m     @     0x560d4f4a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67603)[0m     @     0x560d4f4aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67603)[0m     @     0x560d4f41f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67603)[0m     @     0x560d4f4a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67603)[0m     @     0x560d4f4aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67603)[0m     @     0x560d4f41f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67603)[0m     @     0x560d4f4a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67603)[0m     @     0x560d4f4aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67603)[0m     @     0x560d4f41f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67603)[0m     @     0x560d4f4a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=67603)[0m     @     0x560d4f4aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67603)[0m     @     0x560d4f41f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67601)[0m     @     0x7f7abc37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67601)[0m     @     0x55c3d5339fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67601)[0m     @     0x55c3d5294b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67601)[0m     @     0x55c3d531fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67601)[0m     @     0x55c3d5320a20 method_vectorcall
[2m[36m(pid=67601)[0m     @     0x55c3d5294bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67601)[0m     @     0x55c3d531fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67601)[0m     @     0x55c3d5320643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67601)[0m     @     0x55c3d5295689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67601)[0m     @     0x55c3d531fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67601)[0m     @     0x55c3d5320643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67601)[0m     @     0x55c3d5295689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67601)[0m     @     0x55c3d531fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67601)[0m     @     0x55c3d5320643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67601)[0m     @     0x55c3d5295689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67601)[0m     @     0x55c3d531fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67601)[0m     @     0x55c3d5320643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67601)[0m     @     0x55c3d5295689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x7fc0b56b479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67648)[0m     @     0x55dd5ba0efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67648)[0m     @     0x55dd5b969b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x55dd5b9f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67648)[0m     @     0x55dd5b9f5a20 method_vectorcall
[2m[36m(pid=67648)[0m     @     0x55dd5b969bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x55dd5b9f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67648)[0m     @     0x55dd5b9f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67648)[0m     @     0x55dd5b96a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x55dd5b9f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67648)[0m     @     0x55dd5b9f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67648)[0m     @     0x55dd5b96a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x55dd5b9f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67648)[0m     @     0x55dd5b9f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67648)[0m     @     0x55dd5b96a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67648)[0m     @     0x55dd5b9f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=67648)[0m     @     0x55dd5b9f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67648)[0m     @     0x55dd5b96a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67670)[0m     @     0x7f94c43f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67670)[0m     @     0x7f94c1f264f5 at::Tensor::copy_()
[2m[36m(pid=67670)[0m     @     0x7f94c7fd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67670)[0m     @     0x561b4d33cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67670)[0m     @     0x561b4d297b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67670)[0m     @     0x561b4d322baf _PyEval_EvalCodeWithName
[2m[36m(pid=67670)[0m     @     0x561b4d323a20 method_vectorcall
[2m[36m(pid=67670)[0m     @     0x561b4d297bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67670)[0m     @     0x561b4d322baf _PyEval_EvalCodeWithName
[2m[36m(pid=67670)[0m     @     0x561b4d323643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67670)[0m     @     0x561b4d298689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67670)[0m     @     0x561b4d322baf _PyEval_EvalCodeWithName
[2m[36m(pid=67670)[0m     @     0x561b4d323643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67670)[0m     @     0x561b4d298689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67670)[0m     @     0x561b4d322baf _PyEval_EvalCodeWithName
[2m[36m(pid=67670)[0m     @     0x561b4d323643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67670)[0m     @     0x561b4d298689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67670)[0m     @     0x561b4d322baf _PyEval_EvalCodeWithName
[2m[36m(pid=67670)[0m     @     0x561b4d323643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67670)[0m     @     0x561b4d298689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67693)[0m     @     0x7f7e6434d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67693)[0m     @     0x7f7e61e7a4f5 at::Tensor::copy_()
[2m[36m(pid=67693)[0m     @     0x7f7e67f2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67693)[0m     @     0x5630f465dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67693)[0m     @     0x5630f45b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67693)[0m     @     0x5630f4643baf _PyEval_EvalCodeWithName
[2m[36m(pid=67693)[0m     @     0x5630f4644a20 method_vectorcall
[2m[36m(pid=67693)[0m     @     0x5630f45b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67693)[0m     @     0x5630f4643baf _PyEval_EvalCodeWithName
[2m[36m(pid=67693)[0m     @     0x5630f4644643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67693)[0m     @     0x5630f45b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67693)[0m     @     0x5630f4643baf _PyEval_EvalCodeWithName
[2m[36m(pid=67693)[0m     @     0x5630f4644643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67693)[0m     @     0x5630f45b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67693)[0m     @     0x5630f4643baf _PyEval_EvalCodeWithName
[2m[36m(pid=67693)[0m     @     0x5630f4644643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67693)[0m     @     0x5630f45b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67693)[0m     @     0x5630f4643baf _PyEval_EvalCodeWithName
[2m[36m(pid=67693)[0m     @     0x5630f4644643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67693)[0m     @     0x5630f45b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67581)[0m     @     0x563ea9715baf _PyEval_EvalCodeWithName
[2m[36m(pid=67581)[0m     @     0x563ea9716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67581)[0m     @     0x563ea968b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67672)[0m     @     0x556ab1b74fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67672)[0m     @     0x556ab1acfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67672)[0m     @     0x556ab1b5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67672)[0m     @     0x556ab1b5ba20 method_vectorcall
[2m[36m(pid=67672)[0m     @     0x556ab1acfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67672)[0m     @     0x556ab1b5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67672)[0m     @     0x556ab1b5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67672)[0m     @     0x556ab1ad0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67672)[0m     @     0x556ab1b5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67672)[0m     @     0x556ab1b5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67672)[0m     @     0x556ab1ad0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67672)[0m     @     0x556ab1b5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67672)[0m     @     0x556ab1b5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67672)[0m     @     0x556ab1ad0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67672)[0m     @     0x556ab1b5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67672)[0m     @     0x556ab1b5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67672)[0m     @     0x556ab1ad0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67599)[0m     @     0x55735237dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67599)[0m     @     0x55735237e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67599)[0m     @     0x5573522f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67599)[0m     @     0x55735237dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67599)[0m     @     0x55735237e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67599)[0m     @     0x5573522f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67599)[0m     @     0x55735237dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67599)[0m     @     0x55735237e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67599)[0m     @     0x5573522f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67578)[0m     @     0x7f0a129105a4 at::native::copy_()
[2m[36m(pid=67578)[0m     @     0x7f0a12ffb4f5 at::Tensor::copy_()
[2m[36m(pid=67578)[0m     @     0x7f0a154ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67578)[0m     @     0x7f0a12ffb4f5 at::Tensor::copy_()
[2m[36m(pid=67578)[0m     @     0x7f0a190a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67578)[0m     @     0x55c27d4eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67578)[0m     @     0x55c27d445b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67578)[0m     @     0x55c27d4d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67578)[0m     @     0x55c27d4d1a20 method_vectorcall
[2m[36m(pid=67578)[0m     @     0x55c27d445bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67578)[0m     @     0x55c27d4d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67578)[0m     @     0x55c27d4d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67578)[0m     @     0x55c27d446689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67578)[0m     @     0x55c27d4d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67578)[0m     @     0x55c27d4d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67578)[0m     @     0x55c27d446689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67578)[0m     @     0x55c27d4d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67578)[0m     @     0x55c27d4d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67578)[0m     @     0x55c27d446689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67578)[0m     @     0x55c27d4d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=67578)[0m     @     0x55c27d4d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67578)[0m     @     0x55c27d446689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67635)[0m     @     0x558b819f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67635)[0m     @     0x558b81966689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67640)[0m     @     0x7edca0c764f5 at::Tensor::copy_()
[2m[36m(pid=67640)[0m     @     0x7edca6d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67640)[0m     @     0x55b1e4d02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67640)[0m     @     0x55b1e4c5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67640)[0m     @     0x55b1e4ce8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67640)[0m     @     0x55b1e4ce9a20 method_vectorcall
[2m[36m(pid=67640)[0m     @     0x55b1e4c5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67640)[0m     @     0x55b1e4ce8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67640)[0m     @     0x55b1e4ce9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67640)[0m     @     0x55b1e4c5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67640)[0m     @     0x55b1e4ce8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67640)[0m     @     0x55b1e4ce9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67640)[0m     @     0x55b1e4c5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67640)[0m     @     0x55b1e4ce8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67640)[0m     @     0x55b1e4ce9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67640)[0m     @     0x55b1e4c5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67640)[0m     @     0x55b1e4ce8baf _PyEval_EvalCodeWithName
[2m[36m(pid=67640)[0m     @     0x55b1e4ce9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67640)[0m     @     0x55b1e4c5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67658)[0m     @     0x7fb09ccbe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67658)[0m     @     0x55f1f89a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67658)[0m     @     0x55f1f88fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67658)[0m     @     0x55f1f8987baf _PyEval_EvalCodeWithName
[2m[36m(pid=67658)[0m     @     0x55f1f8988a20 method_vectorcall
[2m[36m(pid=67658)[0m     @     0x55f1f88fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67658)[0m     @     0x55f1f8987baf _PyEval_EvalCodeWithName
[2m[36m(pid=67658)[0m     @     0x55f1f8988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67658)[0m     @     0x55f1f88fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67658)[0m     @     0x55f1f8987baf _PyEval_EvalCodeWithName
[2m[36m(pid=67658)[0m     @     0x55f1f8988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67658)[0m     @     0x55f1f88fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67658)[0m     @     0x55f1f8987baf _PyEval_EvalCodeWithName
[2m[36m(pid=67658)[0m     @     0x55f1f8988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67658)[0m     @     0x55f1f88fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67658)[0m     @     0x55f1f8987baf _PyEval_EvalCodeWithName
[2m[36m(pid=67658)[0m     @     0x55f1f8988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67658)[0m     @     0x55f1f88fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67622)[0m     @     0x55afc42b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67622)[0m     @     0x55afc433cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67622)[0m     @     0x55afc433d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67622)[0m     @     0x55afc42b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67622)[0m     @     0x55afc433cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67622)[0m     @     0x55afc433d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67622)[0m     @     0x55afc42b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67646)[0m     @     0x55dfc1ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67646)[0m     @     0x55dfc1de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67646)[0m     @     0x55dfc1d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67646)[0m     @     0x55dfc1ddfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67646)[0m     @     0x55dfc1de0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67646)[0m     @     0x55dfc1d55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67644)[0m     @     0x5651c0e67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67644)[0m     @     0x5651c0ef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=67644)[0m     @     0x5651c0ef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67644)[0m     @     0x5651c0e67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67644)[0m     @     0x5651c0ef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=67644)[0m     @     0x5651c0ef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67644)[0m     @     0x5651c0e67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67644)[0m     @     0x5651c0ef1baf _PyEval_EvalCodeWithName
[2m[36m(pid=67644)[0m     @     0x5651c0ef2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67644)[0m     @     0x5651c0e67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67652)[0m     @     0x7f7914e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67652)[0m     @     0x5622725a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67652)[0m     @     0x5622724feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67652)[0m     @     0x562272589baf _PyEval_EvalCodeWithName
[2m[36m(pid=67652)[0m     @     0x56227258aa20 method_vectorcall
[2m[36m(pid=67652)[0m     @     0x5622724febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67652)[0m     @     0x562272589baf _PyEval_EvalCodeWithName
[2m[36m(pid=67652)[0m     @     0x56227258a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67652)[0m     @     0x5622724ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67652)[0m     @     0x562272589baf _PyEval_EvalCodeWithName
[2m[36m(pid=67652)[0m     @     0x56227258a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67652)[0m     @     0x5622724ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67652)[0m     @     0x562272589baf _PyEval_EvalCodeWithName
[2m[36m(pid=67652)[0m     @     0x56227258a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67652)[0m     @     0x5622724ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67652)[0m     @     0x562272589baf _PyEval_EvalCodeWithName
[2m[36m(pid=67652)[0m     @     0x56227258a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67652)[0m     @     0x5622724ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67654)[0m     @     0x557664b43baf _PyEval_EvalCodeWithName
[2m[36m(pid=67654)[0m     @     0x557664b44a20 method_vectorcall
[2m[36m(pid=67654)[0m     @     0x557664ab8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67654)[0m     @     0x557664b43baf _PyEval_EvalCodeWithName
[2m[36m(pid=67654)[0m     @     0x557664b44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67654)[0m     @     0x557664ab9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67654)[0m     @     0x557664b43baf _PyEval_EvalCodeWithName
[2m[36m(pid=67654)[0m     @     0x557664b44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67654)[0m     @     0x557664ab9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67654)[0m     @     0x557664b43baf _PyEval_EvalCodeWithName
[2m[36m(pid=67654)[0m     @     0x557664b44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67654)[0m     @     0x557664ab9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67654)[0m     @     0x557664b43baf _PyEval_EvalCodeWithName
[2m[36m(pid=67654)[0m     @     0x557664b44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67654)[0m     @     0x557664ab9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67642)[0m     @     0x7f247a5eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67642)[0m     @     0x55be12aecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67642)[0m     @     0x55be12a47b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67642)[0m     @     0x55be12ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67642)[0m     @     0x55be12ad3a20 method_vectorcall
[2m[36m(pid=67642)[0m     @     0x55be12a47bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67642)[0m     @     0x55be12ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67642)[0m     @     0x55be12ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67642)[0m     @     0x55be12a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67642)[0m     @     0x55be12ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67642)[0m     @     0x55be12ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67642)[0m     @     0x55be12a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67642)[0m     @     0x55be12ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67642)[0m     @     0x55be12ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67642)[0m     @     0x55be12a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67642)[0m     @     0x55be12ad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67642)[0m     @     0x55be12ad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67642)[0m     @     0x55be12a48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67691)[0m     @     0x7f1a931e04f5 at::Tensor::copy_()
[2m[36m(pid=67691)[0m     @     0x7f1a9928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67691)[0m     @     0x5581770c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67691)[0m     @     0x558177020b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67691)[0m     @     0x5581770abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67691)[0m     @     0x5581770aca20 method_vectorcall
[2m[36m(pid=67691)[0m     @     0x558177020bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67691)[0m     @     0x5581770abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67691)[0m     @     0x5581770ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67691)[0m     @     0x558177021689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67691)[0m     @     0x5581770abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67691)[0m     @     0x5581770ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67691)[0m     @     0x558177021689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67691)[0m     @     0x5581770abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67691)[0m     @     0x5581770ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67691)[0m     @     0x558177021689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67691)[0m     @     0x5581770abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67691)[0m     @     0x5581770ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67691)[0m     @     0x558177021689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x7fc1692bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67619)[0m     @     0x7fc166dea4f5 at::Tensor::copy_()
[2m[36m(pid=67619)[0m     @     0x7fc16ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67619)[0m     @     0x55ad8cd3bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67619)[0m     @     0x55ad8cc96b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x55ad8cd21baf _PyEval_EvalCodeWithName
[2m[36m(pid=67619)[0m     @     0x55ad8cd22a20 method_vectorcall
[2m[36m(pid=67619)[0m     @     0x55ad8cc96bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x55ad8cd21baf _PyEval_EvalCodeWithName
[2m[36m(pid=67619)[0m     @     0x55ad8cd22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67619)[0m     @     0x55ad8cc97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x55ad8cd21baf _PyEval_EvalCodeWithName
[2m[36m(pid=67643)[0m     @     0x558990ceeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67643)[0m     @     0x558990d79baf _PyEval_EvalCodeWithName
[2m[36m(pid=67643)[0m     @     0x558990d7aa20 method_vectorcall
[2m[36m(pid=67643)[0m     @     0x558990ceebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67643)[0m     @     0x558990d79baf _PyEval_EvalCodeWithName
[2m[36m(pid=67643)[0m     @     0x558990d7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67643)[0m     @     0x558990cef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67643)[0m     @     0x558990d79baf _PyEval_EvalCodeWithName
[2m[36m(pid=67643)[0m     @     0x558990d7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67643)[0m     @     0x558990cef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67643)[0m     @     0x558990d79baf _PyEval_EvalCodeWithName
[2m[36m(pid=67643)[0m     @     0x558990d7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67643)[0m     @     0x558990cef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67643)[0m     @     0x558990d79baf _PyEval_EvalCodeWithName
[2m[36m(pid=67643)[0m     @     0x558990d7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67643)[0m     @     0x558990cef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67588)[0m     @     0x7efcdd2354f5 at::Tensor::copy_()
[2m[36m(pid=67588)[0m     @     0x7efcdf7088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67587)[0m     @     0x7f8aef1e04f5 at::Tensor::copy_()
[2m[36m(pid=67587)[0m     @     0x7f8af528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67587)[0m     @     0x5641811bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67587)[0m     @     0x564181117b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67587)[0m     @     0x5641811a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67587)[0m     @     0x5641811a3a20 method_vectorcall
[2m[36m(pid=67587)[0m     @     0x564181117bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67587)[0m     @     0x5641811a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67587)[0m     @     0x5641811a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67587)[0m     @     0x564181118689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67587)[0m     @     0x5641811a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67587)[0m     @     0x5641811a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67587)[0m     @     0x564181118689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67587)[0m     @     0x5641811a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67587)[0m     @     0x5641811a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67587)[0m     @     0x564181118689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67587)[0m     @     0x5641811a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=67587)[0m     @     0x5641811a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67587)[0m     @     0x564181118689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67585)[0m     @     0x7fcb2cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67585)[0m     @     0x55b03cf6cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67585)[0m     @     0x55b03cec7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67585)[0m     @     0x55b03cf52baf _PyEval_EvalCodeWithName
[2m[36m(pid=67585)[0m     @     0x55b03cf53a20 method_vectorcall
[2m[36m(pid=67585)[0m     @     0x55b03cec7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67585)[0m     @     0x55b03cf52baf _PyEval_EvalCodeWithName
[2m[36m(pid=67585)[0m     @     0x55b03cf53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67585)[0m     @     0x55b03cec8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67585)[0m     @     0x55b03cf52baf _PyEval_EvalCodeWithName
[2m[36m(pid=67585)[0m     @     0x55b03cf53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67585)[0m     @     0x55b03cec8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67585)[0m     @     0x55b03cf52baf _PyEval_EvalCodeWithName
[2m[36m(pid=67585)[0m     @     0x55b03cf53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67585)[0m     @     0x55b03cec8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67585)[0m     @     0x55b03cf52baf _PyEval_EvalCodeWithName
[2m[36m(pid=67585)[0m     @     0x55b03cf53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67585)[0m     @     0x55b03cec8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67671)[0m     @     0x7f6c61d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67671)[0m     @     0x5590e845ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67671)[0m     @     0x5590e83bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67671)[0m     @     0x5590e8445baf _PyEval_EvalCodeWithName
[2m[36m(pid=67671)[0m     @     0x5590e8446a20 method_vectorcall
[2m[36m(pid=67671)[0m     @     0x5590e83babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67671)[0m     @     0x5590e8445baf _PyEval_EvalCodeWithName
[2m[36m(pid=67671)[0m     @     0x5590e8446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67671)[0m     @     0x5590e83bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67671)[0m     @     0x5590e8445baf _PyEval_EvalCodeWithName
[2m[36m(pid=67671)[0m     @     0x5590e8446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67671)[0m     @     0x5590e83bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67671)[0m     @     0x5590e8445baf _PyEval_EvalCodeWithName
[2m[36m(pid=67671)[0m     @     0x5590e8446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67671)[0m     @     0x5590e83bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67671)[0m     @     0x5590e8445baf _PyEval_EvalCodeWithName
[2m[36m(pid=67671)[0m     @     0x5590e8446643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67671)[0m     @     0x5590e83bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67624)[0m     @     0x7f8d92e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=67624)[0m     @     0x7f8d93762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=67624)[0m     @     0x7f8d93785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=67630)[0m     @     0x7f588c96879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67630)[0m     @     0x555913ca9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67630)[0m     @     0x555913c04b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67630)[0m     @     0x555913c8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67630)[0m     @     0x555913c90a20 method_vectorcall
[2m[36m(pid=67630)[0m     @     0x555913c04bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67630)[0m     @     0x555913c8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67630)[0m     @     0x555913c90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67630)[0m     @     0x555913c05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67630)[0m     @     0x555913c8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67630)[0m     @     0x555913c90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67630)[0m     @     0x555913c05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67630)[0m     @     0x555913c8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67630)[0m     @     0x555913c90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67630)[0m     @     0x555913c05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67630)[0m     @     0x555913c8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67630)[0m     @     0x555913c90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67630)[0m     @     0x555913c05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67576)[0m     @     0x7f02459e54f5 at::Tensor::copy_()
[2m[36m(pid=67576)[0m     @     0x7f0247eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67576)[0m     @     0x7f02459e54f5 at::Tensor::copy_()
[2m[36m(pid=67576)[0m     @     0x7f024ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67576)[0m     @     0x55ab6eb9cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67576)[0m     @     0x55ab6eaf7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67576)[0m     @     0x55ab6eb82baf _PyEval_EvalCodeWithName
[2m[36m(pid=67576)[0m     @     0x55ab6eb83a20 method_vectorcall
[2m[36m(pid=67576)[0m     @     0x55ab6eaf7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67576)[0m     @     0x55ab6eb82baf _PyEval_EvalCodeWithName
[2m[36m(pid=67576)[0m     @     0x55ab6eb83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67576)[0m     @     0x55ab6eaf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67576)[0m     @     0x55ab6eb82baf _PyEval_EvalCodeWithName
[2m[36m(pid=67576)[0m     @     0x55ab6eb83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67576)[0m     @     0x55ab6eaf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67576)[0m     @     0x55ab6eb82baf _PyEval_EvalCodeWithName
[2m[36m(pid=67576)[0m     @     0x55ab6eb83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67576)[0m     @     0x55ab6eaf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67576)[0m     @     0x55ab6eb82baf _PyEval_EvalCodeWithName
[2m[36m(pid=67576)[0m     @     0x55ab6eb83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67576)[0m     @     0x55ab6eaf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67684)[0m     @     0x7fc862ad44f5 at::Tensor::copy_()
[2m[36m(pid=67684)[0m     @     0x7fc868b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67684)[0m     @     0x556347f64fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67684)[0m     @     0x556347ebfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67684)[0m     @     0x556347f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67684)[0m     @     0x556347f4ba20 method_vectorcall
[2m[36m(pid=67684)[0m     @     0x556347ebfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67684)[0m     @     0x556347f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67684)[0m     @     0x556347f4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67684)[0m     @     0x556347ec0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67684)[0m     @     0x556347f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67684)[0m     @     0x556347f4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67684)[0m     @     0x556347ec0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67684)[0m     @     0x556347f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67684)[0m     @     0x556347f4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67684)[0m     @     0x556347ec0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67684)[0m     @     0x556347f4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=67684)[0m     @     0x556347f4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67684)[0m     @     0x556347ec0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x7fb71f5378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=67600)[0m     @     0x7fb71d0644f5 at::Tensor::copy_()
[2m[36m(pid=67600)[0m     @     0x7fb72310f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67600)[0m     @     0x55b8e8dc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67600)[0m     @     0x55b8e8d1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x55b8e8da7baf _PyEval_EvalCodeWithName
[2m[36m(pid=67600)[0m     @     0x55b8e8da8a20 method_vectorcall
[2m[36m(pid=67600)[0m     @     0x55b8e8d1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x55b8e8da7baf _PyEval_EvalCodeWithName
[2m[36m(pid=67600)[0m     @     0x55b8e8da8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67600)[0m     @     0x55b8e8d1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x55b8e8da7baf _PyEval_EvalCodeWithName
[2m[36m(pid=67600)[0m     @     0x55b8e8da8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67600)[0m     @     0x55b8e8d1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x55b8e8da7baf _PyEval_EvalCodeWithName
[2m[36m(pid=67600)[0m     @     0x55b8e8da8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67600)[0m     @     0x55b8e8d1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67600)[0m     @     0x55b8e8da7baf _PyEval_EvalCodeWithName
[2m[36m(pid=67600)[0m     @     0x55b8e8da8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67584)[0m     @     0x55fc8b7acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67584)[0m     @     0x55fc8b837baf _PyEval_EvalCodeWithName
[2m[36m(pid=67584)[0m     @     0x55fc8b838a20 method_vectorcall
[2m[36m(pid=67584)[0m     @     0x55fc8b7acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67584)[0m     @     0x55fc8b837baf _PyEval_EvalCodeWithName
[2m[36m(pid=67584)[0m     @     0x55fc8b838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67584)[0m     @     0x55fc8b7ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67584)[0m     @     0x55fc8b837baf _PyEval_EvalCodeWithName
[2m[36m(pid=67584)[0m     @     0x55fc8b838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67584)[0m     @     0x55fc8b7ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67584)[0m     @     0x55fc8b837baf _PyEval_EvalCodeWithName
[2m[36m(pid=67584)[0m     @     0x55fc8b838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67584)[0m     @     0x55fc8b7ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67584)[0m     @     0x55fc8b837baf _PyEval_EvalCodeWithName
[2m[36m(pid=67584)[0m     @     0x55fc8b838643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67584)[0m     @     0x55fc8b7ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x55ad8cd22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67619)[0m     @     0x55ad8cc97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x55ad8cd21baf _PyEval_EvalCodeWithName
[2m[36m(pid=67619)[0m     @     0x55ad8cd22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67619)[0m     @     0x55ad8cc97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67619)[0m     @     0x55ad8cd21baf _PyEval_EvalCodeWithName
[2m[36m(pid=67619)[0m     @     0x55ad8cd22643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67619)[0m     @     0x55ad8cc97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67588)[0m     @     0x7efcdd2354f5 at::Tensor::copy_()
[2m[36m(pid=67588)[0m     @     0x7efce32e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=67588)[0m     @     0x55f16c4b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=67588)[0m     @     0x55f16c411b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67588)[0m     @     0x55f16c49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67588)[0m     @     0x55f16c49da20 method_vectorcall
[2m[36m(pid=67588)[0m     @     0x55f16c411bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67588)[0m     @     0x55f16c49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67588)[0m     @     0x55f16c49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67588)[0m     @     0x55f16c412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67588)[0m     @     0x55f16c49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67588)[0m     @     0x55f16c49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67588)[0m     @     0x55f16c412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67588)[0m     @     0x55f16c49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67588)[0m     @     0x55f16c49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67588)[0m     @     0x55f16c412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67588)[0m     @     0x55f16c49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=67588)[0m     @     0x55f16c49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=67588)[0m     @     0x55f16c412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67624)[0m     @     0x7f8d92c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=67624)[0m     @     0x7f8d92c25388 at::native::copy_impl()
[2m[36m(pid=67624)[0m     @     0x7f8d92c275a4 at::native::copy_()
[2m[36m(pid=67600)[0m     @     0x55b8e8d1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=67624)[0m     @     0x7f8d933124f5 at::Tensor::copy_()
[2m[36m(pid=67624)[0m     @     0x7f8d957e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:51:53,974	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
2020-11-05 10:51:53,980	ERROR trial_runner.py:567 -- Trial PPO_jss_env_e639a_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=67688, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 25.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_e639a_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_e639a_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_e639a_00000_0_2020-11-05_10-51-46/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:51:53,991	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.

== Status ==
Memory usage on this node: 24.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_e639a_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_e639a_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_e639a_00000_0_2020-11-05_10-51-46/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:51:53,991	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_e639a_00000])
