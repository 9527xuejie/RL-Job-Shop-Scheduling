2020-11-05 10:43:43,399	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c70fc_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=42827)[0m 2020-11-05 10:43:46,213	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=42827)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=42827)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=42827)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=42827)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=42827)[0m 
[2m[36m(pid=42827)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=42785)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42785)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42785)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42785)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42785)[0m *** SIGSEGV (@0x0) received by PID 42785 (TID 0x7fe024cc2700) from PID 0; stack trace: ***
[2m[36m(pid=42785)[0m     @     0x7fe02489b390 (unknown)
[2m[36m(pid=42785)[0m     @     0x7fb12460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42785)[0m     @     0x7fb123d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42785)[0m     @     0x7fb123d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42771)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42771)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42771)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42771)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42771)[0m *** SIGSEGV (@0x0) received by PID 42771 (TID 0x7feb6833a700) from PID 0; stack trace: ***
[2m[36m(pid=42771)[0m     @     0x7feb67f13390 (unknown)
[2m[36m(pid=42771)[0m     @     0x7fbc67e0ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42771)[0m     @     0x7fbc675397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42794)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42794)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42794)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42794)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42794)[0m *** SIGSEGV (@0x0) received by PID 42794 (TID 0x7f268d77f700) from PID 0; stack trace: ***
[2m[36m(pid=42794)[0m     @     0x7f268d358390 (unknown)
[2m[36m(pid=42794)[0m     @     0x7ef78d2b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42794)[0m     @     0x7ef78c9e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42794)[0m     @     0x7ef78c9e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42794)[0m     @     0x7ef78c9e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=42794)[0m     @     0x7ef78c9e5d91 at::TensorIterator::for_each()
[2m[36m(pid=42821)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42821)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42821)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42821)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42821)[0m *** SIGSEGV (@0x0) received by PID 42821 (TID 0x7ff763ea1700) from PID 0; stack trace: ***
[2m[36m(pid=42821)[0m     @     0x7ff763a7a390 (unknown)
[2m[36m(pid=42821)[0m     @     0x7fc863a08f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42821)[0m     @     0x7fc8631337db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42821)[0m     @     0x7fc8631368f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42821)[0m     @     0x7fc863136ad3 at::TensorIterator::for_each()
[2m[36m(pid=42821)[0m     @     0x7fc863136d91 at::TensorIterator::for_each()
[2m[36m(pid=42821)[0m     @     0x7fc863a19b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42802)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42802)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42802)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42802)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42802)[0m *** SIGSEGV (@0x0) received by PID 42802 (TID 0x7f19c8b39700) from PID 0; stack trace: ***
[2m[36m(pid=42802)[0m     @     0x7f19c8712390 (unknown)
[2m[36m(pid=42802)[0m     @     0x7eeac860ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42802)[0m     @     0x7eeac7d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42802)[0m     @     0x7eeac7d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42810)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42810)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42810)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42810)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42810)[0m *** SIGSEGV (@0x0) received by PID 42810 (TID 0x7fa34be52700) from PID 0; stack trace: ***
[2m[36m(pid=42810)[0m     @     0x7fa34ba2b390 (unknown)
[2m[36m(pid=42810)[0m     @     0x7f744b751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42810)[0m     @     0x7f744ae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42810)[0m     @     0x7f744ae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42810)[0m     @     0x7f744ae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=42784)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42784)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42784)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42784)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42784)[0m *** SIGSEGV (@0x0) received by PID 42784 (TID 0x7f3a72be7700) from PID 0; stack trace: ***
[2m[36m(pid=42784)[0m     @     0x7f3a727c0390 (unknown)
[2m[36m(pid=42784)[0m     @     0x7f0b7274ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42784)[0m     @     0x7f0b71e797db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42788)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42788)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42788)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42788)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42788)[0m *** SIGSEGV (@0x0) received by PID 42788 (TID 0x7f80cfb7d700) from PID 0; stack trace: ***
[2m[36m(pid=42788)[0m     @     0x7f80cf756390 (unknown)
[2m[36m(pid=42788)[0m     @     0x7f51cf61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42788)[0m     @     0x7f51ced4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42788)[0m     @     0x7f51ced4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42779)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42779)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42779)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42779)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42779)[0m *** SIGSEGV (@0x0) received by PID 42779 (TID 0x7f414a1ac700) from PID 0; stack trace: ***
[2m[36m(pid=42779)[0m     @     0x7f4149d85390 (unknown)
[2m[36m(pid=42779)[0m     @     0x7f1249c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42779)[0m     @     0x7f12493387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42779)[0m     @     0x7f124933b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42746)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42746)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42746)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42746)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42746)[0m *** SIGSEGV (@0x0) received by PID 42746 (TID 0x7f87f2324700) from PID 0; stack trace: ***
[2m[36m(pid=42746)[0m     @     0x7f87f1efd390 (unknown)
[2m[36m(pid=42746)[0m     @     0x7f58f1e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42746)[0m     @     0x7f58f154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42772)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42772)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42772)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42772)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42772)[0m *** SIGSEGV (@0x0) received by PID 42772 (TID 0x7f38c6de4700) from PID 0; stack trace: ***
[2m[36m(pid=42772)[0m     @     0x7f38c69bd390 (unknown)
[2m[36m(pid=42772)[0m     @     0x7f09c67bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42772)[0m     @     0x7f09c5ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42812)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42812)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42812)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42812)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42812)[0m *** SIGSEGV (@0x0) received by PID 42812 (TID 0x7f2d905e7700) from PID 0; stack trace: ***
[2m[36m(pid=42812)[0m     @     0x7f2d901c0390 (unknown)
[2m[36m(pid=42812)[0m     @     0x7efe9001cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42812)[0m     @     0x7efe8f7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42812)[0m     @     0x7efe8f74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42800)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42800)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42800)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42800)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42800)[0m *** SIGSEGV (@0x0) received by PID 42800 (TID 0x7fca413d2700) from PID 0; stack trace: ***
[2m[36m(pid=42800)[0m     @     0x7fca40fab390 (unknown)
[2m[36m(pid=42800)[0m     @     0x7f9b40ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42800)[0m     @     0x7f9b405cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42800)[0m     @     0x7f9b405d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42769)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42769)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42769)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42769)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42769)[0m *** SIGSEGV (@0x0) received by PID 42769 (TID 0x7f9685f43700) from PID 0; stack trace: ***
[2m[36m(pid=42769)[0m     @     0x7f9685b1c390 (unknown)
[2m[36m(pid=42769)[0m     @     0x7f6785a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42769)[0m     @     0x7f67851357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42769)[0m     @     0x7f67851388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42769)[0m     @     0x7f6785138ad3 at::TensorIterator::for_each()
[2m[36m(pid=42769)[0m     @     0x7f6785138d91 at::TensorIterator::for_each()
[2m[36m(pid=42769)[0m     @     0x7f6785a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42769)[0m     @     0x7f6785a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42705)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42705)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42705)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42705)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42705)[0m *** SIGSEGV (@0x0) received by PID 42705 (TID 0x7f1066760700) from PID 0; stack trace: ***
[2m[36m(pid=42705)[0m     @     0x7f1066339390 (unknown)
[2m[36m(pid=42705)[0m     @     0x7ee1662b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42705)[0m     @     0x7ee1659e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42787)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42787)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42787)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42787)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42787)[0m *** SIGSEGV (@0x0) received by PID 42787 (TID 0x7fdcf9410700) from PID 0; stack trace: ***
[2m[36m(pid=42787)[0m     @     0x7fdcf8fe9390 (unknown)
[2m[36m(pid=42787)[0m     @     0x7fadf8ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42787)[0m     @     0x7fadf85cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42787)[0m     @     0x7fadf85d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42781)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42781)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42781)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42781)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42781)[0m *** SIGSEGV (@0x0) received by PID 42781 (TID 0x7fa3c92e6700) from PID 0; stack trace: ***
[2m[36m(pid=42781)[0m     @     0x7fa3c8ebf390 (unknown)
[2m[36m(pid=42781)[0m     @     0x7f74c8e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42781)[0m     @     0x7f74c85a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42762)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42762)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42762)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42762)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42762)[0m *** SIGSEGV (@0x0) received by PID 42762 (TID 0x7fd71c2aa700) from PID 0; stack trace: ***
[2m[36m(pid=42762)[0m     @     0x7fd71be83390 (unknown)
[2m[36m(pid=42762)[0m     @     0x7fa81be0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42762)[0m     @     0x7fa81b5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42762)[0m     @     0x7fa81b5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42798)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42798)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42798)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42798)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42798)[0m *** SIGSEGV (@0x0) received by PID 42798 (TID 0x7f275fcd2700) from PID 0; stack trace: ***
[2m[36m(pid=42798)[0m     @     0x7f275f8ab390 (unknown)
[2m[36m(pid=42798)[0m     @     0x7ef85f84cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42798)[0m     @     0x7ef85ef777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42798)[0m     @     0x7ef85ef7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42797)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42797)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42797)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42797)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42797)[0m *** SIGSEGV (@0x0) received by PID 42797 (TID 0x7fdb1b34b700) from PID 0; stack trace: ***
[2m[36m(pid=42797)[0m     @     0x7fdb1af24390 (unknown)
[2m[36m(pid=42797)[0m     @     0x7fac1aed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42797)[0m     @     0x7fac1a5fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42797)[0m     @     0x7fac1a6018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42797)[0m     @     0x7fac1a601ad3 at::TensorIterator::for_each()
[2m[36m(pid=42778)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42778)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42778)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42778)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42778)[0m *** SIGSEGV (@0x0) received by PID 42778 (TID 0x7f32724c7700) from PID 0; stack trace: ***
[2m[36m(pid=42778)[0m     @     0x7f32720a0390 (unknown)
[2m[36m(pid=42778)[0m     @     0x7f037204df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42778)[0m     @     0x7f03717787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42790)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42790)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42790)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42790)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42790)[0m *** SIGSEGV (@0x0) received by PID 42790 (TID 0x7f4409ae2700) from PID 0; stack trace: ***
[2m[36m(pid=42790)[0m     @     0x7f44096bb390 (unknown)
[2m[36m(pid=42790)[0m     @     0x7f1509665f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42790)[0m     @     0x7f1508d907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42790)[0m     @     0x7f1508d938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42706)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42706)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42706)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42706)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42706)[0m *** SIGSEGV (@0x0) received by PID 42706 (TID 0x7f6b25334700) from PID 0; stack trace: ***
[2m[36m(pid=42706)[0m     @     0x7f6b24f0d390 (unknown)
[2m[36m(pid=42706)[0m     @     0x7f3c24ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42706)[0m     @     0x7f3c245cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42706)[0m     @     0x7f3c245d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42775)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42775)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42775)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42775)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42775)[0m *** SIGSEGV (@0x0) received by PID 42775 (TID 0x7f7b160af700) from PID 0; stack trace: ***
[2m[36m(pid=42775)[0m     @     0x7f7b15c88390 (unknown)
[2m[36m(pid=42775)[0m     @     0x7f4c15c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42775)[0m     @     0x7f4c1533c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42775)[0m     @     0x7f4c1533f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42775)[0m     @     0x7f4c1533fad3 at::TensorIterator::for_each()
[2m[36m(pid=42805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42805)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42805)[0m *** SIGSEGV (@0x0) received by PID 42805 (TID 0x7f83464a3700) from PID 0; stack trace: ***
[2m[36m(pid=42805)[0m     @     0x7f834607c390 (unknown)
[2m[36m(pid=42805)[0m     @     0x7f5446028f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42805)[0m     @     0x7f54457537db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42805)[0m     @     0x7f54457568f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42805)[0m     @     0x7f5445756ad3 at::TensorIterator::for_each()
[2m[36m(pid=42774)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42774)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42774)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42774)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42774)[0m *** SIGSEGV (@0x0) received by PID 42774 (TID 0x7f4382258700) from PID 0; stack trace: ***
[2m[36m(pid=42774)[0m     @     0x7f4381e31390 (unknown)
[2m[36m(pid=42774)[0m     @     0x7f1481de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42774)[0m     @     0x7f148150f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42774)[0m     @     0x7f14815128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42774)[0m     @     0x7f1481512ad3 at::TensorIterator::for_each()
[2m[36m(pid=42818)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42818)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42818)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42818)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42818)[0m *** SIGSEGV (@0x0) received by PID 42818 (TID 0x7f48949fa700) from PID 0; stack trace: ***
[2m[36m(pid=42818)[0m     @     0x7f48945d3390 (unknown)
[2m[36m(pid=42818)[0m     @     0x7f1994536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42818)[0m     @     0x7f1993c617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42818)[0m     @     0x7f1993c648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42818)[0m     @     0x7f1993c64ad3 at::TensorIterator::for_each()
[2m[36m(pid=42763)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42763)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42763)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42763)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42763)[0m *** SIGSEGV (@0x0) received by PID 42763 (TID 0x7fb154d87700) from PID 0; stack trace: ***
[2m[36m(pid=42763)[0m     @     0x7fb154960390 (unknown)
[2m[36m(pid=42763)[0m     @     0x7f8254825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42763)[0m     @     0x7f8253f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42764)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42764)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42764)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42764)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42764)[0m *** SIGSEGV (@0x0) received by PID 42764 (TID 0x7fa1ad78b700) from PID 0; stack trace: ***
[2m[36m(pid=42764)[0m     @     0x7fa1ad364390 (unknown)
[2m[36m(pid=42764)[0m     @     0x7f72ad2b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42764)[0m     @     0x7f72ac9e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42764)[0m     @     0x7f72ac9e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42760)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42760)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42760)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42698)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42698)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42698)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42756)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42756)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42756)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42712)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42712)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42712)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42694)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42710)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42710)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42710)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42714)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42714)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42714)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42714)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42714)[0m *** SIGSEGV (@0x0) received by PID 42714 (TID 0x7f12c3a2e700) from PID 0; stack trace: ***
[2m[36m(pid=42754)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42754)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42754)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42695)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42695)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42695)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42695)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42695)[0m *** SIGSEGV (@0x0) received by PID 42695 (TID 0x7f4827808700) from PID 0; stack trace: ***
[2m[36m(pid=42744)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42744)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42744)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42744)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42744)[0m *** SIGSEGV (@0x0) received by PID 42744 (TID 0x7f8e4d1f5700) from PID 0; stack trace: ***
[2m[36m(pid=42744)[0m     @     0x7f8e4cdce390 (unknown)
[2m[36m(pid=42730)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42730)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42730)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42718)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42718)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42718)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42747)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42747)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42747)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42747)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42747)[0m *** SIGSEGV (@0x0) received by PID 42747 (TID 0x7efdcdd7a700) from PID 0; stack trace: ***
[2m[36m(pid=42747)[0m     @     0x7efdcd953390 (unknown)
[2m[36m(pid=42747)[0m     @     0x7ececd7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42807)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42807)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42807)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42807)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42807)[0m *** SIGSEGV (@0x0) received by PID 42807 (TID 0x7fce38aa0700) from PID 0; stack trace: ***
[2m[36m(pid=42807)[0m     @     0x7fce38679390 (unknown)
[2m[36m(pid=42807)[0m     @     0x7f9f38536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42767)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42767)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42767)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42803)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42803)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42803)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42803)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42803)[0m *** SIGSEGV (@0x0) received by PID 42803 (TID 0x7f5b3b78b700) from PID 0; stack trace: ***
[2m[36m(pid=42803)[0m     @     0x7f5b3b364390 (unknown)
[2m[36m(pid=42803)[0m     @     0x7f2c3b124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42697)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42697)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42697)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42780)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42780)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42780)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42780)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42780)[0m *** SIGSEGV (@0x0) received by PID 42780 (TID 0x7f027b71e700) from PID 0; stack trace: ***
[2m[36m(pid=42816)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42816)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42816)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42816)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42816)[0m *** SIGSEGV (@0x0) received by PID 42816 (TID 0x7f76cad09700) from PID 0; stack trace: ***
[2m[36m(pid=42816)[0m     @     0x7f76ca8e2390 (unknown)
[2m[36m(pid=42816)[0m     @     0x7f47ca7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42816)[0m     @     0x7f47c9ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42700)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42700)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42700)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42700)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42700)[0m *** SIGSEGV (@0x0) received by PID 42700 (TID 0x7f3450b73700) from PID 0; stack trace: ***
[2m[36m(pid=42700)[0m     @     0x7f345074c390 (unknown)
[2m[36m(pid=42700)[0m     @     0x7f055070cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42700)[0m     @     0x7f054fe377db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42693)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42693)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42693)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42693)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42693)[0m *** SIGSEGV (@0x0) received by PID 42693 (TID 0x7fa6db9ff700) from PID 0; stack trace: ***
[2m[36m(pid=42693)[0m     @     0x7fa6db5d8390 (unknown)
[2m[36m(pid=42693)[0m     @     0x7f77db572f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42693)[0m     @     0x7f77dac9d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42699)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42699)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42699)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42699)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42699)[0m *** SIGSEGV (@0x0) received by PID 42699 (TID 0x7f8e7a492700) from PID 0; stack trace: ***
[2m[36m(pid=42699)[0m     @     0x7f8e7a06b390 (unknown)
[2m[36m(pid=42699)[0m     @     0x7f5f7a005f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42699)[0m     @     0x7f5f797307db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42785)[0m     @     0x7fb123d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=42785)[0m     @     0x7fb123d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=42785)[0m     @     0x7fb12461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42785)[0m     @     0x7fb124642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42785)[0m     @     0x7fb123ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42785)[0m     @     0x7fb123ae2388 at::native::copy_impl()
[2m[36m(pid=42771)[0m     @     0x7fbc6753c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42771)[0m     @     0x7fbc6753cad3 at::TensorIterator::for_each()
[2m[36m(pid=42771)[0m     @     0x7fbc6753cd91 at::TensorIterator::for_each()
[2m[36m(pid=42771)[0m     @     0x7fbc67e1fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42771)[0m     @     0x7fbc67e42c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42794)[0m     @     0x7ef78d2c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42794)[0m     @     0x7ef78d2ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42794)[0m     @     0x7ef78c78da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42794)[0m     @     0x7ef78c78b388 at::native::copy_impl()
[2m[36m(pid=42794)[0m     @     0x7ef78c78d5a4 at::native::copy_()
[2m[36m(pid=42794)[0m     @     0x7ef78ce784f5 at::Tensor::copy_()
[2m[36m(pid=42794)[0m     @     0x7ef78f34b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42821)[0m     @     0x7fc863a3cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42821)[0m     @     0x7fc862edea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42821)[0m     @     0x7fc862edc388 at::native::copy_impl()
[2m[36m(pid=42821)[0m     @     0x7fc862ede5a4 at::native::copy_()
[2m[36m(pid=42821)[0m     @     0x7fc8635c94f5 at::Tensor::copy_()
[2m[36m(pid=42821)[0m     @     0x7fc865a9c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42821)[0m     @     0x7fc8635c94f5 at::Tensor::copy_()
[2m[36m(pid=42821)[0m     @     0x7fc86967479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42821)[0m     @     0x564067de7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42821)[0m     @     0x564067d42b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42821)[0m     @     0x564067dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42821)[0m     @     0x564067dcea20 method_vectorcall
[2m[36m(pid=42821)[0m     @     0x564067d42bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42821)[0m     @     0x564067dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42821)[0m     @     0x564067dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42821)[0m     @     0x564067d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42821)[0m     @     0x564067dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42821)[0m     @     0x564067dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42821)[0m     @     0x564067d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42821)[0m     @     0x564067dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42821)[0m     @     0x564067dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42821)[0m     @     0x564067d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42821)[0m     @     0x564067dcdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42821)[0m     @     0x564067dce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42821)[0m     @     0x564067d43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42802)[0m     @     0x7eeac7d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=42802)[0m     @     0x7eeac7d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=42802)[0m     @     0x7eeac861fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42802)[0m     @     0x7eeac8642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42802)[0m     @     0x7eeac7ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42802)[0m     @     0x7eeac7ae2388 at::native::copy_impl()
[2m[36m(pid=42810)[0m     @     0x7f744ae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=42810)[0m     @     0x7f744b762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42810)[0m     @     0x7f744b785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42810)[0m     @     0x7f744ac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42810)[0m     @     0x7f744ac25388 at::native::copy_impl()
[2m[36m(pid=42810)[0m     @     0x7f744ac275a4 at::native::copy_()
[2m[36m(pid=42810)[0m     @     0x7f744b3124f5 at::Tensor::copy_()
[2m[36m(pid=42784)[0m     @     0x7f0b71e7c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42784)[0m     @     0x7f0b71e7cad3 at::TensorIterator::for_each()
[2m[36m(pid=42784)[0m     @     0x7f0b71e7cd91 at::TensorIterator::for_each()
[2m[36m(pid=42784)[0m     @     0x7f0b7275fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42784)[0m     @     0x7f0b72782c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42784)[0m     @     0x7f0b71c24a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42784)[0m     @     0x7f0b71c22388 at::native::copy_impl()
[2m[36m(pid=42788)[0m     @     0x7f51ced4dad3 at::TensorIterator::for_each()
[2m[36m(pid=42788)[0m     @     0x7f51ced4dd91 at::TensorIterator::for_each()
[2m[36m(pid=42788)[0m     @     0x7f51cf630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42788)[0m     @     0x7f51cf653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42788)[0m     @     0x7f51ceaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42788)[0m     @     0x7f51ceaf3388 at::native::copy_impl()
[2m[36m(pid=42793)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42793)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42793)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42793)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42793)[0m *** SIGSEGV (@0x0) received by PID 42793 (TID 0x7fcf3a89b700) from PID 0; stack trace: ***
[2m[36m(pid=42793)[0m     @     0x7fcf3a474390 (unknown)
[2m[36m(pid=42776)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42776)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42776)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42776)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42776)[0m *** SIGSEGV (@0x0) received by PID 42776 (TID 0x7f380084a700) from PID 0; stack trace: ***
[2m[36m(pid=42776)[0m     @     0x7f3800423390 (unknown)
[2m[36m(pid=42776)[0m     @     0x7f09000acf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42776)[0m     @     0x7f08ff7d77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42696)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42696)[0m *** SIGSEGV (@0x0) received by PID 42696 (TID 0x7f20bc637700) from PID 0; stack trace: ***
[2m[36m(pid=42696)[0m     @     0x7f20bc210390 (unknown)
[2m[36m(pid=42696)[0m     @     0x7ef1bc01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42696)[0m     @     0x7ef1bb7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42696)[0m     @     0x7ef1bb74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42777)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42777)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42777)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42777)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42777)[0m *** SIGSEGV (@0x0) received by PID 42777 (TID 0x7effe5474700) from PID 0; stack trace: ***
[2m[36m(pid=42777)[0m     @     0x7effe504d390 (unknown)
[2m[36m(pid=42777)[0m     @     0x7ed0e4ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42777)[0m     @     0x7ed0e45cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42777)[0m     @     0x7ed0e45d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42770)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42770)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42770)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42770)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42770)[0m *** SIGSEGV (@0x0) received by PID 42770 (TID 0x7f87699a6700) from PID 0; stack trace: ***
[2m[36m(pid=42770)[0m     @     0x7f876957f390 (unknown)
[2m[36m(pid=42770)[0m     @     0x7f58694e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42770)[0m     @     0x7f5868c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42770)[0m     @     0x7f5868c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42770)[0m     @     0x7f5868c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=42691)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42691)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42691)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42691)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42691)[0m *** SIGSEGV (@0x0) received by PID 42691 (TID 0x7f8751f5f700) from PID 0; stack trace: ***
[2m[36m(pid=42691)[0m     @     0x7f8751b38390 (unknown)
[2m[36m(pid=42691)[0m     @     0x7f5851a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42691)[0m     @     0x7f58511357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42691)[0m     @     0x7f58511388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42691)[0m     @     0x7f5851138ad3 at::TensorIterator::for_each()
[2m[36m(pid=42713)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42713)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42713)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42713)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42713)[0m *** SIGSEGV (@0x0) received by PID 42713 (TID 0x7fc897270700) from PID 0; stack trace: ***
[2m[36m(pid=42713)[0m     @     0x7fc896e49390 (unknown)
[2m[36m(pid=42713)[0m     @     0x7f9996df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42713)[0m     @     0x7f999651b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42713)[0m     @     0x7f999651e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42713)[0m     @     0x7f999651ead3 at::TensorIterator::for_each()
[2m[36m(pid=42779)[0m     @     0x7f124933bad3 at::TensorIterator::for_each()
[2m[36m(pid=42779)[0m     @     0x7f124933bd91 at::TensorIterator::for_each()
[2m[36m(pid=42779)[0m     @     0x7f1249c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42779)[0m     @     0x7f1249c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42779)[0m     @     0x7f12490e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42779)[0m     @     0x7f12490e1388 at::native::copy_impl()
[2m[36m(pid=42779)[0m     @     0x7f12490e35a4 at::native::copy_()
[2m[36m(pid=42779)[0m     @     0x7f12497ce4f5 at::Tensor::copy_()
[2m[36m(pid=42779)[0m     @     0x7f124bca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42746)[0m     @     0x7f58f15528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42746)[0m     @     0x7f58f1552ad3 at::TensorIterator::for_each()
[2m[36m(pid=42746)[0m     @     0x7f58f1552d91 at::TensorIterator::for_each()
[2m[36m(pid=42746)[0m     @     0x7f58f1e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42746)[0m     @     0x7f58f1e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42746)[0m     @     0x7f58f12faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42746)[0m     @     0x7f58f12f8388 at::native::copy_impl()
[2m[36m(pid=42746)[0m     @     0x7f58f12fa5a4 at::native::copy_()
[2m[36m(pid=42731)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42731)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42731)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42731)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42731)[0m *** SIGSEGV (@0x0) received by PID 42731 (TID 0x7f868f0f5700) from PID 0; stack trace: ***
[2m[36m(pid=42731)[0m     @     0x7f868ecce390 (unknown)
[2m[36m(pid=42731)[0m     @     0x7f578ec6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42731)[0m     @     0x7f578e3957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42731)[0m     @     0x7f578e3988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42731)[0m     @     0x7f578e398ad3 at::TensorIterator::for_each()
[2m[36m(pid=42772)[0m     @     0x7f09c5ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42772)[0m     @     0x7f09c5ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=42772)[0m     @     0x7f09c5ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=42772)[0m     @     0x7f09c67ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42772)[0m     @     0x7f09c67efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42772)[0m     @     0x7f09c5c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42772)[0m     @     0x7f09c5c8f388 at::native::copy_impl()
[2m[36m(pid=42772)[0m     @     0x7f09c5c915a4 at::native::copy_()
[2m[36m(pid=42711)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42711)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42711)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42711)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42711)[0m *** SIGSEGV (@0x0) received by PID 42711 (TID 0x7fa80e736700) from PID 0; stack trace: ***
[2m[36m(pid=42711)[0m     @     0x7fa80e30f390 (unknown)
[2m[36m(pid=42711)[0m     @     0x7f790e2b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42711)[0m     @     0x7f790d9e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42711)[0m     @     0x7f790d9e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42711)[0m     @     0x7f790d9e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=42812)[0m     @     0x7efe8f74aad3 at::TensorIterator::for_each()
[2m[36m(pid=42812)[0m     @     0x7efe8f74ad91 at::TensorIterator::for_each()
[2m[36m(pid=42812)[0m     @     0x7efe9002db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42812)[0m     @     0x7efe90050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42812)[0m     @     0x7efe8f4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42812)[0m     @     0x7efe8f4f0388 at::native::copy_impl()
[2m[36m(pid=42812)[0m     @     0x7efe8f4f25a4 at::native::copy_()
[2m[36m(pid=42812)[0m     @     0x7efe8fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=42812)[0m     @     0x7efe920b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42800)[0m     @     0x7f9b405d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42800)[0m     @     0x7f9b405d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42800)[0m     @     0x7f9b40eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42800)[0m     @     0x7f9b40ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42800)[0m     @     0x7f9b4037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42800)[0m     @     0x7f9b40378388 at::native::copy_impl()
[2m[36m(pid=42800)[0m     @     0x7f9b4037a5a4 at::native::copy_()
[2m[36m(pid=42800)[0m     @     0x7f9b40a654f5 at::Tensor::copy_()
[2m[36m(pid=42800)[0m     @     0x7f9b42f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42769)[0m     @     0x7f6784ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42769)[0m     @     0x7f6784ede388 at::native::copy_impl()
[2m[36m(pid=42769)[0m     @     0x7f6784ee05a4 at::native::copy_()
[2m[36m(pid=42769)[0m     @     0x7f67855cb4f5 at::Tensor::copy_()
[2m[36m(pid=42769)[0m     @     0x7f6787a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42769)[0m     @     0x7f67855cb4f5 at::Tensor::copy_()
[2m[36m(pid=42769)[0m     @     0x7f678b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42769)[0m     @     0x556f8a1cffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42769)[0m     @     0x556f8a12ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42769)[0m     @     0x556f8a1b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42769)[0m     @     0x556f8a1b6a20 method_vectorcall
[2m[36m(pid=42769)[0m     @     0x556f8a12abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42769)[0m     @     0x556f8a1b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42769)[0m     @     0x556f8a1b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42769)[0m     @     0x556f8a12b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42769)[0m     @     0x556f8a1b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42769)[0m     @     0x556f8a1b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42769)[0m     @     0x556f8a12b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42769)[0m     @     0x556f8a1b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42769)[0m     @     0x556f8a1b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42769)[0m     @     0x556f8a12b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42769)[0m     @     0x556f8a1b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42769)[0m     @     0x556f8a1b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42769)[0m     @     0x556f8a12b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42728)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42728)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42728)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42728)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42728)[0m *** SIGSEGV (@0x0) received by PID 42728 (TID 0x7f2a20260700) from PID 0; stack trace: ***
[2m[36m(pid=42728)[0m     @     0x7f2a1fe39390 (unknown)
[2m[36m(pid=42728)[0m     @     0x7efb1fddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42728)[0m     @     0x7efb1f5097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42728)[0m     @     0x7efb1f50c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42728)[0m     @     0x7efb1f50cad3 at::TensorIterator::for_each()
[2m[36m(pid=42728)[0m     @     0x7efb1f50cd91 at::TensorIterator::for_each()
[2m[36m(pid=42705)[0m     @     0x7ee1659e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42705)[0m     @     0x7ee1659e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=42705)[0m     @     0x7ee1659e7d91 at::TensorIterator::for_each()
[2m[36m(pid=42705)[0m     @     0x7ee1662cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42705)[0m     @     0x7ee1662edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42705)[0m     @     0x7ee16578fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42705)[0m     @     0x7ee16578d388 at::native::copy_impl()
[2m[36m(pid=42705)[0m     @     0x7ee16578f5a4 at::native::copy_()
[2m[36m(pid=42705)[0m     @     0x7ee165e7a4f5 at::Tensor::copy_()
[2m[36m(pid=42716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42716)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42716)[0m *** SIGSEGV (@0x0) received by PID 42716 (TID 0x7fce6e1a5700) from PID 0; stack trace: ***
[2m[36m(pid=42716)[0m     @     0x7fce6dd7e390 (unknown)
[2m[36m(pid=42716)[0m     @     0x7f9f6dc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42716)[0m     @     0x7f9f6d3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42716)[0m     @     0x7f9f6d33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42716)[0m     @     0x7f9f6d33bad3 at::TensorIterator::for_each()
[2m[36m(pid=42716)[0m     @     0x7f9f6d33bd91 at::TensorIterator::for_each()
[2m[36m(pid=42787)[0m     @     0x7fadf85d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42787)[0m     @     0x7fadf85d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42787)[0m     @     0x7fadf8eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42787)[0m     @     0x7fadf8ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42787)[0m     @     0x7fadf837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42787)[0m     @     0x7fadf8378388 at::native::copy_impl()
[2m[36m(pid=42787)[0m     @     0x7fadf837a5a4 at::native::copy_()
[2m[36m(pid=42787)[0m     @     0x7fadf8a654f5 at::Tensor::copy_()
[2m[36m(pid=42787)[0m     @     0x7fadfaf388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42787)[0m     @     0x7fadf8a654f5 at::Tensor::copy_()
[2m[36m(pid=42787)[0m     @     0x7fadfeb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42787)[0m     @     0x55dbe4932fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42781)[0m     @     0x7f74c85a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42781)[0m     @     0x7f74c85a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=42781)[0m     @     0x7f74c85a5d91 at::TensorIterator::for_each()
[2m[36m(pid=42781)[0m     @     0x7f74c8e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42781)[0m     @     0x7f74c8eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42781)[0m     @     0x7f74c834da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42781)[0m     @     0x7f74c834b388 at::native::copy_impl()
[2m[36m(pid=42781)[0m     @     0x7f74c834d5a4 at::native::copy_()
[2m[36m(pid=42781)[0m     @     0x7f74c8a384f5 at::Tensor::copy_()
[2m[36m(pid=42762)[0m     @     0x7fa81b539ad3 at::TensorIterator::for_each()
[2m[36m(pid=42762)[0m     @     0x7fa81b539d91 at::TensorIterator::for_each()
[2m[36m(pid=42762)[0m     @     0x7fa81be1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42762)[0m     @     0x7fa81be3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42762)[0m     @     0x7fa81b2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42762)[0m     @     0x7fa81b2df388 at::native::copy_impl()
[2m[36m(pid=42762)[0m     @     0x7fa81b2e15a4 at::native::copy_()
[2m[36m(pid=42762)[0m     @     0x7fa81b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=42762)[0m     @     0x7fa81de9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42798)[0m     @     0x7ef85ef7aad3 at::TensorIterator::for_each()
[2m[36m(pid=42798)[0m     @     0x7ef85ef7ad91 at::TensorIterator::for_each()
[2m[36m(pid=42798)[0m     @     0x7ef85f85db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42798)[0m     @     0x7ef85f880c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42798)[0m     @     0x7ef85ed22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42798)[0m     @     0x7ef85ed20388 at::native::copy_impl()
[2m[36m(pid=42798)[0m     @     0x7ef85ed225a4 at::native::copy_()
[2m[36m(pid=42798)[0m     @     0x7ef85f40d4f5 at::Tensor::copy_()
[2m[36m(pid=42798)[0m     @     0x7ef8618e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42798)[0m     @     0x7ef85f40d4f5 at::Tensor::copy_()
[2m[36m(pid=42798)[0m     @     0x7ef8654b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42798)[0m     @     0x55719f163fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42798)[0m     @     0x55719f0beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42798)[0m     @     0x55719f149baf _PyEval_EvalCodeWithName
[2m[36m(pid=42798)[0m     @     0x55719f14aa20 method_vectorcall
[2m[36m(pid=42798)[0m     @     0x55719f0bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42798)[0m     @     0x55719f149baf _PyEval_EvalCodeWithName
[2m[36m(pid=42798)[0m     @     0x55719f14a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42798)[0m     @     0x55719f0bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42798)[0m     @     0x55719f149baf _PyEval_EvalCodeWithName
[2m[36m(pid=42798)[0m     @     0x55719f14a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42798)[0m     @     0x55719f0bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42798)[0m     @     0x55719f149baf _PyEval_EvalCodeWithName
[2m[36m(pid=42798)[0m     @     0x55719f14a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42798)[0m     @     0x55719f0bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42798)[0m     @     0x55719f149baf _PyEval_EvalCodeWithName
[2m[36m(pid=42798)[0m     @     0x55719f14a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42798)[0m     @     0x55719f0bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42797)[0m     @     0x7fac1a601d91 at::TensorIterator::for_each()
[2m[36m(pid=42797)[0m     @     0x7fac1aee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42797)[0m     @     0x7fac1af07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42797)[0m     @     0x7fac1a3a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42797)[0m     @     0x7fac1a3a7388 at::native::copy_impl()
[2m[36m(pid=42797)[0m     @     0x7fac1a3a95a4 at::native::copy_()
[2m[36m(pid=42797)[0m     @     0x7fac1aa944f5 at::Tensor::copy_()
[2m[36m(pid=42797)[0m     @     0x7fac1cf678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42797)[0m     @     0x7fac1aa944f5 at::Tensor::copy_()
[2m[36m(pid=42797)[0m     @     0x7fac20b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42797)[0m     @     0x55b762073fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42797)[0m     @     0x55b761fceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42797)[0m     @     0x55b762059baf _PyEval_EvalCodeWithName
[2m[36m(pid=42797)[0m     @     0x55b76205aa20 method_vectorcall
[2m[36m(pid=42797)[0m     @     0x55b761fcebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42797)[0m     @     0x55b762059baf _PyEval_EvalCodeWithName
[2m[36m(pid=42797)[0m     @     0x55b76205a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42797)[0m     @     0x55b761fcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42797)[0m     @     0x55b762059baf _PyEval_EvalCodeWithName
[2m[36m(pid=42797)[0m     @     0x55b76205a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42797)[0m     @     0x55b761fcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42797)[0m     @     0x55b762059baf _PyEval_EvalCodeWithName
[2m[36m(pid=42797)[0m     @     0x55b76205a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42797)[0m     @     0x55b761fcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42797)[0m     @     0x55b762059baf _PyEval_EvalCodeWithName
[2m[36m(pid=42797)[0m     @     0x55b76205a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42797)[0m     @     0x55b761fcf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42811)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42811)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42811)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42811)[0m *** SIGSEGV (@0x0) received by PID 42811 (TID 0x7f7b34255700) from PID 0; stack trace: ***
[2m[36m(pid=42811)[0m     @     0x7f7b33e2e390 (unknown)
[2m[36m(pid=42811)[0m     @     0x7f4c33dc3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42811)[0m     @     0x7f4c334ee7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42811)[0m     @     0x7f4c334f18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42811)[0m     @     0x7f4c334f1ad3 at::TensorIterator::for_each()
[2m[36m(pid=42778)[0m     @     0x7f037177b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42778)[0m     @     0x7f037177bad3 at::TensorIterator::for_each()
[2m[36m(pid=42778)[0m     @     0x7f037177bd91 at::TensorIterator::for_each()
[2m[36m(pid=42778)[0m     @     0x7f037205eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42778)[0m     @     0x7f0372081c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42778)[0m     @     0x7f0371523a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42778)[0m     @     0x7f0371521388 at::native::copy_impl()
[2m[36m(pid=42778)[0m     @     0x7f03715235a4 at::native::copy_()
[2m[36m(pid=42778)[0m     @     0x7f0371c0e4f5 at::Tensor::copy_()
[2m[36m(pid=42790)[0m     @     0x7f1508d93ad3 at::TensorIterator::for_each()
[2m[36m(pid=42790)[0m     @     0x7f1508d93d91 at::TensorIterator::for_each()
[2m[36m(pid=42790)[0m     @     0x7f1509676b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42790)[0m     @     0x7f1509699c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42790)[0m     @     0x7f1508b3ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42790)[0m     @     0x7f1508b39388 at::native::copy_impl()
[2m[36m(pid=42790)[0m     @     0x7f1508b3b5a4 at::native::copy_()
[2m[36m(pid=42790)[0m     @     0x7f15092264f5 at::Tensor::copy_()
[2m[36m(pid=42790)[0m     @     0x7f150b6f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42819)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42819)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42819)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42819)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42819)[0m *** SIGSEGV (@0x0) received by PID 42819 (TID 0x7f10726c6700) from PID 0; stack trace: ***
[2m[36m(pid=42819)[0m     @     0x7f107229f390 (unknown)
[2m[36m(pid=42819)[0m     @     0x7ee172239f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42819)[0m     @     0x7ee1719647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42819)[0m     @     0x7ee1719678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42819)[0m     @     0x7ee171967ad3 at::TensorIterator::for_each()
[2m[36m(pid=42819)[0m     @     0x7ee171967d91 at::TensorIterator::for_each()
[2m[36m(pid=42819)[0m     @     0x7ee17224ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42819)[0m     @     0x7ee17226dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42706)[0m     @     0x7f3c245d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42706)[0m     @     0x7f3c245d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42706)[0m     @     0x7f3c24eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42706)[0m     @     0x7f3c24ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42706)[0m     @     0x7f3c2437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42706)[0m     @     0x7f3c24378388 at::native::copy_impl()
[2m[36m(pid=42706)[0m     @     0x7f3c2437a5a4 at::native::copy_()
[2m[36m(pid=42706)[0m     @     0x7f3c24a654f5 at::Tensor::copy_()
[2m[36m(pid=42706)[0m     @     0x7f3c26f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42775)[0m     @     0x7f4c1533fd91 at::TensorIterator::for_each()
[2m[36m(pid=42775)[0m     @     0x7f4c15c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42775)[0m     @     0x7f4c15c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42775)[0m     @     0x7f4c150e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42775)[0m     @     0x7f4c150e5388 at::native::copy_impl()
[2m[36m(pid=42775)[0m     @     0x7f4c150e75a4 at::native::copy_()
[2m[36m(pid=42775)[0m     @     0x7f4c157d24f5 at::Tensor::copy_()
[2m[36m(pid=42775)[0m     @     0x7f4c17ca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42775)[0m     @     0x7f4c157d24f5 at::Tensor::copy_()
[2m[36m(pid=42775)[0m     @     0x7f4c1b87d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42775)[0m     @     0x557b45906fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42775)[0m     @     0x557b45861b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42775)[0m     @     0x557b458ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42775)[0m     @     0x557b458eda20 method_vectorcall
[2m[36m(pid=42775)[0m     @     0x557b45861bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42775)[0m     @     0x557b458ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42775)[0m     @     0x557b458ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42775)[0m     @     0x557b45862689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42775)[0m     @     0x557b458ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42775)[0m     @     0x557b458ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42775)[0m     @     0x557b45862689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42775)[0m     @     0x557b458ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42775)[0m     @     0x557b458ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42775)[0m     @     0x557b45862689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42775)[0m     @     0x557b458ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42775)[0m     @     0x557b458ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42775)[0m     @     0x557b45862689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42805)[0m     @     0x7f5445756d91 at::TensorIterator::for_each()
[2m[36m(pid=42805)[0m     @     0x7f5446039b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42805)[0m     @     0x7f544605cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42805)[0m     @     0x7f54454fea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42805)[0m     @     0x7f54454fc388 at::native::copy_impl()
[2m[36m(pid=42805)[0m     @     0x7f54454fe5a4 at::native::copy_()
[2m[36m(pid=42805)[0m     @     0x7f5445be94f5 at::Tensor::copy_()
[2m[36m(pid=42805)[0m     @     0x7f54480bc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42805)[0m     @     0x7f5445be94f5 at::Tensor::copy_()
[2m[36m(pid=42805)[0m     @     0x7f544bc9479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42805)[0m     @     0x5607e5bbdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42805)[0m     @     0x5607e5b18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42805)[0m     @     0x5607e5ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42805)[0m     @     0x5607e5ba4a20 method_vectorcall
[2m[36m(pid=42805)[0m     @     0x5607e5b18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42805)[0m     @     0x5607e5ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42805)[0m     @     0x5607e5ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42805)[0m     @     0x5607e5b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42805)[0m     @     0x5607e5ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42805)[0m     @     0x5607e5ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42805)[0m     @     0x5607e5b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42805)[0m     @     0x5607e5ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42805)[0m     @     0x5607e5ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42805)[0m     @     0x5607e5b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42805)[0m     @     0x5607e5ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42805)[0m     @     0x5607e5ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42805)[0m     @     0x5607e5b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42774)[0m     @     0x7f1481512d91 at::TensorIterator::for_each()
[2m[36m(pid=42774)[0m     @     0x7f1481df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42774)[0m     @     0x7f1481e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42774)[0m     @     0x7f14812baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42774)[0m     @     0x7f14812b8388 at::native::copy_impl()
[2m[36m(pid=42774)[0m     @     0x7f14812ba5a4 at::native::copy_()
[2m[36m(pid=42774)[0m     @     0x7f14819a54f5 at::Tensor::copy_()
[2m[36m(pid=42774)[0m     @     0x7f1483e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42774)[0m     @     0x7f14819a54f5 at::Tensor::copy_()
[2m[36m(pid=42774)[0m     @     0x7f1487a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42774)[0m     @     0x55691ddeffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42774)[0m     @     0x55691dd4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42774)[0m     @     0x55691ddd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42774)[0m     @     0x55691ddd6a20 method_vectorcall
[2m[36m(pid=42774)[0m     @     0x55691dd4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42774)[0m     @     0x55691ddd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42774)[0m     @     0x55691ddd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42774)[0m     @     0x55691dd4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42774)[0m     @     0x55691ddd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42774)[0m     @     0x55691ddd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42774)[0m     @     0x55691dd4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42774)[0m     @     0x55691ddd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42774)[0m     @     0x55691ddd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42774)[0m     @     0x55691dd4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42774)[0m     @     0x55691ddd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=42774)[0m     @     0x55691ddd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42774)[0m     @     0x55691dd4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42704)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42704)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42704)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42704)[0m *** SIGSEGV (@0x0) received by PID 42704 (TID 0x7f870fdc8700) from PID 0; stack trace: ***
[2m[36m(pid=42704)[0m     @     0x7f870f9a1390 (unknown)
[2m[36m(pid=42704)[0m     @     0x7f580f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42704)[0m     @     0x7f580f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42704)[0m     @     0x7f580f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42704)[0m     @     0x7f580f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=42708)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42708)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42708)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42708)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42708)[0m *** SIGSEGV (@0x0) received by PID 42708 (TID 0x7f5aa1c7b700) from PID 0; stack trace: ***
[2m[36m(pid=42708)[0m     @     0x7f5aa1854390 (unknown)
[2m[36m(pid=42708)[0m     @     0x7f2ba16f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42708)[0m     @     0x7f2ba0e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42708)[0m     @     0x7f2ba0e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42708)[0m     @     0x7f2ba0e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=42818)[0m     @     0x7f1993c64d91 at::TensorIterator::for_each()
[2m[36m(pid=42818)[0m     @     0x7f1994547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42818)[0m     @     0x7f199456ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42818)[0m     @     0x7f1993a0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42818)[0m     @     0x7f1993a0a388 at::native::copy_impl()
[2m[36m(pid=42818)[0m     @     0x7f1993a0c5a4 at::native::copy_()
[2m[36m(pid=42818)[0m     @     0x7f19940f74f5 at::Tensor::copy_()
[2m[36m(pid=42818)[0m     @     0x7f19965ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42818)[0m     @     0x7f19940f74f5 at::Tensor::copy_()
[2m[36m(pid=42818)[0m     @     0x7f199a1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42818)[0m     @     0x558d1617dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42818)[0m     @     0x558d160d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42818)[0m     @     0x558d16163baf _PyEval_EvalCodeWithName
[2m[36m(pid=42818)[0m     @     0x558d16164a20 method_vectorcall
[2m[36m(pid=42818)[0m     @     0x558d160d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42818)[0m     @     0x558d16163baf _PyEval_EvalCodeWithName
[2m[36m(pid=42818)[0m     @     0x558d16164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42818)[0m     @     0x558d160d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42818)[0m     @     0x558d16163baf _PyEval_EvalCodeWithName
[2m[36m(pid=42818)[0m     @     0x558d16164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42818)[0m     @     0x558d160d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42818)[0m     @     0x558d16163baf _PyEval_EvalCodeWithName
[2m[36m(pid=42818)[0m     @     0x558d16164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42818)[0m     @     0x558d160d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42818)[0m     @     0x558d16163baf _PyEval_EvalCodeWithName
[2m[36m(pid=42818)[0m     @     0x558d16164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42818)[0m     @     0x558d160d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42763)[0m     @     0x7f8253f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42763)[0m     @     0x7f8253f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=42763)[0m     @     0x7f8253f53d91 at::TensorIterator::for_each()
[2m[36m(pid=42763)[0m     @     0x7f8254836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42763)[0m     @     0x7f8254859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42763)[0m     @     0x7f8253cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42763)[0m     @     0x7f8253cf9388 at::native::copy_impl()
[2m[36m(pid=42763)[0m     @     0x7f8253cfb5a4 at::native::copy_()
[2m[36m(pid=42763)[0m     @     0x7f82543e64f5 at::Tensor::copy_()
[2m[36m(pid=42758)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42758)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42758)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42758)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42758)[0m *** SIGSEGV (@0x0) received by PID 42758 (TID 0x7f6304e77700) from PID 0; stack trace: ***
[2m[36m(pid=42758)[0m     @     0x7f6304a50390 (unknown)
[2m[36m(pid=42758)[0m     @     0x7f3404911f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42758)[0m     @     0x7f340403c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42758)[0m     @     0x7f340403f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42758)[0m     @     0x7f340403fad3 at::TensorIterator::for_each()
[2m[36m(pid=42758)[0m     @     0x7f340403fd91 at::TensorIterator::for_each()
[2m[36m(pid=42764)[0m     @     0x7f72ac9e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=42764)[0m     @     0x7f72ac9e5d91 at::TensorIterator::for_each()
[2m[36m(pid=42764)[0m     @     0x7f72ad2c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42764)[0m     @     0x7f72ad2ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42764)[0m     @     0x7f72ac78da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42764)[0m     @     0x7f72ac78b388 at::native::copy_impl()
[2m[36m(pid=42764)[0m     @     0x7f72ac78d5a4 at::native::copy_()
[2m[36m(pid=42764)[0m     @     0x7f72ace784f5 at::Tensor::copy_()
[2m[36m(pid=42764)[0m     @     0x7f72af34b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42692)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42692)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42692)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42692)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42692)[0m *** SIGSEGV (@0x0) received by PID 42692 (TID 0x7fce938ef700) from PID 0; stack trace: ***
[2m[36m(pid=42692)[0m     @     0x7fce934c8390 (unknown)
[2m[36m(pid=42692)[0m     @     0x7f9f9346af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42692)[0m     @     0x7f9f92b957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42692)[0m     @     0x7f9f92b988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42692)[0m     @     0x7f9f92b98ad3 at::TensorIterator::for_each()
[2m[36m(pid=42748)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42748)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42748)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42748)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42748)[0m *** SIGSEGV (@0x0) received by PID 42748 (TID 0x7f514ef30700) from PID 0; stack trace: ***
[2m[36m(pid=42748)[0m     @     0x7f514eb09390 (unknown)
[2m[36m(pid=42748)[0m     @     0x7f224e97ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42748)[0m     @     0x7f224e0a97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42748)[0m     @     0x7f224e0ac8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42748)[0m     @     0x7f224e0acad3 at::TensorIterator::for_each()
[2m[36m(pid=42709)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42709)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42709)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42709)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42709)[0m *** SIGSEGV (@0x0) received by PID 42709 (TID 0x7f9669dd1700) from PID 0; stack trace: ***
[2m[36m(pid=42709)[0m     @     0x7f96699aa390 (unknown)
[2m[36m(pid=42709)[0m     @     0x7f6769749f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42709)[0m     @     0x7f6768e747db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42709)[0m     @     0x7f6768e778f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42709)[0m     @     0x7f6768e77ad3 at::TensorIterator::for_each()
[2m[36m(pid=42709)[0m     @     0x7f6768e77d91 at::TensorIterator::for_each()
[2m[36m(pid=42702)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42702)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42702)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42702)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42702)[0m *** SIGSEGV (@0x0) received by PID 42702 (TID 0x7f0ed52b7700) from PID 0; stack trace: ***
[2m[36m(pid=42702)[0m     @     0x7f0ed4e90390 (unknown)
[2m[36m(pid=42702)[0m     @     0x7edfd4e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42702)[0m     @     0x7edfd453d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42702)[0m     @     0x7edfd45408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42702)[0m     @     0x7edfd4540ad3 at::TensorIterator::for_each()
[2m[36m(pid=42702)[0m     @     0x7edfd4540d91 at::TensorIterator::for_each()
[2m[36m(pid=42702)[0m     @     0x7edfd4e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42702)[0m     @     0x7edfd4e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42701)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42701)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42701)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42701)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42701)[0m *** SIGSEGV (@0x0) received by PID 42701 (TID 0x7f1ed88d4700) from PID 0; stack trace: ***
[2m[36m(pid=42701)[0m     @     0x7f1ed84ad390 (unknown)
[2m[36m(pid=42701)[0m     @     0x7eefd83e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42701)[0m     @     0x7eefd7b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42701)[0m     @     0x7eefd7b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42701)[0m     @     0x7eefd7b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=42721)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42721)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42721)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42721)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42721)[0m *** SIGSEGV (@0x0) received by PID 42721 (TID 0x7f3ff2b0c700) from PID 0; stack trace: ***
[2m[36m(pid=42721)[0m     @     0x7f3ff26e5390 (unknown)
[2m[36m(pid=42721)[0m     @     0x7f10f24f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42721)[0m     @     0x7f10f1c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42721)[0m     @     0x7f10f1c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42721)[0m     @     0x7f10f1c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=42783)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42783)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42783)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42783)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42783)[0m *** SIGSEGV (@0x0) received by PID 42783 (TID 0x7f1d48909700) from PID 0; stack trace: ***
[2m[36m(pid=42783)[0m     @     0x7f1d484e2390 (unknown)
[2m[36m(pid=42783)[0m     @     0x7eee483e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42783)[0m     @     0x7eee47b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42783)[0m     @     0x7eee47b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42753)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42753)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42753)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42753)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42753)[0m *** SIGSEGV (@0x0) received by PID 42753 (TID 0x7fa3aefdd700) from PID 0; stack trace: ***
[2m[36m(pid=42753)[0m     @     0x7fa3aebb6390 (unknown)
[2m[36m(pid=42753)[0m     @     0x7f74aea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42753)[0m     @     0x7f74ae14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42753)[0m     @     0x7f74ae14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42753)[0m     @     0x7f74ae14fad3 at::TensorIterator::for_each()
[2m[36m(pid=42751)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42751)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42751)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42751)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42751)[0m *** SIGSEGV (@0x0) received by PID 42751 (TID 0x7f6c4c172700) from PID 0; stack trace: ***
[2m[36m(pid=42751)[0m     @     0x7f6c4bd4b390 (unknown)
[2m[36m(pid=42751)[0m     @     0x7f3d4bce0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42751)[0m     @     0x7f3d4b40b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42751)[0m     @     0x7f3d4b40e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42751)[0m     @     0x7f3d4b40ead3 at::TensorIterator::for_each()
[2m[36m(pid=42751)[0m     @     0x7f3d4b40ed91 at::TensorIterator::for_each()
[2m[36m(pid=42773)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42773)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42773)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42773)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42773)[0m *** SIGSEGV (@0x0) received by PID 42773 (TID 0x7fd218374700) from PID 0; stack trace: ***
[2m[36m(pid=42773)[0m     @     0x7fd217f4d390 (unknown)
[2m[36m(pid=42773)[0m     @     0x7fa317df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42773)[0m     @     0x7fa31751b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42760)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42760)[0m *** SIGSEGV (@0x0) received by PID 42760 (TID 0x7f473254f700) from PID 0; stack trace: ***
[2m[36m(pid=42760)[0m     @     0x7f4732128390 (unknown)
[2m[36m(pid=42760)[0m     @     0x7f18320cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42760)[0m     @     0x7f18317f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42760)[0m     @     0x7f18317fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42760)[0m     @     0x7f18317fbad3 at::TensorIterator::for_each()
[2m[36m(pid=42760)[0m     @     0x7f18317fbd91 at::TensorIterator::for_each()
[2m[36m(pid=42760)[0m     @     0x7f18320deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42698)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42698)[0m *** SIGSEGV (@0x0) received by PID 42698 (TID 0x7f8bdb474700) from PID 0; stack trace: ***
[2m[36m(pid=42698)[0m     @     0x7f8bdb04d390 (unknown)
[2m[36m(pid=42698)[0m     @     0x7f5cdaf13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42698)[0m     @     0x7f5cda63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42698)[0m     @     0x7f5cda6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42698)[0m     @     0x7f5cda641ad3 at::TensorIterator::for_each()
[2m[36m(pid=42698)[0m     @     0x7f5cda641d91 at::TensorIterator::for_each()
[2m[36m(pid=42756)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42756)[0m *** SIGSEGV (@0x0) received by PID 42756 (TID 0x7f350ed12700) from PID 0; stack trace: ***
[2m[36m(pid=42756)[0m     @     0x7f350e8eb390 (unknown)
[2m[36m(pid=42756)[0m     @     0x7f060e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42756)[0m     @     0x7f060de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42756)[0m     @     0x7f060de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42756)[0m     @     0x7f060de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=42712)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42712)[0m *** SIGSEGV (@0x0) received by PID 42712 (TID 0x7f5c30361700) from PID 0; stack trace: ***
[2m[36m(pid=42712)[0m     @     0x7f5c2ff3a390 (unknown)
[2m[36m(pid=42712)[0m     @     0x7f2d2fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42712)[0m     @     0x7f2d2f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42712)[0m     @     0x7f2d2f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42712)[0m     @     0x7f2d2f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=42712)[0m     @     0x7f2d2f539d91 at::TensorIterator::for_each()
[2m[36m(pid=42694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42694)[0m *** SIGSEGV (@0x0) received by PID 42694 (TID 0x7fd19526a700) from PID 0; stack trace: ***
[2m[36m(pid=42694)[0m     @     0x7fd194e43390 (unknown)
[2m[36m(pid=42694)[0m     @     0x7fa294b85f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42694)[0m     @     0x7fa2942b07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42694)[0m     @     0x7fa2942b38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42694)[0m     @     0x7fa2942b3ad3 at::TensorIterator::for_each()
[2m[36m(pid=42694)[0m     @     0x7fa2942b3d91 at::TensorIterator::for_each()
[2m[36m(pid=42694)[0m     @     0x7fa294b96b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42710)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42710)[0m *** SIGSEGV (@0x0) received by PID 42710 (TID 0x7fc291182700) from PID 0; stack trace: ***
[2m[36m(pid=42710)[0m     @     0x7fc290d5b390 (unknown)
[2m[36m(pid=42710)[0m     @     0x7f9390c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42710)[0m     @     0x7f939039f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42710)[0m     @     0x7f93903a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42710)[0m     @     0x7f93903a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42710)[0m     @     0x7f93903a2d91 at::TensorIterator::for_each()
[2m[36m(pid=42714)[0m     @     0x7f12c3607390 (unknown)
[2m[36m(pid=42714)[0m     @     0x7ee3c35b2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42714)[0m     @     0x7ee3c2cdd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42714)[0m     @     0x7ee3c2ce08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42714)[0m     @     0x7ee3c2ce0ad3 at::TensorIterator::for_each()
[2m[36m(pid=42714)[0m     @     0x7ee3c2ce0d91 at::TensorIterator::for_each()
[2m[36m(pid=42714)[0m     @     0x7ee3c35c3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42714)[0m     @     0x7ee3c35e6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42754)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42754)[0m *** SIGSEGV (@0x0) received by PID 42754 (TID 0x7f213ab87700) from PID 0; stack trace: ***
[2m[36m(pid=42754)[0m     @     0x7f213a760390 (unknown)
[2m[36m(pid=42754)[0m     @     0x7ef23a6ddf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42754)[0m     @     0x7ef239e087db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42754)[0m     @     0x7ef239e0b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42754)[0m     @     0x7ef239e0bad3 at::TensorIterator::for_each()
[2m[36m(pid=42754)[0m     @     0x7ef239e0bd91 at::TensorIterator::for_each()
[2m[36m(pid=42754)[0m     @     0x7ef23a6eeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42754)[0m     @     0x7ef23a711c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42754)[0m     @     0x7ef239bb3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42695)[0m     @     0x7f48273e1390 (unknown)
[2m[36m(pid=42695)[0m     @     0x7f1926c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42695)[0m     @     0x7f19263407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42695)[0m     @     0x7f19263438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42695)[0m     @     0x7f1926343ad3 at::TensorIterator::for_each()
[2m[36m(pid=42695)[0m     @     0x7f1926343d91 at::TensorIterator::for_each()
[2m[36m(pid=42695)[0m     @     0x7f1926c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42744)[0m     @     0x7f5f4cd24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42744)[0m     @     0x7f5f4c44f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42744)[0m     @     0x7f5f4c4528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42744)[0m     @     0x7f5f4c452ad3 at::TensorIterator::for_each()
[2m[36m(pid=42744)[0m     @     0x7f5f4c452d91 at::TensorIterator::for_each()
[2m[36m(pid=42744)[0m     @     0x7f5f4cd35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42744)[0m     @     0x7f5f4cd58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42730)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42730)[0m *** SIGSEGV (@0x0) received by PID 42730 (TID 0x7f8878719700) from PID 0; stack trace: ***
[2m[36m(pid=42730)[0m     @     0x7f88782f2390 (unknown)
[2m[36m(pid=42718)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42718)[0m *** SIGSEGV (@0x0) received by PID 42718 (TID 0x7fe3411d9700) from PID 0; stack trace: ***
[2m[36m(pid=42718)[0m     @     0x7fe340db2390 (unknown)
[2m[36m(pid=42747)[0m     @     0x7ececcf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42747)[0m     @     0x7ececcf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42747)[0m     @     0x7ececcf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=42747)[0m     @     0x7ececcf27d91 at::TensorIterator::for_each()
[2m[36m(pid=42747)[0m     @     0x7ececd80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42747)[0m     @     0x7ececd82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42807)[0m     @     0x7f9f37c617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42807)[0m     @     0x7f9f37c648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42807)[0m     @     0x7f9f37c64ad3 at::TensorIterator::for_each()
[2m[36m(pid=42807)[0m     @     0x7f9f37c64d91 at::TensorIterator::for_each()
[2m[36m(pid=42807)[0m     @     0x7f9f38547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42807)[0m     @     0x7f9f3856ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42767)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42767)[0m *** SIGSEGV (@0x0) received by PID 42767 (TID 0x7f16cd3e9700) from PID 0; stack trace: ***
[2m[36m(pid=42767)[0m     @     0x7f16ccfc2390 (unknown)
[2m[36m(pid=42767)[0m     @     0x7ee7ccf4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42767)[0m     @     0x7ee7cc67a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42767)[0m     @     0x7ee7cc67d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42767)[0m     @     0x7ee7cc67dad3 at::TensorIterator::for_each()
[2m[36m(pid=42803)[0m     @     0x7f2c3a84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42803)[0m     @     0x7f2c3a8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42803)[0m     @     0x7f2c3a852ad3 at::TensorIterator::for_each()
[2m[36m(pid=42803)[0m     @     0x7f2c3a852d91 at::TensorIterator::for_each()
[2m[36m(pid=42803)[0m     @     0x7f2c3b135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42803)[0m     @     0x7f2c3b158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42715)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42715)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42715)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42715)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42715)[0m *** SIGSEGV (@0x0) received by PID 42715 (TID 0x7f5929b15700) from PID 0; stack trace: ***
[2m[36m(pid=42715)[0m     @     0x7f59296ee390 (unknown)
[2m[36m(pid=42715)[0m     @     0x7f2a29687f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42715)[0m     @     0x7f2a28db27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42715)[0m     @     0x7f2a28db58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42715)[0m     @     0x7f2a28db5ad3 at::TensorIterator::for_each()
[2m[36m(pid=42697)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42697)[0m *** SIGSEGV (@0x0) received by PID 42697 (TID 0x7fa7e6f43700) from PID 0; stack trace: ***
[2m[36m(pid=42697)[0m     @     0x7fa7e6b1c390 (unknown)
[2m[36m(pid=42697)[0m     @     0x7f78e6aa4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42697)[0m     @     0x7f78e61cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42780)[0m     @     0x7f027b2f7390 (unknown)
[2m[36m(pid=42780)[0m     @     0x7ed37b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42780)[0m     @     0x7ed37a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42726)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=42726)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=42726)[0m *** Aborted at 1604573031 (unix time) try "date -d @1604573031" if you are using GNU date ***
[2m[36m(pid=42726)[0m PC: @                0x0 (unknown)
[2m[36m(pid=42726)[0m *** SIGSEGV (@0x0) received by PID 42726 (TID 0x7f805b3e9700) from PID 0; stack trace: ***
[2m[36m(pid=42726)[0m     @     0x7f805afc2390 (unknown)
[2m[36m(pid=42726)[0m     @     0x7f515af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42816)[0m     @     0x7f47c9ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42816)[0m     @     0x7f47c9ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=42816)[0m     @     0x7f47c9ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=42816)[0m     @     0x7f47ca7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42816)[0m     @     0x7f47ca7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42816)[0m     @     0x7f47c9c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42816)[0m     @     0x7f47c9c8f388 at::native::copy_impl()
[2m[36m(pid=42700)[0m     @     0x7f054fe3a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42700)[0m     @     0x7f054fe3aad3 at::TensorIterator::for_each()
[2m[36m(pid=42700)[0m     @     0x7f054fe3ad91 at::TensorIterator::for_each()
[2m[36m(pid=42700)[0m     @     0x7f055071db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42700)[0m     @     0x7f0550740c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42700)[0m     @     0x7f054fbe2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42700)[0m     @     0x7f054fbe0388 at::native::copy_impl()
[2m[36m(pid=42693)[0m     @     0x7f77daca08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42693)[0m     @     0x7f77daca0ad3 at::TensorIterator::for_each()
[2m[36m(pid=42693)[0m     @     0x7f77daca0d91 at::TensorIterator::for_each()
[2m[36m(pid=42693)[0m     @     0x7f77db583b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42693)[0m     @     0x7f77db5a6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42693)[0m     @     0x7f77daa48a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42693)[0m     @     0x7f77daa46388 at::native::copy_impl()
[2m[36m(pid=42699)[0m     @     0x7f5f797338f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42699)[0m     @     0x7f5f79733ad3 at::TensorIterator::for_each()
[2m[36m(pid=42699)[0m     @     0x7f5f79733d91 at::TensorIterator::for_each()
[2m[36m(pid=42699)[0m     @     0x7f5f7a016b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42699)[0m     @     0x7f5f7a039c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42699)[0m     @     0x7f5f794dba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42699)[0m     @     0x7f5f794d9388 at::native::copy_impl()
[2m[36m(pid=42785)[0m     @     0x7fb123ae45a4 at::native::copy_()
[2m[36m(pid=42785)[0m     @     0x7fb1241cf4f5 at::Tensor::copy_()
[2m[36m(pid=42785)[0m     @     0x7fb1266a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42785)[0m     @     0x7fb1241cf4f5 at::Tensor::copy_()
[2m[36m(pid=42785)[0m     @     0x7fb12a27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42785)[0m     @     0x55a1d4776fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42785)[0m     @     0x55a1d46d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42785)[0m     @     0x55a1d475cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42785)[0m     @     0x55a1d475da20 method_vectorcall
[2m[36m(pid=42785)[0m     @     0x55a1d46d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42785)[0m     @     0x55a1d475cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42785)[0m     @     0x55a1d475d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42785)[0m     @     0x55a1d46d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42785)[0m     @     0x55a1d475cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42785)[0m     @     0x55a1d475d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42785)[0m     @     0x55a1d46d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42785)[0m     @     0x55a1d475cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42785)[0m     @     0x55a1d475d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42785)[0m     @     0x55a1d46d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42785)[0m     @     0x55a1d475cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42785)[0m     @     0x55a1d475d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42785)[0m     @     0x55a1d46d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42771)[0m     @     0x7fbc672e4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42771)[0m     @     0x7fbc672e2388 at::native::copy_impl()
[2m[36m(pid=42771)[0m     @     0x7fbc672e45a4 at::native::copy_()
[2m[36m(pid=42771)[0m     @     0x7fbc679cf4f5 at::Tensor::copy_()
[2m[36m(pid=42771)[0m     @     0x7fbc69ea28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42771)[0m     @     0x7fbc679cf4f5 at::Tensor::copy_()
[2m[36m(pid=42771)[0m     @     0x7fbc6da7a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42771)[0m     @     0x56381550afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42771)[0m     @     0x563815465b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42771)[0m     @     0x5638154f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42771)[0m     @     0x5638154f1a20 method_vectorcall
[2m[36m(pid=42771)[0m     @     0x563815465bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42771)[0m     @     0x5638154f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42771)[0m     @     0x5638154f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42771)[0m     @     0x563815466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42771)[0m     @     0x5638154f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42771)[0m     @     0x5638154f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42771)[0m     @     0x563815466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42771)[0m     @     0x5638154f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42771)[0m     @     0x5638154f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42794)[0m     @     0x7ef78ce784f5 at::Tensor::copy_()
[2m[36m(pid=42794)[0m     @     0x7ef792f2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42794)[0m     @     0x55b8faa11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42794)[0m     @     0x55b8fa96cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42794)[0m     @     0x55b8fa9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42794)[0m     @     0x55b8fa9f8a20 method_vectorcall
[2m[36m(pid=42794)[0m     @     0x55b8fa96cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42794)[0m     @     0x55b8fa9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42794)[0m     @     0x55b8fa9f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42794)[0m     @     0x55b8fa96d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42794)[0m     @     0x55b8fa9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42794)[0m     @     0x55b8fa9f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42794)[0m     @     0x55b8fa96d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42794)[0m     @     0x55b8fa9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42794)[0m     @     0x55b8fa9f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42794)[0m     @     0x55b8fa96d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42794)[0m     @     0x55b8fa9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42794)[0m     @     0x55b8fa9f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42794)[0m     @     0x55b8fa96d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42802)[0m     @     0x7eeac7ae45a4 at::native::copy_()
[2m[36m(pid=42802)[0m     @     0x7eeac81cf4f5 at::Tensor::copy_()
[2m[36m(pid=42802)[0m     @     0x7eeaca6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42802)[0m     @     0x7eeac81cf4f5 at::Tensor::copy_()
[2m[36m(pid=42802)[0m     @     0x7eeace27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42802)[0m     @     0x55e9f2554fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42802)[0m     @     0x55e9f24afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42802)[0m     @     0x55e9f253abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42802)[0m     @     0x55e9f253ba20 method_vectorcall
[2m[36m(pid=42802)[0m     @     0x55e9f24afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42802)[0m     @     0x55e9f253abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42802)[0m     @     0x55e9f253b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42802)[0m     @     0x55e9f24b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42802)[0m     @     0x55e9f253abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42802)[0m     @     0x55e9f253b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42802)[0m     @     0x55e9f24b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42802)[0m     @     0x55e9f253abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42802)[0m     @     0x55e9f253b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42802)[0m     @     0x55e9f24b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42802)[0m     @     0x55e9f253abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42802)[0m     @     0x55e9f253b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42802)[0m     @     0x55e9f24b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42810)[0m     @     0x7f744d7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42810)[0m     @     0x7f744b3124f5 at::Tensor::copy_()
[2m[36m(pid=42810)[0m     @     0x7f74513bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42810)[0m     @     0x560193ad7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42810)[0m     @     0x560193a32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42810)[0m     @     0x560193abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42810)[0m     @     0x560193abea20 method_vectorcall
[2m[36m(pid=42810)[0m     @     0x560193a32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42810)[0m     @     0x560193abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42810)[0m     @     0x560193abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42810)[0m     @     0x560193a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42810)[0m     @     0x560193abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42810)[0m     @     0x560193abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42810)[0m     @     0x560193a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42810)[0m     @     0x560193abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42810)[0m     @     0x560193abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42810)[0m     @     0x560193a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42810)[0m     @     0x560193abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42810)[0m     @     0x560193abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42810)[0m     @     0x560193a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42784)[0m     @     0x7f0b71c245a4 at::native::copy_()
[2m[36m(pid=42784)[0m     @     0x7f0b7230f4f5 at::Tensor::copy_()
[2m[36m(pid=42784)[0m     @     0x7f0b747e28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42784)[0m     @     0x7f0b7230f4f5 at::Tensor::copy_()
[2m[36m(pid=42784)[0m     @     0x7f0b783ba79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42784)[0m     @     0x55a196e08fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42784)[0m     @     0x55a196d63b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42784)[0m     @     0x55a196deebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42784)[0m     @     0x55a196defa20 method_vectorcall
[2m[36m(pid=42784)[0m     @     0x55a196d63bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42784)[0m     @     0x55a196deebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42784)[0m     @     0x55a196def643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42784)[0m     @     0x55a196d64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42784)[0m     @     0x55a196deebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42784)[0m     @     0x55a196def643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42784)[0m     @     0x55a196d64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42784)[0m     @     0x55a196deebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42784)[0m     @     0x55a196def643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42784)[0m     @     0x55a196d64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42784)[0m     @     0x55a196deebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42784)[0m     @     0x55a196def643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42784)[0m     @     0x55a196d64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42788)[0m     @     0x7f51ceaf55a4 at::native::copy_()
[2m[36m(pid=42788)[0m     @     0x7f51cf1e04f5 at::Tensor::copy_()
[2m[36m(pid=42788)[0m     @     0x7f51d16b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42788)[0m     @     0x7f51cf1e04f5 at::Tensor::copy_()
[2m[36m(pid=42788)[0m     @     0x7f51d528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42788)[0m     @     0x561218f70fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42788)[0m     @     0x561218ecbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42788)[0m     @     0x561218f56baf _PyEval_EvalCodeWithName
[2m[36m(pid=42788)[0m     @     0x561218f57a20 method_vectorcall
[2m[36m(pid=42788)[0m     @     0x561218ecbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42788)[0m     @     0x561218f56baf _PyEval_EvalCodeWithName
[2m[36m(pid=42788)[0m     @     0x561218f57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42788)[0m     @     0x561218ecc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42788)[0m     @     0x561218f56baf _PyEval_EvalCodeWithName
[2m[36m(pid=42788)[0m     @     0x561218f57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42788)[0m     @     0x561218ecc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42788)[0m     @     0x561218f56baf _PyEval_EvalCodeWithName
[2m[36m(pid=42788)[0m     @     0x561218f57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42788)[0m     @     0x561218ecc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42788)[0m     @     0x561218f56baf _PyEval_EvalCodeWithName
[2m[36m(pid=42788)[0m     @     0x561218f57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42788)[0m     @     0x561218ecc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x7fa03a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42793)[0m     @     0x7fa039a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42793)[0m     @     0x7fa039a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42793)[0m     @     0x7fa039a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=42793)[0m     @     0x7fa039a79d91 at::TensorIterator::for_each()
[2m[36m(pid=42793)[0m     @     0x7fa03a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42776)[0m     @     0x7f08ff7da8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42776)[0m     @     0x7f08ff7daad3 at::TensorIterator::for_each()
[2m[36m(pid=42776)[0m     @     0x7f08ff7dad91 at::TensorIterator::for_each()
[2m[36m(pid=42776)[0m     @     0x7f09000bdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42776)[0m     @     0x7f09000e0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42776)[0m     @     0x7f08ff582a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42776)[0m     @     0x7f08ff580388 at::native::copy_impl()
[2m[36m(pid=42696)[0m     @     0x7ef1bb74aad3 at::TensorIterator::for_each()
[2m[36m(pid=42696)[0m     @     0x7ef1bb74ad91 at::TensorIterator::for_each()
[2m[36m(pid=42696)[0m     @     0x7ef1bc02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42696)[0m     @     0x7ef1bc050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42696)[0m     @     0x7ef1bb4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42696)[0m     @     0x7ef1bb4f0388 at::native::copy_impl()
[2m[36m(pid=42696)[0m     @     0x7ef1bb4f25a4 at::native::copy_()
[2m[36m(pid=42777)[0m     @     0x7ed0e45d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42777)[0m     @     0x7ed0e45d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42777)[0m     @     0x7ed0e4eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42777)[0m     @     0x7ed0e4ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42777)[0m     @     0x7ed0e437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42777)[0m     @     0x7ed0e4378388 at::native::copy_impl()
[2m[36m(pid=42777)[0m     @     0x7ed0e437a5a4 at::native::copy_()
[2m[36m(pid=42770)[0m     @     0x7f5868c11d91 at::TensorIterator::for_each()
[2m[36m(pid=42770)[0m     @     0x7f58694f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42770)[0m     @     0x7f5869517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42770)[0m     @     0x7f58689b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42770)[0m     @     0x7f58689b7388 at::native::copy_impl()
[2m[36m(pid=42770)[0m     @     0x7f58689b95a4 at::native::copy_()
[2m[36m(pid=42691)[0m     @     0x7f5851138d91 at::TensorIterator::for_each()
[2m[36m(pid=42691)[0m     @     0x7f5851a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42691)[0m     @     0x7f5851a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42691)[0m     @     0x7f5850ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42691)[0m     @     0x7f5850ede388 at::native::copy_impl()
[2m[36m(pid=42691)[0m     @     0x7f5850ee05a4 at::native::copy_()
[2m[36m(pid=42713)[0m     @     0x7f999651ed91 at::TensorIterator::for_each()
[2m[36m(pid=42713)[0m     @     0x7f9996e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42713)[0m     @     0x7f9996e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42713)[0m     @     0x7f99962c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42713)[0m     @     0x7f99962c4388 at::native::copy_impl()
[2m[36m(pid=42779)[0m     @     0x7f12497ce4f5 at::Tensor::copy_()
[2m[36m(pid=42779)[0m     @     0x7f124f87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42779)[0m     @     0x5632ca4c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42779)[0m     @     0x5632ca41fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42779)[0m     @     0x5632ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42779)[0m     @     0x5632ca4aba20 method_vectorcall
[2m[36m(pid=42779)[0m     @     0x5632ca41fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42779)[0m     @     0x5632ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42779)[0m     @     0x5632ca4ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42779)[0m     @     0x5632ca420689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42779)[0m     @     0x5632ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42779)[0m     @     0x5632ca4ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42779)[0m     @     0x5632ca420689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42779)[0m     @     0x5632ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42779)[0m     @     0x5632ca4ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42779)[0m     @     0x5632ca420689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42779)[0m     @     0x5632ca4aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=42779)[0m     @     0x5632ca4ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42779)[0m     @     0x5632ca420689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42746)[0m     @     0x7f58f19e54f5 at::Tensor::copy_()
[2m[36m(pid=42746)[0m     @     0x7f58f3eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42746)[0m     @     0x7f58f19e54f5 at::Tensor::copy_()
[2m[36m(pid=42746)[0m     @     0x7f58f7a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42746)[0m     @     0x562283ec3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42746)[0m     @     0x562283e1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42746)[0m     @     0x562283ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42746)[0m     @     0x562283eaaa20 method_vectorcall
[2m[36m(pid=42746)[0m     @     0x562283e1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42746)[0m     @     0x562283ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42746)[0m     @     0x562283eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42746)[0m     @     0x562283e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42746)[0m     @     0x562283ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42746)[0m     @     0x562283eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42746)[0m     @     0x562283e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42746)[0m     @     0x562283ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42746)[0m     @     0x562283eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42746)[0m     @     0x562283e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42746)[0m     @     0x562283ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42746)[0m     @     0x562283eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42746)[0m     @     0x562283e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42731)[0m     @     0x7f578e398d91 at::TensorIterator::for_each()
[2m[36m(pid=42731)[0m     @     0x7f578ec7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42731)[0m     @     0x7f578ec9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42731)[0m     @     0x7f578e140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42731)[0m     @     0x7f578e13e388 at::native::copy_impl()
[2m[36m(pid=42772)[0m     @     0x7f09c637c4f5 at::Tensor::copy_()
[2m[36m(pid=42772)[0m     @     0x7f09c884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42772)[0m     @     0x7f09c637c4f5 at::Tensor::copy_()
[2m[36m(pid=42772)[0m     @     0x7f09cc42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42772)[0m     @     0x55a60c269fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42772)[0m     @     0x55a60c1c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42772)[0m     @     0x55a60c24fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42772)[0m     @     0x55a60c250a20 method_vectorcall
[2m[36m(pid=42772)[0m     @     0x55a60c1c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42772)[0m     @     0x55a60c24fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42772)[0m     @     0x55a60c250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42772)[0m     @     0x55a60c1c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42772)[0m     @     0x55a60c24fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42772)[0m     @     0x55a60c250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42772)[0m     @     0x55a60c1c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42772)[0m     @     0x55a60c24fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42772)[0m     @     0x55a60c250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42772)[0m     @     0x55a60c1c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42772)[0m     @     0x55a60c24fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42772)[0m     @     0x55a60c250643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42772)[0m     @     0x55a60c1c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x7f790d9e7d91 at::TensorIterator::for_each()
[2m[36m(pid=42711)[0m     @     0x7f790e2cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42711)[0m     @     0x7f790e2edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42711)[0m     @     0x7f790d78fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42711)[0m     @     0x7f790d78d388 at::native::copy_impl()
[2m[36m(pid=42812)[0m     @     0x7efe8fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=42812)[0m     @     0x7efe95c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42812)[0m     @     0x55f98c63dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42812)[0m     @     0x55f98c598b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42812)[0m     @     0x55f98c623baf _PyEval_EvalCodeWithName
[2m[36m(pid=42812)[0m     @     0x55f98c624a20 method_vectorcall
[2m[36m(pid=42812)[0m     @     0x55f98c598bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42812)[0m     @     0x55f98c623baf _PyEval_EvalCodeWithName
[2m[36m(pid=42812)[0m     @     0x55f98c624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42812)[0m     @     0x55f98c599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42812)[0m     @     0x55f98c623baf _PyEval_EvalCodeWithName
[2m[36m(pid=42812)[0m     @     0x55f98c624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42812)[0m     @     0x55f98c599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42812)[0m     @     0x55f98c623baf _PyEval_EvalCodeWithName
[2m[36m(pid=42812)[0m     @     0x55f98c624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42812)[0m     @     0x55f98c599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42812)[0m     @     0x55f98c623baf _PyEval_EvalCodeWithName
[2m[36m(pid=42812)[0m     @     0x55f98c624643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42812)[0m     @     0x55f98c599689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42800)[0m     @     0x7f9b40a654f5 at::Tensor::copy_()
[2m[36m(pid=42800)[0m     @     0x7f9b46b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42800)[0m     @     0x563c79df6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42800)[0m     @     0x563c79d51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42800)[0m     @     0x563c79ddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42800)[0m     @     0x563c79ddda20 method_vectorcall
[2m[36m(pid=42800)[0m     @     0x563c79d51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42800)[0m     @     0x563c79ddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42800)[0m     @     0x563c79ddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42800)[0m     @     0x563c79d52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42800)[0m     @     0x563c79ddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42800)[0m     @     0x563c79ddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42800)[0m     @     0x563c79d52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42800)[0m     @     0x563c79ddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42800)[0m     @     0x563c79ddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42800)[0m     @     0x563c79d52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42800)[0m     @     0x563c79ddcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42800)[0m     @     0x563c79ddd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42800)[0m     @     0x563c79d52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42728)[0m     @     0x7efb1fdefb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42728)[0m     @     0x7efb1fe12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42728)[0m     @     0x7efb1f2b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42728)[0m     @     0x7efb1f2b2388 at::native::copy_impl()
[2m[36m(pid=42728)[0m     @     0x7efb1f2b45a4 at::native::copy_()
[2m[36m(pid=42705)[0m     @     0x7ee16834d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42705)[0m     @     0x7ee165e7a4f5 at::Tensor::copy_()
[2m[36m(pid=42705)[0m     @     0x7ee16bf2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42705)[0m     @     0x5570baab9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42705)[0m     @     0x5570baa14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42705)[0m     @     0x5570baa9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42705)[0m     @     0x5570baaa0a20 method_vectorcall
[2m[36m(pid=42705)[0m     @     0x5570baa14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42705)[0m     @     0x5570baa9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42705)[0m     @     0x5570baaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42705)[0m     @     0x5570baa15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42705)[0m     @     0x5570baa9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42705)[0m     @     0x5570baaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42705)[0m     @     0x5570baa15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42705)[0m     @     0x5570baa9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42705)[0m     @     0x5570baaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42705)[0m     @     0x5570baa15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42705)[0m     @     0x5570baa9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42705)[0m     @     0x5570baaa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42705)[0m     @     0x5570baa15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42716)[0m     @     0x7f9f6dc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42716)[0m     @     0x7f9f6dc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42716)[0m     @     0x7f9f6d0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42716)[0m     @     0x7f9f6d0e1388 at::native::copy_impl()
[2m[36m(pid=42716)[0m     @     0x7f9f6d0e35a4 at::native::copy_()
[2m[36m(pid=42787)[0m     @     0x55dbe488db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42787)[0m     @     0x55dbe4918baf _PyEval_EvalCodeWithName
[2m[36m(pid=42787)[0m     @     0x55dbe4919a20 method_vectorcall
[2m[36m(pid=42787)[0m     @     0x55dbe488dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42787)[0m     @     0x55dbe4918baf _PyEval_EvalCodeWithName
[2m[36m(pid=42787)[0m     @     0x55dbe4919643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42787)[0m     @     0x55dbe488e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42787)[0m     @     0x55dbe4918baf _PyEval_EvalCodeWithName
[2m[36m(pid=42787)[0m     @     0x55dbe4919643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42787)[0m     @     0x55dbe488e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42787)[0m     @     0x55dbe4918baf _PyEval_EvalCodeWithName
[2m[36m(pid=42787)[0m     @     0x55dbe4919643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42787)[0m     @     0x55dbe488e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42787)[0m     @     0x55dbe4918baf _PyEval_EvalCodeWithName
[2m[36m(pid=42787)[0m     @     0x55dbe4919643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42787)[0m     @     0x55dbe488e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42781)[0m     @     0x7f74caf0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42781)[0m     @     0x7f74c8a384f5 at::Tensor::copy_()
[2m[36m(pid=42781)[0m     @     0x7f74ceae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42781)[0m     @     0x556ec4d2dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42781)[0m     @     0x556ec4c88b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42781)[0m     @     0x556ec4d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=42781)[0m     @     0x556ec4d14a20 method_vectorcall
[2m[36m(pid=42781)[0m     @     0x556ec4c88bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42781)[0m     @     0x556ec4d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=42781)[0m     @     0x556ec4d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42781)[0m     @     0x556ec4c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42781)[0m     @     0x556ec4d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=42781)[0m     @     0x556ec4d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42781)[0m     @     0x556ec4c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42781)[0m     @     0x556ec4d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=42781)[0m     @     0x556ec4d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42781)[0m     @     0x556ec4c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42781)[0m     @     0x556ec4d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=42781)[0m     @     0x556ec4d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42781)[0m     @     0x556ec4c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42762)[0m     @     0x7fa81b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=42762)[0m     @     0x7fa821a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42762)[0m     @     0x5612e7acdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42762)[0m     @     0x5612e7a28b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42762)[0m     @     0x5612e7ab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42762)[0m     @     0x5612e7ab4a20 method_vectorcall
[2m[36m(pid=42762)[0m     @     0x5612e7a28bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42762)[0m     @     0x5612e7ab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42762)[0m     @     0x5612e7ab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42762)[0m     @     0x5612e7a29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42762)[0m     @     0x5612e7ab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42762)[0m     @     0x5612e7ab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42762)[0m     @     0x5612e7a29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42762)[0m     @     0x5612e7ab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42762)[0m     @     0x5612e7ab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42762)[0m     @     0x5612e7a29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42762)[0m     @     0x5612e7ab3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42762)[0m     @     0x5612e7ab4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42762)[0m     @     0x5612e7a29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x7f4c334f1d91 at::TensorIterator::for_each()
[2m[36m(pid=42811)[0m     @     0x7f4c33dd4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42811)[0m     @     0x7f4c33df7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42811)[0m     @     0x7f4c33299a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42811)[0m     @     0x7f4c33297388 at::native::copy_impl()
[2m[36m(pid=42778)[0m     @     0x7f03740e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42778)[0m     @     0x7f0371c0e4f5 at::Tensor::copy_()
[2m[36m(pid=42778)[0m     @     0x7f0377cb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42778)[0m     @     0x56110e18bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42778)[0m     @     0x56110e0e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42778)[0m     @     0x56110e171baf _PyEval_EvalCodeWithName
[2m[36m(pid=42778)[0m     @     0x56110e172a20 method_vectorcall
[2m[36m(pid=42778)[0m     @     0x56110e0e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42778)[0m     @     0x56110e171baf _PyEval_EvalCodeWithName
[2m[36m(pid=42778)[0m     @     0x56110e172643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42778)[0m     @     0x56110e0e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42778)[0m     @     0x56110e171baf _PyEval_EvalCodeWithName
[2m[36m(pid=42778)[0m     @     0x56110e172643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42778)[0m     @     0x56110e0e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42778)[0m     @     0x56110e171baf _PyEval_EvalCodeWithName
[2m[36m(pid=42778)[0m     @     0x56110e172643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42778)[0m     @     0x56110e0e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42778)[0m     @     0x56110e171baf _PyEval_EvalCodeWithName
[2m[36m(pid=42778)[0m     @     0x56110e172643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42778)[0m     @     0x56110e0e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42790)[0m     @     0x7f15092264f5 at::Tensor::copy_()
[2m[36m(pid=42790)[0m     @     0x7f150f2d179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42790)[0m     @     0x55ebd3fd2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42790)[0m     @     0x55ebd3f2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42790)[0m     @     0x55ebd3fb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42790)[0m     @     0x55ebd3fb9a20 method_vectorcall
[2m[36m(pid=42790)[0m     @     0x55ebd3f2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42790)[0m     @     0x55ebd3fb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42790)[0m     @     0x55ebd3fb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42790)[0m     @     0x55ebd3f2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42790)[0m     @     0x55ebd3fb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42790)[0m     @     0x55ebd3fb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42790)[0m     @     0x55ebd3f2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42790)[0m     @     0x55ebd3fb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42790)[0m     @     0x55ebd3fb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42790)[0m     @     0x55ebd3f2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42790)[0m     @     0x55ebd3fb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42790)[0m     @     0x55ebd3fb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42790)[0m     @     0x55ebd3f2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42819)[0m     @     0x7ee17170fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42819)[0m     @     0x7ee17170d388 at::native::copy_impl()
[2m[36m(pid=42819)[0m     @     0x7ee17170f5a4 at::native::copy_()
[2m[36m(pid=42819)[0m     @     0x7ee171dfa4f5 at::Tensor::copy_()
[2m[36m(pid=42706)[0m     @     0x7f3c24a654f5 at::Tensor::copy_()
[2m[36m(pid=42706)[0m     @     0x7f3c2ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42706)[0m     @     0x557643fcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42706)[0m     @     0x557643f25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42706)[0m     @     0x557643fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42706)[0m     @     0x557643fb1a20 method_vectorcall
[2m[36m(pid=42706)[0m     @     0x557643f25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42706)[0m     @     0x557643fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42706)[0m     @     0x557643fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42706)[0m     @     0x557643f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42706)[0m     @     0x557643fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42706)[0m     @     0x557643fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42706)[0m     @     0x557643f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42706)[0m     @     0x557643fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42706)[0m     @     0x557643fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42706)[0m     @     0x557643f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42706)[0m     @     0x557643fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42706)[0m     @     0x557643fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42706)[0m     @     0x557643f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x7f580f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=42704)[0m     @     0x7f580f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42704)[0m     @     0x7f580f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42704)[0m     @     0x7f580edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42704)[0m     @     0x7f580edb2388 at::native::copy_impl()
[2m[36m(pid=42704)[0m     @     0x7f580edb45a4 at::native::copy_()
[2m[36m(pid=42708)[0m     @     0x7f2ba0e22d91 at::TensorIterator::for_each()
[2m[36m(pid=42708)[0m     @     0x7f2ba1705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42708)[0m     @     0x7f2ba1728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42708)[0m     @     0x7f2ba0bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42708)[0m     @     0x7f2ba0bc8388 at::native::copy_impl()
[2m[36m(pid=42708)[0m     @     0x7f2ba0bca5a4 at::native::copy_()
[2m[36m(pid=42763)[0m     @     0x7f82568b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42763)[0m     @     0x7f82543e64f5 at::Tensor::copy_()
[2m[36m(pid=42763)[0m     @     0x7f825a49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42763)[0m     @     0x556015b71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42763)[0m     @     0x556015accb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42763)[0m     @     0x556015b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=42763)[0m     @     0x556015b58a20 method_vectorcall
[2m[36m(pid=42763)[0m     @     0x556015accbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42763)[0m     @     0x556015b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=42763)[0m     @     0x556015b58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42763)[0m     @     0x556015acd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42763)[0m     @     0x556015b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=42763)[0m     @     0x556015b58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42763)[0m     @     0x556015acd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42763)[0m     @     0x556015b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=42763)[0m     @     0x556015b58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42763)[0m     @     0x556015acd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42763)[0m     @     0x556015b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=42763)[0m     @     0x556015b58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42763)[0m     @     0x556015acd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x7f3404922b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42758)[0m     @     0x7f3404945c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42758)[0m     @     0x7f3403de7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42758)[0m     @     0x7f3403de5388 at::native::copy_impl()
[2m[36m(pid=42764)[0m     @     0x7f72ace784f5 at::Tensor::copy_()
[2m[36m(pid=42764)[0m     @     0x7f72b2f2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42764)[0m     @     0x557dffae1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42764)[0m     @     0x557dffa3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42764)[0m     @     0x557dffac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42764)[0m     @     0x557dffac8a20 method_vectorcall
[2m[36m(pid=42764)[0m     @     0x557dffa3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42764)[0m     @     0x557dffac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42764)[0m     @     0x557dffac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42764)[0m     @     0x557dffa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42764)[0m     @     0x557dffac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42764)[0m     @     0x557dffac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42764)[0m     @     0x557dffa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42764)[0m     @     0x557dffac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42764)[0m     @     0x557dffac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42764)[0m     @     0x557dffa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42764)[0m     @     0x557dffac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42764)[0m     @     0x557dffac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42764)[0m     @     0x557dffa3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42692)[0m     @     0x7f9f92b98d91 at::TensorIterator::for_each()
[2m[36m(pid=42692)[0m     @     0x7f9f9347bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42692)[0m     @     0x7f9f9349ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42692)[0m     @     0x7f9f92940a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42692)[0m     @     0x7f9f9293e388 at::native::copy_impl()
[2m[36m(pid=42748)[0m     @     0x7f224e0acd91 at::TensorIterator::for_each()
[2m[36m(pid=42748)[0m     @     0x7f224e98fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42748)[0m     @     0x7f224e9b2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42748)[0m     @     0x7f224de54a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42748)[0m     @     0x7f224de52388 at::native::copy_impl()
[2m[36m(pid=42709)[0m     @     0x7f676975ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42709)[0m     @     0x7f676977dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42709)[0m     @     0x7f6768c1fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42709)[0m     @     0x7f6768c1d388 at::native::copy_impl()
[2m[36m(pid=42709)[0m     @     0x7f6768c1f5a4 at::native::copy_()
[2m[36m(pid=42702)[0m     @     0x7edfd42e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42702)[0m     @     0x7edfd42e6388 at::native::copy_impl()
[2m[36m(pid=42702)[0m     @     0x7edfd42e85a4 at::native::copy_()
[2m[36m(pid=42701)[0m     @     0x7eefd7b11d91 at::TensorIterator::for_each()
[2m[36m(pid=42701)[0m     @     0x7eefd83f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42701)[0m     @     0x7eefd8417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42701)[0m     @     0x7eefd78b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42701)[0m     @     0x7eefd78b7388 at::native::copy_impl()
[2m[36m(pid=42721)[0m     @     0x7f10f1c27d91 at::TensorIterator::for_each()
[2m[36m(pid=42721)[0m     @     0x7f10f250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42721)[0m     @     0x7f10f252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42721)[0m     @     0x7f10f19cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42721)[0m     @     0x7f10f19cd388 at::native::copy_impl()
[2m[36m(pid=42721)[0m     @     0x7f10f19cf5a4 at::native::copy_()
[2m[36m(pid=42783)[0m     @     0x7eee47b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=42783)[0m     @     0x7eee47b11d91 at::TensorIterator::for_each()
[2m[36m(pid=42783)[0m     @     0x7eee483f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42753)[0m     @     0x7f74ae14fd91 at::TensorIterator::for_each()
[2m[36m(pid=42753)[0m     @     0x7f74aea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42753)[0m     @     0x7f74aea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42753)[0m     @     0x7f74adef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42753)[0m     @     0x7f74adef5388 at::native::copy_impl()
[2m[36m(pid=42753)[0m     @     0x7f74adef75a4 at::native::copy_()
[2m[36m(pid=42751)[0m     @     0x7f3d4bcf1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42751)[0m     @     0x7f3d4bd14c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42751)[0m     @     0x7f3d4b1b6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42751)[0m     @     0x7f3d4b1b4388 at::native::copy_impl()
[2m[36m(pid=42751)[0m     @     0x7f3d4b1b65a4 at::native::copy_()
[2m[36m(pid=42751)[0m     @     0x7f3d4b8a14f5 at::Tensor::copy_()
[2m[36m(pid=42751)[0m     @     0x7f3d4dd748de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42773)[0m     @     0x7fa31751e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42773)[0m     @     0x7fa31751ead3 at::TensorIterator::for_each()
[2m[36m(pid=42773)[0m     @     0x7fa31751ed91 at::TensorIterator::for_each()
[2m[36m(pid=42773)[0m     @     0x7fa317e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42773)[0m     @     0x7fa317e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42760)[0m     @     0x7f1832101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42760)[0m     @     0x7f18315a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42760)[0m     @     0x7f18315a1388 at::native::copy_impl()
[2m[36m(pid=42760)[0m     @     0x7f18315a35a4 at::native::copy_()
[2m[36m(pid=42760)[0m     @     0x7f1831c8e4f5 at::Tensor::copy_()
[2m[36m(pid=42698)[0m     @     0x7f5cdaf24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42698)[0m     @     0x7f5cdaf47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42698)[0m     @     0x7f5cda3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42698)[0m     @     0x7f5cda3e7388 at::native::copy_impl()
[2m[36m(pid=42698)[0m     @     0x7f5cda3e95a4 at::native::copy_()
[2m[36m(pid=42698)[0m     @     0x7f5cdaad44f5 at::Tensor::copy_()
[2m[36m(pid=42756)[0m     @     0x7f060de38d91 at::TensorIterator::for_each()
[2m[36m(pid=42756)[0m     @     0x7f060e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42756)[0m     @     0x7f060e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42756)[0m     @     0x7f060dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42756)[0m     @     0x7f060dbde388 at::native::copy_impl()
[2m[36m(pid=42756)[0m     @     0x7f060dbe05a4 at::native::copy_()
[2m[36m(pid=42712)[0m     @     0x7f2d2fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42712)[0m     @     0x7f2d2fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42712)[0m     @     0x7f2d2f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42712)[0m     @     0x7f2d2f2df388 at::native::copy_impl()
[2m[36m(pid=42712)[0m     @     0x7f2d2f2e15a4 at::native::copy_()
[2m[36m(pid=42712)[0m     @     0x7f2d2f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=42694)[0m     @     0x7fa294bb9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42694)[0m     @     0x7fa29405ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42694)[0m     @     0x7fa294059388 at::native::copy_impl()
[2m[36m(pid=42694)[0m     @     0x7fa29405b5a4 at::native::copy_()
[2m[36m(pid=42694)[0m     @     0x7fa2947464f5 at::Tensor::copy_()
[2m[36m(pid=42710)[0m     @     0x7f9390c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42710)[0m     @     0x7f9390ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42710)[0m     @     0x7f939014aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42710)[0m     @     0x7f9390148388 at::native::copy_impl()
[2m[36m(pid=42710)[0m     @     0x7f939014a5a4 at::native::copy_()
[2m[36m(pid=42710)[0m     @     0x7f93908354f5 at::Tensor::copy_()
[2m[36m(pid=42714)[0m     @     0x7ee3c2a88a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42714)[0m     @     0x7ee3c2a86388 at::native::copy_impl()
[2m[36m(pid=42714)[0m     @     0x7ee3c2a885a4 at::native::copy_()
[2m[36m(pid=42714)[0m     @     0x7ee3c31734f5 at::Tensor::copy_()
[2m[36m(pid=42714)[0m     @     0x7ee3c56468de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42754)[0m     @     0x7ef239bb1388 at::native::copy_impl()
[2m[36m(pid=42754)[0m     @     0x7ef239bb35a4 at::native::copy_()
[2m[36m(pid=42754)[0m     @     0x7ef23a29e4f5 at::Tensor::copy_()
[2m[36m(pid=42754)[0m     @     0x7ef23c7718de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42754)[0m     @     0x7ef23a29e4f5 at::Tensor::copy_()
[2m[36m(pid=42695)[0m     @     0x7f1926c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42695)[0m     @     0x7f19260eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42695)[0m     @     0x7f19260e9388 at::native::copy_impl()
[2m[36m(pid=42695)[0m     @     0x7f19260eb5a4 at::native::copy_()
[2m[36m(pid=42695)[0m     @     0x7f19267d64f5 at::Tensor::copy_()
[2m[36m(pid=42744)[0m     @     0x7f5f4c1faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42744)[0m     @     0x7f5f4c1f8388 at::native::copy_impl()
[2m[36m(pid=42744)[0m     @     0x7f5f4c1fa5a4 at::native::copy_()
[2m[36m(pid=42744)[0m     @     0x7f5f4c8e54f5 at::Tensor::copy_()
[2m[36m(pid=42730)[0m     @     0x7f5978263f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42730)[0m     @     0x7f597798e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42718)[0m     @     0x7fb440d24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=42718)[0m     @     0x7fb44044f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42747)[0m     @     0x7ececcccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42747)[0m     @     0x7ececcccd388 at::native::copy_impl()
[2m[36m(pid=42747)[0m     @     0x7ececcccf5a4 at::native::copy_()
[2m[36m(pid=42747)[0m     @     0x7ececd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=42807)[0m     @     0x7f9f37a0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42807)[0m     @     0x7f9f37a0a388 at::native::copy_impl()
[2m[36m(pid=42807)[0m     @     0x7f9f37a0c5a4 at::native::copy_()
[2m[36m(pid=42807)[0m     @     0x7f9f380f74f5 at::Tensor::copy_()
[2m[36m(pid=42767)[0m     @     0x7ee7cc67dd91 at::TensorIterator::for_each()
[2m[36m(pid=42767)[0m     @     0x7ee7ccf60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42767)[0m     @     0x7ee7ccf83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42767)[0m     @     0x7ee7cc425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42767)[0m     @     0x7ee7cc423388 at::native::copy_impl()
[2m[36m(pid=42803)[0m     @     0x7f2c3a5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42803)[0m     @     0x7f2c3a5f8388 at::native::copy_impl()
[2m[36m(pid=42803)[0m     @     0x7f2c3a5fa5a4 at::native::copy_()
[2m[36m(pid=42803)[0m     @     0x7f2c3ace54f5 at::Tensor::copy_()
[2m[36m(pid=42715)[0m     @     0x7f2a28db5d91 at::TensorIterator::for_each()
[2m[36m(pid=42715)[0m     @     0x7f2a29698b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42715)[0m     @     0x7f2a296bbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42715)[0m     @     0x7f2a28b5da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42715)[0m     @     0x7f2a28b5b388 at::native::copy_impl()
[2m[36m(pid=42697)[0m     @     0x7f78e61d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42780)[0m     @     0x7ed37a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42780)[0m     @     0x7ed37a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=42726)[0m     @     0x7f515a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=42816)[0m     @     0x7f47c9c915a4 at::native::copy_()
[2m[36m(pid=42816)[0m     @     0x7f47ca37c4f5 at::Tensor::copy_()
[2m[36m(pid=42816)[0m     @     0x7f47cc84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42700)[0m     @     0x7f054fbe25a4 at::native::copy_()
[2m[36m(pid=42700)[0m     @     0x7f05502cd4f5 at::Tensor::copy_()
[2m[36m(pid=42700)[0m     @     0x7f05527a08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42700)[0m     @     0x7f05502cd4f5 at::Tensor::copy_()
[2m[36m(pid=42693)[0m     @     0x7f77daa485a4 at::native::copy_()
[2m[36m(pid=42693)[0m     @     0x7f77db1334f5 at::Tensor::copy_()
[2m[36m(pid=42693)[0m     @     0x7f77dd6068de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42699)[0m     @     0x7f5f794db5a4 at::native::copy_()
[2m[36m(pid=42699)[0m     @     0x7f5f79bc64f5 at::Tensor::copy_()
[2m[36m(pid=42699)[0m     @     0x7f5f7c0998de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42699)[0m     @     0x7f5f79bc64f5 at::Tensor::copy_()
[2m[36m(pid=42699)[0m     @     0x7f5f7fc7179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42699)[0m     @     0x55e81a0acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42699)[0m     @     0x55e81a007b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42699)[0m     @     0x55e81a092baf _PyEval_EvalCodeWithName
[2m[36m(pid=42699)[0m     @     0x55e81a093a20 method_vectorcall
[2m[36m(pid=42699)[0m     @     0x55e81a007bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42699)[0m     @     0x55e81a092baf _PyEval_EvalCodeWithName
[2m[36m(pid=42699)[0m     @     0x55e81a093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42699)[0m     @     0x55e81a008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42771)[0m     @     0x563815466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42771)[0m     @     0x5638154f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=42771)[0m     @     0x5638154f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42771)[0m     @     0x563815466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x7fa03a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42793)[0m     @     0x7fa039821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42793)[0m     @     0x7fa03981f388 at::native::copy_impl()
[2m[36m(pid=42793)[0m     @     0x7fa0398215a4 at::native::copy_()
[2m[36m(pid=42776)[0m     @     0x7f08ff5825a4 at::native::copy_()
[2m[36m(pid=42776)[0m     @     0x7f08ffc6d4f5 at::Tensor::copy_()
[2m[36m(pid=42776)[0m     @     0x7f09021408de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42776)[0m     @     0x7f08ffc6d4f5 at::Tensor::copy_()
[2m[36m(pid=42696)[0m     @     0x7ef1bbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=42696)[0m     @     0x7ef1be0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42696)[0m     @     0x7ef1bbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=42696)[0m     @     0x7ef1c1c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42696)[0m     @     0x560aef712fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42696)[0m     @     0x560aef66db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42696)[0m     @     0x560aef6f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42696)[0m     @     0x560aef6f9a20 method_vectorcall
[2m[36m(pid=42696)[0m     @     0x560aef66dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42696)[0m     @     0x560aef6f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42696)[0m     @     0x560aef6f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42696)[0m     @     0x560aef66e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42696)[0m     @     0x560aef6f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42696)[0m     @     0x560aef6f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42696)[0m     @     0x560aef66e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42696)[0m     @     0x560aef6f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42696)[0m     @     0x560aef6f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42696)[0m     @     0x560aef66e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42696)[0m     @     0x560aef6f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42696)[0m     @     0x560aef6f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42696)[0m     @     0x560aef66e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42777)[0m     @     0x7ed0e4a654f5 at::Tensor::copy_()
[2m[36m(pid=42777)[0m     @     0x7ed0e6f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42777)[0m     @     0x7ed0e4a654f5 at::Tensor::copy_()
[2m[36m(pid=42777)[0m     @     0x7ed0eab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42777)[0m     @     0x55ffc8e9cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42777)[0m     @     0x55ffc8df7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42777)[0m     @     0x55ffc8e82baf _PyEval_EvalCodeWithName
[2m[36m(pid=42777)[0m     @     0x55ffc8e83a20 method_vectorcall
[2m[36m(pid=42777)[0m     @     0x55ffc8df7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42777)[0m     @     0x55ffc8e82baf _PyEval_EvalCodeWithName
[2m[36m(pid=42777)[0m     @     0x55ffc8e83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42777)[0m     @     0x55ffc8df8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42777)[0m     @     0x55ffc8e82baf _PyEval_EvalCodeWithName
[2m[36m(pid=42777)[0m     @     0x55ffc8e83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42777)[0m     @     0x55ffc8df8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42777)[0m     @     0x55ffc8e82baf _PyEval_EvalCodeWithName
[2m[36m(pid=42777)[0m     @     0x55ffc8e83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42777)[0m     @     0x55ffc8df8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42777)[0m     @     0x55ffc8e82baf _PyEval_EvalCodeWithName
[2m[36m(pid=42777)[0m     @     0x55ffc8e83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42777)[0m     @     0x55ffc8df8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42770)[0m     @     0x7f58690a44f5 at::Tensor::copy_()
[2m[36m(pid=42770)[0m     @     0x7f586b5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42770)[0m     @     0x7f58690a44f5 at::Tensor::copy_()
[2m[36m(pid=42770)[0m     @     0x7f586f14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42770)[0m     @     0x557a85d0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42770)[0m     @     0x557a85c66b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42770)[0m     @     0x557a85cf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42770)[0m     @     0x557a85cf2a20 method_vectorcall
[2m[36m(pid=42770)[0m     @     0x557a85c66bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42770)[0m     @     0x557a85cf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42770)[0m     @     0x557a85cf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42770)[0m     @     0x557a85c67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42770)[0m     @     0x557a85cf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42770)[0m     @     0x557a85cf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42770)[0m     @     0x557a85c67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42770)[0m     @     0x557a85cf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42770)[0m     @     0x557a85cf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42770)[0m     @     0x557a85c67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42770)[0m     @     0x557a85cf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=42770)[0m     @     0x557a85cf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42770)[0m     @     0x557a85c67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42691)[0m     @     0x7f58515cb4f5 at::Tensor::copy_()
[2m[36m(pid=42691)[0m     @     0x7f5853a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42691)[0m     @     0x7f58515cb4f5 at::Tensor::copy_()
[2m[36m(pid=42691)[0m     @     0x7f585767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42691)[0m     @     0x5644869a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42691)[0m     @     0x5644868fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42691)[0m     @     0x564486987baf _PyEval_EvalCodeWithName
[2m[36m(pid=42691)[0m     @     0x564486988a20 method_vectorcall
[2m[36m(pid=42691)[0m     @     0x5644868fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42691)[0m     @     0x564486987baf _PyEval_EvalCodeWithName
[2m[36m(pid=42691)[0m     @     0x564486988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42691)[0m     @     0x5644868fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42691)[0m     @     0x564486987baf _PyEval_EvalCodeWithName
[2m[36m(pid=42691)[0m     @     0x564486988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42691)[0m     @     0x5644868fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42691)[0m     @     0x564486987baf _PyEval_EvalCodeWithName
[2m[36m(pid=42691)[0m     @     0x564486988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42691)[0m     @     0x5644868fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42691)[0m     @     0x564486987baf _PyEval_EvalCodeWithName
[2m[36m(pid=42691)[0m     @     0x564486988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42691)[0m     @     0x5644868fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42713)[0m     @     0x7f99962c65a4 at::native::copy_()
[2m[36m(pid=42713)[0m     @     0x7f99969b14f5 at::Tensor::copy_()
[2m[36m(pid=42713)[0m     @     0x7f9998e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42713)[0m     @     0x7f99969b14f5 at::Tensor::copy_()
[2m[36m(pid=42713)[0m     @     0x7f999ca5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42713)[0m     @     0x55f15b35bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42713)[0m     @     0x55f15b2b6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42713)[0m     @     0x55f15b341baf _PyEval_EvalCodeWithName
[2m[36m(pid=42713)[0m     @     0x55f15b342a20 method_vectorcall
[2m[36m(pid=42713)[0m     @     0x55f15b2b6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42713)[0m     @     0x55f15b341baf _PyEval_EvalCodeWithName
[2m[36m(pid=42713)[0m     @     0x55f15b342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42713)[0m     @     0x55f15b2b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42713)[0m     @     0x55f15b341baf _PyEval_EvalCodeWithName
[2m[36m(pid=42713)[0m     @     0x55f15b342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42713)[0m     @     0x55f15b2b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42731)[0m     @     0x7f578e1405a4 at::native::copy_()
[2m[36m(pid=42731)[0m     @     0x7f578e82b4f5 at::Tensor::copy_()
[2m[36m(pid=42731)[0m     @     0x7f5790cfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42731)[0m     @     0x7f578e82b4f5 at::Tensor::copy_()
[2m[36m(pid=42731)[0m     @     0x7f57948d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42731)[0m     @     0x55b2a5bb3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42731)[0m     @     0x55b2a5b0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42731)[0m     @     0x55b2a5b99baf _PyEval_EvalCodeWithName
[2m[36m(pid=42731)[0m     @     0x55b2a5b9aa20 method_vectorcall
[2m[36m(pid=42731)[0m     @     0x55b2a5b0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42731)[0m     @     0x55b2a5b99baf _PyEval_EvalCodeWithName
[2m[36m(pid=42731)[0m     @     0x55b2a5b9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42731)[0m     @     0x55b2a5b0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x7f790d78f5a4 at::native::copy_()
[2m[36m(pid=42711)[0m     @     0x7f790de7a4f5 at::Tensor::copy_()
[2m[36m(pid=42711)[0m     @     0x7f791034d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42711)[0m     @     0x7f790de7a4f5 at::Tensor::copy_()
[2m[36m(pid=42728)[0m     @     0x7efb1f99f4f5 at::Tensor::copy_()
[2m[36m(pid=42728)[0m     @     0x7efb21e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42728)[0m     @     0x7efb1f99f4f5 at::Tensor::copy_()
[2m[36m(pid=42728)[0m     @     0x7efb25a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42728)[0m     @     0x55856a327fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42728)[0m     @     0x55856a282b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42728)[0m     @     0x55856a30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42728)[0m     @     0x55856a30ea20 method_vectorcall
[2m[36m(pid=42728)[0m     @     0x55856a282bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42728)[0m     @     0x55856a30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42728)[0m     @     0x55856a30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42728)[0m     @     0x55856a283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42728)[0m     @     0x55856a30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42728)[0m     @     0x55856a30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42728)[0m     @     0x55856a283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42728)[0m     @     0x55856a30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42728)[0m     @     0x55856a30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42728)[0m     @     0x55856a283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42728)[0m     @     0x55856a30dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42728)[0m     @     0x55856a30e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42728)[0m     @     0x55856a283689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42716)[0m     @     0x7f9f6d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=42716)[0m     @     0x7f9f6fca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42716)[0m     @     0x7f9f6d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=42716)[0m     @     0x7f9f7387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42716)[0m     @     0x55b585c39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42716)[0m     @     0x55b585b94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42716)[0m     @     0x55b585c1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42716)[0m     @     0x55b585c20a20 method_vectorcall
[2m[36m(pid=42716)[0m     @     0x55b585b94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42716)[0m     @     0x55b585c1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42716)[0m     @     0x55b585c20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42716)[0m     @     0x55b585b95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42716)[0m     @     0x55b585c1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42716)[0m     @     0x55b585c20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42716)[0m     @     0x55b585b95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42716)[0m     @     0x55b585c1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42716)[0m     @     0x55b585c20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42716)[0m     @     0x55b585b95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42716)[0m     @     0x55b585c1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42716)[0m     @     0x55b585c20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42716)[0m     @     0x55b585b95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x7f4c332995a4 at::native::copy_()
[2m[36m(pid=42811)[0m     @     0x7f4c339844f5 at::Tensor::copy_()
[2m[36m(pid=42811)[0m     @     0x7f4c35e578de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42811)[0m     @     0x7f4c339844f5 at::Tensor::copy_()
[2m[36m(pid=42811)[0m     @     0x7f4c39a2f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42811)[0m     @     0x562778433fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42811)[0m     @     0x56277838eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x562778419baf _PyEval_EvalCodeWithName
[2m[36m(pid=42811)[0m     @     0x56277841aa20 method_vectorcall
[2m[36m(pid=42811)[0m     @     0x56277838ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x562778419baf _PyEval_EvalCodeWithName
[2m[36m(pid=42811)[0m     @     0x56277841a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42819)[0m     @     0x7ee1742cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42819)[0m     @     0x7ee171dfa4f5 at::Tensor::copy_()
[2m[36m(pid=42819)[0m     @     0x7ee177ea579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42819)[0m     @     0x562e63b5efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42819)[0m     @     0x562e63ab9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42819)[0m     @     0x562e63b44baf _PyEval_EvalCodeWithName
[2m[36m(pid=42819)[0m     @     0x562e63b45a20 method_vectorcall
[2m[36m(pid=42819)[0m     @     0x562e63ab9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42819)[0m     @     0x562e63b44baf _PyEval_EvalCodeWithName
[2m[36m(pid=42819)[0m     @     0x562e63b45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42819)[0m     @     0x562e63aba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42819)[0m     @     0x562e63b44baf _PyEval_EvalCodeWithName
[2m[36m(pid=42819)[0m     @     0x562e63b45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42819)[0m     @     0x562e63aba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42819)[0m     @     0x562e63b44baf _PyEval_EvalCodeWithName
[2m[36m(pid=42819)[0m     @     0x562e63b45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42819)[0m     @     0x562e63aba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42819)[0m     @     0x562e63b44baf _PyEval_EvalCodeWithName
[2m[36m(pid=42819)[0m     @     0x562e63b45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42819)[0m     @     0x562e63aba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x7f580f49f4f5 at::Tensor::copy_()
[2m[36m(pid=42704)[0m     @     0x7f58119728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42704)[0m     @     0x7f580f49f4f5 at::Tensor::copy_()
[2m[36m(pid=42708)[0m     @     0x7f2ba12b54f5 at::Tensor::copy_()
[2m[36m(pid=42708)[0m     @     0x7f2ba37888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42708)[0m     @     0x7f2ba12b54f5 at::Tensor::copy_()
[2m[36m(pid=42708)[0m     @     0x7f2ba736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42708)[0m     @     0x5638955e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42708)[0m     @     0x56389553db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42708)[0m     @     0x5638955c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42708)[0m     @     0x5638955c9a20 method_vectorcall
[2m[36m(pid=42708)[0m     @     0x56389553dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42708)[0m     @     0x5638955c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42708)[0m     @     0x5638955c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42708)[0m     @     0x56389553e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42708)[0m     @     0x5638955c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42708)[0m     @     0x5638955c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42708)[0m     @     0x56389553e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42708)[0m     @     0x5638955c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42708)[0m     @     0x5638955c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42708)[0m     @     0x56389553e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42692)[0m     @     0x7f9f929405a4 at::native::copy_()
[2m[36m(pid=42692)[0m     @     0x7f9f9302b4f5 at::Tensor::copy_()
[2m[36m(pid=42692)[0m     @     0x7f9f954fe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42692)[0m     @     0x7f9f9302b4f5 at::Tensor::copy_()
[2m[36m(pid=42748)[0m     @     0x7f224de545a4 at::native::copy_()
[2m[36m(pid=42748)[0m     @     0x7f224e53f4f5 at::Tensor::copy_()
[2m[36m(pid=42748)[0m     @     0x7f2250a128de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42748)[0m     @     0x7f224e53f4f5 at::Tensor::copy_()
[2m[36m(pid=42709)[0m     @     0x7f676930a4f5 at::Tensor::copy_()
[2m[36m(pid=42709)[0m     @     0x7f676b7dd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42709)[0m     @     0x7f676930a4f5 at::Tensor::copy_()
[2m[36m(pid=42709)[0m     @     0x7f676f3b579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42709)[0m     @     0x556cb1c75fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42709)[0m     @     0x556cb1bd0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42709)[0m     @     0x556cb1c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42709)[0m     @     0x556cb1c5ca20 method_vectorcall
[2m[36m(pid=42709)[0m     @     0x556cb1bd0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42709)[0m     @     0x556cb1c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42709)[0m     @     0x556cb1c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42709)[0m     @     0x556cb1bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42709)[0m     @     0x556cb1c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42709)[0m     @     0x556cb1c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42709)[0m     @     0x556cb1bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42709)[0m     @     0x556cb1c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42709)[0m     @     0x556cb1c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42702)[0m     @     0x7edfd49d34f5 at::Tensor::copy_()
[2m[36m(pid=42702)[0m     @     0x7edfd6ea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42702)[0m     @     0x7edfd49d34f5 at::Tensor::copy_()
[2m[36m(pid=42702)[0m     @     0x7edfdaa7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42702)[0m     @     0x563b9a42afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42702)[0m     @     0x563b9a385b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42702)[0m     @     0x563b9a410baf _PyEval_EvalCodeWithName
[2m[36m(pid=42702)[0m     @     0x563b9a411a20 method_vectorcall
[2m[36m(pid=42702)[0m     @     0x563b9a385bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42702)[0m     @     0x563b9a410baf _PyEval_EvalCodeWithName
[2m[36m(pid=42702)[0m     @     0x563b9a411643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42702)[0m     @     0x563b9a386689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42702)[0m     @     0x563b9a410baf _PyEval_EvalCodeWithName
[2m[36m(pid=42702)[0m     @     0x563b9a411643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42702)[0m     @     0x563b9a386689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42702)[0m     @     0x563b9a410baf _PyEval_EvalCodeWithName
[2m[36m(pid=42702)[0m     @     0x563b9a411643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42702)[0m     @     0x563b9a386689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42702)[0m     @     0x563b9a410baf _PyEval_EvalCodeWithName
[2m[36m(pid=42702)[0m     @     0x563b9a411643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42702)[0m     @     0x563b9a386689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42701)[0m     @     0x7eefd78b95a4 at::native::copy_()
[2m[36m(pid=42701)[0m     @     0x7eefd7fa44f5 at::Tensor::copy_()
[2m[36m(pid=42701)[0m     @     0x7eefda4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42701)[0m     @     0x7eefd7fa44f5 at::Tensor::copy_()
[2m[36m(pid=42701)[0m     @     0x7eefde04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42701)[0m     @     0x556ef1955fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42701)[0m     @     0x556ef18b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42701)[0m     @     0x556ef193bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42701)[0m     @     0x556ef193ca20 method_vectorcall
[2m[36m(pid=42701)[0m     @     0x556ef18b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42701)[0m     @     0x556ef193bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42721)[0m     @     0x7f10f20ba4f5 at::Tensor::copy_()
[2m[36m(pid=42721)[0m     @     0x7f10f458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42783)[0m     @     0x7eee48417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42783)[0m     @     0x7eee478b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42753)[0m     @     0x7f74ae5e24f5 at::Tensor::copy_()
[2m[36m(pid=42753)[0m     @     0x7f74b0ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42751)[0m     @     0x7f3d4b8a14f5 at::Tensor::copy_()
[2m[36m(pid=42751)[0m     @     0x7f3d5194c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42751)[0m     @     0x55b8d698bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42751)[0m     @     0x55b8d68e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42751)[0m     @     0x55b8d6971baf _PyEval_EvalCodeWithName
[2m[36m(pid=42751)[0m     @     0x55b8d6972a20 method_vectorcall
[2m[36m(pid=42751)[0m     @     0x55b8d68e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42751)[0m     @     0x55b8d6971baf _PyEval_EvalCodeWithName
[2m[36m(pid=42751)[0m     @     0x55b8d6972643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42751)[0m     @     0x55b8d68e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42751)[0m     @     0x55b8d6971baf _PyEval_EvalCodeWithName
[2m[36m(pid=42751)[0m     @     0x55b8d6972643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42751)[0m     @     0x55b8d68e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42751)[0m     @     0x55b8d6971baf _PyEval_EvalCodeWithName
[2m[36m(pid=42751)[0m     @     0x55b8d6972643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42751)[0m     @     0x55b8d68e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42751)[0m     @     0x55b8d6971baf _PyEval_EvalCodeWithName
[2m[36m(pid=42751)[0m     @     0x55b8d6972643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42751)[0m     @     0x55b8d68e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42773)[0m     @     0x7fa3172c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42773)[0m     @     0x7fa3172c4388 at::native::copy_impl()
[2m[36m(pid=42773)[0m     @     0x7fa3172c65a4 at::native::copy_()
[2m[36m(pid=42760)[0m     @     0x7f18341618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42760)[0m     @     0x7f1831c8e4f5 at::Tensor::copy_()
[2m[36m(pid=42760)[0m     @     0x7f1837d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42760)[0m     @     0x5558cdc01fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42760)[0m     @     0x5558cdb5cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42760)[0m     @     0x5558cdbe7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42760)[0m     @     0x5558cdbe8a20 method_vectorcall
[2m[36m(pid=42760)[0m     @     0x5558cdb5cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42760)[0m     @     0x5558cdbe7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42760)[0m     @     0x5558cdbe8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42760)[0m     @     0x5558cdb5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42760)[0m     @     0x5558cdbe7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42760)[0m     @     0x5558cdbe8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42760)[0m     @     0x5558cdb5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42760)[0m     @     0x5558cdbe7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42760)[0m     @     0x5558cdbe8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42760)[0m     @     0x5558cdb5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42760)[0m     @     0x5558cdbe7baf _PyEval_EvalCodeWithName
[2m[36m(pid=42760)[0m     @     0x5558cdbe8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42760)[0m     @     0x5558cdb5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42698)[0m     @     0x7f5cdcfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42698)[0m     @     0x7f5cdaad44f5 at::Tensor::copy_()
[2m[36m(pid=42698)[0m     @     0x7f5ce0b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42698)[0m     @     0x5625479f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42698)[0m     @     0x562547951b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42698)[0m     @     0x5625479dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42698)[0m     @     0x5625479dda20 method_vectorcall
[2m[36m(pid=42698)[0m     @     0x562547951bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42698)[0m     @     0x5625479dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42698)[0m     @     0x5625479dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42698)[0m     @     0x562547952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42698)[0m     @     0x5625479dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42698)[0m     @     0x5625479dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42698)[0m     @     0x562547952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42698)[0m     @     0x5625479dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42698)[0m     @     0x5625479dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42698)[0m     @     0x562547952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42698)[0m     @     0x5625479dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42698)[0m     @     0x5625479dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42698)[0m     @     0x562547952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42756)[0m     @     0x7f060e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=42756)[0m     @     0x7f061079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42756)[0m     @     0x7f060e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=42756)[0m     @     0x7f061437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42756)[0m     @     0x562e2a25cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42712)[0m     @     0x7f2d31e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42712)[0m     @     0x7f2d2f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=42712)[0m     @     0x7f2d35a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42712)[0m     @     0x55b1bd634fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42712)[0m     @     0x55b1bd58fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42712)[0m     @     0x55b1bd61abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42712)[0m     @     0x55b1bd61ba20 method_vectorcall
[2m[36m(pid=42712)[0m     @     0x55b1bd58fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42712)[0m     @     0x55b1bd61abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42712)[0m     @     0x55b1bd61b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42712)[0m     @     0x55b1bd590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42712)[0m     @     0x55b1bd61abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42712)[0m     @     0x55b1bd61b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42712)[0m     @     0x55b1bd590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42712)[0m     @     0x55b1bd61abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42712)[0m     @     0x55b1bd61b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42712)[0m     @     0x55b1bd590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42712)[0m     @     0x55b1bd61abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42712)[0m     @     0x55b1bd61b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42712)[0m     @     0x55b1bd590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42694)[0m     @     0x7fa296c198de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42694)[0m     @     0x7fa2947464f5 at::Tensor::copy_()
[2m[36m(pid=42694)[0m     @     0x7fa29a7f179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42694)[0m     @     0x560a9b3d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42694)[0m     @     0x560a9b333b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42694)[0m     @     0x560a9b3bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42694)[0m     @     0x560a9b3bfa20 method_vectorcall
[2m[36m(pid=42694)[0m     @     0x560a9b333bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42694)[0m     @     0x560a9b3bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42694)[0m     @     0x560a9b3bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42694)[0m     @     0x560a9b334689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42694)[0m     @     0x560a9b3bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42694)[0m     @     0x560a9b3bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42694)[0m     @     0x560a9b334689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42694)[0m     @     0x560a9b3bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42694)[0m     @     0x560a9b3bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42694)[0m     @     0x560a9b334689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42694)[0m     @     0x560a9b3bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42694)[0m     @     0x560a9b3bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42694)[0m     @     0x560a9b334689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42710)[0m     @     0x7f9392d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42710)[0m     @     0x7f93908354f5 at::Tensor::copy_()
[2m[36m(pid=42710)[0m     @     0x7f93968e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42710)[0m     @     0x556486d59fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42710)[0m     @     0x556486cb4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42710)[0m     @     0x556486d3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42710)[0m     @     0x556486d40a20 method_vectorcall
[2m[36m(pid=42710)[0m     @     0x556486cb4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42710)[0m     @     0x556486d3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42710)[0m     @     0x556486d40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42710)[0m     @     0x556486cb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42710)[0m     @     0x556486d3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42710)[0m     @     0x556486d40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42710)[0m     @     0x556486cb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42710)[0m     @     0x556486d3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42710)[0m     @     0x556486d40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42710)[0m     @     0x556486cb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42710)[0m     @     0x556486d3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42710)[0m     @     0x556486d40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42710)[0m     @     0x556486cb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42714)[0m     @     0x7ee3c31734f5 at::Tensor::copy_()
[2m[36m(pid=42714)[0m     @     0x7ee3c921e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42714)[0m     @     0x55b5b30e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42714)[0m     @     0x55b5b303bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42714)[0m     @     0x55b5b30c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42714)[0m     @     0x55b5b30c7a20 method_vectorcall
[2m[36m(pid=42714)[0m     @     0x55b5b303bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42714)[0m     @     0x55b5b30c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42714)[0m     @     0x55b5b30c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42714)[0m     @     0x55b5b303c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42714)[0m     @     0x55b5b30c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42714)[0m     @     0x55b5b30c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42714)[0m     @     0x55b5b303c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42714)[0m     @     0x55b5b30c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42714)[0m     @     0x55b5b30c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42714)[0m     @     0x55b5b303c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42714)[0m     @     0x55b5b30c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=42714)[0m     @     0x55b5b30c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42714)[0m     @     0x55b5b303c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42754)[0m     @     0x7ef24034979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42754)[0m     @     0x5650cf290fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42754)[0m     @     0x5650cf1ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42754)[0m     @     0x5650cf276baf _PyEval_EvalCodeWithName
[2m[36m(pid=42754)[0m     @     0x5650cf277a20 method_vectorcall
[2m[36m(pid=42754)[0m     @     0x5650cf1ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42754)[0m     @     0x5650cf276baf _PyEval_EvalCodeWithName
[2m[36m(pid=42754)[0m     @     0x5650cf277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42754)[0m     @     0x5650cf1ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42754)[0m     @     0x5650cf276baf _PyEval_EvalCodeWithName
[2m[36m(pid=42754)[0m     @     0x5650cf277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42754)[0m     @     0x5650cf1ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42754)[0m     @     0x5650cf276baf _PyEval_EvalCodeWithName
[2m[36m(pid=42754)[0m     @     0x5650cf277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42754)[0m     @     0x5650cf1ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42754)[0m     @     0x5650cf276baf _PyEval_EvalCodeWithName
[2m[36m(pid=42754)[0m     @     0x5650cf277643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42754)[0m     @     0x5650cf1ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42695)[0m     @     0x7f1928ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42695)[0m     @     0x7f19267d64f5 at::Tensor::copy_()
[2m[36m(pid=42695)[0m     @     0x7f192c47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42695)[0m     @     0x556aa9626fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42695)[0m     @     0x556aa9581b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42695)[0m     @     0x556aa960cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42695)[0m     @     0x556aa960da20 method_vectorcall
[2m[36m(pid=42695)[0m     @     0x556aa9581bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42695)[0m     @     0x556aa960cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42695)[0m     @     0x556aa960d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42695)[0m     @     0x556aa9582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42695)[0m     @     0x556aa960cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42695)[0m     @     0x556aa960d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42695)[0m     @     0x556aa9582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42695)[0m     @     0x556aa960cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42695)[0m     @     0x556aa960d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42695)[0m     @     0x556aa9582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42695)[0m     @     0x556aa960cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42695)[0m     @     0x556aa960d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42695)[0m     @     0x556aa9582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42744)[0m     @     0x7f5f4edb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42744)[0m     @     0x7f5f4c8e54f5 at::Tensor::copy_()
[2m[36m(pid=42744)[0m     @     0x7f5f5299079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42744)[0m     @     0x564208f4bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42744)[0m     @     0x564208ea6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42744)[0m     @     0x564208f31baf _PyEval_EvalCodeWithName
[2m[36m(pid=42744)[0m     @     0x564208f32a20 method_vectorcall
[2m[36m(pid=42744)[0m     @     0x564208ea6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42744)[0m     @     0x564208f31baf _PyEval_EvalCodeWithName
[2m[36m(pid=42744)[0m     @     0x564208f32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42744)[0m     @     0x564208ea7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42744)[0m     @     0x564208f31baf _PyEval_EvalCodeWithName
[2m[36m(pid=42744)[0m     @     0x564208f32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42744)[0m     @     0x564208ea7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42744)[0m     @     0x564208f31baf _PyEval_EvalCodeWithName
[2m[36m(pid=42744)[0m     @     0x564208f32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42744)[0m     @     0x564208ea7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42744)[0m     @     0x564208f31baf _PyEval_EvalCodeWithName
[2m[36m(pid=42744)[0m     @     0x564208f32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42744)[0m     @     0x564208ea7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x7f59779918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42718)[0m     @     0x7fb4404528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42718)[0m     @     0x7fb440452ad3 at::TensorIterator::for_each()
[2m[36m(pid=42718)[0m     @     0x7fb440452d91 at::TensorIterator::for_each()
[2m[36m(pid=42747)[0m     @     0x7ececf88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42747)[0m     @     0x7ececd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=42747)[0m     @     0x7eced346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42747)[0m     @     0x562fb671efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42747)[0m     @     0x562fb6679b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42747)[0m     @     0x562fb6704baf _PyEval_EvalCodeWithName
[2m[36m(pid=42747)[0m     @     0x562fb6705a20 method_vectorcall
[2m[36m(pid=42747)[0m     @     0x562fb6679bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42747)[0m     @     0x562fb6704baf _PyEval_EvalCodeWithName
[2m[36m(pid=42747)[0m     @     0x562fb6705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42747)[0m     @     0x562fb667a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42747)[0m     @     0x562fb6704baf _PyEval_EvalCodeWithName
[2m[36m(pid=42747)[0m     @     0x562fb6705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42747)[0m     @     0x562fb667a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42747)[0m     @     0x562fb6704baf _PyEval_EvalCodeWithName
[2m[36m(pid=42747)[0m     @     0x562fb6705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42747)[0m     @     0x562fb667a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42747)[0m     @     0x562fb6704baf _PyEval_EvalCodeWithName
[2m[36m(pid=42747)[0m     @     0x562fb6705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42747)[0m     @     0x562fb667a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42807)[0m     @     0x7f9f3a5ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42807)[0m     @     0x7f9f380f74f5 at::Tensor::copy_()
[2m[36m(pid=42807)[0m     @     0x7f9f3e1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42807)[0m     @     0x5654c34e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42807)[0m     @     0x5654c3442b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42807)[0m     @     0x5654c34cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42807)[0m     @     0x5654c34cea20 method_vectorcall
[2m[36m(pid=42807)[0m     @     0x5654c3442bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42807)[0m     @     0x5654c34cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42807)[0m     @     0x5654c34ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42807)[0m     @     0x5654c3443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42807)[0m     @     0x5654c34cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42807)[0m     @     0x5654c34ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42807)[0m     @     0x5654c3443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42807)[0m     @     0x5654c34cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42807)[0m     @     0x5654c34ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42807)[0m     @     0x5654c3443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42807)[0m     @     0x5654c34cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42807)[0m     @     0x5654c34ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42807)[0m     @     0x5654c3443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42767)[0m     @     0x7ee7cc4255a4 at::native::copy_()
[2m[36m(pid=42767)[0m     @     0x7ee7ccb104f5 at::Tensor::copy_()
[2m[36m(pid=42767)[0m     @     0x7ee7cefe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42767)[0m     @     0x7ee7ccb104f5 at::Tensor::copy_()
[2m[36m(pid=42767)[0m     @     0x7ee7d2bbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42803)[0m     @     0x7f2c3d1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42803)[0m     @     0x7f2c3ace54f5 at::Tensor::copy_()
[2m[36m(pid=42803)[0m     @     0x7f2c40d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42803)[0m     @     0x55cb5a6ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42803)[0m     @     0x55cb5a647b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42803)[0m     @     0x55cb5a6d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42803)[0m     @     0x55cb5a6d3a20 method_vectorcall
[2m[36m(pid=42803)[0m     @     0x55cb5a647bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42803)[0m     @     0x55cb5a6d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42803)[0m     @     0x55cb5a6d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42803)[0m     @     0x55cb5a648689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42803)[0m     @     0x55cb5a6d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42803)[0m     @     0x55cb5a6d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42803)[0m     @     0x55cb5a648689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42803)[0m     @     0x55cb5a6d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42803)[0m     @     0x55cb5a6d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42803)[0m     @     0x55cb5a648689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42803)[0m     @     0x55cb5a6d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=42803)[0m     @     0x55cb5a6d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42803)[0m     @     0x55cb5a648689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42715)[0m     @     0x7f2a28b5d5a4 at::native::copy_()
[2m[36m(pid=42715)[0m     @     0x7f2a292484f5 at::Tensor::copy_()
[2m[36m(pid=42715)[0m     @     0x7f2a2b71b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42697)[0m     @     0x7f78e61d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=42697)[0m     @     0x7f78e61d2d91 at::TensorIterator::for_each()
[2m[36m(pid=42697)[0m     @     0x7f78e6ab5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42697)[0m     @     0x7f78e6ad8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42780)[0m     @     0x7ed37a957d91 at::TensorIterator::for_each()
[2m[36m(pid=42780)[0m     @     0x7ed37b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42780)[0m     @     0x7ed37b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42780)[0m     @     0x7ed37a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42780)[0m     @     0x7ed37a6fd388 at::native::copy_impl()
[2m[36m(pid=42726)[0m     @     0x7f515a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=42726)[0m     @     0x7f515a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=42816)[0m     @     0x7f47ca37c4f5 at::Tensor::copy_()
[2m[36m(pid=42816)[0m     @     0x7f47d042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42816)[0m     @     0x5574eae39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42816)[0m     @     0x5574ead94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42816)[0m     @     0x5574eae1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42816)[0m     @     0x5574eae20a20 method_vectorcall
[2m[36m(pid=42816)[0m     @     0x5574ead94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42816)[0m     @     0x5574eae1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42816)[0m     @     0x5574eae20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42816)[0m     @     0x5574ead95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42816)[0m     @     0x5574eae1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42816)[0m     @     0x5574eae20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42816)[0m     @     0x5574ead95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42816)[0m     @     0x5574eae1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42816)[0m     @     0x5574eae20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42816)[0m     @     0x5574ead95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42816)[0m     @     0x5574eae1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42816)[0m     @     0x5574eae20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42816)[0m     @     0x5574ead95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42700)[0m     @     0x7f055637879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42700)[0m     @     0x55dde892efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42700)[0m     @     0x55dde8889b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42700)[0m     @     0x55dde8914baf _PyEval_EvalCodeWithName
[2m[36m(pid=42700)[0m     @     0x55dde8915a20 method_vectorcall
[2m[36m(pid=42700)[0m     @     0x55dde8889bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42700)[0m     @     0x55dde8914baf _PyEval_EvalCodeWithName
[2m[36m(pid=42700)[0m     @     0x55dde8915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42700)[0m     @     0x55dde888a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42700)[0m     @     0x55dde8914baf _PyEval_EvalCodeWithName
[2m[36m(pid=42700)[0m     @     0x55dde8915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42700)[0m     @     0x55dde888a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42700)[0m     @     0x55dde8914baf _PyEval_EvalCodeWithName
[2m[36m(pid=42700)[0m     @     0x55dde8915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42700)[0m     @     0x55dde888a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42700)[0m     @     0x55dde8914baf _PyEval_EvalCodeWithName
[2m[36m(pid=42700)[0m     @     0x55dde8915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42700)[0m     @     0x55dde888a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42693)[0m     @     0x7f77db1334f5 at::Tensor::copy_()
[2m[36m(pid=42699)[0m     @     0x55e81a092baf _PyEval_EvalCodeWithName
[2m[36m(pid=42699)[0m     @     0x55e81a093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42699)[0m     @     0x55e81a008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42699)[0m     @     0x55e81a092baf _PyEval_EvalCodeWithName
[2m[36m(pid=42699)[0m     @     0x55e81a093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42699)[0m     @     0x55e81a008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42699)[0m     @     0x55e81a092baf _PyEval_EvalCodeWithName
[2m[36m(pid=42699)[0m     @     0x55e81a093643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42699)[0m     @     0x55e81a008689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x7fa039f0c4f5 at::Tensor::copy_()
[2m[36m(pid=42793)[0m     @     0x7fa03c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42776)[0m     @     0x7f093462879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42776)[0m     @     0x56108786afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42776)[0m     @     0x5610877c5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42776)[0m     @     0x561087850baf _PyEval_EvalCodeWithName
[2m[36m(pid=42776)[0m     @     0x561087851a20 method_vectorcall
[2m[36m(pid=42776)[0m     @     0x5610877c5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42776)[0m     @     0x561087850baf _PyEval_EvalCodeWithName
[2m[36m(pid=42776)[0m     @     0x561087851643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42776)[0m     @     0x5610877c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42776)[0m     @     0x561087850baf _PyEval_EvalCodeWithName
[2m[36m(pid=42776)[0m     @     0x561087851643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42776)[0m     @     0x5610877c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42776)[0m     @     0x561087850baf _PyEval_EvalCodeWithName
[2m[36m(pid=42776)[0m     @     0x561087851643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42776)[0m     @     0x5610877c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42776)[0m     @     0x561087850baf _PyEval_EvalCodeWithName
[2m[36m(pid=42776)[0m     @     0x561087851643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42776)[0m     @     0x5610877c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42713)[0m     @     0x55f15b341baf _PyEval_EvalCodeWithName
[2m[36m(pid=42713)[0m     @     0x55f15b342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42713)[0m     @     0x55f15b2b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42713)[0m     @     0x55f15b341baf _PyEval_EvalCodeWithName
[2m[36m(pid=42713)[0m     @     0x55f15b342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42713)[0m     @     0x55f15b2b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42731)[0m     @     0x55b2a5b99baf _PyEval_EvalCodeWithName
[2m[36m(pid=42731)[0m     @     0x55b2a5b9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42731)[0m     @     0x55b2a5b0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42731)[0m     @     0x55b2a5b99baf _PyEval_EvalCodeWithName
[2m[36m(pid=42731)[0m     @     0x55b2a5b9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42731)[0m     @     0x55b2a5b0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42731)[0m     @     0x55b2a5b99baf _PyEval_EvalCodeWithName
[2m[36m(pid=42731)[0m     @     0x55b2a5b9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42731)[0m     @     0x55b2a5b0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x7f7913f2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42711)[0m     @     0x563709956fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42711)[0m     @     0x5637098b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x56370993cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42711)[0m     @     0x56370993da20 method_vectorcall
[2m[36m(pid=42711)[0m     @     0x5637098b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x56370993cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42711)[0m     @     0x56370993d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42711)[0m     @     0x5637098b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x56370993cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42711)[0m     @     0x56370993d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42711)[0m     @     0x5637098b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x56370993cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42711)[0m     @     0x56370993d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42711)[0m     @     0x5637098b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42711)[0m     @     0x56370993cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42711)[0m     @     0x56370993d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42711)[0m     @     0x5637098b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x56277838f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x562778419baf _PyEval_EvalCodeWithName
[2m[36m(pid=42811)[0m     @     0x56277841a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42811)[0m     @     0x56277838f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x562778419baf _PyEval_EvalCodeWithName
[2m[36m(pid=42811)[0m     @     0x56277841a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42811)[0m     @     0x56277838f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42811)[0m     @     0x562778419baf _PyEval_EvalCodeWithName
[2m[36m(pid=42811)[0m     @     0x56277841a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42811)[0m     @     0x56277838f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x7f581554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42704)[0m     @     0x55f381b6dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42704)[0m     @     0x55f381ac8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x55f381b53baf _PyEval_EvalCodeWithName
[2m[36m(pid=42704)[0m     @     0x55f381b54a20 method_vectorcall
[2m[36m(pid=42704)[0m     @     0x55f381ac8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x55f381b53baf _PyEval_EvalCodeWithName
[2m[36m(pid=42704)[0m     @     0x55f381b54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42704)[0m     @     0x55f381ac9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x55f381b53baf _PyEval_EvalCodeWithName
[2m[36m(pid=42704)[0m     @     0x55f381b54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42704)[0m     @     0x55f381ac9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x55f381b53baf _PyEval_EvalCodeWithName
[2m[36m(pid=42704)[0m     @     0x55f381b54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42704)[0m     @     0x55f381ac9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42704)[0m     @     0x55f381b53baf _PyEval_EvalCodeWithName
[2m[36m(pid=42704)[0m     @     0x55f381b54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42704)[0m     @     0x55f381ac9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42708)[0m     @     0x5638955c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=42708)[0m     @     0x5638955c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42708)[0m     @     0x56389553e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x7f3403de75a4 at::native::copy_()
[2m[36m(pid=42758)[0m     @     0x7f34044d24f5 at::Tensor::copy_()
[2m[36m(pid=42692)[0m     @     0x7f9f990d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42692)[0m     @     0x55e2f6eb8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42692)[0m     @     0x55e2f6e13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42692)[0m     @     0x55e2f6e9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42692)[0m     @     0x55e2f6e9fa20 method_vectorcall
[2m[36m(pid=42692)[0m     @     0x55e2f6e13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42692)[0m     @     0x55e2f6e9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42692)[0m     @     0x55e2f6e9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42692)[0m     @     0x55e2f6e14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42692)[0m     @     0x55e2f6e9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42692)[0m     @     0x55e2f6e9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42692)[0m     @     0x55e2f6e14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42692)[0m     @     0x55e2f6e9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42692)[0m     @     0x55e2f6e9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42692)[0m     @     0x55e2f6e14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42692)[0m     @     0x55e2f6e9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42692)[0m     @     0x55e2f6e9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42692)[0m     @     0x55e2f6e14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42748)[0m     @     0x7f22545ea79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42748)[0m     @     0x55f7992aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42748)[0m     @     0x55f799209b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42748)[0m     @     0x55f799294baf _PyEval_EvalCodeWithName
[2m[36m(pid=42748)[0m     @     0x55f799295a20 method_vectorcall
[2m[36m(pid=42748)[0m     @     0x55f799209bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42748)[0m     @     0x55f799294baf _PyEval_EvalCodeWithName
[2m[36m(pid=42748)[0m     @     0x55f799295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42748)[0m     @     0x55f79920a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42748)[0m     @     0x55f799294baf _PyEval_EvalCodeWithName
[2m[36m(pid=42748)[0m     @     0x55f799295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42748)[0m     @     0x55f79920a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42748)[0m     @     0x55f799294baf _PyEval_EvalCodeWithName
[2m[36m(pid=42748)[0m     @     0x55f799295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42748)[0m     @     0x55f79920a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42748)[0m     @     0x55f799294baf _PyEval_EvalCodeWithName
[2m[36m(pid=42748)[0m     @     0x55f799295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42748)[0m     @     0x55f79920a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42709)[0m     @     0x556cb1bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42709)[0m     @     0x556cb1c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42709)[0m     @     0x556cb1c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42709)[0m     @     0x556cb1bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42701)[0m     @     0x556ef193c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42701)[0m     @     0x556ef18b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42701)[0m     @     0x556ef193bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42701)[0m     @     0x556ef193c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42701)[0m     @     0x556ef18b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42701)[0m     @     0x556ef193bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42701)[0m     @     0x556ef193c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42701)[0m     @     0x556ef18b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42701)[0m     @     0x556ef193bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42701)[0m     @     0x556ef193c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42701)[0m     @     0x556ef18b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42721)[0m     @     0x7f10f20ba4f5 at::Tensor::copy_()
[2m[36m(pid=42721)[0m     @     0x7f10f816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42721)[0m     @     0x55b85849bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42721)[0m     @     0x55b8583f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42721)[0m     @     0x55b858481baf _PyEval_EvalCodeWithName
[2m[36m(pid=42721)[0m     @     0x55b858482a20 method_vectorcall
[2m[36m(pid=42721)[0m     @     0x55b8583f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42721)[0m     @     0x55b858481baf _PyEval_EvalCodeWithName
[2m[36m(pid=42721)[0m     @     0x55b858482643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42721)[0m     @     0x55b8583f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42721)[0m     @     0x55b858481baf _PyEval_EvalCodeWithName
[2m[36m(pid=42721)[0m     @     0x55b858482643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42721)[0m     @     0x55b8583f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42721)[0m     @     0x55b858481baf _PyEval_EvalCodeWithName
[2m[36m(pid=42721)[0m     @     0x55b858482643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42721)[0m     @     0x55b8583f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42721)[0m     @     0x55b858481baf _PyEval_EvalCodeWithName
[2m[36m(pid=42721)[0m     @     0x55b858482643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42721)[0m     @     0x55b8583f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42783)[0m     @     0x7eee478b7388 at::native::copy_impl()
[2m[36m(pid=42783)[0m     @     0x7eee478b95a4 at::native::copy_()
[2m[36m(pid=42783)[0m     @     0x7eee47fa44f5 at::Tensor::copy_()
[2m[36m(pid=42783)[0m     @     0x7eee4a4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42753)[0m     @     0x7f74ae5e24f5 at::Tensor::copy_()
[2m[36m(pid=42753)[0m     @     0x7f74b468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42753)[0m     @     0x55bfb25d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42753)[0m     @     0x55bfb2534b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42753)[0m     @     0x55bfb25bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42753)[0m     @     0x55bfb25c0a20 method_vectorcall
[2m[36m(pid=42753)[0m     @     0x55bfb2534bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42753)[0m     @     0x55bfb25bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42753)[0m     @     0x55bfb25c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42753)[0m     @     0x55bfb2535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42753)[0m     @     0x55bfb25bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42753)[0m     @     0x55bfb25c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42753)[0m     @     0x55bfb2535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42753)[0m     @     0x55bfb25bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42753)[0m     @     0x55bfb25c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42753)[0m     @     0x55bfb2535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42753)[0m     @     0x55bfb25bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42753)[0m     @     0x55bfb25c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42753)[0m     @     0x55bfb2535689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42773)[0m     @     0x7fa3179b14f5 at::Tensor::copy_()
[2m[36m(pid=42773)[0m     @     0x7fa319e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42773)[0m     @     0x7fa3179b14f5 at::Tensor::copy_()
[2m[36m(pid=42773)[0m     @     0x7fa31da5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42773)[0m     @     0x558625c46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42773)[0m     @     0x558625ba1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42773)[0m     @     0x558625c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42773)[0m     @     0x558625c2da20 method_vectorcall
[2m[36m(pid=42773)[0m     @     0x558625ba1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42773)[0m     @     0x558625c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42773)[0m     @     0x558625c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42773)[0m     @     0x558625ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42773)[0m     @     0x558625c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42773)[0m     @     0x558625c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42773)[0m     @     0x558625ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42773)[0m     @     0x558625c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42773)[0m     @     0x558625c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42773)[0m     @     0x558625ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42773)[0m     @     0x558625c2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42773)[0m     @     0x558625c2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42773)[0m     @     0x558625ba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42756)[0m     @     0x562e2a1b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42756)[0m     @     0x562e2a242baf _PyEval_EvalCodeWithName
[2m[36m(pid=42756)[0m     @     0x562e2a243a20 method_vectorcall
[2m[36m(pid=42756)[0m     @     0x562e2a1b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42756)[0m     @     0x562e2a242baf _PyEval_EvalCodeWithName
[2m[36m(pid=42756)[0m     @     0x562e2a243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42756)[0m     @     0x562e2a1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42756)[0m     @     0x562e2a242baf _PyEval_EvalCodeWithName
[2m[36m(pid=42756)[0m     @     0x562e2a243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42756)[0m     @     0x562e2a1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42756)[0m     @     0x562e2a242baf _PyEval_EvalCodeWithName
[2m[36m(pid=42756)[0m     @     0x562e2a243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42756)[0m     @     0x562e2a1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42756)[0m     @     0x562e2a242baf _PyEval_EvalCodeWithName
[2m[36m(pid=42756)[0m     @     0x562e2a243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42756)[0m     @     0x562e2a1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x7f5977991ad3 at::TensorIterator::for_each()
[2m[36m(pid=42718)[0m     @     0x7fb440d35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42718)[0m     @     0x7fb440d58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42718)[0m     @     0x7fb4401faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42718)[0m     @     0x7fb4401f8388 at::native::copy_impl()
[2m[36m(pid=42767)[0m     @     0x559933213fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42767)[0m     @     0x55993316eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42767)[0m     @     0x5599331f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42767)[0m     @     0x5599331faa20 method_vectorcall
[2m[36m(pid=42767)[0m     @     0x55993316ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42767)[0m     @     0x5599331f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42767)[0m     @     0x5599331fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42767)[0m     @     0x55993316f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42767)[0m     @     0x5599331f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42767)[0m     @     0x5599331fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42767)[0m     @     0x55993316f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42767)[0m     @     0x5599331f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42767)[0m     @     0x5599331fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42767)[0m     @     0x55993316f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42767)[0m     @     0x5599331f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=42767)[0m     @     0x5599331fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42767)[0m     @     0x55993316f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42715)[0m     @     0x7f2a292484f5 at::Tensor::copy_()
[2m[36m(pid=42715)[0m     @     0x7f2a2f2f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42715)[0m     @     0x5644d0f37fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42715)[0m     @     0x5644d0e92b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42715)[0m     @     0x5644d0f1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42715)[0m     @     0x5644d0f1ea20 method_vectorcall
[2m[36m(pid=42715)[0m     @     0x5644d0e92bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42715)[0m     @     0x5644d0f1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42715)[0m     @     0x5644d0f1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42715)[0m     @     0x5644d0e93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42715)[0m     @     0x5644d0f1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42715)[0m     @     0x5644d0f1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42715)[0m     @     0x5644d0e93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42715)[0m     @     0x5644d0f1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42715)[0m     @     0x5644d0f1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42715)[0m     @     0x5644d0e93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42715)[0m     @     0x5644d0f1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42715)[0m     @     0x5644d0f1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42715)[0m     @     0x5644d0e93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42697)[0m     @     0x7f78e5f7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42697)[0m     @     0x7f78e5f78388 at::native::copy_impl()
[2m[36m(pid=42697)[0m     @     0x7f78e5f7a5a4 at::native::copy_()
[2m[36m(pid=42780)[0m     @     0x7ed37a6ff5a4 at::native::copy_()
[2m[36m(pid=42726)[0m     @     0x7f515a641d91 at::TensorIterator::for_each()
[2m[36m(pid=42693)[0m     @     0x7f77e11de79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42693)[0m     @     0x55cdc0505fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42693)[0m     @     0x55cdc0460b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42693)[0m     @     0x55cdc04ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42693)[0m     @     0x55cdc04eca20 method_vectorcall
[2m[36m(pid=42693)[0m     @     0x55cdc0460bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42693)[0m     @     0x55cdc04ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42693)[0m     @     0x55cdc04ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42693)[0m     @     0x55cdc0461689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42693)[0m     @     0x55cdc04ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42693)[0m     @     0x55cdc04ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42693)[0m     @     0x55cdc0461689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42693)[0m     @     0x55cdc04ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42693)[0m     @     0x55cdc04ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42693)[0m     @     0x55cdc0461689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42693)[0m     @     0x55cdc04ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42693)[0m     @     0x55cdc04ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42693)[0m     @     0x55cdc0461689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x7fa039f0c4f5 at::Tensor::copy_()
[2m[36m(pid=42793)[0m     @     0x7fa03ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42793)[0m     @     0x5606d0b84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42793)[0m     @     0x5606d0adfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x5606d0b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42793)[0m     @     0x5606d0b6ba20 method_vectorcall
[2m[36m(pid=42793)[0m     @     0x5606d0adfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x5606d0b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42793)[0m     @     0x5606d0b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42793)[0m     @     0x5606d0ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x5606d0b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42793)[0m     @     0x5606d0b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42793)[0m     @     0x5606d0ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x5606d0b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42793)[0m     @     0x5606d0b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42793)[0m     @     0x5606d0ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42793)[0m     @     0x5606d0b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=42793)[0m     @     0x5606d0b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42793)[0m     @     0x5606d0ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x7f34069a58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42758)[0m     @     0x7f34044d24f5 at::Tensor::copy_()
[2m[36m(pid=42783)[0m     @     0x7eee47fa44f5 at::Tensor::copy_()
[2m[36m(pid=42783)[0m     @     0x7eee4e04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42783)[0m     @     0x55be780f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42783)[0m     @     0x55be78054b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42783)[0m     @     0x55be780dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42783)[0m     @     0x55be780e0a20 method_vectorcall
[2m[36m(pid=42783)[0m     @     0x55be78054bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42783)[0m     @     0x55be780dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42783)[0m     @     0x55be780e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42783)[0m     @     0x55be78055689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42783)[0m     @     0x55be780dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42783)[0m     @     0x55be780e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42783)[0m     @     0x55be78055689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42783)[0m     @     0x55be780dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42783)[0m     @     0x55be780e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42783)[0m     @     0x55be78055689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42783)[0m     @     0x55be780dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42783)[0m     @     0x55be780e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42783)[0m     @     0x55be78055689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x7f5977991d91 at::TensorIterator::for_each()
[2m[36m(pid=42730)[0m     @     0x7f5978274b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42718)[0m     @     0x7fb4401fa5a4 at::native::copy_()
[2m[36m(pid=42697)[0m     @     0x7f78e66654f5 at::Tensor::copy_()
[2m[36m(pid=42697)[0m     @     0x7f78e8b388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42780)[0m     @     0x7ed37adea4f5 at::Tensor::copy_()
== Status ==
Memory usage on this node: 25.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_c70fc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_c70fc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_c70fc_00000_0_2020-11-05_10-43-44/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
[2m[36m(pid=42780)[0m     @     0x7ed37d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42780)[0m     @     0x7ed37adea4f5 at::Tensor::copy_()
[2m[36m(pid=42726)[0m     @     0x7f515af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=42726)[0m     @     0x7f515af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42726)[0m     @     0x7f515a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42726)[0m     @     0x7f515a3e7388 at::native::copy_impl()
[2m[36m(pid=42758)[0m     @     0x7f340a57d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42758)[0m     @     0x56111f50dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42758)[0m     @     0x56111f468b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x56111f4f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42758)[0m     @     0x56111f4f4a20 method_vectorcall
[2m[36m(pid=42758)[0m     @     0x56111f468bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x56111f4f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42758)[0m     @     0x56111f4f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42758)[0m     @     0x56111f469689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x56111f4f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42758)[0m     @     0x56111f4f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42758)[0m     @     0x56111f469689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x56111f4f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42758)[0m     @     0x56111f4f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42758)[0m     @     0x56111f469689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42758)[0m     @     0x56111f4f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42758)[0m     @     0x56111f4f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42758)[0m     @     0x56111f469689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x7f5978297c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=42730)[0m     @     0x7f5977739a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=42730)[0m     @     0x7f5977737388 at::native::copy_impl()
[2m[36m(pid=42718)[0m     @     0x7fb4408e54f5 at::Tensor::copy_()
[2m[36m(pid=42697)[0m     @     0x7f78e66654f5 at::Tensor::copy_()
[2m[36m(pid=42697)[0m     @     0x7f78ec71079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42697)[0m     @     0x55bc69ab6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42697)[0m     @     0x55bc69a11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42697)[0m     @     0x55bc69a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42697)[0m     @     0x55bc69a9da20 method_vectorcall
[2m[36m(pid=42697)[0m     @     0x55bc69a11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42697)[0m     @     0x55bc69a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42697)[0m     @     0x55bc69a9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42697)[0m     @     0x55bc69a12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42697)[0m     @     0x55bc69a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42697)[0m     @     0x55bc69a9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42697)[0m     @     0x55bc69a12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42697)[0m     @     0x55bc69a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42697)[0m     @     0x55bc69a9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42697)[0m     @     0x55bc69a12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42697)[0m     @     0x55bc69a9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42697)[0m     @     0x55bc69a9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42697)[0m     @     0x55bc69a12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42780)[0m     @     0x7ed380e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42780)[0m     @     0x5645560f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42780)[0m     @     0x564556052b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42780)[0m     @     0x5645560ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42780)[0m     @     0x5645560dea20 method_vectorcall
[2m[36m(pid=42780)[0m     @     0x564556052bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42780)[0m     @     0x5645560ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42780)[0m     @     0x5645560de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42780)[0m     @     0x564556053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42780)[0m     @     0x5645560ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42780)[0m     @     0x5645560de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42780)[0m     @     0x564556053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42780)[0m     @     0x5645560ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42780)[0m     @     0x5645560de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42780)[0m     @     0x564556053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42780)[0m     @     0x5645560ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=42780)[0m     @     0x5645560de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42780)[0m     @     0x564556053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42726)[0m     @     0x7f515a3e95a4 at::native::copy_()
[2m[36m(pid=42726)[0m     @     0x7f515aad44f5 at::Tensor::copy_()
[2m[36m(pid=42730)[0m     @     0x7f59777395a4 at::native::copy_()
[2m[36m(pid=42718)[0m     @     0x7fb442db88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42726)[0m     @     0x7f515cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:43:52,127	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:43:52,127	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:43:52,129	ERROR trial_runner.py:567 -- Trial PPO_jss_env_c70fc_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=42827, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:43:52,138	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:43:52,138	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
[2m[36m(pid=42827)[0m E1105 10:43:52.122043 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.122201 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.122334 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.122416 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_c70fc_00000])
2020-11-05 10:43:52,149	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.
[2m[36m(pid=42730)[0m     @     0x7f5977e244f5 at::Tensor::copy_()
[2m[36m(pid=42730)[0m     @     0x7f597a2f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=42730)[0m     @     0x7f5977e244f5 at::Tensor::copy_()
[2m[36m(pid=42718)[0m     @     0x7fb4408e54f5 at::Tensor::copy_()
[2m[36m(pid=42718)[0m     @     0x7fb44699079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42718)[0m     @     0x557d85168fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42718)[0m     @     0x557d850c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42718)[0m     @     0x557d8514ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42718)[0m     @     0x557d8514fa20 method_vectorcall
[2m[36m(pid=42718)[0m     @     0x557d850c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42726)[0m     @     0x7f515aad44f5 at::Tensor::copy_()
[2m[36m(pid=42726)[0m     @     0x7f5160b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42726)[0m     @     0x55c8d9548fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42726)[0m     @     0x55c8d94a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42726)[0m     @     0x55c8d952ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42726)[0m     @     0x55c8d952fa20 method_vectorcall
[2m[36m(pid=42726)[0m     @     0x55c8d94a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42726)[0m     @     0x55c8d952ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42726)[0m     @     0x55c8d952f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42726)[0m     @     0x55c8d94a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42726)[0m     @     0x55c8d952ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42726)[0m     @     0x55c8d952f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42726)[0m     @     0x55c8d94a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42726)[0m     @     0x55c8d952ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42726)[0m     @     0x55c8d952f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42726)[0m     @     0x55c8d94a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42827)[0m E1105 10:43:52.131191 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8e79ac7e91b36714821ddf4301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.131316 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=428a4b4025d91890821ddf4301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.135623 42827 43997 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42827)[0m E1105 10:43:52.135962 42827 43997 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=37f711ca0d66f5bd4100f4fd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42827)[0m E1105 10:43:52.138876 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.139031 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.140166 42827 43997 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d7b1ed864d13e17f31c3fed901000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42827)[0m E1105 10:43:52.140849 42827 43997 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=38e2d2d27b716bfb821ddf4301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:43:52,159	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff3a9488b101000000.
[2m[36m(pid=42730)[0m     @     0x7f597decf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=42730)[0m     @     0x55dd107ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=42730)[0m     @     0x55dd10738b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x55dd107c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42730)[0m     @     0x55dd107c4a20 method_vectorcall
[2m[36m(pid=42730)[0m     @     0x55dd10738bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x55dd107c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42730)[0m     @     0x55dd107c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42730)[0m     @     0x55dd10739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x55dd107c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42730)[0m     @     0x55dd107c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42730)[0m     @     0x55dd10739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x55dd107c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42730)[0m     @     0x55dd107c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42730)[0m     @     0x55dd10739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42730)[0m     @     0x55dd107c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=42730)[0m     @     0x55dd107c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42730)[0m     @     0x55dd10739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42718)[0m     @     0x557d8514ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42718)[0m     @     0x557d8514f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42718)[0m     @     0x557d850c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42718)[0m     @     0x557d8514ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42718)[0m     @     0x557d8514f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42718)[0m     @     0x557d850c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42718)[0m     @     0x557d8514ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42718)[0m     @     0x557d8514f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42718)[0m     @     0x557d850c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42718)[0m     @     0x557d8514ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42718)[0m     @     0x557d8514f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42718)[0m     @     0x557d850c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=42726)[0m     @     0x55c8d952ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=42726)[0m     @     0x55c8d952f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=42726)[0m     @     0x55c8d94a4689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:43:52,170	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.
2020-11-05 10:43:52,170	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0d557f6601000000.
[2m[36m(pid=42827)[0m E1105 10:43:52.146086 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9e78156cc0f1c18db2413f7201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.146219 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=99a573b913884b0db2413f7201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.146291 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=716ad7ba0ea412bfb2413f7201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42827)[0m E1105 10:43:52.153694 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=a9f882a9e9e6260d3a9488b101000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=3a9488b101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.153825 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ce06aecb2528476b3a9488b101000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=3a9488b101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.153877 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=09b335db300897a83a9488b101000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=3a9488b101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42827)[0m E1105 10:43:52.162228 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f26c08df806c9b079d526f0201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9d526f0201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.162354 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3501fe38550fe14a9d526f0201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9d526f0201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.162431 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d9b69b81196304409d526f0201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=9d526f0201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:43:52,180	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:43:52,181	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
[2m[36m(pid=42827)[0m E1105 10:43:52.168531 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=559b33aa5754ccdd0d557f6601000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0d557f6601000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.168661 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=40900fb9361f40170d557f6601000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0d557f6601000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.168709 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=63b211a4d40ef39a0d557f6601000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0d557f6601000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=42827)[0m E1105 10:43:52.176146 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=42827)[0m E1105 10:43:52.176282 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=42827)[0m E1105 10:43:52.176343 42827 43997 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=ad47e6e6a1a1660b0314ce3001000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:43:52,191	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
2020-11-05 10:43:52,191	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:43:52,191	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:43:52,191	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:43:52,202	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff51728d3301000000.
2020-11-05 10:43:52,202	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:43:52,202	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0fae11b201000000.
2020-11-05 10:43:52,202	WARNING worker.py:1072 -- A worker died or was killed while executing task fff