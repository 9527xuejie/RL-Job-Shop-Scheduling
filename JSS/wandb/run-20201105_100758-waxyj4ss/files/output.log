2020-11-05 10:08:02,335	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_cae01_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=40780)[0m 2020-11-05 10:08:05,142	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=40724)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40724)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40724)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40724)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40724)[0m *** SIGSEGV (@0x0) received by PID 40724 (TID 0x7f3cde3e0700) from PID 0; stack trace: ***
[2m[36m(pid=40741)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40741)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40741)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40741)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40741)[0m *** SIGSEGV (@0x0) received by PID 40741 (TID 0x7efe98c24700) from PID 0; stack trace: ***
[2m[36m(pid=40741)[0m     @     0x7efe987fd390 (unknown)
[2m[36m(pid=40741)[0m     @     0x7ecf98339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40741)[0m     @     0x7ecf97a647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40741)[0m     @     0x7ecf97a678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40741)[0m     @     0x7ecf97a67ad3 at::TensorIterator::for_each()
[2m[36m(pid=40741)[0m     @     0x7ecf97a67d91 at::TensorIterator::for_each()
[2m[36m(pid=40741)[0m     @     0x7ecf9834ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40741)[0m     @     0x7ecf9836dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40774)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40774)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40774)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40774)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40774)[0m *** SIGSEGV (@0x0) received by PID 40774 (TID 0x7f50ce5d0700) from PID 0; stack trace: ***
[2m[36m(pid=40774)[0m     @     0x7f50ce1a9390 (unknown)
[2m[36m(pid=40774)[0m     @     0x7f21ce13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40774)[0m     @     0x7f21cd8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40774)[0m     @     0x7f21cd8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40774)[0m     @     0x7f21cd868ad3 at::TensorIterator::for_each()
[2m[36m(pid=40774)[0m     @     0x7f21cd868d91 at::TensorIterator::for_each()
[2m[36m(pid=40774)[0m     @     0x7f21ce14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40774)[0m     @     0x7f21ce16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40751)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40751)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40751)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40751)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40751)[0m *** SIGSEGV (@0x0) received by PID 40751 (TID 0x7f6442b82700) from PID 0; stack trace: ***
[2m[36m(pid=40751)[0m     @     0x7f644275b390 (unknown)
[2m[36m(pid=40751)[0m     @     0x7f35424f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40751)[0m     @     0x7f3541c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40751)[0m     @     0x7f3541c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40751)[0m     @     0x7f3541c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=40751)[0m     @     0x7f3541c27d91 at::TensorIterator::for_each()
[2m[36m(pid=40751)[0m     @     0x7f354250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40751)[0m     @     0x7f354252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40753)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40753)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40753)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40753)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40753)[0m *** SIGSEGV (@0x0) received by PID 40753 (TID 0x7f4e1bac6700) from PID 0; stack trace: ***
[2m[36m(pid=40753)[0m     @     0x7f4e1b69f390 (unknown)
[2m[36m(pid=40753)[0m     @     0x7f1f1b43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40753)[0m     @     0x7f1f1ab657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40753)[0m     @     0x7f1f1ab688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40753)[0m     @     0x7f1f1ab68ad3 at::TensorIterator::for_each()
[2m[36m(pid=40728)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40728)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40728)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40728)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40728)[0m *** SIGSEGV (@0x0) received by PID 40728 (TID 0x7f9dd9a28700) from PID 0; stack trace: ***
[2m[36m(pid=40728)[0m     @     0x7f9dd9601390 (unknown)
[2m[36m(pid=40728)[0m     @     0x7f6ed95a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40728)[0m     @     0x7f6ed8ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40728)[0m     @     0x7f6ed8cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40728)[0m     @     0x7f6ed8cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=40728)[0m     @     0x7f6ed8cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=40728)[0m     @     0x7f6ed95b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40728)[0m     @     0x7f6ed95d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40758)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40758)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40758)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40758)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40758)[0m *** SIGSEGV (@0x0) received by PID 40758 (TID 0x7f708d874700) from PID 0; stack trace: ***
[2m[36m(pid=40758)[0m     @     0x7f708d44d390 (unknown)
[2m[36m(pid=40758)[0m     @     0x7f418d377f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40758)[0m     @     0x7f418caa27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40758)[0m     @     0x7f418caa58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40758)[0m     @     0x7f418caa5ad3 at::TensorIterator::for_each()
[2m[36m(pid=40757)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40757)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40757)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40757)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40757)[0m *** SIGSEGV (@0x0) received by PID 40757 (TID 0x7f98cec32700) from PID 0; stack trace: ***
[2m[36m(pid=40757)[0m     @     0x7f98ce80b390 (unknown)
[2m[36m(pid=40757)[0m     @     0x7f69ce78ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40757)[0m     @     0x7f69cdeb97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40757)[0m     @     0x7f69cdebc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40757)[0m     @     0x7f69cdebcad3 at::TensorIterator::for_each()
[2m[36m(pid=40735)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40735)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40735)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40735)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40735)[0m *** SIGSEGV (@0x0) received by PID 40735 (TID 0x7fea6113e700) from PID 0; stack trace: ***
[2m[36m(pid=40735)[0m     @     0x7fea60d17390 (unknown)
[2m[36m(pid=40735)[0m     @     0x7fbb60bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40735)[0m     @     0x7fbb602fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40735)[0m     @     0x7fbb602ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40735)[0m     @     0x7fbb602ffad3 at::TensorIterator::for_each()
[2m[36m(pid=40735)[0m     @     0x7fbb602ffd91 at::TensorIterator::for_each()
[2m[36m(pid=40735)[0m     @     0x7fbb60be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40735)[0m     @     0x7fbb60c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40784)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40784)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40784)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40784)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40784)[0m *** SIGSEGV (@0x0) received by PID 40784 (TID 0x7f0eed2a2700) from PID 0; stack trace: ***
[2m[36m(pid=40784)[0m     @     0x7f0eece7b390 (unknown)
[2m[36m(pid=40784)[0m     @     0x7edfece12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40784)[0m     @     0x7edfec53d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40784)[0m     @     0x7edfec5408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40784)[0m     @     0x7edfec540ad3 at::TensorIterator::for_each()
[2m[36m(pid=40784)[0m     @     0x7edfec540d91 at::TensorIterator::for_each()
[2m[36m(pid=40747)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40747)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40747)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40747)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40747)[0m *** SIGSEGV (@0x0) received by PID 40747 (TID 0x7f2dce9d1700) from PID 0; stack trace: ***
[2m[36m(pid=40747)[0m     @     0x7f2dce5aa390 (unknown)
[2m[36m(pid=40747)[0m     @     0x7efece4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40747)[0m     @     0x7efecdc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40747)[0m     @     0x7efecdc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40747)[0m     @     0x7efecdc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=40747)[0m     @     0x7efecdc27d91 at::TensorIterator::for_each()
[2m[36m(pid=40747)[0m     @     0x7efece50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40747)[0m     @     0x7efece52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40744)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40744)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40744)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40744)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40744)[0m *** SIGSEGV (@0x0) received by PID 40744 (TID 0x7f8f61576700) from PID 0; stack trace: ***
[2m[36m(pid=40744)[0m     @     0x7f8f6114f390 (unknown)
[2m[36m(pid=40744)[0m     @     0x7f60610b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40744)[0m     @     0x7f60607e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40771)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40771)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40771)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40771)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40771)[0m *** SIGSEGV (@0x0) received by PID 40771 (TID 0x7f0f6a268700) from PID 0; stack trace: ***
[2m[36m(pid=40771)[0m     @     0x7f0f69e41390 (unknown)
[2m[36m(pid=40771)[0m     @     0x7ee069d73f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40771)[0m     @     0x7ee06949e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40771)[0m     @     0x7ee0694a18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40771)[0m     @     0x7ee0694a1ad3 at::TensorIterator::for_each()
[2m[36m(pid=40771)[0m     @     0x7ee0694a1d91 at::TensorIterator::for_each()
[2m[36m(pid=40771)[0m     @     0x7ee069d84b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40771)[0m     @     0x7ee069da7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40653)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40653)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40653)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40653)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40653)[0m *** SIGSEGV (@0x0) received by PID 40653 (TID 0x7fb3a08e4700) from PID 0; stack trace: ***
[2m[36m(pid=40653)[0m     @     0x7fb3a04bd390 (unknown)
[2m[36m(pid=40653)[0m     @     0x7f84a03e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40665)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40665)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40665)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40665)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40665)[0m *** SIGSEGV (@0x0) received by PID 40665 (TID 0x7fe2a228a700) from PID 0; stack trace: ***
[2m[36m(pid=40665)[0m     @     0x7fe2a1e63390 (unknown)
[2m[36m(pid=40665)[0m     @     0x7fb3a1df7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40650)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40650)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40650)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40650)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40650)[0m *** SIGSEGV (@0x0) received by PID 40650 (TID 0x7fe09aa8e700) from PID 0; stack trace: ***
[2m[36m(pid=40715)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40715)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40715)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40715)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40715)[0m *** SIGSEGV (@0x0) received by PID 40715 (TID 0x7f2b0015c700) from PID 0; stack trace: ***
[2m[36m(pid=40715)[0m     @     0x7f2affd35390 (unknown)
[2m[36m(pid=40662)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40662)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40662)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40662)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40662)[0m *** SIGSEGV (@0x0) received by PID 40662 (TID 0x7f5081957700) from PID 0; stack trace: ***
[2m[36m(pid=40749)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40749)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40749)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40749)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40749)[0m *** SIGSEGV (@0x0) received by PID 40749 (TID 0x7f62b40a0700) from PID 0; stack trace: ***
[2m[36m(pid=40749)[0m     @     0x7f62b3c79390 (unknown)
[2m[36m(pid=40749)[0m     @     0x7f33b3bf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40749)[0m     @     0x7f33b33227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40749)[0m     @     0x7f33b33258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40749)[0m     @     0x7f33b3325ad3 at::TensorIterator::for_each()
[2m[36m(pid=40749)[0m     @     0x7f33b3325d91 at::TensorIterator::for_each()
[2m[36m(pid=40749)[0m     @     0x7f33b3c08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40749)[0m     @     0x7f33b3c2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40657)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40657)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40657)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40657)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40657)[0m *** SIGSEGV (@0x0) received by PID 40657 (TID 0x7fe2e6324700) from PID 0; stack trace: ***
[2m[36m(pid=40768)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40768)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40768)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40759)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40759)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40759)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40670)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40727)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40727)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40727)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40727)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40727)[0m *** SIGSEGV (@0x0) received by PID 40727 (TID 0x7f4bc6706700) from PID 0; stack trace: ***
[2m[36m(pid=40727)[0m     @     0x7f4bc62df390 (unknown)
[2m[36m(pid=40727)[0m     @     0x7f1cc6279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40727)[0m     @     0x7f1cc59a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40727)[0m     @     0x7f1cc59a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40727)[0m     @     0x7f1cc59a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=40727)[0m     @     0x7f1cc59a7d91 at::TensorIterator::for_each()
[2m[36m(pid=40727)[0m     @     0x7f1cc628ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40727)[0m     @     0x7f1cc62adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40660)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40660)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40660)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40660)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40660)[0m *** SIGSEGV (@0x0) received by PID 40660 (TID 0x7f35cd529700) from PID 0; stack trace: ***
[2m[36m(pid=40660)[0m     @     0x7f35cd102390 (unknown)
[2m[36m(pid=40660)[0m     @     0x7f06cd088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40660)[0m     @     0x7f06cc7b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40660)[0m     @     0x7f06cc7b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40660)[0m     @     0x7f06cc7b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=40649)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40649)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40649)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40649)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40649)[0m *** SIGSEGV (@0x0) received by PID 40649 (TID 0x7f63ba48e700) from PID 0; stack trace: ***
[2m[36m(pid=40663)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40663)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40663)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40766)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40766)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40766)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40656)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40656)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40656)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40656)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40656)[0m *** SIGSEGV (@0x0) received by PID 40656 (TID 0x7f5ed57a2700) from PID 0; stack trace: ***
[2m[36m(pid=40656)[0m     @     0x7f5ed537b390 (unknown)
[2m[36m(pid=40656)[0m     @     0x7f2fd52fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40656)[0m     @     0x7f2fd4a277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40701)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40701)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40701)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40701)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40701)[0m *** SIGSEGV (@0x0) received by PID 40701 (TID 0x7fc0db959700) from PID 0; stack trace: ***
[2m[36m(pid=40701)[0m     @     0x7fc0db532390 (unknown)
[2m[36m(pid=40764)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40764)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40764)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40764)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40764)[0m *** SIGSEGV (@0x0) received by PID 40764 (TID 0x7f1b65a43700) from PID 0; stack trace: ***
[2m[36m(pid=40764)[0m     @     0x7f1b6561c390 (unknown)
[2m[36m(pid=40764)[0m     @     0x7eec655bff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40764)[0m     @     0x7eec64cea7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40646)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40646)[0m *** SIGSEGV (@0x0) received by PID 40646 (TID 0x7f6b0c141700) from PID 0; stack trace: ***
[2m[36m(pid=40646)[0m     @     0x7f6b0bd1a390 (unknown)
[2m[36m(pid=40646)[0m     @     0x7f3c0bad4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40646)[0m     @     0x7f3c0b1ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40646)[0m     @     0x7f3c0b2028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40769)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40769)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40769)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40769)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40769)[0m *** SIGSEGV (@0x0) received by PID 40769 (TID 0x7f6835025700) from PID 0; stack trace: ***
[2m[36m(pid=40769)[0m     @     0x7f6834bfe390 (unknown)
[2m[36m(pid=40769)[0m     @     0x7f3934b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40769)[0m     @     0x7f39342667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40718)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40718)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40718)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40718)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40718)[0m *** SIGSEGV (@0x0) received by PID 40718 (TID 0x7f7c08d29700) from PID 0; stack trace: ***
[2m[36m(pid=40718)[0m     @     0x7f7c08902390 (unknown)
[2m[36m(pid=40718)[0m     @     0x7f4d08825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40664)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40664)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40664)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40664)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40664)[0m *** SIGSEGV (@0x0) received by PID 40664 (TID 0x7fa7faaac700) from PID 0; stack trace: ***
[2m[36m(pid=40664)[0m     @     0x7fa7fa685390 (unknown)
[2m[36m(pid=40731)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40731)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40731)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40731)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40731)[0m *** SIGSEGV (@0x0) received by PID 40731 (TID 0x7f651e517700) from PID 0; stack trace: ***
[2m[36m(pid=40731)[0m     @     0x7f651e0f0390 (unknown)
[2m[36m(pid=40731)[0m     @     0x7f361e0a8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40731)[0m     @     0x7f361d7d37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40731)[0m     @     0x7f361d7d68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40676)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40676)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40676)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40676)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40676)[0m *** SIGSEGV (@0x0) received by PID 40676 (TID 0x7f692a649700) from PID 0; stack trace: ***
[2m[36m(pid=40676)[0m     @     0x7f692a222390 (unknown)
[2m[36m(pid=40676)[0m     @     0x7f3a2a13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40676)[0m     @     0x7f3a298657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40676)[0m     @     0x7f3a298688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40648)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40648)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40648)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40648)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40648)[0m *** SIGSEGV (@0x0) received by PID 40648 (TID 0x7f17548e8700) from PID 0; stack trace: ***
[2m[36m(pid=40648)[0m     @     0x7f17544c1390 (unknown)
[2m[36m(pid=40648)[0m     @     0x7ee85445af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40648)[0m     @     0x7ee853b857db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40648)[0m     @     0x7ee853b888f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40661)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40661)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40661)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40661)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40661)[0m *** SIGSEGV (@0x0) received by PID 40661 (TID 0x7fc0e2f9d700) from PID 0; stack trace: ***
[2m[36m(pid=40661)[0m     @     0x7fc0e2b76390 (unknown)
[2m[36m(pid=40661)[0m     @     0x7f91e2a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40661)[0m     @     0x7f91e214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40661)[0m     @     0x7f91e214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40760)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40760)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40760)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40760)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40760)[0m *** SIGSEGV (@0x0) received by PID 40760 (TID 0x7f2892c4e700) from PID 0; stack trace: ***
[2m[36m(pid=40760)[0m     @     0x7f2892827390 (unknown)
[2m[36m(pid=40760)[0m     @     0x7ef9927bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40760)[0m     @     0x7ef991ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40760)[0m     @     0x7ef991ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40723)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40723)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40723)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40723)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40723)[0m *** SIGSEGV (@0x0) received by PID 40723 (TID 0x7f1662b1a700) from PID 0; stack trace: ***
[2m[36m(pid=40723)[0m     @     0x7f16626f3390 (unknown)
[2m[36m(pid=40723)[0m     @     0x7ee7624f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40723)[0m     @     0x7ee761c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40723)[0m     @     0x7ee761c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40723)[0m     @     0x7ee761c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=40723)[0m     @     0x7ee761c27d91 at::TensorIterator::for_each()
[2m[36m(pid=40723)[0m     @     0x7ee76250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40723)[0m     @     0x7ee76252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40723)[0m     @     0x7ee7619cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40723)[0m     @     0x7ee7619cd388 at::native::copy_impl()
[2m[36m(pid=40723)[0m     @     0x7ee7619cf5a4 at::native::copy_()
[2m[36m(pid=40756)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40756)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40756)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40756)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40756)[0m *** SIGSEGV (@0x0) received by PID 40756 (TID 0x7f8a4a6fc700) from PID 0; stack trace: ***
[2m[36m(pid=40756)[0m     @     0x7f8a4a2d5390 (unknown)
[2m[36m(pid=40756)[0m     @     0x7f5b4a255f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40756)[0m     @     0x7f5b499807db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40756)[0m     @     0x7f5b499838f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40756)[0m     @     0x7f5b49983ad3 at::TensorIterator::for_each()
[2m[36m(pid=40756)[0m     @     0x7f5b49983d91 at::TensorIterator::for_each()
[2m[36m(pid=40756)[0m     @     0x7f5b4a266b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40756)[0m     @     0x7f5b4a289c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40756)[0m     @     0x7f5b4972ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40756)[0m     @     0x7f5b49729388 at::native::copy_impl()
[2m[36m(pid=40756)[0m     @     0x7f5b4972b5a4 at::native::copy_()
[2m[36m(pid=40652)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40652)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40652)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40652)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40652)[0m *** SIGSEGV (@0x0) received by PID 40652 (TID 0x7fd88b3d9700) from PID 0; stack trace: ***
[2m[36m(pid=40652)[0m     @     0x7fd88afb2390 (unknown)
[2m[36m(pid=40652)[0m     @     0x7fa98af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40652)[0m     @     0x7fa98a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40652)[0m     @     0x7fa98a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40722)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40722)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40722)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40722)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40722)[0m *** SIGSEGV (@0x0) received by PID 40722 (TID 0x7f99d7e1c700) from PID 0; stack trace: ***
[2m[36m(pid=40722)[0m     @     0x7f99d79f5390 (unknown)
[2m[36m(pid=40722)[0m     @     0x7f6ad78def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40722)[0m     @     0x7f6ad70097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40655)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40655)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40655)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40655)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40655)[0m *** SIGSEGV (@0x0) received by PID 40655 (TID 0x7f187363d700) from PID 0; stack trace: ***
[2m[36m(pid=40655)[0m     @     0x7f1873216390 (unknown)
[2m[36m(pid=40655)[0m     @     0x7ee973124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40655)[0m     @     0x7ee97284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40655)[0m     @     0x7ee9728528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40746)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40746)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40746)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40746)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40746)[0m *** SIGSEGV (@0x0) received by PID 40746 (TID 0x7fd376dc2700) from PID 0; stack trace: ***
[2m[36m(pid=40746)[0m     @     0x7fd37699b390 (unknown)
[2m[36m(pid=40651)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40651)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40651)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40651)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40651)[0m *** SIGSEGV (@0x0) received by PID 40651 (TID 0x7f1151621700) from PID 0; stack trace: ***
[2m[36m(pid=40651)[0m     @     0x7f11511fa390 (unknown)
[2m[36m(pid=40651)[0m     @     0x7ee2510b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40651)[0m     @     0x7ee2507e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40651)[0m     @     0x7ee2507e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40651)[0m     @     0x7ee2507e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=40720)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40720)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40720)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40720)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40720)[0m *** SIGSEGV (@0x0) received by PID 40720 (TID 0x7f95469b9700) from PID 0; stack trace: ***
[2m[36m(pid=40720)[0m     @     0x7f9546592390 (unknown)
[2m[36m(pid=40720)[0m     @     0x7f66464f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40720)[0m     @     0x7f6645c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40720)[0m     @     0x7f6645c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40720)[0m     @     0x7f6645c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=40720)[0m     @     0x7f6645c27d91 at::TensorIterator::for_each()
[2m[36m(pid=40720)[0m     @     0x7f664650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40720)[0m     @     0x7f664652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40720)[0m     @     0x7f66459cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40720)[0m     @     0x7f66459cd388 at::native::copy_impl()
[2m[36m(pid=40720)[0m     @     0x7f66459cf5a4 at::native::copy_()
[2m[36m(pid=40783)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40783)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40783)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40783)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40783)[0m *** SIGSEGV (@0x0) received by PID 40783 (TID 0x7f74b0733700) from PID 0; stack trace: ***
[2m[36m(pid=40783)[0m     @     0x7f74b030c390 (unknown)
[2m[36m(pid=40783)[0m     @     0x7f45b0297f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40783)[0m     @     0x7f45af9c27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40783)[0m     @     0x7f45af9c58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40721)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40721)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40721)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40721)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40721)[0m *** SIGSEGV (@0x0) received by PID 40721 (TID 0x7f6da6bc6700) from PID 0; stack trace: ***
[2m[36m(pid=40721)[0m     @     0x7f6da679f390 (unknown)
[2m[36m(pid=40721)[0m     @     0x7f3ea64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40721)[0m     @     0x7f3ea5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40714)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40714)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40714)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40714)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40714)[0m *** SIGSEGV (@0x0) received by PID 40714 (TID 0x7fac453d1700) from PID 0; stack trace: ***
[2m[36m(pid=40714)[0m     @     0x7fac44faa390 (unknown)
[2m[36m(pid=40714)[0m     @     0x7f7d44ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40714)[0m     @     0x7f7d445cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40714)[0m     @     0x7f7d445d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40673)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40673)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40673)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40673)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40673)[0m *** SIGSEGV (@0x0) received by PID 40673 (TID 0x7f437d731700) from PID 0; stack trace: ***
[2m[36m(pid=40726)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40726)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40726)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40726)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40726)[0m *** SIGSEGV (@0x0) received by PID 40726 (TID 0x7f50d1550700) from PID 0; stack trace: ***
[2m[36m(pid=40726)[0m     @     0x7f50d1129390 (unknown)
[2m[36m(pid=40726)[0m     @     0x7f21d0f4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40726)[0m     @     0x7f21d067a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40726)[0m     @     0x7f21d067d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40666)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40666)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40666)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40666)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40666)[0m *** SIGSEGV (@0x0) received by PID 40666 (TID 0x7f1d57478700) from PID 0; stack trace: ***
[2m[36m(pid=40666)[0m     @     0x7f1d57051390 (unknown)
[2m[36m(pid=40666)[0m     @     0x7eee56feff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40666)[0m     @     0x7eee5671a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40666)[0m     @     0x7eee5671d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40712)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40712)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40712)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40712)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40712)[0m *** SIGSEGV (@0x0) received by PID 40712 (TID 0x7fbdaa81b700) from PID 0; stack trace: ***
[2m[36m(pid=40647)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40647)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40647)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40647)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40647)[0m *** SIGSEGV (@0x0) received by PID 40647 (TID 0x7f481f023700) from PID 0; stack trace: ***
[2m[36m(pid=40647)[0m     @     0x7f481ebfc390 (unknown)
[2m[36m(pid=40710)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40710)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40710)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40710)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40710)[0m *** SIGSEGV (@0x0) received by PID 40710 (TID 0x7ff5b9699700) from PID 0; stack trace: ***
[2m[36m(pid=40710)[0m     @     0x7ff5b9272390 (unknown)
[2m[36m(pid=40669)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40669)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40669)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40669)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40669)[0m *** SIGSEGV (@0x0) received by PID 40669 (TID 0x7f8f92590700) from PID 0; stack trace: ***
[2m[36m(pid=40645)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40645)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40645)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40645)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40645)[0m *** SIGSEGV (@0x0) received by PID 40645 (TID 0x7fd885f94700) from PID 0; stack trace: ***
[2m[36m(pid=40645)[0m     @     0x7fd885b6d390 (unknown)
[2m[36m(pid=40645)[0m     @     0x7fa985a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40668)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40668)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40668)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40668)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40668)[0m *** SIGSEGV (@0x0) received by PID 40668 (TID 0x7f75320a2700) from PID 0; stack trace: ***
[2m[36m(pid=40668)[0m     @     0x7f7531c7b390 (unknown)
[2m[36m(pid=40668)[0m     @     0x7f4631c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40736)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40736)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40736)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40736)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40736)[0m *** SIGSEGV (@0x0) received by PID 40736 (TID 0x7f4514ce9700) from PID 0; stack trace: ***
[2m[36m(pid=40736)[0m     @     0x7f45148c2390 (unknown)
[2m[36m(pid=40732)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40732)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40732)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40719)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40719)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40719)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40719)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40719)[0m *** SIGSEGV (@0x0) received by PID 40719 (TID 0x7f9a7def8700) from PID 0; stack trace: ***
[2m[36m(pid=40719)[0m     @     0x7f9a7dad1390 (unknown)
[2m[36m(pid=40719)[0m     @     0x7f6b7da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40719)[0m     @     0x7f6b7d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40725)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40725)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40725)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40725)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40725)[0m *** SIGSEGV (@0x0) received by PID 40725 (TID 0x7f21a856e700) from PID 0; stack trace: ***
[2m[36m(pid=40725)[0m     @     0x7f21a8147390 (unknown)
[2m[36m(pid=40725)[0m     @     0x7ef2a80cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40725)[0m     @     0x7ef2a77f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40667)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40667)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40667)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40667)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40667)[0m *** SIGSEGV (@0x0) received by PID 40667 (TID 0x7faa7b9ec700) from PID 0; stack trace: ***
[2m[36m(pid=40677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40677)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40677)[0m *** SIGSEGV (@0x0) received by PID 40677 (TID 0x7f279a3d2700) from PID 0; stack trace: ***
[2m[36m(pid=40677)[0m     @     0x7f2799fab390 (unknown)
[2m[36m(pid=40677)[0m     @     0x7ef899e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40677)[0m     @     0x7ef89954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40777)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40777)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40777)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40708)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40708)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40708)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40708)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40708)[0m *** SIGSEGV (@0x0) received by PID 40708 (TID 0x7f63461cd700) from PID 0; stack trace: ***
[2m[36m(pid=40708)[0m     @     0x7f6345da6390 (unknown)
[2m[36m(pid=40708)[0m     @     0x7f3445d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40708)[0m     @     0x7f344547d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40717)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40717)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40717)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40654)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40654)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40654)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40654)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40654)[0m *** SIGSEGV (@0x0) received by PID 40654 (TID 0x7f49782ca700) from PID 0; stack trace: ***
[2m[36m(pid=40654)[0m     @     0x7f4977ea3390 (unknown)
[2m[36m(pid=40654)[0m     @     0x7f1a77e36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40729)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40729)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40729)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40729)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40729)[0m *** SIGSEGV (@0x0) received by PID 40729 (TID 0x7f0948152700) from PID 0; stack trace: ***
[2m[36m(pid=40729)[0m     @     0x7f0947d2b390 (unknown)
[2m[36m(pid=40729)[0m     @     0x7eda47bc7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40729)[0m     @     0x7eda472f27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40681)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40681)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40681)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40681)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40681)[0m *** SIGSEGV (@0x0) received by PID 40681 (TID 0x7f2b4adc8700) from PID 0; stack trace: ***
[2m[36m(pid=40681)[0m     @     0x7f2b4a9a1390 (unknown)
[2m[36m(pid=40681)[0m     @     0x7efc4a93af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40681)[0m     @     0x7efc4a0657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40681)[0m     @     0x7efc4a0688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40733)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40733)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40733)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40733)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40733)[0m *** SIGSEGV (@0x0) received by PID 40733 (TID 0x7fcc63d3d700) from PID 0; stack trace: ***
[2m[36m(pid=40733)[0m     @     0x7fcc63916390 (unknown)
[2m[36m(pid=40733)[0m     @     0x7f9d638b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40733)[0m     @     0x7f9d62fdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40733)[0m     @     0x7f9d62fdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40761)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40761)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40761)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40761)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40761)[0m *** SIGSEGV (@0x0) received by PID 40761 (TID 0x7fe5eb0fe700) from PID 0; stack trace: ***
[2m[36m(pid=40761)[0m     @     0x7fe5eacd7390 (unknown)
[2m[36m(pid=40761)[0m     @     0x7fb6eac6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40761)[0m     @     0x7fb6ea3957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40761)[0m     @     0x7fb6ea3988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40679)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40679)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40679)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40679)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40679)[0m *** SIGSEGV (@0x0) received by PID 40679 (TID 0x7f2b0b3f8700) from PID 0; stack trace: ***
[2m[36m(pid=40679)[0m     @     0x7f2b0afd1390 (unknown)
[2m[36m(pid=40704)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40704)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40704)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40704)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40704)[0m *** SIGSEGV (@0x0) received by PID 40704 (TID 0x7f0dd4aba700) from PID 0; stack trace: ***
[2m[36m(pid=40704)[0m     @     0x7f0dd4693390 (unknown)
[2m[36m(pid=40704)[0m     @     0x7eded4563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40704)[0m     @     0x7eded3c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40704)[0m     @     0x7eded3c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40716)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40716)[0m *** SIGSEGV (@0x0) received by PID 40716 (TID 0x7fc064998700) from PID 0; stack trace: ***
[2m[36m(pid=40716)[0m     @     0x7fc064571390 (unknown)
[2m[36m(pid=40716)[0m     @     0x7f9164507f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40716)[0m     @     0x7f9163c327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40716)[0m     @     0x7f9163c358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40724)[0m     @     0x7f3cddfb9390 (unknown)
[2m[36m(pid=40724)[0m     @     0x7f0ddde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40724)[0m     @     0x7f0ddd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40724)[0m     @     0x7f0ddd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40724)[0m     @     0x7f0ddd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=40724)[0m     @     0x7f0ddd552d91 at::TensorIterator::for_each()
[2m[36m(pid=40741)[0m     @     0x7ecf9780fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40741)[0m     @     0x7ecf9780d388 at::native::copy_impl()
[2m[36m(pid=40741)[0m     @     0x7ecf9780f5a4 at::native::copy_()
[2m[36m(pid=40741)[0m     @     0x7ecf97efa4f5 at::Tensor::copy_()
[2m[36m(pid=40741)[0m     @     0x7ecf9a3cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40741)[0m     @     0x7ecf97efa4f5 at::Tensor::copy_()
[2m[36m(pid=40774)[0m     @     0x7f21cd610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40774)[0m     @     0x7f21cd60e388 at::native::copy_impl()
[2m[36m(pid=40774)[0m     @     0x7f21cd6105a4 at::native::copy_()
[2m[36m(pid=40774)[0m     @     0x7f21cdcfb4f5 at::Tensor::copy_()
[2m[36m(pid=40774)[0m     @     0x7f21d01ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40774)[0m     @     0x7f21cdcfb4f5 at::Tensor::copy_()
[2m[36m(pid=40774)[0m     @     0x7f21d3da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40774)[0m     @     0x5581bc576fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40774)[0m     @     0x5581bc4d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40774)[0m     @     0x5581bc55cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40774)[0m     @     0x5581bc55da20 method_vectorcall
[2m[36m(pid=40774)[0m     @     0x5581bc4d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40774)[0m     @     0x5581bc55cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40774)[0m     @     0x5581bc55d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40751)[0m     @     0x7f35419cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40751)[0m     @     0x7f35419cd388 at::native::copy_impl()
[2m[36m(pid=40751)[0m     @     0x7f35419cf5a4 at::native::copy_()
[2m[36m(pid=40751)[0m     @     0x7f35420ba4f5 at::Tensor::copy_()
[2m[36m(pid=40751)[0m     @     0x7f354458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40751)[0m     @     0x7f35420ba4f5 at::Tensor::copy_()
[2m[36m(pid=40753)[0m     @     0x7f1f1ab68d91 at::TensorIterator::for_each()
[2m[36m(pid=40753)[0m     @     0x7f1f1b44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40753)[0m     @     0x7f1f1b46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40753)[0m     @     0x7f1f1a910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40753)[0m     @     0x7f1f1a90e388 at::native::copy_impl()
[2m[36m(pid=40753)[0m     @     0x7f1f1a9105a4 at::native::copy_()
[2m[36m(pid=40753)[0m     @     0x7f1f1affb4f5 at::Tensor::copy_()
[2m[36m(pid=40728)[0m     @     0x7f6ed8a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40728)[0m     @     0x7f6ed8a78388 at::native::copy_impl()
[2m[36m(pid=40728)[0m     @     0x7f6ed8a7a5a4 at::native::copy_()
[2m[36m(pid=40728)[0m     @     0x7f6ed91654f5 at::Tensor::copy_()
[2m[36m(pid=40728)[0m     @     0x7f6edb6388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40758)[0m     @     0x7f418caa5d91 at::TensorIterator::for_each()
[2m[36m(pid=40758)[0m     @     0x7f418d388b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40758)[0m     @     0x7f418d3abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40758)[0m     @     0x7f418c84da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40758)[0m     @     0x7f418c84b388 at::native::copy_impl()
[2m[36m(pid=40758)[0m     @     0x7f418c84d5a4 at::native::copy_()
[2m[36m(pid=40758)[0m     @     0x7f418cf384f5 at::Tensor::copy_()
[2m[36m(pid=40757)[0m     @     0x7f69cdebcd91 at::TensorIterator::for_each()
[2m[36m(pid=40757)[0m     @     0x7f69ce79fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40757)[0m     @     0x7f69ce7c2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40757)[0m     @     0x7f69cdc64a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40757)[0m     @     0x7f69cdc62388 at::native::copy_impl()
[2m[36m(pid=40757)[0m     @     0x7f69cdc645a4 at::native::copy_()
[2m[36m(pid=40757)[0m     @     0x7f69ce34f4f5 at::Tensor::copy_()
[2m[36m(pid=40745)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40745)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40745)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40745)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40745)[0m *** SIGSEGV (@0x0) received by PID 40745 (TID 0x7f22b76a7700) from PID 0; stack trace: ***
[2m[36m(pid=40735)[0m     @     0x7fbb600a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40735)[0m     @     0x7fbb600a5388 at::native::copy_impl()
[2m[36m(pid=40735)[0m     @     0x7fbb600a75a4 at::native::copy_()
[2m[36m(pid=40735)[0m     @     0x7fbb607924f5 at::Tensor::copy_()
[2m[36m(pid=40735)[0m     @     0x7fbb62c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40735)[0m     @     0x7fbb607924f5 at::Tensor::copy_()
[2m[36m(pid=40784)[0m     @     0x7edfece23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40784)[0m     @     0x7edfece46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40784)[0m     @     0x7edfec2e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40784)[0m     @     0x7edfec2e6388 at::native::copy_impl()
[2m[36m(pid=40784)[0m     @     0x7edfec2e85a4 at::native::copy_()
[2m[36m(pid=40784)[0m     @     0x7edfec9d34f5 at::Tensor::copy_()
[2m[36m(pid=40747)[0m     @     0x7efecd9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40747)[0m     @     0x7efecd9cd388 at::native::copy_impl()
[2m[36m(pid=40747)[0m     @     0x7efecd9cf5a4 at::native::copy_()
[2m[36m(pid=40747)[0m     @     0x7efece0ba4f5 at::Tensor::copy_()
[2m[36m(pid=40747)[0m     @     0x7efed058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40744)[0m     @     0x7f60607e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40744)[0m     @     0x7f60607e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=40744)[0m     @     0x7f60607e3d91 at::TensorIterator::for_each()
[2m[36m(pid=40744)[0m     @     0x7f60610c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40744)[0m     @     0x7f60610e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40771)[0m     @     0x7ee069249a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40771)[0m     @     0x7ee069247388 at::native::copy_impl()
[2m[36m(pid=40771)[0m     @     0x7ee0692495a4 at::native::copy_()
[2m[36m(pid=40771)[0m     @     0x7ee0699344f5 at::Tensor::copy_()
[2m[36m(pid=40771)[0m     @     0x7ee06be078de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40771)[0m     @     0x7ee0699344f5 at::Tensor::copy_()
[2m[36m(pid=40653)[0m     @     0x7f849fb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40653)[0m     @     0x7f849fb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40653)[0m     @     0x7f849fb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=40653)[0m     @     0x7f849fb11d91 at::TensorIterator::for_each()
[2m[36m(pid=40653)[0m     @     0x7f84a03f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40653)[0m     @     0x7f84a0417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40665)[0m     @     0x7fb3a15227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40665)[0m     @     0x7fb3a15258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40665)[0m     @     0x7fb3a1525ad3 at::TensorIterator::for_each()
[2m[36m(pid=40665)[0m     @     0x7fb3a1525d91 at::TensorIterator::for_each()
[2m[36m(pid=40665)[0m     @     0x7fb3a1e08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40665)[0m     @     0x7fb3a1e2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40650)[0m     @     0x7fe09a667390 (unknown)
[2m[36m(pid=40650)[0m     @     0x7fb19a395f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40650)[0m     @     0x7fb199ac07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40650)[0m     @     0x7fb199ac38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40650)[0m     @     0x7fb199ac3ad3 at::TensorIterator::for_each()
[2m[36m(pid=40715)[0m     @     0x7efbffaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40715)[0m     @     0x7efbff2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40715)[0m     @     0x7efbff2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40715)[0m     @     0x7efbff223ad3 at::TensorIterator::for_each()
[2m[36m(pid=40715)[0m     @     0x7efbff223d91 at::TensorIterator::for_each()
[2m[36m(pid=40715)[0m     @     0x7efbffb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40662)[0m     @     0x7f5081530390 (unknown)
[2m[36m(pid=40662)[0m     @     0x7f21812daf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40662)[0m     @     0x7f2180a057db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40662)[0m     @     0x7f2180a088f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40662)[0m     @     0x7f2180a08ad3 at::TensorIterator::for_each()
[2m[36m(pid=40662)[0m     @     0x7f2180a08d91 at::TensorIterator::for_each()
[2m[36m(pid=40662)[0m     @     0x7f21812ebb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40749)[0m     @     0x7f33b30cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40749)[0m     @     0x7f33b30cb388 at::native::copy_impl()
[2m[36m(pid=40749)[0m     @     0x7f33b30cd5a4 at::native::copy_()
[2m[36m(pid=40749)[0m     @     0x7f33b37b84f5 at::Tensor::copy_()
[2m[36m(pid=40749)[0m     @     0x7f33b5c8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40657)[0m     @     0x7fe2e5efd390 (unknown)
[2m[36m(pid=40657)[0m     @     0x7fb3e5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40657)[0m     @     0x7fb3e554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40657)[0m     @     0x7fb3e55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40657)[0m     @     0x7fb3e5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=40657)[0m     @     0x7fb3e5552d91 at::TensorIterator::for_each()
[2m[36m(pid=40657)[0m     @     0x7fb3e5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40768)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40768)[0m *** SIGSEGV (@0x0) received by PID 40768 (TID 0x7f553fc57700) from PID 0; stack trace: ***
[2m[36m(pid=40768)[0m     @     0x7f553f830390 (unknown)
[2m[36m(pid=40768)[0m     @     0x7f263f6aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40768)[0m     @     0x7f263edd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40768)[0m     @     0x7f263eddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=40680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=40680)[0m *** Aborted at 1604570890 (unix time) try "date -d @1604570890" if you are using GNU date ***
[2m[36m(pid=40680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40680)[0m *** SIGSEGV (@0x0) received by PID 40680 (TID 0x7fa37aa13700) from PID 0; stack trace: ***
[2m[36m(pid=40680)[0m     @     0x7fa37a5ec390 (unknown)
[2m[36m(pid=40680)[0m     @     0x7f747a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40680)[0m     @     0x7f7479c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40680)[0m     @     0x7f7479c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40759)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40759)[0m *** SIGSEGV (@0x0) received by PID 40759 (TID 0x7fefb8c72700) from PID 0; stack trace: ***
[2m[36m(pid=40759)[0m     @     0x7fefb884b390 (unknown)
[2m[36m(pid=40759)[0m     @     0x7fc0b860ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40759)[0m     @     0x7fc0b7d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40759)[0m     @     0x7fc0b7d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40759)[0m     @     0x7fc0b7d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=40670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40670)[0m *** SIGSEGV (@0x0) received by PID 40670 (TID 0x7f5d49aa4700) from PID 0; stack trace: ***
[2m[36m(pid=40670)[0m     @     0x7f5d4967d390 (unknown)
[2m[36m(pid=40670)[0m     @     0x7f2e49607f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40670)[0m     @     0x7f2e48d327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40670)[0m     @     0x7f2e48d358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40727)[0m     @     0x7f1cc574fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40727)[0m     @     0x7f1cc574d388 at::native::copy_impl()
[2m[36m(pid=40727)[0m     @     0x7f1cc574f5a4 at::native::copy_()
[2m[36m(pid=40727)[0m     @     0x7f1cc5e3a4f5 at::Tensor::copy_()
[2m[36m(pid=40727)[0m     @     0x7f1cc830d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40727)[0m     @     0x7f1cc5e3a4f5 at::Tensor::copy_()
[2m[36m(pid=40660)[0m     @     0x7f06cc7b6d91 at::TensorIterator::for_each()
[2m[36m(pid=40660)[0m     @     0x7f06cd099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40660)[0m     @     0x7f06cd0bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40660)[0m     @     0x7f06cc55ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40660)[0m     @     0x7f06cc55c388 at::native::copy_impl()
[2m[36m(pid=40660)[0m     @     0x7f06cc55e5a4 at::native::copy_()
[2m[36m(pid=40660)[0m     @     0x7f06ccc494f5 at::Tensor::copy_()
[2m[36m(pid=40649)[0m     @     0x7f63ba067390 (unknown)
[2m[36m(pid=40649)[0m     @     0x7f34ba005f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40649)[0m     @     0x7f34b97307db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40649)[0m     @     0x7f34b97338f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40649)[0m     @     0x7f34b9733ad3 at::TensorIterator::for_each()
[2m[36m(pid=40649)[0m     @     0x7f34b9733d91 at::TensorIterator::for_each()
[2m[36m(pid=40649)[0m     @     0x7f34ba016b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40663)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40663)[0m *** SIGSEGV (@0x0) received by PID 40663 (TID 0x7ff260d21700) from PID 0; stack trace: ***
[2m[36m(pid=40663)[0m     @     0x7ff2608fa390 (unknown)
[2m[36m(pid=40663)[0m     @     0x7fc360774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40663)[0m     @     0x7fc35fe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40663)[0m     @     0x7fc35fea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40663)[0m     @     0x7fc35fea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=40766)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40766)[0m *** SIGSEGV (@0x0) received by PID 40766 (TID 0x7f06b5ddc700) from PID 0; stack trace: ***
[2m[36m(pid=40766)[0m     @     0x7f06b59b5390 (unknown)
[2m[36m(pid=40766)[0m     @     0x7ed7b57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40766)[0m     @     0x7ed7b4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40766)[0m     @     0x7ed7b4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40766)[0m     @     0x7ed7b4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=40656)[0m     @     0x7f2fd4a2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40656)[0m     @     0x7f2fd4a2aad3 at::TensorIterator::for_each()
[2m[36m(pid=40656)[0m     @     0x7f2fd4a2ad91 at::TensorIterator::for_each()
[2m[36m(pid=40701)[0m     @     0x7f91db4cff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40701)[0m     @     0x7f91dabfa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40701)[0m     @     0x7f91dabfd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40701)[0m     @     0x7f91dabfdad3 at::TensorIterator::for_each()
[2m[36m(pid=40764)[0m     @     0x7eec64ced8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40764)[0m     @     0x7eec64cedad3 at::TensorIterator::for_each()
[2m[36m(pid=40764)[0m     @     0x7eec64cedd91 at::TensorIterator::for_each()
[2m[36m(pid=40646)[0m     @     0x7f3c0b202ad3 at::TensorIterator::for_each()
[2m[36m(pid=40646)[0m     @     0x7f3c0b202d91 at::TensorIterator::for_each()
[2m[36m(pid=40646)[0m     @     0x7f3c0bae5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40646)[0m     @     0x7f3c0bb08c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40769)[0m     @     0x7f39342698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40769)[0m     @     0x7f3934269ad3 at::TensorIterator::for_each()
[2m[36m(pid=40769)[0m     @     0x7f3934269d91 at::TensorIterator::for_each()
[2m[36m(pid=40769)[0m     @     0x7f3934b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40718)[0m     @     0x7f4d07f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40718)[0m     @     0x7f4d07f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40718)[0m     @     0x7f4d07f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=40664)[0m     @     0x7f78fa57cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40664)[0m     @     0x7f78f9ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40664)[0m     @     0x7f78f9caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40664)[0m     @     0x7f78f9caaad3 at::TensorIterator::for_each()
[2m[36m(pid=40731)[0m     @     0x7f361d7d6ad3 at::TensorIterator::for_each()
[2m[36m(pid=40731)[0m     @     0x7f361d7d6d91 at::TensorIterator::for_each()
[2m[36m(pid=40731)[0m     @     0x7f361e0b9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40731)[0m     @     0x7f361e0dcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40676)[0m     @     0x7f3a29868ad3 at::TensorIterator::for_each()
[2m[36m(pid=40676)[0m     @     0x7f3a29868d91 at::TensorIterator::for_each()
[2m[36m(pid=40676)[0m     @     0x7f3a2a14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40676)[0m     @     0x7f3a2a16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40648)[0m     @     0x7ee853b88ad3 at::TensorIterator::for_each()
[2m[36m(pid=40648)[0m     @     0x7ee853b88d91 at::TensorIterator::for_each()
[2m[36m(pid=40648)[0m     @     0x7ee85446bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40648)[0m     @     0x7ee85448ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40661)[0m     @     0x7f91e214fad3 at::TensorIterator::for_each()
[2m[36m(pid=40661)[0m     @     0x7f91e214fd91 at::TensorIterator::for_each()
[2m[36m(pid=40661)[0m     @     0x7f91e2a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40661)[0m     @     0x7f91e2a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40760)[0m     @     0x7ef991ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=40760)[0m     @     0x7ef991ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=40760)[0m     @     0x7ef9927ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40760)[0m     @     0x7ef9927efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40723)[0m     @     0x7ee7620ba4f5 at::Tensor::copy_()
[2m[36m(pid=40723)[0m     @     0x7ee76458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40723)[0m     @     0x7ee7620ba4f5 at::Tensor::copy_()
[2m[36m(pid=40723)[0m     @     0x7ee76816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40723)[0m     @     0x55d107f8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40723)[0m     @     0x55d107ee7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40723)[0m     @     0x55d107f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=40723)[0m     @     0x55d107f73a20 method_vectorcall
[2m[36m(pid=40723)[0m     @     0x55d107ee7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40723)[0m     @     0x55d107f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=40756)[0m     @     0x7f5b49e164f5 at::Tensor::copy_()
[2m[36m(pid=40756)[0m     @     0x7f5b4c2e98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40756)[0m     @     0x7f5b49e164f5 at::Tensor::copy_()
[2m[36m(pid=40756)[0m     @     0x7f5b4fec179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40756)[0m     @     0x55d85c5b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40756)[0m     @     0x55d85c513b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40756)[0m     @     0x55d85c59ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40756)[0m     @     0x55d85c59fa20 method_vectorcall
[2m[36m(pid=40756)[0m     @     0x55d85c513bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40756)[0m     @     0x55d85c59ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40756)[0m     @     0x55d85c59f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40756)[0m     @     0x55d85c514689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40756)[0m     @     0x55d85c59ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40756)[0m     @     0x55d85c59f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40756)[0m     @     0x55d85c514689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40756)[0m     @     0x55d85c59ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40756)[0m     @     0x55d85c59f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40756)[0m     @     0x55d85c514689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40756)[0m     @     0x55d85c59ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40756)[0m     @     0x55d85c59f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40652)[0m     @     0x7fa98a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=40652)[0m     @     0x7fa98a641d91 at::TensorIterator::for_each()
[2m[36m(pid=40652)[0m     @     0x7fa98af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40652)[0m     @     0x7fa98af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40722)[0m     @     0x7f6ad700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40722)[0m     @     0x7f6ad700cad3 at::TensorIterator::for_each()
[2m[36m(pid=40722)[0m     @     0x7f6ad700cd91 at::TensorIterator::for_each()
[2m[36m(pid=40655)[0m     @     0x7ee972852ad3 at::TensorIterator::for_each()
[2m[36m(pid=40655)[0m     @     0x7ee972852d91 at::TensorIterator::for_each()
[2m[36m(pid=40655)[0m     @     0x7ee973135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40746)[0m     @     0x7fa4767bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40746)[0m     @     0x7fa475ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40746)[0m     @     0x7fa475ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40651)[0m     @     0x7ee2507e3d91 at::TensorIterator::for_each()
[2m[36m(pid=40651)[0m     @     0x7ee2510c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40651)[0m     @     0x7ee2510e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40651)[0m     @     0x7ee25058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40720)[0m     @     0x7f66460ba4f5 at::Tensor::copy_()
[2m[36m(pid=40720)[0m     @     0x7f664858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40720)[0m     @     0x7f66460ba4f5 at::Tensor::copy_()
[2m[36m(pid=40720)[0m     @     0x7f664c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40720)[0m     @     0x55eb59400fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40720)[0m     @     0x55eb5935bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40720)[0m     @     0x55eb593e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=40720)[0m     @     0x55eb593e7a20 method_vectorcall
[2m[36m(pid=40720)[0m     @     0x55eb5935bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40720)[0m     @     0x55eb593e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=40720)[0m     @     0x55eb593e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40720)[0m     @     0x55eb5935c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40720)[0m     @     0x55eb593e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=40720)[0m     @     0x55eb593e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40720)[0m     @     0x55eb5935c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x7f45af9c5ad3 at::TensorIterator::for_each()
[2m[36m(pid=40783)[0m     @     0x7f45af9c5d91 at::TensorIterator::for_each()
[2m[36m(pid=40783)[0m     @     0x7f45b02a8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40783)[0m     @     0x7f45b02cbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40721)[0m     @     0x7f3ea5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40721)[0m     @     0x7f3ea5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=40714)[0m     @     0x7f7d445d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=40714)[0m     @     0x7f7d445d2d91 at::TensorIterator::for_each()
[2m[36m(pid=40714)[0m     @     0x7f7d44eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40714)[0m     @     0x7f7d44ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40673)[0m     @     0x7f437d30a390 (unknown)
[2m[36m(pid=40673)[0m     @     0x7f147d28af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40673)[0m     @     0x7f147c9b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40673)[0m     @     0x7f147c9b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40726)[0m     @     0x7f21d067dad3 at::TensorIterator::for_each()
[2m[36m(pid=40726)[0m     @     0x7f21d067dd91 at::TensorIterator::for_each()
[2m[36m(pid=40726)[0m     @     0x7f21d0f60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40726)[0m     @     0x7f21d0f83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40666)[0m     @     0x7eee5671dad3 at::TensorIterator::for_each()
[2m[36m(pid=40666)[0m     @     0x7eee5671dd91 at::TensorIterator::for_each()
[2m[36m(pid=40666)[0m     @     0x7eee57000b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40666)[0m     @     0x7eee57023c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40666)[0m     @     0x7eee564c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40712)[0m     @     0x7fbdaa3f4390 (unknown)
[2m[36m(pid=40712)[0m     @     0x7f8eaa34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40712)[0m     @     0x7f8ea9a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40712)[0m     @     0x7f8ea9a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40712)[0m     @     0x7f8ea9a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=40647)[0m     @     0x7f191eb76f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40647)[0m     @     0x7f191e2a17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40647)[0m     @     0x7f191e2a48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40647)[0m     @     0x7f191e2a4ad3 at::TensorIterator::for_each()
[2m[36m(pid=40710)[0m     @     0x7fc6b90b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40710)[0m     @     0x7fc6b87e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40710)[0m     @     0x7fc6b87e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40710)[0m     @     0x7fc6b87e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=40669)[0m     @     0x7f8f92169390 (unknown)
[2m[36m(pid=40669)[0m     @     0x7f609210df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40669)[0m     @     0x7f60918387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40669)[0m     @     0x7f609183b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40645)[0m     @     0x7fa9851357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40645)[0m     @     0x7fa9851388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40645)[0m     @     0x7fa985138ad3 at::TensorIterator::for_each()
[2m[36m(pid=40668)[0m     @     0x7f463133c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40668)[0m     @     0x7f463133f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40668)[0m     @     0x7f463133fad3 at::TensorIterator::for_each()
[2m[36m(pid=40736)[0m     @     0x7f1614825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40736)[0m     @     0x7f1613f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40736)[0m     @     0x7f1613f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40736)[0m     @     0x7f1613f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=40732)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40732)[0m *** SIGSEGV (@0x0) received by PID 40732 (TID 0x7f4ef4fe5700) from PID 0; stack trace: ***
[2m[36m(pid=40732)[0m     @     0x7f4ef4bbe390 (unknown)
[2m[36m(pid=40732)[0m     @     0x7f1ff4a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40732)[0m     @     0x7f1ff41b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40719)[0m     @     0x7f6b7d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40719)[0m     @     0x7f6b7d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=40719)[0m     @     0x7f6b7d138d91 at::TensorIterator::for_each()
[2m[36m(pid=40719)[0m     @     0x7f6b7da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40719)[0m     @     0x7f6b7da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40725)[0m     @     0x7ef2a77fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40725)[0m     @     0x7ef2a77fbad3 at::TensorIterator::for_each()
[2m[36m(pid=40725)[0m     @     0x7ef2a77fbd91 at::TensorIterator::for_each()
[2m[36m(pid=40725)[0m     @     0x7ef2a80deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40667)[0m     @     0x7faa7b5c5390 (unknown)
[2m[36m(pid=40667)[0m     @     0x7f7b7b572f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40667)[0m     @     0x7f7b7ac9d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40667)[0m     @     0x7f7b7aca08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40667)[0m     @     0x7f7b7aca0ad3 at::TensorIterator::for_each()
[2m[36m(pid=40677)[0m     @     0x7ef8995528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40677)[0m     @     0x7ef899552ad3 at::TensorIterator::for_each()
[2m[36m(pid=40677)[0m     @     0x7ef899552d91 at::TensorIterator::for_each()
[2m[36m(pid=40677)[0m     @     0x7ef899e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40677)[0m     @     0x7ef899e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40777)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40777)[0m *** SIGSEGV (@0x0) received by PID 40777 (TID 0x7f7e0cf03700) from PID 0; stack trace: ***
[2m[36m(pid=40777)[0m     @     0x7f7e0cadc390 (unknown)
[2m[36m(pid=40777)[0m     @     0x7f4f0ca36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40777)[0m     @     0x7f4f0c1617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40708)[0m     @     0x7f34454808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40708)[0m     @     0x7f3445480ad3 at::TensorIterator::for_each()
[2m[36m(pid=40708)[0m     @     0x7f3445480d91 at::TensorIterator::for_each()
[2m[36m(pid=40708)[0m     @     0x7f3445d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40708)[0m     @     0x7f3445d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40717)[0m PC: @                0x0 (unknown)
[2m[36m(pid=40717)[0m *** SIGSEGV (@0x0) received by PID 40717 (TID 0x7f3836109700) from PID 0; stack trace: ***
[2m[36m(pid=40717)[0m     @     0x7f3835ce2390 (unknown)
[2m[36m(pid=40717)[0m     @     0x7f0935c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40717)[0m     @     0x7f09353387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40654)[0m     @     0x7f1a775617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40654)[0m     @     0x7f1a775648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40729)[0m     @     0x7eda472f58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40729)[0m     @     0x7eda472f5ad3 at::TensorIterator::for_each()
[2m[36m(pid=40729)[0m     @     0x7eda472f5d91 at::TensorIterator::for_each()
[2m[36m(pid=40729)[0m     @     0x7eda47bd8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40729)[0m     @     0x7eda47bfbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40681)[0m     @     0x7efc4a068ad3 at::TensorIterator::for_each()
[2m[36m(pid=40681)[0m     @     0x7efc4a068d91 at::TensorIterator::for_each()
[2m[36m(pid=40681)[0m     @     0x7efc4a94bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40681)[0m     @     0x7efc4a96ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40733)[0m     @     0x7f9d62fdfad3 at::TensorIterator::for_each()
[2m[36m(pid=40733)[0m     @     0x7f9d62fdfd91 at::TensorIterator::for_each()
[2m[36m(pid=40733)[0m     @     0x7f9d638c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40733)[0m     @     0x7f9d638e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40761)[0m     @     0x7fb6ea398ad3 at::TensorIterator::for_each()
[2m[36m(pid=40761)[0m     @     0x7fb6ea398d91 at::TensorIterator::for_each()
[2m[36m(pid=40761)[0m     @     0x7fb6eac7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40761)[0m     @     0x7fb6eac9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40679)[0m     @     0x7efc0af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40679)[0m     @     0x7efc0a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40704)[0m     @     0x7eded3c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=40704)[0m     @     0x7eded3c91d91 at::TensorIterator::for_each()
[2m[36m(pid=40704)[0m     @     0x7eded4574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40704)[0m     @     0x7eded4597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40716)[0m     @     0x7f9163c35ad3 at::TensorIterator::for_each()
[2m[36m(pid=40716)[0m     @     0x7f9163c35d91 at::TensorIterator::for_each()
[2m[36m(pid=40716)[0m     @     0x7f9164518b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40716)[0m     @     0x7f916453bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40724)[0m     @     0x7f0ddde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40724)[0m     @     0x7f0ddde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40724)[0m     @     0x7f0ddd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40724)[0m     @     0x7f0ddd2f8388 at::native::copy_impl()
[2m[36m(pid=40741)[0m     @     0x7ecf9dfa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40741)[0m     @     0x5605dee61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40741)[0m     @     0x5605dedbcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40741)[0m     @     0x5605dee47baf _PyEval_EvalCodeWithName
[2m[36m(pid=40741)[0m     @     0x5605dee48a20 method_vectorcall
[2m[36m(pid=40741)[0m     @     0x5605dedbcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40741)[0m     @     0x5605dee47baf _PyEval_EvalCodeWithName
[2m[36m(pid=40741)[0m     @     0x5605dee48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40741)[0m     @     0x5605dedbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40741)[0m     @     0x5605dee47baf _PyEval_EvalCodeWithName
[2m[36m(pid=40741)[0m     @     0x5605dee48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40741)[0m     @     0x5605dedbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40741)[0m     @     0x5605dee47baf _PyEval_EvalCodeWithName
[2m[36m(pid=40741)[0m     @     0x5605dee48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40741)[0m     @     0x5605dedbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40741)[0m     @     0x5605dee47baf _PyEval_EvalCodeWithName
[2m[36m(pid=40741)[0m     @     0x5605dee48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40741)[0m     @     0x5605dedbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40774)[0m     @     0x5581bc4d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40774)[0m     @     0x5581bc55cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40774)[0m     @     0x5581bc55d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40774)[0m     @     0x5581bc4d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40774)[0m     @     0x5581bc55cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40774)[0m     @     0x5581bc55d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40774)[0m     @     0x5581bc4d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40774)[0m     @     0x5581bc55cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40774)[0m     @     0x5581bc55d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40774)[0m     @     0x5581bc4d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40751)[0m     @     0x7f354816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40751)[0m     @     0x555aa73e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40751)[0m     @     0x555aa733cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40751)[0m     @     0x555aa73c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40751)[0m     @     0x555aa73c8a20 method_vectorcall
[2m[36m(pid=40751)[0m     @     0x555aa733cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40751)[0m     @     0x555aa73c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40751)[0m     @     0x555aa73c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40751)[0m     @     0x555aa733d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40751)[0m     @     0x555aa73c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40751)[0m     @     0x555aa73c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40751)[0m     @     0x555aa733d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40751)[0m     @     0x555aa73c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40751)[0m     @     0x555aa73c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40751)[0m     @     0x555aa733d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40751)[0m     @     0x555aa73c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40751)[0m     @     0x555aa73c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40751)[0m     @     0x555aa733d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40753)[0m     @     0x7f1f1d4ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40753)[0m     @     0x7f1f1affb4f5 at::Tensor::copy_()
[2m[36m(pid=40753)[0m     @     0x7f1f210a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40753)[0m     @     0x55fd7eb51fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40753)[0m     @     0x55fd7eaacb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40753)[0m     @     0x55fd7eb37baf _PyEval_EvalCodeWithName
[2m[36m(pid=40753)[0m     @     0x55fd7eb38a20 method_vectorcall
[2m[36m(pid=40753)[0m     @     0x55fd7eaacbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40753)[0m     @     0x55fd7eb37baf _PyEval_EvalCodeWithName
[2m[36m(pid=40753)[0m     @     0x55fd7eb38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40753)[0m     @     0x55fd7eaad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40753)[0m     @     0x55fd7eb37baf _PyEval_EvalCodeWithName
[2m[36m(pid=40753)[0m     @     0x55fd7eb38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40753)[0m     @     0x55fd7eaad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40753)[0m     @     0x55fd7eb37baf _PyEval_EvalCodeWithName
[2m[36m(pid=40753)[0m     @     0x55fd7eb38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40753)[0m     @     0x55fd7eaad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40753)[0m     @     0x55fd7eb37baf _PyEval_EvalCodeWithName
[2m[36m(pid=40753)[0m     @     0x55fd7eb38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40753)[0m     @     0x55fd7eaad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40728)[0m     @     0x7f6ed91654f5 at::Tensor::copy_()
[2m[36m(pid=40728)[0m     @     0x7f6edf21079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40728)[0m     @     0x557293c5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40728)[0m     @     0x557293bb6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40728)[0m     @     0x557293c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=40728)[0m     @     0x557293c42a20 method_vectorcall
[2m[36m(pid=40728)[0m     @     0x557293bb6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40728)[0m     @     0x557293c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=40728)[0m     @     0x557293c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40728)[0m     @     0x557293bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40728)[0m     @     0x557293c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=40728)[0m     @     0x557293c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40728)[0m     @     0x557293bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40728)[0m     @     0x557293c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=40728)[0m     @     0x557293c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40728)[0m     @     0x557293bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40728)[0m     @     0x557293c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=40728)[0m     @     0x557293c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40728)[0m     @     0x557293bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40758)[0m     @     0x7f418f40b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40758)[0m     @     0x7f418cf384f5 at::Tensor::copy_()
[2m[36m(pid=40758)[0m     @     0x7f4192fe379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40758)[0m     @     0x55fa875e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40758)[0m     @     0x55fa8753eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40758)[0m     @     0x55fa875c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40758)[0m     @     0x55fa875caa20 method_vectorcall
[2m[36m(pid=40758)[0m     @     0x55fa8753ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40758)[0m     @     0x55fa875c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40758)[0m     @     0x55fa875ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40758)[0m     @     0x55fa8753f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40758)[0m     @     0x55fa875c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40758)[0m     @     0x55fa875ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40758)[0m     @     0x55fa8753f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40758)[0m     @     0x55fa875c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40758)[0m     @     0x55fa875ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40758)[0m     @     0x55fa8753f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40758)[0m     @     0x55fa875c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40758)[0m     @     0x55fa875ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40758)[0m     @     0x55fa8753f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40757)[0m     @     0x7f69d08228de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40757)[0m     @     0x7f69ce34f4f5 at::Tensor::copy_()
[2m[36m(pid=40757)[0m     @     0x7f69d43fa79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40757)[0m     @     0x563dba1f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40757)[0m     @     0x563dba151b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40757)[0m     @     0x563dba1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40757)[0m     @     0x563dba1dda20 method_vectorcall
[2m[36m(pid=40757)[0m     @     0x563dba151bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40757)[0m     @     0x563dba1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40757)[0m     @     0x563dba1dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40757)[0m     @     0x563dba152689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40757)[0m     @     0x563dba1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40757)[0m     @     0x563dba1dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40757)[0m     @     0x563dba152689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40757)[0m     @     0x563dba1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40757)[0m     @     0x563dba1dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40757)[0m     @     0x563dba152689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40757)[0m     @     0x563dba1dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40757)[0m     @     0x563dba1dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40757)[0m     @     0x563dba152689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x7f22b7280390 (unknown)
[2m[36m(pid=40745)[0m     @     0x7ef3b71fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=40745)[0m     @     0x7ef3b69277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=40735)[0m     @     0x7fbb6683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40735)[0m     @     0x55d5b7386fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40735)[0m     @     0x55d5b72e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40735)[0m     @     0x55d5b736cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40735)[0m     @     0x55d5b736da20 method_vectorcall
[2m[36m(pid=40735)[0m     @     0x55d5b72e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40735)[0m     @     0x55d5b736cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40735)[0m     @     0x55d5b736d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40735)[0m     @     0x55d5b72e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40735)[0m     @     0x55d5b736cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40735)[0m     @     0x55d5b736d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40735)[0m     @     0x55d5b72e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40735)[0m     @     0x55d5b736cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40735)[0m     @     0x55d5b736d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40735)[0m     @     0x55d5b72e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40735)[0m     @     0x55d5b736cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40735)[0m     @     0x55d5b736d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40735)[0m     @     0x55d5b72e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40784)[0m     @     0x7edfeeea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40784)[0m     @     0x7edfec9d34f5 at::Tensor::copy_()
[2m[36m(pid=40784)[0m     @     0x7edff2a7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40784)[0m     @     0x56534d77afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40784)[0m     @     0x56534d6d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40784)[0m     @     0x56534d760baf _PyEval_EvalCodeWithName
[2m[36m(pid=40784)[0m     @     0x56534d761a20 method_vectorcall
[2m[36m(pid=40784)[0m     @     0x56534d6d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40784)[0m     @     0x56534d760baf _PyEval_EvalCodeWithName
[2m[36m(pid=40784)[0m     @     0x56534d761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40784)[0m     @     0x56534d6d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40784)[0m     @     0x56534d760baf _PyEval_EvalCodeWithName
[2m[36m(pid=40784)[0m     @     0x56534d761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40784)[0m     @     0x56534d6d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40784)[0m     @     0x56534d760baf _PyEval_EvalCodeWithName
[2m[36m(pid=40784)[0m     @     0x56534d761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40784)[0m     @     0x56534d6d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40784)[0m     @     0x56534d760baf _PyEval_EvalCodeWithName
[2m[36m(pid=40784)[0m     @     0x56534d761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40784)[0m     @     0x56534d6d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40747)[0m     @     0x7efece0ba4f5 at::Tensor::copy_()
[2m[36m(pid=40747)[0m     @     0x7efed416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40747)[0m     @     0x55bff883dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40747)[0m     @     0x55bff8798b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40747)[0m     @     0x55bff8823baf _PyEval_EvalCodeWithName
[2m[36m(pid=40747)[0m     @     0x55bff8824a20 method_vectorcall
[2m[36m(pid=40747)[0m     @     0x55bff8798bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40747)[0m     @     0x55bff8823baf _PyEval_EvalCodeWithName
[2m[36m(pid=40747)[0m     @     0x55bff8824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40747)[0m     @     0x55bff8799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40747)[0m     @     0x55bff8823baf _PyEval_EvalCodeWithName
[2m[36m(pid=40747)[0m     @     0x55bff8824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40747)[0m     @     0x55bff8799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40747)[0m     @     0x55bff8823baf _PyEval_EvalCodeWithName
[2m[36m(pid=40747)[0m     @     0x55bff8824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40747)[0m     @     0x55bff8799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40747)[0m     @     0x55bff8823baf _PyEval_EvalCodeWithName
[2m[36m(pid=40747)[0m     @     0x55bff8824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40747)[0m     @     0x55bff8799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40744)[0m     @     0x7f606058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40744)[0m     @     0x7f6060589388 at::native::copy_impl()
[2m[36m(pid=40744)[0m     @     0x7f606058b5a4 at::native::copy_()
[2m[36m(pid=40744)[0m     @     0x7f6060c764f5 at::Tensor::copy_()
[2m[36m(pid=40744)[0m     @     0x7f60631498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40771)[0m     @     0x7ee06f9df79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40771)[0m     @     0x55d066005fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40771)[0m     @     0x55d065f60b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40771)[0m     @     0x55d065febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40771)[0m     @     0x55d065feca20 method_vectorcall
[2m[36m(pid=40771)[0m     @     0x55d065f60bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40771)[0m     @     0x55d065febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40771)[0m     @     0x55d065fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40771)[0m     @     0x55d065f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40771)[0m     @     0x55d065febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40771)[0m     @     0x55d065fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40771)[0m     @     0x55d065f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40771)[0m     @     0x55d065febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40771)[0m     @     0x55d065fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40771)[0m     @     0x55d065f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40771)[0m     @     0x55d065febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40771)[0m     @     0x55d065fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40771)[0m     @     0x55d065f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40653)[0m     @     0x7f849f8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40653)[0m     @     0x7f849f8b7388 at::native::copy_impl()
[2m[36m(pid=40653)[0m     @     0x7f849f8b95a4 at::native::copy_()
[2m[36m(pid=40653)[0m     @     0x7f849ffa44f5 at::Tensor::copy_()
[2m[36m(pid=40653)[0m     @     0x7f84a24778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40665)[0m     @     0x7fb3a12cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40665)[0m     @     0x7fb3a12cb388 at::native::copy_impl()
[2m[36m(pid=40665)[0m     @     0x7fb3a12cd5a4 at::native::copy_()
[2m[36m(pid=40665)[0m     @     0x7fb3a19b84f5 at::Tensor::copy_()
[2m[36m(pid=40665)[0m     @     0x7fb3a3e8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40650)[0m     @     0x7fb199ac3d91 at::TensorIterator::for_each()
[2m[36m(pid=40650)[0m     @     0x7fb19a3a6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40650)[0m     @     0x7fb19a3c9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40650)[0m     @     0x7fb19986ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40650)[0m     @     0x7fb199869388 at::native::copy_impl()
[2m[36m(pid=40650)[0m     @     0x7fb19986b5a4 at::native::copy_()
[2m[36m(pid=40715)[0m     @     0x7efbffb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40715)[0m     @     0x7efbfefcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40715)[0m     @     0x7efbfefc9388 at::native::copy_impl()
[2m[36m(pid=40715)[0m     @     0x7efbfefcb5a4 at::native::copy_()
[2m[36m(pid=40715)[0m     @     0x7efbff6b64f5 at::Tensor::copy_()
[2m[36m(pid=40662)[0m     @     0x7f218130ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40662)[0m     @     0x7f21807b0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40662)[0m     @     0x7f21807ae388 at::native::copy_impl()
[2m[36m(pid=40662)[0m     @     0x7f21807b05a4 at::native::copy_()
[2m[36m(pid=40662)[0m     @     0x7f2180e9b4f5 at::Tensor::copy_()
[2m[36m(pid=40749)[0m     @     0x7f33b37b84f5 at::Tensor::copy_()
[2m[36m(pid=40749)[0m     @     0x7f33b986379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40749)[0m     @     0x55f8c7008fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40749)[0m     @     0x55f8c6f63b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40749)[0m     @     0x55f8c6feebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40749)[0m     @     0x55f8c6fefa20 method_vectorcall
[2m[36m(pid=40749)[0m     @     0x55f8c6f63bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40749)[0m     @     0x55f8c6feebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40749)[0m     @     0x55f8c6fef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40749)[0m     @     0x55f8c6f64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40749)[0m     @     0x55f8c6feebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40749)[0m     @     0x55f8c6fef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40749)[0m     @     0x55f8c6f64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40749)[0m     @     0x55f8c6feebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40749)[0m     @     0x55f8c6fef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40749)[0m     @     0x55f8c6f64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40749)[0m     @     0x55f8c6feebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40749)[0m     @     0x55f8c6fef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40749)[0m     @     0x55f8c6f64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40657)[0m     @     0x7fb3e5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40657)[0m     @     0x7fb3e52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40657)[0m     @     0x7fb3e52f8388 at::native::copy_impl()
[2m[36m(pid=40657)[0m     @     0x7fb3e52fa5a4 at::native::copy_()
[2m[36m(pid=40657)[0m     @     0x7fb3e59e54f5 at::Tensor::copy_()
[2m[36m(pid=40768)[0m     @     0x7f263eddcad3 at::TensorIterator::for_each()
[2m[36m(pid=40768)[0m     @     0x7f263eddcd91 at::TensorIterator::for_each()
[2m[36m(pid=40768)[0m     @     0x7f263f6bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40768)[0m     @     0x7f263f6e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40768)[0m     @     0x7f263eb84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40768)[0m     @     0x7f263eb82388 at::native::copy_impl()
[2m[36m(pid=40680)[0m     @     0x7f7479c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=40680)[0m     @     0x7f7479c27d91 at::TensorIterator::for_each()
[2m[36m(pid=40680)[0m     @     0x7f747a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40680)[0m     @     0x7f747a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40680)[0m     @     0x7f74799cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40680)[0m     @     0x7f74799cd388 at::native::copy_impl()
[2m[36m(pid=40759)[0m     @     0x7fc0b7d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=40759)[0m     @     0x7fc0b861fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40759)[0m     @     0x7fc0b8642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40759)[0m     @     0x7fc0b7ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40759)[0m     @     0x7fc0b7ae2388 at::native::copy_impl()
[2m[36m(pid=40759)[0m     @     0x7fc0b7ae45a4 at::native::copy_()
[2m[36m(pid=40670)[0m     @     0x7f2e48d35ad3 at::TensorIterator::for_each()
[2m[36m(pid=40670)[0m     @     0x7f2e48d35d91 at::TensorIterator::for_each()
[2m[36m(pid=40670)[0m     @     0x7f2e49618b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40670)[0m     @     0x7f2e4963bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40670)[0m     @     0x7f2e48adda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40670)[0m     @     0x7f2e48adb388 at::native::copy_impl()
[2m[36m(pid=40727)[0m     @     0x7f1ccbee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40727)[0m     @     0x5579f345afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40727)[0m     @     0x5579f33b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40727)[0m     @     0x5579f3440baf _PyEval_EvalCodeWithName
[2m[36m(pid=40727)[0m     @     0x5579f3441a20 method_vectorcall
[2m[36m(pid=40727)[0m     @     0x5579f33b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40727)[0m     @     0x5579f3440baf _PyEval_EvalCodeWithName
[2m[36m(pid=40727)[0m     @     0x5579f3441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40727)[0m     @     0x5579f33b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40727)[0m     @     0x5579f3440baf _PyEval_EvalCodeWithName
[2m[36m(pid=40727)[0m     @     0x5579f3441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40727)[0m     @     0x5579f33b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40727)[0m     @     0x5579f3440baf _PyEval_EvalCodeWithName
[2m[36m(pid=40727)[0m     @     0x5579f3441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40727)[0m     @     0x5579f33b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40727)[0m     @     0x5579f3440baf _PyEval_EvalCodeWithName
[2m[36m(pid=40727)[0m     @     0x5579f3441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40727)[0m     @     0x5579f33b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40660)[0m     @     0x7f06cf11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40660)[0m     @     0x7f06ccc494f5 at::Tensor::copy_()
[2m[36m(pid=40660)[0m     @     0x7f06d2cf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40660)[0m     @     0x56367d4a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40660)[0m     @     0x56367d402b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40660)[0m     @     0x56367d48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40660)[0m     @     0x56367d48ea20 method_vectorcall
[2m[36m(pid=40660)[0m     @     0x56367d402bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40660)[0m     @     0x56367d48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40660)[0m     @     0x56367d48e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40660)[0m     @     0x56367d403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40660)[0m     @     0x56367d48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40660)[0m     @     0x56367d48e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40660)[0m     @     0x56367d403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40660)[0m     @     0x56367d48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40660)[0m     @     0x56367d48e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40660)[0m     @     0x56367d403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40660)[0m     @     0x56367d48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40660)[0m     @     0x56367d48e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40660)[0m     @     0x56367d403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40649)[0m     @     0x7f34ba039c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40649)[0m     @     0x7f34b94dba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40649)[0m     @     0x7f34b94d9388 at::native::copy_impl()
[2m[36m(pid=40649)[0m     @     0x7f34b94db5a4 at::native::copy_()
[2m[36m(pid=40649)[0m     @     0x7f34b9bc64f5 at::Tensor::copy_()
[2m[36m(pid=40649)[0m     @     0x7f34bc0998de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40663)[0m     @     0x7fc35fea2d91 at::TensorIterator::for_each()
[2m[36m(pid=40663)[0m     @     0x7fc360785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40663)[0m     @     0x7fc3607a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40663)[0m     @     0x7fc35fc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40663)[0m     @     0x7fc35fc48388 at::native::copy_impl()
[2m[36m(pid=40663)[0m     @     0x7fc35fc4a5a4 at::native::copy_()
[2m[36m(pid=40766)[0m     @     0x7ed7b4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=40766)[0m     @     0x7ed7b580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40766)[0m     @     0x7ed7b582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40766)[0m     @     0x7ed7b4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40766)[0m     @     0x7ed7b4ccd388 at::native::copy_impl()
[2m[36m(pid=40766)[0m     @     0x7ed7b4ccf5a4 at::native::copy_()
[2m[36m(pid=40766)[0m     @     0x7ed7b53ba4f5 at::Tensor::copy_()
[2m[36m(pid=40656)[0m     @     0x7f2fd530db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40656)[0m     @     0x7f2fd5330c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40656)[0m     @     0x7f2fd47d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40656)[0m     @     0x7f2fd47d0388 at::native::copy_impl()
[2m[36m(pid=40656)[0m     @     0x7f2fd47d25a4 at::native::copy_()
[2m[36m(pid=40656)[0m     @     0x7f2fd4ebd4f5 at::Tensor::copy_()
[2m[36m(pid=40701)[0m     @     0x7f91dabfdd91 at::TensorIterator::for_each()
[2m[36m(pid=40701)[0m     @     0x7f91db4e0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40701)[0m     @     0x7f91db503c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40701)[0m     @     0x7f91da9a5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40701)[0m     @     0x7f91da9a3388 at::native::copy_impl()
[2m[36m(pid=40701)[0m     @     0x7f91da9a55a4 at::native::copy_()
[2m[36m(pid=40764)[0m     @     0x7eec655d0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40764)[0m     @     0x7eec655f3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40764)[0m     @     0x7eec64a95a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40764)[0m     @     0x7eec64a93388 at::native::copy_impl()
[2m[36m(pid=40764)[0m     @     0x7eec64a955a4 at::native::copy_()
[2m[36m(pid=40646)[0m     @     0x7f3c0afaaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40646)[0m     @     0x7f3c0afa8388 at::native::copy_impl()
[2m[36m(pid=40646)[0m     @     0x7f3c0afaa5a4 at::native::copy_()
[2m[36m(pid=40646)[0m     @     0x7f3c0b6954f5 at::Tensor::copy_()
[2m[36m(pid=40646)[0m     @     0x7f3c0db688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40769)[0m     @     0x7f3934b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40769)[0m     @     0x7f3934011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40769)[0m     @     0x7f393400f388 at::native::copy_impl()
[2m[36m(pid=40769)[0m     @     0x7f39340115a4 at::native::copy_()
[2m[36m(pid=40769)[0m     @     0x7f39346fc4f5 at::Tensor::copy_()
[2m[36m(pid=40718)[0m     @     0x7f4d07f53d91 at::TensorIterator::for_each()
[2m[36m(pid=40718)[0m     @     0x7f4d08836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40718)[0m     @     0x7f4d08859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40718)[0m     @     0x7f4d07cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40718)[0m     @     0x7f4d07cf9388 at::native::copy_impl()
[2m[36m(pid=40718)[0m     @     0x7f4d07cfb5a4 at::native::copy_()
[2m[36m(pid=40664)[0m     @     0x7f78f9caad91 at::TensorIterator::for_each()
[2m[36m(pid=40664)[0m     @     0x7f78fa58db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40664)[0m     @     0x7f78fa5b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40664)[0m     @     0x7f78f9a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40664)[0m     @     0x7f78f9a50388 at::native::copy_impl()
[2m[36m(pid=40731)[0m     @     0x7f361d57ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40731)[0m     @     0x7f361d57c388 at::native::copy_impl()
[2m[36m(pid=40731)[0m     @     0x7f361d57e5a4 at::native::copy_()
[2m[36m(pid=40731)[0m     @     0x7f361dc694f5 at::Tensor::copy_()
[2m[36m(pid=40731)[0m     @     0x7f362013c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40676)[0m     @     0x7f3a29610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40676)[0m     @     0x7f3a2960e388 at::native::copy_impl()
[2m[36m(pid=40676)[0m     @     0x7f3a296105a4 at::native::copy_()
[2m[36m(pid=40676)[0m     @     0x7f3a29cfb4f5 at::Tensor::copy_()
[2m[36m(pid=40676)[0m     @     0x7f3a2c1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40648)[0m     @     0x7ee853930a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40648)[0m     @     0x7ee85392e388 at::native::copy_impl()
[2m[36m(pid=40648)[0m     @     0x7ee8539305a4 at::native::copy_()
[2m[36m(pid=40648)[0m     @     0x7ee85401b4f5 at::Tensor::copy_()
[2m[36m(pid=40661)[0m     @     0x7f91e1ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40661)[0m     @     0x7f91e1ef5388 at::native::copy_impl()
[2m[36m(pid=40661)[0m     @     0x7f91e1ef75a4 at::native::copy_()
[2m[36m(pid=40661)[0m     @     0x7f91e25e24f5 at::Tensor::copy_()
[2m[36m(pid=40661)[0m     @     0x7f91e4ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40760)[0m     @     0x7ef991c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40760)[0m     @     0x7ef991c8f388 at::native::copy_impl()
[2m[36m(pid=40760)[0m     @     0x7ef991c915a4 at::native::copy_()
[2m[36m(pid=40760)[0m     @     0x7ef99237c4f5 at::Tensor::copy_()
[2m[36m(pid=40760)[0m     @     0x7ef99484f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40723)[0m     @     0x55d107f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40723)[0m     @     0x55d107ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40723)[0m     @     0x55d107f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=40723)[0m     @     0x55d107f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40723)[0m     @     0x55d107ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40723)[0m     @     0x55d107f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=40723)[0m     @     0x55d107f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40723)[0m     @     0x55d107ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40723)[0m     @     0x55d107f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=40723)[0m     @     0x55d107f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40723)[0m     @     0x55d107ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40756)[0m     @     0x55d85c514689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40652)[0m     @     0x7fa98a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40652)[0m     @     0x7fa98a3e7388 at::native::copy_impl()
[2m[36m(pid=40652)[0m     @     0x7fa98a3e95a4 at::native::copy_()
[2m[36m(pid=40652)[0m     @     0x7fa98aad44f5 at::Tensor::copy_()
[2m[36m(pid=40652)[0m     @     0x7fa98cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40722)[0m     @     0x7f6ad78efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40722)[0m     @     0x7f6ad7912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40722)[0m     @     0x7f6ad6db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40722)[0m     @     0x7f6ad6db2388 at::native::copy_impl()
[2m[36m(pid=40722)[0m     @     0x7f6ad6db45a4 at::native::copy_()
[2m[36m(pid=40655)[0m     @     0x7ee973158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40655)[0m     @     0x7ee9725faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40655)[0m     @     0x7ee9725f8388 at::native::copy_impl()
[2m[36m(pid=40655)[0m     @     0x7ee9725fa5a4 at::native::copy_()
[2m[36m(pid=40655)[0m     @     0x7ee972ce54f5 at::Tensor::copy_()
[2m[36m(pid=40746)[0m     @     0x7fa475ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=40746)[0m     @     0x7fa475ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=40746)[0m     @     0x7fa4767ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40746)[0m     @     0x7fa4767efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40651)[0m     @     0x7ee250589388 at::native::copy_impl()
[2m[36m(pid=40651)[0m     @     0x7ee25058b5a4 at::native::copy_()
[2m[36m(pid=40651)[0m     @     0x7ee250c764f5 at::Tensor::copy_()
[2m[36m(pid=40651)[0m     @     0x7ee2531498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40720)[0m     @     0x55eb593e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=40720)[0m     @     0x55eb593e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40720)[0m     @     0x55eb5935c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40720)[0m     @     0x55eb593e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=40720)[0m     @     0x55eb593e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40720)[0m     @     0x55eb5935c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x7f45af76da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40783)[0m     @     0x7f45af76b388 at::native::copy_impl()
[2m[36m(pid=40783)[0m     @     0x7f45af76d5a4 at::native::copy_()
[2m[36m(pid=40783)[0m     @     0x7f45afe584f5 at::Tensor::copy_()
[2m[36m(pid=40783)[0m     @     0x7f45b232b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40721)[0m     @     0x7f3ea5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=40721)[0m     @     0x7f3ea650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40721)[0m     @     0x7f3ea652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40721)[0m     @     0x7f3ea59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40721)[0m     @     0x7f3ea59cd388 at::native::copy_impl()
[2m[36m(pid=40721)[0m     @     0x7f3ea59cf5a4 at::native::copy_()
[2m[36m(pid=40714)[0m     @     0x7f7d4437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40714)[0m     @     0x7f7d44378388 at::native::copy_impl()
[2m[36m(pid=40714)[0m     @     0x7f7d4437a5a4 at::native::copy_()
[2m[36m(pid=40714)[0m     @     0x7f7d44a654f5 at::Tensor::copy_()
[2m[36m(pid=40673)[0m     @     0x7f147c9b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=40673)[0m     @     0x7f147c9b8d91 at::TensorIterator::for_each()
[2m[36m(pid=40673)[0m     @     0x7f147d29bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40673)[0m     @     0x7f147d2bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40726)[0m     @     0x7f21d0425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40726)[0m     @     0x7f21d0423388 at::native::copy_impl()
[2m[36m(pid=40726)[0m     @     0x7f21d04255a4 at::native::copy_()
[2m[36m(pid=40726)[0m     @     0x7f21d0b104f5 at::Tensor::copy_()
[2m[36m(pid=40666)[0m     @     0x7eee564c3388 at::native::copy_impl()
[2m[36m(pid=40666)[0m     @     0x7eee564c55a4 at::native::copy_()
[2m[36m(pid=40666)[0m     @     0x7eee56bb04f5 at::Tensor::copy_()
[2m[36m(pid=40666)[0m     @     0x7eee590838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40712)[0m     @     0x7f8ea9a79d91 at::TensorIterator::for_each()
[2m[36m(pid=40712)[0m     @     0x7f8eaa35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40712)[0m     @     0x7f8eaa37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40712)[0m     @     0x7f8ea9821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40712)[0m     @     0x7f8ea981f388 at::native::copy_impl()
[2m[36m(pid=40647)[0m     @     0x7f191e2a4d91 at::TensorIterator::for_each()
[2m[36m(pid=40647)[0m     @     0x7f191eb87b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40647)[0m     @     0x7f191ebaac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40647)[0m     @     0x7f191e04ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40647)[0m     @     0x7f191e04a388 at::native::copy_impl()
[2m[36m(pid=40710)[0m     @     0x7fc6b87e3d91 at::TensorIterator::for_each()
[2m[36m(pid=40710)[0m     @     0x7fc6b90c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40710)[0m     @     0x7fc6b90e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40710)[0m     @     0x7fc6b858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40710)[0m     @     0x7fc6b8589388 at::native::copy_impl()
[2m[36m(pid=40669)[0m     @     0x7f609183bad3 at::TensorIterator::for_each()
[2m[36m(pid=40669)[0m     @     0x7f609183bd91 at::TensorIterator::for_each()
[2m[36m(pid=40669)[0m     @     0x7f609211eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40669)[0m     @     0x7f6092141c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40669)[0m     @     0x7f60915e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40669)[0m     @     0x7f60915e1388 at::native::copy_impl()
[2m[36m(pid=40645)[0m     @     0x7fa985138d91 at::TensorIterator::for_each()
[2m[36m(pid=40645)[0m     @     0x7fa985a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40645)[0m     @     0x7fa985a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40645)[0m     @     0x7fa984ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40645)[0m     @     0x7fa984ede388 at::native::copy_impl()
[2m[36m(pid=40645)[0m     @     0x7fa984ee05a4 at::native::copy_()
[2m[36m(pid=40668)[0m     @     0x7f463133fd91 at::TensorIterator::for_each()
[2m[36m(pid=40668)[0m     @     0x7f4631c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40668)[0m     @     0x7f4631c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40668)[0m     @     0x7f46310e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40668)[0m     @     0x7f46310e5388 at::native::copy_impl()
[2m[36m(pid=40736)[0m     @     0x7f1613f53d91 at::TensorIterator::for_each()
[2m[36m(pid=40736)[0m     @     0x7f1614836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40736)[0m     @     0x7f1614859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40736)[0m     @     0x7f1613cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40736)[0m     @     0x7f1613cf9388 at::native::copy_impl()
[2m[36m(pid=40732)[0m     @     0x7f1ff41b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40732)[0m     @     0x7f1ff41b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=40732)[0m     @     0x7f1ff41b9d91 at::TensorIterator::for_each()
[2m[36m(pid=40732)[0m     @     0x7f1ff4a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40719)[0m     @     0x7f6b7cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40719)[0m     @     0x7f6b7cede388 at::native::copy_impl()
[2m[36m(pid=40719)[0m     @     0x7f6b7cee05a4 at::native::copy_()
[2m[36m(pid=40719)[0m     @     0x7f6b7d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=40725)[0m     @     0x7ef2a8101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40725)[0m     @     0x7ef2a75a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40725)[0m     @     0x7ef2a75a1388 at::native::copy_impl()
[2m[36m(pid=40725)[0m     @     0x7ef2a75a35a4 at::native::copy_()
[2m[36m(pid=40725)[0m     @     0x7ef2a7c8e4f5 at::Tensor::copy_()
[2m[36m(pid=40667)[0m     @     0x7f7b7aca0d91 at::TensorIterator::for_each()
[2m[36m(pid=40667)[0m     @     0x7f7b7b583b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40667)[0m     @     0x7f7b7b5a6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40667)[0m     @     0x7f7b7aa48a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40667)[0m     @     0x7f7b7aa46388 at::native::copy_impl()
[2m[36m(pid=40677)[0m     @     0x7ef8992faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40677)[0m     @     0x7ef8992f8388 at::native::copy_impl()
[2m[36m(pid=40677)[0m     @     0x7ef8992fa5a4 at::native::copy_()
[2m[36m(pid=40677)[0m     @     0x7ef8999e54f5 at::Tensor::copy_()
[2m[36m(pid=40777)[0m     @     0x7f4f0c1648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40777)[0m     @     0x7f4f0c164ad3 at::TensorIterator::for_each()
[2m[36m(pid=40708)[0m     @     0x7f3445228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40708)[0m     @     0x7f3445226388 at::native::copy_impl()
[2m[36m(pid=40708)[0m     @     0x7f34452285a4 at::native::copy_()
[2m[36m(pid=40708)[0m     @     0x7f34459134f5 at::Tensor::copy_()
[2m[36m(pid=40717)[0m     @     0x7f093533b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40654)[0m     @     0x7f1a77564ad3 at::TensorIterator::for_each()
[2m[36m(pid=40654)[0m     @     0x7f1a77564d91 at::TensorIterator::for_each()
[2m[36m(pid=40654)[0m     @     0x7f1a77e47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40729)[0m     @     0x7eda4709da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40729)[0m     @     0x7eda4709b388 at::native::copy_impl()
[2m[36m(pid=40729)[0m     @     0x7eda4709d5a4 at::native::copy_()
[2m[36m(pid=40729)[0m     @     0x7eda477884f5 at::Tensor::copy_()
[2m[36m(pid=40729)[0m     @     0x7eda49c5b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40681)[0m     @     0x7efc49e10a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40681)[0m     @     0x7efc49e0e388 at::native::copy_impl()
[2m[36m(pid=40681)[0m     @     0x7efc49e105a4 at::native::copy_()
[2m[36m(pid=40681)[0m     @     0x7efc4a4fb4f5 at::Tensor::copy_()
[2m[36m(pid=40733)[0m     @     0x7f9d62d87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40733)[0m     @     0x7f9d62d85388 at::native::copy_impl()
[2m[36m(pid=40733)[0m     @     0x7f9d62d875a4 at::native::copy_()
[2m[36m(pid=40733)[0m     @     0x7f9d634724f5 at::Tensor::copy_()
[2m[36m(pid=40761)[0m     @     0x7fb6ea140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40761)[0m     @     0x7fb6ea13e388 at::native::copy_impl()
[2m[36m(pid=40761)[0m     @     0x7fb6ea1405a4 at::native::copy_()
[2m[36m(pid=40761)[0m     @     0x7fb6ea82b4f5 at::Tensor::copy_()
[2m[36m(pid=40761)[0m     @     0x7fb6eccfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40679)[0m     @     0x7efc0a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40679)[0m     @     0x7efc0a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=40704)[0m     @     0x7eded3a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40704)[0m     @     0x7eded3a37388 at::native::copy_impl()
[2m[36m(pid=40704)[0m     @     0x7eded3a395a4 at::native::copy_()
[2m[36m(pid=40704)[0m     @     0x7eded41244f5 at::Tensor::copy_()
[2m[36m(pid=40704)[0m     @     0x7eded65f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40716)[0m     @     0x7f91639dda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40716)[0m     @     0x7f91639db388 at::native::copy_impl()
[2m[36m(pid=40716)[0m     @     0x7f91639dd5a4 at::native::copy_()
[2m[36m(pid=40716)[0m     @     0x7f91640c84f5 at::Tensor::copy_()
[2m[36m(pid=40724)[0m     @     0x7f0ddd2fa5a4 at::native::copy_()
[2m[36m(pid=40724)[0m     @     0x7f0ddd9e54f5 at::Tensor::copy_()
[2m[36m(pid=40724)[0m     @     0x7f0ddfeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40724)[0m     @     0x7f0ddd9e54f5 at::Tensor::copy_()
[2m[36m(pid=40724)[0m     @     0x7f0de3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40724)[0m     @     0x5605284fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40724)[0m     @     0x560528459b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40724)[0m     @     0x5605284e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=40724)[0m     @     0x5605284e5a20 method_vectorcall
[2m[36m(pid=40724)[0m     @     0x560528459bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40724)[0m     @     0x5605284e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=40724)[0m     @     0x5605284e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40724)[0m     @     0x56052845a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40724)[0m     @     0x5605284e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=40724)[0m     @     0x5605284e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40724)[0m     @     0x56052845a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40724)[0m     @     0x5605284e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=40724)[0m     @     0x5605284e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40724)[0m     @     0x56052845a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40724)[0m     @     0x5605284e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=40745)[0m     @     0x7ef3b692a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=40745)[0m     @     0x7ef3b692aad3 at::TensorIterator::for_each()
[2m[36m(pid=40744)[0m     @     0x7f6060c764f5 at::Tensor::copy_()
[2m[36m(pid=40744)[0m     @     0x7f6066d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40744)[0m     @     0x55ec0b392fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40744)[0m     @     0x55ec0b2edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40744)[0m     @     0x55ec0b378baf _PyEval_EvalCodeWithName
[2m[36m(pid=40744)[0m     @     0x55ec0b379a20 method_vectorcall
[2m[36m(pid=40744)[0m     @     0x55ec0b2edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40744)[0m     @     0x55ec0b378baf _PyEval_EvalCodeWithName
[2m[36m(pid=40744)[0m     @     0x55ec0b379643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40744)[0m     @     0x55ec0b2ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40744)[0m     @     0x55ec0b378baf _PyEval_EvalCodeWithName
[2m[36m(pid=40744)[0m     @     0x55ec0b379643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40744)[0m     @     0x55ec0b2ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40744)[0m     @     0x55ec0b378baf _PyEval_EvalCodeWithName
[2m[36m(pid=40744)[0m     @     0x55ec0b379643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40744)[0m     @     0x55ec0b2ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40744)[0m     @     0x55ec0b378baf _PyEval_EvalCodeWithName
[2m[36m(pid=40744)[0m     @     0x55ec0b379643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40744)[0m     @     0x55ec0b2ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40653)[0m     @     0x7f849ffa44f5 at::Tensor::copy_()
[2m[36m(pid=40653)[0m     @     0x7f84a604f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40653)[0m     @     0x5646eb70ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40653)[0m     @     0x5646eb66ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40653)[0m     @     0x5646eb6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40653)[0m     @     0x5646eb6f6a20 method_vectorcall
[2m[36m(pid=40653)[0m     @     0x5646eb66abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40653)[0m     @     0x5646eb6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40653)[0m     @     0x5646eb6f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40653)[0m     @     0x5646eb66b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40653)[0m     @     0x5646eb6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40653)[0m     @     0x5646eb6f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40653)[0m     @     0x5646eb66b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40653)[0m     @     0x5646eb6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40653)[0m     @     0x5646eb6f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40653)[0m     @     0x5646eb66b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40653)[0m     @     0x5646eb6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40653)[0m     @     0x5646eb6f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40653)[0m     @     0x5646eb66b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40665)[0m     @     0x7fb3a19b84f5 at::Tensor::copy_()
[2m[36m(pid=40665)[0m     @     0x7fb3a7a6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40665)[0m     @     0x55a529df1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40665)[0m     @     0x55a529d4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40665)[0m     @     0x55a529dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40665)[0m     @     0x55a529dd8a20 method_vectorcall
[2m[36m(pid=40665)[0m     @     0x55a529d4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40665)[0m     @     0x55a529dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40665)[0m     @     0x55a529dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40665)[0m     @     0x55a529d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40665)[0m     @     0x55a529dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40665)[0m     @     0x55a529dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40665)[0m     @     0x55a529d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40665)[0m     @     0x55a529dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40665)[0m     @     0x55a529dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40665)[0m     @     0x55a529d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40665)[0m     @     0x55a529dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40665)[0m     @     0x55a529dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40665)[0m     @     0x55a529d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40650)[0m     @     0x7fb199f564f5 at::Tensor::copy_()
[2m[36m(pid=40650)[0m     @     0x7fb19c4298de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40650)[0m     @     0x7fb199f564f5 at::Tensor::copy_()
[2m[36m(pid=40650)[0m     @     0x7fb1a000179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40650)[0m     @     0x55f61494dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40650)[0m     @     0x55f6148a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40650)[0m     @     0x55f614933baf _PyEval_EvalCodeWithName
[2m[36m(pid=40650)[0m     @     0x55f614934a20 method_vectorcall
[2m[36m(pid=40650)[0m     @     0x55f6148a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40650)[0m     @     0x55f614933baf _PyEval_EvalCodeWithName
[2m[36m(pid=40650)[0m     @     0x55f614934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40650)[0m     @     0x55f6148a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40650)[0m     @     0x55f614933baf _PyEval_EvalCodeWithName
[2m[36m(pid=40715)[0m     @     0x7efc01b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40715)[0m     @     0x7efbff6b64f5 at::Tensor::copy_()
[2m[36m(pid=40715)[0m     @     0x7efc0576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40715)[0m     @     0x561034e4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40715)[0m     @     0x561034da9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40715)[0m     @     0x561034e34baf _PyEval_EvalCodeWithName
[2m[36m(pid=40715)[0m     @     0x561034e35a20 method_vectorcall
[2m[36m(pid=40715)[0m     @     0x561034da9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40715)[0m     @     0x561034e34baf _PyEval_EvalCodeWithName
[2m[36m(pid=40715)[0m     @     0x561034e35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40715)[0m     @     0x561034daa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40715)[0m     @     0x561034e34baf _PyEval_EvalCodeWithName
[2m[36m(pid=40715)[0m     @     0x561034e35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40715)[0m     @     0x561034daa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40715)[0m     @     0x561034e34baf _PyEval_EvalCodeWithName
[2m[36m(pid=40715)[0m     @     0x561034e35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40715)[0m     @     0x561034daa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40715)[0m     @     0x561034e34baf _PyEval_EvalCodeWithName
[2m[36m(pid=40715)[0m     @     0x561034e35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40715)[0m     @     0x561034daa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40662)[0m     @     0x7f218336e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40662)[0m     @     0x7f2180e9b4f5 at::Tensor::copy_()
[2m[36m(pid=40662)[0m     @     0x7f2186f4679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40662)[0m     @     0x562772d11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40662)[0m     @     0x562772c6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40662)[0m     @     0x562772cf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40662)[0m     @     0x562772cf8a20 method_vectorcall
[2m[36m(pid=40662)[0m     @     0x562772c6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40662)[0m     @     0x562772cf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40662)[0m     @     0x562772cf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40662)[0m     @     0x562772c6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40662)[0m     @     0x562772cf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40662)[0m     @     0x562772cf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40662)[0m     @     0x562772c6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40662)[0m     @     0x562772cf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40662)[0m     @     0x562772cf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40662)[0m     @     0x562772c6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40662)[0m     @     0x562772cf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40662)[0m     @     0x562772cf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40662)[0m     @     0x562772c6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40657)[0m     @     0x7fb3e7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40657)[0m     @     0x7fb3e59e54f5 at::Tensor::copy_()
[2m[36m(pid=40657)[0m     @     0x7fb3eba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40657)[0m     @     0x561d0f034fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40657)[0m     @     0x561d0ef8fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40657)[0m     @     0x561d0f01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40657)[0m     @     0x561d0f01ba20 method_vectorcall
[2m[36m(pid=40657)[0m     @     0x561d0ef8fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40657)[0m     @     0x561d0f01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40657)[0m     @     0x561d0f01b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40657)[0m     @     0x561d0ef90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40657)[0m     @     0x561d0f01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40657)[0m     @     0x561d0f01b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40657)[0m     @     0x561d0ef90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40657)[0m     @     0x561d0f01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40657)[0m     @     0x561d0f01b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40657)[0m     @     0x561d0ef90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40657)[0m     @     0x561d0f01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40657)[0m     @     0x561d0f01b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40657)[0m     @     0x561d0ef90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40768)[0m     @     0x7f263eb845a4 at::native::copy_()
[2m[36m(pid=40768)[0m     @     0x7f263f26f4f5 at::Tensor::copy_()
[2m[36m(pid=40768)[0m     @     0x7f26417428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40680)[0m     @     0x7f74799cf5a4 at::native::copy_()
[2m[36m(pid=40680)[0m     @     0x7f747a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=40680)[0m     @     0x7f747c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40759)[0m     @     0x7fc0b81cf4f5 at::Tensor::copy_()
[2m[36m(pid=40759)[0m     @     0x7fc0ba6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40759)[0m     @     0x7fc0b81cf4f5 at::Tensor::copy_()
[2m[36m(pid=40670)[0m     @     0x7f2e48add5a4 at::native::copy_()
[2m[36m(pid=40670)[0m     @     0x7f2e491c84f5 at::Tensor::copy_()
[2m[36m(pid=40670)[0m     @     0x7f2e4b69b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40649)[0m     @     0x7f34b9bc64f5 at::Tensor::copy_()
[2m[36m(pid=40649)[0m     @     0x7f34bfc7179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40649)[0m     @     0x55d1605c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40649)[0m     @     0x55d160521b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40649)[0m     @     0x55d1605acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40649)[0m     @     0x55d1605ada20 method_vectorcall
[2m[36m(pid=40649)[0m     @     0x55d160521bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40649)[0m     @     0x55d1605acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40649)[0m     @     0x55d1605ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40649)[0m     @     0x55d160522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40649)[0m     @     0x55d1605acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40649)[0m     @     0x55d1605ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40649)[0m     @     0x55d160522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40649)[0m     @     0x55d1605acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40649)[0m     @     0x55d1605ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40649)[0m     @     0x55d160522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40649)[0m     @     0x55d1605acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40649)[0m     @     0x55d1605ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40649)[0m     @     0x55d160522689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40663)[0m     @     0x7fc3603354f5 at::Tensor::copy_()
[2m[36m(pid=40663)[0m     @     0x7fc3628088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40663)[0m     @     0x7fc3603354f5 at::Tensor::copy_()
[2m[36m(pid=40663)[0m     @     0x7fc3663e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40663)[0m     @     0x56009508ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40663)[0m     @     0x560094feab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40663)[0m     @     0x560095075baf _PyEval_EvalCodeWithName
[2m[36m(pid=40663)[0m     @     0x560095076a20 method_vectorcall
[2m[36m(pid=40663)[0m     @     0x560094feabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40663)[0m     @     0x560095075baf _PyEval_EvalCodeWithName
[2m[36m(pid=40663)[0m     @     0x560095076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40766)[0m     @     0x7ed7b788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40766)[0m     @     0x7ed7b53ba4f5 at::Tensor::copy_()
[2m[36m(pid=40766)[0m     @     0x7ed7bb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40766)[0m     @     0x561ef2f8efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40766)[0m     @     0x561ef2ee9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40766)[0m     @     0x561ef2f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=40766)[0m     @     0x561ef2f75a20 method_vectorcall
[2m[36m(pid=40766)[0m     @     0x561ef2ee9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40766)[0m     @     0x561ef2f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=40766)[0m     @     0x561ef2f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40766)[0m     @     0x561ef2eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40766)[0m     @     0x561ef2f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=40766)[0m     @     0x561ef2f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40766)[0m     @     0x561ef2eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40766)[0m     @     0x561ef2f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=40766)[0m     @     0x561ef2f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40766)[0m     @     0x561ef2eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40766)[0m     @     0x561ef2f74baf _PyEval_EvalCodeWithName
[2m[36m(pid=40766)[0m     @     0x561ef2f75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40766)[0m     @     0x561ef2eea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40656)[0m     @     0x7f2fd73908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40656)[0m     @     0x7f2fd4ebd4f5 at::Tensor::copy_()
[2m[36m(pid=40656)[0m     @     0x7f2fdaf6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40656)[0m     @     0x563f2e017fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40656)[0m     @     0x563f2df72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40656)[0m     @     0x563f2dffdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40656)[0m     @     0x563f2dffea20 method_vectorcall
[2m[36m(pid=40656)[0m     @     0x563f2df72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40656)[0m     @     0x563f2dffdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40656)[0m     @     0x563f2dffe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40656)[0m     @     0x563f2df73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40656)[0m     @     0x563f2dffdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40656)[0m     @     0x563f2dffe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40656)[0m     @     0x563f2df73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40656)[0m     @     0x563f2dffdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40656)[0m     @     0x563f2dffe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40656)[0m     @     0x563f2df73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40656)[0m     @     0x563f2dffdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40656)[0m     @     0x563f2dffe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40656)[0m     @     0x563f2df73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40701)[0m     @     0x7f91db0904f5 at::Tensor::copy_()
[2m[36m(pid=40701)[0m     @     0x7f91dd5638de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40701)[0m     @     0x7f91db0904f5 at::Tensor::copy_()
[2m[36m(pid=40701)[0m     @     0x7f91e113b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40701)[0m     @     0x5630edcb2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40701)[0m     @     0x5630edc0db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40701)[0m     @     0x5630edc98baf _PyEval_EvalCodeWithName
[2m[36m(pid=40701)[0m     @     0x5630edc99a20 method_vectorcall
[2m[36m(pid=40764)[0m     @     0x7eec651804f5 at::Tensor::copy_()
[2m[36m(pid=40764)[0m     @     0x7eec676538de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40764)[0m     @     0x7eec651804f5 at::Tensor::copy_()
[2m[36m(pid=40764)[0m     @     0x7eec6b22b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40764)[0m     @     0x55ec414d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40764)[0m     @     0x55ec41433b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40764)[0m     @     0x55ec414bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40764)[0m     @     0x55ec414bfa20 method_vectorcall
[2m[36m(pid=40764)[0m     @     0x55ec41433bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40764)[0m     @     0x55ec414bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40764)[0m     @     0x55ec414bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40764)[0m     @     0x55ec41434689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40764)[0m     @     0x55ec414bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40764)[0m     @     0x55ec414bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40646)[0m     @     0x7f3c0b6954f5 at::Tensor::copy_()
[2m[36m(pid=40646)[0m     @     0x7f3c245ef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40646)[0m     @     0x55f22ace9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40646)[0m     @     0x55f22ac44b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40646)[0m     @     0x55f22accfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40646)[0m     @     0x55f22acd0a20 method_vectorcall
[2m[36m(pid=40646)[0m     @     0x55f22ac44bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40646)[0m     @     0x55f22accfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40646)[0m     @     0x55f22acd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40646)[0m     @     0x55f22ac45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40646)[0m     @     0x55f22accfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40646)[0m     @     0x55f22acd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40646)[0m     @     0x55f22ac45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40646)[0m     @     0x55f22accfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40646)[0m     @     0x55f22acd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40646)[0m     @     0x55f22ac45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40646)[0m     @     0x55f22accfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40646)[0m     @     0x55f22acd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40646)[0m     @     0x55f22ac45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40769)[0m     @     0x7f3936bcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40769)[0m     @     0x7f39346fc4f5 at::Tensor::copy_()
[2m[36m(pid=40769)[0m     @     0x7f393a7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40769)[0m     @     0x55f544019fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40769)[0m     @     0x55f543f74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40769)[0m     @     0x55f543fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40769)[0m     @     0x55f544000a20 method_vectorcall
[2m[36m(pid=40769)[0m     @     0x55f543f74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40769)[0m     @     0x55f543fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40769)[0m     @     0x55f544000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40769)[0m     @     0x55f543f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40769)[0m     @     0x55f543fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40769)[0m     @     0x55f544000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40769)[0m     @     0x55f543f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40769)[0m     @     0x55f543fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40769)[0m     @     0x55f544000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40769)[0m     @     0x55f543f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40769)[0m     @     0x55f543fffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40769)[0m     @     0x55f544000643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40769)[0m     @     0x55f543f75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40718)[0m     @     0x7f4d083e64f5 at::Tensor::copy_()
[2m[36m(pid=40718)[0m     @     0x7f4d0a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40664)[0m     @     0x7f78f9a525a4 at::native::copy_()
[2m[36m(pid=40664)[0m     @     0x7f78fa13d4f5 at::Tensor::copy_()
[2m[36m(pid=40664)[0m     @     0x7f78fc6108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40731)[0m     @     0x7f361dc694f5 at::Tensor::copy_()
[2m[36m(pid=40731)[0m     @     0x7f3623d1479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40731)[0m     @     0x56080442cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40731)[0m     @     0x560804387b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40731)[0m     @     0x560804412baf _PyEval_EvalCodeWithName
[2m[36m(pid=40731)[0m     @     0x560804413a20 method_vectorcall
[2m[36m(pid=40731)[0m     @     0x560804387bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40731)[0m     @     0x560804412baf _PyEval_EvalCodeWithName
[2m[36m(pid=40731)[0m     @     0x560804413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40731)[0m     @     0x560804388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40731)[0m     @     0x560804412baf _PyEval_EvalCodeWithName
[2m[36m(pid=40731)[0m     @     0x560804413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40731)[0m     @     0x560804388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40731)[0m     @     0x560804412baf _PyEval_EvalCodeWithName
[2m[36m(pid=40731)[0m     @     0x560804413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40731)[0m     @     0x560804388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40731)[0m     @     0x560804412baf _PyEval_EvalCodeWithName
[2m[36m(pid=40731)[0m     @     0x560804413643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40731)[0m     @     0x560804388689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40676)[0m     @     0x7f3a29cfb4f5 at::Tensor::copy_()
[2m[36m(pid=40676)[0m     @     0x7f3a2fda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40676)[0m     @     0x564861d23fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40676)[0m     @     0x564861c7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40676)[0m     @     0x564861d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=40676)[0m     @     0x564861d0aa20 method_vectorcall
[2m[36m(pid=40676)[0m     @     0x564861c7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40676)[0m     @     0x564861d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=40676)[0m     @     0x564861d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40676)[0m     @     0x564861c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40676)[0m     @     0x564861d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=40676)[0m     @     0x564861d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40676)[0m     @     0x564861c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40676)[0m     @     0x564861d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=40676)[0m     @     0x564861d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40676)[0m     @     0x564861c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40676)[0m     @     0x564861d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=40676)[0m     @     0x564861d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40676)[0m     @     0x564861c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40648)[0m     @     0x7ee8564ee8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40648)[0m     @     0x7ee85401b4f5 at::Tensor::copy_()
[2m[36m(pid=40648)[0m     @     0x7ee85a0c679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40648)[0m     @     0x5572eb39dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40648)[0m     @     0x5572eb2f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40648)[0m     @     0x5572eb383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40648)[0m     @     0x5572eb384a20 method_vectorcall
[2m[36m(pid=40648)[0m     @     0x5572eb2f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40648)[0m     @     0x5572eb383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40648)[0m     @     0x5572eb384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40648)[0m     @     0x5572eb2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40648)[0m     @     0x5572eb383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40648)[0m     @     0x5572eb384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40648)[0m     @     0x5572eb2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40648)[0m     @     0x5572eb383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40648)[0m     @     0x5572eb384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40648)[0m     @     0x5572eb2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40648)[0m     @     0x5572eb383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40648)[0m     @     0x5572eb384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40648)[0m     @     0x5572eb2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40661)[0m     @     0x7f91e25e24f5 at::Tensor::copy_()
[2m[36m(pid=40661)[0m     @     0x7f91e868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40661)[0m     @     0x5618d757bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40661)[0m     @     0x5618d74d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40661)[0m     @     0x5618d7561baf _PyEval_EvalCodeWithName
[2m[36m(pid=40661)[0m     @     0x5618d7562a20 method_vectorcall
[2m[36m(pid=40661)[0m     @     0x5618d74d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40661)[0m     @     0x5618d7561baf _PyEval_EvalCodeWithName
[2m[36m(pid=40661)[0m     @     0x5618d7562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40661)[0m     @     0x5618d74d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40661)[0m     @     0x5618d7561baf _PyEval_EvalCodeWithName
[2m[36m(pid=40661)[0m     @     0x5618d7562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40661)[0m     @     0x5618d74d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40661)[0m     @     0x5618d7561baf _PyEval_EvalCodeWithName
[2m[36m(pid=40661)[0m     @     0x5618d7562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40661)[0m     @     0x5618d74d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40661)[0m     @     0x5618d7561baf _PyEval_EvalCodeWithName
[2m[36m(pid=40661)[0m     @     0x5618d7562643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40661)[0m     @     0x5618d74d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40760)[0m     @     0x7ef99237c4f5 at::Tensor::copy_()
[2m[36m(pid=40760)[0m     @     0x7ef99842779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40760)[0m     @     0x562808a8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40760)[0m     @     0x5628089e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40760)[0m     @     0x562808a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=40760)[0m     @     0x562808a71a20 method_vectorcall
[2m[36m(pid=40760)[0m     @     0x5628089e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40760)[0m     @     0x562808a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=40760)[0m     @     0x562808a71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40760)[0m     @     0x5628089e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40760)[0m     @     0x562808a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=40760)[0m     @     0x562808a71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40760)[0m     @     0x5628089e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40760)[0m     @     0x562808a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=40760)[0m     @     0x562808a71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40760)[0m     @     0x5628089e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40760)[0m     @     0x562808a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=40760)[0m     @     0x562808a71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40760)[0m     @     0x5628089e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40652)[0m     @     0x7fa98aad44f5 at::Tensor::copy_()
[2m[36m(pid=40652)[0m     @     0x7fa990b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40652)[0m     @     0x5562d6026fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40652)[0m     @     0x5562d5f81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40652)[0m     @     0x5562d600cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40652)[0m     @     0x5562d600da20 method_vectorcall
[2m[36m(pid=40652)[0m     @     0x5562d5f81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40652)[0m     @     0x5562d600cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40652)[0m     @     0x5562d600d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40652)[0m     @     0x5562d5f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40652)[0m     @     0x5562d600cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40652)[0m     @     0x5562d600d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40652)[0m     @     0x5562d5f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40652)[0m     @     0x5562d600cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40652)[0m     @     0x5562d600d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40652)[0m     @     0x5562d5f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40652)[0m     @     0x5562d600cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40652)[0m     @     0x5562d600d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40652)[0m     @     0x5562d5f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40722)[0m     @     0x7f6ad749f4f5 at::Tensor::copy_()
[2m[36m(pid=40722)[0m     @     0x7f6ad99728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40722)[0m     @     0x7f6ad749f4f5 at::Tensor::copy_()
[2m[36m(pid=40722)[0m     @     0x7f6add54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40722)[0m     @     0x55faccaf6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40722)[0m     @     0x55facca51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40722)[0m     @     0x55faccadcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40722)[0m     @     0x55faccadda20 method_vectorcall
[2m[36m(pid=40722)[0m     @     0x55facca51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40722)[0m     @     0x55faccadcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40722)[0m     @     0x55faccadd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40722)[0m     @     0x55facca52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40722)[0m     @     0x55faccadcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40722)[0m     @     0x55faccadd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40722)[0m     @     0x55facca52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40722)[0m     @     0x55faccadcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40722)[0m     @     0x55faccadd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40722)[0m     @     0x55facca52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40722)[0m     @     0x55faccadcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40722)[0m     @     0x55faccadd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40722)[0m     @     0x55facca52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40655)[0m     @     0x7ee9751b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40655)[0m     @     0x7ee972ce54f5 at::Tensor::copy_()
[2m[36m(pid=40655)[0m     @     0x7ee978d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40655)[0m     @     0x55958d4acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40655)[0m     @     0x55958d407b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40655)[0m     @     0x55958d492baf _PyEval_EvalCodeWithName
[2m[36m(pid=40655)[0m     @     0x55958d493a20 method_vectorcall
[2m[36m(pid=40655)[0m     @     0x55958d407bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40655)[0m     @     0x55958d492baf _PyEval_EvalCodeWithName
[2m[36m(pid=40655)[0m     @     0x55958d493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40655)[0m     @     0x55958d408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40655)[0m     @     0x55958d492baf _PyEval_EvalCodeWithName
[2m[36m(pid=40655)[0m     @     0x55958d493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40655)[0m     @     0x55958d408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40655)[0m     @     0x55958d492baf _PyEval_EvalCodeWithName
[2m[36m(pid=40655)[0m     @     0x55958d493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40655)[0m     @     0x55958d408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40655)[0m     @     0x55958d492baf _PyEval_EvalCodeWithName
[2m[36m(pid=40655)[0m     @     0x55958d493643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40655)[0m     @     0x55958d408689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40746)[0m     @     0x7fa475c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40746)[0m     @     0x7fa475c8f388 at::native::copy_impl()
[2m[36m(pid=40746)[0m     @     0x7fa475c915a4 at::native::copy_()
[2m[36m(pid=40651)[0m     @     0x7ee250c764f5 at::Tensor::copy_()
[2m[36m(pid=40651)[0m     @     0x7ee256d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40651)[0m     @     0x5613bdbf1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40651)[0m     @     0x5613bdb4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40651)[0m     @     0x5613bdbd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40651)[0m     @     0x5613bdbd8a20 method_vectorcall
[2m[36m(pid=40651)[0m     @     0x5613bdb4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40651)[0m     @     0x5613bdbd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40651)[0m     @     0x5613bdbd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40651)[0m     @     0x5613bdb4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40651)[0m     @     0x5613bdbd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40651)[0m     @     0x5613bdbd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40651)[0m     @     0x5613bdb4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40651)[0m     @     0x5613bdbd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40651)[0m     @     0x5613bdbd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40651)[0m     @     0x5613bdb4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40651)[0m     @     0x5613bdbd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=40651)[0m     @     0x5613bdbd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40651)[0m     @     0x5613bdb4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x7f45afe584f5 at::Tensor::copy_()
[2m[36m(pid=40783)[0m     @     0x7f45b5f0379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40783)[0m     @     0x55c27a320fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40783)[0m     @     0x55c27a27bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x55c27a306baf _PyEval_EvalCodeWithName
[2m[36m(pid=40783)[0m     @     0x55c27a307a20 method_vectorcall
[2m[36m(pid=40783)[0m     @     0x55c27a27bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x55c27a306baf _PyEval_EvalCodeWithName
[2m[36m(pid=40783)[0m     @     0x55c27a307643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40783)[0m     @     0x55c27a27c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x55c27a306baf _PyEval_EvalCodeWithName
[2m[36m(pid=40783)[0m     @     0x55c27a307643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40783)[0m     @     0x55c27a27c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x55c27a306baf _PyEval_EvalCodeWithName
[2m[36m(pid=40783)[0m     @     0x55c27a307643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40783)[0m     @     0x55c27a27c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40783)[0m     @     0x55c27a306baf _PyEval_EvalCodeWithName
[2m[36m(pid=40783)[0m     @     0x55c27a307643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40783)[0m     @     0x55c27a27c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40721)[0m     @     0x7f3ea60ba4f5 at::Tensor::copy_()
[2m[36m(pid=40721)[0m     @     0x7f3ea858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40721)[0m     @     0x7f3ea60ba4f5 at::Tensor::copy_()
[2m[36m(pid=40721)[0m     @     0x7f3eac16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40721)[0m     @     0x55cf6dbddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40721)[0m     @     0x55cf6db38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40721)[0m     @     0x55cf6dbc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40721)[0m     @     0x55cf6dbc4a20 method_vectorcall
[2m[36m(pid=40721)[0m     @     0x55cf6db38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40721)[0m     @     0x55cf6dbc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40721)[0m     @     0x55cf6dbc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40721)[0m     @     0x55cf6db39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40721)[0m     @     0x55cf6dbc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40721)[0m     @     0x55cf6dbc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40721)[0m     @     0x55cf6db39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40721)[0m     @     0x55cf6dbc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40721)[0m     @     0x55cf6dbc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40721)[0m     @     0x55cf6db39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40721)[0m     @     0x55cf6dbc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40721)[0m     @     0x55cf6dbc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40721)[0m     @     0x55cf6db39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40714)[0m     @     0x7f7d46f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40714)[0m     @     0x7f7d44a654f5 at::Tensor::copy_()
[2m[36m(pid=40714)[0m     @     0x7f7d4ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40714)[0m     @     0x55d6ed8f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40714)[0m     @     0x55d6ed84eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40714)[0m     @     0x55d6ed8d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40714)[0m     @     0x55d6ed8daa20 method_vectorcall
[2m[36m(pid=40714)[0m     @     0x55d6ed84ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40714)[0m     @     0x55d6ed8d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40714)[0m     @     0x55d6ed8da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40714)[0m     @     0x55d6ed84f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40714)[0m     @     0x55d6ed8d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40714)[0m     @     0x55d6ed8da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40714)[0m     @     0x55d6ed84f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40714)[0m     @     0x55d6ed8d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40714)[0m     @     0x55d6ed8da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40714)[0m     @     0x55d6ed84f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40714)[0m     @     0x55d6ed8d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=40714)[0m     @     0x55d6ed8da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40714)[0m     @     0x55d6ed84f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40673)[0m     @     0x7f147c760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40673)[0m     @     0x7f147c75e388 at::native::copy_impl()
[2m[36m(pid=40673)[0m     @     0x7f147c7605a4 at::native::copy_()
[2m[36m(pid=40726)[0m     @     0x7f21d2fe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40726)[0m     @     0x7f21d0b104f5 at::Tensor::copy_()
[2m[36m(pid=40726)[0m     @     0x7f21d6bbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40726)[0m     @     0x55694a554fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40726)[0m     @     0x55694a4afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40726)[0m     @     0x55694a53abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40726)[0m     @     0x55694a53ba20 method_vectorcall
[2m[36m(pid=40726)[0m     @     0x55694a4afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40726)[0m     @     0x55694a53abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40726)[0m     @     0x55694a53b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40726)[0m     @     0x55694a4b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40726)[0m     @     0x55694a53abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40726)[0m     @     0x55694a53b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40726)[0m     @     0x55694a4b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40726)[0m     @     0x55694a53abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40726)[0m     @     0x55694a53b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40726)[0m     @     0x55694a4b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40726)[0m     @     0x55694a53abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40726)[0m     @     0x55694a53b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40726)[0m     @     0x55694a4b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40666)[0m     @     0x7eee56bb04f5 at::Tensor::copy_()
[2m[36m(pid=40666)[0m     @     0x7eee5cc5b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40666)[0m     @     0x55bf675a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40666)[0m     @     0x55bf674ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40666)[0m     @     0x55bf6758abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40666)[0m     @     0x55bf6758ba20 method_vectorcall
[2m[36m(pid=40666)[0m     @     0x55bf674ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40666)[0m     @     0x55bf6758abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40666)[0m     @     0x55bf6758b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40666)[0m     @     0x55bf67500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40666)[0m     @     0x55bf6758abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40666)[0m     @     0x55bf6758b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40666)[0m     @     0x55bf67500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40666)[0m     @     0x55bf6758abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40666)[0m     @     0x55bf6758b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40666)[0m     @     0x55bf67500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40666)[0m     @     0x55bf6758abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40666)[0m     @     0x55bf6758b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40666)[0m     @     0x55bf67500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40712)[0m     @     0x7f8ea98215a4 at::native::copy_()
[2m[36m(pid=40712)[0m     @     0x7f8ea9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=40712)[0m     @     0x7f8eac3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40712)[0m     @     0x7f8ea9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=40712)[0m     @     0x7f8eaffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40712)[0m     @     0x563f92266fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40712)[0m     @     0x563f921c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40712)[0m     @     0x563f9224cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40712)[0m     @     0x563f9224da20 method_vectorcall
[2m[36m(pid=40712)[0m     @     0x563f921c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40712)[0m     @     0x563f9224cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40712)[0m     @     0x563f9224d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40712)[0m     @     0x563f921c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40712)[0m     @     0x563f9224cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40712)[0m     @     0x563f9224d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40712)[0m     @     0x563f921c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40712)[0m     @     0x563f9224cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40712)[0m     @     0x563f9224d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40712)[0m     @     0x563f921c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40712)[0m     @     0x563f9224cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40647)[0m     @     0x7f191e04c5a4 at::native::copy_()
[2m[36m(pid=40647)[0m     @     0x7f191e7374f5 at::Tensor::copy_()
[2m[36m(pid=40647)[0m     @     0x7f1920c0a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40647)[0m     @     0x7f191e7374f5 at::Tensor::copy_()
[2m[36m(pid=40647)[0m     @     0x7f19247e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40647)[0m     @     0x5628da3d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40647)[0m     @     0x5628da332b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40647)[0m     @     0x5628da3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40647)[0m     @     0x5628da3bea20 method_vectorcall
[2m[36m(pid=40710)[0m     @     0x7fc6b858b5a4 at::native::copy_()
[2m[36m(pid=40710)[0m     @     0x7fc6b8c764f5 at::Tensor::copy_()
[2m[36m(pid=40710)[0m     @     0x7fc6bb1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40710)[0m     @     0x7fc6b8c764f5 at::Tensor::copy_()
[2m[36m(pid=40710)[0m     @     0x7fc6bed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40710)[0m     @     0x564db1c54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40710)[0m     @     0x564db1bafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40710)[0m     @     0x564db1c3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40710)[0m     @     0x564db1c3ba20 method_vectorcall
[2m[36m(pid=40710)[0m     @     0x564db1bafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40710)[0m     @     0x564db1c3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40710)[0m     @     0x564db1c3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40710)[0m     @     0x564db1bb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40710)[0m     @     0x564db1c3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40669)[0m     @     0x7f60915e35a4 at::native::copy_()
[2m[36m(pid=40669)[0m     @     0x7f6091cce4f5 at::Tensor::copy_()
[2m[36m(pid=40669)[0m     @     0x7f60941a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40669)[0m     @     0x7f6091cce4f5 at::Tensor::copy_()
[2m[36m(pid=40645)[0m     @     0x7fa9855cb4f5 at::Tensor::copy_()
[2m[36m(pid=40645)[0m     @     0x7fa987a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40668)[0m     @     0x7f46310e75a4 at::native::copy_()
[2m[36m(pid=40668)[0m     @     0x7f46317d24f5 at::Tensor::copy_()
[2m[36m(pid=40668)[0m     @     0x7f4633ca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40668)[0m     @     0x7f46317d24f5 at::Tensor::copy_()
[2m[36m(pid=40668)[0m     @     0x7f463787d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40668)[0m     @     0x558d98573fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40668)[0m     @     0x558d984ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40668)[0m     @     0x558d98559baf _PyEval_EvalCodeWithName
[2m[36m(pid=40668)[0m     @     0x558d9855aa20 method_vectorcall
[2m[36m(pid=40668)[0m     @     0x558d984cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40668)[0m     @     0x558d98559baf _PyEval_EvalCodeWithName
[2m[36m(pid=40736)[0m     @     0x7f1613cfb5a4 at::native::copy_()
[2m[36m(pid=40736)[0m     @     0x7f16143e64f5 at::Tensor::copy_()
[2m[36m(pid=40736)[0m     @     0x7f16168b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40732)[0m     @     0x7f1ff4abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40732)[0m     @     0x7f1ff3f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40732)[0m     @     0x7f1ff3f5f388 at::native::copy_impl()
[2m[36m(pid=40732)[0m     @     0x7f1ff3f615a4 at::native::copy_()
[2m[36m(pid=40732)[0m     @     0x7f1ff464c4f5 at::Tensor::copy_()
[2m[36m(pid=40719)[0m     @     0x7f6b7fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40719)[0m     @     0x7f6b7d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=40719)[0m     @     0x7f6b8367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40719)[0m     @     0x55577e219fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40719)[0m     @     0x55577e174b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40719)[0m     @     0x55577e1ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40719)[0m     @     0x55577e200a20 method_vectorcall
[2m[36m(pid=40719)[0m     @     0x55577e174bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40719)[0m     @     0x55577e1ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40719)[0m     @     0x55577e200643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40719)[0m     @     0x55577e175689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40719)[0m     @     0x55577e1ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40719)[0m     @     0x55577e200643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40719)[0m     @     0x55577e175689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40719)[0m     @     0x55577e1ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40719)[0m     @     0x55577e200643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40719)[0m     @     0x55577e175689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40719)[0m     @     0x55577e1ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40719)[0m     @     0x55577e200643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40719)[0m     @     0x55577e175689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40725)[0m     @     0x7ef2aa1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40725)[0m     @     0x7ef2a7c8e4f5 at::Tensor::copy_()
[2m[36m(pid=40725)[0m     @     0x7ef2add3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40725)[0m     @     0x558d1672ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40725)[0m     @     0x558d1668ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40725)[0m     @     0x558d16715baf _PyEval_EvalCodeWithName
[2m[36m(pid=40725)[0m     @     0x558d16716a20 method_vectorcall
[2m[36m(pid=40725)[0m     @     0x558d1668abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40725)[0m     @     0x558d16715baf _PyEval_EvalCodeWithName
[2m[36m(pid=40725)[0m     @     0x558d16716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40725)[0m     @     0x558d1668b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40725)[0m     @     0x558d16715baf _PyEval_EvalCodeWithName
[2m[36m(pid=40725)[0m     @     0x558d16716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40725)[0m     @     0x558d1668b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40725)[0m     @     0x558d16715baf _PyEval_EvalCodeWithName
[2m[36m(pid=40725)[0m     @     0x558d16716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40725)[0m     @     0x558d1668b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40725)[0m     @     0x558d16715baf _PyEval_EvalCodeWithName
[2m[36m(pid=40725)[0m     @     0x558d16716643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40725)[0m     @     0x558d1668b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40667)[0m     @     0x7f7b7aa485a4 at::native::copy_()
[2m[36m(pid=40667)[0m     @     0x7f7b7b1334f5 at::Tensor::copy_()
[2m[36m(pid=40667)[0m     @     0x7f7b7d6068de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40677)[0m     @     0x7ef89beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40677)[0m     @     0x7ef8999e54f5 at::Tensor::copy_()
[2m[36m(pid=40677)[0m     @     0x7ef89fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40677)[0m     @     0x556606920fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40677)[0m     @     0x55660687bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40677)[0m     @     0x556606906baf _PyEval_EvalCodeWithName
[2m[36m(pid=40677)[0m     @     0x556606907a20 method_vectorcall
[2m[36m(pid=40677)[0m     @     0x55660687bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40677)[0m     @     0x556606906baf _PyEval_EvalCodeWithName
[2m[36m(pid=40677)[0m     @     0x556606907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40677)[0m     @     0x55660687c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40677)[0m     @     0x556606906baf _PyEval_EvalCodeWithName
[2m[36m(pid=40677)[0m     @     0x556606907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40677)[0m     @     0x55660687c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40677)[0m     @     0x556606906baf _PyEval_EvalCodeWithName
[2m[36m(pid=40677)[0m     @     0x556606907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40677)[0m     @     0x55660687c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40677)[0m     @     0x556606906baf _PyEval_EvalCodeWithName
[2m[36m(pid=40677)[0m     @     0x556606907643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40677)[0m     @     0x55660687c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x7f4f0c164d91 at::TensorIterator::for_each()
[2m[36m(pid=40777)[0m     @     0x7f4f0ca47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40777)[0m     @     0x7f4f0ca6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40708)[0m     @     0x7f3447de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40708)[0m     @     0x7f34459134f5 at::Tensor::copy_()
[2m[36m(pid=40708)[0m     @     0x7f344b9be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40708)[0m     @     0x5616d5f46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40708)[0m     @     0x5616d5ea1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40708)[0m     @     0x5616d5f2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40708)[0m     @     0x5616d5f2da20 method_vectorcall
[2m[36m(pid=40708)[0m     @     0x5616d5ea1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40708)[0m     @     0x5616d5f2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40708)[0m     @     0x5616d5f2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40708)[0m     @     0x5616d5ea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40708)[0m     @     0x5616d5f2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40708)[0m     @     0x5616d5f2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40708)[0m     @     0x5616d5ea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40708)[0m     @     0x5616d5f2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40708)[0m     @     0x5616d5f2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40708)[0m     @     0x5616d5ea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40708)[0m     @     0x5616d5f2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40708)[0m     @     0x5616d5f2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40708)[0m     @     0x5616d5ea2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40717)[0m     @     0x7f093533bad3 at::TensorIterator::for_each()
[2m[36m(pid=40717)[0m     @     0x7f093533bd91 at::TensorIterator::for_each()
[2m[36m(pid=40717)[0m     @     0x7f0935c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40654)[0m     @     0x7f1a77e6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40654)[0m     @     0x7f1a7730ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40654)[0m     @     0x7f1a7730a388 at::native::copy_impl()
[2m[36m(pid=40654)[0m     @     0x7f1a7730c5a4 at::native::copy_()
[2m[36m(pid=40729)[0m     @     0x7eda477884f5 at::Tensor::copy_()
[2m[36m(pid=40729)[0m     @     0x7eda4d83379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40729)[0m     @     0x55610b5fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40729)[0m     @     0x55610b55ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40729)[0m     @     0x55610b5e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40729)[0m     @     0x55610b5e6a20 method_vectorcall
[2m[36m(pid=40729)[0m     @     0x55610b55abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40729)[0m     @     0x55610b5e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40729)[0m     @     0x55610b5e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40729)[0m     @     0x55610b55b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40729)[0m     @     0x55610b5e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40729)[0m     @     0x55610b5e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40729)[0m     @     0x55610b55b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40729)[0m     @     0x55610b5e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40729)[0m     @     0x55610b5e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40729)[0m     @     0x55610b55b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40729)[0m     @     0x55610b5e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40729)[0m     @     0x55610b5e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40729)[0m     @     0x55610b55b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40681)[0m     @     0x7efc4c9ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40681)[0m     @     0x7efc4a4fb4f5 at::Tensor::copy_()
[2m[36m(pid=40681)[0m     @     0x7efc505a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40681)[0m     @     0x5648e8343fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40681)[0m     @     0x5648e829eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40681)[0m     @     0x5648e8329baf _PyEval_EvalCodeWithName
[2m[36m(pid=40681)[0m     @     0x5648e832aa20 method_vectorcall
[2m[36m(pid=40681)[0m     @     0x5648e829ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40681)[0m     @     0x5648e8329baf _PyEval_EvalCodeWithName
[2m[36m(pid=40681)[0m     @     0x5648e832a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40681)[0m     @     0x5648e829f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40681)[0m     @     0x5648e8329baf _PyEval_EvalCodeWithName
[2m[36m(pid=40681)[0m     @     0x5648e832a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40681)[0m     @     0x5648e829f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40681)[0m     @     0x5648e8329baf _PyEval_EvalCodeWithName
[2m[36m(pid=40681)[0m     @     0x5648e832a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40681)[0m     @     0x5648e829f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40681)[0m     @     0x5648e8329baf _PyEval_EvalCodeWithName
[2m[36m(pid=40681)[0m     @     0x5648e832a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40681)[0m     @     0x5648e829f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40733)[0m     @     0x7f9d659458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40733)[0m     @     0x7f9d634724f5 at::Tensor::copy_()
[2m[36m(pid=40733)[0m     @     0x7f9d6951d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40733)[0m     @     0x55c48f5d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40733)[0m     @     0x55c48f531b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40733)[0m     @     0x55c48f5bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40733)[0m     @     0x55c48f5bda20 method_vectorcall
[2m[36m(pid=40733)[0m     @     0x55c48f531bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40733)[0m     @     0x55c48f5bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40733)[0m     @     0x55c48f5bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40733)[0m     @     0x55c48f532689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40733)[0m     @     0x55c48f5bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40733)[0m     @     0x55c48f5bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40733)[0m     @     0x55c48f532689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40733)[0m     @     0x55c48f5bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40733)[0m     @     0x55c48f5bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40733)[0m     @     0x55c48f532689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40733)[0m     @     0x55c48f5bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40733)[0m     @     0x55c48f5bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40733)[0m     @     0x55c48f532689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40761)[0m     @     0x7fb6ea82b4f5 at::Tensor::copy_()
[2m[36m(pid=40761)[0m     @     0x7fb6f08d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40761)[0m     @     0x55559e091fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40761)[0m     @     0x55559dfecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40761)[0m     @     0x55559e077baf _PyEval_EvalCodeWithName
[2m[36m(pid=40761)[0m     @     0x55559e078a20 method_vectorcall
[2m[36m(pid=40761)[0m     @     0x55559dfecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40761)[0m     @     0x55559e077baf _PyEval_EvalCodeWithName
[2m[36m(pid=40761)[0m     @     0x55559e078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40761)[0m     @     0x55559dfed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40761)[0m     @     0x55559e077baf _PyEval_EvalCodeWithName
[2m[36m(pid=40761)[0m     @     0x55559e078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40761)[0m     @     0x55559dfed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40761)[0m     @     0x55559e077baf _PyEval_EvalCodeWithName
[2m[36m(pid=40761)[0m     @     0x55559e078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40761)[0m     @     0x55559dfed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40761)[0m     @     0x55559e077baf _PyEval_EvalCodeWithName
[2m[36m(pid=40761)[0m     @     0x55559e078643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40761)[0m     @     0x55559dfed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40679)[0m     @     0x7efc0a641d91 at::TensorIterator::for_each()
[2m[36m(pid=40679)[0m     @     0x7efc0af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40679)[0m     @     0x7efc0af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40679)[0m     @     0x7efc0a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40679)[0m     @     0x7efc0a3e7388 at::native::copy_impl()
[2m[36m(pid=40704)[0m     @     0x7eded41244f5 at::Tensor::copy_()
[2m[36m(pid=40704)[0m     @     0x7ededa1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40704)[0m     @     0x564ba3c48fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40704)[0m     @     0x564ba3ba3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40704)[0m     @     0x564ba3c2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40704)[0m     @     0x564ba3c2fa20 method_vectorcall
[2m[36m(pid=40704)[0m     @     0x564ba3ba3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40704)[0m     @     0x564ba3c2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40704)[0m     @     0x564ba3c2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40704)[0m     @     0x564ba3ba4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40704)[0m     @     0x564ba3c2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40704)[0m     @     0x564ba3c2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40704)[0m     @     0x564ba3ba4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40704)[0m     @     0x564ba3c2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40704)[0m     @     0x564ba3c2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40704)[0m     @     0x564ba3ba4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40704)[0m     @     0x564ba3c2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40704)[0m     @     0x564ba3c2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40704)[0m     @     0x564ba3ba4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40716)[0m     @     0x7f916659b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40716)[0m     @     0x7f91640c84f5 at::Tensor::copy_()
[2m[36m(pid=40716)[0m     @     0x7f916a17379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40716)[0m     @     0x55f8092bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40716)[0m     @     0x55f80921ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40716)[0m     @     0x55f8092a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40716)[0m     @     0x55f8092a6a20 method_vectorcall
[2m[36m(pid=40716)[0m     @     0x55f80921abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40716)[0m     @     0x55f8092a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40716)[0m     @     0x55f8092a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40716)[0m     @     0x55f80921b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40716)[0m     @     0x55f8092a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40716)[0m     @     0x55f8092a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40716)[0m     @     0x55f80921b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40716)[0m     @     0x55f8092a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40716)[0m     @     0x55f8092a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40716)[0m     @     0x55f80921b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40716)[0m     @     0x55f8092a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=40716)[0m     @     0x55f8092a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40716)[0m     @     0x55f80921b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40724)[0m     @     0x5605284e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40724)[0m     @     0x56052845a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x7ef3b692ad91 at::TensorIterator::for_each()
[2m[36m(pid=40745)[0m     @     0x7ef3b720db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=40745)[0m     @     0x7ef3b7230c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40745)[0m     @     0x7ef3b66d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40745)[0m     @     0x7ef3b66d0388 at::native::copy_impl()
[2m[36m(pid=40650)[0m     @     0x55f614934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40650)[0m     @     0x55f6148a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40650)[0m     @     0x55f614933baf _PyEval_EvalCodeWithName
[2m[36m(pid=40650)[0m     @     0x55f614934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40650)[0m     @     0x55f6148a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40650)[0m     @     0x55f614933baf _PyEval_EvalCodeWithName
[2m[36m(pid=40650)[0m     @     0x55f614934643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40650)[0m     @     0x55f6148a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40768)[0m     @     0x7f263f26f4f5 at::Tensor::copy_()
[2m[36m(pid=40768)[0m     @     0x7f264531a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40768)[0m     @     0x55e81275ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40768)[0m     @     0x55e8126bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40768)[0m     @     0x55e812745baf _PyEval_EvalCodeWithName
[2m[36m(pid=40768)[0m     @     0x55e812746a20 method_vectorcall
[2m[36m(pid=40768)[0m     @     0x55e8126babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40768)[0m     @     0x55e812745baf _PyEval_EvalCodeWithName
[2m[36m(pid=40768)[0m     @     0x55e812746643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40768)[0m     @     0x55e8126bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40768)[0m     @     0x55e812745baf _PyEval_EvalCodeWithName
[2m[36m(pid=40768)[0m     @     0x55e812746643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40768)[0m     @     0x55e8126bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40768)[0m     @     0x55e812745baf _PyEval_EvalCodeWithName
[2m[36m(pid=40768)[0m     @     0x55e812746643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40768)[0m     @     0x55e8126bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40768)[0m     @     0x55e812745baf _PyEval_EvalCodeWithName
[2m[36m(pid=40768)[0m     @     0x55e812746643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40768)[0m     @     0x55e8126bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40680)[0m     @     0x7f747a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=40680)[0m     @     0x7f748016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40680)[0m     @     0x56519473cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40680)[0m     @     0x565194697b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40680)[0m     @     0x565194722baf _PyEval_EvalCodeWithName
[2m[36m(pid=40680)[0m     @     0x565194723a20 method_vectorcall
[2m[36m(pid=40680)[0m     @     0x565194697bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40680)[0m     @     0x565194722baf _PyEval_EvalCodeWithName
[2m[36m(pid=40680)[0m     @     0x565194723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40680)[0m     @     0x565194698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40680)[0m     @     0x565194722baf _PyEval_EvalCodeWithName
[2m[36m(pid=40680)[0m     @     0x565194723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40680)[0m     @     0x565194698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40680)[0m     @     0x565194722baf _PyEval_EvalCodeWithName
[2m[36m(pid=40680)[0m     @     0x565194723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40680)[0m     @     0x565194698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40680)[0m     @     0x565194722baf _PyEval_EvalCodeWithName
[2m[36m(pid=40680)[0m     @     0x565194723643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40680)[0m     @     0x565194698689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40759)[0m     @     0x7fc0be27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40759)[0m     @     0x5624a804afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40759)[0m     @     0x5624a7fa5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40759)[0m     @     0x5624a8030baf _PyEval_EvalCodeWithName
[2m[36m(pid=40759)[0m     @     0x5624a8031a20 method_vectorcall
[2m[36m(pid=40759)[0m     @     0x5624a7fa5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40759)[0m     @     0x5624a8030baf _PyEval_EvalCodeWithName
[2m[36m(pid=40759)[0m     @     0x5624a8031643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40759)[0m     @     0x5624a7fa6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40759)[0m     @     0x5624a8030baf _PyEval_EvalCodeWithName
[2m[36m(pid=40759)[0m     @     0x5624a8031643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40759)[0m     @     0x5624a7fa6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40759)[0m     @     0x5624a8030baf _PyEval_EvalCodeWithName
[2m[36m(pid=40759)[0m     @     0x5624a8031643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40759)[0m     @     0x5624a7fa6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40759)[0m     @     0x5624a8030baf _PyEval_EvalCodeWithName
[2m[36m(pid=40759)[0m     @     0x5624a8031643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40759)[0m     @     0x5624a7fa6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40670)[0m     @     0x7f2e491c84f5 at::Tensor::copy_()
[2m[36m(pid=40670)[0m     @     0x7f2e4f27379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40670)[0m     @     0x55de4d3cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40670)[0m     @     0x55de4d328b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40670)[0m     @     0x55de4d3b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40670)[0m     @     0x55de4d3b4a20 method_vectorcall
[2m[36m(pid=40670)[0m     @     0x55de4d328bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40670)[0m     @     0x55de4d3b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40670)[0m     @     0x55de4d3b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40670)[0m     @     0x55de4d329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40670)[0m     @     0x55de4d3b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40670)[0m     @     0x55de4d3b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40670)[0m     @     0x55de4d329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40670)[0m     @     0x55de4d3b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40670)[0m     @     0x55de4d3b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40670)[0m     @     0x55de4d329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40670)[0m     @     0x55de4d3b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=40670)[0m     @     0x55de4d3b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40670)[0m     @     0x55de4d329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40663)[0m     @     0x560094feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40663)[0m     @     0x560095075baf _PyEval_EvalCodeWithName
[2m[36m(pid=40663)[0m     @     0x560095076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40663)[0m     @     0x560094feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40663)[0m     @     0x560095075baf _PyEval_EvalCodeWithName
[2m[36m(pid=40663)[0m     @     0x560095076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40663)[0m     @     0x560094feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40663)[0m     @     0x560095075baf _PyEval_EvalCodeWithName
[2m[36m(pid=40663)[0m     @     0x560095076643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40663)[0m     @     0x560094feb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40701)[0m     @     0x5630edc0dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40701)[0m     @     0x5630edc98baf _PyEval_EvalCodeWithName
[2m[36m(pid=40701)[0m     @     0x5630edc99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40701)[0m     @     0x5630edc0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40701)[0m     @     0x5630edc98baf _PyEval_EvalCodeWithName
[2m[36m(pid=40701)[0m     @     0x5630edc99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40701)[0m     @     0x5630edc0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40701)[0m     @     0x5630edc98baf _PyEval_EvalCodeWithName
[2m[36m(pid=40701)[0m     @     0x5630edc99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40701)[0m     @     0x5630edc0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40701)[0m     @     0x5630edc98baf _PyEval_EvalCodeWithName
[2m[36m(pid=40701)[0m     @     0x5630edc99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40701)[0m     @     0x5630edc0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40764)[0m     @     0x55ec41434689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40764)[0m     @     0x55ec414bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40764)[0m     @     0x55ec414bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40764)[0m     @     0x55ec41434689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40764)[0m     @     0x55ec414bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40764)[0m     @     0x55ec414bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40764)[0m     @     0x55ec41434689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40718)[0m     @     0x7f4d083e64f5 at::Tensor::copy_()
[2m[36m(pid=40718)[0m     @     0x7f4d0e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40718)[0m     @     0x5624104d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40718)[0m     @     0x562410431b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40718)[0m     @     0x5624104bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40718)[0m     @     0x5624104bda20 method_vectorcall
[2m[36m(pid=40718)[0m     @     0x562410431bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40718)[0m     @     0x5624104bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40718)[0m     @     0x5624104bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40718)[0m     @     0x562410432689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40718)[0m     @     0x5624104bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40718)[0m     @     0x5624104bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40718)[0m     @     0x562410432689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40718)[0m     @     0x5624104bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40718)[0m     @     0x5624104bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40718)[0m     @     0x562410432689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40718)[0m     @     0x5624104bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40718)[0m     @     0x5624104bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40718)[0m     @     0x562410432689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40664)[0m     @     0x7f78fa13d4f5 at::Tensor::copy_()
[2m[36m(pid=40664)[0m     @     0x7f79001e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40664)[0m     @     0x55d65a42ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40664)[0m     @     0x55d65a38ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40664)[0m     @     0x55d65a415baf _PyEval_EvalCodeWithName
[2m[36m(pid=40664)[0m     @     0x55d65a416a20 method_vectorcall
[2m[36m(pid=40664)[0m     @     0x55d65a38abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40664)[0m     @     0x55d65a415baf _PyEval_EvalCodeWithName
[2m[36m(pid=40664)[0m     @     0x55d65a416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40664)[0m     @     0x55d65a38b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40664)[0m     @     0x55d65a415baf _PyEval_EvalCodeWithName
[2m[36m(pid=40664)[0m     @     0x55d65a416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40664)[0m     @     0x55d65a38b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40664)[0m     @     0x55d65a415baf _PyEval_EvalCodeWithName
[2m[36m(pid=40664)[0m     @     0x55d65a416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40664)[0m     @     0x55d65a38b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40664)[0m     @     0x55d65a415baf _PyEval_EvalCodeWithName
[2m[36m(pid=40664)[0m     @     0x55d65a416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40664)[0m     @     0x55d65a38b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40746)[0m     @     0x7fa47637c4f5 at::Tensor::copy_()
[2m[36m(pid=40746)[0m     @     0x7fa47884f8de torch::autograd::VariableType::(anonymous namespace== Status ==
Memory usage on this node: 23.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_cae01_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_cae01_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_cae01_00000_0_2020-11-05_10-08-03/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
)::copy_()
[2m[36m(pid=40746)[0m     @     0x7fa47637c4f5 at::Tensor::copy_()
[2m[36m(pid=40746)[0m     @     0x7fa47c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40746)[0m     @     0x55e8cd667fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40746)[0m     @     0x55e8cd5c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40746)[0m     @     0x55e8cd64dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40746)[0m     @     0x55e8cd64ea20 method_vectorcall
[2m[36m(pid=40746)[0m     @     0x55e8cd5c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40746)[0m     @     0x55e8cd64dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40746)[0m     @     0x55e8cd64e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40746)[0m     @     0x55e8cd5c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40746)[0m     @     0x55e8cd64dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40746)[0m     @     0x55e8cd64e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40746)[0m     @     0x55e8cd5c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40746)[0m     @     0x55e8cd64dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40746)[0m     @     0x55e8cd64e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40746)[0m     @     0x55e8cd5c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40746)[0m     @     0x55e8cd64dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40746)[0m     @     0x55e8cd64e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40746)[0m     @     0x55e8cd5c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40673)[0m     @     0x7f147ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=40673)[0m     @     0x7f147f31e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40673)[0m     @     0x7f147ce4b4f5 at::Tensor::copy_()
[2m[36m(pid=40673)[0m     @     0x7f1482ef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40673)[0m     @     0x5627e7ae8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40673)[0m     @     0x5627e7a43b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40673)[0m     @     0x5627e7acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40673)[0m     @     0x5627e7acfa20 method_vectorcall
[2m[36m(pid=40673)[0m     @     0x5627e7a43bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40673)[0m     @     0x5627e7acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40673)[0m     @     0x5627e7acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40673)[0m     @     0x5627e7a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40673)[0m     @     0x5627e7acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40673)[0m     @     0x5627e7acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40673)[0m     @     0x5627e7a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40673)[0m     @     0x5627e7acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40673)[0m     @     0x5627e7acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40673)[0m     @     0x5627e7a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40673)[0m     @     0x5627e7acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40673)[0m     @     0x5627e7acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40673)[0m     @     0x5627e7a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40712)[0m     @     0x563f9224d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40712)[0m     @     0x563f921c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40647)[0m     @     0x5628da332bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40647)[0m     @     0x5628da3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40647)[0m     @     0x5628da3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40647)[0m     @     0x5628da333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40647)[0m     @     0x5628da3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40647)[0m     @     0x5628da3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40647)[0m     @     0x5628da333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40647)[0m     @     0x5628da3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40647)[0m     @     0x5628da3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40647)[0m     @     0x5628da333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40647)[0m     @     0x5628da3bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40647)[0m     @     0x5628da3be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40647)[0m     @     0x5628da333689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40710)[0m     @     0x564db1c3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40710)[0m     @     0x564db1bb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40710)[0m     @     0x564db1c3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40710)[0m     @     0x564db1c3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40710)[0m     @     0x564db1bb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40710)[0m     @     0x564db1c3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=40710)[0m     @     0x564db1c3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40710)[0m     @     0x564db1bb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40669)[0m     @     0x7f6097d7979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40669)[0m     @     0x56357b8c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40669)[0m     @     0x56357b820b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40669)[0m     @     0x56357b8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40669)[0m     @     0x56357b8aca20 method_vectorcall
[2m[36m(pid=40669)[0m     @     0x56357b820bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40669)[0m     @     0x56357b8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40669)[0m     @     0x56357b8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40669)[0m     @     0x56357b821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40669)[0m     @     0x56357b8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40669)[0m     @     0x56357b8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40669)[0m     @     0x56357b821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40669)[0m     @     0x56357b8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40669)[0m     @     0x56357b8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40669)[0m     @     0x56357b821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40669)[0m     @     0x56357b8abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40669)[0m     @     0x56357b8ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40669)[0m     @     0x56357b821689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40645)[0m     @     0x7fa9855cb4f5 at::Tensor::copy_()
[2m[36m(pid=40645)[0m     @     0x7fa98b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40645)[0m     @     0x559090348fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40645)[0m     @     0x5590902a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40645)[0m     @     0x55909032ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40645)[0m     @     0x55909032fa20 method_vectorcall
[2m[36m(pid=40645)[0m     @     0x5590902a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40645)[0m     @     0x55909032ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40645)[0m     @     0x55909032f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40645)[0m     @     0x5590902a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40645)[0m     @     0x55909032ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40645)[0m     @     0x55909032f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40645)[0m     @     0x5590902a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40645)[0m     @     0x55909032ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40645)[0m     @     0x55909032f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40645)[0m     @     0x5590902a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40645)[0m     @     0x55909032ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=40645)[0m     @     0x55909032f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40645)[0m     @     0x5590902a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40668)[0m     @     0x558d9855a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40668)[0m     @     0x558d984cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40668)[0m     @     0x558d98559baf _PyEval_EvalCodeWithName
[2m[36m(pid=40668)[0m     @     0x558d9855a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40668)[0m     @     0x558d984cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40668)[0m     @     0x558d98559baf _PyEval_EvalCodeWithName
[2m[36m(pid=40668)[0m     @     0x558d9855a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40668)[0m     @     0x558d984cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40668)[0m     @     0x558d98559baf _PyEval_EvalCodeWithName
[2m[36m(pid=40668)[0m     @     0x558d9855a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40668)[0m     @     0x558d984cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40736)[0m     @     0x7f16143e64f5 at::Tensor::copy_()
[2m[36m(pid=40736)[0m     @     0x7f161a49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40736)[0m     @     0x55fde43a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40736)[0m     @     0x55fde42feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40736)[0m     @     0x55fde4389baf _PyEval_EvalCodeWithName
[2m[36m(pid=40736)[0m     @     0x55fde438aa20 method_vectorcall
[2m[36m(pid=40736)[0m     @     0x55fde42febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40736)[0m     @     0x55fde4389baf _PyEval_EvalCodeWithName
[2m[36m(pid=40736)[0m     @     0x55fde438a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40736)[0m     @     0x55fde42ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40736)[0m     @     0x55fde4389baf _PyEval_EvalCodeWithName
[2m[36m(pid=40736)[0m     @     0x55fde438a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40736)[0m     @     0x55fde42ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40736)[0m     @     0x55fde4389baf _PyEval_EvalCodeWithName
[2m[36m(pid=40736)[0m     @     0x55fde438a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40736)[0m     @     0x55fde42ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40736)[0m     @     0x55fde4389baf _PyEval_EvalCodeWithName
[2m[36m(pid=40736)[0m     @     0x55fde438a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40736)[0m     @     0x55fde42ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40732)[0m     @     0x7f1ff6b1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40732)[0m     @     0x7f1ff464c4f5 at::Tensor::copy_()
[2m[36m(pid=40732)[0m     @     0x7f1ffa6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40732)[0m     @     0x5559ec349fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40732)[0m     @     0x5559ec2a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40732)[0m     @     0x5559ec32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40732)[0m     @     0x5559ec330a20 method_vectorcall
[2m[36m(pid=40732)[0m     @     0x5559ec2a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40732)[0m     @     0x5559ec32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40732)[0m     @     0x5559ec330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40732)[0m     @     0x5559ec2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40732)[0m     @     0x5559ec32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40732)[0m     @     0x5559ec330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40732)[0m     @     0x5559ec2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40732)[0m     @     0x5559ec32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40667)[0m     @     0x7f7b7b1334f5 at::Tensor::copy_()
[2m[36m(pid=40667)[0m     @     0x7f7b811de79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40667)[0m     @     0x55d44c757fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40667)[0m     @     0x55d44c6b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40667)[0m     @     0x55d44c73dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40667)[0m     @     0x55d44c73ea20 method_vectorcall
[2m[36m(pid=40667)[0m     @     0x55d44c6b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40667)[0m     @     0x55d44c73dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40667)[0m     @     0x55d44c73e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40667)[0m     @     0x55d44c6b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40667)[0m     @     0x55d44c73dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40667)[0m     @     0x55d44c73e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40667)[0m     @     0x55d44c6b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40667)[0m     @     0x55d44c73dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40667)[0m     @     0x55d44c73e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40667)[0m     @     0x55d44c6b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40667)[0m     @     0x55d44c73dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40667)[0m     @     0x55d44c73e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40667)[0m     @     0x55d44c6b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x7f4f0bf0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40777)[0m     @     0x7f4f0bf0a388 at::native::copy_impl()
[2m[36m(pid=40777)[0m     @     0x7f4f0bf0c5a4 at::native::copy_()
[2m[36m(pid=40717)[0m     @     0x7f0935c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=40717)[0m     @     0x7f09350e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=40717)[0m     @     0x7f09350e1388 at::native::copy_impl()
[2m[36m(pid=40717)[0m     @     0x7f09350e35a4 at::native::copy_()
[2m[36m(pid=40654)[0m     @     0x7f1a779f74f5 at::Tensor::copy_()
[2m[36m(pid=40654)[0m     @     0x7f1a79eca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40654)[0m     @     0x7f1a779f74f5 at::Tensor::copy_()
[2m[36m(pid=40654)[0m     @     0x7f1a7daa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40654)[0m     @     0x5575b9281fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40654)[0m     @     0x5575b91dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40654)[0m     @     0x5575b9267baf _PyEval_EvalCodeWithName
[2m[36m(pid=40654)[0m     @     0x5575b9268a20 method_vectorcall
[2m[36m(pid=40654)[0m     @     0x5575b91dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40654)[0m     @     0x5575b9267baf _PyEval_EvalCodeWithName
[2m[36m(pid=40654)[0m     @     0x5575b9268643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40654)[0m     @     0x5575b91dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40654)[0m     @     0x5575b9267baf _PyEval_EvalCodeWithName
[2m[36m(pid=40654)[0m     @     0x5575b9268643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40654)[0m     @     0x5575b91dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40654)[0m     @     0x5575b9267baf _PyEval_EvalCodeWithName
[2m[36m(pid=40654)[0m     @     0x5575b9268643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40654)[0m     @     0x5575b91dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40654)[0m     @     0x5575b9267baf _PyEval_EvalCodeWithName
[2m[36m(pid=40654)[0m     @     0x5575b9268643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40654)[0m     @     0x5575b91dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40679)[0m     @     0x7efc0a3e95a4 at::native::copy_()
[2m[36m(pid=40679)[0m     @     0x7efc0aad44f5 at::Tensor::copy_()
[2m[36m(pid=40679)[0m     @     0x7efc0cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40745)[0m     @     0x7ef3b66d25a4 at::native::copy_()
[2m[36m(pid=40745)[0m     @     0x7ef3b6dbd4f5 at::Tensor::copy_()
[2m[36m(pid=40732)[0m     @     0x5559ec330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40732)[0m     @     0x5559ec2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40732)[0m     @     0x5559ec32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=40732)[0m     @     0x5559ec330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40732)[0m     @     0x5559ec2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x7f4f0c5f74f5 at::Tensor::copy_()
[2m[36m(pid=40717)[0m     @     0x7f09357ce4f5 at::Tensor::copy_()
[2m[36m(pid=40679)[0m     @     0x7efc0aad44f5 at::Tensor::copy_()
[2m[36m(pid=40679)[0m     @     0x7efc10b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40679)[0m     @     0x55e78013ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40679)[0m     @     0x55e78009ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40679)[0m     @     0x55e780125baf _PyEval_EvalCodeWithName
[2m[36m(pid=40679)[0m     @     0x55e780126a20 method_vectorcall
[2m[36m(pid=40679)[0m     @     0x55e78009abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40679)[0m     @     0x55e780125baf _PyEval_EvalCodeWithName
[2m[36m(pid=40679)[0m     @     0x55e780126643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40679)[0m     @     0x55e78009b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40679)[0m     @     0x55e780125baf _PyEval_EvalCodeWithName
[2m[36m(pid=40679)[0m     @     0x55e780126643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40679)[0m     @     0x55e78009b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40679)[0m     @     0x55e780125baf _PyEval_EvalCodeWithName
[2m[36m(pid=40679)[0m     @     0x55e780126643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40679)[0m     @     0x55e78009b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40679)[0m     @     0x55e780125baf _PyEval_EvalCodeWithName
[2m[36m(pid=40679)[0m     @     0x55e780126643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40679)[0m     @     0x55e78009b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x7ef3b92908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40745)[0m     @     0x7ef3b6dbd4f5 at::Tensor::copy_()
[2m[36m(pid=40745)[0m     @     0x7ef3bce6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40745)[0m     @     0x55f14aa7bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40745)[0m     @     0x55f14a9d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x55f14aa61baf _PyEval_EvalCodeWithName
[2m[36m(pid=40745)[0m     @     0x55f14aa62a20 method_vectorcall
[2m[36m(pid=40745)[0m     @     0x55f14a9d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x55f14aa61baf _PyEval_EvalCodeWithName
[2m[36m(pid=40745)[0m     @     0x55f14aa62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40745)[0m     @     0x55f14a9d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x55f14aa61baf _PyEval_EvalCodeWithName
[2m[36m(pid=40745)[0m     @     0x55f14aa62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40745)[0m     @     0x55f14a9d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x55f14aa61baf _PyEval_EvalCodeWithName
[2m[36m(pid=40745)[0m     @     0x55f14aa62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40745)[0m     @     0x55f14a9d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40745)[0m     @     0x55f14aa61baf _PyEval_EvalCodeWithName
[2m[36m(pid=40745)[0m     @     0x55f14aa62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40745)[0m     @     0x55f14a9d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x7f4f0eaca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40777)[0m     @     0x7f4f0c5f74f5 at::Tensor::copy_()
[2m[36m(pid=40777)[0m     @     0x7f4f126a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40777)[0m     @     0x55d9f8251fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40777)[0m     @     0x55d9f81acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x55d9f8237baf _PyEval_EvalCodeWithName
[2m[36m(pid=40777)[0m     @     0x55d9f8238a20 method_vectorcall
[2m[36m(pid=40777)[0m     @     0x55d9f81acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x55d9f8237baf _PyEval_EvalCodeWithName
[2m[36m(pid=40777)[0m     @     0x55d9f8238643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40777)[0m     @     0x55d9f81ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x55d9f8237baf _PyEval_EvalCodeWithName
[2m[36m(pid=40777)[0m     @     0x55d9f8238643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40777)[0m     @     0x55d9f81ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x55d9f8237baf _PyEval_EvalCodeWithName
[2m[36m(pid=40777)[0m     @     0x55d9f8238643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40777)[0m     @     0x55d9f81ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40777)[0m     @     0x55d9f8237baf _PyEval_EvalCodeWithName
[2m[36m(pid=40777)[0m     @     0x55d9f8238643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40777)[0m     @     0x55d9f81ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40717)[0m     @     0x7f0937ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=40717)[0m     @     0x7f09357ce4f5 at::Tensor::copy_()
[2m[36m(pid=40717)[0m     @     0x7f093b87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=40717)[0m     @     0x55f45e39dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=40717)[0m     @     0x55f45e2f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40717)[0m     @     0x55f45e383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40717)[0m     @     0x55f45e384a20 method_vectorcall
[2m[36m(pid=40717)[0m     @     0x55f45e2f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40717)[0m     @     0x55f45e383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40717)[0m     @     0x55f45e384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40717)[0m     @     0x55f45e2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40717)[0m     @     0x55f45e383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40717)[0m     @     0x55f45e384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40717)[0m     @     0x55f45e2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40717)[0m     @     0x55f45e383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40717)[0m     @     0x55f45e384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40717)[0m     @     0x55f45e2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=40717)[0m     @     0x55f45e383baf _PyEval_EvalCodeWithName
[2m[36m(pid=40717)[0m     @     0x55f45e384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=40717)[0m     @     0x55f45e2f9689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:08:10,776	ERROR trial_runner.py:567 -- Trial PPO_jss_env_cae01_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=40780, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:08:10,776	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:08:10,777	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 10:08:10,788	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_cae01_00000])
[2m[36m(pid=40780)[0m E1105 10:08:10.769732 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=fde3d5eda9f525d7a97540c201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=40780)[0m E1105 10:08:10.769886 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=d16c21eef3935840a97540c201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=40780)[0m E1105 10:08:10.772861 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=726b8519c6d92b8e8168b55d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=40780)[0m E1105 10:08:10.772971 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e8fef079b20e071c8168b55d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=40780)[0m E1105 10:08:10.780668 40780 41964 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d88ec84d5baca957a97540c201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=40780)[0m E1105 10:08:10.782130 40780 41964 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=575b3faf45c7d0bd8168b55d01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=40780)[0m E1105 10:08:10.784868 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=40780)[0m E1105 10:08:10.785017 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=40780)[0m E1105 10:08:10.785110 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=10a4a4113c6c36ea43fb47bd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[33m(pid=raylet)[0m E1105 10:08:10.768972 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:10.772877 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:10.784512 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:10.789106 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:08:10,804	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:08:10,804	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:08:10,804	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:08:10,804	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:08:10,804	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff58dd50c101000000.
[2m[36m(pid=40780)[0m E1105 10:08:10.791772 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8b485cbbeaa005a559d91ef301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=59d91ef301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=40780)[0m E1105 10:08:10.791865 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ca546fa1af7e507159d91ef301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=59d91ef301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=40780)[0m E1105 10:08:10.791920 40780 41964 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=fd2b07e19848a86a59d91ef301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=59d91ef301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:08:10,815	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:08:10,815	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 10:08:10,815	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
[2m[33m(pid=raylet)[0m E1105 10:08:10.798172 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:10.798542 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:10.800904 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:08:10.803989 40604 40604 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: