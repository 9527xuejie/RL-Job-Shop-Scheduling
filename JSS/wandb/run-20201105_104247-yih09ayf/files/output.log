2020-11-05 10:42:50,998	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a7d07_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=39695)[0m 2020-11-05 10:42:53,832	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=39695)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=39695)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=39695)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=39695)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=39695)[0m 
[2m[36m(pid=39695)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=39654)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39654)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39654)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39691)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39691)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39703)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39703)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39703)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39703)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39703)[0m *** SIGSEGV (@0x0) received by PID 39703 (TID 0x7f757f974700) from PID 0; stack trace: ***
[2m[36m(pid=39703)[0m     @     0x7f757f54d390 (unknown)
[2m[36m(pid=39703)[0m     @     0x7f467f4eaf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39703)[0m     @     0x7f467ec157db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39703)[0m     @     0x7f467ec188f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39659)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39659)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39659)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39659)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39659)[0m *** SIGSEGV (@0x0) received by PID 39659 (TID 0x7fdf8a412700) from PID 0; stack trace: ***
[2m[36m(pid=39659)[0m     @     0x7fdf89feb390 (unknown)
[2m[36m(pid=39659)[0m     @     0x7fb089e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39659)[0m     @     0x7fb08954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39659)[0m     @     0x7fb0895528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39659)[0m     @     0x7fb089552ad3 at::TensorIterator::for_each()
[2m[36m(pid=39653)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39653)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39661)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39661)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39661)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39590)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39590)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39590)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39615)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39615)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39615)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39694)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39669)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39669)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39669)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39669)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39669)[0m *** SIGSEGV (@0x0) received by PID 39669 (TID 0x7efff0ecc700) from PID 0; stack trace: ***
[2m[36m(pid=39589)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39589)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39589)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39665)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39665)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39665)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39665)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39665)[0m *** SIGSEGV (@0x0) received by PID 39665 (TID 0x7f858f389700) from PID 0; stack trace: ***
[2m[36m(pid=39665)[0m     @     0x7f858ef62390 (unknown)
[2m[36m(pid=39665)[0m     @     0x7f568ef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39665)[0m     @     0x7f568e63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39665)[0m     @     0x7f568e6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39665)[0m     @     0x7f568e641ad3 at::TensorIterator::for_each()
[2m[36m(pid=39665)[0m     @     0x7f568e641d91 at::TensorIterator::for_each()
[2m[36m(pid=39665)[0m     @     0x7f568ef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39665)[0m     @     0x7f568ef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39665)[0m     @     0x7f568e3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39665)[0m     @     0x7f568e3e7388 at::native::copy_impl()
[2m[36m(pid=39680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39680)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39680)[0m *** SIGSEGV (@0x0) received by PID 39680 (TID 0x7f2eedde8700) from PID 0; stack trace: ***
[2m[36m(pid=39680)[0m     @     0x7f2eed9c1390 (unknown)
[2m[36m(pid=39680)[0m     @     0x7effed7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39680)[0m     @     0x7effecf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39680)[0m     @     0x7effecf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39680)[0m     @     0x7effecf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39680)[0m     @     0x7effecf27d91 at::TensorIterator::for_each()
[2m[36m(pid=39680)[0m     @     0x7effed80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39680)[0m     @     0x7effed82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39680)[0m     @     0x7effecccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39680)[0m     @     0x7effecccd388 at::native::copy_impl()
[2m[36m(pid=39696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39696)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39696)[0m *** SIGSEGV (@0x0) received by PID 39696 (TID 0x7f26ff082700) from PID 0; stack trace: ***
[2m[36m(pid=39696)[0m     @     0x7f26fec5b390 (unknown)
[2m[36m(pid=39696)[0m     @     0x7ef7febcef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39696)[0m     @     0x7ef7fe2f97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39696)[0m     @     0x7ef7fe2fc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39696)[0m     @     0x7ef7fe2fcad3 at::TensorIterator::for_each()
[2m[36m(pid=39696)[0m     @     0x7ef7fe2fcd91 at::TensorIterator::for_each()
[2m[36m(pid=39696)[0m     @     0x7ef7febdfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39696)[0m     @     0x7ef7fec02c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39696)[0m     @     0x7ef7fe0a4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39696)[0m     @     0x7ef7fe0a2388 at::native::copy_impl()
[2m[36m(pid=39591)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39591)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39591)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39591)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39591)[0m *** SIGSEGV (@0x0) received by PID 39591 (TID 0x7fcbcaf6c700) from PID 0; stack trace: ***
[2m[36m(pid=39591)[0m     @     0x7fcbcab45390 (unknown)
[2m[36m(pid=39591)[0m     @     0x7f9ccaa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39687)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39687)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39687)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39687)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39687)[0m *** SIGSEGV (@0x0) received by PID 39687 (TID 0x7fa23a3ac700) from PID 0; stack trace: ***
[2m[36m(pid=39687)[0m     @     0x7fa239f85390 (unknown)
[2m[36m(pid=39687)[0m     @     0x7f7339e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39687)[0m     @     0x7f733954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39687)[0m     @     0x7f73395528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39687)[0m     @     0x7f7339552ad3 at::TensorIterator::for_each()
[2m[36m(pid=39687)[0m     @     0x7f7339552d91 at::TensorIterator::for_each()
[2m[36m(pid=39687)[0m     @     0x7f7339e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39687)[0m     @     0x7f7339e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39687)[0m     @     0x7f73392faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39687)[0m     @     0x7f73392f8388 at::native::copy_impl()
[2m[36m(pid=39651)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39651)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39651)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39651)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39651)[0m *** SIGSEGV (@0x0) received by PID 39651 (TID 0x7f01ed5a9700) from PID 0; stack trace: ***
[2m[36m(pid=39651)[0m     @     0x7f01ed182390 (unknown)
[2m[36m(pid=39651)[0m     @     0x7ed2ed0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39651)[0m     @     0x7ed2ec7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39651)[0m     @     0x7ed2ec7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39651)[0m     @     0x7ed2ec7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39651)[0m     @     0x7ed2ec7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=39651)[0m     @     0x7ed2ed0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39693)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39693)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39693)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39693)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39693)[0m *** SIGSEGV (@0x0) received by PID 39693 (TID 0x7f7f1f038700) from PID 0; stack trace: ***
[2m[36m(pid=39693)[0m     @     0x7f7f1ec11390 (unknown)
[2m[36m(pid=39693)[0m     @     0x7f501ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39693)[0m     @     0x7f501e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39693)[0m     @     0x7f501e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39693)[0m     @     0x7f501e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=39693)[0m     @     0x7f501e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=39693)[0m     @     0x7f501ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39693)[0m     @     0x7f501ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39693)[0m     @     0x7f501def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39693)[0m     @     0x7f501def5388 at::native::copy_impl()
[2m[36m(pid=39664)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39664)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39664)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39664)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39664)[0m *** SIGSEGV (@0x0) received by PID 39664 (TID 0x7f3abbd11700) from PID 0; stack trace: ***
[2m[36m(pid=39664)[0m     @     0x7f3abb8ea390 (unknown)
[2m[36m(pid=39664)[0m     @     0x7f0bbb89ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39655)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39655)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39655)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39655)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39655)[0m *** SIGSEGV (@0x0) received by PID 39655 (TID 0x7fe85f6e4700) from PID 0; stack trace: ***
[2m[36m(pid=39655)[0m     @     0x7fe85f2bd390 (unknown)
[2m[36m(pid=39655)[0m     @     0x7fb95f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39655)[0m     @     0x7fb95e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39655)[0m     @     0x7fb95e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39655)[0m     @     0x7fb95e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=39655)[0m     @     0x7fb95e957d91 at::TensorIterator::for_each()
[2m[36m(pid=39655)[0m     @     0x7fb95f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39655)[0m     @     0x7fb95f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39655)[0m     @     0x7fb95e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39655)[0m     @     0x7fb95e6fd388 at::native::copy_impl()
[2m[36m(pid=39655)[0m     @     0x7fb95e6ff5a4 at::native::copy_()
[2m[36m(pid=39655)[0m     @     0x7fb95edea4f5 at::Tensor::copy_()
[2m[36m(pid=39672)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39672)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39672)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39672)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39672)[0m *** SIGSEGV (@0x0) received by PID 39672 (TID 0x7f7493e07700) from PID 0; stack trace: ***
[2m[36m(pid=39672)[0m     @     0x7f74939e0390 (unknown)
[2m[36m(pid=39672)[0m     @     0x7f45938def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39666)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39666)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39666)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39666)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39666)[0m *** SIGSEGV (@0x0) received by PID 39666 (TID 0x7f6a2ecee700) from PID 0; stack trace: ***
[2m[36m(pid=39666)[0m     @     0x7f6a2e8c7390 (unknown)
[2m[36m(pid=39666)[0m     @     0x7f3b2e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39666)[0m     @     0x7f3b2de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39668)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39668)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39668)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39668)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39668)[0m *** SIGSEGV (@0x0) received by PID 39668 (TID 0x7f20334c0700) from PID 0; stack trace: ***
[2m[36m(pid=39668)[0m     @     0x7f2033099390 (unknown)
[2m[36m(pid=39668)[0m     @     0x7ef132f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39668)[0m     @     0x7ef13263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39668)[0m     @     0x7ef1326418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39668)[0m     @     0x7ef132641ad3 at::TensorIterator::for_each()
[2m[36m(pid=39668)[0m     @     0x7ef132641d91 at::TensorIterator::for_each()
[2m[36m(pid=39668)[0m     @     0x7ef132f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39668)[0m     @     0x7ef132f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39668)[0m     @     0x7ef1323e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39668)[0m     @     0x7ef1323e7388 at::native::copy_impl()
[2m[36m(pid=39668)[0m     @     0x7ef1323e95a4 at::native::copy_()
[2m[36m(pid=39593)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39593)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39593)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39593)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39593)[0m *** SIGSEGV (@0x0) received by PID 39593 (TID 0x7f23a2c78700) from PID 0; stack trace: ***
[2m[36m(pid=39670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39670)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39670)[0m *** SIGSEGV (@0x0) received by PID 39670 (TID 0x7f36818c6700) from PID 0; stack trace: ***
[2m[36m(pid=39670)[0m     @     0x7f368149f390 (unknown)
[2m[36m(pid=39670)[0m     @     0x7f07813ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39658)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39658)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39658)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39658)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39658)[0m *** SIGSEGV (@0x0) received by PID 39658 (TID 0x7f3f57582700) from PID 0; stack trace: ***
[2m[36m(pid=39658)[0m     @     0x7f3f5715b390 (unknown)
[2m[36m(pid=39658)[0m     @     0x7f1056f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39658)[0m     @     0x7f105663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39658)[0m     @     0x7f10566418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39658)[0m     @     0x7f1056641ad3 at::TensorIterator::for_each()
[2m[36m(pid=39658)[0m     @     0x7f1056641d91 at::TensorIterator::for_each()
[2m[36m(pid=39658)[0m     @     0x7f1056f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39658)[0m     @     0x7f1056f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39658)[0m     @     0x7f10563e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39658)[0m     @     0x7f10563e7388 at::native::copy_impl()
[2m[36m(pid=39658)[0m     @     0x7f10563e95a4 at::native::copy_()
[2m[36m(pid=39688)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39688)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39688)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39688)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39688)[0m *** SIGSEGV (@0x0) received by PID 39688 (TID 0x7fc96ea4a700) from PID 0; stack trace: ***
[2m[36m(pid=39688)[0m     @     0x7fc96e623390 (unknown)
[2m[36m(pid=39688)[0m     @     0x7f9a6e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39688)[0m     @     0x7f9a6dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39611)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39611)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39611)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39611)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39611)[0m *** SIGSEGV (@0x0) received by PID 39611 (TID 0x7fbb98af7700) from PID 0; stack trace: ***
[2m[36m(pid=39611)[0m     @     0x7fbb986d0390 (unknown)
[2m[36m(pid=39602)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39602)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39602)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39602)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39602)[0m *** SIGSEGV (@0x0) received by PID 39602 (TID 0x7f916f4f3700) from PID 0; stack trace: ***
[2m[36m(pid=39602)[0m     @     0x7f916f0cc390 (unknown)
[2m[36m(pid=39602)[0m     @     0x7f626f077f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39602)[0m     @     0x7f626e7a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39579)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39579)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39579)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39714)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39714)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39714)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39714)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39714)[0m *** SIGSEGV (@0x0) received by PID 39714 (TID 0x7f967d0dc700) from PID 0; stack trace: ***
[2m[36m(pid=39714)[0m     @     0x7f967ccb5390 (unknown)
[2m[36m(pid=39606)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39606)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39606)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39606)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39606)[0m *** SIGSEGV (@0x0) received by PID 39606 (TID 0x7f58c5161700) from PID 0; stack trace: ***
[2m[36m(pid=39606)[0m     @     0x7f58c4d3a390 (unknown)
[2m[36m(pid=39599)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39599)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39599)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39583)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39583)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39583)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39583)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39583)[0m *** SIGSEGV (@0x0) received by PID 39583 (TID 0x7fe501d71700) from PID 0; stack trace: ***
[2m[36m(pid=39583)[0m     @     0x7fe50194a390 (unknown)
[2m[36m(pid=39594)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39594)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39594)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39594)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39594)[0m *** SIGSEGV (@0x0) received by PID 39594 (TID 0x7ff2d9c33700) from PID 0; stack trace: ***
[2m[36m(pid=39594)[0m     @     0x7ff2d980c390 (unknown)
[2m[36m(pid=39594)[0m     @     0x7fc3d96f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39598)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39598)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39598)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39598)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39598)[0m *** SIGSEGV (@0x0) received by PID 39598 (TID 0x7fa224eb1700) from PID 0; stack trace: ***
[2m[36m(pid=39598)[0m     @     0x7fa224a8a390 (unknown)
[2m[36m(pid=39592)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39592)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39592)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39592)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39592)[0m *** SIGSEGV (@0x0) received by PID 39592 (TID 0x7f3203b4d700) from PID 0; stack trace: ***
[2m[36m(pid=39592)[0m     @     0x7f3203726390 (unknown)
[2m[36m(pid=39647)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39647)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39647)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39647)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39647)[0m *** SIGSEGV (@0x0) received by PID 39647 (TID 0x7fcd5acb0700) from PID 0; stack trace: ***
[2m[36m(pid=39647)[0m     @     0x7fcd5a889390 (unknown)
[2m[36m(pid=39647)[0m     @     0x7f9e5a70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39581)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39581)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39581)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39581)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39581)[0m *** SIGSEGV (@0x0) received by PID 39581 (TID 0x7f8bf72f1700) from PID 0; stack trace: ***
[2m[36m(pid=39581)[0m     @     0x7f8bf6eca390 (unknown)
[2m[36m(pid=39581)[0m     @     0x7f5cf1391f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39581)[0m     @     0x7f5cf0abc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39581)[0m     @     0x7f5cf0abf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39707)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39707)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39707)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39707)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39707)[0m *** SIGSEGV (@0x0) received by PID 39707 (TID 0x7fbac50f7700) from PID 0; stack trace: ***
[2m[36m(pid=39707)[0m     @     0x7fbac4cd0390 (unknown)
[2m[36m(pid=39707)[0m     @     0x7f8bc4bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39707)[0m     @     0x7f8bc42fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39707)[0m     @     0x7f8bc42ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39707)[0m     @     0x7f8bc42ffad3 at::TensorIterator::for_each()
[2m[36m(pid=39707)[0m     @     0x7f8bc42ffd91 at::TensorIterator::for_each()
[2m[36m(pid=39707)[0m     @     0x7f8bc4be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39707)[0m     @     0x7f8bc4c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39707)[0m     @     0x7f8bc40a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39707)[0m     @     0x7f8bc40a5388 at::native::copy_impl()
[2m[36m(pid=39601)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39601)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39601)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39601)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39601)[0m *** SIGSEGV (@0x0) received by PID 39601 (TID 0x7fdf35e32700) from PID 0; stack trace: ***
[2m[36m(pid=39601)[0m     @     0x7fdf35a0b390 (unknown)
[2m[36m(pid=39601)[0m     @     0x7fb0357f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39601)[0m     @     0x7fb034f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39710)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39710)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39710)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39710)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39710)[0m *** SIGSEGV (@0x0) received by PID 39710 (TID 0x7f6a58674700) from PID 0; stack trace: ***
[2m[36m(pid=39710)[0m     @     0x7f6a5824d390 (unknown)
[2m[36m(pid=39710)[0m     @     0x7f3b580cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39710)[0m     @     0x7f3b577f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39710)[0m     @     0x7f3b577fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39710)[0m     @     0x7f3b577fbad3 at::TensorIterator::for_each()
[2m[36m(pid=39710)[0m     @     0x7f3b577fbd91 at::TensorIterator::for_each()
[2m[36m(pid=39710)[0m     @     0x7f3b580deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39710)[0m     @     0x7f3b58101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39710)[0m     @     0x7f3b575a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39710)[0m     @     0x7f3b575a1388 at::native::copy_impl()
[2m[36m(pid=39710)[0m     @     0x7f3b575a35a4 at::native::copy_()
[2m[36m(pid=39685)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39685)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39685)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39685)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39685)[0m *** SIGSEGV (@0x0) received by PID 39685 (TID 0x7f3debff5700) from PID 0; stack trace: ***
[2m[36m(pid=39685)[0m     @     0x7f3debbce390 (unknown)
[2m[36m(pid=39685)[0m     @     0x7f0eebaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39685)[0m     @     0x7f0eeb2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39685)[0m     @     0x7f0eeb2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39685)[0m     @     0x7f0eeb223ad3 at::TensorIterator::for_each()
[2m[36m(pid=39685)[0m     @     0x7f0eeb223d91 at::TensorIterator::for_each()
[2m[36m(pid=39685)[0m     @     0x7f0eebb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39685)[0m     @     0x7f0eebb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39685)[0m     @     0x7f0eeafcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39685)[0m     @     0x7f0eeafc9388 at::native::copy_impl()
[2m[36m(pid=39685)[0m     @     0x7f0eeafcb5a4 at::native::copy_()
[2m[36m(pid=39604)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39604)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39604)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39604)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39604)[0m *** SIGSEGV (@0x0) received by PID 39604 (TID 0x7f70450c1700) from PID 0; stack trace: ***
[2m[36m(pid=39604)[0m     @     0x7f7044c9a390 (unknown)
[2m[36m(pid=39656)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39656)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39656)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39656)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39656)[0m *** SIGSEGV (@0x0) received by PID 39656 (TID 0x7f32fb3fa700) from PID 0; stack trace: ***
[2m[36m(pid=39648)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39648)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39648)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39587)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39587)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39587)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39587)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39587)[0m *** SIGSEGV (@0x0) received by PID 39587 (TID 0x7f6a12e10700) from PID 0; stack trace: ***
[2m[36m(pid=39587)[0m     @     0x7f6a129e9390 (unknown)
[2m[36m(pid=39686)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39686)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39686)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39686)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39686)[0m *** SIGSEGV (@0x0) received by PID 39686 (TID 0x7f665ebf2700) from PID 0; stack trace: ***
[2m[36m(pid=39686)[0m     @     0x7f665e7cb390 (unknown)
[2m[36m(pid=39686)[0m     @     0x7f375e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39686)[0m     @     0x7f375dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39686)[0m     @     0x7f375dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39686)[0m     @     0x7f375dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39686)[0m     @     0x7f375dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=39686)[0m     @     0x7f375e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39686)[0m     @     0x7f375e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39686)[0m     @     0x7f375d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39686)[0m     @     0x7f375d9cd388 at::native::copy_impl()
[2m[36m(pid=39686)[0m     @     0x7f375d9cf5a4 at::native::copy_()
[2m[36m(pid=39677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39677)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39677)[0m *** SIGSEGV (@0x0) received by PID 39677 (TID 0x7f12776f8700) from PID 0; stack trace: ***
[2m[36m(pid=39677)[0m     @     0x7f12772d1390 (unknown)
[2m[36m(pid=39677)[0m     @     0x7ee377229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39677)[0m     @     0x7ee3769547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39677)[0m     @     0x7ee3769578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39677)[0m     @     0x7ee376957ad3 at::TensorIterator::for_each()
[2m[36m(pid=39677)[0m     @     0x7ee376957d91 at::TensorIterator::for_each()
[2m[36m(pid=39677)[0m     @     0x7ee37723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39677)[0m     @     0x7ee37725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39677)[0m     @     0x7ee3766ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39677)[0m     @     0x7ee3766fd388 at::native::copy_impl()
[2m[36m(pid=39614)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39614)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39614)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39614)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39614)[0m *** SIGSEGV (@0x0) received by PID 39614 (TID 0x7f2890047700) from PID 0; stack trace: ***
[2m[36m(pid=39614)[0m     @     0x7f288fc20390 (unknown)
[2m[36m(pid=39614)[0m     @     0x7ef98faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39614)[0m     @     0x7ef98f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39597)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39597)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39597)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39597)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39597)[0m *** SIGSEGV (@0x0) received by PID 39597 (TID 0x7f211a5cc700) from PID 0; stack trace: ***
[2m[36m(pid=39597)[0m     @     0x7f211a1a5390 (unknown)
[2m[36m(pid=39597)[0m     @     0x7ef21a13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39597)[0m     @     0x7ef2198657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39682)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39682)[0m *** SIGSEGV (@0x0) received by PID 39682 (TID 0x7fa1394fd700) from PID 0; stack trace: ***
[2m[36m(pid=39682)[0m     @     0x7fa1390d6390 (unknown)
[2m[36m(pid=39682)[0m     @     0x7f7239083f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39682)[0m     @     0x7f72387ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39580)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39580)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39580)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39580)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39580)[0m *** SIGSEGV (@0x0) received by PID 39580 (TID 0x7f72b4b0a700) from PID 0; stack trace: ***
[2m[36m(pid=39580)[0m     @     0x7f72b46e3390 (unknown)
[2m[36m(pid=39580)[0m     @     0x7f43b4507f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39580)[0m     @     0x7f43b3c327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39681)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39681)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39681)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39681)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39681)[0m *** SIGSEGV (@0x0) received by PID 39681 (TID 0x7fc665513700) from PID 0; stack trace: ***
[2m[36m(pid=39681)[0m     @     0x7fc6650ec390 (unknown)
[2m[36m(pid=39681)[0m     @     0x7f9765088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39681)[0m     @     0x7f97647b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39681)[0m     @     0x7f97647b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39681)[0m     @     0x7f97647b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=39681)[0m     @     0x7f97647b6d91 at::TensorIterator::for_each()
[2m[36m(pid=39681)[0m     @     0x7f9765099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39681)[0m     @     0x7f97650bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39681)[0m     @     0x7f976455ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39681)[0m     @     0x7f976455c388 at::native::copy_impl()
[2m[36m(pid=39681)[0m     @     0x7f976455e5a4 at::native::copy_()
[2m[36m(pid=39649)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39649)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39649)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39649)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39649)[0m *** SIGSEGV (@0x0) received by PID 39649 (TID 0x7f9f3ef89700) from PID 0; stack trace: ***
[2m[36m(pid=39657)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39657)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39674)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39674)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39674)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39674)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39674)[0m *** SIGSEGV (@0x0) received by PID 39674 (TID 0x7fb646eab700) from PID 0; stack trace: ***
[2m[36m(pid=39674)[0m     @     0x7fb646a84390 (unknown)
[2m[36m(pid=39674)[0m     @     0x7f87469ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39674)[0m     @     0x7f87460f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39586)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39586)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39586)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39586)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39586)[0m *** SIGSEGV (@0x0) received by PID 39586 (TID 0x7f7bf6144700) from PID 0; stack trace: ***
[2m[36m(pid=39586)[0m     @     0x7f7bf5d1d390 (unknown)
[2m[36m(pid=39692)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39692)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39692)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39692)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39692)[0m *** SIGSEGV (@0x0) received by PID 39692 (TID 0x7f62572c0700) from PID 0; stack trace: ***
[2m[36m(pid=39692)[0m     @     0x7f6256e99390 (unknown)
[2m[36m(pid=39692)[0m     @     0x7f3356e53f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39692)[0m     @     0x7f335657e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39660)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39660)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39660)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39660)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39660)[0m *** SIGSEGV (@0x0) received by PID 39660 (TID 0x7f8424591700) from PID 0; stack trace: ***
[2m[36m(pid=39612)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39612)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39612)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39585)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39585)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39585)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39585)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39585)[0m *** SIGSEGV (@0x0) received by PID 39585 (TID 0x7fc504bc1700) from PID 0; stack trace: ***
[2m[36m(pid=39585)[0m     @     0x7fc50479a390 (unknown)
[2m[36m(pid=39585)[0m     @     0x7f960460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39585)[0m     @     0x7f9603d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39646)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39662)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39662)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39662)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39662)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39662)[0m *** SIGSEGV (@0x0) received by PID 39662 (TID 0x7fc275814700) from PID 0; stack trace: ***
[2m[36m(pid=39662)[0m     @     0x7fc2753ed390 (unknown)
[2m[36m(pid=39662)[0m     @     0x7f937535ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39662)[0m     @     0x7f9374a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39697)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39697)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39697)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39697)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39697)[0m *** SIGSEGV (@0x0) received by PID 39697 (TID 0x7f28ebb32700) from PID 0; stack trace: ***
[2m[36m(pid=39582)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39582)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39582)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39582)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39582)[0m *** SIGSEGV (@0x0) received by PID 39582 (TID 0x7f93458eb700) from PID 0; stack trace: ***
[2m[36m(pid=39582)[0m     @     0x7f93454c4390 (unknown)
[2m[36m(pid=39582)[0m     @     0x7f6445476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39582)[0m     @     0x7f6444ba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39582)[0m     @     0x7f6444ba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39584)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39584)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39584)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39584)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39584)[0m *** SIGSEGV (@0x0) received by PID 39584 (TID 0x7f9ab01c6700) from PID 0; stack trace: ***
[2m[36m(pid=39584)[0m     @     0x7f9aafd9f390 (unknown)
[2m[36m(pid=39584)[0m     @     0x7f6bafd39f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39584)[0m     @     0x7f6baf4647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39704)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39704)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39704)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39704)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39704)[0m *** SIGSEGV (@0x0) received by PID 39704 (TID 0x7f7ae497d700) from PID 0; stack trace: ***
[2m[36m(pid=39704)[0m     @     0x7f7ae4556390 (unknown)
[2m[36m(pid=39704)[0m     @     0x7f4be44d1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39704)[0m     @     0x7f4be3bfc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39704)[0m     @     0x7f4be3bff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39645)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39645)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39645)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39645)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39645)[0m *** SIGSEGV (@0x0) received by PID 39645 (TID 0x7f4e4cb95700) from PID 0; stack trace: ***
[2m[36m(pid=39645)[0m     @     0x7f4e4c76e390 (unknown)
[2m[36m(pid=39645)[0m     @     0x7f1f4c60ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39645)[0m     @     0x7f1f4bd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39654)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39654)[0m *** SIGSEGV (@0x0) received by PID 39654 (TID 0x7f139d570700) from PID 0; stack trace: ***
[2m[36m(pid=39654)[0m     @     0x7f139d149390 (unknown)
[2m[36m(pid=39654)[0m     @     0x7ee49d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39654)[0m     @     0x7ee49c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39654)[0m     @     0x7ee49c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39654)[0m     @     0x7ee49c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39691)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39691)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39691)[0m *** SIGSEGV (@0x0) received by PID 39691 (TID 0x7f2661a8a700) from PID 0; stack trace: ***
[2m[36m(pid=39691)[0m     @     0x7f2661663390 (unknown)
[2m[36m(pid=39691)[0m     @     0x7ef7615e2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39691)[0m     @     0x7ef760d0d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39691)[0m     @     0x7ef760d108f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39691)[0m     @     0x7ef760d10ad3 at::TensorIterator::for_each()
[2m[36m(pid=39703)[0m     @     0x7f467ec18ad3 at::TensorIterator::for_each()
[2m[36m(pid=39703)[0m     @     0x7f467ec18d91 at::TensorIterator::for_each()
[2m[36m(pid=39703)[0m     @     0x7f467f4fbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39703)[0m     @     0x7f467f51ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39703)[0m     @     0x7f467e9c0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39703)[0m     @     0x7f467e9be388 at::native::copy_impl()
[2m[36m(pid=39703)[0m     @     0x7f467e9c05a4 at::native::copy_()
[2m[36m(pid=39659)[0m     @     0x7fb089552d91 at::TensorIterator::for_each()
[2m[36m(pid=39659)[0m     @     0x7fb089e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39659)[0m     @     0x7fb089e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39659)[0m     @     0x7fb0892faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39659)[0m     @     0x7fb0892f8388 at::native::copy_impl()
[2m[36m(pid=39659)[0m     @     0x7fb0892fa5a4 at::native::copy_()
[2m[36m(pid=39659)[0m     @     0x7fb0899e54f5 at::Tensor::copy_()
[2m[36m(pid=39659)[0m     @     0x7fb08beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39610)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39610)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39610)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39610)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39610)[0m *** SIGSEGV (@0x0) received by PID 39610 (TID 0x7f5d39678700) from PID 0; stack trace: ***
[2m[36m(pid=39610)[0m     @     0x7f5d39251390 (unknown)
[2m[36m(pid=39610)[0m     @     0x7f2e390b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39610)[0m     @     0x7f2e387e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39610)[0m     @     0x7f2e387e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39652)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39652)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39652)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39652)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39652)[0m *** SIGSEGV (@0x0) received by PID 39652 (TID 0x7f872bb27700) from PID 0; stack trace: ***
[2m[36m(pid=39652)[0m     @     0x7f872b700390 (unknown)
[2m[36m(pid=39652)[0m     @     0x7f582b61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39652)[0m     @     0x7f582ad4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39652)[0m     @     0x7f582ad4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39699)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39699)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39699)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39699)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39699)[0m *** SIGSEGV (@0x0) received by PID 39699 (TID 0x7f5deb7f5700) from PID 0; stack trace: ***
[2m[36m(pid=39699)[0m     @     0x7f5deb3ce390 (unknown)
[2m[36m(pid=39699)[0m     @     0x7f2eeac15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39699)[0m     @     0x7f2eea3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39650)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39650)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39650)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39650)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39650)[0m *** SIGSEGV (@0x0) received by PID 39650 (TID 0x7f6fc5e87700) from PID 0; stack trace: ***
[2m[36m(pid=39600)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39600)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39600)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39600)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39600)[0m *** SIGSEGV (@0x0) received by PID 39600 (TID 0x7f5b34362700) from PID 0; stack trace: ***
[2m[36m(pid=39653)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39653)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39653)[0m *** SIGSEGV (@0x0) received by PID 39653 (TID 0x7f815544d700) from PID 0; stack trace: ***
[2m[36m(pid=39653)[0m     @     0x7f8155026390 (unknown)
[2m[36m(pid=39653)[0m     @     0x7f5254b85f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39653)[0m     @     0x7f52542b07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39653)[0m     @     0x7f52542b38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39663)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39663)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39663)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39663)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39663)[0m *** SIGSEGV (@0x0) received by PID 39663 (TID 0x7f52713d2700) from PID 0; stack trace: ***
[2m[36m(pid=39663)[0m     @     0x7f5270fab390 (unknown)
[2m[36m(pid=39596)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39596)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39596)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39596)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39596)[0m *** SIGSEGV (@0x0) received by PID 39596 (TID 0x7fd147109700) from PID 0; stack trace: ***
[2m[36m(pid=39596)[0m     @     0x7fd146ce2390 (unknown)
[2m[36m(pid=39596)[0m     @     0x7fa246c8ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39596)[0m     @     0x7fa2463ba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39613)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39613)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39613)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39613)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39613)[0m *** SIGSEGV (@0x0) received by PID 39613 (TID 0x7f7aa2719700) from PID 0; stack trace: ***
[2m[36m(pid=39661)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39661)[0m *** SIGSEGV (@0x0) received by PID 39661 (TID 0x7fe7aa179700) from PID 0; stack trace: ***
[2m[36m(pid=39661)[0m     @     0x7fe7a9d52390 (unknown)
[2m[36m(pid=39661)[0m     @     0x7fb8a9ceff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39661)[0m     @     0x7fb8a941a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39661)[0m     @     0x7fb8a941d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39590)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39590)[0m *** SIGSEGV (@0x0) received by PID 39590 (TID 0x7fb6baee3700) from PID 0; stack trace: ***
[2m[36m(pid=39590)[0m     @     0x7fb6baabc390 (unknown)
[2m[36m(pid=39590)[0m     @     0x7f87baa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39590)[0m     @     0x7f87ba14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39590)[0m     @     0x7f87ba14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39615)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39615)[0m *** SIGSEGV (@0x0) received by PID 39615 (TID 0x7fecc0bbd700) from PID 0; stack trace: ***
[2m[36m(pid=39615)[0m     @     0x7fecc0796390 (unknown)
[2m[36m(pid=39615)[0m     @     0x7fbdc071ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39615)[0m     @     0x7fbdbfe4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39615)[0m     @     0x7fbdbfe4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39694)[0m *** SIGSEGV (@0x0) received by PID 39694 (TID 0x7fb8ed531700) from PID 0; stack trace: ***
[2m[36m(pid=39694)[0m     @     0x7fb8ed10a390 (unknown)
[2m[36m(pid=39694)[0m     @     0x7f89ed088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39694)[0m     @     0x7f89ec7b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39669)[0m     @     0x7efff0aa5390 (unknown)
[2m[36m(pid=39669)[0m     @     0x7ed0f097ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39669)[0m     @     0x7ed0f00aa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39669)[0m     @     0x7ed0f00ad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39669)[0m     @     0x7ed0f00adad3 at::TensorIterator::for_each()
[2m[36m(pid=39589)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39589)[0m *** SIGSEGV (@0x0) received by PID 39589 (TID 0x7ff9cc2e5700) from PID 0; stack trace: ***
[2m[36m(pid=39589)[0m     @     0x7ff9cbebe390 (unknown)
[2m[36m(pid=39589)[0m     @     0x7fcacbdf0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39589)[0m     @     0x7fcacb51b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39589)[0m     @     0x7fcacb51e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39665)[0m     @     0x7f568e3e95a4 at::native::copy_()
[2m[36m(pid=39665)[0m     @     0x7f568ead44f5 at::Tensor::copy_()
[2m[36m(pid=39665)[0m     @     0x7f5690fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39680)[0m     @     0x7effecccf5a4 at::native::copy_()
[2m[36m(pid=39680)[0m     @     0x7effed3ba4f5 at::Tensor::copy_()
[2m[36m(pid=39680)[0m     @     0x7effef88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39680)[0m     @     0x7effed3ba4f5 at::Tensor::copy_()
[2m[36m(pid=39680)[0m     @     0x7efff346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39680)[0m     @     0x563724d60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39680)[0m     @     0x563724cbbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39680)[0m     @     0x563724d46baf _PyEval_EvalCodeWithName
[2m[36m(pid=39680)[0m     @     0x563724d47a20 method_vectorcall
[2m[36m(pid=39680)[0m     @     0x563724cbbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39680)[0m     @     0x563724d46baf _PyEval_EvalCodeWithName
[2m[36m(pid=39680)[0m     @     0x563724d47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39680)[0m     @     0x563724cbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39680)[0m     @     0x563724d46baf _PyEval_EvalCodeWithName
[2m[36m(pid=39680)[0m     @     0x563724d47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39680)[0m     @     0x563724cbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39680)[0m     @     0x563724d46baf _PyEval_EvalCodeWithName
[2m[36m(pid=39680)[0m     @     0x563724d47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39696)[0m     @     0x7ef7fe0a45a4 at::native::copy_()
[2m[36m(pid=39696)[0m     @     0x7ef7fe78f4f5 at::Tensor::copy_()
[2m[36m(pid=39696)[0m     @     0x7ef800c628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39696)[0m     @     0x7ef7fe78f4f5 at::Tensor::copy_()
[2m[36m(pid=39696)[0m     @     0x7ef80483a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39696)[0m     @     0x561dce30bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39696)[0m     @     0x561dce266b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39696)[0m     @     0x561dce2f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39696)[0m     @     0x561dce2f2a20 method_vectorcall
[2m[36m(pid=39696)[0m     @     0x561dce266bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39696)[0m     @     0x561dce2f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39696)[0m     @     0x561dce2f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39696)[0m     @     0x561dce267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39696)[0m     @     0x561dce2f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39696)[0m     @     0x561dce2f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39696)[0m     @     0x561dce267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39591)[0m     @     0x7f9cca14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39591)[0m     @     0x7f9cca14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39591)[0m     @     0x7f9cca14fad3 at::TensorIterator::for_each()
[2m[36m(pid=39591)[0m     @     0x7f9cca14fd91 at::TensorIterator::for_each()
[2m[36m(pid=39591)[0m     @     0x7f9ccaa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39687)[0m     @     0x7f73392fa5a4 at::native::copy_()
[2m[36m(pid=39687)[0m     @     0x7f73399e54f5 at::Tensor::copy_()
[2m[36m(pid=39687)[0m     @     0x7f733beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39687)[0m     @     0x7f73399e54f5 at::Tensor::copy_()
[2m[36m(pid=39687)[0m     @     0x7f733fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39687)[0m     @     0x55981eccffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39687)[0m     @     0x55981ec2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39687)[0m     @     0x55981ecb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39687)[0m     @     0x55981ecb6a20 method_vectorcall
[2m[36m(pid=39687)[0m     @     0x55981ec2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39687)[0m     @     0x55981ecb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39687)[0m     @     0x55981ecb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39687)[0m     @     0x55981ec2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39687)[0m     @     0x55981ecb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39687)[0m     @     0x55981ecb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39687)[0m     @     0x55981ec2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39687)[0m     @     0x55981ecb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39687)[0m     @     0x55981ecb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39687)[0m     @     0x55981ec2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39687)[0m     @     0x55981ecb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39687)[0m     @     0x55981ecb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39687)[0m     @     0x55981ec2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39651)[0m     @     0x7ed2ed0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39651)[0m     @     0x7ed2ec58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39651)[0m     @     0x7ed2ec589388 at::native::copy_impl()
[2m[36m(pid=39651)[0m     @     0x7ed2ec58b5a4 at::native::copy_()
[2m[36m(pid=39693)[0m     @     0x7f501def75a4 at::native::copy_()
[2m[36m(pid=39693)[0m     @     0x7f501e5e24f5 at::Tensor::copy_()
[2m[36m(pid=39693)[0m     @     0x7f5020ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39693)[0m     @     0x7f501e5e24f5 at::Tensor::copy_()
[2m[36m(pid=39693)[0m     @     0x7f502468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39693)[0m     @     0x564e3c3dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39693)[0m     @     0x564e3c33ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39693)[0m     @     0x564e3c3c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39693)[0m     @     0x564e3c3c6a20 method_vectorcall
[2m[36m(pid=39693)[0m     @     0x564e3c33abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39693)[0m     @     0x564e3c3c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39693)[0m     @     0x564e3c3c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39664)[0m     @     0x7f0bbafc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39664)[0m     @     0x7f0bbafcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39664)[0m     @     0x7f0bbafccad3 at::TensorIterator::for_each()
[2m[36m(pid=39664)[0m     @     0x7f0bbafccd91 at::TensorIterator::for_each()
[2m[36m(pid=39664)[0m     @     0x7f0bbb8afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39655)[0m     @     0x7fb9612bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39655)[0m     @     0x7fb95edea4f5 at::Tensor::copy_()
[2m[36m(pid=39655)[0m     @     0x7fb964e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39655)[0m     @     0x5602dea7afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39655)[0m     @     0x5602de9d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39655)[0m     @     0x5602dea60baf _PyEval_EvalCodeWithName
[2m[36m(pid=39655)[0m     @     0x5602dea61a20 method_vectorcall
[2m[36m(pid=39655)[0m     @     0x5602de9d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39655)[0m     @     0x5602dea60baf _PyEval_EvalCodeWithName
[2m[36m(pid=39655)[0m     @     0x5602dea61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39655)[0m     @     0x5602de9d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39655)[0m     @     0x5602dea60baf _PyEval_EvalCodeWithName
[2m[36m(pid=39655)[0m     @     0x5602dea61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39655)[0m     @     0x5602de9d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39655)[0m     @     0x5602dea60baf _PyEval_EvalCodeWithName
[2m[36m(pid=39655)[0m     @     0x5602dea61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39655)[0m     @     0x5602de9d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39655)[0m     @     0x5602dea60baf _PyEval_EvalCodeWithName
[2m[36m(pid=39655)[0m     @     0x5602dea61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39655)[0m     @     0x5602de9d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39672)[0m     @     0x7f45930097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39672)[0m     @     0x7f459300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39672)[0m     @     0x7f459300cad3 at::TensorIterator::for_each()
[2m[36m(pid=39672)[0m     @     0x7f459300cd91 at::TensorIterator::for_each()
[2m[36m(pid=39666)[0m     @     0x7f3b2de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39666)[0m     @     0x7f3b2de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=39666)[0m     @     0x7f3b2de38d91 at::TensorIterator::for_each()
[2m[36m(pid=39666)[0m     @     0x7f3b2e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39668)[0m     @     0x7ef132ad44f5 at::Tensor::copy_()
[2m[36m(pid=39668)[0m     @     0x7ef134fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39668)[0m     @     0x7ef132ad44f5 at::Tensor::copy_()
[2m[36m(pid=39668)[0m     @     0x7ef138b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39668)[0m     @     0x558b0f789fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39668)[0m     @     0x558b0f6e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39668)[0m     @     0x558b0f76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39668)[0m     @     0x558b0f770a20 method_vectorcall
[2m[36m(pid=39668)[0m     @     0x558b0f6e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39668)[0m     @     0x558b0f76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39668)[0m     @     0x558b0f770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39668)[0m     @     0x558b0f6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39668)[0m     @     0x558b0f76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39668)[0m     @     0x558b0f770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39668)[0m     @     0x558b0f6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39668)[0m     @     0x558b0f76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39668)[0m     @     0x558b0f770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39668)[0m     @     0x558b0f6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39668)[0m     @     0x558b0f76fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39668)[0m     @     0x558b0f770643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39668)[0m     @     0x558b0f6e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39593)[0m     @     0x7f23a2851390 (unknown)
[2m[36m(pid=39593)[0m     @     0x7ef4a27bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39593)[0m     @     0x7ef4a1ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39593)[0m     @     0x7ef4a1ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39593)[0m     @     0x7ef4a1ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=39670)[0m     @     0x7f0780af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39670)[0m     @     0x7f0780afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39670)[0m     @     0x7f0780afaad3 at::TensorIterator::for_each()
[2m[36m(pid=39658)[0m     @     0x7f1056ad44f5 at::Tensor::copy_()
[2m[36m(pid=39658)[0m     @     0x7f1058fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39658)[0m     @     0x7f1056ad44f5 at::Tensor::copy_()
[2m[36m(pid=39658)[0m     @     0x7f105cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39658)[0m     @     0x56453a033fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39658)[0m     @     0x564539f8eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39658)[0m     @     0x56453a019baf _PyEval_EvalCodeWithName
[2m[36m(pid=39658)[0m     @     0x56453a01aa20 method_vectorcall
[2m[36m(pid=39658)[0m     @     0x564539f8ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39658)[0m     @     0x56453a019baf _PyEval_EvalCodeWithName
[2m[36m(pid=39658)[0m     @     0x56453a01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39658)[0m     @     0x564539f8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39658)[0m     @     0x56453a019baf _PyEval_EvalCodeWithName
[2m[36m(pid=39658)[0m     @     0x56453a01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39658)[0m     @     0x564539f8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39658)[0m     @     0x56453a019baf _PyEval_EvalCodeWithName
[2m[36m(pid=39658)[0m     @     0x56453a01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39658)[0m     @     0x564539f8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39658)[0m     @     0x56453a019baf _PyEval_EvalCodeWithName
[2m[36m(pid=39658)[0m     @     0x56453a01a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39658)[0m     @     0x564539f8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39688)[0m     @     0x7f9a6dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39688)[0m     @     0x7f9a6dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39688)[0m     @     0x7f9a6dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=39611)[0m     @     0x7f8c98563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39611)[0m     @     0x7f8c97c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39611)[0m     @     0x7f8c97c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39611)[0m     @     0x7f8c97c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=39611)[0m     @     0x7f8c97c91d91 at::TensorIterator::for_each()
[2m[36m(pid=39611)[0m     @     0x7f8c98574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39611)[0m     @     0x7f8c98597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39602)[0m     @     0x7f626e7a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39602)[0m     @     0x7f626e7a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=39602)[0m     @     0x7f626e7a5d91 at::TensorIterator::for_each()
[2m[36m(pid=39602)[0m     @     0x7f626f088b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39579)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39579)[0m *** SIGSEGV (@0x0) received by PID 39579 (TID 0x7f8488118700) from PID 0; stack trace: ***
[2m[36m(pid=39579)[0m     @     0x7f8487cf1390 (unknown)
[2m[36m(pid=39579)[0m     @     0x7f5587bc7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39579)[0m     @     0x7f55872f27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39579)[0m     @     0x7f55872f58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39714)[0m     @     0x7f677cbd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39714)[0m     @     0x7f677c2fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39714)[0m     @     0x7f677c2ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39714)[0m     @     0x7f677c2ffad3 at::TensorIterator::for_each()
[2m[36m(pid=39606)[0m     @     0x7f29c4c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39606)[0m     @     0x7f29c439f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39606)[0m     @     0x7f29c43a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39606)[0m     @     0x7f29c43a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=39599)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39599)[0m *** SIGSEGV (@0x0) received by PID 39599 (TID 0x7fde6c781700) from PID 0; stack trace: ***
[2m[36m(pid=39599)[0m     @     0x7fde6c35a390 (unknown)
[2m[36m(pid=39599)[0m     @     0x7faf6c290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39599)[0m     @     0x7faf6b9bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39599)[0m     @     0x7faf6b9be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39583)[0m     @     0x7fb6018f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39583)[0m     @     0x7fb6010247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39583)[0m     @     0x7fb6010278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39583)[0m     @     0x7fb601027ad3 at::TensorIterator::for_each()
[2m[36m(pid=39594)[0m     @     0x7fc3d8e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39594)[0m     @     0x7fc3d8e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39594)[0m     @     0x7fc3d8e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=39598)[0m     @     0x7f73249e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39598)[0m     @     0x7f73241137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39598)[0m     @     0x7f73241168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39598)[0m     @     0x7f7324116ad3 at::TensorIterator::for_each()
[2m[36m(pid=39592)[0m     @     0x7f030361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39592)[0m     @     0x7f0302d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39592)[0m     @     0x7f0302d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39592)[0m     @     0x7f0302d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=39647)[0m     @     0x7f9e59e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39647)[0m     @     0x7f9e59e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39647)[0m     @     0x7f9e59e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=39581)[0m     @     0x7f5cf0abfad3 at::TensorIterator::for_each()
[2m[36m(pid=39581)[0m     @     0x7f5cf0abfd91 at::TensorIterator::for_each()
[2m[36m(pid=39581)[0m     @     0x7f5cf13a2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39581)[0m     @     0x7f5cf13c5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39581)[0m     @     0x7f5cf0867a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39581)[0m     @     0x7f5cf0865388 at::native::copy_impl()
[2m[36m(pid=39707)[0m     @     0x7f8bc40a75a4 at::native::copy_()
[2m[36m(pid=39707)[0m     @     0x7f8bc47924f5 at::Tensor::copy_()
[2m[36m(pid=39707)[0m     @     0x7f8bc6c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39707)[0m     @     0x7f8bc47924f5 at::Tensor::copy_()
[2m[36m(pid=39707)[0m     @     0x7f8bca83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39707)[0m     @     0x56516020bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39707)[0m     @     0x565160166b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39707)[0m     @     0x5651601f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39707)[0m     @     0x5651601f2a20 method_vectorcall
[2m[36m(pid=39707)[0m     @     0x565160166bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39707)[0m     @     0x5651601f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39707)[0m     @     0x5651601f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39707)[0m     @     0x565160167689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39707)[0m     @     0x5651601f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39707)[0m     @     0x5651601f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39707)[0m     @     0x565160167689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39707)[0m     @     0x5651601f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39707)[0m     @     0x5651601f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39707)[0m     @     0x565160167689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39707)[0m     @     0x5651601f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39601)[0m     @     0x7fb034f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39601)[0m     @     0x7fb034f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39601)[0m     @     0x7fb034f27d91 at::TensorIterator::for_each()
[2m[36m(pid=39601)[0m     @     0x7fb03580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39601)[0m     @     0x7fb03582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39710)[0m     @     0x7f3b57c8e4f5 at::Tensor::copy_()
[2m[36m(pid=39710)[0m     @     0x7f3b5a1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39710)[0m     @     0x7f3b57c8e4f5 at::Tensor::copy_()
[2m[36m(pid=39710)[0m     @     0x7f3b5dd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39710)[0m     @     0x55ac66925fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39710)[0m     @     0x55ac66880b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39710)[0m     @     0x55ac6690bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39710)[0m     @     0x55ac6690ca20 method_vectorcall
[2m[36m(pid=39710)[0m     @     0x55ac66880bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39710)[0m     @     0x55ac6690bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39710)[0m     @     0x55ac6690c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39710)[0m     @     0x55ac66881689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39710)[0m     @     0x55ac6690bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39710)[0m     @     0x55ac6690c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39710)[0m     @     0x55ac66881689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39710)[0m     @     0x55ac6690bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39710)[0m     @     0x55ac6690c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39710)[0m     @     0x55ac66881689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39710)[0m     @     0x55ac6690bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39710)[0m     @     0x55ac6690c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39710)[0m     @     0x55ac66881689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39685)[0m     @     0x7f0eeb6b64f5 at::Tensor::copy_()
[2m[36m(pid=39685)[0m     @     0x7f0eedb898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39685)[0m     @     0x7f0eeb6b64f5 at::Tensor::copy_()
[2m[36m(pid=39685)[0m     @     0x7f0ef176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39685)[0m     @     0x55f296271fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39685)[0m     @     0x55f2961ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39685)[0m     @     0x55f296257baf _PyEval_EvalCodeWithName
[2m[36m(pid=39685)[0m     @     0x55f296258a20 method_vectorcall
[2m[36m(pid=39685)[0m     @     0x55f2961ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39685)[0m     @     0x55f296257baf _PyEval_EvalCodeWithName
[2m[36m(pid=39685)[0m     @     0x55f296258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39685)[0m     @     0x55f2961cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39685)[0m     @     0x55f296257baf _PyEval_EvalCodeWithName
[2m[36m(pid=39685)[0m     @     0x55f296258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39685)[0m     @     0x55f2961cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39685)[0m     @     0x55f296257baf _PyEval_EvalCodeWithName
[2m[36m(pid=39685)[0m     @     0x55f296258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39685)[0m     @     0x55f2961cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39685)[0m     @     0x55f296257baf _PyEval_EvalCodeWithName
[2m[36m(pid=39685)[0m     @     0x55f296258643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39685)[0m     @     0x55f2961cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39604)[0m     @     0x7f4144a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39604)[0m     @     0x7f41441b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39604)[0m     @     0x7f41441b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39604)[0m     @     0x7f41441b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=39604)[0m     @     0x7f41441b9d91 at::TensorIterator::for_each()
[2m[36m(pid=39604)[0m     @     0x7f4144a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39604)[0m     @     0x7f4144abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39656)[0m     @     0x7f32fafd3390 (unknown)
[2m[36m(pid=39656)[0m     @     0x7f03faf13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39656)[0m     @     0x7f03fa63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39656)[0m     @     0x7f03fa6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39656)[0m     @     0x7f03fa641ad3 at::TensorIterator::for_each()
[2m[36m(pid=39656)[0m     @     0x7f03fa641d91 at::TensorIterator::for_each()
[2m[36m(pid=39656)[0m     @     0x7f03faf24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39643)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39643)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39643)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39643)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39643)[0m *** SIGSEGV (@0x0) received by PID 39643 (TID 0x7f13de920700) from PID 0; stack trace: ***
[2m[36m(pid=39643)[0m     @     0x7f13de4f9390 (unknown)
[2m[36m(pid=39643)[0m     @     0x7ee4de467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39643)[0m     @     0x7ee4ddb927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39648)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39648)[0m *** SIGSEGV (@0x0) received by PID 39648 (TID 0x7fe928ade700) from PID 0; stack trace: ***
[2m[36m(pid=39648)[0m     @     0x7fe9286b7390 (unknown)
[2m[36m(pid=39648)[0m     @     0x7fba2860ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39648)[0m     @     0x7fba27d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39648)[0m     @     0x7fba27d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39648)[0m     @     0x7fba27d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=39587)[0m     @     0x7f3b1270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39587)[0m     @     0x7f3b11e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39587)[0m     @     0x7f3b11e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39587)[0m     @     0x7f3b11e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=39587)[0m     @     0x7f3b11e38d91 at::TensorIterator::for_each()
[2m[36m(pid=39587)[0m     @     0x7f3b1271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39587)[0m     @     0x7f3b1273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39686)[0m     @     0x7f375e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=39686)[0m     @     0x7f376058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39686)[0m     @     0x7f375e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=39686)[0m     @     0x7f376416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39686)[0m     @     0x55c1a78defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39686)[0m     @     0x55c1a7839b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39686)[0m     @     0x55c1a78c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39686)[0m     @     0x55c1a78c5a20 method_vectorcall
[2m[36m(pid=39686)[0m     @     0x55c1a7839bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39686)[0m     @     0x55c1a78c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39686)[0m     @     0x55c1a78c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39686)[0m     @     0x55c1a783a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39686)[0m     @     0x55c1a78c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39686)[0m     @     0x55c1a78c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39686)[0m     @     0x55c1a783a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39686)[0m     @     0x55c1a78c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39686)[0m     @     0x55c1a78c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39686)[0m     @     0x55c1a783a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39686)[0m     @     0x55c1a78c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39686)[0m     @     0x55c1a78c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39686)[0m     @     0x55c1a783a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39677)[0m     @     0x7ee3766ff5a4 at::native::copy_()
[2m[36m(pid=39677)[0m     @     0x7ee376dea4f5 at::Tensor::copy_()
[2m[36m(pid=39677)[0m     @     0x7ee3792bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39677)[0m     @     0x7ee376dea4f5 at::Tensor::copy_()
[2m[36m(pid=39677)[0m     @     0x7ee37ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39677)[0m     @     0x55653c02ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39677)[0m     @     0x55653bf8ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39677)[0m     @     0x55653c015baf _PyEval_EvalCodeWithName
[2m[36m(pid=39677)[0m     @     0x55653c016a20 method_vectorcall
[2m[36m(pid=39677)[0m     @     0x55653bf8abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39677)[0m     @     0x55653c015baf _PyEval_EvalCodeWithName
[2m[36m(pid=39677)[0m     @     0x55653c016643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39677)[0m     @     0x55653bf8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39677)[0m     @     0x55653c015baf _PyEval_EvalCodeWithName
[2m[36m(pid=39677)[0m     @     0x55653c016643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39677)[0m     @     0x55653bf8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39677)[0m     @     0x55653c015baf _PyEval_EvalCodeWithName
[2m[36m(pid=39677)[0m     @     0x55653c016643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39677)[0m     @     0x55653bf8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39677)[0m     @     0x55653c015baf _PyEval_EvalCodeWithName
[2m[36m(pid=39677)[0m     @     0x55653c016643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39677)[0m     @     0x55653bf8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39614)[0m     @     0x7ef98f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39614)[0m     @     0x7ef98f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=39614)[0m     @     0x7ef98f223d91 at::TensorIterator::for_each()
[2m[36m(pid=39614)[0m     @     0x7ef98fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39614)[0m     @     0x7ef98fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39597)[0m     @     0x7ef2198688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39597)[0m     @     0x7ef219868ad3 at::TensorIterator::for_each()
[2m[36m(pid=39597)[0m     @     0x7ef219868d91 at::TensorIterator::for_each()
[2m[36m(pid=39597)[0m     @     0x7ef21a14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39597)[0m     @     0x7ef21a16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39597)[0m     @     0x7ef219610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39597)[0m     @     0x7ef21960e388 at::native::copy_impl()
[2m[36m(pid=39682)[0m     @     0x7f72387b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39682)[0m     @     0x7f72387b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=39682)[0m     @     0x7f72387b1d91 at::TensorIterator::for_each()
[2m[36m(pid=39682)[0m     @     0x7f7239094b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39682)[0m     @     0x7f72390b7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39580)[0m     @     0x7f43b3c358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39580)[0m     @     0x7f43b3c35ad3 at::TensorIterator::for_each()
[2m[36m(pid=39580)[0m     @     0x7f43b3c35d91 at::TensorIterator::for_each()
[2m[36m(pid=39580)[0m     @     0x7f43b4518b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39580)[0m     @     0x7f43b453bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39580)[0m     @     0x7f43b39dda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39580)[0m     @     0x7f43b39db388 at::native::copy_impl()
[2m[36m(pid=39681)[0m     @     0x7f9764c494f5 at::Tensor::copy_()
[2m[36m(pid=39681)[0m     @     0x7f976711c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39681)[0m     @     0x7f9764c494f5 at::Tensor::copy_()
[2m[36m(pid=39681)[0m     @     0x7f976acf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39681)[0m     @     0x55a84f83afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39681)[0m     @     0x55a84f795b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39681)[0m     @     0x55a84f820baf _PyEval_EvalCodeWithName
[2m[36m(pid=39681)[0m     @     0x55a84f821a20 method_vectorcall
[2m[36m(pid=39681)[0m     @     0x55a84f795bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39681)[0m     @     0x55a84f820baf _PyEval_EvalCodeWithName
[2m[36m(pid=39681)[0m     @     0x55a84f821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39681)[0m     @     0x55a84f796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39681)[0m     @     0x55a84f820baf _PyEval_EvalCodeWithName
[2m[36m(pid=39681)[0m     @     0x55a84f821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39681)[0m     @     0x55a84f796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39681)[0m     @     0x55a84f820baf _PyEval_EvalCodeWithName
[2m[36m(pid=39681)[0m     @     0x55a84f821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39681)[0m     @     0x55a84f796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39681)[0m     @     0x55a84f820baf _PyEval_EvalCodeWithName
[2m[36m(pid=39681)[0m     @     0x55a84f821643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39681)[0m     @     0x55a84f796689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39649)[0m     @     0x7f9f3eb62390 (unknown)
[2m[36m(pid=39649)[0m     @     0x7f703ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39649)[0m     @     0x7f703e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39649)[0m     @     0x7f703e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39649)[0m     @     0x7f703e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=39649)[0m     @     0x7f703e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=39657)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39657)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39657)[0m *** SIGSEGV (@0x0) received by PID 39657 (TID 0x7fc0f2feb700) from PID 0; stack trace: ***
[2m[36m(pid=39657)[0m     @     0x7fc0f2bc4390 (unknown)
[2m[36m(pid=39657)[0m     @     0x7f91f2ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39657)[0m     @     0x7f91f21fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39657)[0m     @     0x7f91f21ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39644)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=39644)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=39644)[0m *** Aborted at 1604572979 (unix time) try "date -d @1604572979" if you are using GNU date ***
[2m[36m(pid=39644)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39644)[0m *** SIGSEGV (@0x0) received by PID 39644 (TID 0x7f19f9966700) from PID 0; stack trace: ***
[2m[36m(pid=39644)[0m     @     0x7f19f953f390 (unknown)
[2m[36m(pid=39644)[0m     @     0x7eeaf94e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39644)[0m     @     0x7eeaf8c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39674)[0m     @     0x7f87460fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39674)[0m     @     0x7f87460faad3 at::TensorIterator::for_each()
[2m[36m(pid=39674)[0m     @     0x7f87460fad91 at::TensorIterator::for_each()
[2m[36m(pid=39674)[0m     @     0x7f87469ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39674)[0m     @     0x7f8746a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39674)[0m     @     0x7f8745ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39674)[0m     @     0x7f8745ea0388 at::native::copy_impl()
[2m[36m(pid=39586)[0m     @     0x7f4cf5c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39586)[0m     @     0x7f4cf53387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39586)[0m     @     0x7f4cf533b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39586)[0m     @     0x7f4cf533bad3 at::TensorIterator::for_each()
[2m[36m(pid=39586)[0m     @     0x7f4cf533bd91 at::TensorIterator::for_each()
[2m[36m(pid=39586)[0m     @     0x7f4cf5c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39586)[0m     @     0x7f4cf5c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39692)[0m     @     0x7f33565818f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39692)[0m     @     0x7f3356581ad3 at::TensorIterator::for_each()
[2m[36m(pid=39692)[0m     @     0x7f3356581d91 at::TensorIterator::for_each()
[2m[36m(pid=39692)[0m     @     0x7f3356e64b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39660)[0m     @     0x7f842416a390 (unknown)
[2m[36m(pid=39660)[0m     @     0x7f5523eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39660)[0m     @     0x7f55235e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39612)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39612)[0m *** SIGSEGV (@0x0) received by PID 39612 (TID 0x7fe82cf20700) from PID 0; stack trace: ***
[2m[36m(pid=39612)[0m     @     0x7fe82caf9390 (unknown)
[2m[36m(pid=39612)[0m     @     0x7fb92ca36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39585)[0m     @     0x7f9603d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39585)[0m     @     0x7f9603d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=39585)[0m     @     0x7f9603d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=39585)[0m     @     0x7f960461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=39646)[0m *** SIGSEGV (@0x0) received by PID 39646 (TID 0x7f7febe10700) from PID 0; stack trace: ***
[2m[36m(pid=39646)[0m     @     0x7f7feb9e9390 (unknown)
[2m[36m(pid=39646)[0m     @     0x7f50eb8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39646)[0m     @     0x7f50eb0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39646)[0m     @     0x7f50eb00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39662)[0m     @     0x7f9374a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39662)[0m     @     0x7f9374a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=39662)[0m     @     0x7f9374a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=39662)[0m     @     0x7f9375370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39662)[0m     @     0x7f9375393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39697)[0m     @     0x7f28eb70b390 (unknown)
[2m[36m(pid=39697)[0m     @     0x7ef9eb6aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39697)[0m     @     0x7ef9eadd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39697)[0m     @     0x7ef9eaddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39697)[0m     @     0x7ef9eaddcad3 at::TensorIterator::for_each()
[2m[36m(pid=39582)[0m     @     0x7f6444ba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=39582)[0m     @     0x7f6444ba4d91 at::TensorIterator::for_each()
[2m[36m(pid=39582)[0m     @     0x7f6445487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39582)[0m     @     0x7f64454aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39584)[0m     @     0x7f6baf4678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39584)[0m     @     0x7f6baf467ad3 at::TensorIterator::for_each()
[2m[36m(pid=39584)[0m     @     0x7f6baf467d91 at::TensorIterator::for_each()
[2m[36m(pid=39584)[0m     @     0x7f6bafd4ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39584)[0m     @     0x7f6bafd6dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39704)[0m     @     0x7f4be3bffad3 at::TensorIterator::for_each()
[2m[36m(pid=39704)[0m     @     0x7f4be3bffd91 at::TensorIterator::for_each()
[2m[36m(pid=39704)[0m     @     0x7f4be44e2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39704)[0m     @     0x7f4be4505c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39704)[0m     @     0x7f4be39a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39704)[0m     @     0x7f4be39a5388 at::native::copy_impl()
[2m[36m(pid=39645)[0m     @     0x7f1f4bd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39645)[0m     @     0x7f1f4bd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=39645)[0m     @     0x7f1f4bd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=39645)[0m     @     0x7f1f4c61fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39645)[0m     @     0x7f1f4c642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39654)[0m     @     0x7ee49c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=39654)[0m     @     0x7ee49d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39654)[0m     @     0x7ee49d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39654)[0m     @     0x7ee49c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39654)[0m     @     0x7ee49c589388 at::native::copy_impl()
[2m[36m(pid=39654)[0m     @     0x7ee49c58b5a4 at::native::copy_()
[2m[36m(pid=39654)[0m     @     0x7ee49cc764f5 at::Tensor::copy_()
[2m[36m(pid=39691)[0m     @     0x7ef760d10d91 at::TensorIterator::for_each()
[2m[36m(pid=39691)[0m     @     0x7ef7615f3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39691)[0m     @     0x7ef761616c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39691)[0m     @     0x7ef760ab8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39691)[0m     @     0x7ef760ab6388 at::native::copy_impl()
[2m[36m(pid=39691)[0m     @     0x7ef760ab85a4 at::native::copy_()
[2m[36m(pid=39703)[0m     @     0x7f467f0ab4f5 at::Tensor::copy_()
[2m[36m(pid=39703)[0m     @     0x7f468157e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39703)[0m     @     0x7f467f0ab4f5 at::Tensor::copy_()
[2m[36m(pid=39703)[0m     @     0x7f468515679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39703)[0m     @     0x55cf22e13fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39703)[0m     @     0x55cf22d6eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39703)[0m     @     0x55cf22df9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39703)[0m     @     0x55cf22dfaa20 method_vectorcall
[2m[36m(pid=39703)[0m     @     0x55cf22d6ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39703)[0m     @     0x55cf22df9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39703)[0m     @     0x55cf22dfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39703)[0m     @     0x55cf22d6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39703)[0m     @     0x55cf22df9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39703)[0m     @     0x55cf22dfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39703)[0m     @     0x55cf22d6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39703)[0m     @     0x55cf22df9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39703)[0m     @     0x55cf22dfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39703)[0m     @     0x55cf22d6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39703)[0m     @     0x55cf22df9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39703)[0m     @     0x55cf22dfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39703)[0m     @     0x55cf22d6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39659)[0m     @     0x7fb0899e54f5 at::Tensor::copy_()
[2m[36m(pid=39659)[0m     @     0x7fb08fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39659)[0m     @     0x55e9b9eeefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39659)[0m     @     0x55e9b9e49b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39659)[0m     @     0x55e9b9ed4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39659)[0m     @     0x55e9b9ed5a20 method_vectorcall
[2m[36m(pid=39659)[0m     @     0x55e9b9e49bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39659)[0m     @     0x55e9b9ed4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39659)[0m     @     0x55e9b9ed5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39659)[0m     @     0x55e9b9e4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39659)[0m     @     0x55e9b9ed4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39659)[0m     @     0x55e9b9ed5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39659)[0m     @     0x55e9b9e4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39659)[0m     @     0x55e9b9ed4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39659)[0m     @     0x55e9b9ed5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39659)[0m     @     0x55e9b9e4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39659)[0m     @     0x55e9b9ed4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39659)[0m     @     0x55e9b9ed5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39659)[0m     @     0x55e9b9e4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39610)[0m     @     0x7f2e387e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39610)[0m     @     0x7f2e387e3d91 at::TensorIterator::for_each()
[2m[36m(pid=39610)[0m     @     0x7f2e390c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39610)[0m     @     0x7f2e390e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39610)[0m     @     0x7f2e3858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39610)[0m     @     0x7f2e38589388 at::native::copy_impl()
[2m[36m(pid=39610)[0m     @     0x7f2e3858b5a4 at::native::copy_()
[2m[36m(pid=39652)[0m     @     0x7f582ad4dad3 at::TensorIterator::for_each()
[2m[36m(pid=39652)[0m     @     0x7f582ad4dd91 at::TensorIterator::for_each()
[2m[36m(pid=39652)[0m     @     0x7f582b630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39652)[0m     @     0x7f582b653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39652)[0m     @     0x7f582aaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39652)[0m     @     0x7f582aaf3388 at::native::copy_impl()
[2m[36m(pid=39652)[0m     @     0x7f582aaf55a4 at::native::copy_()
[2m[36m(pid=39699)[0m     @     0x7f2eea3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39699)[0m     @     0x7f2eea343ad3 at::TensorIterator::for_each()
[2m[36m(pid=39699)[0m     @     0x7f2eea343d91 at::TensorIterator::for_each()
[2m[36m(pid=39699)[0m     @     0x7f2eeac26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39699)[0m     @     0x7f2eeac49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39699)[0m     @     0x7f2eea0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39699)[0m     @     0x7f2eea0e9388 at::native::copy_impl()
[2m[36m(pid=39650)[0m     @     0x7f6fc5a60390 (unknown)
[2m[36m(pid=39650)[0m     @     0x7f40c57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39650)[0m     @     0x7f40c4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39650)[0m     @     0x7f40c4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39600)[0m     @     0x7f5b33f3b390 (unknown)
[2m[36m(pid=39600)[0m     @     0x7f2c33e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39600)[0m     @     0x7f2c335367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39600)[0m     @     0x7f2c335398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39600)[0m     @     0x7f2c33539ad3 at::TensorIterator::for_each()
[2m[36m(pid=39600)[0m     @     0x7f2c33539d91 at::TensorIterator::for_each()
[2m[36m(pid=39600)[0m     @     0x7f2c33e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39653)[0m     @     0x7f52542b3ad3 at::TensorIterator::for_each()
[2m[36m(pid=39653)[0m     @     0x7f52542b3d91 at::TensorIterator::for_each()
[2m[36m(pid=39653)[0m     @     0x7f5254b96b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39653)[0m     @     0x7f5254bb9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39653)[0m     @     0x7f525405ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39653)[0m     @     0x7f5254059388 at::native::copy_impl()
[2m[36m(pid=39663)[0m     @     0x7f2370ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39663)[0m     @     0x7f23705cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39663)[0m     @     0x7f23705d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39663)[0m     @     0x7f23705d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=39663)[0m     @     0x7f23705d2d91 at::TensorIterator::for_each()
[2m[36m(pid=39663)[0m     @     0x7f2370eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39663)[0m     @     0x7f2370ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39596)[0m     @     0x7fa2463bd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39596)[0m     @     0x7fa2463bdad3 at::TensorIterator::for_each()
[2m[36m(pid=39596)[0m     @     0x7fa2463bdd91 at::TensorIterator::for_each()
[2m[36m(pid=39596)[0m     @     0x7fa246ca0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39596)[0m     @     0x7fa246cc3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39613)[0m     @     0x7f7aa22f2390 (unknown)
[2m[36m(pid=39613)[0m     @     0x7f4ba2279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=39613)[0m     @     0x7f4ba19a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39613)[0m     @     0x7f4ba19a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39661)[0m     @     0x7fb8a941dad3 at::TensorIterator::for_each()
[2m[36m(pid=39661)[0m     @     0x7fb8a941dd91 at::TensorIterator::for_each()
[2m[36m(pid=39661)[0m     @     0x7fb8a9d00b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39661)[0m     @     0x7fb8a9d23c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39661)[0m     @     0x7fb8a91c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39661)[0m     @     0x7fb8a91c3388 at::native::copy_impl()
[2m[36m(pid=39590)[0m     @     0x7f87ba14fad3 at::TensorIterator::for_each()
[2m[36m(pid=39590)[0m     @     0x7f87ba14fd91 at::TensorIterator::for_each()
[2m[36m(pid=39590)[0m     @     0x7f87baa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39590)[0m     @     0x7f87baa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39590)[0m     @     0x7f87b9ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39590)[0m     @     0x7f87b9ef5388 at::native::copy_impl()
[2m[36m(pid=39615)[0m     @     0x7fbdbfe4dad3 at::TensorIterator::for_each()
[2m[36m(pid=39615)[0m     @     0x7fbdbfe4dd91 at::TensorIterator::for_each()
[2m[36m(pid=39615)[0m     @     0x7fbdc0730b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39615)[0m     @     0x7fbdc0753c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39615)[0m     @     0x7fbdbfbf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39615)[0m     @     0x7fbdbfbf3388 at::native::copy_impl()
[2m[36m(pid=39694)[0m     @     0x7f89ec7b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39694)[0m     @     0x7f89ec7b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=39669)[0m     @     0x7ed0f00add91 at::TensorIterator::for_each()
[2m[36m(pid=39669)[0m     @     0x7ed0f0990b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39669)[0m     @     0x7ed0f09b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39669)[0m     @     0x7ed0efe55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39669)[0m     @     0x7ed0efe53388 at::native::copy_impl()
[2m[36m(pid=39669)[0m     @     0x7ed0efe555a4 at::native::copy_()
[2m[36m(pid=39589)[0m     @     0x7fcacb51ead3 at::TensorIterator::for_each()
[2m[36m(pid=39589)[0m     @     0x7fcacb51ed91 at::TensorIterator::for_each()
[2m[36m(pid=39589)[0m     @     0x7fcacbe01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39589)[0m     @     0x7fcacbe24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39589)[0m     @     0x7fcacb2c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39589)[0m     @     0x7fcacb2c4388 at::native::copy_impl()
[2m[36m(pid=39589)[0m     @     0x7fcacb2c65a4 at::native::copy_()
[2m[36m(pid=39665)[0m     @     0x7f568ead44f5 at::Tensor::copy_()
[2m[36m(pid=39665)[0m     @     0x7f5694b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39665)[0m     @     0x5596c59cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39665)[0m     @     0x5596c5929b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39665)[0m     @     0x5596c59b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39665)[0m     @     0x5596c59b5a20 method_vectorcall
[2m[36m(pid=39665)[0m     @     0x5596c5929bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39665)[0m     @     0x5596c59b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39665)[0m     @     0x5596c59b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39665)[0m     @     0x5596c592a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39665)[0m     @     0x5596c59b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39665)[0m     @     0x5596c59b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39665)[0m     @     0x5596c592a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39665)[0m     @     0x5596c59b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39665)[0m     @     0x5596c59b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39665)[0m     @     0x5596c592a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39665)[0m     @     0x5596c59b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39665)[0m     @     0x5596c59b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39665)[0m     @     0x5596c592a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39680)[0m     @     0x563724cbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39680)[0m     @     0x563724d46baf _PyEval_EvalCodeWithName
[2m[36m(pid=39680)[0m     @     0x563724d47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39680)[0m     @     0x563724cbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39696)[0m     @     0x561dce2f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39696)[0m     @     0x561dce2f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39696)[0m     @     0x561dce267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39696)[0m     @     0x561dce2f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39696)[0m     @     0x561dce2f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39696)[0m     @     0x561dce267689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39591)[0m     @     0x7f9ccaa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39591)[0m     @     0x7f9cc9ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39591)[0m     @     0x7f9cc9ef5388 at::native::copy_impl()
[2m[36m(pid=39591)[0m     @     0x7f9cc9ef75a4 at::native::copy_()
[2m[36m(pid=39591)[0m     @     0x7f9cca5e24f5 at::Tensor::copy_()
[2m[36m(pid=39591)[0m     @     0x7f9cccab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39651)[0m     @     0x7ed2ecc764f5 at::Tensor::copy_()
[2m[36m(pid=39651)[0m     @     0x7ed2ef1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39651)[0m     @     0x7ed2ecc764f5 at::Tensor::copy_()
[2m[36m(pid=39651)[0m     @     0x7ed2f2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39651)[0m     @     0x5611abe8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39651)[0m     @     0x5611abde5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39651)[0m     @     0x5611abe70baf _PyEval_EvalCodeWithName
[2m[36m(pid=39651)[0m     @     0x5611abe71a20 method_vectorcall
[2m[36m(pid=39651)[0m     @     0x5611abde5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39651)[0m     @     0x5611abe70baf _PyEval_EvalCodeWithName
[2m[36m(pid=39651)[0m     @     0x5611abe71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39651)[0m     @     0x5611abde6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39651)[0m     @     0x5611abe70baf _PyEval_EvalCodeWithName
[2m[36m(pid=39651)[0m     @     0x5611abe71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39651)[0m     @     0x5611abde6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39651)[0m     @     0x5611abe70baf _PyEval_EvalCodeWithName
[2m[36m(pid=39651)[0m     @     0x5611abe71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39651)[0m     @     0x5611abde6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39651)[0m     @     0x5611abe70baf _PyEval_EvalCodeWithName
[2m[36m(pid=39651)[0m     @     0x5611abe71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39651)[0m     @     0x5611abde6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39693)[0m     @     0x564e3c33b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39693)[0m     @     0x564e3c3c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39693)[0m     @     0x564e3c3c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39693)[0m     @     0x564e3c33b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39693)[0m     @     0x564e3c3c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39693)[0m     @     0x564e3c3c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39693)[0m     @     0x564e3c33b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39693)[0m     @     0x564e3c3c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39693)[0m     @     0x564e3c3c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39693)[0m     @     0x564e3c33b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39664)[0m     @     0x7f0bbb8d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39664)[0m     @     0x7f0bbad74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39664)[0m     @     0x7f0bbad72388 at::native::copy_impl()
[2m[36m(pid=39664)[0m     @     0x7f0bbad745a4 at::native::copy_()
[2m[36m(pid=39664)[0m     @     0x7f0bbb45f4f5 at::Tensor::copy_()
[2m[36m(pid=39664)[0m     @     0x7f0bbd9328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39672)[0m     @     0x7f45938efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39672)[0m     @     0x7f4593912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39672)[0m     @     0x7f4592db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39672)[0m     @     0x7f4592db2388 at::native::copy_impl()
[2m[36m(pid=39672)[0m     @     0x7f4592db45a4 at::native::copy_()
[2m[36m(pid=39672)[0m     @     0x7f459349f4f5 at::Tensor::copy_()
[2m[36m(pid=39666)[0m     @     0x7f3b2e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39666)[0m     @     0x7f3b2dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39666)[0m     @     0x7f3b2dbde388 at::native::copy_impl()
[2m[36m(pid=39666)[0m     @     0x7f3b2dbe05a4 at::native::copy_()
[2m[36m(pid=39666)[0m     @     0x7f3b2e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=39666)[0m     @     0x7f3b3079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39593)[0m     @     0x7ef4a1ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=39593)[0m     @     0x7ef4a27ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39593)[0m     @     0x7ef4a27efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39593)[0m     @     0x7ef4a1c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39593)[0m     @     0x7ef4a1c8f388 at::native::copy_impl()
[2m[36m(pid=39593)[0m     @     0x7ef4a1c915a4 at::native::copy_()
[2m[36m(pid=39670)[0m     @     0x7f0780afad91 at::TensorIterator::for_each()
[2m[36m(pid=39670)[0m     @     0x7f07813ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39670)[0m     @     0x7f0781400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39670)[0m     @     0x7f07808a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39670)[0m     @     0x7f07808a0388 at::native::copy_impl()
[2m[36m(pid=39670)[0m     @     0x7f07808a25a4 at::native::copy_()
[2m[36m(pid=39670)[0m     @     0x7f0780f8d4f5 at::Tensor::copy_()
[2m[36m(pid=39688)[0m     @     0x7f9a6e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39688)[0m     @     0x7f9a6e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39688)[0m     @     0x7f9a6d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39688)[0m     @     0x7f9a6d9cd388 at::native::copy_impl()
[2m[36m(pid=39688)[0m     @     0x7f9a6d9cf5a4 at::native::copy_()
[2m[36m(pid=39688)[0m     @     0x7f9a6e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=39688)[0m     @     0x7f9a7058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39611)[0m     @     0x7f8c97a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39611)[0m     @     0x7f8c97a37388 at::native::copy_impl()
[2m[36m(pid=39611)[0m     @     0x7f8c97a395a4 at::native::copy_()
[2m[36m(pid=39611)[0m     @     0x7f8c981244f5 at::Tensor::copy_()
[2m[36m(pid=39611)[0m     @     0x7f8c9a5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39611)[0m     @     0x7f8c981244f5 at::Tensor::copy_()
[2m[36m(pid=39602)[0m     @     0x7f626f0abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39602)[0m     @     0x7f626e54da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39602)[0m     @     0x7f626e54b388 at::native::copy_impl()
[2m[36m(pid=39602)[0m     @     0x7f626e54d5a4 at::native::copy_()
[2m[36m(pid=39602)[0m     @     0x7f626ec384f5 at::Tensor::copy_()
[2m[36m(pid=39602)[0m     @     0x7f627110b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39579)[0m     @     0x7f55872f5ad3 at::TensorIterator::for_each()
[2m[36m(pid=39579)[0m     @     0x7f55872f5d91 at::TensorIterator::for_each()
[2m[36m(pid=39579)[0m     @     0x7f5587bd8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39579)[0m     @     0x7f5587bfbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39579)[0m     @     0x7f558709da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39579)[0m     @     0x7f558709b388 at::native::copy_impl()
[2m[36m(pid=39714)[0m     @     0x7f677c2ffd91 at::TensorIterator::for_each()
[2m[36m(pid=39714)[0m     @     0x7f677cbe2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39714)[0m     @     0x7f677cc05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39714)[0m     @     0x7f677c0a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39714)[0m     @     0x7f677c0a5388 at::native::copy_impl()
[2m[36m(pid=39714)[0m     @     0x7f677c0a75a4 at::native::copy_()
[2m[36m(pid=39714)[0m     @     0x7f677c7924f5 at::Tensor::copy_()
[2m[36m(pid=39606)[0m     @     0x7f29c43a2d91 at::TensorIterator::for_each()
[2m[36m(pid=39606)[0m     @     0x7f29c4c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39606)[0m     @     0x7f29c4ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39606)[0m     @     0x7f29c414aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39606)[0m     @     0x7f29c4148388 at::native::copy_impl()
[2m[36m(pid=39606)[0m     @     0x7f29c414a5a4 at::native::copy_()
[2m[36m(pid=39599)[0m     @     0x7faf6b9bead3 at::TensorIterator::for_each()
[2m[36m(pid=39599)[0m     @     0x7faf6b9bed91 at::TensorIterator::for_each()
[2m[36m(pid=39599)[0m     @     0x7faf6c2a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39599)[0m     @     0x7faf6c2c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39599)[0m     @     0x7faf6b766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39599)[0m     @     0x7faf6b764388 at::native::copy_impl()
[2m[36m(pid=39599)[0m     @     0x7faf6b7665a4 at::native::copy_()
[2m[36m(pid=39583)[0m     @     0x7fb601027d91 at::TensorIterator::for_each()
[2m[36m(pid=39583)[0m     @     0x7fb60190ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39583)[0m     @     0x7fb60192dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39583)[0m     @     0x7fb600dcfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39583)[0m     @     0x7fb600dcd388 at::native::copy_impl()
[2m[36m(pid=39583)[0m     @     0x7fb600dcf5a4 at::native::copy_()
[2m[36m(pid=39583)[0m     @     0x7fb6014ba4f5 at::Tensor::copy_()
[2m[36m(pid=39594)[0m     @     0x7fc3d8e22d91 at::TensorIterator::for_each()
[2m[36m(pid=39594)[0m     @     0x7fc3d9705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39594)[0m     @     0x7fc3d9728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39594)[0m     @     0x7fc3d8bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39594)[0m     @     0x7fc3d8bc8388 at::native::copy_impl()
[2m[36m(pid=39594)[0m     @     0x7fc3d8bca5a4 at::native::copy_()
[2m[36m(pid=39598)[0m     @     0x7f7324116d91 at::TensorIterator::for_each()
[2m[36m(pid=39598)[0m     @     0x7f73249f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39598)[0m     @     0x7f7324a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39598)[0m     @     0x7f7323ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39598)[0m     @     0x7f7323ebc388 at::native::copy_impl()
[2m[36m(pid=39598)[0m     @     0x7f7323ebe5a4 at::native::copy_()
[2m[36m(pid=39592)[0m     @     0x7f0302d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=39592)[0m     @     0x7f0303630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39592)[0m     @     0x7f0303653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39592)[0m     @     0x7f0302af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39592)[0m     @     0x7f0302af3388 at::native::copy_impl()
[2m[36m(pid=39592)[0m     @     0x7f0302af55a4 at::native::copy_()
[2m[36m(pid=39647)[0m     @     0x7f9e59e38d91 at::TensorIterator::for_each()
[2m[36m(pid=39647)[0m     @     0x7f9e5a71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39647)[0m     @     0x7f9e5a73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39647)[0m     @     0x7f9e59be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39647)[0m     @     0x7f9e59bde388 at::native::copy_impl()
[2m[36m(pid=39647)[0m     @     0x7f9e59be05a4 at::native::copy_()
[2m[36m(pid=39647)[0m     @     0x7f9e5a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=39581)[0m     @     0x7f5cf08675a4 at::native::copy_()
[2m[36m(pid=39581)[0m     @     0x7f5cf0f524f5 at::Tensor::copy_()
[2m[36m(pid=39581)[0m     @     0x7f5cf34258de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39581)[0m     @     0x7f5cf0f524f5 at::Tensor::copy_()
[2m[36m(pid=39707)[0m     @     0x5651601f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39707)[0m     @     0x565160167689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39601)[0m     @     0x7fb034ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39601)[0m     @     0x7fb034ccd388 at::native::copy_impl()
[2m[36m(pid=39601)[0m     @     0x7fb034ccf5a4 at::native::copy_()
[2m[36m(pid=39601)[0m     @     0x7fb0353ba4f5 at::Tensor::copy_()
[2m[36m(pid=39604)[0m     @     0x7f4143f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39604)[0m     @     0x7f4143f5f388 at::native::copy_impl()
[2m[36m(pid=39604)[0m     @     0x7f4143f615a4 at::native::copy_()
[2m[36m(pid=39656)[0m     @     0x7f03faf47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39656)[0m     @     0x7f03fa3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39656)[0m     @     0x7f03fa3e7388 at::native::copy_impl()
[2m[36m(pid=39643)[0m     @     0x7ee4ddb958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39648)[0m     @     0x7fba27d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=39648)[0m     @     0x7fba2861fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39648)[0m     @     0x7fba28642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39648)[0m     @     0x7fba27ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39648)[0m     @     0x7fba27ae2388 at::native::copy_impl()
[2m[36m(pid=39587)[0m     @     0x7f3b11be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39587)[0m     @     0x7f3b11bde388 at::native::copy_impl()
[2m[36m(pid=39587)[0m     @     0x7f3b11be05a4 at::native::copy_()
[2m[36m(pid=39614)[0m     @     0x7ef98efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39614)[0m     @     0x7ef98efc9388 at::native::copy_impl()
[2m[36m(pid=39614)[0m     @     0x7ef98efcb5a4 at::native::copy_()
[2m[36m(pid=39597)[0m     @     0x7ef2196105a4 at::native::copy_()
[2m[36m(pid=39597)[0m     @     0x7ef219cfb4f5 at::Tensor::copy_()
[2m[36m(pid=39597)[0m     @     0x7ef21c1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39682)[0m     @     0x7f7238559a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39682)[0m     @     0x7f7238557388 at::native::copy_impl()
[2m[36m(pid=39682)[0m     @     0x7f72385595a4 at::native::copy_()
[2m[36m(pid=39580)[0m     @     0x7f43b39dd5a4 at::native::copy_()
[2m[36m(pid=39580)[0m     @     0x7f43b40c84f5 at::Tensor::copy_()
[2m[36m(pid=39580)[0m     @     0x7f43b659b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39649)[0m     @     0x7f703ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39649)[0m     @     0x7f703ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39649)[0m     @     0x7f703def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39649)[0m     @     0x7f703def5388 at::native::copy_impl()
[2m[36m(pid=39657)[0m     @     0x7f91f21ffad3 at::TensorIterator::for_each()
[2m[36m(pid=39657)[0m     @     0x7f91f21ffd91 at::TensorIterator::for_each()
[2m[36m(pid=39657)[0m     @     0x7f91f2ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39644)[0m     @     0x7eeaf8c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39674)[0m     @     0x7f8745ea25a4 at::native::copy_()
[2m[36m(pid=39674)[0m     @     0x7f874658d4f5 at::Tensor::copy_()
[2m[36m(pid=39674)[0m     @     0x7f8748a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39586)[0m     @     0x7f4cf50e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39586)[0m     @     0x7f4cf50e1388 at::native::copy_impl()
[2m[36m(pid=39586)[0m     @     0x7f4cf50e35a4 at::native::copy_()
[2m[36m(pid=39586)[0m     @     0x7f4cf57ce4f5 at::Tensor::copy_()
[2m[36m(pid=39692)[0m     @     0x7f3356e87c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39692)[0m     @     0x7f3356329a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39692)[0m     @     0x7f3356327388 at::native::copy_impl()
[2m[36m(pid=39692)[0m     @     0x7f33563295a4 at::native::copy_()
[2m[36m(pid=39660)[0m     @     0x7f55235e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39660)[0m     @     0x7f55235e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=39660)[0m     @     0x7f55235e4d91 at::TensorIterator::for_each()
[2m[36m(pid=39660)[0m     @     0x7f5523ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39660)[0m     @     0x7f5523eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39612)[0m     @     0x7fb92c1617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=39612)[0m     @     0x7fb92c1648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=39612)[0m     @     0x7fb92c164ad3 at::TensorIterator::for_each()
[2m[36m(pid=39585)[0m     @     0x7f9604642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39585)[0m     @     0x7f9603ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39585)[0m     @     0x7f9603ae2388 at::native::copy_impl()
[2m[36m(pid=39585)[0m     @     0x7f9603ae45a4 at::native::copy_()
[2m[36m(pid=39646)[0m     @     0x7f50eb00cad3 at::TensorIterator::for_each()
[2m[36m(pid=39646)[0m     @     0x7f50eb00cd91 at::TensorIterator::for_each()
[2m[36m(pid=39646)[0m     @     0x7f50eb8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39646)[0m     @     0x7f50eb912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39646)[0m     @     0x7f50eadb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39646)[0m     @     0x7f50eadb2388 at::native::copy_impl()
[2m[36m(pid=39662)[0m     @     0x7f9374835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39662)[0m     @     0x7f9374833388 at::native::copy_impl()
[2m[36m(pid=39662)[0m     @     0x7f93748355a4 at::native::copy_()
[2m[36m(pid=39662)[0m     @     0x7f9374f204f5 at::Tensor::copy_()
[2m[36m(pid=39662)[0m     @     0x7f93773f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39697)[0m     @     0x7ef9eaddcd91 at::TensorIterator::for_each()
[2m[36m(pid=39697)[0m     @     0x7ef9eb6bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39697)[0m     @     0x7ef9eb6e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39697)[0m     @     0x7ef9eab84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39697)[0m     @     0x7ef9eab82388 at::native::copy_impl()
[2m[36m(pid=39582)[0m     @     0x7f644494ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39582)[0m     @     0x7f644494a388 at::native::copy_impl()
[2m[36m(pid=39582)[0m     @     0x7f644494c5a4 at::native::copy_()
[2m[36m(pid=39582)[0m     @     0x7f64450374f5 at::Tensor::copy_()
[2m[36m(pid=39582)[0m     @     0x7f644750a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39584)[0m     @     0x7f6baf20fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39584)[0m     @     0x7f6baf20d388 at::native::copy_impl()
[2m[36m(pid=39584)[0m     @     0x7f6baf20f5a4 at::native::copy_()
[2m[36m(pid=39584)[0m     @     0x7f6baf8fa4f5 at::Tensor::copy_()
[2m[36m(pid=39584)[0m     @     0x7f6bb1dcd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39704)[0m     @     0x7f4be39a75a4 at::native::copy_()
[2m[36m(pid=39704)[0m     @     0x7f4be40924f5 at::Tensor::copy_()
[2m[36m(pid=39704)[0m     @     0x7f4be65658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39645)[0m     @     0x7f1f4bae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39645)[0m     @     0x7f1f4bae2388 at::native::copy_impl()
[2m[36m(pid=39645)[0m     @     0x7f1f4bae45a4 at::native::copy_()
[2m[36m(pid=39645)[0m     @     0x7f1f4c1cf4f5 at::Tensor::copy_()
[2m[36m(pid=39654)[0m     @     0x7ee49f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39654)[0m     @     0x7ee49cc764f5 at::Tensor::copy_()
[2m[36m(pid=39654)[0m     @     0x7ee4a2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39654)[0m     @     0x558e8c401fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39654)[0m     @     0x558e8c35cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39654)[0m     @     0x558e8c3e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39654)[0m     @     0x558e8c3e8a20 method_vectorcall
[2m[36m(pid=39654)[0m     @     0x558e8c35cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39654)[0m     @     0x558e8c3e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39654)[0m     @     0x558e8c3e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39654)[0m     @     0x558e8c35d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39654)[0m     @     0x558e8c3e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39654)[0m     @     0x558e8c3e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39654)[0m     @     0x558e8c35d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39654)[0m     @     0x558e8c3e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39654)[0m     @     0x558e8c3e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39654)[0m     @     0x558e8c35d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39654)[0m     @     0x558e8c3e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39654)[0m     @     0x558e8c3e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39654)[0m     @     0x558e8c35d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39691)[0m     @     0x7ef7611a34f5 at::Tensor::copy_()
[2m[36m(pid=39691)[0m     @     0x7ef7636768de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39610)[0m     @     0x7f2e38c764f5 at::Tensor::copy_()
[2m[36m(pid=39610)[0m     @     0x7f2e3b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39652)[0m     @     0x7f582b1e04f5 at::Tensor::copy_()
[2m[36m(pid=39652)[0m     @     0x7f582d6b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39652)[0m     @     0x7f582b1e04f5 at::Tensor::copy_()
[2m[36m(pid=39652)[0m     @     0x7f583128b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39652)[0m     @     0x55833646dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39652)[0m     @     0x5583363c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39652)[0m     @     0x558336453baf _PyEval_EvalCodeWithName
[2m[36m(pid=39652)[0m     @     0x558336454a20 method_vectorcall
[2m[36m(pid=39652)[0m     @     0x5583363c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39652)[0m     @     0x558336453baf _PyEval_EvalCodeWithName
[2m[36m(pid=39652)[0m     @     0x558336454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39652)[0m     @     0x5583363c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39652)[0m     @     0x558336453baf _PyEval_EvalCodeWithName
[2m[36m(pid=39652)[0m     @     0x558336454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39652)[0m     @     0x5583363c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39652)[0m     @     0x558336453baf _PyEval_EvalCodeWithName
[2m[36m(pid=39652)[0m     @     0x558336454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39652)[0m     @     0x5583363c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39699)[0m     @     0x7f2eea0eb5a4 at::native::copy_()
[2m[36m(pid=39699)[0m     @     0x7f2eea7d64f5 at::Tensor::copy_()
[2m[36m(pid=39650)[0m     @     0x7f40c4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=39600)[0m     @     0x7f2c33e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39600)[0m     @     0x7f2c332e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39600)[0m     @     0x7f2c332df388 at::native::copy_impl()
[2m[36m(pid=39600)[0m     @     0x7f2c332e15a4 at::native::copy_()
[2m[36m(pid=39653)[0m     @     0x7f525405b5a4 at::native::copy_()
[2m[36m(pid=39653)[0m     @     0x7f52547464f5 at::Tensor::copy_()
[2m[36m(pid=39653)[0m     @     0x7f5256c198de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39663)[0m     @     0x7f237037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39663)[0m     @     0x7f2370378388 at::native::copy_impl()
[2m[36m(pid=39663)[0m     @     0x7f237037a5a4 at::native::copy_()
[2m[36m(pid=39596)[0m     @     0x7fa246165a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39596)[0m     @     0x7fa246163388 at::native::copy_impl()
[2m[36m(pid=39596)[0m     @     0x7fa2461655a4 at::native::copy_()
[2m[36m(pid=39613)[0m     @     0x7f4ba19a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=39613)[0m     @     0x7f4ba19a7d91 at::TensorIterator::for_each()
[2m[36m(pid=39661)[0m     @     0x7fb8a91c55a4 at::native::copy_()
[2m[36m(pid=39661)[0m     @     0x7fb8a98b04f5 at::Tensor::copy_()
[2m[36m(pid=39661)[0m     @     0x7fb8abd838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39590)[0m     @     0x7f87b9ef75a4 at::native::copy_()
[2m[36m(pid=39590)[0m     @     0x7f87ba5e24f5 at::Tensor::copy_()
[2m[36m(pid=39590)[0m     @     0x7f87bcab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39615)[0m     @     0x7fbdbfbf55a4 at::native::copy_()
[2m[36m(pid=39615)[0m     @     0x7fbdc02e04f5 at::Tensor::copy_()
[2m[36m(pid=39615)[0m     @     0x7fbdc27b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39694)[0m     @     0x7f89ec7b6d91 at::TensorIterator::for_each()
[2m[36m(pid=39694)[0m     @     0x7f89ed099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39694)[0m     @     0x7f89ed0bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39669)[0m     @     0x7ed0f05404f5 at::Tensor::copy_()
[2m[36m(pid=39669)[0m     @     0x7ed0f2a138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39669)[0m     @     0x7ed0f05404f5 at::Tensor::copy_()
[2m[36m(pid=39669)[0m     @     0x7ed0f65eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39669)[0m     @     0x560bbb6a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39589)[0m     @     0x7fcacb9b14f5 at::Tensor::copy_()
[2m[36m(pid=39589)[0m     @     0x7fcacde848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39591)[0m     @     0x7f9cca5e24f5 at::Tensor::copy_()
[2m[36m(pid=39591)[0m     @     0x7f9cd068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39591)[0m     @     0x55583b013fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39591)[0m     @     0x55583af6eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39591)[0m     @     0x55583aff9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39591)[0m     @     0x55583affaa20 method_vectorcall
[2m[36m(pid=39591)[0m     @     0x55583af6ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39591)[0m     @     0x55583aff9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39591)[0m     @     0x55583affa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39591)[0m     @     0x55583af6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39591)[0m     @     0x55583aff9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39591)[0m     @     0x55583affa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39591)[0m     @     0x55583af6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39591)[0m     @     0x55583aff9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39591)[0m     @     0x55583affa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39591)[0m     @     0x55583af6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39591)[0m     @     0x55583aff9baf _PyEval_EvalCodeWithName
[2m[36m(pid=39591)[0m     @     0x55583affa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39591)[0m     @     0x55583af6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39664)[0m     @     0x7f0bbb45f4f5 at::Tensor::copy_()
[2m[36m(pid=39664)[0m     @     0x7f0bc150a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39664)[0m     @     0x55a2d40c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39664)[0m     @     0x55a2d401bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39664)[0m     @     0x55a2d40a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39664)[0m     @     0x55a2d40a7a20 method_vectorcall
[2m[36m(pid=39664)[0m     @     0x55a2d401bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39664)[0m     @     0x55a2d40a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39664)[0m     @     0x55a2d40a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39664)[0m     @     0x55a2d401c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39664)[0m     @     0x55a2d40a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39664)[0m     @     0x55a2d40a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39664)[0m     @     0x55a2d401c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39664)[0m     @     0x55a2d40a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39664)[0m     @     0x55a2d40a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39664)[0m     @     0x55a2d401c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39664)[0m     @     0x55a2d40a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39664)[0m     @     0x55a2d40a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39664)[0m     @     0x55a2d401c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39672)[0m     @     0x7f45959728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39672)[0m     @     0x7f459349f4f5 at::Tensor::copy_()
[2m[36m(pid=39672)[0m     @     0x7f459954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39672)[0m     @     0x562bd4301fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39672)[0m     @     0x562bd425cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39672)[0m     @     0x562bd42e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39672)[0m     @     0x562bd42e8a20 method_vectorcall
[2m[36m(pid=39672)[0m     @     0x562bd425cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39672)[0m     @     0x562bd42e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39672)[0m     @     0x562bd42e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39672)[0m     @     0x562bd425d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39672)[0m     @     0x562bd42e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39672)[0m     @     0x562bd42e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39672)[0m     @     0x562bd425d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39672)[0m     @     0x562bd42e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39672)[0m     @     0x562bd42e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39672)[0m     @     0x562bd425d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39672)[0m     @     0x562bd42e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39672)[0m     @     0x562bd42e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39672)[0m     @     0x562bd425d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39666)[0m     @     0x7f3b2e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=39666)[0m     @     0x7f3b3437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39666)[0m     @     0x55e50f9befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39666)[0m     @     0x55e50f919b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39666)[0m     @     0x55e50f9a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39666)[0m     @     0x55e50f9a5a20 method_vectorcall
[2m[36m(pid=39666)[0m     @     0x55e50f919bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39666)[0m     @     0x55e50f9a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39666)[0m     @     0x55e50f9a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39666)[0m     @     0x55e50f91a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39666)[0m     @     0x55e50f9a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39666)[0m     @     0x55e50f9a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39666)[0m     @     0x55e50f91a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39666)[0m     @     0x55e50f9a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39666)[0m     @     0x55e50f9a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39666)[0m     @     0x55e50f91a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39666)[0m     @     0x55e50f9a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39666)[0m     @     0x55e50f9a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39666)[0m     @     0x55e50f91a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39593)[0m     @     0x7ef4a237c4f5 at::Tensor::copy_()
[2m[36m(pid=39593)[0m     @     0x7ef4a484f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39593)[0m     @     0x7ef4a237c4f5 at::Tensor::copy_()
[2m[36m(pid=39593)[0m     @     0x7ef4a842779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39593)[0m     @     0x55b3c1f0cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39593)[0m     @     0x55b3c1e67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39593)[0m     @     0x55b3c1ef2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39593)[0m     @     0x55b3c1ef3a20 method_vectorcall
[2m[36m(pid=39593)[0m     @     0x55b3c1e67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39593)[0m     @     0x55b3c1ef2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39593)[0m     @     0x55b3c1ef3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39593)[0m     @     0x55b3c1e68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39593)[0m     @     0x55b3c1ef2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39593)[0m     @     0x55b3c1ef3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39593)[0m     @     0x55b3c1e68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39593)[0m     @     0x55b3c1ef2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39593)[0m     @     0x55b3c1ef3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39593)[0m     @     0x55b3c1e68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39593)[0m     @     0x55b3c1ef2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39593)[0m     @     0x55b3c1ef3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39593)[0m     @     0x55b3c1e68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39670)[0m     @     0x7f07834608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39670)[0m     @     0x7f0780f8d4f5 at::Tensor::copy_()
[2m[36m(pid=39670)[0m     @     0x7f078703879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39670)[0m     @     0x5577b97c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39670)[0m     @     0x5577b9723b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39670)[0m     @     0x5577b97aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39670)[0m     @     0x5577b97afa20 method_vectorcall
[2m[36m(pid=39670)[0m     @     0x5577b9723bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39670)[0m     @     0x5577b97aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39670)[0m     @     0x5577b97af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39670)[0m     @     0x5577b9724689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39670)[0m     @     0x5577b97aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39670)[0m     @     0x5577b97af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39670)[0m     @     0x5577b9724689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39670)[0m     @     0x5577b97aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39670)[0m     @     0x5577b97af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39670)[0m     @     0x5577b9724689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39670)[0m     @     0x5577b97aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39670)[0m     @     0x5577b97af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39670)[0m     @     0x5577b9724689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39688)[0m     @     0x7f9a6e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=39688)[0m     @     0x7f9a7416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39688)[0m     @     0x5609194ccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39688)[0m     @     0x560919427b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39688)[0m     @     0x5609194b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39688)[0m     @     0x5609194b3a20 method_vectorcall
[2m[36m(pid=39688)[0m     @     0x560919427bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39688)[0m     @     0x5609194b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39688)[0m     @     0x5609194b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39688)[0m     @     0x560919428689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39688)[0m     @     0x5609194b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39688)[0m     @     0x5609194b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39688)[0m     @     0x560919428689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39688)[0m     @     0x5609194b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39688)[0m     @     0x5609194b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39688)[0m     @     0x560919428689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39688)[0m     @     0x5609194b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39688)[0m     @     0x5609194b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39688)[0m     @     0x560919428689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39611)[0m     @     0x7f8c9e1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39611)[0m     @     0x55e02f8d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39611)[0m     @     0x55e02f82bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39611)[0m     @     0x55e02f8b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39611)[0m     @     0x55e02f8b7a20 method_vectorcall
[2m[36m(pid=39611)[0m     @     0x55e02f82bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39611)[0m     @     0x55e02f8b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39611)[0m     @     0x55e02f8b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39611)[0m     @     0x55e02f82c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39611)[0m     @     0x55e02f8b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39611)[0m     @     0x55e02f8b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39611)[0m     @     0x55e02f82c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39611)[0m     @     0x55e02f8b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39611)[0m     @     0x55e02f8b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39611)[0m     @     0x55e02f82c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39611)[0m     @     0x55e02f8b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39611)[0m     @     0x55e02f8b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39611)[0m     @     0x55e02f82c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39602)[0m     @     0x7f626ec384f5 at::Tensor::copy_()
[2m[36m(pid=39602)[0m     @     0x7f6274ce379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39602)[0m     @     0x558d3b9f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39602)[0m     @     0x558d3b951b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39602)[0m     @     0x558d3b9dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39602)[0m     @     0x558d3b9dda20 method_vectorcall
[2m[36m(pid=39602)[0m     @     0x558d3b951bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39602)[0m     @     0x558d3b9dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39602)[0m     @     0x558d3b9dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39602)[0m     @     0x558d3b952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39602)[0m     @     0x558d3b9dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39602)[0m     @     0x558d3b9dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39602)[0m     @     0x558d3b952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39602)[0m     @     0x558d3b9dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39602)[0m     @     0x558d3b9dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39602)[0m     @     0x558d3b952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39602)[0m     @     0x558d3b9dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39602)[0m     @     0x558d3b9dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39602)[0m     @     0x558d3b952689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39579)[0m     @     0x7f558709d5a4 at::native::copy_()
[2m[36m(pid=39579)[0m     @     0x7f55877884f5 at::Tensor::copy_()
[2m[36m(pid=39579)[0m     @     0x7f5589c5b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39579)[0m     @     0x7f55877884f5 at::Tensor::copy_()
[2m[36m(pid=39579)[0m     @     0x7f558d83379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39579)[0m     @     0x55b3b1500fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39579)[0m     @     0x55b3b145bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39579)[0m     @     0x55b3b14e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39579)[0m     @     0x55b3b14e7a20 method_vectorcall
[2m[36m(pid=39579)[0m     @     0x55b3b145bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39579)[0m     @     0x55b3b14e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39579)[0m     @     0x55b3b14e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39579)[0m     @     0x55b3b145c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39579)[0m     @     0x55b3b14e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39579)[0m     @     0x55b3b14e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39579)[0m     @     0x55b3b145c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39579)[0m     @     0x55b3b14e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39579)[0m     @     0x55b3b14e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39579)[0m     @     0x55b3b145c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39579)[0m     @     0x55b3b14e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39579)[0m     @     0x55b3b14e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39579)[0m     @     0x55b3b145c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39714)[0m     @     0x7f677ec658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39714)[0m     @     0x7f677c7924f5 at::Tensor::copy_()
[2m[36m(pid=39714)[0m     @     0x7f678283d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39714)[0m     @     0x5620585eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39714)[0m     @     0x562058545b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39714)[0m     @     0x5620585d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39714)[0m     @     0x5620585d1a20 method_vectorcall
[2m[36m(pid=39714)[0m     @     0x562058545bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39714)[0m     @     0x5620585d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39714)[0m     @     0x5620585d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39714)[0m     @     0x562058546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39714)[0m     @     0x5620585d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39714)[0m     @     0x5620585d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39714)[0m     @     0x562058546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39714)[0m     @     0x5620585d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39714)[0m     @     0x5620585d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39714)[0m     @     0x562058546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39714)[0m     @     0x5620585d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39714)[0m     @     0x5620585d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39714)[0m     @     0x562058546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39606)[0m     @     0x7f29c48354f5 at::Tensor::copy_()
[2m[36m(pid=39606)[0m     @     0x7f29c6d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39606)[0m     @     0x7f29c48354f5 at::Tensor::copy_()
[2m[36m(pid=39606)[0m     @     0x7f29ca8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39606)[0m     @     0x564f6bc36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39606)[0m     @     0x564f6bb91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39606)[0m     @     0x564f6bc1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39606)[0m     @     0x564f6bc1da20 method_vectorcall
[2m[36m(pid=39606)[0m     @     0x564f6bb91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39606)[0m     @     0x564f6bc1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39606)[0m     @     0x564f6bc1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39599)[0m     @     0x7faf6be514f5 at::Tensor::copy_()
[2m[36m(pid=39599)[0m     @     0x7faf6e3248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39599)[0m     @     0x7faf6be514f5 at::Tensor::copy_()
[2m[36m(pid=39599)[0m     @     0x7faf71efc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39599)[0m     @     0x559b800abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39599)[0m     @     0x559b80006b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39599)[0m     @     0x559b80091baf _PyEval_EvalCodeWithName
[2m[36m(pid=39599)[0m     @     0x559b80092a20 method_vectorcall
[2m[36m(pid=39599)[0m     @     0x559b80006bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39599)[0m     @     0x559b80091baf _PyEval_EvalCodeWithName
[2m[36m(pid=39599)[0m     @     0x559b80092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39599)[0m     @     0x559b80007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39599)[0m     @     0x559b80091baf _PyEval_EvalCodeWithName
[2m[36m(pid=39599)[0m     @     0x559b80092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39599)[0m     @     0x559b80007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39599)[0m     @     0x559b80091baf _PyEval_EvalCodeWithName
[2m[36m(pid=39599)[0m     @     0x559b80092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39599)[0m     @     0x559b80007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39599)[0m     @     0x559b80091baf _PyEval_EvalCodeWithName
[2m[36m(pid=39599)[0m     @     0x559b80092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39599)[0m     @     0x559b80007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39583)[0m     @     0x7fb60398d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39583)[0m     @     0x7fb6014ba4f5 at::Tensor::copy_()
[2m[36m(pid=39583)[0m     @     0x7fb60756579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39583)[0m     @     0x5622ed0dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39583)[0m     @     0x5622ed03ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39583)[0m     @     0x5622ed0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39583)[0m     @     0x5622ed0c6a20 method_vectorcall
[2m[36m(pid=39583)[0m     @     0x5622ed03abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39583)[0m     @     0x5622ed0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39583)[0m     @     0x5622ed0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39583)[0m     @     0x5622ed03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39583)[0m     @     0x5622ed0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39583)[0m     @     0x5622ed0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39583)[0m     @     0x5622ed03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39583)[0m     @     0x5622ed0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39583)[0m     @     0x5622ed0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39583)[0m     @     0x5622ed03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39583)[0m     @     0x5622ed0c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39583)[0m     @     0x5622ed0c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39583)[0m     @     0x5622ed03b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39594)[0m     @     0x7fc3d92b54f5 at::Tensor::copy_()
[2m[36m(pid=39594)[0m     @     0x7fc3db7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39594)[0m     @     0x7fc3d92b54f5 at::Tensor::copy_()
[2m[36m(pid=39594)[0m     @     0x7fc3df36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39594)[0m     @     0x55746d648fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39594)[0m     @     0x55746d5a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39594)[0m     @     0x55746d62ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39594)[0m     @     0x55746d62fa20 method_vectorcall
[2m[36m(pid=39594)[0m     @     0x55746d5a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39594)[0m     @     0x55746d62ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39594)[0m     @     0x55746d62f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39594)[0m     @     0x55746d5a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39594)[0m     @     0x55746d62ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39594)[0m     @     0x55746d62f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39594)[0m     @     0x55746d5a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39594)[0m     @     0x55746d62ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39594)[0m     @     0x55746d62f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39594)[0m     @     0x55746d5a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39594)[0m     @     0x55746d62ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39594)[0m     @     0x55746d62f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39594)[0m     @     0x55746d5a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39598)[0m     @     0x7f73245a94f5 at::Tensor::copy_()
[2m[36m(pid=39598)[0m     @     0x7f7326a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39598)[0m     @     0x7f73245a94f5 at::Tensor::copy_()
[2m[36m(pid=39598)[0m     @     0x7f732a65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39598)[0m     @     0x55c22d27ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39598)[0m     @     0x55c22d1dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39598)[0m     @     0x55c22d265baf _PyEval_EvalCodeWithName
[2m[36m(pid=39598)[0m     @     0x55c22d266a20 method_vectorcall
[2m[36m(pid=39598)[0m     @     0x55c22d1dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39598)[0m     @     0x55c22d265baf _PyEval_EvalCodeWithName
[2m[36m(pid=39598)[0m     @     0x55c22d266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39598)[0m     @     0x55c22d1db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39598)[0m     @     0x55c22d265baf _PyEval_EvalCodeWithName
[2m[36m(pid=39598)[0m     @     0x55c22d266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39598)[0m     @     0x55c22d1db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39598)[0m     @     0x55c22d265baf _PyEval_EvalCodeWithName
[2m[36m(pid=39598)[0m     @     0x55c22d266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39598)[0m     @     0x55c22d1db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39598)[0m     @     0x55c22d265baf _PyEval_EvalCodeWithName
[2m[36m(pid=39598)[0m     @     0x55c22d266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39598)[0m     @     0x55c22d1db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39592)[0m     @     0x7f03031e04f5 at::Tensor::copy_()
[2m[36m(pid=39592)[0m     @     0x7f03056b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39592)[0m     @     0x7f03031e04f5 at::Tensor::copy_()
[2m[36m(pid=39592)[0m     @     0x7f030928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39592)[0m     @     0x5603aa463fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39592)[0m     @     0x5603aa3beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39592)[0m     @     0x5603aa449baf _PyEval_EvalCodeWithName
[2m[36m(pid=39592)[0m     @     0x5603aa44aa20 method_vectorcall
[2m[36m(pid=39592)[0m     @     0x5603aa3bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39592)[0m     @     0x5603aa449baf _PyEval_EvalCodeWithName
[2m[36m(pid=39592)[0m     @     0x5603aa44a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39592)[0m     @     0x5603aa3bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39592)[0m     @     0x5603aa449baf _PyEval_EvalCodeWithName
[2m[36m(pid=39592)[0m     @     0x5603aa44a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39592)[0m     @     0x5603aa3bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39592)[0m     @     0x5603aa449baf _PyEval_EvalCodeWithName
[2m[36m(pid=39592)[0m     @     0x5603aa44a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39592)[0m     @     0x5603aa3bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39592)[0m     @     0x5603aa449baf _PyEval_EvalCodeWithName
[2m[36m(pid=39592)[0m     @     0x5603aa44a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39592)[0m     @     0x5603aa3bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39647)[0m     @     0x7f9e5c79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39647)[0m     @     0x7f9e5a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=39647)[0m     @     0x7f9e6037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39647)[0m     @     0x55a75cf81fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39647)[0m     @     0x55a75cedcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39647)[0m     @     0x55a75cf67baf _PyEval_EvalCodeWithName
[2m[36m(pid=39647)[0m     @     0x55a75cf68a20 method_vectorcall
[2m[36m(pid=39647)[0m     @     0x55a75cedcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39647)[0m     @     0x55a75cf67baf _PyEval_EvalCodeWithName
[2m[36m(pid=39647)[0m     @     0x55a75cf68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39647)[0m     @     0x55a75cedd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39647)[0m     @     0x55a75cf67baf _PyEval_EvalCodeWithName
[2m[36m(pid=39647)[0m     @     0x55a75cf68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39647)[0m     @     0x55a75cedd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39647)[0m     @     0x55a75cf67baf _PyEval_EvalCodeWithName
[2m[36m(pid=39647)[0m     @     0x55a75cf68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39647)[0m     @     0x55a75cedd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39647)[0m     @     0x55a75cf67baf _PyEval_EvalCodeWithName
[2m[36m(pid=39647)[0m     @     0x55a75cf68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39647)[0m     @     0x55a75cedd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39581)[0m     @     0x7f5d2946379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39581)[0m     @     0x556d71deafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39581)[0m     @     0x556d71d45b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39581)[0m     @     0x556d71dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39581)[0m     @     0x556d71dd1a20 method_vectorcall
[2m[36m(pid=39581)[0m     @     0x556d71d45bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39581)[0m     @     0x556d71dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39581)[0m     @     0x556d71dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39581)[0m     @     0x556d71d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39581)[0m     @     0x556d71dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39581)[0m     @     0x556d71dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39581)[0m     @     0x556d71d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39581)[0m     @     0x556d71dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39581)[0m     @     0x556d71dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39581)[0m     @     0x556d71d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39581)[0m     @     0x556d71dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=39581)[0m     @     0x556d71dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39581)[0m     @     0x556d71d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39601)[0m     @     0x7fb03788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39601)[0m     @     0x7fb0353ba4f5 at::Tensor::copy_()
[2m[36m(pid=39601)[0m     @     0x7fb03b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39601)[0m     @     0x55658d7ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39601)[0m     @     0x55658d738b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39601)[0m     @     0x55658d7c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39601)[0m     @     0x55658d7c4a20 method_vectorcall
[2m[36m(pid=39601)[0m     @     0x55658d738bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39601)[0m     @     0x55658d7c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39601)[0m     @     0x55658d7c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39601)[0m     @     0x55658d739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39601)[0m     @     0x55658d7c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39601)[0m     @     0x55658d7c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39601)[0m     @     0x55658d739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39601)[0m     @     0x55658d7c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39601)[0m     @     0x55658d7c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39601)[0m     @     0x55658d739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39601)[0m     @     0x55658d7c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39601)[0m     @     0x55658d7c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39601)[0m     @     0x55658d739689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39604)[0m     @     0x7f414464c4f5 at::Tensor::copy_()
[2m[36m(pid=39604)[0m     @     0x7f4146b1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39604)[0m     @     0x7f414464c4f5 at::Tensor::copy_()
[2m[36m(pid=39604)[0m     @     0x7f414a6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39604)[0m     @     0x5637280affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39604)[0m     @     0x56372800ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39604)[0m     @     0x563728095baf _PyEval_EvalCodeWithName
[2m[36m(pid=39604)[0m     @     0x563728096a20 method_vectorcall
[2m[36m(pid=39604)[0m     @     0x56372800abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39604)[0m     @     0x563728095baf _PyEval_EvalCodeWithName
[2m[36m(pid=39604)[0m     @     0x563728096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39604)[0m     @     0x56372800b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39604)[0m     @     0x563728095baf _PyEval_EvalCodeWithName
[2m[36m(pid=39604)[0m     @     0x563728096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39604)[0m     @     0x56372800b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39604)[0m     @     0x563728095baf _PyEval_EvalCodeWithName
[2m[36m(pid=39604)[0m     @     0x563728096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39604)[0m     @     0x56372800b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39604)[0m     @     0x563728095baf _PyEval_EvalCodeWithName
[2m[36m(pid=39604)[0m     @     0x563728096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39604)[0m     @     0x56372800b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39656)[0m     @     0x7f03fa3e95a4 at::native::copy_()
[2m[36m(pid=39656)[0m     @     0x7f03faad44f5 at::Tensor::copy_()
[2m[36m(pid=39656)[0m     @     0x7f03fcfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39656)[0m     @     0x7f03faad44f5 at::Tensor::copy_()
[2m[36m(pid=39656)[0m     @     0x7f0400b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39656)[0m     @     0x55563b32dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39656)[0m     @     0x55563b288b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39656)[0m     @     0x55563b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=39656)[0m     @     0x55563b314a20 method_vectorcall
[2m[36m(pid=39656)[0m     @     0x55563b288bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39656)[0m     @     0x55563b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=39656)[0m     @     0x55563b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39656)[0m     @     0x55563b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39656)[0m     @     0x55563b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=39656)[0m     @     0x55563b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39656)[0m     @     0x55563b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39656)[0m     @     0x55563b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=39656)[0m     @     0x55563b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39656)[0m     @     0x55563b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39656)[0m     @     0x55563b313baf _PyEval_EvalCodeWithName
[2m[36m(pid=39656)[0m     @     0x55563b314643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39656)[0m     @     0x55563b289689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x7ee4ddb95ad3 at::TensorIterator::for_each()
[2m[36m(pid=39643)[0m     @     0x7ee4ddb95d91 at::TensorIterator::for_each()
[2m[36m(pid=39643)[0m     @     0x7ee4de478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39643)[0m     @     0x7ee4de49bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39648)[0m     @     0x7fba27ae45a4 at::native::copy_()
[2m[36m(pid=39648)[0m     @     0x7fba281cf4f5 at::Tensor::copy_()
[2m[36m(pid=39648)[0m     @     0x7fba2a6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39648)[0m     @     0x7fba281cf4f5 at::Tensor::copy_()
[2m[36m(pid=39648)[0m     @     0x7fba2e27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39648)[0m     @     0x5559cd921fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39648)[0m     @     0x5559cd87cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39648)[0m     @     0x5559cd907baf _PyEval_EvalCodeWithName
[2m[36m(pid=39648)[0m     @     0x5559cd908a20 method_vectorcall
[2m[36m(pid=39648)[0m     @     0x5559cd87cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39648)[0m     @     0x5559cd907baf _PyEval_EvalCodeWithName
[2m[36m(pid=39648)[0m     @     0x5559cd908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39648)[0m     @     0x5559cd87d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39648)[0m     @     0x5559cd907baf _PyEval_EvalCodeWithName
[2m[36m(pid=39648)[0m     @     0x5559cd908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39648)[0m     @     0x5559cd87d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39648)[0m     @     0x5559cd907baf _PyEval_EvalCodeWithName
[2m[36m(pid=39587)[0m     @     0x7f3b122cb4f5 at::Tensor::copy_()
[2m[36m(pid=39587)[0m     @     0x7f3b1479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39587)[0m     @     0x7f3b122cb4f5 at::Tensor::copy_()
[2m[36m(pid=39587)[0m     @     0x7f3b1837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39587)[0m     @     0x56307f10efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39587)[0m     @     0x56307f069b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39587)[0m     @     0x56307f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39587)[0m     @     0x56307f0f5a20 method_vectorcall
[2m[36m(pid=39587)[0m     @     0x56307f069bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39587)[0m     @     0x56307f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39587)[0m     @     0x56307f0f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39587)[0m     @     0x56307f06a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39587)[0m     @     0x56307f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39587)[0m     @     0x56307f0f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39587)[0m     @     0x56307f06a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39587)[0m     @     0x56307f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39587)[0m     @     0x56307f0f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39587)[0m     @     0x56307f06a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39587)[0m     @     0x56307f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39587)[0m     @     0x56307f0f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39587)[0m     @     0x56307f06a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39614)[0m     @     0x7ef98f6b64f5 at::Tensor::copy_()
[2m[36m(pid=39614)[0m     @     0x7ef991b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39614)[0m     @     0x7ef98f6b64f5 at::Tensor::copy_()
[2m[36m(pid=39614)[0m     @     0x7ef99576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39614)[0m     @     0x561af97f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39614)[0m     @     0x561af9754b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39614)[0m     @     0x561af97dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39614)[0m     @     0x561af97e0a20 method_vectorcall
[2m[36m(pid=39614)[0m     @     0x561af9754bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39614)[0m     @     0x561af97dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39614)[0m     @     0x561af97e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39614)[0m     @     0x561af9755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39614)[0m     @     0x561af97dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39614)[0m     @     0x561af97e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39614)[0m     @     0x561af9755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39614)[0m     @     0x561af97dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39614)[0m     @     0x561af97e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39614)[0m     @     0x561af9755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39614)[0m     @     0x561af97dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39614)[0m     @     0x561af97e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39614)[0m     @     0x561af9755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39597)[0m     @     0x7ef219cfb4f5 at::Tensor::copy_()
[2m[36m(pid=39597)[0m     @     0x7ef21fda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39597)[0m     @     0x55d68a66bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39597)[0m     @     0x55d68a5c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39597)[0m     @     0x55d68a651baf _PyEval_EvalCodeWithName
[2m[36m(pid=39597)[0m     @     0x55d68a652a20 method_vectorcall
[2m[36m(pid=39597)[0m     @     0x55d68a5c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39597)[0m     @     0x55d68a651baf _PyEval_EvalCodeWithName
[2m[36m(pid=39597)[0m     @     0x55d68a652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39597)[0m     @     0x55d68a5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39597)[0m     @     0x55d68a651baf _PyEval_EvalCodeWithName
[2m[36m(pid=39597)[0m     @     0x55d68a652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39597)[0m     @     0x55d68a5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39597)[0m     @     0x55d68a651baf _PyEval_EvalCodeWithName
[2m[36m(pid=39597)[0m     @     0x55d68a652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39597)[0m     @     0x55d68a5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39597)[0m     @     0x55d68a651baf _PyEval_EvalCodeWithName
[2m[36m(pid=39597)[0m     @     0x55d68a652643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39597)[0m     @     0x55d68a5c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39682)[0m     @     0x7f7238c444f5 at::Tensor::copy_()
[2m[36m(pid=39682)[0m     @     0x7f723b1178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39682)[0m     @     0x7f7238c444f5 at::Tensor::copy_()
[2m[36m(pid=39682)[0m     @     0x7f723ecef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39682)[0m     @     0x55bc222ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39682)[0m     @     0x55bc22246b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39682)[0m     @     0x55bc222d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39682)[0m     @     0x55bc222d2a20 method_vectorcall
[2m[36m(pid=39682)[0m     @     0x55bc22246bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39682)[0m     @     0x55bc222d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39682)[0m     @     0x55bc222d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39682)[0m     @     0x55bc22247689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39682)[0m     @     0x55bc222d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39682)[0m     @     0x55bc222d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39682)[0m     @     0x55bc22247689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39682)[0m     @     0x55bc222d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39682)[0m     @     0x55bc222d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39682)[0m     @     0x55bc22247689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39682)[0m     @     0x55bc222d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39682)[0m     @     0x55bc222d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39682)[0m     @     0x55bc22247689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39580)[0m     @     0x7f43b40c84f5 at::Tensor::copy_()
[2m[36m(pid=39580)[0m     @     0x7f43ba17379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39580)[0m     @     0x55a6ef5cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39580)[0m     @     0x55a6ef526b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39580)[0m     @     0x55a6ef5b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39580)[0m     @     0x55a6ef5b2a20 method_vectorcall
[2m[36m(pid=39580)[0m     @     0x55a6ef526bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39580)[0m     @     0x55a6ef5b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39580)[0m     @     0x55a6ef5b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39580)[0m     @     0x55a6ef527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39580)[0m     @     0x55a6ef5b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39580)[0m     @     0x55a6ef5b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39580)[0m     @     0x55a6ef527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39580)[0m     @     0x55a6ef5b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39580)[0m     @     0x55a6ef5b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39580)[0m     @     0x55a6ef527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39580)[0m     @     0x55a6ef5b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=39580)[0m     @     0x55a6ef5b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39580)[0m     @     0x55a6ef527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39649)[0m     @     0x7f703def75a4 at::native::copy_()
[2m[36m(pid=39649)[0m     @     0x7f703e5e24f5 at::Tensor::copy_()
[2m[36m(pid=39649)[0m     @     0x7f7040ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39649)[0m     @     0x7f703e5e24f5 at::Tensor::copy_()
[2m[36m(pid=39649)[0m     @     0x7f704468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39649)[0m     @     0x563c4a629fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39649)[0m     @     0x563c4a584b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39649)[0m     @     0x563c4a60fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39649)[0m     @     0x563c4a610a20 method_vectorcall
[2m[36m(pid=39649)[0m     @     0x563c4a584bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39649)[0m     @     0x563c4a60fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39649)[0m     @     0x563c4a610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39649)[0m     @     0x563c4a585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39649)[0m     @     0x563c4a60fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39649)[0m     @     0x563c4a610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39649)[0m     @     0x563c4a585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39649)[0m     @     0x563c4a60fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39649)[0m     @     0x563c4a610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39649)[0m     @     0x563c4a585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39649)[0m     @     0x563c4a60fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39649)[0m     @     0x563c4a610643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39649)[0m     @     0x563c4a585689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39657)[0m     @     0x7f91f2b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39657)[0m     @     0x7f91f1fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39657)[0m     @     0x7f91f1fa5388 at::native::copy_impl()
[2m[36m(pid=39657)[0m     @     0x7f91f1fa75a4 at::native::copy_()
[2m[36m(pid=39657)[0m     @     0x7f91f26924f5 at::Tensor::copy_()
[2m[36m(pid=39657)[0m     @     0x7f91f4b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39644)[0m     @     0x7eeaf8c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=39674)[0m     @     0x7f874658d4f5 at::Tensor::copy_()
[2m[36m(pid=39674)[0m     @     0x7f874c63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39674)[0m     @     0x55b4180e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39674)[0m     @     0x55b418042b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39674)[0m     @     0x55b4180cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39674)[0m     @     0x55b4180cea20 method_vectorcall
[2m[36m(pid=39674)[0m     @     0x55b418042bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39674)[0m     @     0x55b4180cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39674)[0m     @     0x55b4180ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39674)[0m     @     0x55b418043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39674)[0m     @     0x55b4180cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39674)[0m     @     0x55b4180ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39674)[0m     @     0x55b418043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39674)[0m     @     0x55b4180cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39674)[0m     @     0x55b4180ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39674)[0m     @     0x55b418043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39674)[0m     @     0x55b4180cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39674)[0m     @     0x55b4180ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39674)[0m     @     0x55b418043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39586)[0m     @     0x7f4cf7ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39586)[0m     @     0x7f4cf57ce4f5 at::Tensor::copy_()
[2m[36m(pid=39586)[0m     @     0x7f4cfb87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39586)[0m     @     0x561d4c924fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39586)[0m     @     0x561d4c87fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39586)[0m     @     0x561d4c90abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39586)[0m     @     0x561d4c90ba20 method_vectorcall
[2m[36m(pid=39586)[0m     @     0x561d4c87fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39586)[0m     @     0x561d4c90abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39586)[0m     @     0x561d4c90b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39586)[0m     @     0x561d4c880689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39586)[0m     @     0x561d4c90abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39586)[0m     @     0x561d4c90b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39586)[0m     @     0x561d4c880689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39586)[0m     @     0x561d4c90abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39586)[0m     @     0x561d4c90b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39586)[0m     @     0x561d4c880689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39586)[0m     @     0x561d4c90abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39586)[0m     @     0x561d4c90b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39586)[0m     @     0x561d4c880689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39692)[0m     @     0x7f3356a144f5 at::Tensor::copy_()
[2m[36m(pid=39692)[0m     @     0x7f3358ee78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39692)[0m     @     0x7f3356a144f5 at::Tensor::copy_()
[2m[36m(pid=39692)[0m     @     0x7f335cabf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39692)[0m     @     0x55e4e73defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39692)[0m     @     0x55e4e7339b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39692)[0m     @     0x55e4e73c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39692)[0m     @     0x55e4e73c5a20 method_vectorcall
[2m[36m(pid=39692)[0m     @     0x55e4e7339bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39692)[0m     @     0x55e4e73c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39692)[0m     @     0x55e4e73c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39692)[0m     @     0x55e4e733a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39692)[0m     @     0x55e4e73c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39692)[0m     @     0x55e4e73c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39692)[0m     @     0x55e4e733a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39692)[0m     @     0x55e4e73c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39692)[0m     @     0x55e4e73c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39692)[0m     @     0x55e4e733a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39692)[0m     @     0x55e4e73c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39692)[0m     @     0x55e4e73c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39692)[0m     @     0x55e4e733a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39660)[0m     @     0x7f552338ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39660)[0m     @     0x7f552338a388 at::native::copy_impl()
[2m[36m(pid=39660)[0m     @     0x7f552338c5a4 at::native::copy_()
[2m[36m(pid=39612)[0m     @     0x7fb92c164d91 at::TensorIterator::for_each()
[2m[36m(pid=39612)[0m     @     0x7fb92ca47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39612)[0m     @     0x7fb92ca6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39585)[0m     @     0x7f96041cf4f5 at::Tensor::copy_()
[2m[36m(pid=39585)[0m     @     0x7f96066a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39585)[0m     @     0x7f96041cf4f5 at::Tensor::copy_()
[2m[36m(pid=39585)[0m     @     0x7f960a27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39585)[0m     @     0x55bc8d3e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39585)[0m     @     0x55bc8d33cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39585)[0m     @     0x55bc8d3c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39585)[0m     @     0x55bc8d3c8a20 method_vectorcall
[2m[36m(pid=39585)[0m     @     0x55bc8d33cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39585)[0m     @     0x55bc8d3c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39585)[0m     @     0x55bc8d3c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39585)[0m     @     0x55bc8d33d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39585)[0m     @     0x55bc8d3c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39585)[0m     @     0x55bc8d3c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39585)[0m     @     0x55bc8d33d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39585)[0m     @     0x55bc8d3c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39585)[0m     @     0x55bc8d3c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39585)[0m     @     0x55bc8d33d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39585)[0m     @     0x55bc8d3c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=39585)[0m     @     0x55bc8d3c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39585)[0m     @     0x55bc8d33d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39646)[0m     @     0x7f50eadb45a4 at::native::copy_()
[2m[36m(pid=39646)[0m     @     0x7f50eb49f4f5 at::Tensor::copy_()
[2m[36m(pid=39646)[0m     @     0x7f50ed9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39662)[0m     @     0x7f9374f204f5 at::Tensor::copy_()
[2m[36m(pid=39662)[0m     @     0x7f937afcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39662)[0m     @     0x55722d419fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39662)[0m     @     0x55722d374b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39662)[0m     @     0x55722d3ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39662)[0m     @     0x55722d400a20 method_vectorcall
[2m[36m(pid=39662)[0m     @     0x55722d374bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39662)[0m     @     0x55722d3ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39662)[0m     @     0x55722d400643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39662)[0m     @     0x55722d375689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39662)[0m     @     0x55722d3ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39662)[0m     @     0x55722d400643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39662)[0m     @     0x55722d375689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39662)[0m     @     0x55722d3ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39662)[0m     @     0x55722d400643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39662)[0m     @     0x55722d375689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39662)[0m     @     0x55722d3ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39662)[0m     @     0x55722d400643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39662)[0m     @     0x55722d375689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39697)[0m     @     0x7ef9eab845a4 at::native::copy_()
[2m[36m(pid=39697)[0m     @     0x7ef9eb26f4f5 at::Tensor::copy_()
[2m[36m(pid=39697)[0m     @     0x7ef9ed7428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39697)[0m     @     0x7ef9eb26f4f5 at::Tensor::copy_()
[2m[36m(pid=39582)[0m     @     0x7f64450374f5 at::Tensor::copy_()
[2m[36m(pid=39582)[0m     @     0x7f644b0e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39582)[0m     @     0x561f481bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39582)[0m     @     0x561f4811ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39582)[0m     @     0x561f481a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39582)[0m     @     0x561f481a6a20 method_vectorcall
[2m[36m(pid=39582)[0m     @     0x561f4811abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39582)[0m     @     0x561f481a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39582)[0m     @     0x561f481a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39582)[0m     @     0x561f4811b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39582)[0m     @     0x561f481a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39582)[0m     @     0x561f481a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39582)[0m     @     0x561f4811b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39582)[0m     @     0x561f481a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39582)[0m     @     0x561f481a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39582)[0m     @     0x561f4811b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39582)[0m     @     0x561f481a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39582)[0m     @     0x561f481a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39582)[0m     @     0x561f4811b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39584)[0m     @     0x7f6baf8fa4f5 at::Tensor::copy_()
[2m[36m(pid=39584)[0m     @     0x7f6bb59a579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39584)[0m     @     0x55c53d7effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39584)[0m     @     0x55c53d74ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39584)[0m     @     0x55c53d7d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39584)[0m     @     0x55c53d7d6a20 method_vectorcall
[2m[36m(pid=39584)[0m     @     0x55c53d74abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39584)[0m     @     0x55c53d7d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39584)[0m     @     0x55c53d7d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39584)[0m     @     0x55c53d74b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39584)[0m     @     0x55c53d7d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39584)[0m     @     0x55c53d7d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39584)[0m     @     0x55c53d74b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39584)[0m     @     0x55c53d7d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39584)[0m     @     0x55c53d7d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39584)[0m     @     0x55c53d74b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39584)[0m     @     0x55c53d7d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39584)[0m     @     0x55c53d7d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39584)[0m     @     0x55c53d74b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39704)[0m     @     0x7f4be40924f5 at::Tensor::copy_()
[2m[36m(pid=39704)[0m     @     0x7f4bea13d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39704)[0m     @     0x555e2fbc8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39704)[0m     @     0x555e2fb23b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39704)[0m     @     0x555e2fbaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39704)[0m     @     0x555e2fbafa20 method_vectorcall
[2m[36m(pid=39704)[0m     @     0x555e2fb23bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39704)[0m     @     0x555e2fbaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39704)[0m     @     0x555e2fbaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39704)[0m     @     0x555e2fb24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39704)[0m     @     0x555e2fbaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39704)[0m     @     0x555e2fbaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39704)[0m     @     0x555e2fb24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39704)[0m     @     0x555e2fbaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39704)[0m     @     0x555e2fbaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39704)[0m     @     0x555e2fb24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39704)[0m     @     0x555e2fbaebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39704)[0m     @     0x555e2fbaf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39704)[0m     @     0x555e2fb24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39645)[0m     @     0x7f1f4e6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39645)[0m     @     0x7f1f4c1cf4f5 at::Tensor::copy_()
[2m[36m(pid=39645)[0m     @     0x7f1f5227a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39645)[0m     @     0x5633d33bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39645)[0m     @     0x5633d331ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39645)[0m     @     0x5633d33a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39645)[0m     @     0x5633d33a6a20 method_vectorcall
[2m[36m(pid=39645)[0m     @     0x5633d331abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39645)[0m     @     0x5633d33a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39645)[0m     @     0x5633d33a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39645)[0m     @     0x5633d331b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39645)[0m     @     0x5633d33a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39645)[0m     @     0x5633d33a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39645)[0m     @     0x5633d331b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39645)[0m     @     0x5633d33a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39645)[0m     @     0x5633d33a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39645)[0m     @     0x5633d331b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39645)[0m     @     0x5633d33a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39645)[0m     @     0x5633d33a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39645)[0m     @     0x5633d331b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39691)[0m     @     0x7ef7611a34f5 at::Tensor::copy_()
[2m[36m(pid=39691)[0m     @     0x7ef76724e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39691)[0m     @     0x55b1c3859fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39691)[0m     @     0x55b1c37b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39691)[0m     @     0x55b1c383fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39691)[0m     @     0x55b1c3840a20 method_vectorcall
[2m[36m(pid=39691)[0m     @     0x55b1c37b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39691)[0m     @     0x55b1c383fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39691)[0m     @     0x55b1c3840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39691)[0m     @     0x55b1c37b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39691)[0m     @     0x55b1c383fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39691)[0m     @     0x55b1c3840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39691)[0m     @     0x55b1c37b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39691)[0m     @     0x55b1c383fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39691)[0m     @     0x55b1c3840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39691)[0m     @     0x55b1c37b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39691)[0m     @     0x55b1c383fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39691)[0m     @     0x55b1c3840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39691)[0m     @     0x55b1c37b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39610)[0m     @     0x7f2e38c764f5 at::Tensor::copy_()
[2m[36m(pid=39610)[0m     @     0x7f2e3ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39610)[0m     @     0x55f0a18b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39610)[0m     @     0x55f0a1814b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39610)[0m     @     0x55f0a189fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39610)[0m     @     0x55f0a18a0a20 method_vectorcall
[2m[36m(pid=39610)[0m     @     0x55f0a1814bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39610)[0m     @     0x55f0a189fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39610)[0m     @     0x55f0a18a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39610)[0m     @     0x55f0a1815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39610)[0m     @     0x55f0a189fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39610)[0m     @     0x55f0a18a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39610)[0m     @     0x55f0a1815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39610)[0m     @     0x55f0a189fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39610)[0m     @     0x55f0a18a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39610)[0m     @     0x55f0a1815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39610)[0m     @     0x55f0a189fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39610)[0m     @     0x55f0a18a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39610)[0m     @     0x55f0a1815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39652)[0m     @     0x558336453baf _PyEval_EvalCodeWithName
[2m[36m(pid=39652)[0m     @     0x558336454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39652)[0m     @     0x5583363c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39699)[0m     @     0x7f2eecca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39699)[0m     @     0x7f2eea7d64f5 at::Tensor::copy_()
[2m[36m(pid=39699)[0m     @     0x7f2ef047779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39699)[0m     @     0x55926bdfdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39699)[0m     @     0x55926bd58b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39699)[0m     @     0x55926bde3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39699)[0m     @     0x55926bde4a20 method_vectorcall
[2m[36m(pid=39699)[0m     @     0x55926bd58bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39699)[0m     @     0x55926bde3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39699)[0m     @     0x55926bde4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39699)[0m     @     0x55926bd59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39699)[0m     @     0x55926bde3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39699)[0m     @     0x55926bde4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39699)[0m     @     0x55926bd59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39699)[0m     @     0x55926bde3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39699)[0m     @     0x55926bde4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39699)[0m     @     0x55926bd59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39699)[0m     @     0x55926bde3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39699)[0m     @     0x55926bde4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39699)[0m     @     0x55926bd59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x7f40c4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=39650)[0m     @     0x7f40c580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39650)[0m     @     0x7f40c582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39650)[0m     @     0x7f40c4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39650)[0m     @     0x7f40c4ccd388 at::native::copy_impl()
[2m[36m(pid=39600)[0m     @     0x7f2c339cc4f5 at::Tensor::copy_()
[2m[36m(pid=39600)[0m     @     0x7f2c35e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39600)[0m     @     0x7f2c339cc4f5 at::Tensor::copy_()
[2m[36m(pid=39600)[0m     @     0x7f2c39a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39600)[0m     @     0x5642650ccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39600)[0m     @     0x564265027b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39600)[0m     @     0x5642650b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39600)[0m     @     0x5642650b3a20 method_vectorcall
[2m[36m(pid=39600)[0m     @     0x564265027bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39600)[0m     @     0x5642650b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39600)[0m     @     0x5642650b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39600)[0m     @     0x564265028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39600)[0m     @     0x5642650b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39600)[0m     @     0x5642650b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39600)[0m     @     0x564265028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39600)[0m     @     0x5642650b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39600)[0m     @     0x5642650b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39600)[0m     @     0x564265028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39600)[0m     @     0x5642650b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=39600)[0m     @     0x5642650b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39600)[0m     @     0x564265028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39653)[0m     @     0x7f52547464f5 at::Tensor::copy_()
[2m[36m(pid=39653)[0m     @     0x7f525a7f179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39653)[0m     @     0x55a467952fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39653)[0m     @     0x55a4678adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39653)[0m     @     0x55a467938baf _PyEval_EvalCodeWithName
[2m[36m(pid=39653)[0m     @     0x55a467939a20 method_vectorcall
[2m[36m(pid=39653)[0m     @     0x55a4678adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39653)[0m     @     0x55a467938baf _PyEval_EvalCodeWithName
[2m[36m(pid=39653)[0m     @     0x55a467939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39653)[0m     @     0x55a4678ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39653)[0m     @     0x55a467938baf _PyEval_EvalCodeWithName
[2m[36m(pid=39653)[0m     @     0x55a467939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39653)[0m     @     0x55a4678ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39653)[0m     @     0x55a467938baf _PyEval_EvalCodeWithName
[2m[36m(pid=39653)[0m     @     0x55a467939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39653)[0m     @     0x55a4678ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39653)[0m     @     0x55a467938baf _PyEval_EvalCodeWithName
[2m[36m(pid=39653)[0m     @     0x55a467939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39653)[0m     @     0x55a4678ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39663)[0m     @     0x7f2370a654f5 at::Tensor::copy_()
[2m[36m(pid=39663)[0m     @     0x7f2372f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39663)[0m     @     0x7f2370a654f5 at::Tensor::copy_()
[2m[36m(pid=39663)[0m     @     0x7f2376b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39663)[0m     @     0x5615bf25cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39663)[0m     @     0x5615bf1b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39663)[0m     @     0x5615bf242baf _PyEval_EvalCodeWithName
[2m[36m(pid=39663)[0m     @     0x5615bf243a20 method_vectorcall
[2m[36m(pid=39663)[0m     @     0x5615bf1b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39663)[0m     @     0x5615bf242baf _PyEval_EvalCodeWithName
[2m[36m(pid=39663)[0m     @     0x5615bf243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39663)[0m     @     0x5615bf1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39663)[0m     @     0x5615bf242baf _PyEval_EvalCodeWithName
[2m[36m(pid=39663)[0m     @     0x5615bf243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39663)[0m     @     0x5615bf1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39663)[0m     @     0x5615bf242baf _PyEval_EvalCodeWithName
[2m[36m(pid=39663)[0m     @     0x5615bf243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39663)[0m     @     0x5615bf1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39663)[0m     @     0x5615bf242baf _PyEval_EvalCodeWithName
[2m[36m(pid=39663)[0m     @     0x5615bf243643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39663)[0m     @     0x5615bf1b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39596)[0m     @     0x7fa2468504f5 at::Tensor::copy_()
[2m[36m(pid=39596)[0m     @     0x7fa248d238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39596)[0m     @     0x7fa2468504f5 at::Tensor::copy_()
[2m[36m(pid=39596)[0m     @     0x7fa24c8fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39596)[0m     @     0x564406a70fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39596)[0m     @     0x5644069cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39596)[0m     @     0x564406a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=39596)[0m     @     0x564406a57a20 method_vectorcall
[2m[36m(pid=39596)[0m     @     0x5644069cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39596)[0m     @     0x564406a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=39596)[0m     @     0x564406a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39596)[0m     @     0x5644069cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39596)[0m     @     0x564406a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=39596)[0m     @     0x564406a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39596)[0m     @     0x5644069cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39596)[0m     @     0x564406a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=39596)[0m     @     0x564406a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39596)[0m     @     0x5644069cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39596)[0m     @     0x564406a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=39596)[0m     @     0x564406a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39596)[0m     @     0x5644069cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39613)[0m     @     0x7f4ba228ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39613)[0m     @     0x7f4ba22adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39613)[0m     @     0x7f4ba174fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39613)[0m     @     0x7f4ba174d388 at::native::copy_impl()
[2m[36m(pid=39613)[0m     @     0x7f4ba174f5a4 at::native::copy_()
[2m[36m(pid=39661)[0m     @     0x7fb8a98b04f5 at::Tensor::copy_()
[2m[36m(pid=39661)[0m     @     0x7fb8af95b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39661)[0m     @     0x55b921d95fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39661)[0m     @     0x55b921cf0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39661)[0m     @     0x55b921d7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39661)[0m     @     0x55b921d7ca20 method_vectorcall
[2m[36m(pid=39661)[0m     @     0x55b921cf0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39661)[0m     @     0x55b921d7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39661)[0m     @     0x55b921d7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39661)[0m     @     0x55b921cf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39661)[0m     @     0x55b921d7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39661)[0m     @     0x55b921d7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39661)[0m     @     0x55b921cf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39661)[0m     @     0x55b921d7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39661)[0m     @     0x55b921d7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39661)[0m     @     0x55b921cf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39661)[0m     @     0x55b921d7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39661)[0m     @     0x55b921d7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39661)[0m     @     0x55b921cf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39590)[0m     @     0x7f87ba5e24f5 at::Tensor::copy_()
[2m[36m(pid=39590)[0m     @     0x7f87c068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39590)[0m     @     0x55ed9bd87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39590)[0m     @     0x55ed9bce2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39590)[0m     @     0x55ed9bd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39590)[0m     @     0x55ed9bd6ea20 method_vectorcall
[2m[36m(pid=39590)[0m     @     0x55ed9bce2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39590)[0m     @     0x55ed9bd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39590)[0m     @     0x55ed9bd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39590)[0m     @     0x55ed9bce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39590)[0m     @     0x55ed9bd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39590)[0m     @     0x55ed9bd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39590)[0m     @     0x55ed9bce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39590)[0m     @     0x55ed9bd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39590)[0m     @     0x55ed9bd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39590)[0m     @     0x55ed9bce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39590)[0m     @     0x55ed9bd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39590)[0m     @     0x55ed9bd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39590)[0m     @     0x55ed9bce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39615)[0m     @     0x7fbdc02e04f5 at::Tensor::copy_()
[2m[36m(pid=39615)[0m     @     0x7fbdc638b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39615)[0m     @     0x5650c674efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39615)[0m     @     0x5650c66a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39615)[0m     @     0x5650c6734baf _PyEval_EvalCodeWithName
[2m[36m(pid=39615)[0m     @     0x5650c6735a20 method_vectorcall
[2m[36m(pid=39615)[0m     @     0x5650c66a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39615)[0m     @     0x5650c6734baf _PyEval_EvalCodeWithName
[2m[36m(pid=39615)[0m     @     0x5650c6735643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39615)[0m     @     0x5650c66aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39615)[0m     @     0x5650c6734baf _PyEval_EvalCodeWithName
[2m[36m(pid=39615)[0m     @     0x5650c6735643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39615)[0m     @     0x5650c66aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39615)[0m     @     0x5650c6734baf _PyEval_EvalCodeWithName
[2m[36m(pid=39615)[0m     @     0x5650c6735643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39615)[0m     @     0x5650c66aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39615)[0m     @     0x5650c6734baf _PyEval_EvalCodeWithName
[2m[36m(pid=39615)[0m     @     0x5650c6735643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39615)[0m     @     0x5650c66aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39694)[0m     @     0x7f89ec55ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39694)[0m     @     0x7f89ec55c388 at::native::copy_impl()
[2m[36m(pid=39694)[0m     @     0x7f89ec55e5a4 at::native::copy_()
[2m[36m(pid=39694)[0m     @     0x7f89ecc494f5 at::Tensor::copy_()
[2m[36m(pid=39669)[0m     @     0x560bbb600b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39669)[0m     @     0x560bbb68bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39669)[0m     @     0x560bbb68ca20 method_vectorcall
[2m[36m(pid=39669)[0m     @     0x560bbb600bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39669)[0m     @     0x560bbb68bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39669)[0m     @     0x560bbb68c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39669)[0m     @     0x560bbb601689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39669)[0m     @     0x560bbb68bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39669)[0m     @     0x560bbb68c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39669)[0m     @     0x560bbb601689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39669)[0m     @     0x560bbb68bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39669)[0m     @     0x560bbb68c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39669)[0m     @     0x560bbb601689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39669)[0m     @     0x560bbb68bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39669)[0m     @     0x560bbb68c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39669)[0m     @     0x560bbb601689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39589)[0m     @     0x7fcacb9b14f5 at::Tensor::copy_()
[2m[36m(pid=39589)[0m     @     0x7fcad1a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39589)[0m     @     0x55b819f48fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39589)[0m     @     0x55b819ea3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39589)[0m     @     0x55b819f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39589)[0m     @     0x55b819f2fa20 method_vectorcall
[2m[36m(pid=39589)[0m     @     0x55b819ea3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39589)[0m     @     0x55b819f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39589)[0m     @     0x55b819f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39589)[0m     @     0x55b819ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39589)[0m     @     0x55b819f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39589)[0m     @     0x55b819f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39589)[0m     @     0x55b819ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39589)[0m     @     0x55b819f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39589)[0m     @     0x55b819f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39589)[0m     @     0x55b819ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39589)[0m     @     0x55b819f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=39589)[0m     @     0x55b819f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39589)[0m     @     0x55b819ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39606)[0m     @     0x564f6bb92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39606)[0m     @     0x564f6bc1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39606)[0m     @     0x564f6bc1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39606)[0m     @     0x564f6bb92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39606)[0m     @     0x564f6bc1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39606)[0m     @     0x564f6bc1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39606)[0m     @     0x564f6bb92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39606)[0m     @     0x564f6bc1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39606)[0m     @     0x564f6bc1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39606)[0m     @     0x564f6bb92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x7ee4dd93da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39643)[0m     @     0x7ee4dd93b388 at::native::copy_impl()
[2m[36m(pid=39648)[0m     @     0x5559cd908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39648)[0m     @     0x5559cd87d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39648)[0m     @     0x5559cd907baf _PyEval_EvalCodeWithName
[2m[36m(pid=39648)[0m     @     0x5559cd908643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39648)[0m     @     0x5559cd87d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39657)[0m     @     0x7f91f26924f5 at::Tensor::copy_()
[2m[36m(pid=39657)[0m     @     0x7f91f873d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39657)[0m     @     0x55c372e82fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39657)[0m     @     0x55c372dddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39657)[0m     @     0x55c372e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=39657)[0m     @     0x55c372e69a20 method_vectorcall
[2m[36m(pid=39657)[0m     @     0x55c372dddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39657)[0m     @     0x55c372e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=39657)[0m     @     0x55c372e69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39657)[0m     @     0x55c372dde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39657)[0m     @     0x55c372e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=39657)[0m     @     0x55c372e69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39657)[0m     @     0x55c372dde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39657)[0m     @     0x55c372e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=39657)[0m     @     0x55c372e69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39657)[0m     @     0x55c372dde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39657)[0m     @     0x55c372e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=39657)[0m     @     0x55c372e69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39657)[0m     @     0x55c372dde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39660)[0m     @     0x7f5523a774f5 at::Tensor::copy_()
[2m[36m(pid=39660)[0m     @     0x7f5525f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39660)[0m     @     0x7f5523a774f5 at::Tensor::copy_()
[2m[36m(pid=39660)[0m     @     0x7f5529b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39660)[0m     @     0x56496968ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39660)[0m     @     0x5649695eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39660)[0m     @     0x564969675baf _PyEval_EvalCodeWithName
[2m[36m(pid=39660)[0m     @     0x564969676a20 method_vectorcall
[2m[36m(pid=39660)[0m     @     0x5649695eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39660)[0m     @     0x564969675baf _PyEval_EvalCodeWithName
[2m[36m(pid=39660)[0m     @     0x564969676643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39660)[0m     @     0x5649695eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39660)[0m     @     0x564969675baf _PyEval_EvalCodeWithName
[2m[36m(pid=39660)[0m     @     0x564969676643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39660)[0m     @     0x5649695eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39660)[0m     @     0x564969675baf _PyEval_EvalCodeWithName
[2m[36m(pid=39660)[0m     @     0x564969676643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39660)[0m     @     0x5649695eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39660)[0m     @     0x564969675baf _PyEval_EvalCodeWithName
[2m[36m(pid=39660)[0m     @     0x564969676643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39660)[0m     @     0x5649695eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39612)[0m     @     0x7fb92bf0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39612)[0m     @     0x7fb92bf0a388 at::native::copy_impl()
[2m[36m(pid=39612)[0m     @     0x7fb92bf0c5a4 at::native::copy_()
[2m[36m(pid=39612)[0m     @     0x7fb92c5f74f5 at::Tensor::copy_()
[2m[36m(pid=39646)[0m     @     0x7f50eb49f4f5 at::Tensor::copy_()
[2m[36m(pid=39646)[0m     @     0x7f50f154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39646)[0m     @     0x564076c3afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39646)[0m     @     0x564076b95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39646)[0m     @     0x564076c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=39646)[0m     @     0x564076c21a20 method_vectorcall
[2m[36m(pid=39646)[0m     @     0x564076b95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39646)[0m     @     0x564076c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=39646)[0m     @     0x564076c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39646)[0m     @     0x564076b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39646)[0m     @     0x564076c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=39646)[0m     @     0x564076c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39646)[0m     @     0x564076b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39646)[0m     @     0x564076c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=39646)[0m     @     0x564076c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39646)[0m     @     0x564076b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39646)[0m     @     0x564076c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=39646)[0m     @     0x564076c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39646)[0m     @     0x564076b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39697)[0m     @     0x7ef9f131a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39697)[0m     @     0x56521660efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39697)[0m     @     0x565216569b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39697)[0m     @     0x5652165f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39697)[0m     @     0x5652165f5a20 method_vectorcall
[2m[36m(pid=39697)[0m     @     0x565216569bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39697)[0m     @     0x5652165f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39697)[0m     @     0x5652165f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39697)[0m     @     0x56521656a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39697)[0m     @     0x5652165f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39697)[0m     @     0x5652165f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39697)[0m     @     0x56521656a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39697)[0m     @     0x5652165f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39697)[0m     @     0x5652165f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39697)[0m     @     0x56521656a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39697)[0m     @     0x5652165f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=39697)[0m     @     0x5652165f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39697)[0m     @     0x56521656a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x7f40c4ccf5a4 at::native::copy_()
[2m[36m(pid=39650)[0m     @     0x7f40c53ba4f5 at::Tensor::copy_()
[2m[36m(pid=39650)[0m     @     0x7f40c788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39613)[0m     @     0x7f4ba1e3a4f5 at::Tensor::copy_()
[2m[36m(pid=39613)[0m     @     0x7f4ba430d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39613)[0m     @     0x7f4ba1e3a4f5 at::Tensor::copy_()
[2m[36m(pid=39694)[0m     @     0x7f89ef11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39694)[0m     @     0x7f89ecc494f5 at::Tensor::copy_()
[2m[36m(pid=39694)[0m     @     0x7f89f2cf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39694)[0m     @     0x5569a0ccdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39694)[0m     @     0x5569a0c28b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39694)[0m     @     0x5569a0cb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39694)[0m     @     0x5569a0cb4a20 method_vectorcall
[2m[36m(pid=39694)[0m     @     0x5569a0c28bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39694)[0m     @     0x5569a0cb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39694)[0m     @     0x5569a0cb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39694)[0m     @     0x5569a0c29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x7ee4dd93d5a4 at::native::copy_()
[2m[36m(pid=39643)[0m     @     0x7ee4de0284f5 at::Tensor::copy_()
[2m[36m(pid=39643)[0m     @     0x7ee4e04fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39644)[0m     @     0x7eeaf8c11d91 at::TensorIterator::for_each()
[2m[36m(pid=39612)[0m     @     0x7fb92eaca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=39612)[0m     @     0x7fb92c5f74f5 at::Tensor::copy_()
[2m[36m(pid=39612)[0m     @     0x7fb9326a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39612)[0m     @     0x558995beffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39612)[0m     @     0x558995b4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x7f40c53ba4f5 at::Tensor::copy_()
[2m[36m(pid=39650)[0m     @     0x7f40cb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39650)[0m     @     0x559b2d024fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39613)[0m     @     0x7f4ba7ee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39613)[0m     @     0x55ede64d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39613)[0m     @     0x55ede642bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39613)[0m     @     0x55ede64b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39613)[0m     @     0x55ede64b7a20 method_vectorcall
[2m[36m(pid=39613)[0m     @     0x55ede642bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39613)[0m     @     0x55ede64b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39613)[0m     @     0x55ede64b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39613)[0m     @     0x55ede642c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39613)[0m     @     0x55ede64b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39613)[0m     @     0x55ede64b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39613)[0m     @     0x55ede642c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39613)[0m     @     0x55ede64b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39613)[0m     @     0x55ede64b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39613)[0m     @     0x55ede642c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39613)[0m     @     0x55ede64b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=39613)[0m     @     0x55ede64b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39613)[0m     @     0x55ede642c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39694)[0m     @     0x5569a0cb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39694)[0m     @     0x5569a0cb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39694)[0m     @     0x5569a0c29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39694)[0m     @     0x5569a0cb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39694)[0m     @     0x5569a0cb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39694)[0m     @     0x5569a0c29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39694)[0m     @     0x5569a0cb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=39694)[0m     @     0x5569a0cb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39694)[0m     @     0x5569a0c29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x7ee4de0284f5 at::Tensor::copy_()
[2m[36m(pid=39643)[0m     @     0x7ee4e40d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=39643)[0m     @     0x556f33a99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=39643)[0m     @     0x556f339f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x556f33a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39643)[0m     @     0x556f33a80a20 method_vectorcall
[2m[36m(pid=39643)[0m     @     0x556f339f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x556f33a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39643)[0m     @     0x556f33a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39643)[0m     @     0x556f339f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x556f33a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39643)[0m     @     0x556f33a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39643)[0m     @     0x556f339f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x556f33a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39643)[0m     @     0x556f33a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39643)[0m     @     0x556f339f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39643)[0m     @     0x556f33a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=39643)[0m     @     0x556f33a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39643)[0m     @     0x556f339f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39644)[0m     @     0x7eeaf94f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=39644)[0m     @     0x7eeaf9517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=39644)[0m     @     0x7eeaf89b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=39612)[0m     @     0x558995bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39612)[0m     @     0x558995bd6a20 method_vectorcall
[2m[36m(pid=39612)[0m     @     0x558995b4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39612)[0m     @     0x558995bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39612)[0m     @     0x558995bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39612)[0m     @     0x558995b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39612)[0m     @     0x558995bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39612)[0m     @     0x558995bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39612)[0m     @     0x558995b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39612)[0m     @     0x558995bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39612)[0m     @     0x558995bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39612)[0m     @     0x558995b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39612)[0m     @     0x558995bd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=39612)[0m     @     0x558995bd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39612)[0m     @     0x558995b4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x559b2cf7fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x559b2d00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39650)[0m     @     0x559b2d00ba20 method_vectorcall
[2m[36m(pid=39650)[0m     @     0x559b2cf7fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x559b2d00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39650)[0m     @     0x559b2d00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39650)[0m     @     0x559b2cf80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x559b2d00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39650)[0m     @     0x559b2d00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39650)[0m     @     0x559b2cf80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x559b2d00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39650)[0m     @     0x559b2d00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39650)[0m     @     0x559b2cf80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39650)[0m     @     0x559b2d00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=39650)[0m     @     0x559b2d00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=39650)[0m     @     0x559b2cf80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=39644)[0m     @     0x7eeaf89b7388 at::native::copy_impl()
[2m[36m(pid=39644)[0m     @     0x7eeaf89b95a4 at::native::copy_()
2020-11-05 10:42:59,824	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:42:59,827	ERROR trial_runner.py:567 -- Trial PPO_jss_env_a7d07_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=39695, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 24.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a7d07_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_a7d07_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_a7d07_00000_0_2020-11-05_10-42-52/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:42:59,835	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:42:59,835	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
== Status ==
Memory usage on this node: 24.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a7d07_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_a7d07_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_a7d07_00000_0_2020-11-05_10-42-52/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:42:59,846	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_a7d07_00000])
