2020-11-05 10:17:54,697	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 15.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.25 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_2bf03_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=8219)[0m 2020-11-05 10:17:57,475	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=8188)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8188)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8188)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8188)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8188)[0m *** SIGSEGV (@0x0) received by PID 8188 (TID 0x7fc410d86700) from PID 0; stack trace: ***
[2m[36m(pid=8227)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8227)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8227)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8227)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8227)[0m *** SIGSEGV (@0x0) received by PID 8227 (TID 0x7f63c9188700) from PID 0; stack trace: ***
[2m[36m(pid=8197)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8197)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8197)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8197)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8197)[0m *** SIGSEGV (@0x0) received by PID 8197 (TID 0x7fba5d8ac700) from PID 0; stack trace: ***
[2m[36m(pid=8222)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8222)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8222)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8222)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8222)[0m *** SIGSEGV (@0x0) received by PID 8222 (TID 0x7fd0daf8a700) from PID 0; stack trace: ***
[2m[36m(pid=8181)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8181)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8181)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8181)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8181)[0m *** SIGSEGV (@0x0) received by PID 8181 (TID 0x7fe7aeb2c700) from PID 0; stack trace: ***
[2m[36m(pid=8170)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8170)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8170)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8170)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8170)[0m *** SIGSEGV (@0x0) received by PID 8170 (TID 0x7efd36dca700) from PID 0; stack trace: ***
[2m[36m(pid=8170)[0m     @     0x7efd369a3390 (unknown)
[2m[36m(pid=8170)[0m     @     0x7ece3670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8176)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8176)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8176)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8176)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8176)[0m *** SIGSEGV (@0x0) received by PID 8176 (TID 0x7f6a31289700) from PID 0; stack trace: ***
[2m[36m(pid=8177)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8177)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8177)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8177)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8177)[0m *** SIGSEGV (@0x0) received by PID 8177 (TID 0x7f8988150700) from PID 0; stack trace: ***
[2m[36m(pid=8177)[0m     @     0x7f8987d29390 (unknown)
[2m[36m(pid=8138)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8138)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8138)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8138)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8138)[0m *** SIGSEGV (@0x0) received by PID 8138 (TID 0x7f19cb37c700) from PID 0; stack trace: ***
[2m[36m(pid=8162)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8162)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8162)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8162)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8162)[0m *** SIGSEGV (@0x0) received by PID 8162 (TID 0x7fddc66ef700) from PID 0; stack trace: ***
[2m[36m(pid=8172)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8172)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8172)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8172)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8172)[0m *** SIGSEGV (@0x0) received by PID 8172 (TID 0x7f10f00ed700) from PID 0; stack trace: ***
[2m[36m(pid=8117)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8117)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8117)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8117)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8117)[0m *** SIGSEGV (@0x0) received by PID 8117 (TID 0x7f567f739700) from PID 0; stack trace: ***
[2m[36m(pid=8193)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8193)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8193)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8193)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8193)[0m *** SIGSEGV (@0x0) received by PID 8193 (TID 0x7f238b7b6700) from PID 0; stack trace: ***
[2m[36m(pid=8204)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8204)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8204)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8204)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8204)[0m *** SIGSEGV (@0x0) received by PID 8204 (TID 0x7fdc847ef700) from PID 0; stack trace: ***
[2m[36m(pid=8198)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8198)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8198)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8198)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8198)[0m *** SIGSEGV (@0x0) received by PID 8198 (TID 0x7fe565787700) from PID 0; stack trace: ***
[2m[36m(pid=8237)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8237)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8237)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8237)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8237)[0m *** SIGSEGV (@0x0) received by PID 8237 (TID 0x7fe11ff82700) from PID 0; stack trace: ***
[2m[36m(pid=8150)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8150)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8150)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8150)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8150)[0m *** SIGSEGV (@0x0) received by PID 8150 (TID 0x7feb8aad4700) from PID 0; stack trace: ***
[2m[36m(pid=8202)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8202)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8202)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8188)[0m     @     0x7fc41095f390 (unknown)
[2m[36m(pid=8188)[0m     @     0x7f951077cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8188)[0m     @     0x7f950fea77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8188)[0m     @     0x7f950feaa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8227)[0m     @     0x7f63c8d61390 (unknown)
[2m[36m(pid=8227)[0m     @     0x7f34c8c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8227)[0m     @     0x7f34c839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8227)[0m     @     0x7f34c83a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8197)[0m     @     0x7fba5d485390 (unknown)
[2m[36m(pid=8197)[0m     @     0x7f8b5d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8197)[0m     @     0x7f8b5caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8197)[0m     @     0x7f8b5cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8222)[0m     @     0x7fd0dab63390 (unknown)
[2m[36m(pid=8222)[0m     @     0x7fa1da9ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8222)[0m     @     0x7fa1da0f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8222)[0m     @     0x7fa1da0fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8181)[0m     @     0x7fe7ae705390 (unknown)
[2m[36m(pid=8181)[0m     @     0x7fb8ae4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8181)[0m     @     0x7fb8adc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8181)[0m     @     0x7fb8adc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8170)[0m     @     0x7ece35e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8170)[0m     @     0x7ece35e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8170)[0m     @     0x7ece35e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=8176)[0m     @     0x7f6a30e62390 (unknown)
[2m[36m(pid=8176)[0m     @     0x7f3b30dd2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8176)[0m     @     0x7f3b304fd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8176)[0m     @     0x7f3b305008f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8176)[0m     @     0x7f3b30500ad3 at::TensorIterator::for_each()
[2m[36m(pid=8176)[0m     @     0x7f3b30500d91 at::TensorIterator::for_each()
[2m[36m(pid=8176)[0m     @     0x7f3b30de3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8177)[0m     @     0x7f5a87cbbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8177)[0m     @     0x7f5a873e67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8177)[0m     @     0x7f5a873e98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8177)[0m     @     0x7f5a873e9ad3 at::TensorIterator::for_each()
[2m[36m(pid=8138)[0m     @     0x7f19caf55390 (unknown)
[2m[36m(pid=8138)[0m     @     0x7eeacaed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8138)[0m     @     0x7eeaca5fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8138)[0m     @     0x7eeaca6018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8138)[0m     @     0x7eeaca601ad3 at::TensorIterator::for_each()
[2m[36m(pid=8138)[0m     @     0x7eeaca601d91 at::TensorIterator::for_each()
[2m[36m(pid=8187)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8187)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8187)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8239)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8239)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8162)[0m     @     0x7fddc62c8390 (unknown)
[2m[36m(pid=8162)[0m     @     0x7faec6279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8162)[0m     @     0x7faec59a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8162)[0m     @     0x7faec59a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8162)[0m     @     0x7faec59a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=8162)[0m     @     0x7faec59a7d91 at::TensorIterator::for_each()
[2m[36m(pid=8172)[0m     @     0x7f10efcc6390 (unknown)
[2m[36m(pid=8172)[0m     @     0x7ee1efc56f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8172)[0m     @     0x7ee1ef3817db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8172)[0m     @     0x7ee1ef3848f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8172)[0m     @     0x7ee1ef384ad3 at::TensorIterator::for_each()
[2m[36m(pid=8172)[0m     @     0x7ee1ef384d91 at::TensorIterator::for_each()
[2m[36m(pid=8172)[0m     @     0x7ee1efc67b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8117)[0m     @     0x7f567f312390 (unknown)
[2m[36m(pid=8117)[0m     @     0x7f277f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8117)[0m     @     0x7f277e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8117)[0m     @     0x7f277e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8117)[0m     @     0x7f277e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=8117)[0m     @     0x7f277e957d91 at::TensorIterator::for_each()
[2m[36m(pid=8193)[0m     @     0x7f238b38f390 (unknown)
[2m[36m(pid=8193)[0m     @     0x7ef48b34df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8193)[0m     @     0x7ef48aa787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8193)[0m     @     0x7ef48aa7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8193)[0m     @     0x7ef48aa7bad3 at::TensorIterator::for_each()
[2m[36m(pid=8193)[0m     @     0x7ef48aa7bd91 at::TensorIterator::for_each()
[2m[36m(pid=8204)[0m     @     0x7fdc843c8390 (unknown)
[2m[36m(pid=8204)[0m     @     0x7fad84333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8204)[0m     @     0x7fad83a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8204)[0m     @     0x7fad83a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8204)[0m     @     0x7fad83a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=8204)[0m     @     0x7fad83a61d91 at::TensorIterator::for_each()
[2m[36m(pid=8168)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8168)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8168)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8168)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8168)[0m *** SIGSEGV (@0x0) received by PID 8168 (TID 0x7f9b7a400700) from PID 0; stack trace: ***
[2m[36m(pid=8185)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8185)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8185)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8185)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8185)[0m *** SIGSEGV (@0x0) received by PID 8185 (TID 0x7fdd4ff4c700) from PID 0; stack trace: ***
[2m[36m(pid=8121)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8121)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8121)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8198)[0m     @     0x7fe565360390 (unknown)
[2m[36m(pid=8198)[0m     @     0x7fb6652b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8198)[0m     @     0x7fb6649e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8198)[0m     @     0x7fb6649e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8198)[0m     @     0x7fb6649e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=8113)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8113)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8113)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8164)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8164)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8164)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8164)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8164)[0m *** SIGSEGV (@0x0) received by PID 8164 (TID 0x7f21dec11700) from PID 0; stack trace: ***
[2m[36m(pid=8174)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8174)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8174)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8109)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8109)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8109)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8119)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8119)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8119)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8237)[0m     @     0x7fe11fb5b390 (unknown)
[2m[36m(pid=8237)[0m     @     0x7fb21faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8237)[0m     @     0x7fb21f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8237)[0m     @     0x7fb21f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8237)[0m     @     0x7fb21f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=8150)[0m     @     0x7feb8a6ad390 (unknown)
[2m[36m(pid=8150)[0m     @     0x7fbc8a62bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8150)[0m     @     0x7fbc89d567db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8150)[0m     @     0x7fbc89d598f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8150)[0m     @     0x7fbc89d59ad3 at::TensorIterator::for_each()
[2m[36m(pid=8150)[0m     @     0x7fbc89d59d91 at::TensorIterator::for_each()
[2m[36m(pid=8150)[0m     @     0x7fbc8a63cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8150)[0m     @     0x7fbc8a65fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8103)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8111)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8111)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8111)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8102)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8102)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8102)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8130)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8130)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8130)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8149)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8149)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8149)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8115)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8115)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8115)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8115)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8115)[0m *** SIGSEGV (@0x0) received by PID 8115 (TID 0x7fe557d65700) from PID 0; stack trace: ***
[2m[36m(pid=8115)[0m     @     0x7fe55793e390 (unknown)
[2m[36m(pid=8182)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8182)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8182)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8182)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8182)[0m *** SIGSEGV (@0x0) received by PID 8182 (TID 0x7f67ef54f700) from PID 0; stack trace: ***
[2m[36m(pid=8100)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8100)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8100)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8155)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8155)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8155)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8107)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8107)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8107)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8104)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8104)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8104)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8110)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8110)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8110)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8110)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8110)[0m *** SIGSEGV (@0x0) received by PID 8110 (TID 0x7f1ed5d36700) from PID 0; stack trace: ***
[2m[36m(pid=8122)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8122)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8122)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8184)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8184)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8184)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8184)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8184)[0m *** SIGSEGV (@0x0) received by PID 8184 (TID 0x7f3cd65f4700) from PID 0; stack trace: ***
[2m[36m(pid=8202)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8202)[0m *** SIGSEGV (@0x0) received by PID 8202 (TID 0x7fc4f810c700) from PID 0; stack trace: ***
[2m[36m(pid=8202)[0m     @     0x7fc4f7ce5390 (unknown)
[2m[36m(pid=8202)[0m     @     0x7f95f7af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8202)[0m     @     0x7f95f72207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8202)[0m     @     0x7f95f72238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8202)[0m     @     0x7f95f7223ad3 at::TensorIterator::for_each()
[2m[36m(pid=8186)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8186)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8186)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8124)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8124)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8124)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8114)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8114)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8114)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8114)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8114)[0m *** SIGSEGV (@0x0) received by PID 8114 (TID 0x7f69846bc700) from PID 0; stack trace: ***
[2m[36m(pid=8114)[0m     @     0x7f6984295390 (unknown)
[2m[36m(pid=8114)[0m     @     0x7f3a83ffff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8114)[0m     @     0x7f3a8372a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8175)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8175)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8175)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8175)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8175)[0m *** SIGSEGV (@0x0) received by PID 8175 (TID 0x7fe1397dd700) from PID 0; stack trace: ***
[2m[36m(pid=8175)[0m     @     0x7fe1393b6390 (unknown)
[2m[36m(pid=8175)[0m     @     0x7fb23935ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8175)[0m     @     0x7fb238a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8175)[0m     @     0x7fb238a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8112)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8112)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8112)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8112)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8112)[0m *** SIGSEGV (@0x0) received by PID 8112 (TID 0x7ff960910700) from PID 0; stack trace: ***
[2m[36m(pid=8112)[0m     @     0x7ff9604e9390 (unknown)
[2m[36m(pid=8112)[0m     @     0x7fca60333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8112)[0m     @     0x7fca5fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8112)[0m     @     0x7fca5fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8112)[0m     @     0x7fca5fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=8213)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8213)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8213)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8213)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8213)[0m *** SIGSEGV (@0x0) received by PID 8213 (TID 0x7ff1e70cf700) from PID 0; stack trace: ***
[2m[36m(pid=8213)[0m     @     0x7ff1e6ca8390 (unknown)
[2m[36m(pid=8213)[0m     @     0x7fc2e6a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8213)[0m     @     0x7fc2e614c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8134)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8134)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8134)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8178)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8178)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8178)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8178)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8178)[0m *** SIGSEGV (@0x0) received by PID 8178 (TID 0x7fa028769700) from PID 0; stack trace: ***
[2m[36m(pid=8178)[0m     @     0x7fa028342390 (unknown)
[2m[36m(pid=8178)[0m     @     0x7f71282def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8178)[0m     @     0x7f7127a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8229)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8229)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8229)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8229)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8229)[0m *** SIGSEGV (@0x0) received by PID 8229 (TID 0x7f29cddcf700) from PID 0; stack trace: ***
[2m[36m(pid=8192)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8192)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8192)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8192)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8101)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8101)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8101)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8101)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8101)[0m *** SIGSEGV (@0x0) received by PID 8101 (TID 0x7f4101466700) from PID 0; stack trace: ***
[2m[36m(pid=8101)[0m     @     0x7f410103f390 (unknown)
[2m[36m(pid=8101)[0m     @     0x7f1200ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8101)[0m     @     0x7f12005cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8191)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8191)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8191)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8191)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8191)[0m *** SIGSEGV (@0x0) received by PID 8191 (TID 0x7f3e72c18700) from PID 0; stack trace: ***
[2m[36m(pid=8191)[0m     @     0x7f3e727f1390 (unknown)
[2m[36m(pid=8191)[0m     @     0x7f0f7278ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8191)[0m     @     0x7f0f71eb97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8154)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8154)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8154)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8154)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8154)[0m *** SIGSEGV (@0x0) received by PID 8154 (TID 0x7f8ea0a65700) from PID 0; stack trace: ***
[2m[36m(pid=8154)[0m     @     0x7f8ea063e390 (unknown)
[2m[36m(pid=8154)[0m     @     0x7f5fa0563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8154)[0m     @     0x7f5f9fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8154)[0m     @     0x7f5f9fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8183)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8183)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8183)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8183)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8183)[0m *** SIGSEGV (@0x0) received by PID 8183 (TID 0x7f15a10dc700) from PID 0; stack trace: ***
[2m[36m(pid=8183)[0m     @     0x7f15a0cb5390 (unknown)
[2m[36m(pid=8183)[0m     @     0x7ee6a0b42f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8183)[0m     @     0x7ee6a026d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8183)[0m     @     0x7ee6a02708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8188)[0m     @     0x7f950feaaad3 at::TensorIterator::for_each()
[2m[36m(pid=8188)[0m     @     0x7f950feaad91 at::TensorIterator::for_each()
[2m[36m(pid=8188)[0m     @     0x7f951078db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8188)[0m     @     0x7f95107b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8188)[0m     @     0x7f950fc52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8188)[0m     @     0x7f950fc50388 at::native::copy_impl()
[2m[36m(pid=8188)[0m     @     0x7f950fc525a4 at::native::copy_()
[2m[36m(pid=8188)[0m     @     0x7f951033d4f5 at::Tensor::copy_()
[2m[36m(pid=8188)[0m     @     0x7f95128108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8227)[0m     @     0x7f34c83a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=8227)[0m     @     0x7f34c83a2d91 at::TensorIterator::for_each()
[2m[36m(pid=8227)[0m     @     0x7f34c8c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8227)[0m     @     0x7f34c8ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8227)[0m     @     0x7f34c814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8227)[0m     @     0x7f34c8148388 at::native::copy_impl()
[2m[36m(pid=8227)[0m     @     0x7f34c814a5a4 at::native::copy_()
[2m[36m(pid=8227)[0m     @     0x7f34c88354f5 at::Tensor::copy_()
[2m[36m(pid=8227)[0m     @     0x7f34cad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8197)[0m     @     0x7f8b5cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=8197)[0m     @     0x7f8b5cafad91 at::TensorIterator::for_each()
[2m[36m(pid=8197)[0m     @     0x7f8b5d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8197)[0m     @     0x7f8b5d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8197)[0m     @     0x7f8b5c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8197)[0m     @     0x7f8b5c8a0388 at::native::copy_impl()
[2m[36m(pid=8197)[0m     @     0x7f8b5c8a25a4 at::native::copy_()
[2m[36m(pid=8197)[0m     @     0x7f8b5cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=8197)[0m     @     0x7f8b5f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8197)[0m     @     0x7f8b5cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=8209)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8209)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8209)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8209)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8209)[0m *** SIGSEGV (@0x0) received by PID 8209 (TID 0x7f6646d4d700) from PID 0; stack trace: ***
[2m[36m(pid=8209)[0m     @     0x7f6646926390 (unknown)
[2m[36m(pid=8209)[0m     @     0x7f374670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8209)[0m     @     0x7f3745e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8209)[0m     @     0x7f3745e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8209)[0m     @     0x7f3745e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=8209)[0m     @     0x7f3745e38d91 at::TensorIterator::for_each()
[2m[36m(pid=8209)[0m     @     0x7f374671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8108)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8108)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8108)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8108)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8108)[0m *** SIGSEGV (@0x0) received by PID 8108 (TID 0x7fe0f993d700) from PID 0; stack trace: ***
[2m[36m(pid=8108)[0m     @     0x7fe0f9516390 (unknown)
[2m[36m(pid=8108)[0m     @     0x7fb1f94b6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8108)[0m     @     0x7fb1f8be17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8108)[0m     @     0x7fb1f8be48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8108)[0m     @     0x7fb1f8be4ad3 at::TensorIterator::for_each()
[2m[36m(pid=8128)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8128)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8128)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8128)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8128)[0m *** SIGSEGV (@0x0) received by PID 8128 (TID 0x7f9dc38c2700) from PID 0; stack trace: ***
[2m[36m(pid=8128)[0m     @     0x7f9dc349b390 (unknown)
[2m[36m(pid=8128)[0m     @     0x7f6ec343af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8128)[0m     @     0x7f6ec2b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8201)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8201)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8201)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8201)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8201)[0m *** SIGSEGV (@0x0) received by PID 8201 (TID 0x7ff2dd46a700) from PID 0; stack trace: ***
[2m[36m(pid=8201)[0m     @     0x7ff2dd043390 (unknown)
[2m[36m(pid=8201)[0m     @     0x7fc3dcea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8201)[0m     @     0x7fc3dc5cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8201)[0m     @     0x7fc3dc5d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8201)[0m     @     0x7fc3dc5d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=8212)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8212)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8212)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8212)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8212)[0m *** SIGSEGV (@0x0) received by PID 8212 (TID 0x7fdc731ac700) from PID 0; stack trace: ***
[2m[36m(pid=8212)[0m     @     0x7fdc72d85390 (unknown)
[2m[36m(pid=8212)[0m     @     0x7fad72cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8212)[0m     @     0x7fad724277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8212)[0m     @     0x7fad7242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8133)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8133)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8133)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8133)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8133)[0m *** SIGSEGV (@0x0) received by PID 8133 (TID 0x7faa1eca0700) from PID 0; stack trace: ***
[2m[36m(pid=8133)[0m     @     0x7faa1e879390 (unknown)
[2m[36m(pid=8133)[0m     @     0x7f7b1e7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8133)[0m     @     0x7f7b1dee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8133)[0m     @     0x7f7b1dee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8133)[0m     @     0x7f7b1dee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=8123)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8123)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8123)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8123)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8123)[0m *** SIGSEGV (@0x0) received by PID 8123 (TID 0x7f28a2cc0700) from PID 0; stack trace: ***
[2m[36m(pid=8123)[0m     @     0x7f28a2899390 (unknown)
[2m[36m(pid=8123)[0m     @     0x7ef9a270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8123)[0m     @     0x7ef9a1e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8123)[0m     @     0x7ef9a1e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8123)[0m     @     0x7ef9a1e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=8216)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8216)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8216)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8216)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8216)[0m *** SIGSEGV (@0x0) received by PID 8216 (TID 0x7fd595a0d700) from PID 0; stack trace: ***
[2m[36m(pid=8216)[0m     @     0x7fd5955e6390 (unknown)
[2m[36m(pid=8216)[0m     @     0x7fa69557ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8216)[0m     @     0x7fa694caa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8216)[0m     @     0x7fa694cad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8216)[0m     @     0x7fa694cadad3 at::TensorIterator::for_each()
[2m[36m(pid=8216)[0m     @     0x7fa694cadd91 at::TensorIterator::for_each()
[2m[36m(pid=8222)[0m     @     0x7fa1da0faad3 at::TensorIterator::for_each()
[2m[36m(pid=8222)[0m     @     0x7fa1da0fad91 at::TensorIterator::for_each()
[2m[36m(pid=8222)[0m     @     0x7fa1da9ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8222)[0m     @     0x7fa1daa00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8222)[0m     @     0x7fa1d9ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8222)[0m     @     0x7fa1d9ea0388 at::native::copy_impl()
[2m[36m(pid=8222)[0m     @     0x7fa1d9ea25a4 at::native::copy_()
[2m[36m(pid=8222)[0m     @     0x7fa1da58d4f5 at::Tensor::copy_()
[2m[36m(pid=8222)[0m     @     0x7fa1dca608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8181)[0m     @     0x7fb8adc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=8181)[0m     @     0x7fb8adc27d91 at::TensorIterator::for_each()
[2m[36m(pid=8181)[0m     @     0x7fb8ae50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8181)[0m     @     0x7fb8ae52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8181)[0m     @     0x7fb8ad9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8181)[0m     @     0x7fb8ad9cd388 at::native::copy_impl()
[2m[36m(pid=8181)[0m     @     0x7fb8ad9cf5a4 at::native::copy_()
[2m[36m(pid=8181)[0m     @     0x7fb8ae0ba4f5 at::Tensor::copy_()
[2m[36m(pid=8181)[0m     @     0x7fb8b058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8181)[0m     @     0x7fb8ae0ba4f5 at::Tensor::copy_()
[2m[36m(pid=8170)[0m     @     0x7ece35e38d91 at::TensorIterator::for_each()
[2m[36m(pid=8170)[0m     @     0x7ece3671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8170)[0m     @     0x7ece3673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8170)[0m     @     0x7ece35be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8170)[0m     @     0x7ece35bde388 at::native::copy_impl()
[2m[36m(pid=8170)[0m     @     0x7ece35be05a4 at::native::copy_()
[2m[36m(pid=8170)[0m     @     0x7ece362cb4f5 at::Tensor::copy_()
[2m[36m(pid=8170)[0m     @     0x7ece3879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8176)[0m     @     0x7f3b30e06c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8176)[0m     @     0x7f3b302a8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8176)[0m     @     0x7f3b302a6388 at::native::copy_impl()
[2m[36m(pid=8176)[0m     @     0x7f3b302a85a4 at::native::copy_()
[2m[36m(pid=8176)[0m     @     0x7f3b309934f5 at::Tensor::copy_()
[2m[36m(pid=8176)[0m     @     0x7f3b32e668de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8176)[0m     @     0x7f3b309934f5 at::Tensor::copy_()
[2m[36m(pid=8176)[0m     @     0x7f3b36a3e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8176)[0m     @     0x555e1a2b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8176)[0m     @     0x555e1a20fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8176)[0m     @     0x555e1a29abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8176)[0m     @     0x555e1a29ba20 method_vectorcall
[2m[36m(pid=8176)[0m     @     0x555e1a20fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8176)[0m     @     0x555e1a29abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8176)[0m     @     0x555e1a29b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8176)[0m     @     0x555e1a210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8176)[0m     @     0x555e1a29abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8176)[0m     @     0x555e1a29b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8176)[0m     @     0x555e1a210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8176)[0m     @     0x555e1a29abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8176)[0m     @     0x555e1a29b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8176)[0m     @     0x555e1a210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8176)[0m     @     0x555e1a29abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8176)[0m     @     0x555e1a29b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8176)[0m     @     0x555e1a210689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8177)[0m     @     0x7f5a873e9d91 at::TensorIterator::for_each()
[2m[36m(pid=8177)[0m     @     0x7f5a87cccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8177)[0m     @     0x7f5a87cefc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8177)[0m     @     0x7f5a87191a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8177)[0m     @     0x7f5a8718f388 at::native::copy_impl()
[2m[36m(pid=8177)[0m     @     0x7f5a871915a4 at::native::copy_()
[2m[36m(pid=8177)[0m     @     0x7f5a8787c4f5 at::Tensor::copy_()
[2m[36m(pid=8138)[0m     @     0x7eeacaee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8138)[0m     @     0x7eeacaf07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8138)[0m     @     0x7eeaca3a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8138)[0m     @     0x7eeaca3a7388 at::native::copy_impl()
[2m[36m(pid=8138)[0m     @     0x7eeaca3a95a4 at::native::copy_()
[2m[36m(pid=8138)[0m     @     0x7eeacaa944f5 at::Tensor::copy_()
[2m[36m(pid=8138)[0m     @     0x7eeaccf678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8187)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8187)[0m *** SIGSEGV (@0x0) received by PID 8187 (TID 0x7fbf417e7700) from PID 0; stack trace: ***
[2m[36m(pid=8187)[0m     @     0x7fbf413c0390 (unknown)
[2m[36m(pid=8187)[0m     @     0x7f904135ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8187)[0m     @     0x7f9040a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8187)[0m     @     0x7f9040a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8187)[0m     @     0x7f9040a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=8239)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8239)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8239)[0m *** SIGSEGV (@0x0) received by PID 8239 (TID 0x7fca2899d700) from PID 0; stack trace: ***
[2m[36m(pid=8239)[0m     @     0x7fca28576390 (unknown)
[2m[36m(pid=8239)[0m     @     0x7f9b284f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8239)[0m     @     0x7f9b27c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8239)[0m     @     0x7f9b27c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8239)[0m     @     0x7f9b27c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=8162)[0m     @     0x7faec628ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8162)[0m     @     0x7faec62adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8162)[0m     @     0x7faec574fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8162)[0m     @     0x7faec574d388 at::native::copy_impl()
[2m[36m(pid=8162)[0m     @     0x7faec574f5a4 at::native::copy_()
[2m[36m(pid=8162)[0m     @     0x7faec5e3a4f5 at::Tensor::copy_()
[2m[36m(pid=8162)[0m     @     0x7faec830d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8172)[0m     @     0x7ee1efc8ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8172)[0m     @     0x7ee1ef12ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8172)[0m     @     0x7ee1ef12a388 at::native::copy_impl()
[2m[36m(pid=8172)[0m     @     0x7ee1ef12c5a4 at::native::copy_()
[2m[36m(pid=8172)[0m     @     0x7ee1ef8174f5 at::Tensor::copy_()
[2m[36m(pid=8172)[0m     @     0x7ee1f1cea8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8172)[0m     @     0x7ee1ef8174f5 at::Tensor::copy_()
[2m[36m(pid=8117)[0m     @     0x7f277f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8117)[0m     @     0x7f277f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8117)[0m     @     0x7f277e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8117)[0m     @     0x7f277e6fd388 at::native::copy_impl()
[2m[36m(pid=8117)[0m     @     0x7f277e6ff5a4 at::native::copy_()
[2m[36m(pid=8117)[0m     @     0x7f277edea4f5 at::Tensor::copy_()
[2m[36m(pid=8117)[0m     @     0x7f27812bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8117)[0m     @     0x7f277edea4f5 at::Tensor::copy_()
[2m[36m(pid=8193)[0m     @     0x7ef48b35eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8193)[0m     @     0x7ef48b381c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8193)[0m     @     0x7ef48a823a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8193)[0m     @     0x7ef48a821388 at::native::copy_impl()
[2m[36m(pid=8193)[0m     @     0x7ef48a8235a4 at::native::copy_()
[2m[36m(pid=8193)[0m     @     0x7ef48af0e4f5 at::Tensor::copy_()
[2m[36m(pid=8193)[0m     @     0x7ef48d3e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8204)[0m     @     0x7fad84344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8204)[0m     @     0x7fad84367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8204)[0m     @     0x7fad83809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8204)[0m     @     0x7fad83807388 at::native::copy_impl()
[2m[36m(pid=8204)[0m     @     0x7fad838095a4 at::native::copy_()
[2m[36m(pid=8204)[0m     @     0x7fad83ef44f5 at::Tensor::copy_()
[2m[36m(pid=8204)[0m     @     0x7fad863c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8204)[0m     @     0x7fad83ef44f5 at::Tensor::copy_()
[2m[36m(pid=8204)[0m     @     0x7fad89f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8204)[0m     @     0x5557928b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8204)[0m     @     0x555792814b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8204)[0m     @     0x55579289fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8204)[0m     @     0x5557928a0a20 method_vectorcall
[2m[36m(pid=8204)[0m     @     0x555792814bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8204)[0m     @     0x55579289fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8204)[0m     @     0x5557928a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8204)[0m     @     0x555792815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8204)[0m     @     0x55579289fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8204)[0m     @     0x5557928a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8204)[0m     @     0x555792815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8204)[0m     @     0x55579289fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8204)[0m     @     0x5557928a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8204)[0m     @     0x555792815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8204)[0m     @     0x55579289fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8204)[0m     @     0x5557928a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8204)[0m     @     0x555792815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8208)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8208)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8208)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8208)[0m *** SIGSEGV (@0x0) received by PID 8208 (TID 0x7fedb5f5e700) from PID 0; stack trace: ***
[2m[36m(pid=8208)[0m     @     0x7fedb5b37390 (unknown)
[2m[36m(pid=8208)[0m     @     0x7fbeb5a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8208)[0m     @     0x7fbeb51357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8208)[0m     @     0x7fbeb51388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8208)[0m     @     0x7fbeb5138ad3 at::TensorIterator::for_each()
[2m[36m(pid=8168)[0m     @     0x7f9b79fd9390 (unknown)
[2m[36m(pid=8168)[0m     @     0x7f6c79e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8168)[0m     @     0x7f6c7954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8168)[0m     @     0x7f6c795528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8168)[0m     @     0x7f6c79552ad3 at::TensorIterator::for_each()
[2m[36m(pid=8168)[0m     @     0x7f6c79552d91 at::TensorIterator::for_each()
[2m[36m(pid=8168)[0m     @     0x7f6c79e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8168)[0m     @     0x7f6c79e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8152)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8152)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8152)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8152)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8152)[0m *** SIGSEGV (@0x0) received by PID 8152 (TID 0x7f2e3d573700) from PID 0; stack trace: ***
[2m[36m(pid=8152)[0m     @     0x7f2e3d14c390 (unknown)
[2m[36m(pid=8152)[0m     @     0x7eff3d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8152)[0m     @     0x7eff3c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8152)[0m     @     0x7eff3c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8152)[0m     @     0x7eff3c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=8185)[0m     @     0x7fdd4fb25390 (unknown)
[2m[36m(pid=8185)[0m     @     0x7fae4fac8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8185)[0m     @     0x7fae4f1f37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8185)[0m     @     0x7fae4f1f68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8185)[0m     @     0x7fae4f1f6ad3 at::TensorIterator::for_each()
[2m[36m(pid=8185)[0m     @     0x7fae4f1f6d91 at::TensorIterator::for_each()
[2m[36m(pid=8185)[0m     @     0x7fae4fad9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8185)[0m     @     0x7fae4fafcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8121)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8121)[0m *** SIGSEGV (@0x0) received by PID 8121 (TID 0x7f91aedb1700) from PID 0; stack trace: ***
[2m[36m(pid=8121)[0m     @     0x7f91ae98a390 (unknown)
[2m[36m(pid=8121)[0m     @     0x7f62ae70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8121)[0m     @     0x7f62ade357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8121)[0m     @     0x7f62ade388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8121)[0m     @     0x7f62ade38ad3 at::TensorIterator::for_each()
[2m[36m(pid=8121)[0m     @     0x7f62ade38d91 at::TensorIterator::for_each()
[2m[36m(pid=8198)[0m     @     0x7fb6649e5d91 at::TensorIterator::for_each()
[2m[36m(pid=8198)[0m     @     0x7fb6652c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8198)[0m     @     0x7fb6652ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8198)[0m     @     0x7fb66478da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8198)[0m     @     0x7fb66478b388 at::native::copy_impl()
[2m[36m(pid=8198)[0m     @     0x7fb66478d5a4 at::native::copy_()
[2m[36m(pid=8198)[0m     @     0x7fb664e784f5 at::Tensor::copy_()
[2m[36m(pid=8198)[0m     @     0x7fb66734b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8113)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8113)[0m *** SIGSEGV (@0x0) received by PID 8113 (TID 0x7f083eedf700) from PID 0; stack trace: ***
[2m[36m(pid=8113)[0m     @     0x7f083eab8390 (unknown)
[2m[36m(pid=8113)[0m     @     0x7ed93e80bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8113)[0m     @     0x7ed93df367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8113)[0m     @     0x7ed93df398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8113)[0m     @     0x7ed93df39ad3 at::TensorIterator::for_each()
[2m[36m(pid=8164)[0m     @     0x7f21de7ea390 (unknown)
[2m[36m(pid=8164)[0m     @     0x7ef2de70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8164)[0m     @     0x7ef2dde357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8164)[0m     @     0x7ef2dde388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8164)[0m     @     0x7ef2dde38ad3 at::TensorIterator::for_each()
[2m[36m(pid=8164)[0m     @     0x7ef2dde38d91 at::TensorIterator::for_each()
[2m[36m(pid=8164)[0m     @     0x7ef2de71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8164)[0m     @     0x7ef2de73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8174)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8174)[0m *** SIGSEGV (@0x0) received by PID 8174 (TID 0x7f7a26b68700) from PID 0; stack trace: ***
[2m[36m(pid=8174)[0m     @     0x7f7a26741390 (unknown)
[2m[36m(pid=8174)[0m     @     0x7f4b2657cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8174)[0m     @     0x7f4b25ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8174)[0m     @     0x7f4b25caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8174)[0m     @     0x7f4b25caaad3 at::TensorIterator::for_each()
[2m[36m(pid=8174)[0m     @     0x7f4b25caad91 at::TensorIterator::for_each()
[2m[36m(pid=8174)[0m     @     0x7f4b2658db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8174)[0m     @     0x7f4b265b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8109)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8109)[0m *** SIGSEGV (@0x0) received by PID 8109 (TID 0x7f319b4a4700) from PID 0; stack trace: ***
[2m[36m(pid=8109)[0m     @     0x7f319b07d390 (unknown)
[2m[36m(pid=8109)[0m     @     0x7f029b037f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8109)[0m     @     0x7f029a7627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8109)[0m     @     0x7f029a7658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8109)[0m     @     0x7f029a765ad3 at::TensorIterator::for_each()
[2m[36m(pid=8109)[0m     @     0x7f029a765d91 at::TensorIterator::for_each()
[2m[36m(pid=8109)[0m     @     0x7f029b048b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8119)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8119)[0m *** SIGSEGV (@0x0) received by PID 8119 (TID 0x7f8d8af4d700) from PID 0; stack trace: ***
[2m[36m(pid=8119)[0m     @     0x7f8d8ab26390 (unknown)
[2m[36m(pid=8119)[0m     @     0x7f5e8a601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8119)[0m     @     0x7f5e89d2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8119)[0m     @     0x7f5e89d2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8119)[0m     @     0x7f5e89d2fad3 at::TensorIterator::for_each()
[2m[36m(pid=8119)[0m     @     0x7f5e89d2fd91 at::TensorIterator::for_each()
[2m[36m(pid=8119)[0m     @     0x7f5e8a612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8237)[0m     @     0x7fb21f223d91 at::TensorIterator::for_each()
[2m[36m(pid=8237)[0m     @     0x7fb21fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8237)[0m     @     0x7fb21fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8237)[0m     @     0x7fb21efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8237)[0m     @     0x7fb21efc9388 at::native::copy_impl()
[2m[36m(pid=8237)[0m     @     0x7fb21efcb5a4 at::native::copy_()
[2m[36m(pid=8237)[0m     @     0x7fb21f6b64f5 at::Tensor::copy_()
[2m[36m(pid=8237)[0m     @     0x7fb221b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8150)[0m     @     0x7fbc89b01a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8150)[0m     @     0x7fbc89aff388 at::native::copy_impl()
[2m[36m(pid=8150)[0m     @     0x7fbc89b015a4 at::native::copy_()
[2m[36m(pid=8150)[0m     @     0x7fbc8a1ec4f5 at::Tensor::copy_()
[2m[36m(pid=8150)[0m     @     0x7fbc8c6bf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8150)[0m     @     0x7fbc8a1ec4f5 at::Tensor::copy_()
[2m[36m(pid=8150)[0m     @     0x7fbc9029779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8150)[0m     @     0x562e10863fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8150)[0m     @     0x562e107beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8150)[0m     @     0x562e10849baf _PyEval_EvalCodeWithName
[2m[36m(pid=8150)[0m     @     0x562e1084aa20 method_vectorcall
[2m[36m(pid=8150)[0m     @     0x562e107bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8150)[0m     @     0x562e10849baf _PyEval_EvalCodeWithName
[2m[36m(pid=8103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8103)[0m *** SIGSEGV (@0x0) received by PID 8103 (TID 0x7fb78019a700) from PID 0; stack trace: ***
[2m[36m(pid=8103)[0m     @     0x7fb77fd73390 (unknown)
[2m[36m(pid=8103)[0m     @     0x7f887fd03f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8103)[0m     @     0x7f887f42e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8103)[0m     @     0x7f887f4318f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8103)[0m     @     0x7f887f431ad3 at::TensorIterator::for_each()
[2m[36m(pid=8103)[0m     @     0x7f887f431d91 at::TensorIterator::for_each()
[2m[36m(pid=8103)[0m     @     0x7f887fd14b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8111)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8111)[0m *** SIGSEGV (@0x0) received by PID 8111 (TID 0x7f100bf1b700) from PID 0; stack trace: ***
[2m[36m(pid=8111)[0m     @     0x7f100baf4390 (unknown)
[2m[36m(pid=8111)[0m     @     0x7ee10ba88f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8111)[0m     @     0x7ee10b1b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8111)[0m     @     0x7ee10b1b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8111)[0m     @     0x7ee10b1b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=8102)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8102)[0m *** SIGSEGV (@0x0) received by PID 8102 (TID 0x7f3355548700) from PID 0; stack trace: ***
[2m[36m(pid=8102)[0m     @     0x7f3355121390 (unknown)
[2m[36m(pid=8102)[0m     @     0x7f04542d0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8102)[0m     @     0x7f04539fb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8102)[0m     @     0x7f04539fe8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8102)[0m     @     0x7f04539fead3 at::TensorIterator::for_each()
[2m[36m(pid=8102)[0m     @     0x7f04539fed91 at::TensorIterator::for_each()
[2m[36m(pid=8102)[0m     @     0x7f04542e1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8102)[0m     @     0x7f0454304c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8130)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8130)[0m *** SIGSEGV (@0x0) received by PID 8130 (TID 0x7f47deb53700) from PID 0; stack trace: ***
[2m[36m(pid=8130)[0m     @     0x7f47de72c390 (unknown)
[2m[36m(pid=8130)[0m     @     0x7f18de6abf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8130)[0m     @     0x7f18dddd67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8130)[0m     @     0x7f18dddd98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8130)[0m     @     0x7f18dddd9ad3 at::TensorIterator::for_each()
[2m[36m(pid=8130)[0m     @     0x7f18dddd9d91 at::TensorIterator::for_each()
[2m[36m(pid=8130)[0m     @     0x7f18de6bcb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8130)[0m     @     0x7f18de6dfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8149)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8149)[0m *** SIGSEGV (@0x0) received by PID 8149 (TID 0x7f3b091d4700) from PID 0; stack trace: ***
[2m[36m(pid=8149)[0m     @     0x7f3b08dad390 (unknown)
[2m[36m(pid=8149)[0m     @     0x7f0c08d24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8149)[0m     @     0x7f0c0844f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8149)[0m     @     0x7f0c084528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8149)[0m     @     0x7f0c08452ad3 at::TensorIterator::for_each()
[2m[36m(pid=8149)[0m     @     0x7f0c08452d91 at::TensorIterator::for_each()
[2m[36m(pid=8149)[0m     @     0x7f0c08d35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8149)[0m     @     0x7f0c08d58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8126)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8126)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8126)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8126)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8126)[0m *** SIGSEGV (@0x0) received by PID 8126 (TID 0x7fa84c08e700) from PID 0; stack trace: ***
[2m[36m(pid=8126)[0m     @     0x7fa84bc67390 (unknown)
[2m[36m(pid=8126)[0m     @     0x7f794b9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8126)[0m     @     0x7f794b0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8126)[0m     @     0x7f794b0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8126)[0m     @     0x7f794b0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=8194)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8194)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8194)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8194)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8194)[0m *** SIGSEGV (@0x0) received by PID 8194 (TID 0x7fa622a69700) from PID 0; stack trace: ***
[2m[36m(pid=8194)[0m     @     0x7fa622642390 (unknown)
[2m[36m(pid=8194)[0m     @     0x7f77224f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8194)[0m     @     0x7f7721c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8194)[0m     @     0x7f7721c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8194)[0m     @     0x7f7721c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=8195)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8195)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8195)[0m *** Aborted at 1604571483 (unix time) try "date -d @1604571483" if you are using GNU date ***
[2m[36m(pid=8195)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8195)[0m *** SIGSEGV (@0x0) received by PID 8195 (TID 0x7f44aaa11700) from PID 0; stack trace: ***
[2m[36m(pid=8200)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8200)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8200)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8200)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8200)[0m *** SIGSEGV (@0x0) received by PID 8200 (TID 0x7f391e630700) from PID 0; stack trace: ***
[2m[36m(pid=8200)[0m     @     0x7f391e209390 (unknown)
[2m[36m(pid=8200)[0m     @     0x7f0a1e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8200)[0m     @     0x7f0a1d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8200)[0m     @     0x7f0a1d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8200)[0m     @     0x7f0a1d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=8105)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8105)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8105)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8105)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8105)[0m *** SIGSEGV (@0x0) received by PID 8105 (TID 0x7f46e8d97700) from PID 0; stack trace: ***
[2m[36m(pid=8105)[0m     @     0x7f46e8970390 (unknown)
[2m[36m(pid=8105)[0m     @     0x7f17e873ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8105)[0m     @     0x7f17e7e697db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8105)[0m     @     0x7f17e7e6c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8105)[0m     @     0x7f17e7e6cad3 at::TensorIterator::for_each()
[2m[36m(pid=8232)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8232)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8232)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8232)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8232)[0m *** SIGSEGV (@0x0) received by PID 8232 (TID 0x7f10f7acd700) from PID 0; stack trace: ***
[2m[36m(pid=8232)[0m     @     0x7f10f76a6390 (unknown)
[2m[36m(pid=8232)[0m     @     0x7ee1f7641f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8232)[0m     @     0x7ee1f6d6c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8232)[0m     @     0x7ee1f6d6f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8232)[0m     @     0x7ee1f6d6fad3 at::TensorIterator::for_each()
[2m[36m(pid=8106)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8106)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8106)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8106)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8106)[0m *** SIGSEGV (@0x0) received by PID 8106 (TID 0x7f09e00d8700) from PID 0; stack trace: ***
[2m[36m(pid=8106)[0m     @     0x7f09dfcb1390 (unknown)
[2m[36m(pid=8106)[0m     @     0x7edadd940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8106)[0m     @     0x7edadd06b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8106)[0m     @     0x7edadd06e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8106)[0m     @     0x7edadd06ead3 at::TensorIterator::for_each()
[2m[36m(pid=8115)[0m     @     0x7fb6578def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8115)[0m     @     0x7fb6570097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8115)[0m     @     0x7fb65700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8115)[0m     @     0x7fb65700cad3 at::TensorIterator::for_each()
[2m[36m(pid=8115)[0m     @     0x7fb65700cd91 at::TensorIterator::for_each()
[2m[36m(pid=8115)[0m     @     0x7fb6578efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8115)[0m     @     0x7fb657912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8115)[0m     @     0x7fb656db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8115)[0m     @     0x7fb656db2388 at::native::copy_impl()
[2m[36m(pid=8182)[0m     @     0x7f67ef128390 (unknown)
[2m[36m(pid=8182)[0m     @     0x7f38ef0b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8182)[0m     @     0x7f38ee7e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8182)[0m     @     0x7f38ee7e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8182)[0m     @     0x7f38ee7e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=8182)[0m     @     0x7f38ee7e5d91 at::TensorIterator::for_each()
[2m[36m(pid=8182)[0m     @     0x7f38ef0c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8182)[0m     @     0x7f38ef0ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8182)[0m     @     0x7f38ee58da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8100)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8100)[0m *** SIGSEGV (@0x0) received by PID 8100 (TID 0x7f5751569700) from PID 0; stack trace: ***
[2m[36m(pid=8100)[0m     @     0x7f5751142390 (unknown)
[2m[36m(pid=8100)[0m     @     0x7f28510ddf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8100)[0m     @     0x7f28508087db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8100)[0m     @     0x7f285080b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8100)[0m     @     0x7f285080bad3 at::TensorIterator::for_each()
[2m[36m(pid=8100)[0m     @     0x7f285080bd91 at::TensorIterator::for_each()
[2m[36m(pid=8100)[0m     @     0x7f28510eeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8100)[0m     @     0x7f2851111c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8155)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8155)[0m *** SIGSEGV (@0x0) received by PID 8155 (TID 0x7f03495f5700) from PID 0; stack trace: ***
[2m[36m(pid=8155)[0m     @     0x7f03491ce390 (unknown)
[2m[36m(pid=8155)[0m     @     0x7ed4490b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8155)[0m     @     0x7ed4487e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8155)[0m     @     0x7ed4487e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8155)[0m     @     0x7ed4487e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=8155)[0m     @     0x7ed4487e3d91 at::TensorIterator::for_each()
[2m[36m(pid=8155)[0m     @     0x7ed4490c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8155)[0m     @     0x7ed4490e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8107)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8107)[0m *** SIGSEGV (@0x0) received by PID 8107 (TID 0x7fac8c779700) from PID 0; stack trace: ***
[2m[36m(pid=8107)[0m     @     0x7fac8c352390 (unknown)
[2m[36m(pid=8107)[0m     @     0x7f7d8c2d7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8107)[0m     @     0x7f7d8ba027db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8107)[0m     @     0x7f7d8ba058f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8107)[0m     @     0x7f7d8ba05ad3 at::TensorIterator::for_each()
[2m[36m(pid=8107)[0m     @     0x7f7d8ba05d91 at::TensorIterator::for_each()
[2m[36m(pid=8107)[0m     @     0x7f7d8c2e8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8107)[0m     @     0x7f7d8c30bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8104)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8104)[0m *** SIGSEGV (@0x0) received by PID 8104 (TID 0x7f700ab1a700) from PID 0; stack trace: ***
[2m[36m(pid=8104)[0m     @     0x7f700a6f3390 (unknown)
[2m[36m(pid=8104)[0m     @     0x7f410a193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8104)[0m     @     0x7f41098be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8104)[0m     @     0x7f41098c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8104)[0m     @     0x7f41098c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=8104)[0m     @     0x7f41098c1d91 at::TensorIterator::for_each()
[2m[36m(pid=8104)[0m     @     0x7f410a1a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8104)[0m     @     0x7f410a1c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8104)[0m     @     0x7f4109669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8104)[0m     @     0x7f4109667388 at::native::copy_impl()
[2m[36m(pid=8110)[0m     @     0x7f1ed590f390 (unknown)
[2m[36m(pid=8110)[0m     @     0x7eefd57f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8110)[0m     @     0x7eefd4f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8110)[0m     @     0x7eefd4f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8110)[0m     @     0x7eefd4f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=8110)[0m     @     0x7eefd4f27d91 at::TensorIterator::for_each()
[2m[36m(pid=8110)[0m     @     0x7eefd580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8110)[0m     @     0x7eefd582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8110)[0m     @     0x7eefd4ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8110)[0m     @     0x7eefd4ccd388 at::native::copy_impl()
[2m[36m(pid=8122)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8122)[0m *** SIGSEGV (@0x0) received by PID 8122 (TID 0x7f5565daf700) from PID 0; stack trace: ***
[2m[36m(pid=8122)[0m     @     0x7f5565988390 (unknown)
[2m[36m(pid=8122)[0m     @     0x7f26657f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8122)[0m     @     0x7f2664f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8122)[0m     @     0x7f2664f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8122)[0m     @     0x7f2664f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=8122)[0m     @     0x7f2664f27d91 at::TensorIterator::for_each()
[2m[36m(pid=8122)[0m     @     0x7f266580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8122)[0m     @     0x7f266582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8122)[0m     @     0x7f2664ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8184)[0m     @     0x7f3cd61cd390 (unknown)
[2m[36m(pid=8184)[0m     @     0x7f0dd613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8184)[0m     @     0x7f0dd58657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8184)[0m     @     0x7f0dd58688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8184)[0m     @     0x7f0dd5868ad3 at::TensorIterator::for_each()
[2m[36m(pid=8184)[0m     @     0x7f0dd5868d91 at::TensorIterator::for_each()
[2m[36m(pid=8184)[0m     @     0x7f0dd614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8184)[0m     @     0x7f0dd616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8184)[0m     @     0x7f0dd5610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8184)[0m     @     0x7f0dd560e388 at::native::copy_impl()
[2m[36m(pid=8202)[0m     @     0x7f95f7223d91 at::TensorIterator::for_each()
[2m[36m(pid=8202)[0m     @     0x7f95f7b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8202)[0m     @     0x7f95f7b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8202)[0m     @     0x7f95f6fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8202)[0m     @     0x7f95f6fc9388 at::native::copy_impl()
[2m[36m(pid=8202)[0m     @     0x7f95f6fcb5a4 at::native::copy_()
[2m[36m(pid=8202)[0m     @     0x7f95f76b64f5 at::Tensor::copy_()
[2m[36m(pid=8202)[0m     @     0x7f95f9b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8202)[0m     @     0x7f95f76b64f5 at::Tensor::copy_()
[2m[36m(pid=8186)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8186)[0m *** SIGSEGV (@0x0) received by PID 8186 (TID 0x7f40d241e700) from PID 0; stack trace: ***
[2m[36m(pid=8186)[0m     @     0x7f40d1ff7390 (unknown)
[2m[36m(pid=8186)[0m     @     0x7f11d1e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8186)[0m     @     0x7f11d154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8186)[0m     @     0x7f11d15528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8186)[0m     @     0x7f11d1552ad3 at::TensorIterator::for_each()
[2m[36m(pid=8186)[0m     @     0x7f11d1552d91 at::TensorIterator::for_each()
[2m[36m(pid=8186)[0m     @     0x7f11d1e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8186)[0m     @     0x7f11d1e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8189)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8189)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8189)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8189)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8189)[0m *** SIGSEGV (@0x0) received by PID 8189 (TID 0x7f64165f0700) from PID 0; stack trace: ***
[2m[36m(pid=8189)[0m     @     0x7f64161c9390 (unknown)
[2m[36m(pid=8189)[0m     @     0x7f351613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8189)[0m     @     0x7f35158657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8189)[0m     @     0x7f35158688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8241)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8241)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8241)[0m *** Aborted at 1604571483 (unix time) try "date -d @1604571483" if you are using GNU date ***
[2m[36m(pid=8241)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8241)[0m *** SIGSEGV (@0x0) received by PID 8241 (TID 0x7ffaf1ad1700) from PID 0; stack trace: ***
[2m[36m(pid=8241)[0m     @     0x7ffaf16aa390 (unknown)
[2m[36m(pid=8241)[0m     @     0x7fcbf1634f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8241)[0m     @     0x7fcbf0d5f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8120)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8120)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8120)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8120)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8120)[0m *** SIGSEGV (@0x0) received by PID 8120 (TID 0x7f1237393700) from PID 0; stack trace: ***
[2m[36m(pid=8120)[0m     @     0x7f1236f6c390 (unknown)
[2m[36m(pid=8120)[0m     @     0x7ee336f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8120)[0m     @     0x7ee33663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8120)[0m     @     0x7ee3366418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8120)[0m     @     0x7ee336641ad3 at::TensorIterator::for_each()
[2m[36m(pid=8124)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8124)[0m *** SIGSEGV (@0x0) received by PID 8124 (TID 0x7fb58a8d4700) from PID 0; stack trace: ***
[2m[36m(pid=8124)[0m     @     0x7fb58a4ad390 (unknown)
[2m[36m(pid=8124)[0m     @     0x7f868a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8124)[0m     @     0x7f8689a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8124)[0m     @     0x7f8689a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8124)[0m     @     0x7f8689a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=8124)[0m     @     0x7f8689a79d91 at::TensorIterator::for_each()
[2m[36m(pid=8124)[0m     @     0x7f868a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8124)[0m     @     0x7f868a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8124)[0m     @     0x7f8689821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8124)[0m     @     0x7f868981f388 at::native::copy_impl()
[2m[36m(pid=8160)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8160)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8160)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8160)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8160)[0m *** SIGSEGV (@0x0) received by PID 8160 (TID 0x7f1395d69700) from PID 0; stack trace: ***
[2m[36m(pid=8160)[0m     @     0x7f1395942390 (unknown)
[2m[36m(pid=8160)[0m     @     0x7ee4957f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8160)[0m     @     0x7ee494f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8160)[0m     @     0x7ee494f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8157)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8157)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8157)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8157)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8157)[0m *** SIGSEGV (@0x0) received by PID 8157 (TID 0x7f9036c44700) from PID 0; stack trace: ***
[2m[36m(pid=8157)[0m     @     0x7f903681d390 (unknown)
[2m[36m(pid=8157)[0m     @     0x7f61367bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8157)[0m     @     0x7f6135ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8157)[0m     @     0x7f6135ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8157)[0m     @     0x7f6135ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=8157)[0m     @     0x7f6135ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=8157)[0m     @     0x7f61367ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8157)[0m     @     0x7f61367efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8136)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=8136)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=8136)[0m *** Aborted at 1604571482 (unix time) try "date -d @1604571482" if you are using GNU date ***
[2m[36m(pid=8136)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8136)[0m *** SIGSEGV (@0x0) received by PID 8136 (TID 0x7ff72f1d1700) from PID 0; stack trace: ***
[2m[36m(pid=8136)[0m     @     0x7ff72edaa390 (unknown)
[2m[36m(pid=8136)[0m     @     0x7fc82ecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8136)[0m     @     0x7fc82e4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8136)[0m     @     0x7fc82e42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8136)[0m     @     0x7fc82e42aad3 at::TensorIterator::for_each()
[2m[36m(pid=8136)[0m     @     0x7fc82e42ad91 at::TensorIterator::for_each()
[2m[36m(pid=8136)[0m     @     0x7fc82ed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8136)[0m     @     0x7fc82ed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8114)[0m     @     0x7f3a8372d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8114)[0m     @     0x7f3a8372dad3 at::TensorIterator::for_each()
[2m[36m(pid=8114)[0m     @     0x7f3a8372dd91 at::TensorIterator::for_each()
[2m[36m(pid=8114)[0m     @     0x7f3a84010b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8114)[0m     @     0x7f3a84033c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8114)[0m     @     0x7f3a834d5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8114)[0m     @     0x7f3a834d3388 at::native::copy_impl()
[2m[36m(pid=8175)[0m     @     0x7fb238a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=8175)[0m     @     0x7fb238a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=8175)[0m     @     0x7fb239370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8175)[0m     @     0x7fb239393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8175)[0m     @     0x7fb238835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8175)[0m     @     0x7fb238833388 at::native::copy_impl()
[2m[36m(pid=8112)[0m     @     0x7fca5fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=8112)[0m     @     0x7fca60344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8112)[0m     @     0x7fca60367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8112)[0m     @     0x7fca5f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8112)[0m     @     0x7fca5f807388 at::native::copy_impl()
[2m[36m(pid=8112)[0m     @     0x7fca5f8095a4 at::native::copy_()
[2m[36m(pid=8112)[0m     @     0x7fca5fef44f5 at::Tensor::copy_()
[2m[36m(pid=8213)[0m     @     0x7fc2e614f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8213)[0m     @     0x7fc2e614fad3 at::TensorIterator::for_each()
[2m[36m(pid=8213)[0m     @     0x7fc2e614fd91 at::TensorIterator::for_each()
[2m[36m(pid=8213)[0m     @     0x7fc2e6a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8213)[0m     @     0x7fc2e6a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8213)[0m     @     0x7fc2e5ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8213)[0m     @     0x7fc2e5ef5388 at::native::copy_impl()
[2m[36m(pid=8134)[0m PC: @                0x0 (unknown)
[2m[36m(pid=8134)[0m *** SIGSEGV (@0x0) received by PID 8134 (TID 0x7f30f3d09700) from PID 0; stack trace: ***
[2m[36m(pid=8134)[0m     @     0x7f30f38e2390 (unknown)
[2m[36m(pid=8134)[0m     @     0x7f01f389ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8134)[0m     @     0x7f01f2fc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8134)[0m     @     0x7f01f2fcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8134)[0m     @     0x7f01f2fccad3 at::TensorIterator::for_each()
[2m[36m(pid=8178)[0m     @     0x7f7127a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8178)[0m     @     0x7f7127a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=8178)[0m     @     0x7f7127a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=8178)[0m     @     0x7f71282efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8178)[0m     @     0x7f7128312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8178)[0m     @     0x7f71277b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8178)[0m     @     0x7f71277b2388 at::native::copy_impl()
[2m[36m(pid=8229)[0m     @     0x7f29cd9a8390 (unknown)
[2m[36m(pid=8229)[0m     @     0x7efacd7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8229)[0m     @     0x7efaccf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8229)[0m     @     0x7efaccf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8229)[0m     @     0x7efaccf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=8229)[0m     @     0x7efaccf27d91 at::TensorIterator::for_each()
[2m[36m(pid=8192)[0m *** SIGSEGV (@0x0) received by PID 8192 (TID 0x7f6011b33700) from PID 0; stack trace: ***
[2m[36m(pid=8192)[0m     @     0x7f601170c390 (unknown)
[2m[36m(pid=8192)[0m     @     0x7f31116b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8192)[0m     @     0x7f3110ddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8192)[0m     @     0x7f3110de28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8192)[0m     @     0x7f3110de2ad3 at::TensorIterator::for_each()
[2m[36m(pid=8101)[0m     @     0x7f12005d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8101)[0m     @     0x7f12005d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=8101)[0m     @     0x7f12005d2d91 at::TensorIterator::for_each()
[2m[36m(pid=8101)[0m     @     0x7f1200eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8191)[0m     @     0x7f0f71ebc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8154)[0m     @     0x7f5f9fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=8154)[0m     @     0x7f5f9fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=8154)[0m     @     0x7f5fa0574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8154)[0m     @     0x7f5fa0597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8154)[0m     @     0x7f5f9fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8183)[0m     @     0x7ee6a0270ad3 at::TensorIterator::for_each()
[2m[36m(pid=8183)[0m     @     0x7ee6a0270d91 at::TensorIterator::for_each()
[2m[36m(pid=8183)[0m     @     0x7ee6a0b53b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8183)[0m     @     0x7ee6a0b76c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8183)[0m     @     0x7ee6a0018a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8183)[0m     @     0x7ee6a0016388 at::native::copy_impl()
[2m[36m(pid=8188)[0m     @     0x7f951033d4f5 at::Tensor::copy_()
[2m[36m(pid=8188)[0m     @     0x7f95163e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8188)[0m     @     0x55d112fbafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8188)[0m     @     0x55d112f15b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8188)[0m     @     0x55d112fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8188)[0m     @     0x55d112fa1a20 method_vectorcall
[2m[36m(pid=8188)[0m     @     0x55d112f15bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8188)[0m     @     0x55d112fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8188)[0m     @     0x55d112fa1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8188)[0m     @     0x55d112f16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8188)[0m     @     0x55d112fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8188)[0m     @     0x55d112fa1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8188)[0m     @     0x55d112f16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8188)[0m     @     0x55d112fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8188)[0m     @     0x55d112fa1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8188)[0m     @     0x55d112f16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8188)[0m     @     0x55d112fa0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8188)[0m     @     0x55d112fa1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8188)[0m     @     0x55d112f16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8227)[0m     @     0x7f34c88354f5 at::Tensor::copy_()
[2m[36m(pid=8227)[0m     @     0x7f34ce8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8227)[0m     @     0x55fef3039fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8227)[0m     @     0x55fef2f94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8227)[0m     @     0x55fef301fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8227)[0m     @     0x55fef3020a20 method_vectorcall
[2m[36m(pid=8227)[0m     @     0x55fef2f94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8227)[0m     @     0x55fef301fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8227)[0m     @     0x55fef3020643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8227)[0m     @     0x55fef2f95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8227)[0m     @     0x55fef301fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8227)[0m     @     0x55fef3020643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8227)[0m     @     0x55fef2f95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8227)[0m     @     0x55fef301fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8227)[0m     @     0x55fef3020643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8227)[0m     @     0x55fef2f95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8227)[0m     @     0x55fef301fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8227)[0m     @     0x55fef3020643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8227)[0m     @     0x55fef2f95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8197)[0m     @     0x7f8b6303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8197)[0m     @     0x55dc99dcbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8197)[0m     @     0x55dc99d26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8197)[0m     @     0x55dc99db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8197)[0m     @     0x55dc99db2a20 method_vectorcall
[2m[36m(pid=8197)[0m     @     0x55dc99d26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8197)[0m     @     0x55dc99db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8197)[0m     @     0x55dc99db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8197)[0m     @     0x55dc99d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8197)[0m     @     0x55dc99db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8197)[0m     @     0x55dc99db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8197)[0m     @     0x55dc99d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8197)[0m     @     0x55dc99db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8197)[0m     @     0x55dc99db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8197)[0m     @     0x55dc99d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8197)[0m     @     0x55dc99db1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8197)[0m     @     0x55dc99db2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8197)[0m     @     0x55dc99d27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8209)[0m     @     0x7f374673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8209)[0m     @     0x7f3745be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8209)[0m     @     0x7f3745bde388 at::native::copy_impl()
[2m[36m(pid=8209)[0m     @     0x7f3745be05a4 at::native::copy_()
[2m[36m(pid=8209)[0m     @     0x7f37462cb4f5 at::Tensor::copy_()
[2m[36m(pid=8209)[0m     @     0x7f374879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8108)[0m     @     0x7fb1f8be4d91 at::TensorIterator::for_each()
[2m[36m(pid=8108)[0m     @     0x7fb1f94c7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8108)[0m     @     0x7fb1f94eac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8108)[0m     @     0x7fb1f898ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8108)[0m     @     0x7fb1f898a388 at::native::copy_impl()
[2m[36m(pid=8108)[0m     @     0x7fb1f898c5a4 at::native::copy_()
[2m[36m(pid=8108)[0m     @     0x7fb1f90774f5 at::Tensor::copy_()
[2m[36m(pid=8128)[0m     @     0x7f6ec2b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8128)[0m     @     0x7f6ec2b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=8201)[0m     @     0x7fc3dc5d2d91 at::TensorIterator::for_each()
[2m[36m(pid=8201)[0m     @     0x7fc3dceb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8201)[0m     @     0x7fc3dced8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8201)[0m     @     0x7fc3dc37aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8201)[0m     @     0x7fc3dc378388 at::native::copy_impl()
[2m[36m(pid=8201)[0m     @     0x7fc3dc37a5a4 at::native::copy_()
[2m[36m(pid=8201)[0m     @     0x7fc3dca654f5 at::Tensor::copy_()
[2m[36m(pid=8212)[0m     @     0x7fad7242aad3 at::TensorIterator::for_each()
[2m[36m(pid=8212)[0m     @     0x7fad7242ad91 at::TensorIterator::for_each()
[2m[36m(pid=8212)[0m     @     0x7fad72d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8212)[0m     @     0x7fad72d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8212)[0m     @     0x7fad721d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8212)[0m     @     0x7fad721d0388 at::native::copy_impl()
[2m[36m(pid=8133)[0m     @     0x7f7b1dee9d91 at::TensorIterator::for_each()
[2m[36m(pid=8133)[0m     @     0x7f7b1e7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8133)[0m     @     0x7f7b1e7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8133)[0m     @     0x7f7b1dc91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8133)[0m     @     0x7f7b1dc8f388 at::native::copy_impl()
[2m[36m(pid=8133)[0m     @     0x7f7b1dc915a4 at::native::copy_()
[2m[36m(pid=8123)[0m     @     0x7ef9a1e38d91 at::TensorIterator::for_each()
[2m[36m(pid=8123)[0m     @     0x7ef9a271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8123)[0m     @     0x7ef9a273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8123)[0m     @     0x7ef9a1be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8123)[0m     @     0x7ef9a1bde388 at::native::copy_impl()
[2m[36m(pid=8123)[0m     @     0x7ef9a1be05a4 at::native::copy_()
[2m[36m(pid=8123)[0m     @     0x7ef9a22cb4f5 at::Tensor::copy_()
[2m[36m(pid=8216)[0m     @     0x7fa695590b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8216)[0m     @     0x7fa6955b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8216)[0m     @     0x7fa694a55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8216)[0m     @     0x7fa694a53388 at::native::copy_impl()
[2m[36m(pid=8216)[0m     @     0x7fa694a555a4 at::native::copy_()
[2m[36m(pid=8216)[0m     @     0x7fa6951404f5 at::Tensor::copy_()
[2m[36m(pid=8222)[0m     @     0x7fa1da58d4f5 at::Tensor::copy_()
[2m[36m(pid=8222)[0m     @     0x7fa1e063879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8222)[0m     @     0x56355bb66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8222)[0m     @     0x56355bac1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8222)[0m     @     0x56355bb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8222)[0m     @     0x56355bb4da20 method_vectorcall
[2m[36m(pid=8222)[0m     @     0x56355bac1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8222)[0m     @     0x56355bb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8222)[0m     @     0x56355bb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8222)[0m     @     0x56355bac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8222)[0m     @     0x56355bb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8222)[0m     @     0x56355bb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8222)[0m     @     0x56355bac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8222)[0m     @     0x56355bb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8222)[0m     @     0x56355bb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8222)[0m     @     0x56355bac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8222)[0m     @     0x56355bb4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8222)[0m     @     0x56355bb4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8222)[0m     @     0x56355bac2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8181)[0m     @     0x7fb8b416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8181)[0m     @     0x55d048dd5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8181)[0m     @     0x55d048d30b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8181)[0m     @     0x55d048dbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8181)[0m     @     0x55d048dbca20 method_vectorcall
[2m[36m(pid=8181)[0m     @     0x55d048d30bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8181)[0m     @     0x55d048dbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8181)[0m     @     0x55d048dbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8181)[0m     @     0x55d048d31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8181)[0m     @     0x55d048dbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8181)[0m     @     0x55d048dbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8181)[0m     @     0x55d048d31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8181)[0m     @     0x55d048dbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8181)[0m     @     0x55d048dbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8181)[0m     @     0x55d048d31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8181)[0m     @     0x55d048dbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8181)[0m     @     0x55d048dbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8181)[0m     @     0x55d048d31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8170)[0m     @     0x7ece362cb4f5 at::Tensor::copy_()
[2m[36m(pid=8170)[0m     @     0x7ece3c37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8170)[0m     @     0x55bbdd0f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8170)[0m     @     0x55bbdd052b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8170)[0m     @     0x55bbdd0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8170)[0m     @     0x55bbdd0dea20 method_vectorcall
[2m[36m(pid=8170)[0m     @     0x55bbdd052bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8170)[0m     @     0x55bbdd0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8170)[0m     @     0x55bbdd0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8170)[0m     @     0x55bbdd053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8170)[0m     @     0x55bbdd0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8170)[0m     @     0x55bbdd0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8170)[0m     @     0x55bbdd053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8170)[0m     @     0x55bbdd0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8170)[0m     @     0x55bbdd0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8170)[0m     @     0x55bbdd053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8170)[0m     @     0x55bbdd0ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8170)[0m     @     0x55bbdd0de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8170)[0m     @     0x55bbdd053689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8177)[0m     @     0x7f5a89d4f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8177)[0m     @     0x7f5a8787c4f5 at::Tensor::copy_()
[2m[36m(pid=8177)[0m     @     0x7f5a8d92779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8177)[0m     @     0x5632ab3bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8177)[0m     @     0x5632ab31ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8177)[0m     @     0x5632ab3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8177)[0m     @     0x5632ab3a6a20 method_vectorcall
[2m[36m(pid=8177)[0m     @     0x5632ab31abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8177)[0m     @     0x5632ab3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8177)[0m     @     0x5632ab3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8177)[0m     @     0x5632ab31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8177)[0m     @     0x5632ab3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8177)[0m     @     0x5632ab3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8177)[0m     @     0x5632ab31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8177)[0m     @     0x5632ab3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8177)[0m     @     0x5632ab3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8177)[0m     @     0x5632ab31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8177)[0m     @     0x5632ab3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8177)[0m     @     0x5632ab3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8177)[0m     @     0x5632ab31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8138)[0m     @     0x7eeacaa944f5 at::Tensor::copy_()
[2m[36m(pid=8138)[0m     @     0x7eead0b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8138)[0m     @     0x56409e6e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8138)[0m     @     0x56409e642b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8138)[0m     @     0x56409e6cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8138)[0m     @     0x56409e6cea20 method_vectorcall
[2m[36m(pid=8138)[0m     @     0x56409e642bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8138)[0m     @     0x56409e6cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8138)[0m     @     0x56409e6ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8138)[0m     @     0x56409e643689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8138)[0m     @     0x56409e6cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8138)[0m     @     0x56409e6ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8138)[0m     @     0x56409e643689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8138)[0m     @     0x56409e6cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8138)[0m     @     0x56409e6ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8138)[0m     @     0x56409e643689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8138)[0m     @     0x56409e6cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8138)[0m     @     0x56409e6ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8138)[0m     @     0x56409e643689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x7f9040a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=8187)[0m     @     0x7f9041370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8187)[0m     @     0x7f9041393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8187)[0m     @     0x7f9040835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8187)[0m     @     0x7f9040833388 at::native::copy_impl()
[2m[36m(pid=8187)[0m     @     0x7f90408355a4 at::native::copy_()
[2m[36m(pid=8239)[0m     @     0x7f9b27c24d91 at::TensorIterator::for_each()
[2m[36m(pid=8239)[0m     @     0x7f9b28507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8239)[0m     @     0x7f9b2852ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8239)[0m     @     0x7f9b279cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8239)[0m     @     0x7f9b279ca388 at::native::copy_impl()
[2m[36m(pid=8239)[0m     @     0x7f9b279cc5a4 at::native::copy_()
[2m[36m(pid=8239)[0m     @     0x7f9b280b74f5 at::Tensor::copy_()
[2m[36m(pid=8162)[0m     @     0x7faec5e3a4f5 at::Tensor::copy_()
[2m[36m(pid=8162)[0m     @     0x7faecbee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8162)[0m     @     0x55b6056f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8162)[0m     @     0x55b60564cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8162)[0m     @     0x55b6056d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8162)[0m     @     0x55b6056d8a20 method_vectorcall
[2m[36m(pid=8162)[0m     @     0x55b60564cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8162)[0m     @     0x55b6056d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8162)[0m     @     0x55b6056d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8162)[0m     @     0x55b60564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8162)[0m     @     0x55b6056d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8162)[0m     @     0x55b6056d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8162)[0m     @     0x55b60564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8162)[0m     @     0x55b6056d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8162)[0m     @     0x55b6056d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8162)[0m     @     0x55b60564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8162)[0m     @     0x55b6056d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8162)[0m     @     0x55b6056d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8162)[0m     @     0x55b60564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8172)[0m     @     0x7ee1f58c279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8172)[0m     @     0x55ade2ff8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8172)[0m     @     0x55ade2f53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8172)[0m     @     0x55ade2fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8172)[0m     @     0x55ade2fdfa20 method_vectorcall
[2m[36m(pid=8172)[0m     @     0x55ade2f53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8172)[0m     @     0x55ade2fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8172)[0m     @     0x55ade2fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8172)[0m     @     0x55ade2f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8172)[0m     @     0x55ade2fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8172)[0m     @     0x55ade2fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8172)[0m     @     0x55ade2f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8172)[0m     @     0x55ade2fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8172)[0m     @     0x55ade2fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8172)[0m     @     0x55ade2f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8172)[0m     @     0x55ade2fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8172)[0m     @     0x55ade2fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8172)[0m     @     0x55ade2f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8117)[0m     @     0x7f2784e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8117)[0m     @     0x55f39790afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8117)[0m     @     0x55f397865b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8117)[0m     @     0x55f3978f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8117)[0m     @     0x55f3978f1a20 method_vectorcall
[2m[36m(pid=8117)[0m     @     0x55f397865bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8117)[0m     @     0x55f3978f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8117)[0m     @     0x55f3978f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8117)[0m     @     0x55f397866689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8117)[0m     @     0x55f3978f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8117)[0m     @     0x55f3978f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8117)[0m     @     0x55f397866689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8117)[0m     @     0x55f3978f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8117)[0m     @     0x55f3978f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8117)[0m     @     0x55f397866689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8117)[0m     @     0x55f3978f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8117)[0m     @     0x55f3978f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8117)[0m     @     0x55f397866689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8193)[0m     @     0x7ef48af0e4f5 at::Tensor::copy_()
[2m[36m(pid=8193)[0m     @     0x7ef490fb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8193)[0m     @     0x55ca4d00ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8193)[0m     @     0x55ca4cf6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8193)[0m     @     0x55ca4cff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8193)[0m     @     0x55ca4cff6a20 method_vectorcall
[2m[36m(pid=8193)[0m     @     0x55ca4cf6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8193)[0m     @     0x55ca4cff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8193)[0m     @     0x55ca4cff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8193)[0m     @     0x55ca4cf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8193)[0m     @     0x55ca4cff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8193)[0m     @     0x55ca4cff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8193)[0m     @     0x55ca4cf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8193)[0m     @     0x55ca4cff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8193)[0m     @     0x55ca4cff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8193)[0m     @     0x55ca4cf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8193)[0m     @     0x55ca4cff5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8193)[0m     @     0x55ca4cff6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8193)[0m     @     0x55ca4cf6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m     @     0x7fbeb5138d91 at::TensorIterator::for_each()
[2m[36m(pid=8208)[0m     @     0x7fbeb5a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8208)[0m     @     0x7fbeb5a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8208)[0m     @     0x7fbeb4ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8208)[0m     @     0x7fbeb4ede388 at::native::copy_impl()
[2m[36m(pid=8208)[0m     @     0x7fbeb4ee05a4 at::native::copy_()
[2m[36m(pid=8168)[0m     @     0x7f6c792faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8168)[0m     @     0x7f6c792f8388 at::native::copy_impl()
[2m[36m(pid=8168)[0m     @     0x7f6c792fa5a4 at::native::copy_()
[2m[36m(pid=8168)[0m     @     0x7f6c799e54f5 at::Tensor::copy_()
[2m[36m(pid=8168)[0m     @     0x7f6c7beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8152)[0m     @     0x7eff3c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=8152)[0m     @     0x7eff3d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8152)[0m     @     0x7eff3d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8152)[0m     @     0x7eff3c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8152)[0m     @     0x7eff3c589388 at::native::copy_impl()
[2m[36m(pid=8152)[0m     @     0x7eff3c58b5a4 at::native::copy_()
[2m[36m(pid=8185)[0m     @     0x7fae4ef9ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8185)[0m     @     0x7fae4ef9c388 at::native::copy_impl()
[2m[36m(pid=8185)[0m     @     0x7fae4ef9e5a4 at::native::copy_()
[2m[36m(pid=8185)[0m     @     0x7fae4f6894f5 at::Tensor::copy_()
[2m[36m(pid=8185)[0m     @     0x7fae51b5c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8121)[0m     @     0x7f62ae71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8121)[0m     @     0x7f62ae73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8121)[0m     @     0x7f62adbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8121)[0m     @     0x7f62adbde388 at::native::copy_impl()
[2m[36m(pid=8121)[0m     @     0x7f62adbe05a4 at::native::copy_()
[2m[36m(pid=8121)[0m     @     0x7f62ae2cb4f5 at::Tensor::copy_()
[2m[36m(pid=8198)[0m     @     0x7fb664e784f5 at::Tensor::copy_()
[2m[36m(pid=8198)[0m     @     0x7fb66af2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8198)[0m     @     0x5588796e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8198)[0m     @     0x558879643b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8198)[0m     @     0x5588796cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8198)[0m     @     0x5588796cfa20 method_vectorcall
[2m[36m(pid=8198)[0m     @     0x558879643bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8198)[0m     @     0x5588796cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8198)[0m     @     0x5588796cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8198)[0m     @     0x558879644689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8198)[0m     @     0x5588796cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8198)[0m     @     0x5588796cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8198)[0m     @     0x558879644689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8198)[0m     @     0x5588796cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8198)[0m     @     0x5588796cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8198)[0m     @     0x558879644689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8198)[0m     @     0x5588796cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8198)[0m     @     0x5588796cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8198)[0m     @     0x558879644689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8113)[0m     @     0x7ed93df39d91 at::TensorIterator::for_each()
[2m[36m(pid=8113)[0m     @     0x7ed93e81cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8113)[0m     @     0x7ed93e83fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8113)[0m     @     0x7ed93dce1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8113)[0m     @     0x7ed93dcdf388 at::native::copy_impl()
[2m[36m(pid=8113)[0m     @     0x7ed93dce15a4 at::native::copy_()
[2m[36m(pid=8113)[0m     @     0x7ed93e3cc4f5 at::Tensor::copy_()
[2m[36m(pid=8164)[0m     @     0x7ef2ddbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8164)[0m     @     0x7ef2ddbde388 at::native::copy_impl()
[2m[36m(pid=8164)[0m     @     0x7ef2ddbe05a4 at::native::copy_()
[2m[36m(pid=8164)[0m     @     0x7ef2de2cb4f5 at::Tensor::copy_()
[2m[36m(pid=8164)[0m     @     0x7ef2e079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8174)[0m     @     0x7f4b25a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8174)[0m     @     0x7f4b25a50388 at::native::copy_impl()
[2m[36m(pid=8174)[0m     @     0x7f4b25a525a4 at::native::copy_()
[2m[36m(pid=8174)[0m     @     0x7f4b2613d4f5 at::Tensor::copy_()
[2m[36m(pid=8174)[0m     @     0x7f4b286108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8109)[0m     @     0x7f029b06bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8109)[0m     @     0x7f029a50da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8109)[0m     @     0x7f029a50b388 at::native::copy_impl()
[2m[36m(pid=8109)[0m     @     0x7f029a50d5a4 at::native::copy_()
[2m[36m(pid=8109)[0m     @     0x7f029abf84f5 at::Tensor::copy_()
[2m[36m(pid=8119)[0m     @     0x7f5e8a635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8119)[0m     @     0x7f5e89ad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8119)[0m     @     0x7f5e89ad5388 at::native::copy_impl()
[2m[36m(pid=8119)[0m     @     0x7f5e89ad75a4 at::native::copy_()
[2m[36m(pid=8119)[0m     @     0x7f5e8a1c24f5 at::Tensor::copy_()
[2m[36m(pid=8119)[0m     @     0x7f5e8c6958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8237)[0m     @     0x7fb21f6b64f5 at::Tensor::copy_()
[2m[36m(pid=8237)[0m     @     0x7fb22576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8237)[0m     @     0x563722400fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8237)[0m     @     0x56372235bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8237)[0m     @     0x5637223e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8237)[0m     @     0x5637223e7a20 method_vectorcall
[2m[36m(pid=8237)[0m     @     0x56372235bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8237)[0m     @     0x5637223e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8237)[0m     @     0x5637223e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8237)[0m     @     0x56372235c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8237)[0m     @     0x5637223e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8237)[0m     @     0x5637223e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8237)[0m     @     0x56372235c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8237)[0m     @     0x5637223e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8237)[0m     @     0x5637223e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8237)[0m     @     0x56372235c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8237)[0m     @     0x5637223e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8237)[0m     @     0x5637223e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8237)[0m     @     0x56372235c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8150)[0m     @     0x562e1084a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8150)[0m     @     0x562e107bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8150)[0m     @     0x562e10849baf _PyEval_EvalCodeWithName
[2m[36m(pid=8150)[0m     @     0x562e1084a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8150)[0m     @     0x562e107bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8150)[0m     @     0x562e10849baf _PyEval_EvalCodeWithName
[2m[36m(pid=8150)[0m     @     0x562e1084a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8150)[0m     @     0x562e107bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8150)[0m     @     0x562e10849baf _PyEval_EvalCodeWithName
[2m[36m(pid=8150)[0m     @     0x562e1084a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8150)[0m     @     0x562e107bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8103)[0m     @     0x7f887fd37c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8103)[0m     @     0x7f887f1d9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8103)[0m     @     0x7f887f1d7388 at::native::copy_impl()
[2m[36m(pid=8103)[0m     @     0x7f887f1d95a4 at::native::copy_()
[2m[36m(pid=8103)[0m     @     0x7f887f8c44f5 at::Tensor::copy_()
[2m[36m(pid=8111)[0m     @     0x7ee10b1b6d91 at::TensorIterator::for_each()
[2m[36m(pid=8111)[0m     @     0x7ee10ba99b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8111)[0m     @     0x7ee10babcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8111)[0m     @     0x7ee10af5ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8111)[0m     @     0x7ee10af5c388 at::native::copy_impl()
[2m[36m(pid=8111)[0m     @     0x7ee10af5e5a4 at::native::copy_()
[2m[36m(pid=8111)[0m     @     0x7ee10b6494f5 at::Tensor::copy_()
[2m[36m(pid=8102)[0m     @     0x7f04537a6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8102)[0m     @     0x7f04537a4388 at::native::copy_impl()
[2m[36m(pid=8102)[0m     @     0x7f04537a65a4 at::native::copy_()
[2m[36m(pid=8102)[0m     @     0x7f0453e914f5 at::Tensor::copy_()
[2m[36m(pid=8102)[0m     @     0x7f04563648de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8130)[0m     @     0x7f18ddb81a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8130)[0m     @     0x7f18ddb7f388 at::native::copy_impl()
[2m[36m(pid=8130)[0m     @     0x7f18ddb815a4 at::native::copy_()
[2m[36m(pid=8130)[0m     @     0x7f18de26c4f5 at::Tensor::copy_()
[2m[36m(pid=8130)[0m     @     0x7f18e073f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8149)[0m     @     0x7f0c081faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8149)[0m     @     0x7f0c081f8388 at::native::copy_impl()
[2m[36m(pid=8149)[0m     @     0x7f0c081fa5a4 at::native::copy_()
[2m[36m(pid=8149)[0m     @     0x7f0c088e54f5 at::Tensor::copy_()
[2m[36m(pid=8149)[0m     @     0x7f0c0adb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8126)[0m     @     0x7f794b0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=8126)[0m     @     0x7f794b9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8126)[0m     @     0x7f794b9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8126)[0m     @     0x7f794ae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8126)[0m     @     0x7f794ae99388 at::native::copy_impl()
[2m[36m(pid=8126)[0m     @     0x7f794ae9b5a4 at::native::copy_()
[2m[36m(pid=8194)[0m     @     0x7f7721c27d91 at::TensorIterator::for_each()
[2m[36m(pid=8194)[0m     @     0x7f772250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8194)[0m     @     0x7f772252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8194)[0m     @     0x7f77219cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8194)[0m     @     0x7f77219cd388 at::native::copy_impl()
[2m[36m(pid=8195)[0m     @     0x7f44aa5ea390 (unknown)
[2m[36m(pid=8195)[0m     @     0x7f15aa577f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=8195)[0m     @     0x7f15a9ca27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=8195)[0m     @     0x7f15a9ca58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8200)[0m     @     0x7f0a1d868d91 at::TensorIterator::for_each()
[2m[36m(pid=8200)[0m     @     0x7f0a1e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8200)[0m     @     0x7f0a1e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8200)[0m     @     0x7f0a1d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8200)[0m     @     0x7f0a1d60e388 at::native::copy_impl()
[2m[36m(pid=8200)[0m     @     0x7f0a1d6105a4 at::native::copy_()
[2m[36m(pid=8105)[0m     @     0x7f17e7e6cd91 at::TensorIterator::for_each()
[2m[36m(pid=8105)[0m     @     0x7f17e874fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8105)[0m     @     0x7f17e8772c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8105)[0m     @     0x7f17e7c14a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8105)[0m     @     0x7f17e7c12388 at::native::copy_impl()
[2m[36m(pid=8105)[0m     @     0x7f17e7c145a4 at::native::copy_()
[2m[36m(pid=8232)[0m     @     0x7ee1f6d6fd91 at::TensorIterator::for_each()
[2m[36m(pid=8232)[0m     @     0x7ee1f7652b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8232)[0m     @     0x7ee1f7675c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8232)[0m     @     0x7ee1f6b17a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8232)[0m     @     0x7ee1f6b15388 at::native::copy_impl()
[2m[36m(pid=8106)[0m     @     0x7edadd06ed91 at::TensorIterator::for_each()
[2m[36m(pid=8106)[0m     @     0x7edadd951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8106)[0m     @     0x7edadd974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8106)[0m     @     0x7edadce16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8106)[0m     @     0x7edadce14388 at::native::copy_impl()
[2m[36m(pid=8106)[0m     @     0x7edadce165a4 at::native::copy_()
[2m[36m(pid=8115)[0m     @     0x7fb656db45a4 at::native::copy_()
[2m[36m(pid=8115)[0m     @     0x7fb65749f4f5 at::Tensor::copy_()
[2m[36m(pid=8115)[0m     @     0x7fb6599728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8115)[0m     @     0x7fb65749f4f5 at::Tensor::copy_()
[2m[36m(pid=8115)[0m     @     0x7fb65d54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8182)[0m     @     0x7f38ee58b388 at::native::copy_impl()
[2m[36m(pid=8182)[0m     @     0x7f38ee58d5a4 at::native::copy_()
[2m[36m(pid=8182)[0m     @     0x7f38eec784f5 at::Tensor::copy_()
[2m[36m(pid=8182)[0m     @     0x7f38f114b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8182)[0m     @     0x7f38eec784f5 at::Tensor::copy_()
[2m[36m(pid=8100)[0m     @     0x7f28505b3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8100)[0m     @     0x7f28505b1388 at::native::copy_impl()
[2m[36m(pid=8100)[0m     @     0x7f28505b35a4 at::native::copy_()
[2m[36m(pid=8100)[0m     @     0x7f2850c9e4f5 at::Tensor::copy_()
[2m[36m(pid=8155)[0m     @     0x7ed44858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8155)[0m     @     0x7ed448589388 at::native::copy_impl()
[2m[36m(pid=8155)[0m     @     0x7ed44858b5a4 at::native::copy_()
[2m[36m(pid=8155)[0m     @     0x7ed448c764f5 at::Tensor::copy_()
[2m[36m(pid=8155)[0m     @     0x7ed44b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8107)[0m     @     0x7f7d8b7ada93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8107)[0m     @     0x7f7d8b7ab388 at::native::copy_impl()
[2m[36m(pid=8107)[0m     @     0x7f7d8b7ad5a4 at::native::copy_()
[2m[36m(pid=8107)[0m     @     0x7f7d8be984f5 at::Tensor::copy_()
[2m[36m(pid=8104)[0m     @     0x7f41096695a4 at::native::copy_()
[2m[36m(pid=8104)[0m     @     0x7f4109d544f5 at::Tensor::copy_()
[2m[36m(pid=8104)[0m     @     0x7f410c2278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8110)[0m     @     0x7eefd4ccf5a4 at::native::copy_()
[2m[36m(pid=8110)[0m     @     0x7eefd53ba4f5 at::Tensor::copy_()
[2m[36m(pid=8110)[0m     @     0x7eefd788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8122)[0m     @     0x7f2664ccd388 at::native::copy_impl()
[2m[36m(pid=8122)[0m     @     0x7f2664ccf5a4 at::native::copy_()
[2m[36m(pid=8122)[0m     @     0x7f26653ba4f5 at::Tensor::copy_()
[2m[36m(pid=8184)[0m     @     0x7f0dd56105a4 at::native::copy_()
[2m[36m(pid=8184)[0m     @     0x7f0dd5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=8184)[0m     @     0x7f0dd81ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8202)[0m     @     0x7f95fd76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8202)[0m     @     0x5620ad0abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8202)[0m     @     0x5620ad006b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8202)[0m     @     0x5620ad091baf _PyEval_EvalCodeWithName
[2m[36m(pid=8202)[0m     @     0x5620ad092a20 method_vectorcall
[2m[36m(pid=8202)[0m     @     0x5620ad006bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8202)[0m     @     0x5620ad091baf _PyEval_EvalCodeWithName
[2m[36m(pid=8202)[0m     @     0x5620ad092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8202)[0m     @     0x5620ad007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8202)[0m     @     0x5620ad091baf _PyEval_EvalCodeWithName
[2m[36m(pid=8202)[0m     @     0x5620ad092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8202)[0m     @     0x5620ad007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8202)[0m     @     0x5620ad091baf _PyEval_EvalCodeWithName
[2m[36m(pid=8202)[0m     @     0x5620ad092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8202)[0m     @     0x5620ad007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8202)[0m     @     0x5620ad091baf _PyEval_EvalCodeWithName
[2m[36m(pid=8202)[0m     @     0x5620ad092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8202)[0m     @     0x5620ad007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8189)[0m     @     0x7f3515868ad3 at::TensorIterator::for_each()
[2m[36m(pid=8189)[0m     @     0x7f3515868d91 at::TensorIterator::for_each()
[2m[36m(pid=8189)[0m     @     0x7f351614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8241)[0m     @     0x7fcbf0d628f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=8241)[0m     @     0x7fcbf0d62ad3 at::TensorIterator::for_each()
[2m[36m(pid=8120)[0m     @     0x7ee336641d91 at::TensorIterator::for_each()
[2m[36m(pid=8120)[0m     @     0x7ee336f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8120)[0m     @     0x7ee336f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8120)[0m     @     0x7ee3363e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8120)[0m     @     0x7ee3363e7388 at::native::copy_impl()
[2m[36m(pid=8124)[0m     @     0x7f86898215a4 at::native::copy_()
[2m[36m(pid=8124)[0m     @     0x7f8689f0c4f5 at::Tensor::copy_()
[2m[36m(pid=8124)[0m     @     0x7f868c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8160)[0m     @     0x7ee494f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=8157)[0m     @     0x7f6135c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8157)[0m     @     0x7f6135c8f388 at::native::copy_impl()
[2m[36m(pid=8157)[0m     @     0x7f6135c915a4 at::native::copy_()
[2m[36m(pid=8136)[0m     @     0x7fc82e1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8136)[0m     @     0x7fc82e1d0388 at::native::copy_impl()
[2m[36m(pid=8136)[0m     @     0x7fc82e1d25a4 at::native::copy_()
[2m[36m(pid=8136)[0m     @     0x7fc82e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=8114)[0m     @     0x7f3a834d55a4 at::native::copy_()
[2m[36m(pid=8114)[0m     @     0x7f3a83bc04f5 at::Tensor::copy_()
[2m[36m(pid=8114)[0m     @     0x7f3a860938de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8175)[0m     @     0x7fb2388355a4 at::native::copy_()
[2m[36m(pid=8175)[0m     @     0x7fb238f204f5 at::Tensor::copy_()
[2m[36m(pid=8175)[0m     @     0x7fb23b3f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8175)[0m     @     0x7fb238f204f5 at::Tensor::copy_()
[2m[36m(pid=8175)[0m     @     0x7fb23efcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8175)[0m     @     0x5582d6e4bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8175)[0m     @     0x5582d6da6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8175)[0m     @     0x5582d6e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=8175)[0m     @     0x5582d6e32a20 method_vectorcall
[2m[36m(pid=8175)[0m     @     0x5582d6da6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8175)[0m     @     0x5582d6e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=8175)[0m     @     0x5582d6e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8175)[0m     @     0x5582d6da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8175)[0m     @     0x5582d6e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=8175)[0m     @     0x5582d6e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8175)[0m     @     0x5582d6da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8175)[0m     @     0x5582d6e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=8175)[0m     @     0x5582d6e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8112)[0m     @     0x7fca623c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8112)[0m     @     0x7fca5fef44f5 at::Tensor::copy_()
[2m[36m(pid=8112)[0m     @     0x7fca65f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8112)[0m     @     0x55f56fa17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8112)[0m     @     0x55f56f972b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8112)[0m     @     0x55f56f9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8112)[0m     @     0x55f56f9fea20 method_vectorcall
[2m[36m(pid=8112)[0m     @     0x55f56f972bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8112)[0m     @     0x55f56f9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8112)[0m     @     0x55f56f9fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8112)[0m     @     0x55f56f973689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8112)[0m     @     0x55f56f9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8112)[0m     @     0x55f56f9fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8112)[0m     @     0x55f56f973689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8112)[0m     @     0x55f56f9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8112)[0m     @     0x55f56f9fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8112)[0m     @     0x55f56f973689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8112)[0m     @     0x55f56f9fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8112)[0m     @     0x55f56f9fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8112)[0m     @     0x55f56f973689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8213)[0m     @     0x7fc2e5ef75a4 at::native::copy_()
[2m[36m(pid=8213)[0m     @     0x7fc2e65e24f5 at::Tensor::copy_()
[2m[36m(pid=8213)[0m     @     0x7fc2e8ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8213)[0m     @     0x7fc2e65e24f5 at::Tensor::copy_()
[2m[36m(pid=8134)[0m     @     0x7f01f2fccd91 at::TensorIterator::for_each()
[2m[36m(pid=8134)[0m     @     0x7f01f38afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8134)[0m     @     0x7f01f38d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8134)[0m     @     0x7f01f2d74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8134)[0m     @     0x7f01f2d72388 at::native::copy_impl()
[2m[36m(pid=8178)[0m     @     0x7f71277b45a4 at::native::copy_()
[2m[36m(pid=8178)[0m     @     0x7f7127e9f4f5 at::Tensor::copy_()
[2m[36m(pid=8178)[0m     @     0x7f712a3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8229)[0m     @     0x7efacd80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8229)[0m     @     0x7efacd82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8229)[0m     @     0x7efaccccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8229)[0m     @     0x7efaccccd388 at::native::copy_impl()
[2m[36m(pid=8229)[0m     @     0x7efaccccf5a4 at::native::copy_()
[2m[36m(pid=8192)[0m     @     0x7f3110de2d91 at::TensorIterator::for_each()
[2m[36m(pid=8192)[0m     @     0x7f31116c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8192)[0m     @     0x7f31116e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8192)[0m     @     0x7f3110b8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8192)[0m     @     0x7f3110b88388 at::native::copy_impl()
[2m[36m(pid=8101)[0m     @     0x7f1200ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8101)[0m     @     0x7f120037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8101)[0m     @     0x7f1200378388 at::native::copy_impl()
[2m[36m(pid=8101)[0m     @     0x7f120037a5a4 at::native::copy_()
2020-11-05 10:18:03,099	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=8191)[0m     @     0x7f0f71ebcad3 at::TensorIterator::for_each()
[2m[36m(pid=8191)[0m     @     0x7f0f71ebcd91 at::TensorIterator::for_each()
[2m[36m(pid=8191)[0m     @     0x7f0f7279fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8191)[0m     @     0x7f0f727c2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8191)[0m     @     0x7f0f71c64a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8154)[0m     @     0x7f5f9fa37388 at::native::copy_impl()
[2m[36m(pid=8154)[0m     @     0x7f5f9fa395a4 at::native::copy_()
[2m[36m(pid=8154)[0m     @     0x7f5fa01244f5 at::Tensor::copy_()
[2m[36m(pid=8154)[0m     @     0x7f5fa25f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8183)[0m     @     0x7ee6a00185a4 at::native::copy_()
[2m[36m(pid=8183)[0m     @     0x7ee6a07034f5 at::Tensor::copy_()
[2m[36m(pid=8183)[0m     @     0x7ee6a2bd68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8183)[0m     @     0x7ee6a07034f5 at::Tensor::copy_()
[2m[36m(pid=8209)[0m     @     0x7f37462cb4f5 at::Tensor::copy_()
[2m[36m(pid=8209)[0m     @     0x7f374c37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8209)[0m     @     0x55af02f1dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8209)[0m     @     0x55af02e78b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8209)[0m     @     0x55af02f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=8209)[0m     @     0x55af02f04a20 method_vectorcall
[2m[36m(pid=8209)[0m     @     0x55af02e78bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8209)[0m     @     0x55af02f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=8209)[0m     @     0x55af02f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8209)[0m     @     0x55af02e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8209)[0m     @     0x55af02f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=8209)[0m     @     0x55af02f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8209)[0m     @     0x55af02e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8209)[0m     @     0x55af02f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=8209)[0m     @     0x55af02f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8209)[0m     @     0x55af02e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8209)[0m     @     0x55af02f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=8209)[0m     @     0x55af02f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8209)[0m     @     0x55af02e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8108)[0m     @     0x7fb1fb54a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8108)[0m     @     0x7fb1f90774f5 at::Tensor::copy_()
[2m[36m(pid=8108)[0m     @     0x7fb1ff12279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8108)[0m     @     0x56020760bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8108)[0m     @     0x560207566b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8108)[0m     @     0x5602075f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8108)[0m     @     0x5602075f2a20 method_vectorcall
[2m[36m(pid=8108)[0m     @     0x560207566bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8108)[0m     @     0x5602075f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8108)[0m     @     0x5602075f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8108)[0m     @     0x560207567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8108)[0m     @     0x5602075f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8108)[0m     @     0x5602075f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8108)[0m     @     0x560207567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8108)[0m     @     0x5602075f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8108)[0m     @     0x5602075f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8108)[0m     @     0x560207567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8108)[0m     @     0x5602075f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8108)[0m     @     0x5602075f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8108)[0m     @     0x560207567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x7f6ec2b68d91 at::TensorIterator::for_each()
[2m[36m(pid=8201)[0m     @     0x7fc3def388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8201)[0m     @     0x7fc3dca654f5 at::Tensor::copy_()
[2m[36m(pid=8201)[0m     @     0x7fc3e2b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8201)[0m     @     0x55c0bb2effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8201)[0m     @     0x55c0bb24ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8201)[0m     @     0x55c0bb2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8201)[0m     @     0x55c0bb2d6a20 method_vectorcall
[2m[36m(pid=8201)[0m     @     0x55c0bb24abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8201)[0m     @     0x55c0bb2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8201)[0m     @     0x55c0bb2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8201)[0m     @     0x55c0bb24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8201)[0m     @     0x55c0bb2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8201)[0m     @     0x55c0bb2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8201)[0m     @     0x55c0bb24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8201)[0m     @     0x55c0bb2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8201)[0m     @     0x55c0bb2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8201)[0m     @     0x55c0bb24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8201)[0m     @     0x55c0bb2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8201)[0m     @     0x55c0bb2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8201)[0m     @     0x55c0bb24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8212)[0m     @     0x7fad721d25a4 at::native::copy_()
[2m[36m(pid=8212)[0m     @     0x7fad728bd4f5 at::Tensor::copy_()
[2m[36m(pid=8212)[0m     @     0x7fad74d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8133)[0m     @     0x7f7b1e37c4f5 at::Tensor::copy_()
[2m[36m(pid=8133)[0m     @     0x7f7b2084f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8133)[0m     @     0x7f7b1e37c4f5 at::Tensor::copy_()
[2m[36m(pid=8123)[0m     @     0x7ef9a479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8123)[0m     @     0x7ef9a22cb4f5 at::Tensor::copy_()
[2m[36m(pid=8123)[0m     @     0x7ef9a837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8123)[0m     @     0x5616512e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8123)[0m     @     0x561651244b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8123)[0m     @     0x5616512cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8123)[0m     @     0x5616512d0a20 method_vectorcall
[2m[36m(pid=8123)[0m     @     0x561651244bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8123)[0m     @     0x5616512cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8123)[0m     @     0x5616512d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8123)[0m     @     0x561651245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8123)[0m     @     0x5616512cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8123)[0m     @     0x5616512d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8123)[0m     @     0x561651245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8123)[0m     @     0x5616512cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8123)[0m     @     0x5616512d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8123)[0m     @     0x561651245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8123)[0m     @     0x5616512cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8123)[0m     @     0x5616512d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8123)[0m     @     0x561651245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8216)[0m     @     0x7fa6976138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8216)[0m     @     0x7fa6951404f5 at::Tensor::copy_()
[2m[36m(pid=8216)[0m     @     0x7fa69b1eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8216)[0m     @     0x5623c0466fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8216)[0m     @     0x5623c03c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8216)[0m     @     0x5623c044cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8216)[0m     @     0x5623c044da20 method_vectorcall
[2m[36m(pid=8216)[0m     @     0x5623c03c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8216)[0m     @     0x5623c044cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8216)[0m     @     0x5623c044d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8216)[0m     @     0x5623c03c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8216)[0m     @     0x5623c044cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8216)[0m     @     0x5623c044d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8216)[0m     @     0x5623c03c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8216)[0m     @     0x5623c044cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8216)[0m     @     0x5623c044d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8216)[0m     @     0x5623c03c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8216)[0m     @     0x5623c044cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8216)[0m     @     0x5623c044d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8216)[0m     @     0x5623c03c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x7f9040f204f5 at::Tensor::copy_()
[2m[36m(pid=8187)[0m     @     0x7f90433f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8187)[0m     @     0x7f9040f204f5 at::Tensor::copy_()
[2m[36m(pid=8239)[0m     @     0x7f9b2a58a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8239)[0m     @     0x7f9b280b74f5 at::Tensor::copy_()
[2m[36m(pid=8239)[0m     @     0x7f9b2e16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8239)[0m     @     0x564de6c51fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8239)[0m     @     0x564de6bacb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8239)[0m     @     0x564de6c37baf _PyEval_EvalCodeWithName
[2m[36m(pid=8239)[0m     @     0x564de6c38a20 method_vectorcall
[2m[36m(pid=8239)[0m     @     0x564de6bacbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8239)[0m     @     0x564de6c37baf _PyEval_EvalCodeWithName
[2m[36m(pid=8239)[0m     @     0x564de6c38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8239)[0m     @     0x564de6bad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8239)[0m     @     0x564de6c37baf _PyEval_EvalCodeWithName
[2m[36m(pid=8239)[0m     @     0x564de6c38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8239)[0m     @     0x564de6bad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8239)[0m     @     0x564de6c37baf _PyEval_EvalCodeWithName
[2m[36m(pid=8239)[0m     @     0x564de6c38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8239)[0m     @     0x564de6bad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8239)[0m     @     0x564de6c37baf _PyEval_EvalCodeWithName
[2m[36m(pid=8239)[0m     @     0x564de6c38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8239)[0m     @     0x564de6bad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m     @     0x7fbeb55cb4f5 at::Tensor::copy_()
[2m[36m(pid=8208)[0m     @     0x7fbeb7a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8208)[0m     @     0x7fbeb55cb4f5 at::Tensor::copy_()
[2m[36m(pid=8208)[0m     @     0x7fbebb67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8208)[0m     @     0x5636f97b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8208)[0m     @     0x5636f9710b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m     @     0x5636f979bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8208)[0m     @     0x5636f979ca20 method_vectorcall
[2m[36m(pid=8208)[0m     @     0x5636f9710bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8168)[0m     @     0x7f6c799e54f5 at::Tensor::copy_()
[2m[36m(pid=8168)[0m     @     0x7f6c7fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8168)[0m     @     0x55775c311fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8168)[0m     @     0x55775c26cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8168)[0m     @     0x55775c2f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8168)[0m     @     0x55775c2f8a20 method_vectorcall
[2m[36m(pid=8168)[0m     @     0x55775c26cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8168)[0m     @     0x55775c2f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8168)[0m     @     0x55775c2f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8168)[0m     @     0x55775c26d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8168)[0m     @     0x55775c2f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8168)[0m     @     0x55775c2f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8168)[0m     @     0x55775c26d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8168)[0m     @     0x55775c2f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8168)[0m     @     0x55775c2f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8168)[0m     @     0x55775c26d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8168)[0m     @     0x55775c2f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8168)[0m     @     0x55775c2f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8168)[0m     @     0x55775c26d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8152)[0m     @     0x7eff3cc764f5 at::Tensor::copy_()
[2m[36m(pid=8152)[0m     @     0x7eff3f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8185)[0m     @     0x7fae4f6894f5 at::Tensor::copy_()
[2m[36m(pid=8185)[0m     @     0x7fae5573479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8185)[0m     @     0x561ea1708fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8185)[0m     @     0x561ea1663b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8185)[0m     @     0x561ea16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8185)[0m     @     0x561ea16efa20 method_vectorcall
[2m[36m(pid=8185)[0m     @     0x561ea1663bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8185)[0m     @     0x561ea16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8185)[0m     @     0x561ea16ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8185)[0m     @     0x561ea1664689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8185)[0m     @     0x561ea16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8185)[0m     @     0x561ea16ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8185)[0m     @     0x561ea1664689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8185)[0m     @     0x561ea16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8185)[0m     @     0x561ea16ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8185)[0m     @     0x561ea1664689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8185)[0m     @     0x561ea16eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8185)[0m     @     0x561ea16ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8185)[0m     @     0x561ea1664689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8121)[0m     @     0x7f62b079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8121)[0m     @     0x7f62ae2cb4f5 at::Tensor::copy_()
[2m[36m(pid=8121)[0m     @     0x7f62b437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8121)[0m     @     0x55da17a5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8121)[0m     @     0x55da179b6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8121)[0m     @     0x55da17a41baf _PyEval_EvalCodeWithName
[2m[36m(pid=8121)[0m     @     0x55da17a42a20 method_vectorcall
[2m[36m(pid=8121)[0m     @     0x55da179b6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8121)[0m     @     0x55da17a41baf _PyEval_EvalCodeWithName
[2m[36m(pid=8121)[0m     @     0x55da17a42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8121)[0m     @     0x55da179b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8121)[0m     @     0x55da17a41baf _PyEval_EvalCodeWithName
[2m[36m(pid=8121)[0m     @     0x55da17a42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8121)[0m     @     0x55da179b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8121)[0m     @     0x55da17a41baf _PyEval_EvalCodeWithName
[2m[36m(pid=8121)[0m     @     0x55da17a42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8121)[0m     @     0x55da179b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8113)[0m     @     0x7ed94089f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8113)[0m     @     0x7ed93e3cc4f5 at::Tensor::copy_()
[2m[36m(pid=8113)[0m     @     0x7ed94447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8113)[0m     @     0x5555f8842fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8113)[0m     @     0x5555f879db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8113)[0m     @     0x5555f8828baf _PyEval_EvalCodeWithName
[2m[36m(pid=8113)[0m     @     0x5555f8829a20 method_vectorcall
[2m[36m(pid=8113)[0m     @     0x5555f879dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8113)[0m     @     0x5555f8828baf _PyEval_EvalCodeWithName
[2m[36m(pid=8113)[0m     @     0x5555f8829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8113)[0m     @     0x5555f879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8113)[0m     @     0x5555f8828baf _PyEval_EvalCodeWithName
[2m[36m(pid=8113)[0m     @     0x5555f8829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8113)[0m     @     0x5555f879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8113)[0m     @     0x5555f8828baf _PyEval_EvalCodeWithName
[2m[36m(pid=8113)[0m     @     0x5555f8829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8113)[0m     @     0x5555f879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8113)[0m     @     0x5555f8828baf _PyEval_EvalCodeWithName
[2m[36m(pid=8113)[0m     @     0x5555f8829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8113)[0m     @     0x5555f879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8164)[0m     @     0x7ef2de2cb4f5 at::Tensor::copy_()
[2m[36m(pid=8164)[0m     @     0x7ef2e437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8164)[0m     @     0x559ed146bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8164)[0m     @     0x559ed13c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8164)[0m     @     0x559ed1451baf _PyEval_EvalCodeWithName
[2m[36m(pid=8164)[0m     @     0x559ed1452a20 method_vectorcall
[2m[36m(pid=8164)[0m     @     0x559ed13c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8164)[0m     @     0x559ed1451baf _PyEval_EvalCodeWithName
[2m[36m(pid=8164)[0m     @     0x559ed1452643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8164)[0m     @     0x559ed13c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8164)[0m     @     0x559ed1451baf _PyEval_EvalCodeWithName
[2m[36m(pid=8164)[0m     @     0x559ed1452643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8164)[0m     @     0x559ed13c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8164)[0m     @     0x559ed1451baf _PyEval_EvalCodeWithName
[2m[36m(pid=8164)[0m     @     0x559ed1452643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8164)[0m     @     0x559ed13c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8164)[0m     @     0x559ed1451baf _PyEval_EvalCodeWithName
[2m[36m(pid=8164)[0m     @     0x559ed1452643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8164)[0m     @     0x559ed13c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8174)[0m     @     0x7f4b2613d4f5 at::Tensor::copy_()
[2m[36m(pid=8174)[0m     @     0x7f4b2c1e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8174)[0m     @     0x55ebf2c64fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8174)[0m     @     0x55ebf2bbfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8174)[0m     @     0x55ebf2c4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8174)[0m     @     0x55ebf2c4ba20 method_vectorcall
[2m[36m(pid=8174)[0m     @     0x55ebf2bbfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8174)[0m     @     0x55ebf2c4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8174)[0m     @     0x55ebf2c4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8174)[0m     @     0x55ebf2bc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8174)[0m     @     0x55ebf2c4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8174)[0m     @     0x55ebf2c4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8174)[0m     @     0x55ebf2bc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8174)[0m     @     0x55ebf2c4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8174)[0m     @     0x55ebf2c4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8174)[0m     @     0x55ebf2bc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8174)[0m     @     0x55ebf2c4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8174)[0m     @     0x55ebf2c4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8174)[0m     @     0x55ebf2bc0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8109)[0m     @     0x7f029d0cb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8109)[0m     @     0x7f029abf84f5 at::Tensor::copy_()
[2m[36m(pid=8109)[0m     @     0x7f02a0ca379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8109)[0m     @     0x565514e02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8109)[0m     @     0x565514d5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8109)[0m     @     0x565514de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8109)[0m     @     0x565514de9a20 method_vectorcall
[2m[36m(pid=8109)[0m     @     0x565514d5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8109)[0m     @     0x565514de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8109)[0m     @     0x565514de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8109)[0m     @     0x565514d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8109)[0m     @     0x565514de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8109)[0m     @     0x565514de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8109)[0m     @     0x565514d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8109)[0m     @     0x565514de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8109)[0m     @     0x565514de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8109)[0m     @     0x565514d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8109)[0m     @     0x565514de8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8109)[0m     @     0x565514de9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8109)[0m     @     0x565514d5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8119)[0m     @     0x7f5e8a1c24f5 at::Tensor::copy_()
[2m[36m(pid=8119)[0m     @     0x7f5e9026d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8119)[0m     @     0x55954701afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8119)[0m     @     0x559546f75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8119)[0m     @     0x559547000baf _PyEval_EvalCodeWithName
[2m[36m(pid=8119)[0m     @     0x559547001a20 method_vectorcall
[2m[36m(pid=8119)[0m     @     0x559546f75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8119)[0m     @     0x559547000baf _PyEval_EvalCodeWithName
[2m[36m(pid=8119)[0m     @     0x559547001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8119)[0m     @     0x559546f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8119)[0m     @     0x559547000baf _PyEval_EvalCodeWithName
[2m[36m(pid=8119)[0m     @     0x559547001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8119)[0m     @     0x559546f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8119)[0m     @     0x559547000baf _PyEval_EvalCodeWithName
[2m[36m(pid=8119)[0m     @     0x559547001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8119)[0m     @     0x559546f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8119)[0m     @     0x559547000baf _PyEval_EvalCodeWithName
[2m[36m(pid=8119)[0m     @     0x559547001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8119)[0m     @     0x559546f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8103)[0m     @     0x7f8881d978de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8103)[0m     @     0x7f887f8c44f5 at::Tensor::copy_()
[2m[36m(pid=8103)[0m     @     0x7f888596f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8103)[0m     @     0x55d1a76ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8103)[0m     @     0x55d1a7638b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8103)[0m     @     0x55d1a76c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8103)[0m     @     0x55d1a76c4a20 method_vectorcall
[2m[36m(pid=8103)[0m     @     0x55d1a7638bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8103)[0m     @     0x55d1a76c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8103)[0m     @     0x55d1a76c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8103)[0m     @     0x55d1a7639689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8103)[0m     @     0x55d1a76c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8103)[0m     @     0x55d1a76c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8103)[0m     @     0x55d1a7639689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8103)[0m     @     0x55d1a76c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8103)[0m     @     0x55d1a76c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8103)[0m     @     0x55d1a7639689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8103)[0m     @     0x55d1a76c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8103)[0m     @     0x55d1a76c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8103)[0m     @     0x55d1a7639689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8111)[0m     @     0x7ee10db1c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8111)[0m     @     0x7ee10b6494f5 at::Tensor::copy_()
[2m[36m(pid=8111)[0m     @     0x7ee1116f479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8111)[0m     @     0x55d985fb0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8111)[0m     @     0x55d985f0bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8111)[0m     @     0x55d985f96baf _PyEval_EvalCodeWithName
[2m[36m(pid=8111)[0m     @     0x55d985f97a20 method_vectorcall
[2m[36m(pid=8111)[0m     @     0x55d985f0bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8111)[0m     @     0x55d985f96baf _PyEval_EvalCodeWithName
[2m[36m(pid=8111)[0m     @     0x55d985f97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8111)[0m     @     0x55d985f0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8111)[0m     @     0x55d985f96baf _PyEval_EvalCodeWithName
[2m[36m(pid=8111)[0m     @     0x55d985f97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8111)[0m     @     0x55d985f0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8111)[0m     @     0x55d985f96baf _PyEval_EvalCodeWithName
[2m[36m(pid=8111)[0m     @     0x55d985f97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8111)[0m     @     0x55d985f0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8111)[0m     @     0x55d985f96baf _PyEval_EvalCodeWithName
[2m[36m(pid=8111)[0m     @     0x55d985f97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8111)[0m     @     0x55d985f0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8102)[0m     @     0x7f0453e914f5 at::Tensor::copy_()
[2m[36m(pid=8102)[0m     @     0x7f0459b3279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8102)[0m     @     0x55c472f11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8102)[0m     @     0x55c472e6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8102)[0m     @     0x55c472ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8102)[0m     @     0x55c472ef8a20 method_vectorcall
[2m[36m(pid=8102)[0m     @     0x55c472e6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8102)[0m     @     0x55c472ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8102)[0m     @     0x55c472ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8102)[0m     @     0x55c472e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8102)[0m     @     0x55c472ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8102)[0m     @     0x55c472ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8102)[0m     @     0x55c472e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8102)[0m     @     0x55c472ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8102)[0m     @     0x55c472ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8102)[0m     @     0x55c472e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8102)[0m     @     0x55c472ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8102)[0m     @     0x55c472ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8102)[0m     @     0x55c472e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8130)[0m     @     0x7f18de26c4f5 at::Tensor::copy_()
[2m[36m(pid=8130)[0m     @     0x7f18e431779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8130)[0m     @     0x55e7fad2cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8130)[0m     @     0x55e7fac87b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8130)[0m     @     0x55e7fad12baf _PyEval_EvalCodeWithName
[2m[36m(pid=8130)[0m     @     0x55e7fad13a20 method_vectorcall
[2m[36m(pid=8130)[0m     @     0x55e7fac87bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8130)[0m     @     0x55e7fad12baf _PyEval_EvalCodeWithName
[2m[36m(pid=8130)[0m     @     0x55e7fad13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8130)[0m     @     0x55e7fac88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8130)[0m     @     0x55e7fad12baf _PyEval_EvalCodeWithName
[2m[36m(pid=8130)[0m     @     0x55e7fad13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8130)[0m     @     0x55e7fac88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8130)[0m     @     0x55e7fad12baf _PyEval_EvalCodeWithName
[2m[36m(pid=8130)[0m     @     0x55e7fad13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8130)[0m     @     0x55e7fac88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8130)[0m     @     0x55e7fad12baf _PyEval_EvalCodeWithName
[2m[36m(pid=8130)[0m     @     0x55e7fad13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8130)[0m     @     0x55e7fac88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8149)[0m     @     0x7f0c088e54f5 at::Tensor::copy_()
[2m[36m(pid=8149)[0m     @     0x7f0c0e99079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8149)[0m     @     0x55b1d03cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8149)[0m     @     0x55b1d0328b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8149)[0m     @     0x55b1d03b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8149)[0m     @     0x55b1d03b4a20 method_vectorcall
[2m[36m(pid=8149)[0m     @     0x55b1d0328bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8149)[0m     @     0x55b1d03b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8149)[0m     @     0x55b1d03b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8149)[0m     @     0x55b1d0329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8149)[0m     @     0x55b1d03b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8149)[0m     @     0x55b1d03b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8149)[0m     @     0x55b1d0329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8149)[0m     @     0x55b1d03b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8149)[0m     @     0x55b1d03b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8149)[0m     @     0x55b1d0329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8149)[0m     @     0x55b1d03b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=8149)[0m     @     0x55b1d03b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8149)[0m     @     0x55b1d0329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8126)[0m     @     0x7f794b5864f5 at::Tensor::copy_()
[2m[36m(pid=8126)[0m     @     0x7f794da598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8126)[0m     @     0x7f794b5864f5 at::Tensor::copy_()
[2m[36m(pid=8126)[0m     @     0x7f795163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8126)[0m     @     0x55a71b3adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8126)[0m     @     0x55a71b308b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8126)[0m     @     0x55a71b393baf _PyEval_EvalCodeWithName
[2m[36m(pid=8126)[0m     @     0x55a71b394a20 method_vectorcall
[2m[36m(pid=8126)[0m     @     0x55a71b308bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8126)[0m     @     0x55a71b393baf _PyEval_EvalCodeWithName
[2m[36m(pid=8126)[0m     @     0x55a71b394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8126)[0m     @     0x55a71b309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8126)[0m     @     0x55a71b393baf _PyEval_EvalCodeWithName
[2m[36m(pid=8126)[0m     @     0x55a71b394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8126)[0m     @     0x55a71b309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8126)[0m     @     0x55a71b393baf _PyEval_EvalCodeWithName
[2m[36m(pid=8126)[0m     @     0x55a71b394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8126)[0m     @     0x55a71b309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8126)[0m     @     0x55a71b393baf _PyEval_EvalCodeWithName
[2m[36m(pid=8126)[0m     @     0x55a71b394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8126)[0m     @     0x55a71b309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8194)[0m     @     0x7f77219cf5a4 at::native::copy_()
[2m[36m(pid=8194)[0m     @     0x7f77220ba4f5 at::Tensor::copy_()
[2m[36m(pid=8194)[0m     @     0x7f772458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8195)[0m     @     0x7f15a9ca5ad3 at::TensorIterator::for_each()
[2m[36m(pid=8195)[0m     @     0x7f15a9ca5d91 at::TensorIterator::for_each()
[2m[36m(pid=8195)[0m     @     0x7f15aa588b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8195)[0m     @     0x7f15aa5abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8200)[0m     @     0x7f0a1dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=8200)[0m     @     0x7f0a201ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8200)[0m     @     0x7f0a1dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=8200)[0m     @     0x7f0a23da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8200)[0m     @     0x558561815fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8200)[0m     @     0x558561770b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8200)[0m     @     0x5585617fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8200)[0m     @     0x5585617fca20 method_vectorcall
[2m[36m(pid=8200)[0m     @     0x558561770bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8200)[0m     @     0x5585617fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8200)[0m     @     0x5585617fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8200)[0m     @     0x558561771689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8200)[0m     @     0x5585617fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8200)[0m     @     0x5585617fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8200)[0m     @     0x558561771689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8200)[0m     @     0x5585617fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8200)[0m     @     0x5585617fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8200)[0m     @     0x558561771689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8200)[0m     @     0x5585617fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8200)[0m     @     0x5585617fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8105)[0m     @     0x7f17e82ff4f5 at::Tensor::copy_()
[2m[36m(pid=8105)[0m     @     0x7f17ea7d28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8105)[0m     @     0x7f17e82ff4f5 at::Tensor::copy_()
[2m[36m(pid=8105)[0m     @     0x7f17ee1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8105)[0m     @     0x5624d0ffbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8105)[0m     @     0x5624d0f56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8105)[0m     @     0x5624d0fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8105)[0m     @     0x5624d0fe2a20 method_vectorcall
[2m[36m(pid=8105)[0m     @     0x5624d0f56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8105)[0m     @     0x5624d0fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8105)[0m     @     0x5624d0fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8105)[0m     @     0x5624d0f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8105)[0m     @     0x5624d0fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8105)[0m     @     0x5624d0fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8105)[0m     @     0x5624d0f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8105)[0m     @     0x5624d0fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8105)[0m     @     0x5624d0fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8105)[0m     @     0x5624d0f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8105)[0m     @     0x5624d0fe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=8105)[0m     @     0x5624d0fe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8105)[0m     @     0x5624d0f57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8232)[0m     @     0x7ee1f6b175a4 at::native::copy_()
[2m[36m(pid=8232)[0m     @     0x7ee1f72024f5 at::Tensor::copy_()
[2m[36m(pid=8232)[0m     @     0x7ee1f96d58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8232)[0m     @     0x7ee1f72024f5 at::Tensor::copy_()
[2m[36m(pid=8106)[0m     @     0x7edadd5014f5 at::Tensor::copy_()
[2m[36m(pid=8106)[0m     @     0x7edadf9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8106)[0m     @     0x7edadd5014f5 at::Tensor::copy_()
[2m[36m(pid=8106)[0m     @     0x7edb0946379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8106)[0m     @     0x5567a7357fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8106)[0m     @     0x5567a72b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8106)[0m     @     0x5567a733dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8106)[0m     @     0x5567a733ea20 method_vectorcall
[2m[36m(pid=8106)[0m     @     0x5567a72b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8106)[0m     @     0x5567a733dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8106)[0m     @     0x5567a733e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8106)[0m     @     0x5567a72b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8106)[0m     @     0x5567a733dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8106)[0m     @     0x5567a733e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8106)[0m     @     0x5567a72b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8106)[0m     @     0x5567a733dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8106)[0m     @     0x5567a733e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8106)[0m     @     0x5567a72b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8106)[0m     @     0x5567a733dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8106)[0m     @     0x5567a733e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8106)[0m     @     0x5567a72b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8115)[0m     @     0x560e10c9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8115)[0m     @     0x560e10bf9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8115)[0m     @     0x560e10c84baf _PyEval_EvalCodeWithName
[2m[36m(pid=8115)[0m     @     0x560e10c85a20 method_vectorcall
[2m[36m(pid=8115)[0m     @     0x560e10bf9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8115)[0m     @     0x560e10c84baf _PyEval_EvalCodeWithName
[2m[36m(pid=8115)[0m     @     0x560e10c85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8115)[0m     @     0x560e10bfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8115)[0m     @     0x560e10c84baf _PyEval_EvalCodeWithName
[2m[36m(pid=8115)[0m     @     0x560e10c85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8115)[0m     @     0x560e10bfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8115)[0m     @     0x560e10c84baf _PyEval_EvalCodeWithName
[2m[36m(pid=8115)[0m     @     0x560e10c85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8115)[0m     @     0x560e10bfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8115)[0m     @     0x560e10c84baf _PyEval_EvalCodeWithName
[2m[36m(pid=8115)[0m     @     0x560e10c85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8115)[0m     @     0x560e10bfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8182)[0m     @     0x7f38f4d2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8182)[0m     @     0x56249e6e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8182)[0m     @     0x56249e63cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8182)[0m     @     0x56249e6c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8182)[0m     @     0x56249e6c8a20 method_vectorcall
[2m[36m(pid=8182)[0m     @     0x56249e63cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8182)[0m     @     0x56249e6c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8182)[0m     @     0x56249e6c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8182)[0m     @     0x56249e63d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8182)[0m     @     0x56249e6c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8182)[0m     @     0x56249e6c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8182)[0m     @     0x56249e63d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8182)[0m     @     0x56249e6c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8182)[0m     @     0x56249e6c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8182)[0m     @     0x56249e63d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8182)[0m     @     0x56249e6c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8182)[0m     @     0x56249e6c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8182)[0m     @     0x56249e63d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8100)[0m     @     0x7f28531718de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8100)[0m     @     0x7f2850c9e4f5 at::Tensor::copy_()
[2m[36m(pid=8100)[0m     @     0x7f2856d4979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8100)[0m     @     0x55820585dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8100)[0m     @     0x5582057b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8100)[0m     @     0x558205843baf _PyEval_EvalCodeWithName
[2m[36m(pid=8100)[0m     @     0x558205844a20 method_vectorcall
[2m[36m(pid=8100)[0m     @     0x5582057b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8100)[0m     @     0x558205843baf _PyEval_EvalCodeWithName
[2m[36m(pid=8100)[0m     @     0x558205844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8100)[0m     @     0x5582057b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8100)[0m     @     0x558205843baf _PyEval_EvalCodeWithName
[2m[36m(pid=8100)[0m     @     0x558205844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8100)[0m     @     0x5582057b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8100)[0m     @     0x558205843baf _PyEval_EvalCodeWithName
[2m[36m(pid=8100)[0m     @     0x558205844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8100)[0m     @     0x5582057b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8100)[0m     @     0x558205843baf _PyEval_EvalCodeWithName
[2m[36m(pid=8100)[0m     @     0x558205844643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8100)[0m     @     0x5582057b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8155)[0m     @     0x7ed448c764f5 at::Tensor::copy_()
[2m[36m(pid=8155)[0m     @     0x7ed44ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8155)[0m     @     0x562f04d44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8155)[0m     @     0x562f04c9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8155)[0m     @     0x562f04d2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8155)[0m     @     0x562f04d2ba20 method_vectorcall
[2m[36m(pid=8155)[0m     @     0x562f04c9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8155)[0m     @     0x562f04d2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8155)[0m     @     0x562f04d2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8155)[0m     @     0x562f04ca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8155)[0m     @     0x562f04d2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8155)[0m     @     0x562f04d2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8155)[0m     @     0x562f04ca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8155)[0m     @     0x562f04d2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8155)[0m     @     0x562f04d2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8155)[0m     @     0x562f04ca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8155)[0m     @     0x562f04d2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8155)[0m     @     0x562f04d2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8155)[0m     @     0x562f04ca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8107)[0m     @     0x7f7d8e36b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8107)[0m     @     0x7f7d8be984f5 at::Tensor::copy_()
[2m[36m(pid=8107)[0m     @     0x7f7d91f4379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8107)[0m     @     0x558169479fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8107)[0m     @     0x5581693d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8107)[0m     @     0x55816945fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8107)[0m     @     0x558169460a20 method_vectorcall
[2m[36m(pid=8107)[0m     @     0x5581693d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8107)[0m     @     0x55816945fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8107)[0m     @     0x558169460643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8107)[0m     @     0x5581693d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8107)[0m     @     0x55816945fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8107)[0m     @     0x558169460643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8107)[0m     @     0x5581693d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8107)[0m     @     0x55816945fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8107)[0m     @     0x558169460643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8107)[0m     @     0x5581693d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8107)[0m     @     0x55816945fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8107)[0m     @     0x558169460643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8107)[0m     @     0x5581693d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8104)[0m     @     0x7f4109d544f5 at::Tensor::copy_()
[2m[36m(pid=8104)[0m     @     0x7f410fdff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8104)[0m     @     0x55922a11bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8104)[0m     @     0x55922a076b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8104)[0m     @     0x55922a101baf _PyEval_EvalCodeWithName
[2m[36m(pid=8104)[0m     @     0x55922a102a20 method_vectorcall
[2m[36m(pid=8104)[0m     @     0x55922a076bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8104)[0m     @     0x55922a101baf _PyEval_EvalCodeWithName
[2m[36m(pid=8104)[0m     @     0x55922a102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8104)[0m     @     0x55922a077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8104)[0m     @     0x55922a101baf _PyEval_EvalCodeWithName
[2m[36m(pid=8104)[0m     @     0x55922a102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8104)[0m     @     0x55922a077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8104)[0m     @     0x55922a101baf _PyEval_EvalCodeWithName
[2m[36m(pid=8104)[0m     @     0x55922a102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8104)[0m     @     0x55922a077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8104)[0m     @     0x55922a101baf _PyEval_EvalCodeWithName
[2m[36m(pid=8104)[0m     @     0x55922a102643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8104)[0m     @     0x55922a077689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8110)[0m     @     0x7eefd53ba4f5 at::Tensor::copy_()
[2m[36m(pid=8110)[0m     @     0x7eefdb46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8110)[0m     @     0x563ebef71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8110)[0m     @     0x563ebeeccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8110)[0m     @     0x563ebef57baf _PyEval_EvalCodeWithName
[2m[36m(pid=8110)[0m     @     0x563ebef58a20 method_vectorcall
[2m[36m(pid=8110)[0m     @     0x563ebeeccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8110)[0m     @     0x563ebef57baf _PyEval_EvalCodeWithName
[2m[36m(pid=8110)[0m     @     0x563ebef58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8110)[0m     @     0x563ebeecd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8110)[0m     @     0x563ebef57baf _PyEval_EvalCodeWithName
[2m[36m(pid=8110)[0m     @     0x563ebef58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8110)[0m     @     0x563ebeecd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8110)[0m     @     0x563ebef57baf _PyEval_EvalCodeWithName
[2m[36m(pid=8110)[0m     @     0x563ebef58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8110)[0m     @     0x563ebeecd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8110)[0m     @     0x563ebef57baf _PyEval_EvalCodeWithName
[2m[36m(pid=8110)[0m     @     0x563ebef58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8110)[0m     @     0x563ebeecd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8122)[0m     @     0x7f266788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8122)[0m     @     0x7f26653ba4f5 at::Tensor::copy_()
[2m[36m(pid=8122)[0m     @     0x7f266b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8122)[0m     @     0x561b9014efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8122)[0m     @     0x561b900a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8122)[0m     @     0x561b90134baf _PyEval_EvalCodeWithName
[2m[36m(pid=8122)[0m     @     0x561b90135a20 method_vectorcall
[2m[36m(pid=8122)[0m     @     0x561b900a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8122)[0m     @     0x561b90134baf _PyEval_EvalCodeWithName
[2m[36m(pid=8122)[0m     @     0x561b90135643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8122)[0m     @     0x561b900aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8122)[0m     @     0x561b90134baf _PyEval_EvalCodeWithName
[2m[36m(pid=8122)[0m     @     0x561b90135643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8122)[0m     @     0x561b900aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8122)[0m     @     0x561b90134baf _PyEval_EvalCodeWithName
[2m[36m(pid=8122)[0m     @     0x561b90135643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8122)[0m     @     0x561b900aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8122)[0m     @     0x561b90134baf _PyEval_EvalCodeWithName
[2m[36m(pid=8122)[0m     @     0x561b90135643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8122)[0m     @     0x561b900aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8184)[0m     @     0x7f0dd5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=8184)[0m     @     0x7f0ddbda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8184)[0m     @     0x5589c33cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8184)[0m     @     0x5589c3325b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8184)[0m     @     0x5589c33b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8184)[0m     @     0x5589c33b1a20 method_vectorcall
[2m[36m(pid=8184)[0m     @     0x5589c3325bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8184)[0m     @     0x5589c33b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8184)[0m     @     0x5589c33b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8184)[0m     @     0x5589c3326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8184)[0m     @     0x5589c33b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8184)[0m     @     0x5589c33b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8184)[0m     @     0x5589c3326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8184)[0m     @     0x5589c33b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8184)[0m     @     0x5589c33b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8184)[0m     @     0x5589c3326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8184)[0m     @     0x5589c33b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=8184)[0m     @     0x5589c33b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8184)[0m     @     0x5589c3326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8186)[0m     @     0x7f11d12faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8186)[0m     @     0x7f11d12f8388 at::native::copy_impl()
[2m[36m(pid=8186)[0m     @     0x7f11d12fa5a4 at::native::copy_()
[2m[36m(pid=8189)[0m     @     0x7f351616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8189)[0m     @     0x7f3515610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8189)[0m     @     0x7f351560e388 at::native::copy_impl()
[2m[36m(pid=8189)[0m     @     0x7f35156105a4 at::native::copy_()
[2m[36m(pid=8241)[0m     @     0x7fcbf0d62d91 at::TensorIterator::for_each()
[2m[36m(pid=8241)[0m     @     0x7fcbf1645b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8241)[0m     @     0x7fcbf1668c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8241)[0m     @     0x7fcbf0b0aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8241)[0m     @     0x7fcbf0b08388 at::native::copy_impl()
[2m[36m(pid=8241)[0m     @     0x7fcbf0b0a5a4 at::native::copy_()
[2m[36m(pid=8120)[0m     @     0x7ee3363e95a4 at::native::copy_()
[2m[36m(pid=8120)[0m     @     0x7ee336ad44f5 at::Tensor::copy_()
[2m[36m(pid=8120)[0m     @     0x7ee338fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8120)[0m     @     0x7ee336ad44f5 at::Tensor::copy_()
[2m[36m(pid=8124)[0m     @     0x7f8689f0c4f5 at::Tensor::copy_()
[2m[36m(pid=8124)[0m     @     0x7f868ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8124)[0m     @     0x5614c2018fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8124)[0m     @     0x5614c1f73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8124)[0m     @     0x5614c1ffebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8124)[0m     @     0x5614c1fffa20 method_vectorcall
[2m[36m(pid=8124)[0m     @     0x5614c1f73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8124)[0m     @     0x5614c1ffebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8124)[0m     @     0x5614c1fff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8124)[0m     @     0x5614c1f74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8124)[0m     @     0x5614c1ffebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8124)[0m     @     0x5614c1fff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8124)[0m     @     0x5614c1f74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8124)[0m     @     0x5614c1ffebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8124)[0m     @     0x5614c1fff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8124)[0m     @     0x5614c1f74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8124)[0m     @     0x5614c1ffebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8124)[0m     @     0x5614c1fff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8124)[0m     @     0x5614c1f74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x7ee494f27d91 at::TensorIterator::for_each()
[2m[36m(pid=8160)[0m     @     0x7ee49580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8160)[0m     @     0x7ee49582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8160)[0m     @     0x7ee494ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8160)[0m     @     0x7ee494ccd388 at::native::copy_impl()
[2m[36m(pid=8157)[0m     @     0x7f613637c4f5 at::Tensor::copy_()
[2m[36m(pid=8157)[0m     @     0x7f613884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8157)[0m     @     0x7f613637c4f5 at::Tensor::copy_()
[2m[36m(pid=8157)[0m     @     0x7f613c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8157)[0m     @     0x556df1915fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8157)[0m     @     0x556df1870b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8157)[0m     @     0x556df18fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8157)[0m     @     0x556df18fca20 method_vectorcall
[2m[36m(pid=8157)[0m     @     0x556df1870bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8136)[0m     @     0x7fc830d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8136)[0m     @     0x7fc82e8bd4f5 at::Tensor::copy_()
[2m[36m(pid=8136)[0m     @     0x7fc83496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8136)[0m     @     0x5592f3798fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8136)[0m     @     0x5592f36f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8136)[0m     @     0x5592f377ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8136)[0m     @     0x5592f377fa20 method_vectorcall
[2m[36m(pid=8136)[0m     @     0x5592f36f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8136)[0m     @     0x5592f377ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8136)[0m     @     0x5592f377f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8136)[0m     @     0x5592f36f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8136)[0m     @     0x5592f377ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8136)[0m     @     0x5592f377f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8136)[0m     @     0x5592f36f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8136)[0m     @     0x5592f377ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8136)[0m     @     0x5592f377f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8136)[0m     @     0x5592f36f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8136)[0m     @     0x5592f377ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8136)[0m     @     0x5592f377f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8136)[0m     @     0x5592f36f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8114)[0m     @     0x7f3a83bc04f5 at::Tensor::copy_()
[2m[36m(pid=8114)[0m     @     0x7f3a89c6b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8114)[0m     @     0x55864224bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8114)[0m     @     0x5586421a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8114)[0m     @     0x558642231baf _PyEval_EvalCodeWithName
[2m[36m(pid=8114)[0m     @     0x558642232a20 method_vectorcall
[2m[36m(pid=8114)[0m     @     0x5586421a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8114)[0m     @     0x558642231baf _PyEval_EvalCodeWithName
[2m[36m(pid=8114)[0m     @     0x558642232643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8114)[0m     @     0x5586421a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8114)[0m     @     0x558642231baf _PyEval_EvalCodeWithName
[2m[36m(pid=8114)[0m     @     0x558642232643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8114)[0m     @     0x5586421a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8114)[0m     @     0x558642231baf _PyEval_EvalCodeWithName
[2m[36m(pid=8114)[0m     @     0x558642232643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8114)[0m     @     0x5586421a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8114)[0m     @     0x558642231baf _PyEval_EvalCodeWithName
[2m[36m(pid=8114)[0m     @     0x558642232643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8114)[0m     @     0x5586421a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8175)[0m     @     0x5582d6da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8175)[0m     @     0x5582d6e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=8175)[0m     @     0x5582d6e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8175)[0m     @     0x5582d6da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8213)[0m     @     0x7fc2ec68d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8213)[0m     @     0x563fd2641fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8213)[0m     @     0x563fd259cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8213)[0m     @     0x563fd2627baf _PyEval_EvalCodeWithName
[2m[36m(pid=8213)[0m     @     0x563fd2628a20 method_vectorcall
[2m[36m(pid=8213)[0m     @     0x563fd259cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8213)[0m     @     0x563fd2627baf _PyEval_EvalCodeWithName
[2m[36m(pid=8213)[0m     @     0x563fd2628643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8213)[0m     @     0x563fd259d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8213)[0m     @     0x563fd2627baf _PyEval_EvalCodeWithName
[2m[36m(pid=8213)[0m     @     0x563fd2628643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8213)[0m     @     0x563fd259d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8213)[0m     @     0x563fd2627baf _PyEval_EvalCodeWithName
[2m[36m(pid=8213)[0m     @     0x563fd2628643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8213)[0m     @     0x563fd259d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8213)[0m     @     0x563fd2627baf _PyEval_EvalCodeWithName
[2m[36m(pid=8213)[0m     @     0x563fd2628643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8213)[0m     @     0x563fd259d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8134)[0m     @     0x7f01f2d745a4 at::native::copy_()
[2m[36m(pid=8134)[0m     @     0x7f01f345f4f5 at::Tensor::copy_()
[2m[36m(pid=8178)[0m     @     0x7f7127e9f4f5 at::Tensor::copy_()
[2m[36m(pid=8178)[0m     @     0x7f712df4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8178)[0m     @     0x55dadcffffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8178)[0m     @     0x55dadcf5ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8178)[0m     @     0x55dadcfe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8178)[0m     @     0x55dadcfe6a20 method_vectorcall
[2m[36m(pid=8178)[0m     @     0x55dadcf5abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8178)[0m     @     0x55dadcfe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8178)[0m     @     0x55dadcfe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8178)[0m     @     0x55dadcf5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8178)[0m     @     0x55dadcfe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8178)[0m     @     0x55dadcfe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8178)[0m     @     0x55dadcf5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8178)[0m     @     0x55dadcfe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8178)[0m     @     0x55dadcfe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8178)[0m     @     0x55dadcf5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8178)[0m     @     0x55dadcfe5baf _PyEval_EvalCodeWithName
[2m[36m(pid=8178)[0m     @     0x55dadcfe6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8178)[0m     @     0x55dadcf5b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8229)[0m     @     0x7efacd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=8229)[0m     @     0x7efacf88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8229)[0m     @     0x7efacd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=8229)[0m     @     0x7efad346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8229)[0m     @     0x55ffa0617fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8229)[0m     @     0x55ffa0572b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8229)[0m     @     0x55ffa05fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8229)[0m     @     0x55ffa05fea20 method_vectorcall
[2m[36m(pid=8229)[0m     @     0x55ffa0572bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8229)[0m     @     0x55ffa05fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8229)[0m     @     0x55ffa05fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8229)[0m     @     0x55ffa0573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8229)[0m     @     0x55ffa05fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8229)[0m     @     0x55ffa05fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8229)[0m     @     0x55ffa0573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8229)[0m     @     0x55ffa05fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8229)[0m     @     0x55ffa05fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8229)[0m     @     0x55ffa0573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8229)[0m     @     0x55ffa05fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8229)[0m     @     0x55ffa05fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8229)[0m     @     0x55ffa0573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x7f3110b8a5a4 at::native::copy_()
[2m[36m(pid=8192)[0m     @     0x7f31112754f5 at::Tensor::copy_()
[2m[36m(pid=8192)[0m     @     0x7f31137488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8101)[0m     @     0x7f1200a654f5 at::Tensor::copy_()
[2m[36m(pid=8101)[0m     @     0x7f1202f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8101)[0m     @     0x7f1200a654f5 at::Tensor::copy_()
[2m[36m(pid=8101)[0m     @     0x7f1206b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8101)[0m     @     0x55656b36bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8101)[0m     @     0x55656b2c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8101)[0m     @     0x55656b351baf _PyEval_EvalCodeWithName
[2m[36m(pid=8101)[0m     @     0x55656b352a20 method_vectorcall
[2m[36m(pid=8101)[0m     @     0x55656b2c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8101)[0m     @     0x55656b351baf _PyEval_EvalCodeWithName
[2m[36m(pid=8101)[0m     @     0x55656b352643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8101)[0m     @     0x55656b2c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8101)[0m     @     0x55656b351baf _PyEval_EvalCodeWithName
[2m[36m(pid=8101)[0m     @     0x55656b352643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8101)[0m     @     0x55656b2c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8101)[0m     @     0x55656b351baf _PyEval_EvalCodeWithName
[2m[36m(pid=8101)[0m     @     0x55656b352643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8101)[0m     @     0x55656b2c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8101)[0m     @     0x55656b351baf _PyEval_EvalCodeWithName
[2m[36m(pid=8101)[0m     @     0x55656b352643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8101)[0m     @     0x55656b2c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8191)[0m     @     0x7f0f71c62388 at::native::copy_impl()
[2m[36m(pid=8191)[0m     @     0x7f0f71c645a4 at::native::copy_()
[2m[36m(pid=8191)[0m     @     0x7f0f7234f4f5 at::Tensor::copy_()
[2m[36m(pid=8191)[0m     @     0x7f0f748228de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8154)[0m     @     0x7f5fa01244f5 at::Tensor::copy_()
[2m[36m(pid=8154)[0m     @     0x7f5fa61cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8154)[0m     @     0x560fad9c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8154)[0m     @     0x560fad91bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8154)[0m     @     0x560fad9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8154)[0m     @     0x560fad9a7a20 method_vectorcall
[2m[36m(pid=8154)[0m     @     0x560fad91bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8154)[0m     @     0x560fad9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8154)[0m     @     0x560fad9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8154)[0m     @     0x560fad91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8154)[0m     @     0x560fad9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8154)[0m     @     0x560fad9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8154)[0m     @     0x560fad91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8154)[0m     @     0x560fad9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8154)[0m     @     0x560fad9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8154)[0m     @     0x560fad91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8154)[0m     @     0x560fad9a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=8154)[0m     @     0x560fad9a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8154)[0m     @     0x560fad91c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8183)[0m     @     0x7ee6a67ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8183)[0m     @     0x55ffa56f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8183)[0m     @     0x55ffa564cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8183)[0m     @     0x55ffa56d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8183)[0m     @     0x55ffa56d8a20 method_vectorcall
[2m[36m(pid=8183)[0m     @     0x55ffa564cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8183)[0m     @     0x55ffa56d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8183)[0m     @     0x55ffa56d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8183)[0m     @     0x55ffa564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8183)[0m     @     0x55ffa56d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8183)[0m     @     0x55ffa56d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8183)[0m     @     0x55ffa564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8183)[0m     @     0x55ffa56d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8183)[0m     @     0x55ffa56d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8183)[0m     @     0x55ffa564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8183)[0m     @     0x55ffa56d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=8183)[0m     @     0x55ffa56d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8183)[0m     @     0x55ffa564d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x7f6ec344bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=8128)[0m     @     0x7f6ec346ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=8128)[0m     @     0x7f6ec2910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8128)[0m     @     0x7f6ec290e388 at::native::copy_impl()
[2m[36m(pid=8128)[0m     @     0x7f6ec29105a4 at::native::copy_()
[2m[36m(pid=8212)[0m     @     0x7fad728bd4f5 at::Tensor::copy_()
[2m[36m(pid=8212)[0m     @     0x7fad7896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8212)[0m     @     0x5566de6c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8212)[0m     @     0x5566de61eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8212)[0m     @     0x5566de6a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=8212)[0m     @     0x5566de6aaa20 method_vectorcall
[2m[36m(pid=8212)[0m     @     0x5566de61ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8212)[0m     @     0x5566de6a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=8212)[0m     @     0x5566de6aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8212)[0m     @     0x5566de61f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8212)[0m     @     0x5566de6a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=8212)[0m     @     0x5566de6aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8212)[0m     @     0x5566de61f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8212)[0m     @     0x5566de6a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=8212)[0m     @     0x5566de6aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8212)[0m     @     0x5566de61f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8212)[0m     @     0x5566de6a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=8212)[0m     @     0x5566de6aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8212)[0m     @     0x5566de61f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8133)[0m     @     0x7f7b2442779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8133)[0m     @     0x557e2568cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8133)[0m     @     0x557e255e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8133)[0m     @     0x557e25672baf _PyEval_EvalCodeWithName
[2m[36m(pid=8133)[0m     @     0x557e25673a20 method_vectorcall
[2m[36m(pid=8133)[0m     @     0x557e255e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8133)[0m     @     0x557e25672baf _PyEval_EvalCodeWithName
[2m[36m(pid=8133)[0m     @     0x557e25673643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8133)[0m     @     0x557e255e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8133)[0m     @     0x557e25672baf _PyEval_EvalCodeWithName
[2m[36m(pid=8133)[0m     @     0x557e25673643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8133)[0m     @     0x557e255e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8133)[0m     @     0x557e25672baf _PyEval_EvalCodeWithName
[2m[36m(pid=8133)[0m     @     0x557e25673643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8133)[0m     @     0x557e255e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8133)[0m     @     0x557e25672baf _PyEval_EvalCodeWithName
[2m[36m(pid=8133)[0m     @     0x557e25673643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8133)[0m     @     0x557e255e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x7f9046fcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8187)[0m     @     0x55a80eb41fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8187)[0m     @     0x55a80ea9cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x55a80eb27baf _PyEval_EvalCodeWithName
[2m[36m(pid=8187)[0m     @     0x55a80eb28a20 method_vectorcall
[2m[36m(pid=8187)[0m     @     0x55a80ea9cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x55a80eb27baf _PyEval_EvalCodeWithName
[2m[36m(pid=8187)[0m     @     0x55a80eb28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8187)[0m     @     0x55a80ea9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x55a80eb27baf _PyEval_EvalCodeWithName
[2m[36m(pid=8187)[0m     @     0x55a80eb28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8187)[0m     @     0x55a80ea9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x55a80eb27baf _PyEval_EvalCodeWithName
[2m[36m(pid=8187)[0m     @     0x55a80eb28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8187)[0m     @     0x55a80ea9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8187)[0m     @     0x55a80eb27baf _PyEval_EvalCodeWithName
[2m[36m(pid=8187)[0m     @     0x55a80eb28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8187)[0m     @     0x55a80ea9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m     @     0x5636f979bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8208)[0m     @     0x5636f979c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8208)[0m     @     0x5636f9711689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m     @     0x5636f979bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8208)[0m     @     0x5636f979c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8208)[0m     @     0x5636f9711689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m     @     0x5636f979bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8208)[0m     @     0x5636f979c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8208)[0m     @     0x5636f9711689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8208)[0m     @     0x5636f979bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8208)[0m     @     0x5636f979c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8208)[0m     @     0x5636f9711689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8152)[0m     @     0x7eff3cc764f5 at::Tensor::copy_()
[2m[36m(pid=8152)[0m     @     0x7eff42d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8152)[0m     @     0x5586fccd6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8152)[0m     @     0x5586fcc31b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8152)[0m     @     0x5586fccbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8152)[0m     @     0x5586fccbda20 method_vectorcall
[2m[36m(pid=8152)[0m     @     0x5586fcc31bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8152)[0m     @     0x5586fccbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8152)[0m     @     0x5586fccbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8152)[0m     @     0x5586fcc32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8152)[0m     @     0x5586fccbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8152)[0m     @     0x5586fccbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8152)[0m     @     0x5586fcc32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8152)[0m     @     0x5586fccbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8152)[0m     @     0x5586fccbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8152)[0m     @     0x5586fcc32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8152)[0m     @     0x5586fccbcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8152)[0m     @     0x5586fccbd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8152)[0m     @     0x5586fcc32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8121)[0m     @     0x55da17a41baf _PyEval_EvalCodeWithName
[2m[36m(pid=8121)[0m     @     0x55da17a42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8121)[0m     @     0x55da179b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8194)[0m     @     0x7f77220ba4f5 at::Tensor::copy_()
[2m[36m(pid=8194)[0m     @     0x7f772816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8194)[0m     @     0x557778f24fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8194)[0m     @     0x557778e7fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8194)[0m     @     0x557778f0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8194)[0m     @     0x557778f0ba20 method_vectorcall
[2m[36m(pid=8194)[0m     @     0x557778e7fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8194)[0m     @     0x557778f0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8194)[0m     @     0x557778f0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8194)[0m     @     0x557778e80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8194)[0m     @     0x557778f0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8194)[0m     @     0x557778f0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8194)[0m     @     0x557778e80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8194)[0m     @     0x557778f0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8194)[0m     @     0x557778f0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8194)[0m     @     0x557778e80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8194)[0m     @     0x557778f0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=8194)[0m     @     0x557778f0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8194)[0m     @     0x557778e80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8195)[0m     @     0x7f15a9a4da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=8195)[0m     @     0x7f15a9a4b388 at::native::copy_impl()
[2m[36m(pid=8195)[0m     @     0x7f15a9a4d5a4 at::native::copy_()
[2m[36m(pid=8200)[0m     @     0x558561771689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8232)[0m     @     0x7ee1fd2ad79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8232)[0m     @     0x561e826d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8232)[0m     @     0x561e82633b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8232)[0m     @     0x561e826bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8232)[0m     @     0x561e826bfa20 method_vectorcall
[2m[36m(pid=8232)[0m     @     0x561e82633bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8232)[0m     @     0x561e826bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8232)[0m     @     0x561e826bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8232)[0m     @     0x561e82634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8232)[0m     @     0x561e826bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8232)[0m     @     0x561e826bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8232)[0m     @     0x561e82634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8232)[0m     @     0x561e826bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8232)[0m     @     0x561e826bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8232)[0m     @     0x561e82634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8232)[0m     @     0x561e826bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=8232)[0m     @     0x561e826bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8232)[0m     @     0x561e82634689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8186)[0m     @     0x7f11d19e54f5 at::Tensor::copy_()
[2m[36m(pid=8186)[0m     @     0x7f11d3eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8186)[0m     @     0x7f11d19e54f5 at::Tensor::copy_()
[2m[36m(pid=8186)[0m     @     0x7f11d7a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8186)[0m     @     0x559ba07d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8189)[0m     @     0x7f3515cfb4f5 at::Tensor::copy_()
[2m[36m(pid=8189)[0m     @     0x7f35181ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8189)[0m     @     0x7f3515cfb4f5 at::Tensor::copy_()
[2m[36m(pid=8189)[0m     @     0x7f351bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8189)[0m     @     0x55e20b49dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8189)[0m     @     0x55e20b3f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8189)[0m     @     0x55e20b483baf _PyEval_EvalCodeWithName
[2m[36m(pid=8189)[0m     @     0x55e20b484a20 method_vectorcall
[2m[36m(pid=8189)[0m     @     0x55e20b3f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8189)[0m     @     0x55e20b483baf _PyEval_EvalCodeWithName
[2m[36m(pid=8189)[0m     @     0x55e20b484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8189)[0m     @     0x55e20b3f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8189)[0m     @     0x55e20b483baf _PyEval_EvalCodeWithName
[2m[36m(pid=8189)[0m     @     0x55e20b484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8189)[0m     @     0x55e20b3f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8241)[0m     @     0x7fcbf11f54f5 at::Tensor::copy_()
[2m[36m(pid=8241)[0m     @     0x7fcbf36c88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8241)[0m     @     0x7fcbf11f54f5 at::Tensor::copy_()
[2m[36m(pid=8241)[0m     @     0x7fcbf72a079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8241)[0m     @     0x556d802d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8241)[0m     @     0x556d80231b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8241)[0m     @     0x556d802bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8241)[0m     @     0x556d802bda20 method_vectorcall
[2m[36m(pid=8241)[0m     @     0x556d80231bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8241)[0m     @     0x556d802bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8241)[0m     @     0x556d802bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8241)[0m     @     0x556d80232689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8241)[0m     @     0x556d802bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8241)[0m     @     0x556d802bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8241)[0m     @     0x556d80232689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8241)[0m     @     0x556d802bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8241)[0m     @     0x556d802bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8241)[0m     @     0x556d80232689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8241)[0m     @     0x556d802bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8241)[0m     @     0x556d802bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8241)[0m     @     0x556d80232689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8120)[0m     @     0x7ee33cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8120)[0m     @     0x55c57c030fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8120)[0m     @     0x55c57bf8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8120)[0m     @     0x55c57c016baf _PyEval_EvalCodeWithName
[2m[36m(pid=8120)[0m     @     0x55c57c017a20 method_vectorcall
[2m[36m(pid=8120)[0m     @     0x55c57bf8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8120)[0m     @     0x55c57c016baf _PyEval_EvalCodeWithName
[2m[36m(pid=8120)[0m     @     0x55c57c017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8120)[0m     @     0x55c57bf8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8120)[0m     @     0x55c57c016baf _PyEval_EvalCodeWithName
[2m[36m(pid=8120)[0m     @     0x55c57c017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8120)[0m     @     0x55c57bf8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8120)[0m     @     0x55c57c016baf _PyEval_EvalCodeWithName
[2m[36m(pid=8120)[0m     @     0x55c57c017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8120)[0m     @     0x55c57bf8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8120)[0m     @     0x55c57c016baf _PyEval_EvalCodeWithName
[2m[36m(pid=8120)[0m     @     0x55c57c017643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8120)[0m     @     0x55c57bf8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x7ee494ccf5a4 at::native::copy_()
[2m[36m(pid=8160)[0m     @     0x7ee4953ba4f5 at::Tensor::copy_()
[2m[36m(pid=8160)[0m     @     0x7ee49788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8157)[0m     @     0x556df18fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8157)[0m     @     0x556df18fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8157)[0m     @     0x556df1871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8157)[0m     @     0x556df18fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8157)[0m     @     0x556df18fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8157)[0m     @     0x556df1871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8157)[0m     @     0x556df18fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8157)[0m     @     0x556df18fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8157)[0m     @     0x556df1871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8157)[0m     @     0x556df18fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8157)[0m     @     0x556df18fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8157)[0m     @     0x556df1871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8134)[0m     @     0x7f01f59328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8134)[0m     @     0x7f01f345f4f5 at::Tensor::copy_()
[2m[36m(pid=8134)[0m     @     0x7f01f950a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8134)[0m     @     0x55b9ffda0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8134)[0m     @     0x55b9ffcfbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8134)[0m     @     0x55b9ffd86baf _PyEval_EvalCodeWithName
[2m[36m(pid=8134)[0m     @     0x55b9ffd87a20 method_vectorcall
[2m[36m(pid=8134)[0m     @     0x55b9ffcfbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8134)[0m     @     0x55b9ffd86baf _PyEval_EvalCodeWithName
[2m[36m(pid=8134)[0m     @     0x55b9ffd87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8134)[0m     @     0x55b9ffcfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8134)[0m     @     0x55b9ffd86baf _PyEval_EvalCodeWithName
[2m[36m(pid=8134)[0m     @     0x55b9ffd87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8134)[0m     @     0x55b9ffcfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8134)[0m     @     0x55b9ffd86baf _PyEval_EvalCodeWithName
[2m[36m(pid=8134)[0m     @     0x55b9ffd87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8134)[0m     @     0x55b9ffcfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8134)[0m     @     0x55b9ffd86baf _PyEval_EvalCodeWithName
[2m[36m(pid=8134)[0m     @     0x55b9ffd87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8134)[0m     @     0x55b9ffcfc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x7f31112754f5 at::Tensor::copy_()
[2m[36m(pid=8192)[0m     @     0x7f311732079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8192)[0m     @     0x563ae65f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8192)[0m     @     0x563ae6554b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x563ae65dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8192)[0m     @     0x563ae65e0a20 method_vectorcall
[2m[36m(pid=8192)[0m     @     0x563ae6554bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x563ae65dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8192)[0m     @     0x563ae65e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8192)[0m     @     0x563ae6555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x563ae65dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8192)[0m     @     0x563ae65e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8192)[0m     @     0x563ae6555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x563ae65dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8192)[0m     @     0x563ae65e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8192)[0m     @     0x563ae6555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x563ae65dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8192)[0m     @     0x563ae65e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8191)[0m     @     0x7f0f7234f4f5 at::Tensor::copy_()
[2m[36m(pid=8191)[0m     @     0x7f0f783fa79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8191)[0m     @     0x55820307cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8191)[0m     @     0x558202fd7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8191)[0m     @     0x558203062baf _PyEval_EvalCodeWithName
[2m[36m(pid=8191)[0m     @     0x558203063a20 method_vectorcall
[2m[36m(pid=8191)[0m     @     0x558202fd7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8191)[0m     @     0x558203062baf _PyEval_EvalCodeWithName
[2m[36m(pid=8191)[0m     @     0x558203063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8191)[0m     @     0x558202fd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8191)[0m     @     0x558203062baf _PyEval_EvalCodeWithName
[2m[36m(pid=8191)[0m     @     0x558203063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8191)[0m     @     0x558202fd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8191)[0m     @     0x558203062baf _PyEval_EvalCodeWithName
[2m[36m(pid=8191)[0m     @     0x558203063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8191)[0m     @     0x558202fd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8191)[0m     @     0x558203062baf _PyEval_EvalCodeWithName
[2m[36m(pid=8191)[0m     @     0x558203063643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8191)[0m     @     0x558202fd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x7f6ec2ffb4f5 at::Tensor::copy_()
[2m[36m(pid=8128)[0m     @     0x7f6ec54ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8195)[0m     @     0x7f15aa1384f5 at::Tensor::copy_()
[2m[36m(pid=8195)[0m     @     0x7f15ac60b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=8186)[0m     @     0x559ba0731b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8186)[0m     @     0x559ba07bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8186)[0m     @     0x559ba07bda20 method_vectorcall
[2m[36m(pid=8186)[0m     @     0x559ba0731bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8186)[0m     @     0x559ba07bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8186)[0m     @     0x559ba07bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8186)[0m     @     0x559ba0732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8186)[0m     @     0x559ba07bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8186)[0m     @     0x559ba07bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8186)[0m     @     0x559ba0732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8186)[0m     @     0x559ba07bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8186)[0m     @     0x559ba07bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8186)[0m     @     0x559ba0732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8186)[0m     @     0x559ba07bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8186)[0m     @     0x559ba07bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8186)[0m     @     0x559ba0732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8189)[0m     @     0x55e20b483baf _PyEval_EvalCodeWithName
[2m[36m(pid=8189)[0m     @     0x55e20b484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8189)[0m     @     0x55e20b3f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8189)[0m     @     0x55e20b483baf _PyEval_EvalCodeWithName
[2m[36m(pid=8189)[0m     @     0x55e20b484643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8189)[0m     @     0x55e20b3f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x7ee4953ba4f5 at::Tensor::copy_()
[2m[36m(pid=8160)[0m     @     0x7ee49b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8160)[0m     @     0x5584ea626fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8160)[0m     @     0x5584ea581b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x5584ea60cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8160)[0m     @     0x5584ea60da20 method_vectorcall
[2m[36m(pid=8160)[0m     @     0x5584ea581bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x5584ea60cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8160)[0m     @     0x5584ea60d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8160)[0m     @     0x5584ea582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x5584ea60cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8160)[0m     @     0x5584ea60d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8160)[0m     @     0x5584ea582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x5584ea60cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8160)[0m     @     0x5584ea60d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8160)[0m     @     0x5584ea582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8160)[0m     @     0x5584ea60cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=8160)[0m     @     0x5584ea60d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8160)[0m     @     0x5584ea582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8192)[0m     @     0x563ae6555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x7f6ec2ffb4f5 at::Tensor::copy_()
[2m[36m(pid=8128)[0m     @     0x7f6ec90a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8128)[0m     @     0x55f45acf2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8128)[0m     @     0x55f45ac4db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x55f45acd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8128)[0m     @     0x55f45acd9a20 method_vectorcall
[2m[36m(pid=8128)[0m     @     0x55f45ac4dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x55f45acd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8128)[0m     @     0x55f45acd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8128)[0m     @     0x55f45ac4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x55f45acd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8128)[0m     @     0x55f45acd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8128)[0m     @     0x55f45ac4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x55f45acd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8128)[0m     @     0x55f45acd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8128)[0m     @     0x55f45ac4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8128)[0m     @     0x55f45acd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=8128)[0m     @     0x55f45acd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8128)[0m     @     0x55f45ac4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8195)[0m     @     0x7f15aa1384f5 at::Tensor::copy_()
[2m[36m(pid=8195)[0m     @     0x7f15b01e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=8195)[0m     @     0x5639a3d0cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=8195)[0m     @     0x5639a3c67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8195)[0m     @     0x5639a3cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=8195)[0m     @     0x5639a3cf3a20 method_vectorcall
[2m[36m(pid=8195)[0m     @     0x5639a3c67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8195)[0m     @     0x5639a3cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=8195)[0m     @     0x5639a3cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8195)[0m     @     0x5639a3c68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8195)[0m     @     0x5639a3cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=8195)[0m     @     0x5639a3cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8195)[0m     @     0x5639a3c68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8195)[0m     @     0x5639a3cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=8195)[0m     @     0x5639a3cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8195)[0m     @     0x5639a3c68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=8195)[0m     @     0x5639a3cf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=8195)[0m     @     0x5639a3cf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=8195)[0m     @     0x5639a3c68689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:18:03,253	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
[2m[36m(pid=8219)[0m E1105 10:18:03.245918  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=4db1cba171d56c3356c9ec1501000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
2020-11-05 10:18:03,254	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
[2m[36m(pid=8219)[0m E1105 10:18:03.246098  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=5cf29c5b7b7ed08d56c9ec1501000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.249208  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=bf6cd9795b8b23124e242e9f01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.249313  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c5da4173a1c517cf4e242e9f01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:18:03.244822  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:18:03.249312  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[36m(pid=8219)[0m E1105 10:18:03.257282  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9ecf84e34eb8e61dc2621d1401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
2020-11-05 10:18:03,266	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
[2m[36m(pid=8219)[0m E1105 10:18:03.257408  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f3cba62d4c01820bc2621d1401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:18:03,267	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
[2m[36m(pid=8219)[0m E1105 10:18:03.257526  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.257594  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:18:03,268	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:18:03,268	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
[2m[33m(pid=raylet)[0m E1105 10:18:03.257375  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:18:03,279	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
[2m[33m(pid=raylet)[0m E1105 10:18:03.257480  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:18:03.266690  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:18:03,280	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
[2m[33m(pid=raylet)[0m E1105 10:18:03.267792  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:18:03,280	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
[2m[33m(pid=raylet)[0m E1105 10:18:03.271608  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:18:03,281	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:18:03,286	ERROR trial_runner.py:567 -- Trial PPO_jss_env_2bf03_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=8219, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 25.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.25 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_2bf03_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_2bf03_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_2bf03_00000_0_2020-11-05_10-17-56/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
[2m[36m(pid=8219)[0m E1105 10:18:03.266655  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
2020-11-05 10:18:03,293	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.

[2m[36m(pid=8219)[0m E1105 10:18:03.266785  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}2020-11-05 10:18:03,294	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.

[2m[36m(pid=8219)[0m E1105 10:18:03.267889  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=8e79ac7e91b36714821ddf4301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
== Status ==
Memory usage on this node: 25.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.25 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_2bf03_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_2bf03_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_2bf03_00000_0_2020-11-05_10-17-56/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:18:03,295	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.
[2m[36m(pid=8219)[0m E1105 10:18:03.268023  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=428a4b4025d91890821ddf4301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}

[2m[36m(pid=8219)[0m E1105 10:18:03.271515  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=170fdfd5d34985a7e0497dac01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}2020-11-05 10:18:03,297	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.

[2m[36m(pid=8219)[0m E1105 10:18:03.271659  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=89f63fee54d6858ee0497dac01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.274308  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.274443  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.274555  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.274626  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.278173  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.278317  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.284073  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=37f0cff2c5fdc1c790aded9101000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=90aded9101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.284199  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ff02fc67a478da9090aded9101000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=90aded9101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:18:03.274276  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:18:03.274395  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:18:03.278136  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:18:03.283977  8059  8059 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[36m(pid=8219)[0m E1105 10:18:03.285470  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=fde3d5eda9f525d7a97540c201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.285550  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=d16c21eef3935840a97540c201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.287286  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9e78156cc0f1c18db2413f7201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.287364  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=99a573b913884b0db2413f7201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.290071  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.290292  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d88ec84d5baca957a97540c201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.290669  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=c6f8a2750fad0b0de0497dac01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.290902  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=10a4a4113c6c36ea43fb47bd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.291632  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d7b1ed864d13e17f31c3fed901000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.291746  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=726b8519c6d92b8e8168b55d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=8219)[0m E1105 10:18:03.291818  8219  9328 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e8fef079b20e071c8168b55d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=8219)[0m E1105 10:18:03.291977  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=457f03c785986c89252160a301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.292215  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=626c71df3976eafd4e242e9f01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.292395  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=38e2d2d27b716bfb821ddf4301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=821ddf4301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.292747  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=ad47e6e6a1a1660b0314ce3001000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.292847  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=6b6365ef3364d41390aded9101000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=90aded9101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.292907  8219  9328 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=575b3faf45c7d0bd8168b55d01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.293093  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=9d0a2db204e8f81056c9ec1501000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.293375  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=8fbf1bd7de98d288c2621d1401000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=8219)[0m E1105 10:18:03.293442  8219  9328 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=716ad7ba0ea412bfb2413f7201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_2bf03_00000])
