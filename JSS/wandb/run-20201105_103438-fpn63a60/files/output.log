2020-11-05 10:34:41,879	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_844c5_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=20861)[0m 2020-11-05 10:34:44,695	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=20861)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=20861)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=20861)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=20861)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=20861)[0m 
[2m[36m(pid=20861)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=20748)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20748)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20748)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20746)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20746)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20746)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20746)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20746)[0m *** SIGSEGV (@0x0) received by PID 20746 (TID 0x7f981cf5c700) from PID 0; stack trace: ***
[2m[36m(pid=20858)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20858)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20858)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20858)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20858)[0m *** SIGSEGV (@0x0) received by PID 20858 (TID 0x7f6af4550700) from PID 0; stack trace: ***
[2m[36m(pid=20858)[0m     @     0x7f6af4129390 (unknown)
[2m[36m(pid=20858)[0m     @     0x7f3bf3d2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20858)[0m     @     0x7f3bf34577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20838)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20838)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20838)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20838)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20838)[0m *** SIGSEGV (@0x0) received by PID 20838 (TID 0x7f067f688700) from PID 0; stack trace: ***
[2m[36m(pid=20838)[0m     @     0x7f067f261390 (unknown)
[2m[36m(pid=20838)[0m     @     0x7ed77f124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20838)[0m     @     0x7ed77e84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20737)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20737)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20737)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20737)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20737)[0m *** SIGSEGV (@0x0) received by PID 20737 (TID 0x7f1d64980700) from PID 0; stack trace: ***
[2m[36m(pid=20737)[0m     @     0x7f1d64559390 (unknown)
[2m[36m(pid=20737)[0m     @     0x7eee644f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20737)[0m     @     0x7eee63c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20802)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20802)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20802)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20802)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20802)[0m *** SIGSEGV (@0x0) received by PID 20802 (TID 0x7f08fb34f700) from PID 0; stack trace: ***
[2m[36m(pid=20802)[0m     @     0x7f08faf28390 (unknown)
[2m[36m(pid=20802)[0m     @     0x7ed9faea6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20802)[0m     @     0x7ed9fa5d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20842)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20842)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20842)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20842)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20842)[0m *** SIGSEGV (@0x0) received by PID 20842 (TID 0x7ff9964e3700) from PID 0; stack trace: ***
[2m[36m(pid=20842)[0m     @     0x7ff9960bc390 (unknown)
[2m[36m(pid=20842)[0m     @     0x7fca9604df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20842)[0m     @     0x7fca957787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20762)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20762)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20762)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20762)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20762)[0m *** SIGSEGV (@0x0) received by PID 20762 (TID 0x7ff8a5010700) from PID 0; stack trace: ***
[2m[36m(pid=20762)[0m     @     0x7ff8a4be9390 (unknown)
[2m[36m(pid=20762)[0m     @     0x7fc9a4b64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20762)[0m     @     0x7fc9a428f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20793)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20793)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20793)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20793)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20793)[0m *** SIGSEGV (@0x0) received by PID 20793 (TID 0x7f8aa9255700) from PID 0; stack trace: ***
[2m[36m(pid=20793)[0m     @     0x7f8aa8e2e390 (unknown)
[2m[36m(pid=20793)[0m     @     0x7f5ba8dc9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20793)[0m     @     0x7f5ba84f47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20793)[0m     @     0x7f5ba84f78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20796)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20796)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20796)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20796)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20796)[0m *** SIGSEGV (@0x0) received by PID 20796 (TID 0x7f297a823700) from PID 0; stack trace: ***
[2m[36m(pid=20796)[0m     @     0x7f297a3fc390 (unknown)
[2m[36m(pid=20796)[0m     @     0x7efa7a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20796)[0m     @     0x7efa79a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20825)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20825)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20825)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20825)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20825)[0m *** SIGSEGV (@0x0) received by PID 20825 (TID 0x7fb4232f5700) from PID 0; stack trace: ***
[2m[36m(pid=20825)[0m     @     0x7fb422ece390 (unknown)
[2m[36m(pid=20825)[0m     @     0x7f8522e66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20825)[0m     @     0x7f85225917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20866)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20866)[0m *** SIGSEGV (@0x0) received by PID 20866 (TID 0x7f5742ea0700) from PID 0; stack trace: ***
[2m[36m(pid=20866)[0m     @     0x7f5742a79390 (unknown)
[2m[36m(pid=20866)[0m     @     0x7f28429fff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20866)[0m     @     0x7f284212a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20811)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20811)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20811)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20811)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20811)[0m *** SIGSEGV (@0x0) received by PID 20811 (TID 0x7f970222a700) from PID 0; stack trace: ***
[2m[36m(pid=20811)[0m     @     0x7f9701e03390 (unknown)
[2m[36m(pid=20811)[0m     @     0x7f6801d77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20811)[0m     @     0x7f68014a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20830)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20830)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20830)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20830)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20830)[0m *** SIGSEGV (@0x0) received by PID 20830 (TID 0x7f64f639c700) from PID 0; stack trace: ***
[2m[36m(pid=20830)[0m     @     0x7f64f5f75390 (unknown)
[2m[36m(pid=20830)[0m     @     0x7f35f5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20830)[0m     @     0x7f35f554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20867)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20867)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20867)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20867)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20867)[0m *** SIGSEGV (@0x0) received by PID 20867 (TID 0x7f2094086700) from PID 0; stack trace: ***
[2m[36m(pid=20867)[0m     @     0x7f2093c5f390 (unknown)
[2m[36m(pid=20867)[0m     @     0x7ef193af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20867)[0m     @     0x7ef1932207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20827)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20827)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20827)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20827)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20827)[0m *** SIGSEGV (@0x0) received by PID 20827 (TID 0x7f59d43d1700) from PID 0; stack trace: ***
[2m[36m(pid=20827)[0m     @     0x7f59d3faa390 (unknown)
[2m[36m(pid=20827)[0m     @     0x7f2ad3e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20752)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20752)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20752)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20752)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20752)[0m *** SIGSEGV (@0x0) received by PID 20752 (TID 0x7fb345489700) from PID 0; stack trace: ***
[2m[36m(pid=20752)[0m     @     0x7fb345062390 (unknown)
[2m[36m(pid=20752)[0m     @     0x7f8444fe3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20752)[0m     @     0x7f844470e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20818)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20818)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20818)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20818)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20818)[0m *** SIGSEGV (@0x0) received by PID 20818 (TID 0x7f9c77ef2700) from PID 0; stack trace: ***
[2m[36m(pid=20818)[0m     @     0x7f9c77acb390 (unknown)
[2m[36m(pid=20818)[0m     @     0x7f6d77a63f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20818)[0m     @     0x7f6d7718e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20831)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20831)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20831)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20831)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20831)[0m *** SIGSEGV (@0x0) received by PID 20831 (TID 0x7f9f565d7700) from PID 0; stack trace: ***
[2m[36m(pid=20831)[0m     @     0x7f9f561b0390 (unknown)
[2m[36m(pid=20831)[0m     @     0x7f705613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20831)[0m     @     0x7f70558657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20815)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20815)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20815)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20815)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20815)[0m *** SIGSEGV (@0x0) received by PID 20815 (TID 0x7f39672ad700) from PID 0; stack trace: ***
[2m[36m(pid=20815)[0m     @     0x7f3966e86390 (unknown)
[2m[36m(pid=20815)[0m     @     0x7f0a66e26f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20815)[0m     @     0x7f0a665517db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20747)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20747)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20747)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20747)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20747)[0m *** SIGSEGV (@0x0) received by PID 20747 (TID 0x7fe2587bc700) from PID 0; stack trace: ***
[2m[36m(pid=20747)[0m     @     0x7fe258395390 (unknown)
[2m[36m(pid=20747)[0m     @     0x7fb358333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20747)[0m     @     0x7fb357a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20816)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20816)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20816)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20816)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20816)[0m *** SIGSEGV (@0x0) received by PID 20816 (TID 0x7f4bcfdfe700) from PID 0; stack trace: ***
[2m[36m(pid=20816)[0m     @     0x7f4bcf9d7390 (unknown)
[2m[36m(pid=20816)[0m     @     0x7f1ccf751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20816)[0m     @     0x7f1ccee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20868)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20868)[0m *** SIGSEGV (@0x0) received by PID 20868 (TID 0x7f3db99df700) from PID 0; stack trace: ***
[2m[36m(pid=20868)[0m     @     0x7f3db95b8390 (unknown)
[2m[36m(pid=20868)[0m     @     0x7f0eb94e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20868)[0m     @     0x7f0eb8c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20868)[0m     @     0x7f0eb8c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20837)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20837)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20837)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20837)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20837)[0m *** SIGSEGV (@0x0) received by PID 20837 (TID 0x7f1b21eaf700) from PID 0; stack trace: ***
[2m[36m(pid=20837)[0m     @     0x7f1b21a88390 (unknown)
[2m[36m(pid=20837)[0m     @     0x7eec21a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20837)[0m     @     0x7eec211357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20837)[0m     @     0x7eec211388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20753)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20753)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20753)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20753)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20753)[0m *** SIGSEGV (@0x0) received by PID 20753 (TID 0x7f024a554700) from PID 0; stack trace: ***
[2m[36m(pid=20753)[0m     @     0x7f024a12d390 (unknown)
[2m[36m(pid=20753)[0m     @     0x7ed34a0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20753)[0m     @     0x7ed3497f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20754)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20754)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20754)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20754)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20754)[0m *** SIGSEGV (@0x0) received by PID 20754 (TID 0x7fa1ad4d2700) from PID 0; stack trace: ***
[2m[36m(pid=20754)[0m     @     0x7fa1ad0ab390 (unknown)
[2m[36m(pid=20754)[0m     @     0x7f72ad06cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20754)[0m     @     0x7f72ac7977db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20852)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20852)[0m *** SIGSEGV (@0x0) received by PID 20852 (TID 0x7f76f49a3700) from PID 0; stack trace: ***
[2m[36m(pid=20852)[0m     @     0x7f76f457c390 (unknown)
[2m[36m(pid=20852)[0m     @     0x7f47f44f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20852)[0m     @     0x7f47f3c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20736)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20736)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20736)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20736)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20736)[0m *** SIGSEGV (@0x0) received by PID 20736 (TID 0x7fdf0e544700) from PID 0; stack trace: ***
[2m[36m(pid=20736)[0m     @     0x7fdf0e11d390 (unknown)
[2m[36m(pid=20736)[0m     @     0x7fb00e0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20736)[0m     @     0x7fb00d7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20734)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20734)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20734)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20734)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20734)[0m *** SIGSEGV (@0x0) received by PID 20734 (TID 0x7f86a076d700) from PID 0; stack trace: ***
[2m[36m(pid=20734)[0m     @     0x7f86a0346390 (unknown)
[2m[36m(pid=20734)[0m     @     0x7f57a02d7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20734)[0m     @     0x7f579fa027db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20735)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20735)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20735)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20735)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20735)[0m *** SIGSEGV (@0x0) received by PID 20735 (TID 0x7f58fe417700) from PID 0; stack trace: ***
[2m[36m(pid=20735)[0m     @     0x7f58fdff0390 (unknown)
[2m[36m(pid=20735)[0m     @     0x7f29fde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20735)[0m     @     0x7f29fd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20846)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20846)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20846)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20846)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20846)[0m *** SIGSEGV (@0x0) received by PID 20846 (TID 0x7f8eff103700) from PID 0; stack trace: ***
[2m[36m(pid=20846)[0m     @     0x7f8efecdc390 (unknown)
[2m[36m(pid=20846)[0m     @     0x7f5ffec6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20846)[0m     @     0x7f5ffe3957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20846)[0m     @     0x7f5ffe3988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20844)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20844)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20844)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20844)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20844)[0m *** SIGSEGV (@0x0) received by PID 20844 (TID 0x7f7ad0897700) from PID 0; stack trace: ***
[2m[36m(pid=20844)[0m     @     0x7f7ad0470390 (unknown)
[2m[36m(pid=20844)[0m     @     0x7f4bd0333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20844)[0m     @     0x7f4bcfa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20789)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20789)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20789)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20789)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20789)[0m *** SIGSEGV (@0x0) received by PID 20789 (TID 0x7f4e72e86700) from PID 0; stack trace: ***
[2m[36m(pid=20789)[0m     @     0x7f4e72a5f390 (unknown)
[2m[36m(pid=20789)[0m     @     0x7f1f7270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20789)[0m     @     0x7f1f71e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20766)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20766)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20766)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20766)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20766)[0m *** SIGSEGV (@0x0) received by PID 20766 (TID 0x7f082c098700) from PID 0; stack trace: ***
[2m[36m(pid=20766)[0m     @     0x7f082bc71390 (unknown)
[2m[36m(pid=20766)[0m     @     0x7ed92baf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20766)[0m     @     0x7ed92b2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20749)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20749)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20749)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20749)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20749)[0m *** SIGSEGV (@0x0) received by PID 20749 (TID 0x7fb62085e700) from PID 0; stack trace: ***
[2m[36m(pid=20749)[0m     @     0x7fb620437390 (unknown)
[2m[36m(pid=20749)[0m     @     0x7f8720333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20749)[0m     @     0x7f871fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20745)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20745)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20745)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20745)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20745)[0m *** SIGSEGV (@0x0) received by PID 20745 (TID 0x7f324b1e0700) from PID 0; stack trace: ***
[2m[36m(pid=20745)[0m     @     0x7f324adb9390 (unknown)
[2m[36m(pid=20745)[0m     @     0x7f034acfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20745)[0m     @     0x7f034a4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20739)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20739)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20739)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20739)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20739)[0m *** SIGSEGV (@0x0) received by PID 20739 (TID 0x7fc2048bd700) from PID 0; stack trace: ***
[2m[36m(pid=20739)[0m     @     0x7fc204496390 (unknown)
[2m[36m(pid=20739)[0m     @     0x7f9304333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20739)[0m     @     0x7f9303a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20828)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20828)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20828)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20828)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20828)[0m *** SIGSEGV (@0x0) received by PID 20828 (TID 0x7fa0ef597700) from PID 0; stack trace: ***
[2m[36m(pid=20828)[0m     @     0x7fa0ef170390 (unknown)
[2m[36m(pid=20828)[0m     @     0x7f71eef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20828)[0m     @     0x7f71ee63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20748)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20748)[0m *** SIGSEGV (@0x0) received by PID 20748 (TID 0x7f240b944700) from PID 0; stack trace: ***
[2m[36m(pid=20748)[0m     @     0x7f240b51d390 (unknown)
[2m[36m(pid=20748)[0m     @     0x7ef50b48ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20748)[0m     @     0x7ef50abba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20748)[0m     @     0x7ef50abbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20748)[0m     @     0x7ef50abbdad3 at::TensorIterator::for_each()
[2m[36m(pid=20746)[0m     @     0x7f981cb35390 (unknown)
[2m[36m(pid=20746)[0m     @     0x7f691cacdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20746)[0m     @     0x7f691c1f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20746)[0m     @     0x7f691c1fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20746)[0m     @     0x7f691c1fbad3 at::TensorIterator::for_each()
[2m[36m(pid=20794)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20794)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20794)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20810)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20810)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20810)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20799)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20799)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20799)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20795)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20795)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20795)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20813)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20813)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20813)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20760)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20760)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20760)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20743)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20743)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20743)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20743)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20743)[0m *** SIGSEGV (@0x0) received by PID 20743 (TID 0x7f4ed4ce5700) from PID 0; stack trace: ***
[2m[36m(pid=20805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20805)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20738)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20738)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20738)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20808)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20808)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20808)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20757)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20757)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20757)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20858)[0m     @     0x7f3bf345a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20858)[0m     @     0x7f3bf345aad3 at::TensorIterator::for_each()
[2m[36m(pid=20858)[0m     @     0x7f3bf345ad91 at::TensorIterator::for_each()
[2m[36m(pid=20838)[0m     @     0x7ed77e8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20838)[0m     @     0x7ed77e852ad3 at::TensorIterator::for_each()
[2m[36m(pid=20737)[0m     @     0x7eee63c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20737)[0m     @     0x7eee63c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=20802)[0m     @     0x7ed9fa5d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20802)[0m     @     0x7ed9fa5d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=20802)[0m     @     0x7ed9fa5d4d91 at::TensorIterator::for_each()
[2m[36m(pid=20842)[0m     @     0x7fca9577b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20842)[0m     @     0x7fca9577bad3 at::TensorIterator::for_each()
[2m[36m(pid=20842)[0m     @     0x7fca9577bd91 at::TensorIterator::for_each()
[2m[36m(pid=20762)[0m     @     0x7fc9a42928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20762)[0m     @     0x7fc9a4292ad3 at::TensorIterator::for_each()
[2m[36m(pid=20793)[0m     @     0x7f5ba84f7ad3 at::TensorIterator::for_each()
[2m[36m(pid=20793)[0m     @     0x7f5ba84f7d91 at::TensorIterator::for_each()
[2m[36m(pid=20793)[0m     @     0x7f5ba8ddab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20793)[0m     @     0x7f5ba8dfdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20796)[0m     @     0x7efa79a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20796)[0m     @     0x7efa79a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=20825)[0m     @     0x7f85225948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20825)[0m     @     0x7f8522594ad3 at::TensorIterator::for_each()
[2m[36m(pid=20866)[0m     @     0x7f284212d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20866)[0m     @     0x7f284212dad3 at::TensorIterator::for_each()
[2m[36m(pid=20866)[0m     @     0x7f284212dd91 at::TensorIterator::for_each()
[2m[36m(pid=20866)[0m     @     0x7f2842a10b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20866)[0m     @     0x7f2842a33c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20811)[0m     @     0x7f68014a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20811)[0m     @     0x7f68014a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=20829)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20829)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20829)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20829)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20829)[0m *** SIGSEGV (@0x0) received by PID 20829 (TID 0x7f816fa80700) from PID 0; stack trace: ***
[2m[36m(pid=20830)[0m     @     0x7f35f55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20830)[0m     @     0x7f35f5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=20830)[0m     @     0x7f35f5552d91 at::TensorIterator::for_each()
[2m[36m(pid=20830)[0m     @     0x7f35f5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20830)[0m     @     0x7f35f5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20867)[0m     @     0x7ef1932238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20867)[0m     @     0x7ef193223ad3 at::TensorIterator::for_each()
[2m[36m(pid=20867)[0m     @     0x7ef193223d91 at::TensorIterator::for_each()
[2m[36m(pid=20867)[0m     @     0x7ef193b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20827)[0m     @     0x7f2ad35367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20827)[0m     @     0x7f2ad35398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20827)[0m     @     0x7f2ad3539ad3 at::TensorIterator::for_each()
[2m[36m(pid=20752)[0m     @     0x7f84447118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20752)[0m     @     0x7f8444711ad3 at::TensorIterator::for_each()
[2m[36m(pid=20818)[0m     @     0x7f6d771918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20818)[0m     @     0x7f6d77191ad3 at::TensorIterator::for_each()
[2m[36m(pid=20871)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20871)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20871)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20824)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20824)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20824)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20850)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20850)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20831)[0m     @     0x7f70558688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20831)[0m     @     0x7f7055868ad3 at::TensorIterator::for_each()
[2m[36m(pid=20831)[0m     @     0x7f7055868d91 at::TensorIterator::for_each()
[2m[36m(pid=20831)[0m     @     0x7f705614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20831)[0m     @     0x7f705616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20815)[0m     @     0x7f0a665548f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20815)[0m     @     0x7f0a66554ad3 at::TensorIterator::for_each()
[2m[36m(pid=20747)[0m     @     0x7fb357a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20747)[0m     @     0x7fb357a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=20747)[0m     @     0x7fb357a61d91 at::TensorIterator::for_each()
[2m[36m(pid=20816)[0m     @     0x7f1ccee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20816)[0m     @     0x7f1ccee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=20868)[0m     @     0x7f0eb8c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=20868)[0m     @     0x7f0eb8c11d91 at::TensorIterator::for_each()
[2m[36m(pid=20868)[0m     @     0x7f0eb94f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20868)[0m     @     0x7f0eb9517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20868)[0m     @     0x7f0eb89b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20868)[0m     @     0x7f0eb89b7388 at::native::copy_impl()
[2m[36m(pid=20868)[0m     @     0x7f0eb89b95a4 at::native::copy_()
[2m[36m(pid=20837)[0m     @     0x7eec21138ad3 at::TensorIterator::for_each()
[2m[36m(pid=20837)[0m     @     0x7eec21138d91 at::TensorIterator::for_each()
[2m[36m(pid=20837)[0m     @     0x7eec21a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20837)[0m     @     0x7eec21a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20837)[0m     @     0x7eec20ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20837)[0m     @     0x7eec20ede388 at::native::copy_impl()
[2m[36m(pid=20753)[0m     @     0x7ed3497fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20753)[0m     @     0x7ed3497fbad3 at::TensorIterator::for_each()
[2m[36m(pid=20753)[0m     @     0x7ed3497fbd91 at::TensorIterator::for_each()
[2m[36m(pid=20753)[0m     @     0x7ed34a0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20753)[0m     @     0x7ed34a101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20753)[0m     @     0x7ed3495a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20753)[0m     @     0x7ed3495a1388 at::native::copy_impl()
[2m[36m(pid=20754)[0m     @     0x7f72ac79a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20754)[0m     @     0x7f72ac79aad3 at::TensorIterator::for_each()
[2m[36m(pid=20754)[0m     @     0x7f72ac79ad91 at::TensorIterator::for_each()
[2m[36m(pid=20754)[0m     @     0x7f72ad07db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20754)[0m     @     0x7f72ad0a0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20754)[0m     @     0x7f72ac542a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20754)[0m     @     0x7f72ac540388 at::native::copy_impl()
[2m[36m(pid=20852)[0m     @     0x7f47f3c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20852)[0m     @     0x7f47f3c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=20852)[0m     @     0x7f47f3c24d91 at::TensorIterator::for_each()
[2m[36m(pid=20852)[0m     @     0x7f47f4507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20852)[0m     @     0x7f47f452ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20852)[0m     @     0x7f47f39cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20852)[0m     @     0x7f47f39ca388 at::native::copy_impl()
[2m[36m(pid=20736)[0m     @     0x7fb00d7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20736)[0m     @     0x7fb00d7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=20736)[0m     @     0x7fb00d7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=20736)[0m     @     0x7fb00e0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20736)[0m     @     0x7fb00e101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20736)[0m     @     0x7fb00d5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20736)[0m     @     0x7fb00d5a1388 at::native::copy_impl()
[2m[36m(pid=20734)[0m     @     0x7f579fa058f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20734)[0m     @     0x7f579fa05ad3 at::TensorIterator::for_each()
[2m[36m(pid=20734)[0m     @     0x7f579fa05d91 at::TensorIterator::for_each()
[2m[36m(pid=20734)[0m     @     0x7f57a02e8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20734)[0m     @     0x7f57a030bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20734)[0m     @     0x7f579f7ada93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20734)[0m     @     0x7f579f7ab388 at::native::copy_impl()
[2m[36m(pid=20734)[0m     @     0x7f579f7ad5a4 at::native::copy_()
[2m[36m(pid=20735)[0m     @     0x7f29fd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20735)[0m     @     0x7f29fd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=20735)[0m     @     0x7f29fd552d91 at::TensorIterator::for_each()
[2m[36m(pid=20735)[0m     @     0x7f29fde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20735)[0m     @     0x7f29fde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20735)[0m     @     0x7f29fd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20735)[0m     @     0x7f29fd2f8388 at::native::copy_impl()
[2m[36m(pid=20846)[0m     @     0x7f5ffe398ad3 at::TensorIterator::for_each()
[2m[36m(pid=20846)[0m     @     0x7f5ffe398d91 at::TensorIterator::for_each()
[2m[36m(pid=20846)[0m     @     0x7f5ffec7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20846)[0m     @     0x7f5ffec9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20846)[0m     @     0x7f5ffe140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20846)[0m     @     0x7f5ffe13e388 at::native::copy_impl()
[2m[36m(pid=20846)[0m     @     0x7f5ffe1405a4 at::native::copy_()
[2m[36m(pid=20844)[0m     @     0x7f4bcfa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20844)[0m     @     0x7f4bcfa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=20844)[0m     @     0x7f4bcfa61d91 at::TensorIterator::for_each()
[2m[36m(pid=20844)[0m     @     0x7f4bd0344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20844)[0m     @     0x7f4bd0367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20844)[0m     @     0x7f4bcf809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20844)[0m     @     0x7f4bcf807388 at::native::copy_impl()
[2m[36m(pid=20789)[0m     @     0x7f1f71e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20789)[0m     @     0x7f1f71e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=20789)[0m     @     0x7f1f71e38d91 at::TensorIterator::for_each()
[2m[36m(pid=20789)[0m     @     0x7f1f7271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20789)[0m     @     0x7f1f7273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20789)[0m     @     0x7f1f71be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20789)[0m     @     0x7f1f71bde388 at::native::copy_impl()
[2m[36m(pid=20766)[0m     @     0x7ed92b2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20766)[0m     @     0x7ed92b223ad3 at::TensorIterator::for_each()
[2m[36m(pid=20766)[0m     @     0x7ed92b223d91 at::TensorIterator::for_each()
[2m[36m(pid=20766)[0m     @     0x7ed92bb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20766)[0m     @     0x7ed92bb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20766)[0m     @     0x7ed92afcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20766)[0m     @     0x7ed92afc9388 at::native::copy_impl()
[2m[36m(pid=20749)[0m     @     0x7f871fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20749)[0m     @     0x7f871fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=20749)[0m     @     0x7f871fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=20749)[0m     @     0x7f8720344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20749)[0m     @     0x7f8720367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20749)[0m     @     0x7f871f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20749)[0m     @     0x7f871f807388 at::native::copy_impl()
[2m[36m(pid=20749)[0m     @     0x7f871f8095a4 at::native::copy_()
[2m[36m(pid=20745)[0m     @     0x7f034a42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20745)[0m     @     0x7f034a42aad3 at::TensorIterator::for_each()
[2m[36m(pid=20745)[0m     @     0x7f034a42ad91 at::TensorIterator::for_each()
[2m[36m(pid=20745)[0m     @     0x7f034ad0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20745)[0m     @     0x7f034ad30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20745)[0m     @     0x7f034a1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20745)[0m     @     0x7f034a1d0388 at::native::copy_impl()
[2m[36m(pid=20739)[0m     @     0x7f9303a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20739)[0m     @     0x7f9303a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=20739)[0m     @     0x7f9303a61d91 at::TensorIterator::for_each()
[2m[36m(pid=20739)[0m     @     0x7f9304344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20739)[0m     @     0x7f9304367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20739)[0m     @     0x7f9303809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20739)[0m     @     0x7f9303807388 at::native::copy_impl()
[2m[36m(pid=20828)[0m     @     0x7f71ee6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20828)[0m     @     0x7f71ee641ad3 at::TensorIterator::for_each()
[2m[36m(pid=20828)[0m     @     0x7f71ee641d91 at::TensorIterator::for_each()
[2m[36m(pid=20828)[0m     @     0x7f71eef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20828)[0m     @     0x7f71eef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20828)[0m     @     0x7f71ee3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20828)[0m     @     0x7f71ee3e7388 at::native::copy_impl()
[2m[36m(pid=20828)[0m     @     0x7f71ee3e95a4 at::native::copy_()
[2m[36m(pid=20826)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20826)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20826)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20826)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20826)[0m *** SIGSEGV (@0x0) received by PID 20826 (TID 0x7fa0c59dc700) from PID 0; stack trace: ***
[2m[36m(pid=20826)[0m     @     0x7fa0c55b5390 (unknown)
[2m[36m(pid=20826)[0m     @     0x7f71c54e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20826)[0m     @     0x7f71c4c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20826)[0m     @     0x7f71c4c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20853)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20853)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20853)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20853)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20853)[0m *** SIGSEGV (@0x0) received by PID 20853 (TID 0x7ff241d6e700) from PID 0; stack trace: ***
[2m[36m(pid=20853)[0m     @     0x7ff241947390 (unknown)
[2m[36m(pid=20853)[0m     @     0x7fc3417f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20853)[0m     @     0x7fc340f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20767)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20767)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20767)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20767)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20767)[0m *** SIGSEGV (@0x0) received by PID 20767 (TID 0x7fb1f97fe700) from PID 0; stack trace: ***
[2m[36m(pid=20767)[0m     @     0x7fb1f93d7390 (unknown)
[2m[36m(pid=20767)[0m     @     0x7f82f9377f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20767)[0m     @     0x7f82f8aa27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20740)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20740)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20740)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20740)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20740)[0m *** SIGSEGV (@0x0) received by PID 20740 (TID 0x7fe3bc87a700) from PID 0; stack trace: ***
[2m[36m(pid=20740)[0m     @     0x7fe3bc453390 (unknown)
[2m[36m(pid=20740)[0m     @     0x7fb4bc333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20740)[0m     @     0x7fb4bba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20740)[0m     @     0x7fb4bba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20740)[0m     @     0x7fb4bba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=20860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20860)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20860)[0m *** SIGSEGV (@0x0) received by PID 20860 (TID 0x7fb00f851700) from PID 0; stack trace: ***
[2m[36m(pid=20860)[0m     @     0x7fb00f42a390 (unknown)
[2m[36m(pid=20860)[0m     @     0x7f810f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20860)[0m     @     0x7f810e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20860)[0m     @     0x7f810e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20758)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20758)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20758)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20758)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20758)[0m *** SIGSEGV (@0x0) received by PID 20758 (TID 0x7f71615e2700) from PID 0; stack trace: ***
[2m[36m(pid=20758)[0m     @     0x7f71611bb390 (unknown)
[2m[36m(pid=20758)[0m     @     0x7f42610b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20758)[0m     @     0x7f42607e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20835)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20835)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20835)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20835)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20835)[0m *** SIGSEGV (@0x0) received by PID 20835 (TID 0x7f4f3e5d0700) from PID 0; stack trace: ***
[2m[36m(pid=20835)[0m     @     0x7f4f3e1a9390 (unknown)
[2m[36m(pid=20835)[0m     @     0x7f203e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20835)[0m     @     0x7f203d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20768)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20768)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20768)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20768)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20768)[0m *** SIGSEGV (@0x0) received by PID 20768 (TID 0x7ff393118700) from PID 0; stack trace: ***
[2m[36m(pid=20768)[0m     @     0x7ff392cf1390 (unknown)
[2m[36m(pid=20768)[0m     @     0x7fc492c8ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20768)[0m     @     0x7fc4923ba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20768)[0m     @     0x7fc4923bd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20819)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20819)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20819)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20819)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20819)[0m *** SIGSEGV (@0x0) received by PID 20819 (TID 0x7f093a80a700) from PID 0; stack trace: ***
[2m[36m(pid=20819)[0m     @     0x7f093a3e3390 (unknown)
[2m[36m(pid=20819)[0m     @     0x7eda3a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20819)[0m     @     0x7eda39a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20864)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20864)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20864)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20864)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20864)[0m *** SIGSEGV (@0x0) received by PID 20864 (TID 0x7fc0d94f5700) from PID 0; stack trace: ***
[2m[36m(pid=20864)[0m     @     0x7fc0d90ce390 (unknown)
[2m[36m(pid=20809)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20809)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20809)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20748)[0m     @     0x7ef50abbdd91 at::TensorIterator::for_each()
[2m[36m(pid=20748)[0m     @     0x7ef50b4a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20748)[0m     @     0x7ef50b4c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20748)[0m     @     0x7ef50a965a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20748)[0m     @     0x7ef50a963388 at::native::copy_impl()
[2m[36m(pid=20748)[0m     @     0x7ef50a9655a4 at::native::copy_()
[2m[36m(pid=20798)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20798)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20798)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20798)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20798)[0m *** SIGSEGV (@0x0) received by PID 20798 (TID 0x7ffaaa573700) from PID 0; stack trace: ***
[2m[36m(pid=20798)[0m     @     0x7ffaaa14c390 (unknown)
[2m[36m(pid=20798)[0m     @     0x7fcbaa0faf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20798)[0m     @     0x7fcba98257db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20746)[0m     @     0x7f691c1fbd91 at::TensorIterator::for_each()
[2m[36m(pid=20746)[0m     @     0x7f691cadeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20746)[0m     @     0x7f691cb01c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20746)[0m     @     0x7f691bfa3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20746)[0m     @     0x7f691bfa1388 at::native::copy_impl()
[2m[36m(pid=20744)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20744)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20744)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20744)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20744)[0m *** SIGSEGV (@0x0) received by PID 20744 (TID 0x7f9761a63700) from PID 0; stack trace: ***
[2m[36m(pid=20744)[0m     @     0x7f976163c390 (unknown)
[2m[36m(pid=20744)[0m     @     0x7f68615e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20744)[0m     @     0x7f6860d0f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20794)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20794)[0m *** SIGSEGV (@0x0) received by PID 20794 (TID 0x7f9cb97ce700) from PID 0; stack trace: ***
[2m[36m(pid=20794)[0m     @     0x7f9cb93a7390 (unknown)
[2m[36m(pid=20794)[0m     @     0x7f6db933af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20794)[0m     @     0x7f6db8a657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20810)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20810)[0m *** SIGSEGV (@0x0) received by PID 20810 (TID 0x7fe0f2def700) from PID 0; stack trace: ***
[2m[36m(pid=20810)[0m     @     0x7fe0f29c8390 (unknown)
[2m[36m(pid=20810)[0m     @     0x7fb1f295ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20810)[0m     @     0x7fb1f208a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20810)[0m     @     0x7fb1f208d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20799)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20799)[0m *** SIGSEGV (@0x0) received by PID 20799 (TID 0x7fec2bede700) from PID 0; stack trace: ***
[2m[36m(pid=20799)[0m     @     0x7fec2bab7390 (unknown)
[2m[36m(pid=20799)[0m     @     0x7fbd2b9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20799)[0m     @     0x7fbd2b0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20799)[0m     @     0x7fbd2b0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20832)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20832)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20832)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20832)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20832)[0m *** SIGSEGV (@0x0) received by PID 20832 (TID 0x7ff4921b6700) from PID 0; stack trace: ***
[2m[36m(pid=20832)[0m     @     0x7ff491d8f390 (unknown)
[2m[36m(pid=20832)[0m     @     0x7fc591d37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20832)[0m     @     0x7fc5914627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20795)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20795)[0m *** SIGSEGV (@0x0) received by PID 20795 (TID 0x7fead4881700) from PID 0; stack trace: ***
[2m[36m(pid=20795)[0m     @     0x7fead445a390 (unknown)
[2m[36m(pid=20795)[0m     @     0x7fbbd4333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20795)[0m     @     0x7fbbd3a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20795)[0m     @     0x7fbbd3a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20755)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20755)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20755)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20755)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20755)[0m *** SIGSEGV (@0x0) received by PID 20755 (TID 0x7fab0793f700) from PID 0; stack trace: ***
[2m[36m(pid=20755)[0m     @     0x7fab07518390 (unknown)
[2m[36m(pid=20755)[0m     @     0x7f7c06c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20755)[0m     @     0x7f7c063407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20750)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20750)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20750)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20750)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20750)[0m *** SIGSEGV (@0x0) received by PID 20750 (TID 0x7fa6e2232700) from PID 0; stack trace: ***
[2m[36m(pid=20750)[0m     @     0x7fa6e1e0b390 (unknown)
[2m[36m(pid=20750)[0m     @     0x7f77e1da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20813)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20813)[0m *** SIGSEGV (@0x0) received by PID 20813 (TID 0x7fa08c813700) from PID 0; stack trace: ***
[2m[36m(pid=20813)[0m     @     0x7fa08c3ec390 (unknown)
[2m[36m(pid=20813)[0m     @     0x7f718c136f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20813)[0m     @     0x7f718b8617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20813)[0m     @     0x7f718b8648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20813)[0m     @     0x7f718b864ad3 at::TensorIterator::for_each()
[2m[36m(pid=20760)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20760)[0m *** SIGSEGV (@0x0) received by PID 20760 (TID 0x7f8a0d1b6700) from PID 0; stack trace: ***
[2m[36m(pid=20760)[0m     @     0x7f8a0cd8f390 (unknown)
[2m[36m(pid=20760)[0m     @     0x7f5b0cc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20760)[0m     @     0x7f5b0c39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20760)[0m     @     0x7f5b0c3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20760)[0m     @     0x7f5b0c3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=20743)[0m     @     0x7f4ed48be390 (unknown)
[2m[36m(pid=20743)[0m     @     0x7f1fd4864f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20743)[0m     @     0x7f1fd3f8f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20743)[0m     @     0x7f1fd3f928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20743)[0m     @     0x7f1fd3f92ad3 at::TensorIterator::for_each()
[2m[36m(pid=20805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20805)[0m *** SIGSEGV (@0x0) received by PID 20805 (TID 0x7ff5c3275700) from PID 0; stack trace: ***
[2m[36m(pid=20805)[0m     @     0x7ff5c2e4e390 (unknown)
[2m[36m(pid=20805)[0m     @     0x7fc6c2e03f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20805)[0m     @     0x7fc6c252e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20805)[0m     @     0x7fc6c25318f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20805)[0m     @     0x7fc6c2531ad3 at::TensorIterator::for_each()
[2m[36m(pid=20741)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20741)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20741)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20741)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20741)[0m *** SIGSEGV (@0x0) received by PID 20741 (TID 0x7f8e9d1f3700) from PID 0; stack trace: ***
[2m[36m(pid=20812)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20812)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20812)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20812)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20812)[0m *** SIGSEGV (@0x0) received by PID 20812 (TID 0x7f10f8b0f700) from PID 0; stack trace: ***
[2m[36m(pid=20812)[0m     @     0x7f10f86e8390 (unknown)
[2m[36m(pid=20812)[0m     @     0x7ee1f869ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20812)[0m     @     0x7ee1f7dca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20812)[0m     @     0x7ee1f7dcd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20812)[0m     @     0x7ee1f7dcdad3 at::TensorIterator::for_each()
[2m[36m(pid=20840)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20840)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20840)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20840)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20840)[0m *** SIGSEGV (@0x0) received by PID 20840 (TID 0x7f06d03ef700) from PID 0; stack trace: ***
[2m[36m(pid=20840)[0m     @     0x7f06cffc8390 (unknown)
[2m[36m(pid=20840)[0m     @     0x7ed7cfe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20840)[0m     @     0x7ed7cf5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20840)[0m     @     0x7ed7cf5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20787)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20787)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20787)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20787)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20787)[0m *** SIGSEGV (@0x0) received by PID 20787 (TID 0x7f2e06612700) from PID 0; stack trace: ***
[2m[36m(pid=20787)[0m     @     0x7f2e061eb390 (unknown)
[2m[36m(pid=20787)[0m     @     0x7eff05f8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20765)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20765)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20765)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20765)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20765)[0m *** SIGSEGV (@0x0) received by PID 20765 (TID 0x7fdb79f5e700) from PID 0; stack trace: ***
[2m[36m(pid=20765)[0m     @     0x7fdb79b37390 (unknown)
[2m[36m(pid=20765)[0m     @     0x7fac79a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20765)[0m     @     0x7fac791357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20765)[0m     @     0x7fac791388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20738)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20738)[0m *** SIGSEGV (@0x0) received by PID 20738 (TID 0x7fee1052e700) from PID 0; stack trace: ***
[2m[36m(pid=20738)[0m     @     0x7fee10107390 (unknown)
[2m[36m(pid=20738)[0m     @     0x7fbf1001cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20738)[0m     @     0x7fbf0f7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20738)[0m     @     0x7fbf0f74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20738)[0m     @     0x7fbf0f74aad3 at::TensorIterator::for_each()
[2m[36m(pid=20738)[0m     @     0x7fbf0f74ad91 at::TensorIterator::for_each()
[2m[36m(pid=20738)[0m     @     0x7fbf1002db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20808)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20808)[0m *** SIGSEGV (@0x0) received by PID 20808 (TID 0x7f963736a700) from PID 0; stack trace: ***
[2m[36m(pid=20808)[0m     @     0x7f9636f43390 (unknown)
[2m[36m(pid=20808)[0m     @     0x7f6736e62f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20808)[0m     @     0x7f673658d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20808)[0m     @     0x7f67365908f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20808)[0m     @     0x7f6736590ad3 at::TensorIterator::for_each()
[2m[36m(pid=20757)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20757)[0m *** SIGSEGV (@0x0) received by PID 20757 (TID 0x7f911301a700) from PID 0; stack trace: ***
[2m[36m(pid=20757)[0m     @     0x7f9112bf3390 (unknown)
[2m[36m(pid=20757)[0m     @     0x7f6212b92f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20757)[0m     @     0x7f62122bd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20757)[0m     @     0x7f62122c08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20757)[0m     @     0x7f62122c0ad3 at::TensorIterator::for_each()
[2m[36m(pid=20858)[0m     @     0x7f3bf3d3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20858)[0m     @     0x7f3bf3d60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20858)[0m     @     0x7f3bf3202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20858)[0m     @     0x7f3bf3200388 at::native::copy_impl()
[2m[36m(pid=20858)[0m     @     0x7f3bf32025a4 at::native::copy_()
[2m[36m(pid=20858)[0m     @     0x7f3bf38ed4f5 at::Tensor::copy_()
[2m[36m(pid=20858)[0m     @     0x7f3bf5dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20838)[0m     @     0x7ed77e852d91 at::TensorIterator::for_each()
[2m[36m(pid=20838)[0m     @     0x7ed77f135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20838)[0m     @     0x7ed77f158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20838)[0m     @     0x7ed77e5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20838)[0m     @     0x7ed77e5f8388 at::native::copy_impl()
[2m[36m(pid=20838)[0m     @     0x7ed77e5fa5a4 at::native::copy_()
[2m[36m(pid=20838)[0m     @     0x7ed77ece54f5 at::Tensor::copy_()
[2m[36m(pid=20737)[0m     @     0x7eee63c24d91 at::TensorIterator::for_each()
[2m[36m(pid=20737)[0m     @     0x7eee64507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20737)[0m     @     0x7eee6452ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20737)[0m     @     0x7eee639cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20737)[0m     @     0x7eee639ca388 at::native::copy_impl()
[2m[36m(pid=20737)[0m     @     0x7eee639cc5a4 at::native::copy_()
[2m[36m(pid=20802)[0m     @     0x7ed9faeb7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20802)[0m     @     0x7ed9faedac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20802)[0m     @     0x7ed9fa37ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20802)[0m     @     0x7ed9fa37a388 at::native::copy_impl()
[2m[36m(pid=20802)[0m     @     0x7ed9fa37c5a4 at::native::copy_()
[2m[36m(pid=20802)[0m     @     0x7ed9faa674f5 at::Tensor::copy_()
[2m[36m(pid=20802)[0m     @     0x7ed9fcf3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20842)[0m     @     0x7fca9605eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20842)[0m     @     0x7fca96081c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20842)[0m     @     0x7fca95523a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20842)[0m     @     0x7fca95521388 at::native::copy_impl()
[2m[36m(pid=20842)[0m     @     0x7fca955235a4 at::native::copy_()
[2m[36m(pid=20842)[0m     @     0x7fca95c0e4f5 at::Tensor::copy_()
[2m[36m(pid=20842)[0m     @     0x7fca980e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20762)[0m     @     0x7fc9a4292d91 at::TensorIterator::for_each()
[2m[36m(pid=20762)[0m     @     0x7fc9a4b75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20762)[0m     @     0x7fc9a4b98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20762)[0m     @     0x7fc9a403aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20762)[0m     @     0x7fc9a4038388 at::native::copy_impl()
[2m[36m(pid=20762)[0m     @     0x7fc9a403a5a4 at::native::copy_()
[2m[36m(pid=20762)[0m     @     0x7fc9a47254f5 at::Tensor::copy_()
[2m[36m(pid=20793)[0m     @     0x7f5ba829fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20793)[0m     @     0x7f5ba829d388 at::native::copy_impl()
[2m[36m(pid=20793)[0m     @     0x7f5ba829f5a4 at::native::copy_()
[2m[36m(pid=20793)[0m     @     0x7f5ba898a4f5 at::Tensor::copy_()
[2m[36m(pid=20793)[0m     @     0x7f5baae5d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20796)[0m     @     0x7efa79a79d91 at::TensorIterator::for_each()
[2m[36m(pid=20796)[0m     @     0x7efa7a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20796)[0m     @     0x7efa7a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20796)[0m     @     0x7efa79821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20796)[0m     @     0x7efa7981f388 at::native::copy_impl()
[2m[36m(pid=20796)[0m     @     0x7efa798215a4 at::native::copy_()
[2m[36m(pid=20796)[0m     @     0x7efa79f0c4f5 at::Tensor::copy_()
[2m[36m(pid=20825)[0m     @     0x7f8522594d91 at::TensorIterator::for_each()
[2m[36m(pid=20825)[0m     @     0x7f8522e77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20825)[0m     @     0x7f8522e9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20825)[0m     @     0x7f852233ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20825)[0m     @     0x7f852233a388 at::native::copy_impl()
[2m[36m(pid=20825)[0m     @     0x7f852233c5a4 at::native::copy_()
[2m[36m(pid=20825)[0m     @     0x7f8522a274f5 at::Tensor::copy_()
[2m[36m(pid=20866)[0m     @     0x7f2841ed5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20866)[0m     @     0x7f2841ed3388 at::native::copy_impl()
[2m[36m(pid=20866)[0m     @     0x7f2841ed55a4 at::native::copy_()
[2m[36m(pid=20866)[0m     @     0x7f28425c04f5 at::Tensor::copy_()
[2m[36m(pid=20866)[0m     @     0x7f2844a938de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20811)[0m     @     0x7f68014a5d91 at::TensorIterator::for_each()
[2m[36m(pid=20811)[0m     @     0x7f6801d88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20811)[0m     @     0x7f6801dabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20811)[0m     @     0x7f680124da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20811)[0m     @     0x7f680124b388 at::native::copy_impl()
[2m[36m(pid=20811)[0m     @     0x7f680124d5a4 at::native::copy_()
[2m[36m(pid=20811)[0m     @     0x7f68019384f5 at::Tensor::copy_()
[2m[36m(pid=20829)[0m     @     0x7f816f659390 (unknown)
[2m[36m(pid=20829)[0m     @     0x7f526f5f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20829)[0m     @     0x7f526ed1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20829)[0m     @     0x7f526ed208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20829)[0m     @     0x7f526ed20ad3 at::TensorIterator::for_each()
[2m[36m(pid=20829)[0m     @     0x7f526ed20d91 at::TensorIterator::for_each()
[2m[36m(pid=20829)[0m     @     0x7f526f603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20830)[0m     @     0x7f35f52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20830)[0m     @     0x7f35f52f8388 at::native::copy_impl()
[2m[36m(pid=20830)[0m     @     0x7f35f52fa5a4 at::native::copy_()
[2m[36m(pid=20830)[0m     @     0x7f35f59e54f5 at::Tensor::copy_()
[2m[36m(pid=20830)[0m     @     0x7f35f7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20867)[0m     @     0x7ef193b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20867)[0m     @     0x7ef192fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20867)[0m     @     0x7ef192fc9388 at::native::copy_impl()
[2m[36m(pid=20867)[0m     @     0x7ef192fcb5a4 at::native::copy_()
[2m[36m(pid=20867)[0m     @     0x7ef1936b64f5 at::Tensor::copy_()
[2m[36m(pid=20867)[0m     @     0x7ef195b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20827)[0m     @     0x7f2ad3539d91 at::TensorIterator::for_each()
[2m[36m(pid=20827)[0m     @     0x7f2ad3e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20827)[0m     @     0x7f2ad3e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20827)[0m     @     0x7f2ad32e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20827)[0m     @     0x7f2ad32df388 at::native::copy_impl()
[2m[36m(pid=20827)[0m     @     0x7f2ad32e15a4 at::native::copy_()
[2m[36m(pid=20752)[0m     @     0x7f8444711d91 at::TensorIterator::for_each()
[2m[36m(pid=20752)[0m     @     0x7f8444ff4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20752)[0m     @     0x7f8445017c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20752)[0m     @     0x7f84444b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20752)[0m     @     0x7f84444b7388 at::native::copy_impl()
[2m[36m(pid=20752)[0m     @     0x7f84444b95a4 at::native::copy_()
[2m[36m(pid=20752)[0m     @     0x7f8444ba44f5 at::Tensor::copy_()
[2m[36m(pid=20818)[0m     @     0x7f6d77191d91 at::TensorIterator::for_each()
[2m[36m(pid=20818)[0m     @     0x7f6d77a74b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20818)[0m     @     0x7f6d77a97c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20818)[0m     @     0x7f6d76f39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20818)[0m     @     0x7f6d76f37388 at::native::copy_impl()
[2m[36m(pid=20818)[0m     @     0x7f6d76f395a4 at::native::copy_()
[2m[36m(pid=20818)[0m     @     0x7f6d776244f5 at::Tensor::copy_()
[2m[36m(pid=20851)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20851)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20851)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20851)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20851)[0m *** SIGSEGV (@0x0) received by PID 20851 (TID 0x7f211f4cc700) from PID 0; stack trace: ***
[2m[36m(pid=20871)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20871)[0m *** SIGSEGV (@0x0) received by PID 20871 (TID 0x7fb289191700) from PID 0; stack trace: ***
[2m[36m(pid=20871)[0m     @     0x7fb288d6a390 (unknown)
[2m[36m(pid=20871)[0m     @     0x7f8388c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20871)[0m     @     0x7f838839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20871)[0m     @     0x7f83883a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20871)[0m     @     0x7f83883a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=20824)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20824)[0m *** SIGSEGV (@0x0) received by PID 20824 (TID 0x7f398cedd700) from PID 0; stack trace: ***
[2m[36m(pid=20824)[0m     @     0x7f398cab6390 (unknown)
[2m[36m(pid=20824)[0m     @     0x7f0a8c95df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20824)[0m     @     0x7f0a8c0887db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20824)[0m     @     0x7f0a8c08b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20834)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20834)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20834)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20834)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20834)[0m *** SIGSEGV (@0x0) received by PID 20834 (TID 0x7f44fddbb700) from PID 0; stack trace: ***
[2m[36m(pid=20834)[0m     @     0x7f44fd994390 (unknown)
[2m[36m(pid=20834)[0m     @     0x7f15fd7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20834)[0m     @     0x7f15fcf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20834)[0m     @     0x7f15fcf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20817)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20817)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20817)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20817)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20817)[0m *** SIGSEGV (@0x0) received by PID 20817 (TID 0x7f2c4410a700) from PID 0; stack trace: ***
[2m[36m(pid=20850)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20850)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20850)[0m *** SIGSEGV (@0x0) received by PID 20850 (TID 0x7f227634f700) from PID 0; stack trace: ***
[2m[36m(pid=20850)[0m     @     0x7f2275f28390 (unknown)
[2m[36m(pid=20850)[0m     @     0x7ef375d1df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20850)[0m     @     0x7ef3754487db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20850)[0m     @     0x7ef37544b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20831)[0m     @     0x7f7055610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20831)[0m     @     0x7f705560e388 at::native::copy_impl()
[2m[36m(pid=20831)[0m     @     0x7f70556105a4 at::native::copy_()
[2m[36m(pid=20831)[0m     @     0x7f7055cfb4f5 at::Tensor::copy_()
[2m[36m(pid=20831)[0m     @     0x7f70581ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20764)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20764)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20764)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20764)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20764)[0m *** SIGSEGV (@0x0) received by PID 20764 (TID 0x7f4266fa1700) from PID 0; stack trace: ***
[2m[36m(pid=20764)[0m     @     0x7f4266b7a390 (unknown)
[2m[36m(pid=20764)[0m     @     0x7f13669ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20764)[0m     @     0x7f13660f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20764)[0m     @     0x7f13660fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20756)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=20756)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=20756)[0m *** Aborted at 1604572490 (unix time) try "date -d @1604572490" if you are using GNU date ***
[2m[36m(pid=20756)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20756)[0m *** SIGSEGV (@0x0) received by PID 20756 (TID 0x7f0b3996a700) from PID 0; stack trace: ***
[2m[36m(pid=20815)[0m     @     0x7f0a66554d91 at::TensorIterator::for_each()
[2m[36m(pid=20815)[0m     @     0x7f0a66e37b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20815)[0m     @     0x7f0a66e5ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20815)[0m     @     0x7f0a662fca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20815)[0m     @     0x7f0a662fa388 at::native::copy_impl()
[2m[36m(pid=20815)[0m     @     0x7f0a662fc5a4 at::native::copy_()
[2m[36m(pid=20815)[0m     @     0x7f0a669e74f5 at::Tensor::copy_()
[2m[36m(pid=20747)[0m     @     0x7fb358344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20747)[0m     @     0x7fb358367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20747)[0m     @     0x7fb357809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20747)[0m     @     0x7fb357807388 at::native::copy_impl()
[2m[36m(pid=20747)[0m     @     0x7fb3578095a4 at::native::copy_()
[2m[36m(pid=20747)[0m     @     0x7fb357ef44f5 at::Tensor::copy_()
[2m[36m(pid=20747)[0m     @     0x7fb35a3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20816)[0m     @     0x7f1ccee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=20816)[0m     @     0x7f1ccf762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20816)[0m     @     0x7f1ccf785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20816)[0m     @     0x7f1ccec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20816)[0m     @     0x7f1ccec25388 at::native::copy_impl()
[2m[36m(pid=20816)[0m     @     0x7f1ccec275a4 at::native::copy_()
[2m[36m(pid=20868)[0m     @     0x7f0eb90a44f5 at::Tensor::copy_()
[2m[36m(pid=20868)[0m     @     0x7f0ebb5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20868)[0m     @     0x7f0eb90a44f5 at::Tensor::copy_()
[2m[36m(pid=20868)[0m     @     0x7f0ebf14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20868)[0m     @     0x5564ce461fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20868)[0m     @     0x5564ce3bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20868)[0m     @     0x5564ce447baf _PyEval_EvalCodeWithName
[2m[36m(pid=20868)[0m     @     0x5564ce448a20 method_vectorcall
[2m[36m(pid=20868)[0m     @     0x5564ce3bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20868)[0m     @     0x5564ce447baf _PyEval_EvalCodeWithName
[2m[36m(pid=20868)[0m     @     0x5564ce448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20868)[0m     @     0x5564ce3bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20837)[0m     @     0x7eec20ee05a4 at::native::copy_()
[2m[36m(pid=20837)[0m     @     0x7eec215cb4f5 at::Tensor::copy_()
[2m[36m(pid=20837)[0m     @     0x7eec23a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20753)[0m     @     0x7ed3495a35a4 at::native::copy_()
[2m[36m(pid=20753)[0m     @     0x7ed349c8e4f5 at::Tensor::copy_()
[2m[36m(pid=20753)[0m     @     0x7ed34c1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20754)[0m     @     0x7f72ac5425a4 at::native::copy_()
[2m[36m(pid=20754)[0m     @     0x7f72acc2d4f5 at::Tensor::copy_()
[2m[36m(pid=20852)[0m     @     0x7f47f39cc5a4 at::native::copy_()
[2m[36m(pid=20852)[0m     @     0x7f47f40b74f5 at::Tensor::copy_()
[2m[36m(pid=20852)[0m     @     0x7f47f658a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20736)[0m     @     0x7fb00d5a35a4 at::native::copy_()
[2m[36m(pid=20736)[0m     @     0x7fb00dc8e4f5 at::Tensor::copy_()
[2m[36m(pid=20734)[0m     @     0x7f579fe984f5 at::Tensor::copy_()
[2m[36m(pid=20734)[0m     @     0x7f57a236b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20734)[0m     @     0x7f579fe984f5 at::Tensor::copy_()
[2m[36m(pid=20734)[0m     @     0x7f57a5f4379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20734)[0m     @     0x55c583df7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20734)[0m     @     0x55c583d52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20735)[0m     @     0x7f29fd2fa5a4 at::native::copy_()
[2m[36m(pid=20735)[0m     @     0x7f29fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=20846)[0m     @     0x7f5ffe82b4f5 at::Tensor::copy_()
[2m[36m(pid=20846)[0m     @     0x7f6000cfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20844)[0m     @     0x7f4bcf8095a4 at::native::copy_()
[2m[36m(pid=20844)[0m     @     0x7f4bcfef44f5 at::Tensor::copy_()
[2m[36m(pid=20844)[0m     @     0x7f4bd23c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20789)[0m     @     0x7f1f71be05a4 at::native::copy_()
[2m[36m(pid=20789)[0m     @     0x7f1f722cb4f5 at::Tensor::copy_()
[2m[36m(pid=20789)[0m     @     0x7f1f7479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20766)[0m     @     0x7ed92afcb5a4 at::native::copy_()
[2m[36m(pid=20766)[0m     @     0x7ed92b6b64f5 at::Tensor::copy_()
[2m[36m(pid=20749)[0m     @     0x7f871fef44f5 at::Tensor::copy_()
[2m[36m(pid=20749)[0m     @     0x7f87223c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20749)[0m     @     0x7f871fef44f5 at::Tensor::copy_()
[2m[36m(pid=20749)[0m     @     0x7f8725f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20749)[0m     @     0x561ac6ac5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20749)[0m     @     0x561ac6a20b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20749)[0m     @     0x561ac6aabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20749)[0m     @     0x561ac6aaca20 method_vectorcall
[2m[36m(pid=20749)[0m     @     0x561ac6a20bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20749)[0m     @     0x561ac6aabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20749)[0m     @     0x561ac6aac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20749)[0m     @     0x561ac6a21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20749)[0m     @     0x561ac6aabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20749)[0m     @     0x561ac6aac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20749)[0m     @     0x561ac6a21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20749)[0m     @     0x561ac6aabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20749)[0m     @     0x561ac6aac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20749)[0m     @     0x561ac6a21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20745)[0m     @     0x7f034a1d25a4 at::native::copy_()
[2m[36m(pid=20745)[0m     @     0x7f034a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=20745)[0m     @     0x7f034cd908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20739)[0m     @     0x7f93038095a4 at::native::copy_()
[2m[36m(pid=20739)[0m     @     0x7f9303ef44f5 at::Tensor::copy_()
[2m[36m(pid=20828)[0m     @     0x7f71eead44f5 at::Tensor::copy_()
[2m[36m(pid=20828)[0m     @     0x7f71f0fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20828)[0m     @     0x7f71eead44f5 at::Tensor::copy_()
[2m[36m(pid=20828)[0m     @     0x7f71f4b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20828)[0m     @     0x55f7494f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20828)[0m     @     0x55f74944fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20826)[0m     @     0x7f71c4c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=20826)[0m     @     0x7f71c4c11d91 at::TensorIterator::for_each()
[2m[36m(pid=20826)[0m     @     0x7f71c54f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20826)[0m     @     0x7f71c5517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20853)[0m     @     0x7fc340f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20853)[0m     @     0x7fc340f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=20767)[0m     @     0x7f82f8aa58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20767)[0m     @     0x7f82f8aa5ad3 at::TensorIterator::for_each()
[2m[36m(pid=20740)[0m     @     0x7fb4bba61d91 at::TensorIterator::for_each()
[2m[36m(pid=20740)[0m     @     0x7fb4bc344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20740)[0m     @     0x7fb4bc367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20860)[0m     @     0x7f810e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=20860)[0m     @     0x7f810e957d91 at::TensorIterator::for_each()
[2m[36m(pid=20860)[0m     @     0x7f810f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20860)[0m     @     0x7f810f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20758)[0m     @     0x7f42607e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20758)[0m     @     0x7f42607e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=20835)[0m     @     0x7f203d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20835)[0m     @     0x7f203d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=20835)[0m     @     0x7f203d868d91 at::TensorIterator::for_each()
[2m[36m(pid=20768)[0m     @     0x7fc4923bdad3 at::TensorIterator::for_each()
[2m[36m(pid=20768)[0m     @     0x7fc4923bdd91 at::TensorIterator::for_each()
[2m[36m(pid=20768)[0m     @     0x7fc492ca0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20768)[0m     @     0x7fc492cc3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20768)[0m     @     0x7fc492165a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20819)[0m     @     0x7eda39a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20819)[0m     @     0x7eda39a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=20819)[0m     @     0x7eda39a79d91 at::TensorIterator::for_each()
[2m[36m(pid=20864)[0m     @     0x7f91d8f4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20864)[0m     @     0x7f91d867a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20864)[0m     @     0x7f91d867d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20864)[0m     @     0x7f91d867dad3 at::TensorIterator::for_each()
[2m[36m(pid=20809)[0m PC: @                0x0 (unknown)
[2m[36m(pid=20809)[0m *** SIGSEGV (@0x0) received by PID 20809 (TID 0x7fd3e3ea3700) from PID 0; stack trace: ***
[2m[36m(pid=20809)[0m     @     0x7fd3e3a7c390 (unknown)
[2m[36m(pid=20809)[0m     @     0x7fa4e3751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20809)[0m     @     0x7fa4e2e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20809)[0m     @     0x7fa4e2e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20748)[0m     @     0x7ef50b0504f5 at::Tensor::copy_()
[2m[36m(pid=20748)[0m     @     0x7ef50d5238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20748)[0m     @     0x7ef50b0504f5 at::Tensor::copy_()
[2m[36m(pid=20748)[0m     @     0x7ef5110fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20748)[0m     @     0x55ca0b38efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20748)[0m     @     0x55ca0b2e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20748)[0m     @     0x55ca0b374baf _PyEval_EvalCodeWithName
[2m[36m(pid=20748)[0m     @     0x55ca0b375a20 method_vectorcall
[2m[36m(pid=20748)[0m     @     0x55ca0b2e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20748)[0m     @     0x55ca0b374baf _PyEval_EvalCodeWithName
[2m[36m(pid=20748)[0m     @     0x55ca0b375643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20748)[0m     @     0x55ca0b2ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20748)[0m     @     0x55ca0b374baf _PyEval_EvalCodeWithName
[2m[36m(pid=20748)[0m     @     0x55ca0b375643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20748)[0m     @     0x55ca0b2ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20748)[0m     @     0x55ca0b374baf _PyEval_EvalCodeWithName
[2m[36m(pid=20748)[0m     @     0x55ca0b375643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20748)[0m     @     0x55ca0b2ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20748)[0m     @     0x55ca0b374baf _PyEval_EvalCodeWithName
[2m[36m(pid=20748)[0m     @     0x55ca0b375643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20748)[0m     @     0x55ca0b2ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20798)[0m     @     0x7fcba98288f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20798)[0m     @     0x7fcba9828ad3 at::TensorIterator::for_each()
[2m[36m(pid=20798)[0m     @     0x7fcba9828d91 at::TensorIterator::for_each()
[2m[36m(pid=20798)[0m     @     0x7fcbaa10bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20798)[0m     @     0x7fcbaa12ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20746)[0m     @     0x7f691bfa35a4 at::native::copy_()
[2m[36m(pid=20746)[0m     @     0x7f691c68e4f5 at::Tensor::copy_()
[2m[36m(pid=20746)[0m     @     0x7f691eb618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20746)[0m     @     0x7f691c68e4f5 at::Tensor::copy_()
[2m[36m(pid=20746)[0m     @     0x7f692273979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20746)[0m     @     0x5558bdeb8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20746)[0m     @     0x5558bde13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x7f6860d128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20744)[0m     @     0x7f6860d12ad3 at::TensorIterator::for_each()
[2m[36m(pid=20744)[0m     @     0x7f6860d12d91 at::TensorIterator::for_each()
[2m[36m(pid=20744)[0m     @     0x7f68615f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20794)[0m     @     0x7f6db8a688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20794)[0m     @     0x7f6db8a68ad3 at::TensorIterator::for_each()
[2m[36m(pid=20794)[0m     @     0x7f6db8a68d91 at::TensorIterator::for_each()
[2m[36m(pid=20794)[0m     @     0x7f6db934bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20794)[0m     @     0x7f6db936ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20810)[0m     @     0x7fb1f208dad3 at::TensorIterator::for_each()
[2m[36m(pid=20810)[0m     @     0x7fb1f208dd91 at::TensorIterator::for_each()
[2m[36m(pid=20810)[0m     @     0x7fb1f2970b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20810)[0m     @     0x7fb1f2993c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20810)[0m     @     0x7fb1f1e35a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20799)[0m     @     0x7fbd2b0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=20799)[0m     @     0x7fbd2b0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=20799)[0m     @     0x7fbd2b9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20799)[0m     @     0x7fbd2b9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20799)[0m     @     0x7fbd2ae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20799)[0m     @     0x7fbd2ae99388 at::native::copy_impl()
[2m[36m(pid=20832)[0m     @     0x7fc5914658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20832)[0m     @     0x7fc591465ad3 at::TensorIterator::for_each()
[2m[36m(pid=20832)[0m     @     0x7fc591465d91 at::TensorIterator::for_each()
[2m[36m(pid=20832)[0m     @     0x7fc591d48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20832)[0m     @     0x7fc591d6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20795)[0m     @     0x7fbbd3a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=20795)[0m     @     0x7fbbd3a61d91 at::TensorIterator::for_each()
[2m[36m(pid=20795)[0m     @     0x7fbbd4344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20795)[0m     @     0x7fbbd4367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20795)[0m     @     0x7fbbd3809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20755)[0m     @     0x7f7c063438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20755)[0m     @     0x7f7c06343ad3 at::TensorIterator::for_each()
[2m[36m(pid=20755)[0m     @     0x7f7c06343d91 at::TensorIterator::for_each()
[2m[36m(pid=20755)[0m     @     0x7f7c06c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20755)[0m     @     0x7f7c06c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20750)[0m     @     0x7f77e14cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20750)[0m     @     0x7f77e14d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20750)[0m     @     0x7f77e14d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=20750)[0m     @     0x7f77e14d2d91 at::TensorIterator::for_each()
[2m[36m(pid=20813)[0m     @     0x7f718b864d91 at::TensorIterator::for_each()
[2m[36m(pid=20813)[0m     @     0x7f718c147b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20813)[0m     @     0x7f718c16ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20813)[0m     @     0x7f718b60ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20760)[0m     @     0x7f5b0c3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=20760)[0m     @     0x7f5b0cc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20760)[0m     @     0x7f5b0cca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20760)[0m     @     0x7f5b0c14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20760)[0m     @     0x7f5b0c148388 at::native::copy_impl()
[2m[36m(pid=20743)[0m     @     0x7f1fd3f92d91 at::TensorIterator::for_each()
[2m[36m(pid=20743)[0m     @     0x7f1fd4875b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20805)[0m     @     0x7fc6c2531d91 at::TensorIterator::for_each()
[2m[36m(pid=20805)[0m     @     0x7fc6c2e14b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20805)[0m     @     0x7fc6c2e37c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20805)[0m     @     0x7fc6c22d9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20805)[0m     @     0x7fc6c22d7388 at::native::copy_impl()
[2m[36m(pid=20741)[0m     @     0x7f8e9cdcc390 (unknown)
[2m[36m(pid=20741)[0m     @     0x7f5f9cc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20741)[0m     @     0x7f5f9c39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20812)[0m     @     0x7ee1f7dcdd91 at::TensorIterator::for_each()
[2m[36m(pid=20812)[0m     @     0x7ee1f86b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20812)[0m     @     0x7ee1f86d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20840)[0m     @     0x7ed7cf539ad3 at::TensorIterator::for_each()
[2m[36m(pid=20840)[0m     @     0x7ed7cf539d91 at::TensorIterator::for_each()
[2m[36m(pid=20840)[0m     @     0x7ed7cfe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20840)[0m     @     0x7ed7cfe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20787)[0m     @     0x7eff056b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20787)[0m     @     0x7eff056bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20765)[0m     @     0x7fac79138ad3 at::TensorIterator::for_each()
[2m[36m(pid=20765)[0m     @     0x7fac79138d91 at::TensorIterator::for_each()
[2m[36m(pid=20765)[0m     @     0x7fac79a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20738)[0m     @     0x7fbf10050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20738)[0m     @     0x7fbf0f4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20738)[0m     @     0x7fbf0f4f0388 at::native::copy_impl()
[2m[36m(pid=20738)[0m     @     0x7fbf0f4f25a4 at::native::copy_()
[2m[36m(pid=20808)[0m     @     0x7f6736590d91 at::TensorIterator::for_each()
[2m[36m(pid=20808)[0m     @     0x7f6736e73b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20808)[0m     @     0x7f6736e96c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20808)[0m     @     0x7f6736338a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20808)[0m     @     0x7f6736336388 at::native::copy_impl()
[2m[36m(pid=20757)[0m     @     0x7f62122c0d91 at::TensorIterator::for_each()
[2m[36m(pid=20757)[0m     @     0x7f6212ba3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20757)[0m     @     0x7f6212bc6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20757)[0m     @     0x7f6212068a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20757)[0m     @     0x7f6212066388 at::native::copy_impl()
[2m[36m(pid=20858)[0m     @     0x7f3bf38ed4f5 at::Tensor::copy_()
[2m[36m(pid=20858)[0m     @     0x7f3bf999879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20858)[0m     @     0x563ac5263fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20858)[0m     @     0x563ac51beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20858)[0m     @     0x563ac5249baf _PyEval_EvalCodeWithName
[2m[36m(pid=20858)[0m     @     0x563ac524aa20 method_vectorcall
[2m[36m(pid=20858)[0m     @     0x563ac51bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20858)[0m     @     0x563ac5249baf _PyEval_EvalCodeWithName
[2m[36m(pid=20858)[0m     @     0x563ac524a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20858)[0m     @     0x563ac51bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20858)[0m     @     0x563ac5249baf _PyEval_EvalCodeWithName
[2m[36m(pid=20858)[0m     @     0x563ac524a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20858)[0m     @     0x563ac51bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20858)[0m     @     0x563ac5249baf _PyEval_EvalCodeWithName
[2m[36m(pid=20858)[0m     @     0x563ac524a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20858)[0m     @     0x563ac51bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20858)[0m     @     0x563ac5249baf _PyEval_EvalCodeWithName
[2m[36m(pid=20858)[0m     @     0x563ac524a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20858)[0m     @     0x563ac51bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20838)[0m     @     0x7ed7811b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20838)[0m     @     0x7ed77ece54f5 at::Tensor::copy_()
[2m[36m(pid=20838)[0m     @     0x7ed784d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20838)[0m     @     0x55b62dd5ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20838)[0m     @     0x55b62dcbab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20838)[0m     @     0x55b62dd45baf _PyEval_EvalCodeWithName
[2m[36m(pid=20838)[0m     @     0x55b62dd46a20 method_vectorcall
[2m[36m(pid=20838)[0m     @     0x55b62dcbabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20838)[0m     @     0x55b62dd45baf _PyEval_EvalCodeWithName
[2m[36m(pid=20838)[0m     @     0x55b62dd46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20838)[0m     @     0x55b62dcbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20838)[0m     @     0x55b62dd45baf _PyEval_EvalCodeWithName
[2m[36m(pid=20838)[0m     @     0x55b62dd46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20838)[0m     @     0x55b62dcbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20838)[0m     @     0x55b62dd45baf _PyEval_EvalCodeWithName
[2m[36m(pid=20838)[0m     @     0x55b62dd46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20838)[0m     @     0x55b62dcbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20838)[0m     @     0x55b62dd45baf _PyEval_EvalCodeWithName
[2m[36m(pid=20838)[0m     @     0x55b62dd46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20838)[0m     @     0x55b62dcbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20737)[0m     @     0x7eee640b74f5 at::Tensor::copy_()
[2m[36m(pid=20737)[0m     @     0x7eee6658a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20737)[0m     @     0x7eee640b74f5 at::Tensor::copy_()
[2m[36m(pid=20737)[0m     @     0x7eee6a16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20737)[0m     @     0x55b2b188efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20737)[0m     @     0x55b2b17e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20737)[0m     @     0x55b2b1874baf _PyEval_EvalCodeWithName
[2m[36m(pid=20737)[0m     @     0x55b2b1875a20 method_vectorcall
[2m[36m(pid=20737)[0m     @     0x55b2b17e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20737)[0m     @     0x55b2b1874baf _PyEval_EvalCodeWithName
[2m[36m(pid=20737)[0m     @     0x55b2b1875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20737)[0m     @     0x55b2b17ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20737)[0m     @     0x55b2b1874baf _PyEval_EvalCodeWithName
[2m[36m(pid=20737)[0m     @     0x55b2b1875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20802)[0m     @     0x7ed9faa674f5 at::Tensor::copy_()
[2m[36m(pid=20802)[0m     @     0x7eda00b1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20802)[0m     @     0x556426ba7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20802)[0m     @     0x556426b02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20802)[0m     @     0x556426b8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20802)[0m     @     0x556426b8ea20 method_vectorcall
[2m[36m(pid=20802)[0m     @     0x556426b02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20802)[0m     @     0x556426b8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20802)[0m     @     0x556426b8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20802)[0m     @     0x556426b03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20802)[0m     @     0x556426b8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20802)[0m     @     0x556426b8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20802)[0m     @     0x556426b03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20802)[0m     @     0x556426b8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20802)[0m     @     0x556426b8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20802)[0m     @     0x556426b03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20802)[0m     @     0x556426b8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20802)[0m     @     0x556426b8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20802)[0m     @     0x556426b03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20842)[0m     @     0x7fca95c0e4f5 at::Tensor::copy_()
[2m[36m(pid=20842)[0m     @     0x7fca9bcb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20842)[0m     @     0x557e37eaafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20842)[0m     @     0x557e37e05b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20842)[0m     @     0x557e37e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=20842)[0m     @     0x557e37e91a20 method_vectorcall
[2m[36m(pid=20842)[0m     @     0x557e37e05bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20842)[0m     @     0x557e37e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=20842)[0m     @     0x557e37e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20842)[0m     @     0x557e37e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20842)[0m     @     0x557e37e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=20842)[0m     @     0x557e37e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20842)[0m     @     0x557e37e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20842)[0m     @     0x557e37e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=20842)[0m     @     0x557e37e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20842)[0m     @     0x557e37e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20842)[0m     @     0x557e37e90baf _PyEval_EvalCodeWithName
[2m[36m(pid=20842)[0m     @     0x557e37e91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20842)[0m     @     0x557e37e06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20762)[0m     @     0x7fc9a6bf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20762)[0m     @     0x7fc9a47254f5 at::Tensor::copy_()
[2m[36m(pid=20762)[0m     @     0x7fc9aa7d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20762)[0m     @     0x5624793c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20762)[0m     @     0x56247931fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20762)[0m     @     0x5624793aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20762)[0m     @     0x5624793aba20 method_vectorcall
[2m[36m(pid=20762)[0m     @     0x56247931fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20762)[0m     @     0x5624793aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20762)[0m     @     0x5624793ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20762)[0m     @     0x562479320689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20762)[0m     @     0x5624793aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20762)[0m     @     0x5624793ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20762)[0m     @     0x562479320689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20762)[0m     @     0x5624793aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20762)[0m     @     0x5624793ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20762)[0m     @     0x562479320689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20762)[0m     @     0x5624793aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20762)[0m     @     0x5624793ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20762)[0m     @     0x562479320689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20793)[0m     @     0x7f5ba898a4f5 at::Tensor::copy_()
[2m[36m(pid=20793)[0m     @     0x7f5baea3579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20793)[0m     @     0x5595a53cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20793)[0m     @     0x5595a5326b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20793)[0m     @     0x5595a53b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20793)[0m     @     0x5595a53b2a20 method_vectorcall
[2m[36m(pid=20793)[0m     @     0x5595a5326bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20793)[0m     @     0x5595a53b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20793)[0m     @     0x5595a53b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20793)[0m     @     0x5595a5327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20793)[0m     @     0x5595a53b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20793)[0m     @     0x5595a53b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20793)[0m     @     0x5595a5327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20793)[0m     @     0x5595a53b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20793)[0m     @     0x5595a53b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20793)[0m     @     0x5595a5327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20793)[0m     @     0x5595a53b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20793)[0m     @     0x5595a53b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20793)[0m     @     0x5595a5327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20796)[0m     @     0x7efa7c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20796)[0m     @     0x7efa79f0c4f5 at::Tensor::copy_()
[2m[36m(pid=20796)[0m     @     0x7efa7ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20796)[0m     @     0x55b7fd81efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20796)[0m     @     0x55b7fd779b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20796)[0m     @     0x55b7fd804baf _PyEval_EvalCodeWithName
[2m[36m(pid=20796)[0m     @     0x55b7fd805a20 method_vectorcall
[2m[36m(pid=20796)[0m     @     0x55b7fd779bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20796)[0m     @     0x55b7fd804baf _PyEval_EvalCodeWithName
[2m[36m(pid=20796)[0m     @     0x55b7fd805643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20796)[0m     @     0x55b7fd77a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20796)[0m     @     0x55b7fd804baf _PyEval_EvalCodeWithName
[2m[36m(pid=20796)[0m     @     0x55b7fd805643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20796)[0m     @     0x55b7fd77a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20796)[0m     @     0x55b7fd804baf _PyEval_EvalCodeWithName
[2m[36m(pid=20796)[0m     @     0x55b7fd805643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20796)[0m     @     0x55b7fd77a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20796)[0m     @     0x55b7fd804baf _PyEval_EvalCodeWithName
[2m[36m(pid=20796)[0m     @     0x55b7fd805643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20796)[0m     @     0x55b7fd77a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20825)[0m     @     0x7f8524efa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20825)[0m     @     0x7f8522a274f5 at::Tensor::copy_()
[2m[36m(pid=20825)[0m     @     0x7f8528ad279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20825)[0m     @     0x558318842fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20825)[0m     @     0x55831879db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20825)[0m     @     0x558318828baf _PyEval_EvalCodeWithName
[2m[36m(pid=20825)[0m     @     0x558318829a20 method_vectorcall
[2m[36m(pid=20825)[0m     @     0x55831879dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20825)[0m     @     0x558318828baf _PyEval_EvalCodeWithName
[2m[36m(pid=20825)[0m     @     0x558318829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20825)[0m     @     0x55831879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20825)[0m     @     0x558318828baf _PyEval_EvalCodeWithName
[2m[36m(pid=20825)[0m     @     0x558318829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20825)[0m     @     0x55831879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20825)[0m     @     0x558318828baf _PyEval_EvalCodeWithName
[2m[36m(pid=20825)[0m     @     0x558318829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20825)[0m     @     0x55831879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20825)[0m     @     0x558318828baf _PyEval_EvalCodeWithName
[2m[36m(pid=20825)[0m     @     0x558318829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20825)[0m     @     0x55831879e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20866)[0m     @     0x7f28425c04f5 at::Tensor::copy_()
[2m[36m(pid=20866)[0m     @     0x7f284866b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20866)[0m     @     0x55c3fffe9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20866)[0m     @     0x55c3fff44b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20866)[0m     @     0x55c3fffcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20866)[0m     @     0x55c3fffd0a20 method_vectorcall
[2m[36m(pid=20866)[0m     @     0x55c3fff44bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20866)[0m     @     0x55c3fffcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20866)[0m     @     0x55c3fffd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20866)[0m     @     0x55c3fff45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20866)[0m     @     0x55c3fffcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20866)[0m     @     0x55c3fffd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20866)[0m     @     0x55c3fff45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20866)[0m     @     0x55c3fffcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20866)[0m     @     0x55c3fffd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20866)[0m     @     0x55c3fff45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20866)[0m     @     0x55c3fffcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20866)[0m     @     0x55c3fffd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20866)[0m     @     0x55c3fff45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20811)[0m     @     0x7f6803e0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20811)[0m     @     0x7f68019384f5 at::Tensor::copy_()
[2m[36m(pid=20811)[0m     @     0x7f68079e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20811)[0m     @     0x55eb927d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20811)[0m     @     0x55eb92732b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20811)[0m     @     0x55eb927bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20811)[0m     @     0x55eb927bea20 method_vectorcall
[2m[36m(pid=20811)[0m     @     0x55eb92732bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20811)[0m     @     0x55eb927bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20811)[0m     @     0x55eb927be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20811)[0m     @     0x55eb92733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20811)[0m     @     0x55eb927bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20811)[0m     @     0x55eb927be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20811)[0m     @     0x55eb92733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20811)[0m     @     0x55eb927bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20811)[0m     @     0x55eb927be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20811)[0m     @     0x55eb92733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20811)[0m     @     0x55eb927bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20811)[0m     @     0x55eb927be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20811)[0m     @     0x55eb92733689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20829)[0m     @     0x7f526f626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20829)[0m     @     0x7f526eac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20829)[0m     @     0x7f526eac6388 at::native::copy_impl()
[2m[36m(pid=20829)[0m     @     0x7f526eac85a4 at::native::copy_()
[2m[36m(pid=20830)[0m     @     0x7f35f59e54f5 at::Tensor::copy_()
[2m[36m(pid=20830)[0m     @     0x7f35fba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20830)[0m     @     0x55d184c6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20830)[0m     @     0x55d184bcab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20830)[0m     @     0x55d184c55baf _PyEval_EvalCodeWithName
[2m[36m(pid=20830)[0m     @     0x55d184c56a20 method_vectorcall
[2m[36m(pid=20830)[0m     @     0x55d184bcabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20830)[0m     @     0x55d184c55baf _PyEval_EvalCodeWithName
[2m[36m(pid=20830)[0m     @     0x55d184c56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20830)[0m     @     0x55d184bcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20830)[0m     @     0x55d184c55baf _PyEval_EvalCodeWithName
[2m[36m(pid=20830)[0m     @     0x55d184c56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20830)[0m     @     0x55d184bcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20830)[0m     @     0x55d184c55baf _PyEval_EvalCodeWithName
[2m[36m(pid=20830)[0m     @     0x55d184c56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20830)[0m     @     0x55d184bcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20830)[0m     @     0x55d184c55baf _PyEval_EvalCodeWithName
[2m[36m(pid=20830)[0m     @     0x55d184c56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20830)[0m     @     0x55d184bcb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20867)[0m     @     0x7ef1936b64f5 at::Tensor::copy_()
[2m[36m(pid=20867)[0m     @     0x7ef19976179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20867)[0m     @     0x560291e25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20867)[0m     @     0x560291d80b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20867)[0m     @     0x560291e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20867)[0m     @     0x560291e0ca20 method_vectorcall
[2m[36m(pid=20867)[0m     @     0x560291d80bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20867)[0m     @     0x560291e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20867)[0m     @     0x560291e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20867)[0m     @     0x560291d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20867)[0m     @     0x560291e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20867)[0m     @     0x560291e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20867)[0m     @     0x560291d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20867)[0m     @     0x560291e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20867)[0m     @     0x560291e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20867)[0m     @     0x560291d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20867)[0m     @     0x560291e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20867)[0m     @     0x560291e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20867)[0m     @     0x560291d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20827)[0m     @     0x7f2ad39cc4f5 at::Tensor::copy_()
[2m[36m(pid=20827)[0m     @     0x7f2ad5e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20827)[0m     @     0x7f2ad39cc4f5 at::Tensor::copy_()
[2m[36m(pid=20827)[0m     @     0x7f2ad9a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20827)[0m     @     0x55bfc0b24fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20827)[0m     @     0x55bfc0a7fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20827)[0m     @     0x55bfc0b0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20827)[0m     @     0x55bfc0b0ba20 method_vectorcall
[2m[36m(pid=20827)[0m     @     0x55bfc0a7fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20827)[0m     @     0x55bfc0b0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20827)[0m     @     0x55bfc0b0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20827)[0m     @     0x55bfc0a80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20827)[0m     @     0x55bfc0b0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20827)[0m     @     0x55bfc0b0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20827)[0m     @     0x55bfc0a80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20827)[0m     @     0x55bfc0b0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20827)[0m     @     0x55bfc0b0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20827)[0m     @     0x55bfc0a80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20827)[0m     @     0x55bfc0b0abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20827)[0m     @     0x55bfc0b0b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20827)[0m     @     0x55bfc0a80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20752)[0m     @     0x7f84470778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20752)[0m     @     0x7f8444ba44f5 at::Tensor::copy_()
[2m[36m(pid=20752)[0m     @     0x7f844ac4f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20752)[0m     @     0x5607548eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20752)[0m     @     0x560754849b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20752)[0m     @     0x5607548d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20752)[0m     @     0x5607548d5a20 method_vectorcall
[2m[36m(pid=20752)[0m     @     0x560754849bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20752)[0m     @     0x5607548d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20752)[0m     @     0x5607548d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20752)[0m     @     0x56075484a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20752)[0m     @     0x5607548d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20752)[0m     @     0x5607548d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20752)[0m     @     0x56075484a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20752)[0m     @     0x5607548d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20752)[0m     @     0x5607548d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20752)[0m     @     0x56075484a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20752)[0m     @     0x5607548d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20752)[0m     @     0x5607548d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20752)[0m     @     0x56075484a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20818)[0m     @     0x7f6d79af78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20818)[0m     @     0x7f6d776244f5 at::Tensor::copy_()
[2m[36m(pid=20818)[0m     @     0x7f6d7d6cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20818)[0m     @     0x55dd84a93fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20818)[0m     @     0x55dd849eeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20818)[0m     @     0x55dd84a79baf _PyEval_EvalCodeWithName
[2m[36m(pid=20818)[0m     @     0x55dd84a7aa20 method_vectorcall
[2m[36m(pid=20818)[0m     @     0x55dd849eebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20818)[0m     @     0x55dd84a79baf _PyEval_EvalCodeWithName
[2m[36m(pid=20818)[0m     @     0x55dd84a7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20818)[0m     @     0x55dd849ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20818)[0m     @     0x55dd84a79baf _PyEval_EvalCodeWithName
[2m[36m(pid=20818)[0m     @     0x55dd84a7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20818)[0m     @     0x55dd849ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20818)[0m     @     0x55dd84a79baf _PyEval_EvalCodeWithName
[2m[36m(pid=20818)[0m     @     0x55dd84a7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20818)[0m     @     0x55dd849ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20818)[0m     @     0x55dd84a79baf _PyEval_EvalCodeWithName
[2m[36m(pid=20818)[0m     @     0x55dd84a7a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20818)[0m     @     0x55dd849ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x7f211f0a5390 (unknown)
[2m[36m(pid=20851)[0m     @     0x7ef21f052f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20851)[0m     @     0x7ef21e77d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20871)[0m     @     0x7f83883a2d91 at::TensorIterator::for_each()
[2m[36m(pid=20871)[0m     @     0x7f8388c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20871)[0m     @     0x7f8388ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20871)[0m     @     0x7f838814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20871)[0m     @     0x7f8388148388 at::native::copy_impl()
[2m[36m(pid=20871)[0m     @     0x7f838814a5a4 at::native::copy_()
[2m[36m(pid=20824)[0m     @     0x7f0a8c08bad3 at::TensorIterator::for_each()
[2m[36m(pid=20824)[0m     @     0x7f0a8c08bd91 at::TensorIterator::for_each()
[2m[36m(pid=20824)[0m     @     0x7f0a8c96eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20824)[0m     @     0x7f0a8c991c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20834)[0m     @     0x7f15fcf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=20834)[0m     @     0x7f15fcf27d91 at::TensorIterator::for_each()
[2m[36m(pid=20834)[0m     @     0x7f15fd80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20834)[0m     @     0x7f15fd82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20817)[0m     @     0x7f2c43ce3390 (unknown)
[2m[36m(pid=20817)[0m     @     0x7efd43c7bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20817)[0m     @     0x7efd433a67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20850)[0m     @     0x7ef37544bad3 at::TensorIterator::for_each()
[2m[36m(pid=20850)[0m     @     0x7ef37544bd91 at::TensorIterator::for_each()
[2m[36m(pid=20850)[0m     @     0x7ef375d2eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20850)[0m     @     0x7ef375d51c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20850)[0m     @     0x7ef3751f3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20850)[0m     @     0x7ef3751f1388 at::native::copy_impl()
[2m[36m(pid=20831)[0m     @     0x7f7055cfb4f5 at::Tensor::copy_()
[2m[36m(pid=20831)[0m     @     0x7f705bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20831)[0m     @     0x562c642c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20831)[0m     @     0x562c6421cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20831)[0m     @     0x562c642a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20831)[0m     @     0x562c642a8a20 method_vectorcall
[2m[36m(pid=20831)[0m     @     0x562c6421cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20831)[0m     @     0x562c642a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20831)[0m     @     0x562c642a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20831)[0m     @     0x562c6421d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20831)[0m     @     0x562c642a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20831)[0m     @     0x562c642a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20831)[0m     @     0x562c6421d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20831)[0m     @     0x562c642a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20831)[0m     @     0x562c642a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20831)[0m     @     0x562c6421d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20831)[0m     @     0x562c642a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20831)[0m     @     0x562c642a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20831)[0m     @     0x562c6421d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20764)[0m     @     0x7f13660faad3 at::TensorIterator::for_each()
[2m[36m(pid=20764)[0m     @     0x7f13660fad91 at::TensorIterator::for_each()
[2m[36m(pid=20764)[0m     @     0x7f13669ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20756)[0m     @     0x7f0b39543390 (unknown)
[2m[36m(pid=20756)[0m     @     0x7edc394e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=20815)[0m     @     0x7f0a68eba8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20815)[0m     @     0x7f0a669e74f5 at::Tensor::copy_()
[2m[36m(pid=20815)[0m     @     0x7f0a6ca9279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20815)[0m     @     0x55b074c84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20815)[0m     @     0x55b074bdfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20815)[0m     @     0x55b074c6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20815)[0m     @     0x55b074c6ba20 method_vectorcall
[2m[36m(pid=20815)[0m     @     0x55b074bdfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20815)[0m     @     0x55b074c6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20815)[0m     @     0x55b074c6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20815)[0m     @     0x55b074be0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20815)[0m     @     0x55b074c6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20815)[0m     @     0x55b074c6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20815)[0m     @     0x55b074be0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20815)[0m     @     0x55b074c6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20815)[0m     @     0x55b074c6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20815)[0m     @     0x55b074be0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20815)[0m     @     0x55b074c6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=20815)[0m     @     0x55b074c6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20815)[0m     @     0x55b074be0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20747)[0m     @     0x7fb357ef44f5 at::Tensor::copy_()
[2m[36m(pid=20747)[0m     @     0x7fb35df9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20747)[0m     @     0x55decaa52fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20747)[0m     @     0x55deca9adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20747)[0m     @     0x55decaa38baf _PyEval_EvalCodeWithName
[2m[36m(pid=20747)[0m     @     0x55decaa39a20 method_vectorcall
[2m[36m(pid=20747)[0m     @     0x55deca9adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20747)[0m     @     0x55decaa38baf _PyEval_EvalCodeWithName
[2m[36m(pid=20747)[0m     @     0x55decaa39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20747)[0m     @     0x55deca9ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20747)[0m     @     0x55decaa38baf _PyEval_EvalCodeWithName
[2m[36m(pid=20747)[0m     @     0x55decaa39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20747)[0m     @     0x55deca9ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20747)[0m     @     0x55decaa38baf _PyEval_EvalCodeWithName
[2m[36m(pid=20747)[0m     @     0x55decaa39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20747)[0m     @     0x55deca9ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20747)[0m     @     0x55decaa38baf _PyEval_EvalCodeWithName
[2m[36m(pid=20747)[0m     @     0x55decaa39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20747)[0m     @     0x55deca9ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20816)[0m     @     0x7f1ccf3124f5 at::Tensor::copy_()
[2m[36m(pid=20816)[0m     @     0x7f1cd17e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20816)[0m     @     0x7f1ccf3124f5 at::Tensor::copy_()
[2m[36m(pid=20816)[0m     @     0x7f1cd53bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20816)[0m     @     0x564d5e102fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20816)[0m     @     0x564d5e05db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20816)[0m     @     0x564d5e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20816)[0m     @     0x564d5e0e9a20 method_vectorcall
[2m[36m(pid=20816)[0m     @     0x564d5e05dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20816)[0m     @     0x564d5e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20816)[0m     @     0x564d5e0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20816)[0m     @     0x564d5e05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20816)[0m     @     0x564d5e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20816)[0m     @     0x564d5e0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20816)[0m     @     0x564d5e05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20816)[0m     @     0x564d5e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20816)[0m     @     0x564d5e0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20816)[0m     @     0x564d5e05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20816)[0m     @     0x564d5e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20816)[0m     @     0x564d5e0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20816)[0m     @     0x564d5e05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20868)[0m     @     0x5564ce447baf _PyEval_EvalCodeWithName
[2m[36m(pid=20868)[0m     @     0x5564ce448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20868)[0m     @     0x5564ce3bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20868)[0m     @     0x5564ce447baf _PyEval_EvalCodeWithName
[2m[36m(pid=20868)[0m     @     0x5564ce448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20868)[0m     @     0x5564ce3bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20868)[0m     @     0x5564ce447baf _PyEval_EvalCodeWithName
[2m[36m(pid=20868)[0m     @     0x5564ce448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20868)[0m     @     0x5564ce3bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20837)[0m     @     0x7eec215cb4f5 at::Tensor::copy_()
[2m[36m(pid=20837)[0m     @     0x7eec2767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20837)[0m     @     0x55c76d6b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20837)[0m     @     0x55c76d610b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20837)[0m     @     0x55c76d69bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20837)[0m     @     0x55c76d69ca20 method_vectorcall
[2m[36m(pid=20837)[0m     @     0x55c76d610bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20837)[0m     @     0x55c76d69bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20837)[0m     @     0x55c76d69c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20837)[0m     @     0x55c76d611689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20837)[0m     @     0x55c76d69bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20837)[0m     @     0x55c76d69c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20837)[0m     @     0x55c76d611689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20837)[0m     @     0x55c76d69bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20837)[0m     @     0x55c76d69c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20837)[0m     @     0x55c76d611689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20837)[0m     @     0x55c76d69bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20837)[0m     @     0x55c76d69c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20837)[0m     @     0x55c76d611689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20753)[0m     @     0x7ed349c8e4f5 at::Tensor::copy_()
[2m[36m(pid=20753)[0m     @     0x7ed34fd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20753)[0m     @     0x556294987fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20753)[0m     @     0x5562948e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20753)[0m     @     0x55629496dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20753)[0m     @     0x55629496ea20 method_vectorcall
[2m[36m(pid=20753)[0m     @     0x5562948e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20753)[0m     @     0x55629496dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20753)[0m     @     0x55629496e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20753)[0m     @     0x5562948e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20753)[0m     @     0x55629496dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20753)[0m     @     0x55629496e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20753)[0m     @     0x5562948e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20753)[0m     @     0x55629496dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20753)[0m     @     0x55629496e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20753)[0m     @     0x5562948e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20753)[0m     @     0x55629496dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20753)[0m     @     0x55629496e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20753)[0m     @     0x5562948e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20754)[0m     @     0x7f72af1008de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20754)[0m     @     0x7f72acc2d4f5 at::Tensor::copy_()
[2m[36m(pid=20754)[0m     @     0x7f72b2cd879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20754)[0m     @     0x5564150c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20754)[0m     @     0x556415022b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20754)[0m     @     0x5564150adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20754)[0m     @     0x5564150aea20 method_vectorcall
[2m[36m(pid=20754)[0m     @     0x556415022bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20754)[0m     @     0x5564150adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20754)[0m     @     0x5564150ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20754)[0m     @     0x556415023689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20754)[0m     @     0x5564150adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20754)[0m     @     0x5564150ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20754)[0m     @     0x556415023689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20754)[0m     @     0x5564150adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20754)[0m     @     0x5564150ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20754)[0m     @     0x556415023689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20754)[0m     @     0x5564150adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20754)[0m     @     0x5564150ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20754)[0m     @     0x556415023689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20852)[0m     @     0x7f47f40b74f5 at::Tensor::copy_()
[2m[36m(pid=20852)[0m     @     0x7f47fa16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20852)[0m     @     0x563b80f86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20852)[0m     @     0x563b80ee1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20852)[0m     @     0x563b80f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20852)[0m     @     0x563b80f6da20 method_vectorcall
[2m[36m(pid=20852)[0m     @     0x563b80ee1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20852)[0m     @     0x563b80f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20852)[0m     @     0x563b80f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20852)[0m     @     0x563b80ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20852)[0m     @     0x563b80f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20852)[0m     @     0x563b80f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20852)[0m     @     0x563b80ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20852)[0m     @     0x563b80f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20852)[0m     @     0x563b80f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20852)[0m     @     0x563b80ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20852)[0m     @     0x563b80f6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20852)[0m     @     0x563b80f6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20852)[0m     @     0x563b80ee2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20736)[0m     @     0x7fb0101618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20736)[0m     @     0x7fb00dc8e4f5 at::Tensor::copy_()
[2m[36m(pid=20736)[0m     @     0x7fb013d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20736)[0m     @     0x5642875fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20736)[0m     @     0x564287559b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20736)[0m     @     0x5642875e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20736)[0m     @     0x5642875e5a20 method_vectorcall
[2m[36m(pid=20736)[0m     @     0x564287559bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20736)[0m     @     0x5642875e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20736)[0m     @     0x5642875e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20736)[0m     @     0x56428755a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20736)[0m     @     0x5642875e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20736)[0m     @     0x5642875e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20736)[0m     @     0x56428755a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20736)[0m     @     0x5642875e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20736)[0m     @     0x5642875e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20736)[0m     @     0x56428755a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20736)[0m     @     0x5642875e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20736)[0m     @     0x5642875e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20736)[0m     @     0x56428755a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20734)[0m     @     0x55c583dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20734)[0m     @     0x55c583ddea20 method_vectorcall
[2m[36m(pid=20734)[0m     @     0x55c583d52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20734)[0m     @     0x55c583dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20734)[0m     @     0x55c583dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20734)[0m     @     0x55c583d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20734)[0m     @     0x55c583dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20734)[0m     @     0x55c583dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20734)[0m     @     0x55c583d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20734)[0m     @     0x55c583dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20734)[0m     @     0x55c583dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20734)[0m     @     0x55c583d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20734)[0m     @     0x55c583dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20734)[0m     @     0x55c583dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20734)[0m     @     0x55c583d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20735)[0m     @     0x7f29ffeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20735)[0m     @     0x7f29fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=20735)[0m     @     0x7f2a03a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20735)[0m     @     0x55f16a8a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20735)[0m     @     0x55f16a802b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20735)[0m     @     0x55f16a88dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20735)[0m     @     0x55f16a88ea20 method_vectorcall
[2m[36m(pid=20735)[0m     @     0x55f16a802bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20735)[0m     @     0x55f16a88dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20735)[0m     @     0x55f16a88e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20735)[0m     @     0x55f16a803689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20735)[0m     @     0x55f16a88dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20735)[0m     @     0x55f16a88e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20735)[0m     @     0x55f16a803689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20735)[0m     @     0x55f16a88dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20735)[0m     @     0x55f16a88e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20735)[0m     @     0x55f16a803689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20735)[0m     @     0x55f16a88dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20735)[0m     @     0x55f16a88e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20735)[0m     @     0x55f16a803689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20846)[0m     @     0x7f5ffe82b4f5 at::Tensor::copy_()
[2m[36m(pid=20846)[0m     @     0x7f60048d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20846)[0m     @     0x5558fd3d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20846)[0m     @     0x5558fd32db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20846)[0m     @     0x5558fd3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20846)[0m     @     0x5558fd3b9a20 method_vectorcall
[2m[36m(pid=20846)[0m     @     0x5558fd32dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20846)[0m     @     0x5558fd3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20846)[0m     @     0x5558fd3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20846)[0m     @     0x5558fd32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20846)[0m     @     0x5558fd3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20846)[0m     @     0x5558fd3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20846)[0m     @     0x5558fd32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20846)[0m     @     0x5558fd3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20846)[0m     @     0x5558fd3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20846)[0m     @     0x5558fd32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20846)[0m     @     0x5558fd3b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=20846)[0m     @     0x5558fd3b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20846)[0m     @     0x5558fd32e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20844)[0m     @     0x7f4bcfef44f5 at::Tensor::copy_()
[2m[36m(pid=20844)[0m     @     0x7f4bd5f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20844)[0m     @     0x5569b4459fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20844)[0m     @     0x5569b43b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20844)[0m     @     0x5569b443fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20844)[0m     @     0x5569b4440a20 method_vectorcall
[2m[36m(pid=20844)[0m     @     0x5569b43b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20844)[0m     @     0x5569b443fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20844)[0m     @     0x5569b4440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20844)[0m     @     0x5569b43b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20844)[0m     @     0x5569b443fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20844)[0m     @     0x5569b4440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20844)[0m     @     0x5569b43b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20844)[0m     @     0x5569b443fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20844)[0m     @     0x5569b4440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20844)[0m     @     0x5569b43b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20844)[0m     @     0x5569b443fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20844)[0m     @     0x5569b4440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20844)[0m     @     0x5569b43b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20789)[0m     @     0x7f1f722cb4f5 at::Tensor::copy_()
[2m[36m(pid=20789)[0m     @     0x7f1f7837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20789)[0m     @     0x55a8557c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20789)[0m     @     0x55a855722b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20789)[0m     @     0x55a8557adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20789)[0m     @     0x55a8557aea20 method_vectorcall
[2m[36m(pid=20789)[0m     @     0x55a855722bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20789)[0m     @     0x55a8557adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20789)[0m     @     0x55a8557ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20789)[0m     @     0x55a855723689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20789)[0m     @     0x55a8557adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20789)[0m     @     0x55a8557ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20789)[0m     @     0x55a855723689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20789)[0m     @     0x55a8557adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20789)[0m     @     0x55a8557ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20789)[0m     @     0x55a855723689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20789)[0m     @     0x55a8557adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20789)[0m     @     0x55a8557ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20789)[0m     @     0x55a855723689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20766)[0m     @     0x7ed92db898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20766)[0m     @     0x7ed92b6b64f5 at::Tensor::copy_()
[2m[36m(pid=20766)[0m     @     0x7ed93176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20766)[0m     @     0x55f421f28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20766)[0m     @     0x55f421e83b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20766)[0m     @     0x55f421f0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20766)[0m     @     0x55f421f0fa20 method_vectorcall
[2m[36m(pid=20766)[0m     @     0x55f421e83bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20766)[0m     @     0x55f421f0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20766)[0m     @     0x55f421f0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20766)[0m     @     0x55f421e84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20766)[0m     @     0x55f421f0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20766)[0m     @     0x55f421f0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20766)[0m     @     0x55f421e84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20766)[0m     @     0x55f421f0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20766)[0m     @     0x55f421f0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20766)[0m     @     0x55f421e84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20766)[0m     @     0x55f421f0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20766)[0m     @     0x55f421f0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20766)[0m     @     0x55f421e84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20749)[0m     @     0x561ac6aabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20749)[0m     @     0x561ac6aac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20749)[0m     @     0x561ac6a21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20745)[0m     @     0x7f034a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=20745)[0m     @     0x7f035096879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20745)[0m     @     0x5594c4c05fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20745)[0m     @     0x5594c4b60b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20745)[0m     @     0x5594c4bebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20745)[0m     @     0x5594c4beca20 method_vectorcall
[2m[36m(pid=20745)[0m     @     0x5594c4b60bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20745)[0m     @     0x5594c4bebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20745)[0m     @     0x5594c4bec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20745)[0m     @     0x5594c4b61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20745)[0m     @     0x5594c4bebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20745)[0m     @     0x5594c4bec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20745)[0m     @     0x5594c4b61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20745)[0m     @     0x5594c4bebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20745)[0m     @     0x5594c4bec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20745)[0m     @     0x5594c4b61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20745)[0m     @     0x5594c4bebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20745)[0m     @     0x5594c4bec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20745)[0m     @     0x5594c4b61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20739)[0m     @     0x7f93063c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20739)[0m     @     0x7f9303ef44f5 at::Tensor::copy_()
[2m[36m(pid=20739)[0m     @     0x7f9309f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20739)[0m     @     0x55739b7a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20739)[0m     @     0x55739b703b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20739)[0m     @     0x55739b78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20739)[0m     @     0x55739b78fa20 method_vectorcall
[2m[36m(pid=20739)[0m     @     0x55739b703bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20739)[0m     @     0x55739b78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20739)[0m     @     0x55739b78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20739)[0m     @     0x55739b704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20739)[0m     @     0x55739b78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20739)[0m     @     0x55739b78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20739)[0m     @     0x55739b704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20739)[0m     @     0x55739b78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20739)[0m     @     0x55739b78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20739)[0m     @     0x55739b704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20739)[0m     @     0x55739b78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20739)[0m     @     0x55739b78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20739)[0m     @     0x55739b704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20828)[0m     @     0x55f7494dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20828)[0m     @     0x55f7494dba20 method_vectorcall
[2m[36m(pid=20828)[0m     @     0x55f74944fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20828)[0m     @     0x55f7494dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20828)[0m     @     0x55f7494db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20828)[0m     @     0x55f749450689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20828)[0m     @     0x55f7494dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20828)[0m     @     0x55f7494db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20828)[0m     @     0x55f749450689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20828)[0m     @     0x55f7494dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20828)[0m     @     0x55f7494db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20828)[0m     @     0x55f749450689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20828)[0m     @     0x55f7494dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20828)[0m     @     0x55f7494db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20828)[0m     @     0x55f749450689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20826)[0m     @     0x7f71c49b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20826)[0m     @     0x7f71c49b7388 at::native::copy_impl()
[2m[36m(pid=20826)[0m     @     0x7f71c49b95a4 at::native::copy_()
[2m[36m(pid=20853)[0m     @     0x7fc340f27d91 at::TensorIterator::for_each()
[2m[36m(pid=20853)[0m     @     0x7fc34180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20853)[0m     @     0x7fc34182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20853)[0m     @     0x7fc340ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20853)[0m     @     0x7fc340ccd388 at::native::copy_impl()
[2m[36m(pid=20767)[0m     @     0x7f82f8aa5d91 at::TensorIterator::for_each()
[2m[36m(pid=20767)[0m     @     0x7f82f9388b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20767)[0m     @     0x7f82f93abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20767)[0m     @     0x7f82f884da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20767)[0m     @     0x7f82f884b388 at::native::copy_impl()
[2m[36m(pid=20740)[0m     @     0x7fb4bb809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20740)[0m     @     0x7fb4bb807388 at::native::copy_impl()
[2m[36m(pid=20740)[0m     @     0x7fb4bb8095a4 at::native::copy_()
[2m[36m(pid=20740)[0m     @     0x7fb4bbef44f5 at::Tensor::copy_()
[2m[36m(pid=20740)[0m     @     0x7fb4be3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20860)[0m     @     0x7f810e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20860)[0m     @     0x7f810e6fd388 at::native::copy_impl()
[2m[36m(pid=20860)[0m     @     0x7f810e6ff5a4 at::native::copy_()
[2m[36m(pid=20758)[0m     @     0x7f42607e3d91 at::TensorIterator::for_each()
[2m[36m(pid=20758)[0m     @     0x7f42610c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20758)[0m     @     0x7f42610e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20758)[0m     @     0x7f426058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20758)[0m     @     0x7f4260589388 at::native::copy_impl()
[2m[36m(pid=20835)[0m     @     0x7f203e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20835)[0m     @     0x7f203e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20835)[0m     @     0x7f203d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20835)[0m     @     0x7f203d60e388 at::native::copy_impl()
[2m[36m(pid=20768)[0m     @     0x7fc492163388 at::native::copy_impl()
[2m[36m(pid=20768)[0m     @     0x7fc4921655a4 at::native::copy_()
[2m[36m(pid=20768)[0m     @     0x7fc4928504f5 at::Tensor::copy_()
[2m[36m(pid=20819)[0m     @     0x7eda3a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20819)[0m     @     0x7eda3a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20819)[0m     @     0x7eda39821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20819)[0m     @     0x7eda3981f388 at::native::copy_impl()
[2m[36m(pid=20864)[0m     @     0x7f91d867dd91 at::TensorIterator::for_each()
[2m[36m(pid=20864)[0m     @     0x7f91d8f60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20864)[0m     @     0x7f91d8f83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20864)[0m     @     0x7f91d8425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20864)[0m     @     0x7f91d8423388 at::native::copy_impl()
[2m[36m(pid=20809)[0m     @     0x7fa4e2e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=20809)[0m     @     0x7fa4e2e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=20809)[0m     @     0x7fa4e3762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20809)[0m     @     0x7fa4e3785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20798)[0m     @     0x7fcba95d0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20798)[0m     @     0x7fcba95ce388 at::native::copy_impl()
[2m[36m(pid=20798)[0m     @     0x7fcba95d05a4 at::native::copy_()
[2m[36m(pid=20746)[0m     @     0x5558bde9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20746)[0m     @     0x5558bde9fa20 method_vectorcall
[2m[36m(pid=20746)[0m     @     0x5558bde13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20746)[0m     @     0x5558bde9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20746)[0m     @     0x5558bde9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20746)[0m     @     0x5558bde14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20746)[0m     @     0x5558bde9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20746)[0m     @     0x5558bde9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20746)[0m     @     0x5558bde14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20746)[0m     @     0x5558bde9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20746)[0m     @     0x5558bde9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20746)[0m     @     0x5558bde14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20746)[0m     @     0x5558bde9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20746)[0m     @     0x5558bde9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20746)[0m     @     0x5558bde14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x7f6861618c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20744)[0m     @     0x7f6860abaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20744)[0m     @     0x7f6860ab8388 at::native::copy_impl()
[2m[36m(pid=20794)[0m     @     0x7f6db8810a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20794)[0m     @     0x7f6db880e388 at::native::copy_impl()
[2m[36m(pid=20794)[0m     @     0x7f6db88105a4 at::native::copy_()
[2m[36m(pid=20810)[0m     @     0x7fb1f1e33388 at::native::copy_impl()
[2m[36m(pid=20810)[0m     @     0x7fb1f1e355a4 at::native::copy_()
[2m[36m(pid=20810)[0m     @     0x7fb1f25204f5 at::Tensor::copy_()
[2m[36m(pid=20799)[0m     @     0x7fbd2ae9b5a4 at::native::copy_()
[2m[36m(pid=20799)[0m     @     0x7fbd2b5864f5 at::Tensor::copy_()
[2m[36m(pid=20832)[0m     @     0x7fc59120da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20832)[0m     @     0x7fc59120b388 at::native::copy_impl()
[2m[36m(pid=20832)[0m     @     0x7fc59120d5a4 at::native::copy_()
[2m[36m(pid=20795)[0m     @     0x7fbbd3807388 at::native::copy_impl()
[2m[36m(pid=20795)[0m     @     0x7fbbd38095a4 at::native::copy_()
[2m[36m(pid=20795)[0m     @     0x7fbbd3ef44f5 at::Tensor::copy_()
[2m[36m(pid=20750)[0m     @     0x7f77e1db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20750)[0m     @     0x7f77e1dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20750)[0m     @     0x7f77e127aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20750)[0m     @     0x7f77e1278388 at::native::copy_impl()
[2m[36m(pid=20750)[0m     @     0x7f77e127a5a4 at::native::copy_()
[2m[36m(pid=20813)[0m     @     0x7f718b60a388 at::native::copy_impl()
[2m[36m(pid=20813)[0m     @     0x7f718b60c5a4 at::native::copy_()
[2m[36m(pid=20813)[0m     @     0x7f718bcf74f5 at::Tensor::copy_()
[2m[36m(pid=20813)[0m     @     0x7f718e1ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20760)[0m     @     0x7f5b0c14a5a4 at::native::copy_()
[2m[36m(pid=20760)[0m     @     0x7f5b0c8354f5 at::Tensor::copy_()
[2m[36m(pid=20760)[0m     @     0x7f5b0ed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20743)[0m     @     0x7f1fd4898c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20743)[0m     @     0x7f1fd3d3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20743)[0m     @     0x7f1fd3d38388 at::native::copy_impl()
[2m[36m(pid=20743)[0m     @     0x7f1fd3d3a5a4 at::native::copy_()
[2m[36m(pid=20805)[0m     @     0x7fc6c22d95a4 at::native::copy_()
[2m[36m(pid=20805)[0m     @     0x7fc6c29c44f5 at::Tensor::copy_()
[2m[36m(pid=20805)[0m     @     0x7fc6c4e978de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20741)[0m     @     0x7f5f9c3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20741)[0m     @     0x7f5f9c3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=20741)[0m     @     0x7f5f9c3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=20741)[0m     @     0x7f5f9cc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20812)[0m     @     0x7ee1f7b75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20812)[0m     @     0x7ee1f7b73388 at::native::copy_impl()
[2m[36m(pid=20812)[0m     @     0x7ee1f7b755a4 at::native::copy_()
[2m[36m(pid=20812)[0m     @     0x7ee1f82604f5 at::Tensor::copy_()
[2m[36m(pid=20812)[0m     @     0x7ee1fa7338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20840)[0m     @     0x7ed7cf2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20840)[0m     @     0x7ed7cf2df388 at::native::copy_impl()
[2m[36m(pid=20840)[0m     @     0x7ed7cf2e15a4 at::native::copy_()
[2m[36m(pid=20840)[0m     @     0x7ed7cf9cc4f5 at::Tensor::copy_()
[2m[36m(pid=20787)[0m     @     0x7eff056bbad3 at::TensorIterator::for_each()
[2m[36m(pid=20787)[0m     @     0x7eff056bbd91 at::TensorIterator::for_each()
[2m[36m(pid=20787)[0m     @     0x7eff05f9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20787)[0m     @     0x7eff05fc1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20765)[0m     @     0x7fac79a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20765)[0m     @     0x7fac78ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20765)[0m     @     0x7fac78ede388 at::native::copy_impl()
[2m[36m(pid=20765)[0m     @     0x7fac78ee05a4 at::native::copy_()
[2m[36m(pid=20738)[0m     @     0x7fbf0fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=20738)[0m     @     0x7fbf120b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20738)[0m     @     0x7fbf0fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=20738)[0m     @     0x7fbf15c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20738)[0m     @     0x56148b7c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20738)[0m     @     0x56148b720b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20738)[0m     @     0x56148b7abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20738)[0m     @     0x56148b7aca20 method_vectorcall
[2m[36m(pid=20738)[0m     @     0x56148b720bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20738)[0m     @     0x56148b7abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20738)[0m     @     0x56148b7ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20738)[0m     @     0x56148b721689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20738)[0m     @     0x56148b7abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20738)[0m     @     0x56148b7ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20738)[0m     @     0x56148b721689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20738)[0m     @     0x56148b7abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20738)[0m     @     0x56148b7ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20808)[0m     @     0x7f67363385a4 at::native::copy_()
[2m[36m(pid=20808)[0m     @     0x7f6736a234f5 at::Tensor::copy_()
[2m[36m(pid=20808)[0m     @     0x7f6738ef68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20757)[0m     @     0x7f62120685a4 at::native::copy_()
[2m[36m(pid=20757)[0m     @     0x7f62127534f5 at::Tensor::copy_()
[2m[36m(pid=20757)[0m     @     0x7f6214c268de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20737)[0m     @     0x55b2b17ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20737)[0m     @     0x55b2b1874baf _PyEval_EvalCodeWithName
[2m[36m(pid=20737)[0m     @     0x55b2b1875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20737)[0m     @     0x55b2b17ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20737)[0m     @     0x55b2b1874baf _PyEval_EvalCodeWithName
[2m[36m(pid=20737)[0m     @     0x55b2b1875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20737)[0m     @     0x55b2b17ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20829)[0m     @     0x7f526f1b34f5 at::Tensor::copy_()
[2m[36m(pid=20829)[0m     @     0x7f52716868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20829)[0m     @     0x7f526f1b34f5 at::Tensor::copy_()
[2m[36m(pid=20829)[0m     @     0x7f527525e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20829)[0m     @     0x56369c0f5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20829)[0m     @     0x56369c050b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20829)[0m     @     0x56369c0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20829)[0m     @     0x56369c0dca20 method_vectorcall
[2m[36m(pid=20829)[0m     @     0x56369c050bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x7ef21e7808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20871)[0m     @     0x7f83888354f5 at::Tensor::copy_()
[2m[36m(pid=20871)[0m     @     0x7f838ad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20824)[0m     @     0x7f0a8be33a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20824)[0m     @     0x7f0a8be31388 at::native::copy_impl()
[2m[36m(pid=20834)[0m     @     0x7f15fcccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20834)[0m     @     0x7f15fcccd388 at::native::copy_impl()
[2m[36m(pid=20834)[0m     @     0x7f15fcccf5a4 at::native::copy_()
[2m[36m(pid=20817)[0m     @     0x7efd433a98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20850)[0m     @     0x7ef3751f35a4 at::native::copy_()
[2m[36m(pid=20756)[0m     @     0x7edc38c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=20756)[0m     @     0x7edc38c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=20826)[0m     @     0x7f71c50a44f5 at::Tensor::copy_()
[2m[36m(pid=20826)[0m     @     0x7f71c75778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20826)[0m     @     0x7f71c50a44f5 at::Tensor::copy_()
[2m[36m(pid=20826)[0m     @     0x7f71cb14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20826)[0m     @     0x563a2c7eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20826)[0m     @     0x563a2c745b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20826)[0m     @     0x563a2c7d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=20826)[0m     @     0x563a2c7d1a20 method_vectorcall
[2m[36m(pid=20826)[0m     @     0x563a2c745bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20826)[0m     @     0x563a2c7d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=20826)[0m     @     0x563a2c7d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20826)[0m     @     0x563a2c746689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20826)[0m     @     0x563a2c7d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=20826)[0m     @     0x563a2c7d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20826)[0m     @     0x563a2c746689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20826)[0m     @     0x563a2c7d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=20826)[0m     @     0x563a2c7d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20826)[0m     @     0x563a2c746689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20826)[0m     @     0x563a2c7d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=20826)[0m     @     0x563a2c7d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20826)[0m     @     0x563a2c746689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20853)[0m     @     0x7fc340ccf5a4 at::native::copy_()
[2m[36m(pid=20853)[0m     @     0x7fc3413ba4f5 at::Tensor::copy_()
[2m[36m(pid=20853)[0m     @     0x7fc34388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20767)[0m     @     0x7f82f884d5a4 at::native::copy_()
[2m[36m(pid=20767)[0m     @     0x7f82f8f384f5 at::Tensor::copy_()
[2m[36m(pid=20767)[0m     @     0x7f82fb40b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20740)[0m     @     0x7fb4bbef44f5 at::Tensor::copy_()
[2m[36m(pid=20740)[0m     @     0x7fb4c1f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20740)[0m     @     0x55a2f2957fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20740)[0m     @     0x55a2f28b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20740)[0m     @     0x55a2f293dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20740)[0m     @     0x55a2f293ea20 method_vectorcall
[2m[36m(pid=20740)[0m     @     0x55a2f28b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20740)[0m     @     0x55a2f293dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20740)[0m     @     0x55a2f293e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20740)[0m     @     0x55a2f28b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20740)[0m     @     0x55a2f293dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20740)[0m     @     0x55a2f293e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20740)[0m     @     0x55a2f28b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20740)[0m     @     0x55a2f293dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20740)[0m     @     0x55a2f293e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20740)[0m     @     0x55a2f28b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20740)[0m     @     0x55a2f293dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20740)[0m     @     0x55a2f293e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20740)[0m     @     0x55a2f28b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20860)[0m     @     0x7f810edea4f5 at::Tensor::copy_()
[2m[36m(pid=20860)[0m     @     0x7f81112bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20860)[0m     @     0x7f810edea4f5 at::Tensor::copy_()
[2m[36m(pid=20860)[0m     @     0x7f8114e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20860)[0m     @     0x560b42d36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20860)[0m     @     0x560b42c91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20860)[0m     @     0x560b42d1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20860)[0m     @     0x560b42d1da20 method_vectorcall
[2m[36m(pid=20860)[0m     @     0x560b42c91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20860)[0m     @     0x560b42d1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20860)[0m     @     0x560b42d1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20860)[0m     @     0x560b42c92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20860)[0m     @     0x560b42d1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20860)[0m     @     0x560b42d1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20860)[0m     @     0x560b42c92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20860)[0m     @     0x560b42d1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20860)[0m     @     0x560b42d1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20860)[0m     @     0x560b42c92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20860)[0m     @     0x560b42d1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20860)[0m     @     0x560b42d1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20860)[0m     @     0x560b42c92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20758)[0m     @     0x7f426058b5a4 at::native::copy_()
[2m[36m(pid=20758)[0m     @     0x7f4260c764f5 at::Tensor::copy_()
[2m[36m(pid=20758)[0m     @     0x7f42631498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20835)[0m     @     0x7f203d6105a4 at::native::copy_()
[2m[36m(pid=20835)[0m     @     0x7f203dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=20835)[0m     @     0x7f20401ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20768)[0m     @     0x7fc494d238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20768)[0m     @     0x7fc4928504f5 at::Tensor::copy_()
[2m[36m(pid=20768)[0m     @     0x7fc4988fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20768)[0m     @     0x55c6b5d23fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20768)[0m     @     0x55c6b5c7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20768)[0m     @     0x55c6b5d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=20768)[0m     @     0x55c6b5d0aa20 method_vectorcall
[2m[36m(pid=20768)[0m     @     0x55c6b5c7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20768)[0m     @     0x55c6b5d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=20768)[0m     @     0x55c6b5d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20768)[0m     @     0x55c6b5c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20768)[0m     @     0x55c6b5d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=20768)[0m     @     0x55c6b5d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20768)[0m     @     0x55c6b5c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20768)[0m     @     0x55c6b5d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=20768)[0m     @     0x55c6b5d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20768)[0m     @     0x55c6b5c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20768)[0m     @     0x55c6b5d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=20768)[0m     @     0x55c6b5d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20768)[0m     @     0x55c6b5c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20819)[0m     @     0x7eda398215a4 at::native::copy_()
[2m[36m(pid=20819)[0m     @     0x7eda39f0c4f5 at::Tensor::copy_()
[2m[36m(pid=20819)[0m     @     0x7eda3c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20864)[0m     @     0x7f91d84255a4 at::native::copy_()
[2m[36m(pid=20864)[0m     @     0x7f91d8b104f5 at::Tensor::copy_()
[2m[36m(pid=20864)[0m     @     0x7f91dafe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20809)[0m     @     0x7fa4e2c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20809)[0m     @     0x7fa4e2c25388 at::native::copy_impl()
[2m[36m(pid=20809)[0m     @     0x7fa4e2c275a4 at::native::copy_()
[2m[36m(pid=20798)[0m     @     0x7fcba9cbb4f5 at::Tensor::copy_()
[2m[36m(pid=20798)[0m     @     0x7fcbac18e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20798)[0m     @     0x7fcba9cbb4f5 at::Tensor::copy_()
[2m[36m(pid=20744)[0m     @     0x7f6860aba5a4 at::native::copy_()
[2m[36m(pid=20744)[0m     @     0x7f68611a54f5 at::Tensor::copy_()
[2m[36m(pid=20744)[0m     @     0x7f68636788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20794)[0m     @     0x7f6db8efb4f5 at::Tensor::copy_()
[2m[36m(pid=20794)[0m     @     0x7f6dbb3ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20794)[0m     @     0x7f6db8efb4f5 at::Tensor::copy_()
[2m[36m(pid=20794)[0m     @     0x7f6dbefa679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20794)[0m     @     0x55e1acc22fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20794)[0m     @     0x55e1acb7db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20794)[0m     @     0x55e1acc08baf _PyEval_EvalCodeWithName
[2m[36m(pid=20794)[0m     @     0x55e1acc09a20 method_vectorcall
[2m[36m(pid=20794)[0m     @     0x55e1acb7dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20810)[0m     @     0x7fb1f49f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20810)[0m     @     0x7fb1f25204f5 at::Tensor::copy_()
[2m[36m(pid=20810)[0m     @     0x7fb1f85cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20810)[0m     @     0x55cf64d4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20810)[0m     @     0x55cf64caab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20810)[0m     @     0x55cf64d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=20810)[0m     @     0x55cf64d36a20 method_vectorcall
[2m[36m(pid=20810)[0m     @     0x55cf64caabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20810)[0m     @     0x55cf64d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=20810)[0m     @     0x55cf64d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20810)[0m     @     0x55cf64cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20810)[0m     @     0x55cf64d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=20810)[0m     @     0x55cf64d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20810)[0m     @     0x55cf64cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20810)[0m     @     0x55cf64d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=20810)[0m     @     0x55cf64d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20810)[0m     @     0x55cf64cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20810)[0m     @     0x55cf64d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=20810)[0m     @     0x55cf64d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20810)[0m     @     0x55cf64cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20799)[0m     @     0x7fbd2da598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20799)[0m     @     0x7fbd2b5864f5 at::Tensor::copy_()
[2m[36m(pid=20799)[0m     @     0x7fbd3163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20799)[0m     @     0x557e61617fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20799)[0m     @     0x557e61572b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20799)[0m     @     0x557e615fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20799)[0m     @     0x557e615fea20 method_vectorcall
[2m[36m(pid=20799)[0m     @     0x557e61572bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20799)[0m     @     0x557e615fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20799)[0m     @     0x557e615fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20799)[0m     @     0x557e61573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20799)[0m     @     0x557e615fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20799)[0m     @     0x557e615fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20799)[0m     @     0x557e61573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20799)[0m     @     0x557e615fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20799)[0m     @     0x557e615fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20799)[0m     @     0x557e61573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20799)[0m     @     0x557e615fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20799)[0m     @     0x557e615fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20799)[0m     @     0x557e61573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20832)[0m     @     0x7fc5918f84f5 at::Tensor::copy_()
[2m[36m(pid=20832)[0m     @     0x7fc593dcb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20832)[0m     @     0x7fc5918f84f5 at::Tensor::copy_()
[2m[36m(pid=20795)[0m     @     0x7fbbd63c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20795)[0m     @     0x7fbbd3ef44f5 at::Tensor::copy_()
[2m[36m(pid=20795)[0m     @     0x7fbbd9f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20795)[0m     @     0x555f771a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20795)[0m     @     0x555f77103b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20795)[0m     @     0x555f7718ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20795)[0m     @     0x555f7718fa20 method_vectorcall
[2m[36m(pid=20795)[0m     @     0x555f77103bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20795)[0m     @     0x555f7718ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20795)[0m     @     0x555f7718f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20795)[0m     @     0x555f77104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20795)[0m     @     0x555f7718ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20795)[0m     @     0x555f7718f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20795)[0m     @     0x555f77104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20795)[0m     @     0x555f7718ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20795)[0m     @     0x555f7718f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20795)[0m     @     0x555f77104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20795)[0m     @     0x555f7718ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20795)[0m     @     0x555f7718f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20795)[0m     @     0x555f77104689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x7f7c060eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20755)[0m     @     0x7f7c060e9388 at::native::copy_impl()
[2m[36m(pid=20750)[0m     @     0x7f77e19654f5 at::Tensor::copy_()
[2m[36m(pid=20750)[0m     @     0x7f77e3e388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20813)[0m     @     0x7f718bcf74f5 at::Tensor::copy_()
[2m[36m(pid=20813)[0m     @     0x7f7191da279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20813)[0m     @     0x55bdafc98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20813)[0m     @     0x55bdafbf3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20813)[0m     @     0x55bdafc7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20813)[0m     @     0x55bdafc7fa20 method_vectorcall
[2m[36m(pid=20813)[0m     @     0x55bdafbf3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20813)[0m     @     0x55bdafc7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20813)[0m     @     0x55bdafc7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20813)[0m     @     0x55bdafbf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20813)[0m     @     0x55bdafc7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20813)[0m     @     0x55bdafc7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20813)[0m     @     0x55bdafbf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20813)[0m     @     0x55bdafc7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20813)[0m     @     0x55bdafc7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20813)[0m     @     0x55bdafbf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20813)[0m     @     0x55bdafc7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20813)[0m     @     0x55bdafc7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20813)[0m     @     0x55bdafbf4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20760)[0m     @     0x7f5b0c8354f5 at::Tensor::copy_()
[2m[36m(pid=20760)[0m     @     0x7f5b128e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20760)[0m     @     0x561c9cd96fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20760)[0m     @     0x561c9ccf1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20760)[0m     @     0x561c9cd7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20760)[0m     @     0x561c9cd7da20 method_vectorcall
[2m[36m(pid=20760)[0m     @     0x561c9ccf1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20760)[0m     @     0x561c9cd7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20760)[0m     @     0x561c9cd7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20760)[0m     @     0x561c9ccf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20760)[0m     @     0x561c9cd7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20760)[0m     @     0x561c9cd7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20760)[0m     @     0x561c9ccf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20760)[0m     @     0x561c9cd7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20760)[0m     @     0x561c9cd7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20760)[0m     @     0x561c9ccf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20760)[0m     @     0x561c9cd7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20760)[0m     @     0x561c9cd7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20760)[0m     @     0x561c9ccf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20743)[0m     @     0x7f1fd44254f5 at::Tensor::copy_()
[2m[36m(pid=20743)[0m     @     0x7f1fd68f88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20805)[0m     @     0x7fc6c29c44f5 at::Tensor::copy_()
[2m[36m(pid=20805)[0m     @     0x7fc6c8a6f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20805)[0m     @     0x55a5c20affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20805)[0m     @     0x55a5c200ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20805)[0m     @     0x55a5c2095baf _PyEval_EvalCodeWithName
[2m[36m(pid=20805)[0m     @     0x55a5c2096a20 method_vectorcall
[2m[36m(pid=20805)[0m     @     0x55a5c200abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20805)[0m     @     0x55a5c2095baf _PyEval_EvalCodeWithName
[2m[36m(pid=20805)[0m     @     0x55a5c2096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20805)[0m     @     0x55a5c200b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20805)[0m     @     0x55a5c2095baf _PyEval_EvalCodeWithName
[2m[36m(pid=20805)[0m     @     0x55a5c2096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20805)[0m     @     0x55a5c200b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20805)[0m     @     0x55a5c2095baf _PyEval_EvalCodeWithName
[2m[36m(pid=20805)[0m     @     0x55a5c2096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20805)[0m     @     0x55a5c200b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20805)[0m     @     0x55a5c2095baf _PyEval_EvalCodeWithName
[2m[36m(pid=20805)[0m     @     0x55a5c2096643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20805)[0m     @     0x55a5c200b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20741)[0m     @     0x7f5f9cca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20741)[0m     @     0x7f5f9c14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20741)[0m     @     0x7f5f9c148388 at::native::copy_impl()
[2m[36m(pid=20812)[0m     @     0x7ee1f82604f5 at::Tensor::copy_()
[2m[36m(pid=20812)[0m     @     0x7ee1fe30b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20812)[0m     @     0x564072abbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20812)[0m     @     0x564072a16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20812)[0m     @     0x564072aa1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20812)[0m     @     0x564072aa2a20 method_vectorcall
[2m[36m(pid=20812)[0m     @     0x564072a16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20812)[0m     @     0x564072aa1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20812)[0m     @     0x564072aa2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20812)[0m     @     0x564072a17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20812)[0m     @     0x564072aa1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20812)[0m     @     0x564072aa2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20812)[0m     @     0x564072a17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20812)[0m     @     0x564072aa1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20812)[0m     @     0x564072aa2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20840)[0m     @     0x7ed7d1e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20840)[0m     @     0x7ed7cf9cc4f5 at::Tensor::copy_()
[2m[36m(pid=20840)[0m     @     0x7ed7d5a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20840)[0m     @     0x55f1f152bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20840)[0m     @     0x55f1f1486b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x7eff05463a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20787)[0m     @     0x7eff05461388 at::native::copy_impl()
[2m[36m(pid=20765)[0m     @     0x7fac795cb4f5 at::Tensor::copy_()
[2m[36m(pid=20765)[0m     @     0x7fac7ba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20765)[0m     @     0x7fac795cb4f5 at::Tensor::copy_()
[2m[36m(pid=20738)[0m     @     0x56148b721689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20738)[0m     @     0x56148b7abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20738)[0m     @     0x56148b7ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20738)[0m     @     0x56148b721689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20808)[0m     @     0x7f6736a234f5 at::Tensor::copy_()
[2m[36m(pid=20808)[0m     @     0x7f673cace79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20808)[0m     @     0x5649bc797fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20808)[0m     @     0x5649bc6f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20808)[0m     @     0x5649bc77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20808)[0m     @     0x5649bc77ea20 method_vectorcall
[2m[36m(pid=20808)[0m     @     0x5649bc6f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20808)[0m     @     0x5649bc77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20808)[0m     @     0x5649bc77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20808)[0m     @     0x5649bc6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20808)[0m     @     0x5649bc77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20808)[0m     @     0x5649bc77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20808)[0m     @     0x5649bc6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20808)[0m     @     0x5649bc77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20808)[0m     @     0x5649bc77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20808)[0m     @     0x5649bc6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20808)[0m     @     0x5649bc77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20808)[0m     @     0x5649bc77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20808)[0m     @     0x5649bc6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20757)[0m     @     0x7f62127534f5 at::Tensor::copy_()
[2m[36m(pid=20757)[0m     @     0x7f62187fe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20757)[0m     @     0x557853097fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20757)[0m     @     0x557852ff2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20757)[0m     @     0x55785307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20757)[0m     @     0x55785307ea20 method_vectorcall
[2m[36m(pid=20757)[0m     @     0x557852ff2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20757)[0m     @     0x55785307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20757)[0m     @     0x55785307e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20757)[0m     @     0x557852ff3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20757)[0m     @     0x55785307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20757)[0m     @     0x55785307e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20757)[0m     @     0x557852ff3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20757)[0m     @     0x55785307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20757)[0m     @     0x55785307e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20757)[0m     @     0x557852ff3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20757)[0m     @     0x55785307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20757)[0m     @     0x55785307e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20757)[0m     @     0x557852ff3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20829)[0m     @     0x56369c0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20829)[0m     @     0x56369c0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20829)[0m     @     0x56369c051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20829)[0m     @     0x56369c0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20829)[0m     @     0x56369c0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20829)[0m     @     0x56369c051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20829)[0m     @     0x56369c0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20829)[0m     @     0x56369c0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20829)[0m     @     0x56369c051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20829)[0m     @     0x56369c0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20829)[0m     @     0x56369c0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20829)[0m     @     0x56369c051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x7ef21e780ad3 at::TensorIterator::for_each()
[2m[36m(pid=20851)[0m     @     0x7ef21e780d91 at::TensorIterator::for_each()
[2m[36m(pid=20851)[0m     @     0x7ef21f063b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20851)[0m     @     0x7ef21f086c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20871)[0m     @     0x7f83888354f5 at::Tensor::copy_()
[2m[36m(pid=20871)[0m     @     0x7f838e8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20871)[0m     @     0x5643d2c57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20871)[0m     @     0x5643d2bb2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20871)[0m     @     0x5643d2c3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20871)[0m     @     0x5643d2c3ea20 method_vectorcall
[2m[36m(pid=20871)[0m     @     0x5643d2bb2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20871)[0m     @     0x5643d2c3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20871)[0m     @     0x5643d2c3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20871)[0m     @     0x5643d2bb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20871)[0m     @     0x5643d2c3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20871)[0m     @     0x5643d2c3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20871)[0m     @     0x5643d2bb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20871)[0m     @     0x5643d2c3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20871)[0m     @     0x5643d2c3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20871)[0m     @     0x5643d2bb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20871)[0m     @     0x5643d2c3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20871)[0m     @     0x5643d2c3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20871)[0m     @     0x5643d2bb3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20824)[0m     @     0x7f0a8be335a4 at::native::copy_()
[2m[36m(pid=20824)[0m     @     0x7f0a8c51e4f5 at::Tensor::copy_()
[2m[36m(pid=20824)[0m     @     0x7f0a8e9f18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20824)[0m     @     0x7f0a8c51e4f5 at::Tensor::copy_()
[2m[36m(pid=20834)[0m     @     0x7f15fd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=20834)[0m     @     0x7f15ff88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20834)[0m     @     0x7f15fd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=20834)[0m     @     0x7f160346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20834)[0m     @     0x556fc8ba0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20834)[0m     @     0x556fc8afbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20834)[0m     @     0x556fc8b86baf _PyEval_EvalCodeWithName
[2m[36m(pid=20834)[0m     @     0x556fc8b87a20 method_vectorcall
[2m[36m(pid=20834)[0m     @     0x556fc8afbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20834)[0m     @     0x556fc8b86baf _PyEval_EvalCodeWithName
[2m[36m(pid=20834)[0m     @     0x556fc8b87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20834)[0m     @     0x556fc8afc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20834)[0m     @     0x556fc8b86baf _PyEval_EvalCodeWithName
[2m[36m(pid=20834)[0m     @     0x556fc8b87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20834)[0m     @     0x556fc8afc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20834)[0m     @     0x556fc8b86baf _PyEval_EvalCodeWithName
[2m[36m(pid=20834)[0m     @     0x556fc8b87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20834)[0m     @     0x556fc8afc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20834)[0m     @     0x556fc8b86baf _PyEval_EvalCodeWithName
[2m[36m(pid=20817)[0m     @     0x7efd433a9ad3 at::TensorIterator::for_each()
[2m[36m(pid=20817)[0m     @     0x7efd433a9d91 at::TensorIterator::for_each()
[2m[36m(pid=20817)[0m     @     0x7efd43c8cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20817)[0m     @     0x7efd43cafc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20850)[0m     @     0x7ef3758de4f5 at::Tensor::copy_()
[2m[36m(pid=20850)[0m     @     0x7ef377db18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20764)[0m     @     0x7f1366a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20764)[0m     @     0x7f1365ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20764)[0m     @     0x7f1365ea0388 at::native::copy_impl()
[2m[36m(pid=20764)[0m     @     0x7f1365ea25a4 at::native::copy_()
[2m[36m(pid=20756)[0m     @     0x7edc38c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=20756)[0m     @     0x7edc38c11d91 at::TensorIterator::for_each()
[2m[36m(pid=20756)[0m     @     0x7edc394f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=20756)[0m     @     0x7edc39517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=20756)[0m     @     0x7edc389b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20756)[0m     @     0x7edc389b7388 at::native::copy_impl()
[2m[36m(pid=20853)[0m     @     0x7fc3413ba4f5 at::Tensor::copy_()
[2m[36m(pid=20853)[0m     @     0x7fc34746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20853)[0m     @     0x55abe7cf4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20853)[0m     @     0x55abe7c4fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20853)[0m     @     0x55abe7cdabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20853)[0m     @     0x55abe7cdba20 method_vectorcall
[2m[36m(pid=20853)[0m     @     0x55abe7c4fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20853)[0m     @     0x55abe7cdabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20853)[0m     @     0x55abe7cdb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20853)[0m     @     0x55abe7c50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20853)[0m     @     0x55abe7cdabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20853)[0m     @     0x55abe7cdb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20853)[0m     @     0x55abe7c50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20853)[0m     @     0x55abe7cdabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20853)[0m     @     0x55abe7cdb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20853)[0m     @     0x55abe7c50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20853)[0m     @     0x55abe7cdabaf _PyEval_EvalCodeWithName
[2m[36m(pid=20853)[0m     @     0x55abe7cdb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20853)[0m     @     0x55abe7c50689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20767)[0m     @     0x7f82f8f384f5 at::Tensor::copy_()
[2m[36m(pid=20767)[0m     @     0x7f82fefe379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20767)[0m     @     0x5588f35effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20767)[0m     @     0x5588f354ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20767)[0m     @     0x5588f35d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=20767)[0m     @     0x5588f35d6a20 method_vectorcall
[2m[36m(pid=20767)[0m     @     0x5588f354abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20767)[0m     @     0x5588f35d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=20767)[0m     @     0x5588f35d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20767)[0m     @     0x5588f354b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20767)[0m     @     0x5588f35d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=20767)[0m     @     0x5588f35d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20767)[0m     @     0x5588f354b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20767)[0m     @     0x5588f35d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=20767)[0m     @     0x5588f35d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20767)[0m     @     0x5588f354b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20767)[0m     @     0x5588f35d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=20767)[0m     @     0x5588f35d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20767)[0m     @     0x5588f354b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20758)[0m     @     0x7f4260c764f5 at::Tensor::copy_()
[2m[36m(pid=20758)[0m     @     0x7f4266d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20758)[0m     @     0x55d6f5787fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20758)[0m     @     0x55d6f56e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20758)[0m     @     0x55d6f576dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20758)[0m     @     0x55d6f576ea20 method_vectorcall
[2m[36m(pid=20758)[0m     @     0x55d6f56e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20758)[0m     @     0x55d6f576dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20758)[0m     @     0x55d6f576e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20758)[0m     @     0x55d6f56e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20758)[0m     @     0x55d6f576dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20758)[0m     @     0x55d6f576e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20758)[0m     @     0x55d6f56e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20758)[0m     @     0x55d6f576dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20758)[0m     @     0x55d6f576e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20758)[0m     @     0x55d6f56e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20758)[0m     @     0x55d6f576dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20758)[0m     @     0x55d6f576e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20758)[0m     @     0x55d6f56e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20835)[0m     @     0x7f203dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=20835)[0m     @     0x7f2043da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20835)[0m     @     0x55aa5f66cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20835)[0m     @     0x55aa5f5c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20835)[0m     @     0x55aa5f652baf _PyEval_EvalCodeWithName
[2m[36m(pid=20835)[0m     @     0x55aa5f653a20 method_vectorcall
[2m[36m(pid=20835)[0m     @     0x55aa5f5c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20835)[0m     @     0x55aa5f652baf _PyEval_EvalCodeWithName
[2m[36m(pid=20835)[0m     @     0x55aa5f653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20835)[0m     @     0x55aa5f5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20835)[0m     @     0x55aa5f652baf _PyEval_EvalCodeWithName
[2m[36m(pid=20835)[0m     @     0x55aa5f653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20835)[0m     @     0x55aa5f5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20835)[0m     @     0x55aa5f652baf _PyEval_EvalCodeWithName
[2m[36m(pid=20835)[0m     @     0x55aa5f653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20835)[0m     @     0x55aa5f5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20835)[0m     @     0x55aa5f652baf _PyEval_EvalCodeWithName
[2m[36m(pid=20835)[0m     @     0x55aa5f653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20835)[0m     @     0x55aa5f5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20819)[0m     @     0x7eda39f0c4f5 at::Tensor::copy_()
[2m[36m(pid=20819)[0m     @     0x7eda3ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20819)[0m     @     0x56078ad39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20819)[0m     @     0x56078ac94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20819)[0m     @     0x56078ad1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20819)[0m     @     0x56078ad20a20 method_vectorcall
[2m[36m(pid=20819)[0m     @     0x56078ac94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20819)[0m     @     0x56078ad1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20819)[0m     @     0x56078ad20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20819)[0m     @     0x56078ac95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20819)[0m     @     0x56078ad1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20819)[0m     @     0x56078ad20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20819)[0m     @     0x56078ac95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20819)[0m     @     0x56078ad1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20819)[0m     @     0x56078ad20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20819)[0m     @     0x56078ac95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20819)[0m     @     0x56078ad1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20819)[0m     @     0x56078ad20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20819)[0m     @     0x56078ac95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20809)[0m     @     0x7fa4e33124f5 at::Tensor::copy_()
[2m[36m(pid=20809)[0m     @     0x7fa4e57e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20798)[0m     @     0x7fcbafd6679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20798)[0m     @     0x55cd23117fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20798)[0m     @     0x55cd23072b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20798)[0m     @     0x55cd230fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20798)[0m     @     0x55cd230fea20 method_vectorcall
[2m[36m(pid=20798)[0m     @     0x55cd23072bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20798)[0m     @     0x55cd230fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20798)[0m     @     0x55cd230fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20798)[0m     @     0x55cd23073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20798)[0m     @     0x55cd230fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20798)[0m     @     0x55cd230fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20798)[0m     @     0x55cd23073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20798)[0m     @     0x55cd230fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20798)[0m     @     0x55cd230fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20798)[0m     @     0x55cd23073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20798)[0m     @     0x55cd230fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20798)[0m     @     0x55cd230fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20798)[0m     @     0x55cd23073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x7f68611a54f5 at::Tensor::copy_()
[2m[36m(pid=20744)[0m     @     0x7f686725079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20744)[0m     @     0x55f6ad895fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20744)[0m     @     0x55f6ad7f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x55f6ad87bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20744)[0m     @     0x55f6ad87ca20 method_vectorcall
[2m[36m(pid=20744)[0m     @     0x55f6ad7f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x55f6ad87bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20744)[0m     @     0x55f6ad87c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20744)[0m     @     0x55f6ad7f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x55f6ad87bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20744)[0m     @     0x55f6ad87c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20744)[0m     @     0x55f6ad7f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x55f6ad87bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20744)[0m     @     0x55f6ad87c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20744)[0m     @     0x55f6ad7f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20744)[0m     @     0x55f6ad87bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20744)[0m     @     0x55f6ad87c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20744)[0m     @     0x55f6ad7f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20794)[0m     @     0x55e1acc08baf _PyEval_EvalCodeWithName
[2m[36m(pid=20794)[0m     @     0x55e1acc09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20794)[0m     @     0x55e1acb7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20794)[0m     @     0x55e1acc08baf _PyEval_EvalCodeWithName
[2m[36m(pid=20794)[0m     @     0x55e1acc09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20794)[0m     @     0x55e1acb7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20794)[0m     @     0x55e1acc08baf _PyEval_EvalCodeWithName
[2m[36m(pid=20794)[0m     @     0x55e1acc09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20794)[0m     @     0x55e1acb7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20794)[0m     @     0x55e1acc08baf _PyEval_EvalCodeWithName
[2m[36m(pid=20794)[0m     @     0x55e1acc09643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20794)[0m     @     0x55e1acb7e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20832)[0m     @     0x7fc5979a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20832)[0m     @     0x55f9159e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20832)[0m     @     0x55f915944b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20832)[0m     @     0x55f9159cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20832)[0m     @     0x55f9159d0a20 method_vectorcall
[2m[36m(pid=20832)[0m     @     0x55f915944bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20832)[0m     @     0x55f9159cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20832)[0m     @     0x55f9159d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20832)[0m     @     0x55f915945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20832)[0m     @     0x55f9159cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20832)[0m     @     0x55f9159d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20832)[0m     @     0x55f915945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20832)[0m     @     0x55f9159cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20832)[0m     @     0x55f9159d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20832)[0m     @     0x55f915945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20832)[0m     @     0x55f9159cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20832)[0m     @     0x55f9159d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20832)[0m     @     0x55f915945689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x7f7c060eb5a4 at::native::copy_()
[2m[36m(pid=20755)[0m     @     0x7f7c067d64f5 at::Tensor::copy_()
[2m[36m(pid=20750)[0m     @     0x7f77e19654f5 at::Tensor::copy_()
[2m[36m(pid=20750)[0m     @     0x7f77e7a1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20750)[0m     @     0x564c12df1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20750)[0m     @     0x564c12d4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20750)[0m     @     0x564c12dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20750)[0m     @     0x564c12dd8a20 method_vectorcall
[2m[36m(pid=20750)[0m     @     0x564c12d4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20750)[0m     @     0x564c12dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20750)[0m     @     0x564c12dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20750)[0m     @     0x564c12d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20750)[0m     @     0x564c12dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20750)[0m     @     0x564c12dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20750)[0m     @     0x564c12d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20750)[0m     @     0x564c12dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20750)[0m     @     0x564c12dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20750)[0m     @     0x564c12d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20750)[0m     @     0x564c12dd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20750)[0m     @     0x564c12dd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20750)[0m     @     0x564c12d4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20743)[0m     @     0x7f1fd44254f5 at::Tensor::copy_()
[2m[36m(pid=20743)[0m     @     0x7f1fda4d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20743)[0m     @     0x55e0f8cf6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20743)[0m     @     0x55e0f8c51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20743)[0m     @     0x55e0f8cdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20743)[0m     @     0x55e0f8cdda20 method_vectorcall
[2m[36m(pid=20743)[0m     @     0x55e0f8c51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20743)[0m     @     0x55e0f8cdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20743)[0m     @     0x55e0f8cdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20743)[0m     @     0x55e0f8c52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20743)[0m     @     0x55e0f8cdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20743)[0m     @     0x55e0f8cdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20743)[0m     @     0x55e0f8c52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20743)[0m     @     0x55e0f8cdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20743)[0m     @     0x55e0f8cdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20743)[0m     @     0x55e0f8c52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20743)[0m     @     0x55e0f8cdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20743)[0m     @     0x55e0f8cdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20743)[0m     @     0x55e0f8c52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20741)[0m     @     0x7f5f9c14a5a4 at::native::copy_()
[2m[36m(pid=20741)[0m     @     0x7f5f9c8354f5 at::Tensor::copy_()
[2m[36m(pid=20741)[0m     @     0x7f5f9ed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20812)[0m     @     0x564072a17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20812)[0m     @     0x564072aa1baf _PyEval_EvalCodeWithName
[2m[36m(pid=20812)[0m     @     0x564072aa2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20812)[0m     @     0x564072a17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20840)[0m     @     0x55f1f1511baf _PyEval_EvalCodeWithName
[2m[36m(pid=20840)[0m     @     0x55f1f1512a20 method_vectorcall
[2m[36m(pid=20840)[0m     @     0x55f1f1486bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20840)[0m     @     0x55f1f1511baf _PyEval_EvalCodeWithName
[2m[36m(pid=20840)[0m     @     0x55f1f1512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20840)[0m     @     0x55f1f1487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20840)[0m     @     0x55f1f1511baf _PyEval_EvalCodeWithName
[2m[36m(pid=20840)[0m     @     0x55f1f1512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20840)[0m     @     0x55f1f1487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20840)[0m     @     0x55f1f1511baf _PyEval_EvalCodeWithName
[2m[36m(pid=20840)[0m     @     0x55f1f1512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20840)[0m     @     0x55f1f1487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20840)[0m     @     0x55f1f1511baf _PyEval_EvalCodeWithName
[2m[36m(pid=20840)[0m     @     0x55f1f1512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20840)[0m     @     0x55f1f1487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x7eff054635a4 at::native::copy_()
[2m[36m(pid=20787)[0m     @     0x7eff05b4e4f5 at::Tensor::copy_()
[2m[36m(pid=20787)[0m     @     0x7eff080218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20765)[0m     @     0x7fac7f67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20765)[0m     @     0x55a593918fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20765)[0m     @     0x55a593873b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20765)[0m     @     0x55a5938febaf _PyEval_EvalCodeWithName
[2m[36m(pid=20765)[0m     @     0x55a5938ffa20 method_vectorcall
[2m[36m(pid=20765)[0m     @     0x55a593873bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20765)[0m     @     0x55a5938febaf _PyEval_EvalCodeWithName
[2m[36m(pid=20765)[0m     @     0x55a5938ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20765)[0m     @     0x55a593874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20765)[0m     @     0x55a5938febaf _PyEval_EvalCodeWithName
[2m[36m(pid=20765)[0m     @     0x55a5938ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20765)[0m     @     0x55a593874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20765)[0m     @     0x55a5938febaf _PyEval_EvalCodeWithName
[2m[36m(pid=20765)[0m     @     0x55a5938ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20765)[0m     @     0x55a593874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20765)[0m     @     0x55a5938febaf _PyEval_EvalCodeWithName
[2m[36m(pid=20765)[0m     @     0x55a5938ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20765)[0m     @     0x55a593874689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x7ef21e528a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20851)[0m     @     0x7ef21e526388 at::native::copy_impl()
[2m[36m(pid=20824)[0m     @     0x7f0a925c979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20824)[0m     @     0x55f88183dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20824)[0m     @     0x55f881798b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20824)[0m     @     0x55f881823baf _PyEval_EvalCodeWithName
[2m[36m(pid=20824)[0m     @     0x55f881824a20 method_vectorcall
[2m[36m(pid=20824)[0m     @     0x55f881798bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20824)[0m     @     0x55f881823baf _PyEval_EvalCodeWithName
[2m[36m(pid=20824)[0m     @     0x55f881824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20824)[0m     @     0x55f881799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20824)[0m     @     0x55f881823baf _PyEval_EvalCodeWithName
[2m[36m(pid=20824)[0m     @     0x55f881824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20824)[0m     @     0x55f881799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20824)[0m     @     0x55f881823baf _PyEval_EvalCodeWithName
[2m[36m(pid=20824)[0m     @     0x55f881824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20824)[0m     @     0x55f881799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20824)[0m     @     0x55f881823baf _PyEval_EvalCodeWithName
[2m[36m(pid=20824)[0m     @     0x55f881824643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20824)[0m     @     0x55f881799689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20834)[0m     @     0x556fc8b87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20834)[0m     @     0x556fc8afc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20817)[0m     @     0x7efd43151a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=20817)[0m     @     0x7efd4314f388 at::native::copy_impl()
[2m[36m(pid=20817)[0m     @     0x7efd431515a4 at::native::copy_()
[2m[36m(pid=20850)[0m     @     0x7ef3758de4f5 at::Tensor::copy_()
[2m[36m(pid=20850)[0m     @     0x7ef37b98979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20850)[0m     @     0x56495d063fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20850)[0m     @     0x56495cfbeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20850)[0m     @     0x56495d049baf _PyEval_EvalCodeWithName
[2m[36m(pid=20850)[0m     @     0x56495d04aa20 method_vectorcall
[2m[36m(pid=20850)[0m     @     0x56495cfbebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20850)[0m     @     0x56495d049baf _PyEval_EvalCodeWithName
[2m[36m(pid=20850)[0m     @     0x56495d04a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20850)[0m     @     0x56495cfbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20850)[0m     @     0x56495d049baf _PyEval_EvalCodeWithName
[2m[36m(pid=20850)[0m     @     0x56495d04a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20850)[0m     @     0x56495cfbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20850)[0m     @     0x56495d049baf _PyEval_EvalCodeWithName
[2m[36m(pid=20850)[0m     @     0x56495d04a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20764)[0m     @     0x7f136658d4f5 at::Tensor::copy_()
[2m[36m(pid=20764)[0m     @     0x7f1368a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20756)[0m     @     0x7edc389b95a4 at::native::copy_()
[2m[36m(pid=20864)[0m     @     0x7f91d8b104f5 at::Tensor::copy_()
[2m[36m(pid=20864)[0m     @     0x7f91debbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20864)[0m     @     0x562380e37fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20864)[0m     @     0x562380d92b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20864)[0m     @     0x562380e1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20864)[0m     @     0x562380e1ea20 method_vectorcall
[2m[36m(pid=20864)[0m     @     0x562380d92bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20864)[0m     @     0x562380e1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20864)[0m     @     0x562380e1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20864)[0m     @     0x562380d93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20864)[0m     @     0x562380e1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20864)[0m     @     0x562380e1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20864)[0m     @     0x562380d93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20864)[0m     @     0x562380e1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20864)[0m     @     0x562380e1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20864)[0m     @     0x562380d93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20864)[0m     @     0x562380e1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20864)[0m     @     0x562380e1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20864)[0m     @     0x562380d93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20809)[0m     @     0x7fa4e33124f5 at::Tensor::copy_()
[2m[36m(pid=20809)[0m     @     0x7fa4e93bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20809)[0m     @     0x5622dd7e6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20809)[0m     @     0x5622dd741b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20809)[0m     @     0x5622dd7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20809)[0m     @     0x5622dd7cda20 method_vectorcall
[2m[36m(pid=20809)[0m     @     0x5622dd741bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20809)[0m     @     0x5622dd7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20809)[0m     @     0x5622dd7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20809)[0m     @     0x5622dd742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20809)[0m     @     0x5622dd7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20809)[0m     @     0x5622dd7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20809)[0m     @     0x5622dd742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20809)[0m     @     0x5622dd7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20809)[0m     @     0x5622dd7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20809)[0m     @     0x5622dd742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20809)[0m     @     0x5622dd7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20809)[0m     @     0x5622dd7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20809)[0m     @     0x5622dd742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x7f7c08ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20741)[0m     @     0x7f5f9c8354f5 at::Tensor::copy_()
[2m[36m(pid=20741)[0m     @     0x7f5fa28e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20741)[0m     @     0x5610a6b4cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20741)[0m     @     0x5610a6aa7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20741)[0m     @     0x5610a6b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=20741)[0m     @     0x5610a6b33a20 method_vectorcall
[2m[36m(pid=20741)[0m     @     0x5610a6aa7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20741)[0m     @     0x5610a6b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=20741)[0m     @     0x5610a6b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20741)[0m     @     0x5610a6aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20741)[0m     @     0x5610a6b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=20741)[0m     @     0x5610a6b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20741)[0m     @     0x5610a6aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20741)[0m     @     0x5610a6b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=20741)[0m     @     0x5610a6b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20741)[0m     @     0x5610a6aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20741)[0m     @     0x5610a6b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=20741)[0m     @     0x5610a6b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20741)[0m     @     0x5610a6aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x7eff05b4e4f5 at::Tensor::copy_()
[2m[36m(pid=20787)[0m     @     0x7eff0bbf979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20787)[0m     @     0x563bdb2f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20787)[0m     @     0x563bdb24cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x563bdb2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20787)[0m     @     0x563bdb2d8a20 method_vectorcall
[2m[36m(pid=20787)[0m     @     0x563bdb24cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x563bdb2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20787)[0m     @     0x563bdb2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20787)[0m     @     0x563bdb24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x563bdb2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20787)[0m     @     0x563bdb2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20787)[0m     @     0x563bdb24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x563bdb2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20787)[0m     @     0x563bdb2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20787)[0m     @     0x563bdb24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20787)[0m     @     0x563bdb2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=20787)[0m     @     0x563bdb2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20787)[0m     @     0x563bdb24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x7ef21e5285a4 at::native::copy_()
[2m[36m(pid=20851)[0m     @     0x7ef21ec134f5 at::Tensor::copy_()
[2m[36m(pid=20851)[0m     @     0x7ef2210e68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20817)[0m     @     0x7efd4383c4f5 at::Tensor::copy_()
[2m[36m(pid=20817)[0m     @     0x7efd45d0f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20850)[0m     @     0x56495cfbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20850)[0m     @     0x56495d049baf _PyEval_EvalCodeWithName
[2m[36m(pid=20850)[0m     @     0x56495d04a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20850)[0m     @     0x56495cfbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20764)[0m     @     0x7f136658d4f5 at::Tensor::copy_()
[2m[36m(pid=20764)[0m     @     0x7f136c63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20764)[0m     @     0x5645f3cb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20764)[0m     @     0x5645f3c14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20764)[0m     @     0x5645f3c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20764)[0m     @     0x5645f3ca0a20 method_vectorcall
[2m[36m(pid=20764)[0m     @     0x5645f3c14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20764)[0m     @     0x5645f3c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20764)[0m     @     0x5645f3ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20764)[0m     @     0x5645f3c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20764)[0m     @     0x5645f3c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20764)[0m     @     0x5645f3ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20764)[0m     @     0x5645f3c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20764)[0m     @     0x5645f3c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20764)[0m     @     0x5645f3ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20764)[0m     @     0x5645f3c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20764)[0m     @     0x5645f3c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=20764)[0m     @     0x5645f3ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20764)[0m     @     0x5645f3c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20756)[0m     @     0x7edc390a44f5 at::Tensor::copy_()
[2m[36m(pid=20756)[0m     @     0x7edc3b5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=20756)[0m     @     0x7edc390a44f5 at::Tensor::copy_()
[2m[36m(pid=20756)[0m     @     0x7edc3f14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20756)[0m     @     0x56398b9eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20756)[0m     @     0x56398b949b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20756)[0m     @     0x56398b9d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20756)[0m     @     0x56398b9d5a20 method_vectorcall
[2m[36m(pid=20756)[0m     @     0x56398b949bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20756)[0m     @     0x56398b9d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20756)[0m     @     0x56398b9d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20756)[0m     @     0x56398b94a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20756)[0m     @     0x56398b9d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20756)[0m     @     0x56398b9d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20756)[0m     @     0x56398b94a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20756)[0m     @     0x56398b9d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20756)[0m     @     0x56398b9d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20756)[0m     @     0x56398b94a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x7f7c067d64f5 at::Tensor::copy_()
[2m[36m(pid=20755)[0m     @     0x7f7c0c47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20755)[0m     @     0x55b1c3adefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20755)[0m     @     0x55b1c3a39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x55b1c3ac4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20755)[0m     @     0x55b1c3ac5a20 method_vectorcall
[2m[36m(pid=20755)[0m     @     0x55b1c3a39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x55b1c3ac4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20755)[0m     @     0x55b1c3ac5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20755)[0m     @     0x55b1c3a3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x55b1c3ac4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20755)[0m     @     0x55b1c3ac5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20755)[0m     @     0x55b1c3a3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x55b1c3ac4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20755)[0m     @     0x55b1c3ac5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20755)[0m     @     0x55b1c3a3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20755)[0m     @     0x55b1c3ac4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20755)[0m     @     0x55b1c3ac5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20755)[0m     @     0x55b1c3a3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x7ef21ec134f5 at::Tensor::copy_()
[2m[36m(pid=20851)[0m     @     0x7ef224cbe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20851)[0m     @     0x55aa18568fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20851)[0m     @     0x55aa184c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x55aa1854ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20851)[0m     @     0x55aa1854fa20 method_vectorcall
[2m[36m(pid=20851)[0m     @     0x55aa184c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x55aa1854ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20851)[0m     @     0x55aa1854f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20851)[0m     @     0x55aa184c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x55aa1854ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20851)[0m     @     0x55aa1854f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20851)[0m     @     0x55aa184c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x55aa1854ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20851)[0m     @     0x55aa1854f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20851)[0m     @     0x55aa184c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20851)[0m     @     0x55aa1854ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=20851)[0m     @     0x55aa1854f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20851)[0m     @     0x55aa184c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20817)[0m     @     0x7efd4383c4f5 at::Tensor::copy_()
[2m[36m(pid=20817)[0m     @     0x7efd498e779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=20817)[0m     @     0x55d2e9240fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=20817)[0m     @     0x55d2e919bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20817)[0m     @     0x55d2e9226baf _PyEval_EvalCodeWithName
[2m[36m(pid=20817)[0m     @     0x55d2e9227a20 method_vectorcall
[2m[36m(pid=20817)[0m     @     0x55d2e919bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20817)[0m     @     0x55d2e9226baf _PyEval_EvalCodeWithName
[2m[36m(pid=20817)[0m     @     0x55d2e9227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20817)[0m     @     0x55d2e919c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20817)[0m     @     0x55d2e9226baf _PyEval_EvalCodeWithName
[2m[36m(pid=20817)[0m     @     0x55d2e9227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20817)[0m     @     0x55d2e919c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20817)[0m     @     0x55d2e9226baf _PyEval_EvalCodeWithName
[2m[36m(pid=20817)[0m     @     0x55d2e9227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20817)[0m     @     0x55d2e919c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20817)[0m     @     0x55d2e9226baf _PyEval_EvalCodeWithName
[2m[36m(pid=20817)[0m     @     0x55d2e9227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20817)[0m     @     0x55d2e919c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=20756)[0m     @     0x56398b9d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=20756)[0m     @     0x56398b9d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=20756)[0m     @     0x56398b94a689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:34:50,558	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:34:50,568	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:34:50,573	ERROR trial_runner.py:567 -- Trial PPO_jss_env_844c5_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=20861, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:34:50,601	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
== Status ==
Memory usage on this node: 23.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_844c5_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_844c5_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_844c5_00000_0_2020-11-05_10-34-43/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 23.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_844c5_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_844c5_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_844c5_00000_0_2020-11-05_10-34-43/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_844c5_00000])
