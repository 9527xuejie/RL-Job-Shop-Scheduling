2020-11-05 10:42:03,154	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8b5b6_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=38103)[0m 2020-11-05 10:42:06,078	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=38103)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=38103)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=38103)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=38103)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=38103)[0m 
[2m[36m(pid=38103)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=38067)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38067)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38067)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38067)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38067)[0m *** SIGSEGV (@0x0) received by PID 38067 (TID 0x7ff8f458d700) from PID 0; stack trace: ***
[2m[36m(pid=38067)[0m     @     0x7ff8f4166390 (unknown)
[2m[36m(pid=38096)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38096)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38096)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38096)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38096)[0m *** SIGSEGV (@0x0) received by PID 38096 (TID 0x7fbab092b700) from PID 0; stack trace: ***
[2m[36m(pid=38076)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38076)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38076)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38076)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38076)[0m *** SIGSEGV (@0x0) received by PID 38076 (TID 0x7f732f8f3700) from PID 0; stack trace: ***
[2m[36m(pid=38076)[0m     @     0x7f732f4cc390 (unknown)
[2m[36m(pid=38076)[0m     @     0x7f442f43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38076)[0m     @     0x7f442eb657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38081)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38081)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38081)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38081)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38081)[0m *** SIGSEGV (@0x0) received by PID 38081 (TID 0x7f72d032d700) from PID 0; stack trace: ***
[2m[36m(pid=38081)[0m     @     0x7f72cff06390 (unknown)
[2m[36m(pid=38081)[0m     @     0x7f43cfdf0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38110)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38110)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38110)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38110)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38110)[0m *** SIGSEGV (@0x0) received by PID 38110 (TID 0x7f7c79ce9700) from PID 0; stack trace: ***
[2m[36m(pid=38110)[0m     @     0x7f7c798c2390 (unknown)
[2m[36m(pid=38110)[0m     @     0x7f4d797f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38110)[0m     @     0x7f4d78f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38052)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38052)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38052)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38052)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38052)[0m *** SIGSEGV (@0x0) received by PID 38052 (TID 0x7f4ca2b97700) from PID 0; stack trace: ***
[2m[36m(pid=38099)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38099)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38099)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38099)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38099)[0m *** SIGSEGV (@0x0) received by PID 38099 (TID 0x7f9cafedb700) from PID 0; stack trace: ***
[2m[36m(pid=38099)[0m     @     0x7f9cafab4390 (unknown)
[2m[36m(pid=38099)[0m     @     0x7f6dafa48f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38099)[0m     @     0x7f6daf1737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38048)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38048)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38048)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38048)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38048)[0m *** SIGSEGV (@0x0) received by PID 38048 (TID 0x7f50fffe4700) from PID 0; stack trace: ***
[2m[36m(pid=38048)[0m     @     0x7f50ffbbd390 (unknown)
[2m[36m(pid=38048)[0m     @     0x7f21ff9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38048)[0m     @     0x7f21ff0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38048)[0m     @     0x7f21ff0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38097)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38097)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38097)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38097)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38097)[0m *** SIGSEGV (@0x0) received by PID 38097 (TID 0x7f6475933700) from PID 0; stack trace: ***
[2m[36m(pid=38097)[0m     @     0x7f647550c390 (unknown)
[2m[36m(pid=38106)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38106)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38106)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38106)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38106)[0m *** SIGSEGV (@0x0) received by PID 38106 (TID 0x7f49e1303700) from PID 0; stack trace: ***
[2m[36m(pid=38106)[0m     @     0x7f49e0edc390 (unknown)
[2m[36m(pid=38106)[0m     @     0x7f1ae0b85f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38055)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38055)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38055)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38055)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38055)[0m *** SIGSEGV (@0x0) received by PID 38055 (TID 0x7fa16a61a700) from PID 0; stack trace: ***
[2m[36m(pid=38055)[0m     @     0x7fa16a1f3390 (unknown)
[2m[36m(pid=38063)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38063)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38063)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38063)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38063)[0m *** SIGSEGV (@0x0) received by PID 38063 (TID 0x7fdffdfa5700) from PID 0; stack trace: ***
[2m[36m(pid=38063)[0m     @     0x7fdffdb7e390 (unknown)
[2m[36m(pid=38063)[0m     @     0x7fb0fd9bdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38063)[0m     @     0x7fb0fd0e87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38063)[0m     @     0x7fb0fd0eb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38063)[0m     @     0x7fb0fd0ebad3 at::TensorIterator::for_each()
[2m[36m(pid=38062)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38062)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38062)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38062)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38062)[0m *** SIGSEGV (@0x0) received by PID 38062 (TID 0x7f5674b87700) from PID 0; stack trace: ***
[2m[36m(pid=38062)[0m     @     0x7f5674760390 (unknown)
[2m[36m(pid=38062)[0m     @     0x7f277470cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38062)[0m     @     0x7f2773e377db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38062)[0m     @     0x7f2773e3a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38062)[0m     @     0x7f2773e3aad3 at::TensorIterator::for_each()
[2m[36m(pid=38109)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38109)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38109)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38109)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38109)[0m *** SIGSEGV (@0x0) received by PID 38109 (TID 0x7f438ad37700) from PID 0; stack trace: ***
[2m[36m(pid=38109)[0m     @     0x7f438a910390 (unknown)
[2m[36m(pid=38109)[0m     @     0x7f148a70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38109)[0m     @     0x7f1489e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38037)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38037)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38037)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38037)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38037)[0m *** SIGSEGV (@0x0) received by PID 38037 (TID 0x7fdda0ab9700) from PID 0; stack trace: ***
[2m[36m(pid=38037)[0m     @     0x7fdda0692390 (unknown)
[2m[36m(pid=38037)[0m     @     0x7faea063af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38037)[0m     @     0x7fae9fd657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38037)[0m     @     0x7fae9fd688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38037)[0m     @     0x7fae9fd68ad3 at::TensorIterator::for_each()
[2m[36m(pid=38102)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38102)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38102)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38102)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38102)[0m *** SIGSEGV (@0x0) received by PID 38102 (TID 0x7f5cfa8c5700) from PID 0; stack trace: ***
[2m[36m(pid=38102)[0m     @     0x7f5cfa49e390 (unknown)
[2m[36m(pid=38102)[0m     @     0x7f2dfa34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38102)[0m     @     0x7f2df9a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38102)[0m     @     0x7f2df9a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38102)[0m     @     0x7f2df9a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=38084)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38084)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38084)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38084)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38084)[0m *** SIGSEGV (@0x0) received by PID 38084 (TID 0x7f7c82335700) from PID 0; stack trace: ***
[2m[36m(pid=38084)[0m     @     0x7f7c81f0e390 (unknown)
[2m[36m(pid=38084)[0m     @     0x7f4d81e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38084)[0m     @     0x7f4d8154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38084)[0m     @     0x7f4d815528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38067)[0m     @     0x7fc9f40cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38067)[0m     @     0x7fc9f37f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38067)[0m     @     0x7fc9f37fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38096)[0m     @     0x7fbab0504390 (unknown)
[2m[36m(pid=38096)[0m     @     0x7f8bb03e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38096)[0m     @     0x7f8bafb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38076)[0m     @     0x7f442eb688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38076)[0m     @     0x7f442eb68ad3 at::TensorIterator::for_each()
[2m[36m(pid=38081)[0m     @     0x7f43cf51b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38081)[0m     @     0x7f43cf51e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38081)[0m     @     0x7f43cf51ead3 at::TensorIterator::for_each()
[2m[36m(pid=38110)[0m     @     0x7f4d78f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38110)[0m     @     0x7f4d78f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=38052)[0m     @     0x7f4ca2770390 (unknown)
[2m[36m(pid=38052)[0m     @     0x7f1da26ebf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38052)[0m     @     0x7f1da1e167db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38052)[0m     @     0x7f1da1e198f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38099)[0m     @     0x7f6daf1768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38099)[0m     @     0x7f6daf176ad3 at::TensorIterator::for_each()
[2m[36m(pid=38048)[0m     @     0x7f21ff0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=38048)[0m     @     0x7f21ff0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=38048)[0m     @     0x7f21ff9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38097)[0m     @     0x7f35754a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38097)[0m     @     0x7f3574bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38097)[0m     @     0x7f3574bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38106)[0m     @     0x7f1ae02b07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38106)[0m     @     0x7f1ae02b38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38106)[0m     @     0x7f1ae02b3ad3 at::TensorIterator::for_each()
[2m[36m(pid=38055)[0m     @     0x7f726a13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38055)[0m     @     0x7f72698657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38055)[0m     @     0x7f72698688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38055)[0m     @     0x7f7269868ad3 at::TensorIterator::for_each()
[2m[36m(pid=38046)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38046)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38046)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38029)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38029)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38029)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37976)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37976)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37976)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37981)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37981)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37979)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37979)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37979)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38064)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38064)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38064)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38063)[0m     @     0x7fb0fd0ebd91 at::TensorIterator::for_each()
[2m[36m(pid=38063)[0m     @     0x7fb0fd9ceb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38063)[0m     @     0x7fb0fd9f1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38063)[0m     @     0x7fb0fce93a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38063)[0m     @     0x7fb0fce91388 at::native::copy_impl()
[2m[36m(pid=38062)[0m     @     0x7f2773e3ad91 at::TensorIterator::for_each()
[2m[36m(pid=38062)[0m     @     0x7f277471db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38062)[0m     @     0x7f2774740c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38062)[0m     @     0x7f2773be2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38086)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38086)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38086)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38086)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38086)[0m *** SIGSEGV (@0x0) received by PID 38086 (TID 0x7f9b1e11e700) from PID 0; stack trace: ***
[2m[36m(pid=38109)[0m     @     0x7f1489e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38109)[0m     @     0x7f1489e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=38037)[0m     @     0x7fae9fd68d91 at::TensorIterator::for_each()
[2m[36m(pid=38037)[0m     @     0x7faea064bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38037)[0m     @     0x7faea066ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38037)[0m     @     0x7fae9fb10a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38037)[0m     @     0x7fae9fb0e388 at::native::copy_impl()
[2m[36m(pid=38102)[0m     @     0x7f2df9a79d91 at::TensorIterator::for_each()
[2m[36m(pid=38102)[0m     @     0x7f2dfa35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38102)[0m     @     0x7f2dfa37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38102)[0m     @     0x7f2df9821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38102)[0m     @     0x7f2df981f388 at::native::copy_impl()
[2m[36m(pid=38051)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38051)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38051)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38051)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38051)[0m *** SIGSEGV (@0x0) received by PID 38051 (TID 0x7fae471e8700) from PID 0; stack trace: ***
[2m[36m(pid=38051)[0m     @     0x7fae46dc1390 (unknown)
[2m[36m(pid=38084)[0m     @     0x7f4d81552ad3 at::TensorIterator::for_each()
[2m[36m(pid=38084)[0m     @     0x7f4d81552d91 at::TensorIterator::for_each()
[2m[36m(pid=38084)[0m     @     0x7f4d81e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38084)[0m     @     0x7f4d81e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38067)[0m     @     0x7fc9f37fbad3 at::TensorIterator::for_each()
[2m[36m(pid=38067)[0m     @     0x7fc9f37fbd91 at::TensorIterator::for_each()
[2m[36m(pid=38067)[0m     @     0x7fc9f40deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38067)[0m     @     0x7fc9f4101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38096)[0m     @     0x7f8bafb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38096)[0m     @     0x7f8bafb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=38032)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38032)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38032)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38032)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38032)[0m *** SIGSEGV (@0x0) received by PID 38032 (TID 0x7f54a1bc9700) from PID 0; stack trace: ***
[2m[36m(pid=38032)[0m     @     0x7f54a17a2390 (unknown)
[2m[36m(pid=38032)[0m     @     0x7f25a16f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38030)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38030)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38030)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38030)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38030)[0m *** SIGSEGV (@0x0) received by PID 38030 (TID 0x7fb715d24700) from PID 0; stack trace: ***
[2m[36m(pid=38076)[0m     @     0x7f442eb68d91 at::TensorIterator::for_each()
[2m[36m(pid=38076)[0m     @     0x7f442f44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38076)[0m     @     0x7f442f46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38076)[0m     @     0x7f442e910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38076)[0m     @     0x7f442e90e388 at::native::copy_impl()
[2m[36m(pid=38092)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38092)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38092)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38092)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38092)[0m *** SIGSEGV (@0x0) received by PID 38092 (TID 0x7fdcf222d700) from PID 0; stack trace: ***
[2m[36m(pid=38094)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38094)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38094)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38094)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38094)[0m *** SIGSEGV (@0x0) received by PID 38094 (TID 0x7f539231f700) from PID 0; stack trace: ***
[2m[36m(pid=38094)[0m     @     0x7f5391ef8390 (unknown)
[2m[36m(pid=38094)[0m     @     0x7f2491e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38003)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38003)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38003)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38003)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38003)[0m *** SIGSEGV (@0x0) received by PID 38003 (TID 0x7fcaabeeb700) from PID 0; stack trace: ***
[2m[36m(pid=38003)[0m     @     0x7fcaabac4390 (unknown)
[2m[36m(pid=38003)[0m     @     0x7f9baba48f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38081)[0m     @     0x7f43cf51ed91 at::TensorIterator::for_each()
[2m[36m(pid=38081)[0m     @     0x7f43cfe01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38081)[0m     @     0x7f43cfe24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38081)[0m     @     0x7f43cf2c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38081)[0m     @     0x7f43cf2c4388 at::native::copy_impl()
[2m[36m(pid=38034)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38034)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38034)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38034)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38034)[0m *** SIGSEGV (@0x0) received by PID 38034 (TID 0x7f78558c4700) from PID 0; stack trace: ***
[2m[36m(pid=37972)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37972)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37972)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37972)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37972)[0m *** SIGSEGV (@0x0) received by PID 37972 (TID 0x7f9ff4973700) from PID 0; stack trace: ***
[2m[36m(pid=37972)[0m     @     0x7f9ff454c390 (unknown)
[2m[36m(pid=37978)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37978)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37978)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37978)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37978)[0m *** SIGSEGV (@0x0) received by PID 37978 (TID 0x7f0127d08700) from PID 0; stack trace: ***
[2m[36m(pid=38090)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38090)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38090)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38090)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38090)[0m *** SIGSEGV (@0x0) received by PID 38090 (TID 0x7f360f23c700) from PID 0; stack trace: ***
[2m[36m(pid=38049)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38049)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38049)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38049)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37994)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37994)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37994)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37994)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37994)[0m *** SIGSEGV (@0x0) received by PID 37994 (TID 0x7f9d51808700) from PID 0; stack trace: ***
[2m[36m(pid=37994)[0m     @     0x7f9d513e1390 (unknown)
[2m[36m(pid=38071)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38071)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38071)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38071)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38071)[0m *** SIGSEGV (@0x0) received by PID 38071 (TID 0x7f4bd5ef3700) from PID 0; stack trace: ***
[2m[36m(pid=38110)[0m     @     0x7f4d78f27d91 at::TensorIterator::for_each()
[2m[36m(pid=38110)[0m     @     0x7f4d7980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38110)[0m     @     0x7f4d7982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38110)[0m     @     0x7f4d78ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38110)[0m     @     0x7f4d78ccd388 at::native::copy_impl()
[2m[36m(pid=38052)[0m     @     0x7f1da1e19ad3 at::TensorIterator::for_each()
[2m[36m(pid=38052)[0m     @     0x7f1da1e19d91 at::TensorIterator::for_each()
[2m[36m(pid=38052)[0m     @     0x7f1da26fcb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38052)[0m     @     0x7f1da271fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38033)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38033)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38033)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38033)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38033)[0m *** SIGSEGV (@0x0) received by PID 38033 (TID 0x7fc6169da700) from PID 0; stack trace: ***
[2m[36m(pid=38033)[0m     @     0x7fc6165b3390 (unknown)
[2m[36m(pid=38099)[0m     @     0x7f6daf176d91 at::TensorIterator::for_each()
[2m[36m(pid=38099)[0m     @     0x7f6dafa59b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38099)[0m     @     0x7f6dafa7cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38099)[0m     @     0x7f6daef1ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38099)[0m     @     0x7f6daef1c388 at::native::copy_impl()
[2m[36m(pid=37983)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37983)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37983)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37983)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37983)[0m *** SIGSEGV (@0x0) received by PID 37983 (TID 0x7f6fc51ae700) from PID 0; stack trace: ***
[2m[36m(pid=37983)[0m     @     0x7f6fc4d87390 (unknown)
[2m[36m(pid=37983)[0m     @     0x7f40c4d24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37988)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37988)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37988)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37997)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37997)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37997)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38058)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38058)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38058)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38058)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38058)[0m *** SIGSEGV (@0x0) received by PID 38058 (TID 0x7f0a16d80700) from PID 0; stack trace: ***
[2m[36m(pid=37992)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37992)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37992)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38050)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38050)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38050)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38050)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38050)[0m *** SIGSEGV (@0x0) received by PID 38050 (TID 0x7f09cb0a5700) from PID 0; stack trace: ***
[2m[36m(pid=38020)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38020)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38020)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38020)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38020)[0m *** SIGSEGV (@0x0) received by PID 38020 (TID 0x7f83c55d5700) from PID 0; stack trace: ***
[2m[36m(pid=37980)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37980)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37980)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37980)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37980)[0m *** SIGSEGV (@0x0) received by PID 37980 (TID 0x7fb962b51700) from PID 0; stack trace: ***
[2m[36m(pid=37973)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37973)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37973)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37973)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37973)[0m *** SIGSEGV (@0x0) received by PID 37973 (TID 0x7fb05e38e700) from PID 0; stack trace: ***
[2m[36m(pid=37990)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37990)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37990)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38047)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38047)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38047)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38054)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38054)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38054)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38048)[0m     @     0x7f21ff9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38048)[0m     @     0x7f21fee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38048)[0m     @     0x7f21fee99388 at::native::copy_impl()
[2m[36m(pid=38048)[0m     @     0x7f21fee9b5a4 at::native::copy_()
[2m[36m(pid=38097)[0m     @     0x7f3574bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=38097)[0m     @     0x7f3574bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=38097)[0m     @     0x7f35754b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38097)[0m     @     0x7f35754d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38097)[0m     @     0x7f3574979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38097)[0m     @     0x7f3574977388 at::native::copy_impl()
[2m[36m(pid=38106)[0m     @     0x7f1ae02b3d91 at::TensorIterator::for_each()
[2m[36m(pid=38106)[0m     @     0x7f1ae0b96b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38106)[0m     @     0x7f1ae0bb9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38106)[0m     @     0x7f1ae005ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38106)[0m     @     0x7f1ae0059388 at::native::copy_impl()
[2m[36m(pid=37993)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37993)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37993)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37993)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37993)[0m *** SIGSEGV (@0x0) received by PID 37993 (TID 0x7fb36af56700) from PID 0; stack trace: ***
[2m[36m(pid=37984)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37984)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37984)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37984)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37984)[0m *** SIGSEGV (@0x0) received by PID 37984 (TID 0x7fcbe1a3c700) from PID 0; stack trace: ***
[2m[36m(pid=37984)[0m     @     0x7fcbe1615390 (unknown)
[2m[36m(pid=37984)[0m     @     0x7f9ce15a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38098)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38098)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38098)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38098)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38098)[0m *** SIGSEGV (@0x0) received by PID 38098 (TID 0x7fde0c4ff700) from PID 0; stack trace: ***
[2m[36m(pid=38098)[0m     @     0x7fde0c0d8390 (unknown)
[2m[36m(pid=38057)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38057)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38057)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38057)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38057)[0m *** SIGSEGV (@0x0) received by PID 38057 (TID 0x7f973f854700) from PID 0; stack trace: ***
[2m[36m(pid=38057)[0m     @     0x7f973f42d390 (unknown)
[2m[36m(pid=38057)[0m     @     0x7f683f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38057)[0m     @     0x7f683e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37975)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37975)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37975)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37975)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37975)[0m *** SIGSEGV (@0x0) received by PID 37975 (TID 0x7f6fa1c23700) from PID 0; stack trace: ***
[2m[36m(pid=38055)[0m     @     0x7f7269868d91 at::TensorIterator::for_each()
[2m[36m(pid=38055)[0m     @     0x7f726a14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38055)[0m     @     0x7f726a16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38055)[0m     @     0x7f7269610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38046)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38046)[0m *** SIGSEGV (@0x0) received by PID 38046 (TID 0x7f91a244e700) from PID 0; stack trace: ***
[2m[36m(pid=38046)[0m     @     0x7f91a2027390 (unknown)
[2m[36m(pid=38029)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38029)[0m *** SIGSEGV (@0x0) received by PID 38029 (TID 0x7fc5e8177700) from PID 0; stack trace: ***
[2m[36m(pid=38029)[0m     @     0x7fc5e7d50390 (unknown)
[2m[36m(pid=38029)[0m     @     0x7f96e7cd6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38029)[0m     @     0x7f96e74017db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37970)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37970)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37970)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37970)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37970)[0m *** SIGSEGV (@0x0) received by PID 37970 (TID 0x7f370dfbd700) from PID 0; stack trace: ***
[2m[36m(pid=38053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38053)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38053)[0m *** SIGSEGV (@0x0) received by PID 38053 (TID 0x7f06504d5700) from PID 0; stack trace: ***
[2m[36m(pid=38073)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38073)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38073)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38073)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38065)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38065)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38065)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38078)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38078)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38078)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38078)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38078)[0m *** SIGSEGV (@0x0) received by PID 38078 (TID 0x7f05f7102700) from PID 0; stack trace: ***
[2m[36m(pid=38078)[0m     @     0x7f05f6cdb390 (unknown)
[2m[36m(pid=37996)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37996)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37996)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37996)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37996)[0m *** SIGSEGV (@0x0) received by PID 37996 (TID 0x7f2313a82700) from PID 0; stack trace: ***
[2m[36m(pid=37996)[0m     @     0x7f231365b390 (unknown)
[2m[36m(pid=38024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38024)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38024)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38024)[0m *** SIGSEGV (@0x0) received by PID 38024 (TID 0x7ff8810e8700) from PID 0; stack trace: ***
[2m[36m(pid=38001)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38001)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38001)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38001)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38001)[0m *** SIGSEGV (@0x0) received by PID 38001 (TID 0x7f44458c1700) from PID 0; stack trace: ***
[2m[36m(pid=38026)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38026)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38026)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38026)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38026)[0m *** SIGSEGV (@0x0) received by PID 38026 (TID 0x7fb958776700) from PID 0; stack trace: ***
[2m[36m(pid=38026)[0m     @     0x7fb95834f390 (unknown)
[2m[36m(pid=37985)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37985)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37985)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37985)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37985)[0m *** SIGSEGV (@0x0) received by PID 37985 (TID 0x7fe843444700) from PID 0; stack trace: ***
[2m[36m(pid=37999)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37999)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37999)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37999)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37999)[0m *** SIGSEGV (@0x0) received by PID 37999 (TID 0x7ff9a84ec700) from PID 0; stack trace: ***
[2m[36m(pid=37971)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37971)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37971)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37971)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37971)[0m *** SIGSEGV (@0x0) received by PID 37971 (TID 0x7f7e157ce700) from PID 0; stack trace: ***
[2m[36m(pid=37971)[0m     @     0x7f7e153a7390 (unknown)
[2m[36m(pid=38041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38041)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38041)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38041)[0m *** SIGSEGV (@0x0) received by PID 38041 (TID 0x7f3e4d5c8700) from PID 0; stack trace: ***
[2m[36m(pid=38041)[0m     @     0x7f3e4d1a1390 (unknown)
[2m[36m(pid=37969)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37969)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37969)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37969)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37969)[0m *** SIGSEGV (@0x0) received by PID 37969 (TID 0x7f215c89a700) from PID 0; stack trace: ***
[2m[36m(pid=37991)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37991)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37991)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37991)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37991)[0m *** SIGSEGV (@0x0) received by PID 37991 (TID 0x7ffbf224e700) from PID 0; stack trace: ***
[2m[36m(pid=37991)[0m     @     0x7ffbf1e27390 (unknown)
[2m[36m(pid=37991)[0m     @     0x7fccf1db7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37974)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37974)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37974)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37974)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37974)[0m *** SIGSEGV (@0x0) received by PID 37974 (TID 0x7ffb8eb06700) from PID 0; stack trace: ***
[2m[36m(pid=37974)[0m     @     0x7ffb8e6df390 (unknown)
[2m[36m(pid=37974)[0m     @     0x7fcc8e66bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37974)[0m     @     0x7fcc8dd967db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37976)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37976)[0m *** SIGSEGV (@0x0) received by PID 37976 (TID 0x7fbfe7a57700) from PID 0; stack trace: ***
[2m[36m(pid=37976)[0m     @     0x7fbfe7630390 (unknown)
[2m[36m(pid=37976)[0m     @     0x7f90e75f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37976)[0m     @     0x7f90e6d1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37995)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37995)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37995)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37995)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37995)[0m *** SIGSEGV (@0x0) received by PID 37995 (TID 0x7f1a84f42700) from PID 0; stack trace: ***
[2m[36m(pid=37995)[0m     @     0x7f1a84b1b390 (unknown)
[2m[36m(pid=37995)[0m     @     0x7eeb849e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37995)[0m     @     0x7eeb841137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37989)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37989)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37989)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37989)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37989)[0m *** SIGSEGV (@0x0) received by PID 37989 (TID 0x7f03b8739700) from PID 0; stack trace: ***
[2m[36m(pid=37989)[0m     @     0x7f03b8312390 (unknown)
[2m[36m(pid=37989)[0m     @     0x7ed4b829df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37989)[0m     @     0x7ed4b79c87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37981)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37981)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37981)[0m *** SIGSEGV (@0x0) received by PID 37981 (TID 0x7f05e4161700) from PID 0; stack trace: ***
[2m[36m(pid=37981)[0m     @     0x7f05e3d3a390 (unknown)
[2m[36m(pid=37981)[0m     @     0x7ed6e3ce0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37981)[0m     @     0x7ed6e340b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37979)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37979)[0m *** SIGSEGV (@0x0) received by PID 37979 (TID 0x7fc634719700) from PID 0; stack trace: ***
[2m[36m(pid=37979)[0m     @     0x7fc6342f2390 (unknown)
[2m[36m(pid=37979)[0m     @     0x7f9734297f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37979)[0m     @     0x7f97339c27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38043)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38043)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38043)[0m *** SIGSEGV (@0x0) received by PID 38043 (TID 0x7f9edfcf2700) from PID 0; stack trace: ***
[2m[36m(pid=38043)[0m     @     0x7f9edf8cb390 (unknown)
[2m[36m(pid=38043)[0m     @     0x7f6fdf751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37977)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37977)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37977)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37977)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37977)[0m *** SIGSEGV (@0x0) received by PID 37977 (TID 0x7f8f30037700) from PID 0; stack trace: ***
[2m[36m(pid=37977)[0m     @     0x7f8f2fc10390 (unknown)
[2m[36m(pid=37977)[0m     @     0x7f602fb9af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37977)[0m     @     0x7f602f2c57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38064)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38064)[0m *** SIGSEGV (@0x0) received by PID 38064 (TID 0x7f2bf660e700) from PID 0; stack trace: ***
[2m[36m(pid=38064)[0m     @     0x7f2bf61e7390 (unknown)
[2m[36m(pid=38036)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38036)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38036)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38023)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38023)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38023)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38023)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38023)[0m *** SIGSEGV (@0x0) received by PID 38023 (TID 0x7f88d3e6f700) from PID 0; stack trace: ***
[2m[36m(pid=38063)[0m     @     0x7fb0fce935a4 at::native::copy_()
[2m[36m(pid=38063)[0m     @     0x7fb0fd57e4f5 at::Tensor::copy_()
[2m[36m(pid=38062)[0m     @     0x7f2773be0388 at::native::copy_impl()
[2m[36m(pid=38062)[0m     @     0x7f2773be25a4 at::native::copy_()
[2m[36m(pid=38086)[0m     @     0x7f9b1dcf7390 (unknown)
[2m[36m(pid=38086)[0m     @     0x7f6c1dc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38086)[0m     @     0x7f6c1d3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38086)[0m     @     0x7f6c1d33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38109)[0m     @     0x7f1489e38d91 at::TensorIterator::for_each()
[2m[36m(pid=38109)[0m     @     0x7f148a71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38109)[0m     @     0x7f148a73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38109)[0m     @     0x7f1489be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38037)[0m     @     0x7fae9fb105a4 at::native::copy_()
[2m[36m(pid=38037)[0m     @     0x7faea01fb4f5 at::Tensor::copy_()
[2m[36m(pid=38102)[0m     @     0x7f2df98215a4 at::native::copy_()
[2m[36m(pid=38102)[0m     @     0x7f2df9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=38102)[0m     @     0x7f2dfc3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38051)[0m     @     0x7f7f46d5ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38051)[0m     @     0x7f7f464897db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38084)[0m     @     0x7f4d812faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38084)[0m     @     0x7f4d812f8388 at::native::copy_impl()
[2m[36m(pid=38084)[0m     @     0x7f4d812fa5a4 at::native::copy_()
[2m[36m(pid=38067)[0m     @     0x7fc9f35a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38067)[0m     @     0x7fc9f35a1388 at::native::copy_impl()
[2m[36m(pid=38067)[0m     @     0x7fc9f35a35a4 at::native::copy_()
[2m[36m(pid=38096)[0m     @     0x7f8bafb11d91 at::TensorIterator::for_each()
[2m[36m(pid=38096)[0m     @     0x7f8bb03f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38096)[0m     @     0x7f8bb0417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38096)[0m     @     0x7f8baf8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38096)[0m     @     0x7f8baf8b7388 at::native::copy_impl()
[2m[36m(pid=38032)[0m     @     0x7f25a0e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38030)[0m     @     0x7fb7158fd390 (unknown)
[2m[36m(pid=38030)[0m     @     0x7f88156f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38030)[0m     @     0x7f8814e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38030)[0m     @     0x7f8814e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38076)[0m     @     0x7f442e9105a4 at::native::copy_()
[2m[36m(pid=38076)[0m     @     0x7f442effb4f5 at::Tensor::copy_()
[2m[36m(pid=38092)[0m     @     0x7fdcf1e06390 (unknown)
[2m[36m(pid=38092)[0m     @     0x7fadf1da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38092)[0m     @     0x7fadf14cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38094)[0m     @     0x7f249154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38003)[0m     @     0x7f9bab1737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38003)[0m     @     0x7f9bab1768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38081)[0m     @     0x7f43cf2c65a4 at::native::copy_()
[2m[36m(pid=38081)[0m     @     0x7f43cf9b14f5 at::Tensor::copy_()
[2m[36m(pid=38034)[0m     @     0x7f785549d390 (unknown)
[2m[36m(pid=38034)[0m     @     0x7f49553ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38034)[0m     @     0x7f4954af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38034)[0m     @     0x7f4954afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37972)[0m     @     0x7f70f44f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37972)[0m     @     0x7f70f3c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37972)[0m     @     0x7f70f3c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37978)[0m     @     0x7f01278e1390 (unknown)
[2m[36m(pid=37978)[0m     @     0x7ed22789ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37978)[0m     @     0x7ed226fc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37978)[0m     @     0x7ed226fcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38090)[0m     @     0x7f360ee15390 (unknown)
[2m[36m(pid=38090)[0m     @     0x7f070edb0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38090)[0m     @     0x7f070e4db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38049)[0m *** SIGSEGV (@0x0) received by PID 38049 (TID 0x7fef20d7d700) from PID 0; stack trace: ***
[2m[36m(pid=38049)[0m     @     0x7fef20956390 (unknown)
[2m[36m(pid=38049)[0m     @     0x7fc020911f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38049)[0m     @     0x7fc02003c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37994)[0m     @     0x7f6e51377f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37994)[0m     @     0x7f6e50aa27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37994)[0m     @     0x7f6e50aa58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38071)[0m     @     0x7f4bd5acc390 (unknown)
[2m[36m(pid=38071)[0m     @     0x7f1cd5a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38071)[0m     @     0x7f1cd51357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38071)[0m     @     0x7f1cd51388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38110)[0m     @     0x7f4d78ccf5a4 at::native::copy_()
[2m[36m(pid=38110)[0m     @     0x7f4d793ba4f5 at::Tensor::copy_()
[2m[36m(pid=38110)[0m     @     0x7f4d7b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38052)[0m     @     0x7f1da1bc1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38052)[0m     @     0x7f1da1bbf388 at::native::copy_impl()
[2m[36m(pid=38052)[0m     @     0x7f1da1bc15a4 at::native::copy_()
[2m[36m(pid=38033)[0m     @     0x7f97164f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38033)[0m     @     0x7f9715c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38033)[0m     @     0x7f9715c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38033)[0m     @     0x7f9715c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=38099)[0m     @     0x7f6daef1e5a4 at::native::copy_()
[2m[36m(pid=38099)[0m     @     0x7f6daf6094f5 at::Tensor::copy_()
[2m[36m(pid=38099)[0m     @     0x7f6db1adc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38099)[0m     @     0x7f6daf6094f5 at::Tensor::copy_()
[2m[36m(pid=37983)[0m     @     0x7f40c444f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37983)[0m     @     0x7f40c44528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37983)[0m     @     0x7f40c4452ad3 at::TensorIterator::for_each()
[2m[36m(pid=37988)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37988)[0m *** SIGSEGV (@0x0) received by PID 37988 (TID 0x7fe2eb281700) from PID 0; stack trace: ***
[2m[36m(pid=37988)[0m     @     0x7fe2eae5a390 (unknown)
[2m[36m(pid=37988)[0m     @     0x7fb3eae03f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37988)[0m     @     0x7fb3ea52e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37988)[0m     @     0x7fb3ea5318f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37997)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37997)[0m *** SIGSEGV (@0x0) received by PID 37997 (TID 0x7f9da9b59700) from PID 0; stack trace: ***
[2m[36m(pid=37997)[0m     @     0x7f9da9732390 (unknown)
[2m[36m(pid=37997)[0m     @     0x7f6ea96b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37997)[0m     @     0x7f6ea8ddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38058)[0m     @     0x7f0a16959390 (unknown)
[2m[36m(pid=38058)[0m     @     0x7edb168faf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38058)[0m     @     0x7edb160257db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38058)[0m     @     0x7edb160288f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37992)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37992)[0m *** SIGSEGV (@0x0) received by PID 37992 (TID 0x7fb34d5c0700) from PID 0; stack trace: ***
[2m[36m(pid=37992)[0m     @     0x7fb34d199390 (unknown)
[2m[36m(pid=37992)[0m     @     0x7f844d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37992)[0m     @     0x7f844c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37992)[0m     @     0x7f844c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38050)[0m     @     0x7f09cac7e390 (unknown)
[2m[36m(pid=38050)[0m     @     0x7edacaa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38050)[0m     @     0x7edaca14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38050)[0m     @     0x7edaca14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38020)[0m     @     0x7f83c51ae390 (unknown)
[2m[36m(pid=38020)[0m     @     0x7f54c50b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38020)[0m     @     0x7f54c47e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38020)[0m     @     0x7f54c47e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37980)[0m     @     0x7fb96272a390 (unknown)
[2m[36m(pid=37980)[0m     @     0x7f8a626abf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37980)[0m     @     0x7f8a61dd67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37980)[0m     @     0x7f8a61dd98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37986)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37986)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37986)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=37986)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37986)[0m *** SIGSEGV (@0x0) received by PID 37986 (TID 0x7f7ff90a0700) from PID 0; stack trace: ***
[2m[36m(pid=37986)[0m     @     0x7f7ff8c79390 (unknown)
[2m[36m(pid=37986)[0m     @     0x7f50f8b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37986)[0m     @     0x7f50f82667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38060)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=38060)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=38060)[0m *** Aborted at 1604572931 (unix time) try "date -d @1604572931" if you are using GNU date ***
[2m[36m(pid=38060)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38060)[0m *** SIGSEGV (@0x0) received by PID 38060 (TID 0x7fb83219c700) from PID 0; stack trace: ***
[2m[36m(pid=37973)[0m     @     0x7fb05df67390 (unknown)
[2m[36m(pid=37973)[0m     @     0x7f815de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37973)[0m     @     0x7f815d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37973)[0m     @     0x7f815d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37973)[0m     @     0x7f815d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=37990)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37990)[0m *** SIGSEGV (@0x0) received by PID 37990 (TID 0x7f4f43873700) from PID 0; stack trace: ***
[2m[36m(pid=37990)[0m     @     0x7f4f4344c390 (unknown)
[2m[36m(pid=37990)[0m     @     0x7f2043229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37990)[0m     @     0x7f20429547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37990)[0m     @     0x7f20429578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38047)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38047)[0m *** SIGSEGV (@0x0) received by PID 38047 (TID 0x7fdedeb60700) from PID 0; stack trace: ***
[2m[36m(pid=38047)[0m     @     0x7fdede739390 (unknown)
[2m[36m(pid=38047)[0m     @     0x7fafde4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38047)[0m     @     0x7fafddc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38047)[0m     @     0x7fafddc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38054)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38054)[0m *** SIGSEGV (@0x0) received by PID 38054 (TID 0x7fdcee21e700) from PID 0; stack trace: ***
[2m[36m(pid=38054)[0m     @     0x7fdceddf7390 (unknown)
[2m[36m(pid=38054)[0m     @     0x7fadedd77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38054)[0m     @     0x7faded4a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38054)[0m     @     0x7faded4a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38048)[0m     @     0x7f21ff5864f5 at::Tensor::copy_()
[2m[36m(pid=38048)[0m     @     0x7f2201a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38048)[0m     @     0x7f21ff5864f5 at::Tensor::copy_()
[2m[36m(pid=38048)[0m     @     0x7f220563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38048)[0m     @     0x55b2ec0e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38048)[0m     @     0x55b2ec042b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38048)[0m     @     0x55b2ec0cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38048)[0m     @     0x55b2ec0cea20 method_vectorcall
[2m[36m(pid=38048)[0m     @     0x55b2ec042bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38048)[0m     @     0x55b2ec0cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38048)[0m     @     0x55b2ec0ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38048)[0m     @     0x55b2ec043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38048)[0m     @     0x55b2ec0cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38048)[0m     @     0x55b2ec0ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38048)[0m     @     0x55b2ec043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38048)[0m     @     0x55b2ec0cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38048)[0m     @     0x55b2ec0ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38048)[0m     @     0x55b2ec043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38048)[0m     @     0x55b2ec0cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38048)[0m     @     0x55b2ec0ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38048)[0m     @     0x55b2ec043689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38097)[0m     @     0x7f35749795a4 at::native::copy_()
[2m[36m(pid=38097)[0m     @     0x7f35750644f5 at::Tensor::copy_()
[2m[36m(pid=38097)[0m     @     0x7f35775378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38106)[0m     @     0x7f1ae005b5a4 at::native::copy_()
[2m[36m(pid=38106)[0m     @     0x7f1ae07464f5 at::Tensor::copy_()
[2m[36m(pid=38106)[0m     @     0x7f1ae2c198de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37993)[0m     @     0x7fb36ab2f390 (unknown)
[2m[36m(pid=37993)[0m     @     0x7f846aa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37993)[0m     @     0x7f846a14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37993)[0m     @     0x7f846a14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37993)[0m     @     0x7f846a14fad3 at::TensorIterator::for_each()
[2m[36m(pid=37984)[0m     @     0x7f9ce0ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37984)[0m     @     0x7f9ce0cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37984)[0m     @     0x7f9ce0cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=38098)[0m     @     0x7faf0c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38098)[0m     @     0x7faf0b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38098)[0m     @     0x7faf0b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38098)[0m     @     0x7faf0b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=38057)[0m     @     0x7f683e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38057)[0m     @     0x7f683e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=37975)[0m     @     0x7f6fa17fc390 (unknown)
[2m[36m(pid=37975)[0m     @     0x7f40a16f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37975)[0m     @     0x7f40a0e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37975)[0m     @     0x7f40a0e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37975)[0m     @     0x7f40a0e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=38055)[0m     @     0x7f726960e388 at::native::copy_impl()
[2m[36m(pid=38055)[0m     @     0x7f72696105a4 at::native::copy_()
[2m[36m(pid=38055)[0m     @     0x7f7269cfb4f5 at::Tensor::copy_()
[2m[36m(pid=38055)[0m     @     0x7f726c1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38046)[0m     @     0x7f62a1e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38046)[0m     @     0x7f62a154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38046)[0m     @     0x7f62a15528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38046)[0m     @     0x7f62a1552ad3 at::TensorIterator::for_each()
[2m[36m(pid=38029)[0m     @     0x7f96e74048f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38029)[0m     @     0x7f96e7404ad3 at::TensorIterator::for_each()
[2m[36m(pid=38029)[0m     @     0x7f96e7404d91 at::TensorIterator::for_each()
[2m[36m(pid=37970)[0m     @     0x7f370db96390 (unknown)
[2m[36m(pid=37970)[0m     @     0x7f080db3af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37970)[0m     @     0x7f080d2657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37970)[0m     @     0x7f080d2688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37970)[0m     @     0x7f080d268ad3 at::TensorIterator::for_each()
[2m[36m(pid=38053)[0m     @     0x7f06500ae390 (unknown)
[2m[36m(pid=38053)[0m     @     0x7ed75001cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38053)[0m     @     0x7ed74f7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38053)[0m     @     0x7ed74f74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38073)[0m *** SIGSEGV (@0x0) received by PID 38073 (TID 0x7f33be1a1700) from PID 0; stack trace: ***
[2m[36m(pid=38073)[0m     @     0x7f33bdd7a390 (unknown)
[2m[36m(pid=38073)[0m     @     0x7f04bdd37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38073)[0m     @     0x7f04bd4627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38073)[0m     @     0x7f04bd4658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38065)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38065)[0m *** SIGSEGV (@0x0) received by PID 38065 (TID 0x7fe3aa4cf700) from PID 0; stack trace: ***
[2m[36m(pid=38065)[0m     @     0x7fe3aa0a8390 (unknown)
[2m[36m(pid=38078)[0m     @     0x7ed6f6c6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38078)[0m     @     0x7ed6f63957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38078)[0m     @     0x7ed6f63988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37996)[0m     @     0x7ef4135f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37996)[0m     @     0x7ef412d1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37996)[0m     @     0x7ef412d208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38024)[0m     @     0x7ff880cc1390 (unknown)
[2m[36m(pid=38024)[0m     @     0x7fc980bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38024)[0m     @     0x7fc9802fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38001)[0m     @     0x7f444549a390 (unknown)
[2m[36m(pid=38001)[0m     @     0x7f15453ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38001)[0m     @     0x7f1544af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38001)[0m     @     0x7f1544afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38026)[0m     @     0x7f8a58290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38026)[0m     @     0x7f8a579bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38026)[0m     @     0x7f8a579be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37985)[0m     @     0x7fe84301d390 (unknown)
[2m[36m(pid=37985)[0m     @     0x7fb942f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37985)[0m     @     0x7fb94263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37985)[0m     @     0x7fb9426418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37999)[0m     @     0x7ff9a80c5390 (unknown)
[2m[36m(pid=37999)[0m     @     0x7fcaa801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37999)[0m     @     0x7fcaa77477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37971)[0m     @     0x7f4f1533af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37971)[0m     @     0x7f4f14a657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37971)[0m     @     0x7f4f14a688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38041)[0m     @     0x7f0f4d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38041)[0m     @     0x7f0f4c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38041)[0m     @     0x7f0f4c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37969)[0m     @     0x7f215c473390 (unknown)
[2m[36m(pid=37969)[0m     @     0x7ef25c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37969)[0m     @     0x7ef25ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37991)[0m     @     0x7fccf14e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37991)[0m     @     0x7fccf14e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37974)[0m     @     0x7fcc8dd998f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37974)[0m     @     0x7fcc8dd99ad3 at::TensorIterator::for_each()
[2m[36m(pid=37976)[0m     @     0x7f90e6d208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37976)[0m     @     0x7f90e6d20ad3 at::TensorIterator::for_each()
[2m[36m(pid=37995)[0m     @     0x7eeb841168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37995)[0m     @     0x7eeb84116ad3 at::TensorIterator::for_each()
[2m[36m(pid=37989)[0m     @     0x7ed4b79cb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37989)[0m     @     0x7ed4b79cbad3 at::TensorIterator::for_each()
[2m[36m(pid=37981)[0m     @     0x7ed6e340e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37981)[0m     @     0x7ed6e340ead3 at::TensorIterator::for_each()
[2m[36m(pid=37979)[0m     @     0x7f97339c58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37979)[0m     @     0x7f97339c5ad3 at::TensorIterator::for_each()
[2m[36m(pid=38043)[0m     @     0x7f6fdee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38043)[0m     @     0x7f6fdee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37977)[0m     @     0x7f602f2c88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37977)[0m     @     0x7f602f2c8ad3 at::TensorIterator::for_each()
[2m[36m(pid=38064)[0m     @     0x7efcf613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38064)[0m     @     0x7efcf58657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38064)[0m     @     0x7efcf58688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38064)[0m     @     0x7efcf5868ad3 at::TensorIterator::for_each()
[2m[36m(pid=38036)[0m PC: @                0x0 (unknown)
[2m[36m(pid=38036)[0m *** SIGSEGV (@0x0) received by PID 38036 (TID 0x7f3bc936d700) from PID 0; stack trace: ***
[2m[36m(pid=38036)[0m     @     0x7f3bc8f46390 (unknown)
[2m[36m(pid=38023)[0m     @     0x7f88d3a48390 (unknown)
[2m[36m(pid=38023)[0m     @     0x7f59d38def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38023)[0m     @     0x7f59d30097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38063)[0m     @     0x7fb0ffa518de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38063)[0m     @     0x7fb0fd57e4f5 at::Tensor::copy_()
[2m[36m(pid=38063)[0m     @     0x7fb10362979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38063)[0m     @     0x558286125fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38063)[0m     @     0x558286080b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38063)[0m     @     0x55828610bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38063)[0m     @     0x55828610ca20 method_vectorcall
[2m[36m(pid=38063)[0m     @     0x558286080bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38063)[0m     @     0x55828610bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38063)[0m     @     0x55828610c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38063)[0m     @     0x558286081689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38063)[0m     @     0x55828610bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38063)[0m     @     0x55828610c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38063)[0m     @     0x558286081689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38063)[0m     @     0x55828610bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38063)[0m     @     0x55828610c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38063)[0m     @     0x558286081689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38063)[0m     @     0x55828610bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38063)[0m     @     0x55828610c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38063)[0m     @     0x558286081689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38062)[0m     @     0x7f27742cd4f5 at::Tensor::copy_()
[2m[36m(pid=38062)[0m     @     0x7f27767a08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38062)[0m     @     0x7f27742cd4f5 at::Tensor::copy_()
[2m[36m(pid=38062)[0m     @     0x7f277a37879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38062)[0m     @     0x5599fb12ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38062)[0m     @     0x5599fb08ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38062)[0m     @     0x5599fb115baf _PyEval_EvalCodeWithName
[2m[36m(pid=38062)[0m     @     0x5599fb116a20 method_vectorcall
[2m[36m(pid=38062)[0m     @     0x5599fb08abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38062)[0m     @     0x5599fb115baf _PyEval_EvalCodeWithName
[2m[36m(pid=38062)[0m     @     0x5599fb116643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38062)[0m     @     0x5599fb08b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38062)[0m     @     0x5599fb115baf _PyEval_EvalCodeWithName
[2m[36m(pid=38062)[0m     @     0x5599fb116643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38062)[0m     @     0x5599fb08b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38062)[0m     @     0x5599fb115baf _PyEval_EvalCodeWithName
[2m[36m(pid=38062)[0m     @     0x5599fb116643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38062)[0m     @     0x5599fb08b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38062)[0m     @     0x5599fb115baf _PyEval_EvalCodeWithName
[2m[36m(pid=38062)[0m     @     0x5599fb116643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38062)[0m     @     0x5599fb08b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38086)[0m     @     0x7f6c1d33bad3 at::TensorIterator::for_each()
[2m[36m(pid=38086)[0m     @     0x7f6c1d33bd91 at::TensorIterator::for_each()
[2m[36m(pid=38086)[0m     @     0x7f6c1dc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38086)[0m     @     0x7f6c1dc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38109)[0m     @     0x7f1489bde388 at::native::copy_impl()
[2m[36m(pid=38109)[0m     @     0x7f1489be05a4 at::native::copy_()
[2m[36m(pid=38109)[0m     @     0x7f148a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=38109)[0m     @     0x7f148c79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38037)[0m     @     0x7faea26ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38037)[0m     @     0x7faea01fb4f5 at::Tensor::copy_()
[2m[36m(pid=38037)[0m     @     0x7faea62a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38037)[0m     @     0x55d59e9fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38037)[0m     @     0x55d59e95ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38037)[0m     @     0x55d59e9e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38037)[0m     @     0x55d59e9e6a20 method_vectorcall
[2m[36m(pid=38037)[0m     @     0x55d59e95abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38037)[0m     @     0x55d59e9e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38037)[0m     @     0x55d59e9e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38037)[0m     @     0x55d59e95b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38037)[0m     @     0x55d59e9e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38037)[0m     @     0x55d59e9e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38037)[0m     @     0x55d59e95b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38037)[0m     @     0x55d59e9e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38037)[0m     @     0x55d59e9e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38037)[0m     @     0x55d59e95b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38037)[0m     @     0x55d59e9e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38037)[0m     @     0x55d59e9e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38037)[0m     @     0x55d59e95b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38102)[0m     @     0x7f2df9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=38102)[0m     @     0x7f2dfffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38102)[0m     @     0x561fdf69bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38102)[0m     @     0x561fdf5f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38102)[0m     @     0x561fdf681baf _PyEval_EvalCodeWithName
[2m[36m(pid=38102)[0m     @     0x561fdf682a20 method_vectorcall
[2m[36m(pid=38102)[0m     @     0x561fdf5f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38102)[0m     @     0x561fdf681baf _PyEval_EvalCodeWithName
[2m[36m(pid=38102)[0m     @     0x561fdf682643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38102)[0m     @     0x561fdf5f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38102)[0m     @     0x561fdf681baf _PyEval_EvalCodeWithName
[2m[36m(pid=38102)[0m     @     0x561fdf682643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38102)[0m     @     0x561fdf5f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38102)[0m     @     0x561fdf681baf _PyEval_EvalCodeWithName
[2m[36m(pid=38102)[0m     @     0x561fdf682643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38102)[0m     @     0x561fdf5f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38102)[0m     @     0x561fdf681baf _PyEval_EvalCodeWithName
[2m[36m(pid=38102)[0m     @     0x561fdf682643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38102)[0m     @     0x561fdf5f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x7f7f4648c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38051)[0m     @     0x7f7f4648cad3 at::TensorIterator::for_each()
[2m[36m(pid=38084)[0m     @     0x7f4d819e54f5 at::Tensor::copy_()
[2m[36m(pid=38084)[0m     @     0x7f4d83eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38084)[0m     @     0x7f4d819e54f5 at::Tensor::copy_()
[2m[36m(pid=38084)[0m     @     0x7f4d87a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38084)[0m     @     0x5646601d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38084)[0m     @     0x564660133b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38067)[0m     @     0x7fc9f3c8e4f5 at::Tensor::copy_()
[2m[36m(pid=38067)[0m     @     0x7fc9f61618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38067)[0m     @     0x7fc9f3c8e4f5 at::Tensor::copy_()
[2m[36m(pid=38067)[0m     @     0x7fc9f9d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38067)[0m     @     0x56533cfb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38067)[0m     @     0x56533cf14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38067)[0m     @     0x56533cf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38067)[0m     @     0x56533cfa0a20 method_vectorcall
[2m[36m(pid=38067)[0m     @     0x56533cf14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38067)[0m     @     0x56533cf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38067)[0m     @     0x56533cfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38067)[0m     @     0x56533cf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38067)[0m     @     0x56533cf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38067)[0m     @     0x56533cfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38067)[0m     @     0x56533cf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38096)[0m     @     0x7f8baf8b95a4 at::native::copy_()
[2m[36m(pid=38096)[0m     @     0x7f8baffa44f5 at::Tensor::copy_()
[2m[36m(pid=38096)[0m     @     0x7f8bb24778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38032)[0m     @     0x7f25a0e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38030)[0m     @     0x7f8814e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=38030)[0m     @     0x7f8814e22d91 at::TensorIterator::for_each()
[2m[36m(pid=38030)[0m     @     0x7f8815705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38030)[0m     @     0x7f8815728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38076)[0m     @     0x7f44314ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38076)[0m     @     0x7f442effb4f5 at::Tensor::copy_()
[2m[36m(pid=38076)[0m     @     0x7f44350a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38076)[0m     @     0x563398c52fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38076)[0m     @     0x563398badb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38076)[0m     @     0x563398c38baf _PyEval_EvalCodeWithName
[2m[36m(pid=38076)[0m     @     0x563398c39a20 method_vectorcall
[2m[36m(pid=38076)[0m     @     0x563398badbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38076)[0m     @     0x563398c38baf _PyEval_EvalCodeWithName
[2m[36m(pid=38076)[0m     @     0x563398c39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38076)[0m     @     0x563398bae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38076)[0m     @     0x563398c38baf _PyEval_EvalCodeWithName
[2m[36m(pid=38076)[0m     @     0x563398c39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38076)[0m     @     0x563398bae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38076)[0m     @     0x563398c38baf _PyEval_EvalCodeWithName
[2m[36m(pid=38076)[0m     @     0x563398c39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38076)[0m     @     0x563398bae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38076)[0m     @     0x563398c38baf _PyEval_EvalCodeWithName
[2m[36m(pid=38076)[0m     @     0x563398c39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38076)[0m     @     0x563398bae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38092)[0m     @     0x7fadf14d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38092)[0m     @     0x7fadf14d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=38092)[0m     @     0x7fadf14d2d91 at::TensorIterator::for_each()
[2m[36m(pid=38092)[0m     @     0x7fadf1db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38092)[0m     @     0x7fadf1dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38094)[0m     @     0x7f24915528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38003)[0m     @     0x7f9bab176ad3 at::TensorIterator::for_each()
[2m[36m(pid=38003)[0m     @     0x7f9bab176d91 at::TensorIterator::for_each()
[2m[36m(pid=38003)[0m     @     0x7f9baba59b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38003)[0m     @     0x7f9baba7cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38003)[0m     @     0x7f9baaf1ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38081)[0m     @     0x7f43d1e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38081)[0m     @     0x7f43cf9b14f5 at::Tensor::copy_()
[2m[36m(pid=38081)[0m     @     0x7f43d5a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38081)[0m     @     0x55b8cf3c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38081)[0m     @     0x55b8cf31bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38081)[0m     @     0x55b8cf3a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38081)[0m     @     0x55b8cf3a7a20 method_vectorcall
[2m[36m(pid=38081)[0m     @     0x55b8cf31bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38081)[0m     @     0x55b8cf3a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38081)[0m     @     0x55b8cf3a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38081)[0m     @     0x55b8cf31c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38081)[0m     @     0x55b8cf3a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38081)[0m     @     0x55b8cf3a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38081)[0m     @     0x55b8cf31c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38081)[0m     @     0x55b8cf3a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38081)[0m     @     0x55b8cf3a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38081)[0m     @     0x55b8cf31c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38081)[0m     @     0x55b8cf3a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38081)[0m     @     0x55b8cf3a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38081)[0m     @     0x55b8cf31c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38034)[0m     @     0x7f4954afaad3 at::TensorIterator::for_each()
[2m[36m(pid=38034)[0m     @     0x7f4954afad91 at::TensorIterator::for_each()
[2m[36m(pid=38034)[0m     @     0x7f49553ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38034)[0m     @     0x7f4955400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37972)[0m     @     0x7f70f3c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=37972)[0m     @     0x7f70f3c24d91 at::TensorIterator::for_each()
[2m[36m(pid=37972)[0m     @     0x7f70f4507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37972)[0m     @     0x7f70f452ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37978)[0m     @     0x7ed226fccad3 at::TensorIterator::for_each()
[2m[36m(pid=37978)[0m     @     0x7ed226fccd91 at::TensorIterator::for_each()
[2m[36m(pid=37978)[0m     @     0x7ed2278afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37978)[0m     @     0x7ed2278d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38090)[0m     @     0x7f070e4de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38090)[0m     @     0x7f070e4dead3 at::TensorIterator::for_each()
[2m[36m(pid=38090)[0m     @     0x7f070e4ded91 at::TensorIterator::for_each()
[2m[36m(pid=38090)[0m     @     0x7f070edc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38049)[0m     @     0x7fc02003f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38049)[0m     @     0x7fc02003fad3 at::TensorIterator::for_each()
[2m[36m(pid=38049)[0m     @     0x7fc02003fd91 at::TensorIterator::for_each()
[2m[36m(pid=38049)[0m     @     0x7fc020922b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37994)[0m     @     0x7f6e50aa5ad3 at::TensorIterator::for_each()
[2m[36m(pid=37994)[0m     @     0x7f6e50aa5d91 at::TensorIterator::for_each()
[2m[36m(pid=37994)[0m     @     0x7f6e51388b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37994)[0m     @     0x7f6e513abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37994)[0m     @     0x7f6e5084da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38071)[0m     @     0x7f1cd5138ad3 at::TensorIterator::for_each()
[2m[36m(pid=38071)[0m     @     0x7f1cd5138d91 at::TensorIterator::for_each()
[2m[36m(pid=38071)[0m     @     0x7f1cd5a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38071)[0m     @     0x7f1cd5a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38110)[0m     @     0x7f4d793ba4f5 at::Tensor::copy_()
[2m[36m(pid=38110)[0m     @     0x7f4d7f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38110)[0m     @     0x5628f98effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38110)[0m     @     0x5628f984ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38110)[0m     @     0x5628f98d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38110)[0m     @     0x5628f98d6a20 method_vectorcall
[2m[36m(pid=38110)[0m     @     0x5628f984abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38110)[0m     @     0x5628f98d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38110)[0m     @     0x5628f98d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38110)[0m     @     0x5628f984b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38110)[0m     @     0x5628f98d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38110)[0m     @     0x5628f98d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38110)[0m     @     0x5628f984b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38110)[0m     @     0x5628f98d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38110)[0m     @     0x5628f98d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38110)[0m     @     0x5628f984b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38110)[0m     @     0x5628f98d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=38110)[0m     @     0x5628f98d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38110)[0m     @     0x5628f984b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38052)[0m     @     0x7f1da22ac4f5 at::Tensor::copy_()
[2m[36m(pid=38052)[0m     @     0x7f1da477f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38052)[0m     @     0x7f1da22ac4f5 at::Tensor::copy_()
[2m[36m(pid=38052)[0m     @     0x7f1da835779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38052)[0m     @     0x563a708bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38052)[0m     @     0x563a70815b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38052)[0m     @     0x563a708a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38052)[0m     @     0x563a708a1a20 method_vectorcall
[2m[36m(pid=38052)[0m     @     0x563a70815bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38052)[0m     @     0x563a708a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38052)[0m     @     0x563a708a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38052)[0m     @     0x563a70816689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38052)[0m     @     0x563a708a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38052)[0m     @     0x563a708a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38052)[0m     @     0x563a70816689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38052)[0m     @     0x563a708a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38052)[0m     @     0x563a708a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38052)[0m     @     0x563a70816689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38052)[0m     @     0x563a708a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38052)[0m     @     0x563a708a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38052)[0m     @     0x563a70816689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38033)[0m     @     0x7f9715c27d91 at::TensorIterator::for_each()
[2m[36m(pid=38033)[0m     @     0x7f971650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38033)[0m     @     0x7f971652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38033)[0m     @     0x7f97159cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38099)[0m     @     0x7f6db56b479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38099)[0m     @     0x55ca2eea3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38099)[0m     @     0x55ca2edfeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38099)[0m     @     0x55ca2ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=38099)[0m     @     0x55ca2ee8aa20 method_vectorcall
[2m[36m(pid=38099)[0m     @     0x55ca2edfebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38099)[0m     @     0x55ca2ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=38099)[0m     @     0x55ca2ee8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38099)[0m     @     0x55ca2edff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38099)[0m     @     0x55ca2ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=38099)[0m     @     0x55ca2ee8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38099)[0m     @     0x55ca2edff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38099)[0m     @     0x55ca2ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=38099)[0m     @     0x55ca2ee8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38099)[0m     @     0x55ca2edff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38099)[0m     @     0x55ca2ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=38099)[0m     @     0x55ca2ee8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38099)[0m     @     0x55ca2edff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37983)[0m     @     0x7f40c4452d91 at::TensorIterator::for_each()
[2m[36m(pid=37983)[0m     @     0x7f40c4d35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37983)[0m     @     0x7f40c4d58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37983)[0m     @     0x7f40c41faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37988)[0m     @     0x7fb3ea531ad3 at::TensorIterator::for_each()
[2m[36m(pid=37988)[0m     @     0x7fb3ea531d91 at::TensorIterator::for_each()
[2m[36m(pid=37988)[0m     @     0x7fb3eae14b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37997)[0m     @     0x7f6ea8de28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37997)[0m     @     0x7f6ea8de2ad3 at::TensorIterator::for_each()
[2m[36m(pid=38058)[0m     @     0x7edb16028ad3 at::TensorIterator::for_each()
[2m[36m(pid=38058)[0m     @     0x7edb16028d91 at::TensorIterator::for_each()
[2m[36m(pid=38058)[0m     @     0x7edb1690bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37992)[0m     @     0x7f844c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=37992)[0m     @     0x7f844c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=38050)[0m     @     0x7edaca14fad3 at::TensorIterator::for_each()
[2m[36m(pid=38050)[0m     @     0x7edaca14fd91 at::TensorIterator::for_each()
[2m[36m(pid=38050)[0m     @     0x7edacaa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38020)[0m     @     0x7f54c47e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=38020)[0m     @     0x7f54c47e3d91 at::TensorIterator::for_each()
[2m[36m(pid=38020)[0m     @     0x7f54c50c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38020)[0m     @     0x7f54c50e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37980)[0m     @     0x7f8a61dd9ad3 at::TensorIterator::for_each()
[2m[36m(pid=37980)[0m     @     0x7f8a61dd9d91 at::TensorIterator::for_each()
[2m[36m(pid=37986)[0m     @     0x7f50f82698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37986)[0m     @     0x7f50f8269ad3 at::TensorIterator::for_each()
[2m[36m(pid=38060)[0m     @     0x7fb831d75390 (unknown)
[2m[36m(pid=38060)[0m     @     0x7f8931d12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38060)[0m     @     0x7f893143d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37973)[0m     @     0x7f815d552d91 at::TensorIterator::for_each()
[2m[36m(pid=37973)[0m     @     0x7f815de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37973)[0m     @     0x7f815de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37990)[0m     @     0x7f2042957ad3 at::TensorIterator::for_each()
[2m[36m(pid=37990)[0m     @     0x7f2042957d91 at::TensorIterator::for_each()
[2m[36m(pid=37990)[0m     @     0x7f204323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38047)[0m     @     0x7fafddc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=38047)[0m     @     0x7fafddc27d91 at::TensorIterator::for_each()
[2m[36m(pid=38054)[0m     @     0x7faded4a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=38054)[0m     @     0x7faded4a5d91 at::TensorIterator::for_each()
[2m[36m(pid=38054)[0m     @     0x7fadedd88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38097)[0m     @     0x7f35750644f5 at::Tensor::copy_()
[2m[36m(pid=38097)[0m     @     0x7f357b10f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38097)[0m     @     0x564bf992cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38097)[0m     @     0x564bf9887b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38097)[0m     @     0x564bf9912baf _PyEval_EvalCodeWithName
[2m[36m(pid=38097)[0m     @     0x564bf9913a20 method_vectorcall
[2m[36m(pid=38097)[0m     @     0x564bf9887bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38097)[0m     @     0x564bf9912baf _PyEval_EvalCodeWithName
[2m[36m(pid=38097)[0m     @     0x564bf9913643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38097)[0m     @     0x564bf9888689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38097)[0m     @     0x564bf9912baf _PyEval_EvalCodeWithName
[2m[36m(pid=38097)[0m     @     0x564bf9913643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38097)[0m     @     0x564bf9888689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38097)[0m     @     0x564bf9912baf _PyEval_EvalCodeWithName
[2m[36m(pid=38097)[0m     @     0x564bf9913643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38097)[0m     @     0x564bf9888689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38097)[0m     @     0x564bf9912baf _PyEval_EvalCodeWithName
[2m[36m(pid=38097)[0m     @     0x564bf9913643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38097)[0m     @     0x564bf9888689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38106)[0m     @     0x7f1ae07464f5 at::Tensor::copy_()
[2m[36m(pid=38106)[0m     @     0x7f1ae67f179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38106)[0m     @     0x55a46a32ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38106)[0m     @     0x55a46a28ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38106)[0m     @     0x55a46a315baf _PyEval_EvalCodeWithName
[2m[36m(pid=38106)[0m     @     0x55a46a316a20 method_vectorcall
[2m[36m(pid=38106)[0m     @     0x55a46a28abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38106)[0m     @     0x55a46a315baf _PyEval_EvalCodeWithName
[2m[36m(pid=38106)[0m     @     0x55a46a316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38106)[0m     @     0x55a46a28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38106)[0m     @     0x55a46a315baf _PyEval_EvalCodeWithName
[2m[36m(pid=38106)[0m     @     0x55a46a316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38106)[0m     @     0x55a46a28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38106)[0m     @     0x55a46a315baf _PyEval_EvalCodeWithName
[2m[36m(pid=38106)[0m     @     0x55a46a316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38106)[0m     @     0x55a46a28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38106)[0m     @     0x55a46a315baf _PyEval_EvalCodeWithName
[2m[36m(pid=38106)[0m     @     0x55a46a316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38106)[0m     @     0x55a46a28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37993)[0m     @     0x7f846a14fd91 at::TensorIterator::for_each()
[2m[36m(pid=37993)[0m     @     0x7f846aa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37993)[0m     @     0x7f846aa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37984)[0m     @     0x7f9ce0cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=37984)[0m     @     0x7f9ce15b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37984)[0m     @     0x7f9ce15d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37984)[0m     @     0x7f9ce0a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37984)[0m     @     0x7f9ce0a78388 at::native::copy_impl()
[2m[36m(pid=38098)[0m     @     0x7faf0b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=38098)[0m     @     0x7faf0c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38098)[0m     @     0x7faf0c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38057)[0m     @     0x7f683e957d91 at::TensorIterator::for_each()
[2m[36m(pid=38057)[0m     @     0x7f683f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38057)[0m     @     0x7f683f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38057)[0m     @     0x7f683e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38057)[0m     @     0x7f683e6fd388 at::native::copy_impl()
[2m[36m(pid=37975)[0m     @     0x7f40a0e22d91 at::TensorIterator::for_each()
[2m[36m(pid=37975)[0m     @     0x7f40a1705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37975)[0m     @     0x7f40a1728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38055)[0m     @     0x7f7269cfb4f5 at::Tensor::copy_()
[2m[36m(pid=38055)[0m     @     0x7f726fda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38055)[0m     @     0x55feef4a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38055)[0m     @     0x55feef3fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38055)[0m     @     0x55feef488baf _PyEval_EvalCodeWithName
[2m[36m(pid=38055)[0m     @     0x55feef489a20 method_vectorcall
[2m[36m(pid=38055)[0m     @     0x55feef3fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38055)[0m     @     0x55feef488baf _PyEval_EvalCodeWithName
[2m[36m(pid=38055)[0m     @     0x55feef489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38055)[0m     @     0x55feef3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38055)[0m     @     0x55feef488baf _PyEval_EvalCodeWithName
[2m[36m(pid=38055)[0m     @     0x55feef489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38055)[0m     @     0x55feef3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38055)[0m     @     0x55feef488baf _PyEval_EvalCodeWithName
[2m[36m(pid=38055)[0m     @     0x55feef489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38055)[0m     @     0x55feef3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38055)[0m     @     0x55feef488baf _PyEval_EvalCodeWithName
[2m[36m(pid=38055)[0m     @     0x55feef489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38055)[0m     @     0x55feef3fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38029)[0m     @     0x7f96e7ce7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38029)[0m     @     0x7f96e7d0ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38029)[0m     @     0x7f96e71aca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38029)[0m     @     0x7f96e71aa388 at::native::copy_impl()
[2m[36m(pid=37970)[0m     @     0x7f080d268d91 at::TensorIterator::for_each()
[2m[36m(pid=37970)[0m     @     0x7f080db4bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37970)[0m     @     0x7f080db6ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37970)[0m     @     0x7f080d010a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37970)[0m     @     0x7f080d00e388 at::native::copy_impl()
[2m[36m(pid=38053)[0m     @     0x7ed74f74aad3 at::TensorIterator::for_each()
[2m[36m(pid=38053)[0m     @     0x7ed74f74ad91 at::TensorIterator::for_each()
[2m[36m(pid=38053)[0m     @     0x7ed75002db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38053)[0m     @     0x7ed750050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38053)[0m     @     0x7ed74f4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38073)[0m     @     0x7f04bd465ad3 at::TensorIterator::for_each()
[2m[36m(pid=38073)[0m     @     0x7f04bd465d91 at::TensorIterator::for_each()
[2m[36m(pid=38073)[0m     @     0x7f04bdd48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38073)[0m     @     0x7f04bdd6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38065)[0m     @     0x7fb4aa04af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38065)[0m     @     0x7fb4a97757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38078)[0m     @     0x7ed6f6398ad3 at::TensorIterator::for_each()
[2m[36m(pid=38078)[0m     @     0x7ed6f6398d91 at::TensorIterator::for_each()
[2m[36m(pid=38078)[0m     @     0x7ed6f6c7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38078)[0m     @     0x7ed6f6c9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37996)[0m     @     0x7ef412d20ad3 at::TensorIterator::for_each()
[2m[36m(pid=37996)[0m     @     0x7ef412d20d91 at::TensorIterator::for_each()
[2m[36m(pid=37996)[0m     @     0x7ef413603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37996)[0m     @     0x7ef413626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38024)[0m     @     0x7fc9802ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38024)[0m     @     0x7fc9802ffad3 at::TensorIterator::for_each()
[2m[36m(pid=38024)[0m     @     0x7fc9802ffd91 at::TensorIterator::for_each()
[2m[36m(pid=38024)[0m     @     0x7fc980be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38001)[0m     @     0x7f1544afaad3 at::TensorIterator::for_each()
[2m[36m(pid=38001)[0m     @     0x7f1544afad91 at::TensorIterator::for_each()
[2m[36m(pid=38001)[0m     @     0x7f15453ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38001)[0m     @     0x7f1545400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38001)[0m     @     0x7f15448a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38026)[0m     @     0x7f8a579bead3 at::TensorIterator::for_each()
[2m[36m(pid=38026)[0m     @     0x7f8a579bed91 at::TensorIterator::for_each()
[2m[36m(pid=38026)[0m     @     0x7f8a582a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38026)[0m     @     0x7f8a582c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37985)[0m     @     0x7fb942641ad3 at::TensorIterator::for_each()
[2m[36m(pid=37985)[0m     @     0x7fb942641d91 at::TensorIterator::for_each()
[2m[36m(pid=37985)[0m     @     0x7fb942f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37985)[0m     @     0x7fb942f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37999)[0m     @     0x7fcaa774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37999)[0m     @     0x7fcaa774aad3 at::TensorIterator::for_each()
[2m[36m(pid=37999)[0m     @     0x7fcaa774ad91 at::TensorIterator::for_each()
[2m[36m(pid=37999)[0m     @     0x7fcaa802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37971)[0m     @     0x7f4f14a68ad3 at::TensorIterator::for_each()
[2m[36m(pid=37971)[0m     @     0x7f4f14a68d91 at::TensorIterator::for_each()
[2m[36m(pid=37971)[0m     @     0x7f4f1534bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37971)[0m     @     0x7f4f1536ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38041)[0m     @     0x7f0f4c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=38041)[0m     @     0x7f0f4c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=38041)[0m     @     0x7f0f4d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38041)[0m     @     0x7f0f4d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37969)[0m     @     0x7ef25ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37969)[0m     @     0x7ef25ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=37991)[0m     @     0x7fccf14e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=37991)[0m     @     0x7fccf14e5d91 at::TensorIterator::for_each()
[2m[36m(pid=37991)[0m     @     0x7fccf1dc8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37991)[0m     @     0x7fccf1debc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37991)[0m     @     0x7fccf128da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37974)[0m     @     0x7fcc8dd99d91 at::TensorIterator::for_each()
[2m[36m(pid=37974)[0m     @     0x7fcc8e67cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37974)[0m     @     0x7fcc8e69fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37974)[0m     @     0x7fcc8db41a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37974)[0m     @     0x7fcc8db3f388 at::native::copy_impl()
[2m[36m(pid=37976)[0m     @     0x7f90e6d20d91 at::TensorIterator::for_each()
[2m[36m(pid=37976)[0m     @     0x7f90e7603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37976)[0m     @     0x7f90e7626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37976)[0m     @     0x7f90e6ac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37976)[0m     @     0x7f90e6ac6388 at::native::copy_impl()
[2m[36m(pid=37995)[0m     @     0x7eeb84116d91 at::TensorIterator::for_each()
[2m[36m(pid=37995)[0m     @     0x7eeb849f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37995)[0m     @     0x7eeb84a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37995)[0m     @     0x7eeb83ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37995)[0m     @     0x7eeb83ebc388 at::native::copy_impl()
[2m[36m(pid=37989)[0m     @     0x7ed4b79cbd91 at::TensorIterator::for_each()
[2m[36m(pid=37989)[0m     @     0x7ed4b82aeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37989)[0m     @     0x7ed4b82d1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37989)[0m     @     0x7ed4b7773a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37989)[0m     @     0x7ed4b7771388 at::native::copy_impl()
[2m[36m(pid=37981)[0m     @     0x7ed6e340ed91 at::TensorIterator::for_each()
[2m[36m(pid=37981)[0m     @     0x7ed6e3cf1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37981)[0m     @     0x7ed6e3d14c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37981)[0m     @     0x7ed6e31b6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37981)[0m     @     0x7ed6e31b4388 at::native::copy_impl()
[2m[36m(pid=37979)[0m     @     0x7f97339c5d91 at::TensorIterator::for_each()
[2m[36m(pid=37979)[0m     @     0x7f97342a8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37979)[0m     @     0x7f97342cbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37979)[0m     @     0x7f973376da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37979)[0m     @     0x7f973376b388 at::native::copy_impl()
[2m[36m(pid=38043)[0m     @     0x7f6fdee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=38043)[0m     @     0x7f6fdee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=38043)[0m     @     0x7f6fdf762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38043)[0m     @     0x7f6fdf785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38043)[0m     @     0x7f6fdec27a93 at::native::DispatchStub<>::operator()<>()
2020-11-05 10:42:11,822	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=37977)[0m     @     0x7f602f2c8d91 at::TensorIterator::for_each()
[2m[36m(pid=37977)[0m     @     0x7f602fbabb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37977)[0m     @     0x7f602fbcec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37977)[0m     @     0x7f602f070a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37977)[0m     @     0x7f602f06e388 at::native::copy_impl()
[2m[36m(pid=38064)[0m     @     0x7efcf5868d91 at::TensorIterator::for_each()
[2m[36m(pid=38064)[0m     @     0x7efcf614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38064)[0m     @     0x7efcf616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38036)[0m     @     0x7f0cc8ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=38036)[0m     @     0x7f0cc85cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=38023)[0m     @     0x7f59d300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38023)[0m     @     0x7f59d300cad3 at::TensorIterator::for_each()
[2m[36m(pid=38086)[0m     @     0x7f6c1d0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38086)[0m     @     0x7f6c1d0e1388 at::native::copy_impl()
[2m[36m(pid=38109)[0m     @     0x7f148a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=38109)[0m     @     0x7f149037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38109)[0m     @     0x5601ede02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38109)[0m     @     0x5601edd5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38109)[0m     @     0x5601edde8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38109)[0m     @     0x5601edde9a20 method_vectorcall
[2m[36m(pid=38109)[0m     @     0x5601edd5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38109)[0m     @     0x5601edde8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38109)[0m     @     0x5601edde9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38109)[0m     @     0x5601edd5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38109)[0m     @     0x5601edde8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38109)[0m     @     0x5601edde9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38109)[0m     @     0x5601edd5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38109)[0m     @     0x5601edde8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38109)[0m     @     0x5601edde9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38109)[0m     @     0x5601edd5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38109)[0m     @     0x5601edde8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38109)[0m     @     0x5601edde9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38109)[0m     @     0x5601edd5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x7f7f4648cd91 at::TensorIterator::for_each()
[2m[36m(pid=38051)[0m     @     0x7f7f46d6fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38051)[0m     @     0x7f7f46d92c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38084)[0m     @     0x5646601bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38084)[0m     @     0x5646601bfa20 method_vectorcall
[2m[36m(pid=38084)[0m     @     0x564660133bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38084)[0m     @     0x5646601bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38084)[0m     @     0x5646601bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38084)[0m     @     0x564660134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38084)[0m     @     0x5646601bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38084)[0m     @     0x5646601bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38084)[0m     @     0x564660134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38084)[0m     @     0x5646601bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38084)[0m     @     0x5646601bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38084)[0m     @     0x564660134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38084)[0m     @     0x5646601bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38084)[0m     @     0x5646601bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38084)[0m     @     0x564660134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38067)[0m     @     0x56533cf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38067)[0m     @     0x56533cfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38067)[0m     @     0x56533cf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38067)[0m     @     0x56533cf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38067)[0m     @     0x56533cfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38067)[0m     @     0x56533cf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38096)[0m     @     0x7f8baffa44f5 at::Tensor::copy_()
[2m[36m(pid=38096)[0m     @     0x7f8bb604f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38096)[0m     @     0x562426d43fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38096)[0m     @     0x562426c9eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38096)[0m     @     0x562426d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=38096)[0m     @     0x562426d2aa20 method_vectorcall
[2m[36m(pid=38096)[0m     @     0x562426c9ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38096)[0m     @     0x562426d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=38096)[0m     @     0x562426d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38096)[0m     @     0x562426c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38096)[0m     @     0x562426d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=38096)[0m     @     0x562426d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38096)[0m     @     0x562426c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38096)[0m     @     0x562426d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=38096)[0m     @     0x562426d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38096)[0m     @     0x562426c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38096)[0m     @     0x562426d29baf _PyEval_EvalCodeWithName
[2m[36m(pid=38096)[0m     @     0x562426d2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38096)[0m     @     0x562426c9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38032)[0m     @     0x7f25a0e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=38032)[0m     @     0x7f25a0e22d91 at::TensorIterator::for_each()
[2m[36m(pid=38032)[0m     @     0x7f25a1705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38032)[0m     @     0x7f25a1728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38032)[0m     @     0x7f25a0bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38032)[0m     @     0x7f25a0bc8388 at::native::copy_impl()
[2m[36m(pid=38030)[0m     @     0x7f8814bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38030)[0m     @     0x7f8814bc8388 at::native::copy_impl()
[2m[36m(pid=38030)[0m     @     0x7f8814bca5a4 at::native::copy_()
[2m[36m(pid=38030)[0m     @     0x7f88152b54f5 at::Tensor::copy_()
[2m[36m(pid=38092)[0m     @     0x7fadf127aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38092)[0m     @     0x7fadf1278388 at::native::copy_impl()
[2m[36m(pid=38092)[0m     @     0x7fadf127a5a4 at::native::copy_()
[2m[36m(pid=38094)[0m     @     0x7f2491552ad3 at::TensorIterator::for_each()
[2m[36m(pid=38094)[0m     @     0x7f2491552d91 at::TensorIterator::for_each()
[2m[36m(pid=38094)[0m     @     0x7f2491e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38094)[0m     @     0x7f2491e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38003)[0m     @     0x7f9baaf1c388 at::native::copy_impl()
[2m[36m(pid=38003)[0m     @     0x7f9baaf1e5a4 at::native::copy_()
[2m[36m(pid=38003)[0m     @     0x7f9bab6094f5 at::Tensor::copy_()
[2m[36m(pid=38003)[0m     @     0x7f9badadc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38034)[0m     @     0x7f49548a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38034)[0m     @     0x7f49548a0388 at::native::copy_impl()
[2m[36m(pid=38034)[0m     @     0x7f49548a25a4 at::native::copy_()
[2m[36m(pid=37972)[0m     @     0x7f70f39cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37972)[0m     @     0x7f70f39ca388 at::native::copy_impl()
[2m[36m(pid=37972)[0m     @     0x7f70f39cc5a4 at::native::copy_()
[2m[36m(pid=37972)[0m     @     0x7f70f40b74f5 at::Tensor::copy_()
[2m[36m(pid=37972)[0m     @     0x7f70f658a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37978)[0m     @     0x7ed226d74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37978)[0m     @     0x7ed226d72388 at::native::copy_impl()
[2m[36m(pid=37978)[0m     @     0x7ed226d745a4 at::native::copy_()
[2m[36m(pid=37978)[0m     @     0x7ed22745f4f5 at::Tensor::copy_()
[2m[36m(pid=37978)[0m     @     0x7ed2299328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38090)[0m     @     0x7f070ede4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38090)[0m     @     0x7f070e286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38090)[0m     @     0x7f070e284388 at::native::copy_impl()
[2m[36m(pid=38090)[0m     @     0x7f070e2865a4 at::native::copy_()
[2m[36m(pid=38049)[0m     @     0x7fc020945c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38049)[0m     @     0x7fc01fde7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38049)[0m     @     0x7fc01fde5388 at::native::copy_impl()
[2m[36m(pid=38049)[0m     @     0x7fc01fde75a4 at::native::copy_()
[2m[36m(pid=37994)[0m     @     0x7f6e5084b388 at::native::copy_impl()
[2m[36m(pid=37994)[0m     @     0x7f6e5084d5a4 at::native::copy_()
[2m[36m(pid=37994)[0m     @     0x7f6e50f384f5 at::Tensor::copy_()
[2m[36m(pid=37994)[0m     @     0x7f6e5340b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38071)[0m     @     0x7f1cd4ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38071)[0m     @     0x7f1cd4ede388 at::native::copy_impl()
[2m[36m(pid=38071)[0m     @     0x7f1cd4ee05a4 at::native::copy_()
[2m[36m(pid=38071)[0m     @     0x7f1cd55cb4f5 at::Tensor::copy_()
[2m[36m(pid=38033)[0m     @     0x7f97159cd388 at::native::copy_impl()
[2m[36m(pid=38033)[0m     @     0x7f97159cf5a4 at::native::copy_()
[2m[36m(pid=38033)[0m     @     0x7f97160ba4f5 at::Tensor::copy_()
[2m[36m(pid=38033)[0m     @     0x7f971858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37983)[0m     @     0x7f40c41f8388 at::native::copy_impl()
[2m[36m(pid=37983)[0m     @     0x7f40c41fa5a4 at::native::copy_()
[2m[36m(pid=37983)[0m     @     0x7f40c48e54f5 at::Tensor::copy_()
[2m[36m(pid=37983)[0m     @     0x7f40c6db88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37988)[0m     @     0x7fb3eae37c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37988)[0m     @     0x7fb3ea2d9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37988)[0m     @     0x7fb3ea2d7388 at::native::copy_impl()
[2m[36m(pid=37988)[0m     @     0x7fb3ea2d95a4 at::native::copy_()
[2m[36m(pid=37997)[0m     @     0x7f6ea8de2d91 at::TensorIterator::for_each()
[2m[36m(pid=37997)[0m     @     0x7f6ea96c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37997)[0m     @     0x7f6ea96e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37997)[0m     @     0x7f6ea8b8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37997)[0m     @     0x7f6ea8b88388 at::native::copy_impl()
[2m[36m(pid=38058)[0m     @     0x7edb1692ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38058)[0m     @     0x7edb15dd0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38058)[0m     @     0x7edb15dce388 at::native::copy_impl()
[2m[36m(pid=38058)[0m     @     0x7edb15dd05a4 at::native::copy_()
[2m[36m(pid=37992)[0m     @     0x7f844d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37992)[0m     @     0x7f844d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37992)[0m     @     0x7f844c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37992)[0m     @     0x7f844c589388 at::native::copy_impl()
[2m[36m(pid=37992)[0m     @     0x7f844c58b5a4 at::native::copy_()
[2m[36m(pid=38050)[0m     @     0x7edacaa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38050)[0m     @     0x7edac9ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38050)[0m     @     0x7edac9ef5388 at::native::copy_impl()
[2m[36m(pid=38050)[0m     @     0x7edac9ef75a4 at::native::copy_()
[2m[36m(pid=38020)[0m     @     0x7f54c458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38020)[0m     @     0x7f54c4589388 at::native::copy_impl()
[2m[36m(pid=38020)[0m     @     0x7f54c458b5a4 at::native::copy_()
[2m[36m(pid=37980)[0m     @     0x7f8a626bcb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37980)[0m     @     0x7f8a626dfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37980)[0m     @     0x7f8a61b81a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37980)[0m     @     0x7f8a61b7f388 at::native::copy_impl()
[2m[36m(pid=37980)[0m     @     0x7f8a61b815a4 at::native::copy_()
[2m[36m(pid=37986)[0m     @     0x7f50f8269d91 at::TensorIterator::for_each()
[2m[36m(pid=37986)[0m     @     0x7f50f8b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37986)[0m     @     0x7f50f8b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37986)[0m     @     0x7f50f8011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37986)[0m     @     0x7f50f800f388 at::native::copy_impl()
[2m[36m(pid=37973)[0m     @     0x7f815d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37973)[0m     @     0x7f815d2f8388 at::native::copy_impl()
[2m[36m(pid=37973)[0m     @     0x7f815d2fa5a4 at::native::copy_()
[2m[36m(pid=37973)[0m     @     0x7f815d9e54f5 at::Tensor::copy_()
[2m[36m(pid=37990)[0m     @     0x7f204325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37990)[0m     @     0x7f20426ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37990)[0m     @     0x7f20426fd388 at::native::copy_impl()
[2m[36m(pid=37990)[0m     @     0x7f20426ff5a4 at::native::copy_()
[2m[36m(pid=38047)[0m     @     0x7fafde50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38047)[0m     @     0x7fafde52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38047)[0m     @     0x7fafdd9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38047)[0m     @     0x7fafdd9cd388 at::native::copy_impl()
[2m[36m(pid=38047)[0m     @     0x7fafdd9cf5a4 at::native::copy_()
[2m[36m(pid=38054)[0m     @     0x7fadeddabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38054)[0m     @     0x7faded24da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38054)[0m     @     0x7faded24b388 at::native::copy_impl()
[2m[36m(pid=38054)[0m     @     0x7faded24d5a4 at::native::copy_()
[2m[36m(pid=37993)[0m     @     0x7f8469ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37993)[0m     @     0x7f8469ef5388 at::native::copy_impl()
[2m[36m(pid=37993)[0m     @     0x7f8469ef75a4 at::native::copy_()
[2m[36m(pid=37993)[0m     @     0x7f846a5e24f5 at::Tensor::copy_()
[2m[36m(pid=37993)[0m     @     0x7f846cab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37984)[0m     @     0x7f9ce0a7a5a4 at::native::copy_()
[2m[36m(pid=37984)[0m     @     0x7f9ce11654f5 at::Tensor::copy_()
[2m[36m(pid=37984)[0m     @     0x7f9ce36388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37984)[0m     @     0x7f9ce11654f5 at::Tensor::copy_()
[2m[36m(pid=38098)[0m     @     0x7faf0b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38098)[0m     @     0x7faf0b4f0388 at::native::copy_impl()
[2m[36m(pid=38098)[0m     @     0x7faf0b4f25a4 at::native::copy_()
[2m[36m(pid=38098)[0m     @     0x7faf0bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=38057)[0m     @     0x7f683e6ff5a4 at::native::copy_()
[2m[36m(pid=38057)[0m     @     0x7f683edea4f5 at::Tensor::copy_()
[2m[36m(pid=38057)[0m     @     0x7f68412bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37975)[0m     @     0x7f40a0bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37975)[0m     @     0x7f40a0bc8388 at::native::copy_impl()
[2m[36m(pid=37975)[0m     @     0x7f40a0bca5a4 at::native::copy_()
[2m[36m(pid=37975)[0m     @     0x7f40a12b54f5 at::Tensor::copy_()
[2m[36m(pid=38046)[0m     @     0x7f62a1552d91 at::TensorIterator::for_each()
[2m[36m(pid=38029)[0m     @     0x7f96e71ac5a4 at::native::copy_()
[2m[36m(pid=38029)[0m     @     0x7f96e78974f5 at::Tensor::copy_()
[2m[36m(pid=38029)[0m     @     0x7f96e9d6a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38029)[0m     @     0x7f96e78974f5 at::Tensor::copy_()
[2m[36m(pid=37970)[0m     @     0x7f080d0105a4 at::native::copy_()
[2m[36m(pid=37970)[0m     @     0x7f080d6fb4f5 at::Tensor::copy_()
[2m[36m(pid=38053)[0m     @     0x7ed74f4f0388 at::native::copy_impl()
[2m[36m(pid=38053)[0m     @     0x7ed74f4f25a4 at::native::copy_()
[2m[36m(pid=38073)[0m     @     0x7f04bd20da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38073)[0m     @     0x7f04bd20b388 at::native::copy_impl()
[2m[36m(pid=38073)[0m     @     0x7f04bd20d5a4 at::native::copy_()
[2m[36m(pid=38065)[0m     @     0x7fb4a97788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38078)[0m     @     0x7ed6f6140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38078)[0m     @     0x7ed6f613e388 at::native::copy_impl()
[2m[36m(pid=38078)[0m     @     0x7ed6f61405a4 at::native::copy_()
[2m[36m(pid=37996)[0m     @     0x7ef412ac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37996)[0m     @     0x7ef412ac6388 at::native::copy_impl()
[2m[36m(pid=37996)[0m     @     0x7ef412ac85a4 at::native::copy_()
[2m[36m(pid=38024)[0m     @     0x7fc980c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38024)[0m     @     0x7fc9800a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38024)[0m     @     0x7fc9800a5388 at::native::copy_impl()
[2m[36m(pid=38001)[0m     @     0x7f15448a0388 at::native::copy_impl()
[2m[36m(pid=38001)[0m     @     0x7f15448a25a4 at::native::copy_()
[2m[36m(pid=38001)[0m     @     0x7f1544f8d4f5 at::Tensor::copy_()
[2m[36m(pid=38001)[0m     @     0x7f15474608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38026)[0m     @     0x7f8a57766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38026)[0m     @     0x7f8a57764388 at::native::copy_impl()
[2m[36m(pid=38026)[0m     @     0x7f8a577665a4 at::native::copy_()
[2m[36m(pid=37985)[0m     @     0x7fb9423e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37985)[0m     @     0x7fb9423e7388 at::native::copy_impl()
[2m[36m(pid=37985)[0m     @     0x7fb9423e95a4 at::native::copy_()
[2m[36m(pid=37999)[0m     @     0x7fcaa8050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37999)[0m     @     0x7fcaa74f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37999)[0m     @     0x7fcaa74f0388 at::native::copy_impl()
[2m[36m(pid=37971)[0m     @     0x7f4f14810a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37971)[0m     @     0x7f4f1480e388 at::native::copy_impl()
[2m[36m(pid=37971)[0m     @     0x7f4f148105a4 at::native::copy_()
[2m[36m(pid=38041)[0m     @     0x7f0f4c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38041)[0m     @     0x7f0f4c589388 at::native::copy_impl()
[2m[36m(pid=38041)[0m     @     0x7f0f4c58b5a4 at::native::copy_()
[2m[36m(pid=37969)[0m     @     0x7ef25ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=37969)[0m     @     0x7ef25c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37969)[0m     @     0x7ef25c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37969)[0m     @     0x7ef25b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37991)[0m     @     0x7fccf128b388 at::native::copy_impl()
[2m[36m(pid=37991)[0m     @     0x7fccf128d5a4 at::native::copy_()
[2m[36m(pid=37991)[0m     @     0x7fccf19784f5 at::Tensor::copy_()
[2m[36m(pid=37991)[0m     @     0x7fccf3e4b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37974)[0m     @     0x7fcc8db415a4 at::native::copy_()
[2m[36m(pid=37974)[0m     @     0x7fcc8e22c4f5 at::Tensor::copy_()
[2m[36m(pid=37974)[0m     @     0x7fcc906ff8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37974)[0m     @     0x7fcc8e22c4f5 at::Tensor::copy_()
[2m[36m(pid=37974)[0m     @     0x7fcc942d779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37974)[0m     @     0x564affef7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37974)[0m     @     0x564affe52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37974)[0m     @     0x564affeddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37974)[0m     @     0x564affedea20 method_vectorcall
[2m[36m(pid=37974)[0m     @     0x564affe52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37974)[0m     @     0x564affeddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37974)[0m     @     0x564affede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37974)[0m     @     0x564affe53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37974)[0m     @     0x564affeddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37974)[0m     @     0x564affede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37974)[0m     @     0x564affe53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37976)[0m     @     0x7f90e6ac85a4 at::native::copy_()
[2m[36m(pid=37976)[0m     @     0x7f90e71b34f5 at::Tensor::copy_()
[2m[36m(pid=37976)[0m     @     0x7f90e96868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37995)[0m     @     0x7eeb83ebe5a4 at::native::copy_()
[2m[36m(pid=37995)[0m     @     0x7eeb845a94f5 at::Tensor::copy_()
[2m[36m(pid=37995)[0m     @     0x7eeb86a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37995)[0m     @     0x7eeb845a94f5 at::Tensor::copy_()
[2m[36m(pid=37995)[0m     @     0x7eeb8a65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37995)[0m     @     0x558b53679fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37995)[0m     @     0x558b535d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37995)[0m     @     0x558b5365fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37995)[0m     @     0x558b53660a20 method_vectorcall
[2m[36m(pid=37995)[0m     @     0x558b535d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37995)[0m     @     0x558b5365fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37995)[0m     @     0x558b53660643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37995)[0m     @     0x558b535d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37995)[0m     @     0x558b5365fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37995)[0m     @     0x558b53660643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37995)[0m     @     0x558b535d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37989)[0m     @     0x7ed4b77735a4 at::native::copy_()
[2m[36m(pid=37989)[0m     @     0x7ed4b7e5e4f5 at::Tensor::copy_()
[2m[36m(pid=37989)[0m     @     0x7ed4ba3318de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37981)[0m     @     0x7ed6e31b65a4 at::native::copy_()
[2m[36m(pid=37981)[0m     @     0x7ed6e38a14f5 at::Tensor::copy_()
[2m[36m(pid=37981)[0m     @     0x7ed6e5d748de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37979)[0m     @     0x7f973376d5a4 at::native::copy_()
[2m[36m(pid=37979)[0m     @     0x7f9733e584f5 at::Tensor::copy_()
[2m[36m(pid=37979)[0m     @     0x7f973632b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37979)[0m     @     0x7f9733e584f5 at::Tensor::copy_()
[2m[36m(pid=37979)[0m     @     0x7f9739f0379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37979)[0m     @     0x5629c6554fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37979)[0m     @     0x5629c64afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37979)[0m     @     0x5629c653abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37979)[0m     @     0x5629c653ba20 method_vectorcall
[2m[36m(pid=37979)[0m     @     0x5629c64afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38043)[0m     @     0x7f6fdec25388 at::native::copy_impl()
[2m[36m(pid=38043)[0m     @     0x7f6fdec275a4 at::native::copy_()
[2m[36m(pid=38043)[0m     @     0x7f6fdf3124f5 at::Tensor::copy_()
[2m[36m(pid=38043)[0m     @     0x7f6fe17e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37977)[0m     @     0x7f602f0705a4 at::native::copy_()
[2m[36m(pid=37977)[0m     @     0x7f602f75b4f5 at::Tensor::copy_()
[2m[36m(pid=37977)[0m     @     0x7f6031c2e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38064)[0m     @     0x7efcf5610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38064)[0m     @     0x7efcf560e388 at::native::copy_impl()
[2m[36m(pid=38064)[0m     @     0x7efcf56105a4 at::native::copy_()
[2m[36m(pid=38064)[0m     @     0x7efcf5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=38036)[0m     @     0x7f0cc85d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38036)[0m     @     0x7f0cc85d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=38023)[0m     @     0x7f59d300cd91 at::TensorIterator::for_each()
[2m[36m(pid=38023)[0m     @     0x7f59d38efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38023)[0m     @     0x7f59d3912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38023)[0m     @     0x7f59d2db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38023)[0m     @     0x7f59d2db2388 at::native::copy_impl()
[2m[36m(pid=38086)[0m     @     0x7f6c1d0e35a4 at::native::copy_()
[2m[36m(pid=38086)[0m     @     0x7f6c1d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=38086)[0m     @     0x7f6c1fca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38086)[0m     @     0x7f6c1d7ce4f5 at::Tensor::copy_()
[2m[36m(pid=38086)[0m     @     0x7f6c2387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38086)[0m     @     0x5571efed8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38086)[0m     @     0x5571efe33b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38086)[0m     @     0x5571efebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38086)[0m     @     0x5571efebfa20 method_vectorcall
[2m[36m(pid=38086)[0m     @     0x5571efe33bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38086)[0m     @     0x5571efebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38086)[0m     @     0x5571efebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38051)[0m     @     0x7f7f46234a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38051)[0m     @     0x7f7f46232388 at::native::copy_impl()
[2m[36m(pid=38051)[0m     @     0x7f7f462345a4 at::native::copy_()
[2m[36m(pid=38051)[0m     @     0x7f7f4691f4f5 at::Tensor::copy_()
[2m[36m(pid=38051)[0m     @     0x7f7f48df28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38032)[0m     @     0x7f25a0bca5a4 at::native::copy_()
[2m[36m(pid=38032)[0m     @     0x7f25a12b54f5 at::Tensor::copy_()
[2m[36m(pid=38032)[0m     @     0x7f25a37888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38030)[0m     @     0x7f88177888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38030)[0m     @     0x7f88152b54f5 at::Tensor::copy_()
[2m[36m(pid=38030)[0m     @     0x7f881b36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38030)[0m     @     0x558f9a4cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38030)[0m     @     0x558f9a428b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38030)[0m     @     0x558f9a4b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38030)[0m     @     0x558f9a4b4a20 method_vectorcall
[2m[36m(pid=38030)[0m     @     0x558f9a428bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38030)[0m     @     0x558f9a4b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38030)[0m     @     0x558f9a4b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38030)[0m     @     0x558f9a429689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38030)[0m     @     0x558f9a4b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38030)[0m     @     0x558f9a4b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38030)[0m     @     0x558f9a429689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38030)[0m     @     0x558f9a4b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38092)[0m     @     0x7fadf19654f5 at::Tensor::copy_()
[2m[36m(pid=38092)[0m     @     0x7fadf3e388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38092)[0m     @     0x7fadf19654f5 at::Tensor::copy_()
[2m[36m(pid=38092)[0m     @     0x7fadf7a1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38092)[0m     @     0x560c23ffafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38092)[0m     @     0x560c23f55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38092)[0m     @     0x560c23fe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38092)[0m     @     0x560c23fe1a20 method_vectorcall
[2m[36m(pid=38092)[0m     @     0x560c23f55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38094)[0m     @     0x7f24912faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38094)[0m     @     0x7f24912f8388 at::native::copy_impl()
[2m[36m(pid=38094)[0m     @     0x7f24912fa5a4 at::native::copy_()
[2m[36m(pid=38003)[0m     @     0x7f9bab6094f5 at::Tensor::copy_()
[2m[36m(pid=38003)[0m     @     0x7f9bb16b479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38003)[0m     @     0x560be738cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38003)[0m     @     0x560be72e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38003)[0m     @     0x560be7372baf _PyEval_EvalCodeWithName
[2m[36m(pid=38003)[0m     @     0x560be7373a20 method_vectorcall
[2m[36m(pid=38003)[0m     @     0x560be72e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38003)[0m     @     0x560be7372baf _PyEval_EvalCodeWithName
[2m[36m(pid=38003)[0m     @     0x560be7373643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38003)[0m     @     0x560be72e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38003)[0m     @     0x560be7372baf _PyEval_EvalCodeWithName
[2m[36m(pid=38003)[0m     @     0x560be7373643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38003)[0m     @     0x560be72e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38003)[0m     @     0x560be7372baf _PyEval_EvalCodeWithName
[2m[36m(pid=38003)[0m     @     0x560be7373643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38003)[0m     @     0x560be72e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38003)[0m     @     0x560be7372baf _PyEval_EvalCodeWithName
[2m[36m(pid=38003)[0m     @     0x560be7373643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38003)[0m     @     0x560be72e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38034)[0m     @     0x7f4954f8d4f5 at::Tensor::copy_()
[2m[36m(pid=38034)[0m     @     0x7f49574608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38034)[0m     @     0x7f4954f8d4f5 at::Tensor::copy_()
[2m[36m(pid=38034)[0m     @     0x7f495b03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38034)[0m     @     0x557697501fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38034)[0m     @     0x55769745cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37972)[0m     @     0x7f70f40b74f5 at::Tensor::copy_()
[2m[36m(pid=37972)[0m     @     0x7f70fa16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37972)[0m     @     0x5627e43a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37972)[0m     @     0x5627e42fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37972)[0m     @     0x5627e4387baf _PyEval_EvalCodeWithName
[2m[36m(pid=37972)[0m     @     0x5627e4388a20 method_vectorcall
[2m[36m(pid=37972)[0m     @     0x5627e42fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37972)[0m     @     0x5627e4387baf _PyEval_EvalCodeWithName
[2m[36m(pid=37972)[0m     @     0x5627e4388643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37972)[0m     @     0x5627e42fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37972)[0m     @     0x5627e4387baf _PyEval_EvalCodeWithName
[2m[36m(pid=37972)[0m     @     0x5627e4388643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37972)[0m     @     0x5627e42fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37972)[0m     @     0x5627e4387baf _PyEval_EvalCodeWithName
[2m[36m(pid=37972)[0m     @     0x5627e4388643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37972)[0m     @     0x5627e42fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37972)[0m     @     0x5627e4387baf _PyEval_EvalCodeWithName
[2m[36m(pid=37972)[0m     @     0x5627e4388643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37972)[0m     @     0x5627e42fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37978)[0m     @     0x7ed22745f4f5 at::Tensor::copy_()
[2m[36m(pid=37978)[0m     @     0x7ed22d50a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37978)[0m     @     0x55e66d568fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37978)[0m     @     0x55e66d4c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37978)[0m     @     0x55e66d54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37978)[0m     @     0x55e66d54fa20 method_vectorcall
[2m[36m(pid=37978)[0m     @     0x55e66d4c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37978)[0m     @     0x55e66d54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37978)[0m     @     0x55e66d54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37978)[0m     @     0x55e66d4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37978)[0m     @     0x55e66d54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37978)[0m     @     0x55e66d54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37978)[0m     @     0x55e66d4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37978)[0m     @     0x55e66d54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37978)[0m     @     0x55e66d54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37978)[0m     @     0x55e66d4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37978)[0m     @     0x55e66d54ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37978)[0m     @     0x55e66d54f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37978)[0m     @     0x55e66d4c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38090)[0m     @     0x7f070e9714f5 at::Tensor::copy_()
[2m[36m(pid=38090)[0m     @     0x7f0710e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38090)[0m     @     0x7f070e9714f5 at::Tensor::copy_()
[2m[36m(pid=38049)[0m     @     0x7fc0204d24f5 at::Tensor::copy_()
[2m[36m(pid=38049)[0m     @     0x7fc0229a58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37994)[0m     @     0x7f6e50f384f5 at::Tensor::copy_()
[2m[36m(pid=37994)[0m     @     0x7f6e56fe379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37994)[0m     @     0x55d950114fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37994)[0m     @     0x55d95006fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37994)[0m     @     0x55d9500fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37994)[0m     @     0x55d9500fba20 method_vectorcall
[2m[36m(pid=37994)[0m     @     0x55d95006fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37994)[0m     @     0x55d9500fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37994)[0m     @     0x55d9500fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37994)[0m     @     0x55d950070689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37994)[0m     @     0x55d9500fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37994)[0m     @     0x55d9500fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37994)[0m     @     0x55d950070689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37994)[0m     @     0x55d9500fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37994)[0m     @     0x55d9500fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37994)[0m     @     0x55d950070689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37994)[0m     @     0x55d9500fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37994)[0m     @     0x55d9500fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37994)[0m     @     0x55d950070689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38071)[0m     @     0x7f1cd7a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38071)[0m     @     0x7f1cd55cb4f5 at::Tensor::copy_()
[2m[36m(pid=38071)[0m     @     0x7f1cdb67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38071)[0m     @     0x558d74790fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38071)[0m     @     0x558d746ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38071)[0m     @     0x558d74776baf _PyEval_EvalCodeWithName
[2m[36m(pid=38071)[0m     @     0x558d74777a20 method_vectorcall
[2m[36m(pid=38071)[0m     @     0x558d746ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38071)[0m     @     0x558d74776baf _PyEval_EvalCodeWithName
[2m[36m(pid=38071)[0m     @     0x558d74777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38071)[0m     @     0x558d746ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38071)[0m     @     0x558d74776baf _PyEval_EvalCodeWithName
[2m[36m(pid=38071)[0m     @     0x558d74777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38071)[0m     @     0x558d746ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38033)[0m     @     0x7f97160ba4f5 at::Tensor::copy_()
[2m[36m(pid=38033)[0m     @     0x7f971c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38033)[0m     @     0x562b7febcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38033)[0m     @     0x562b7fe17b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38033)[0m     @     0x562b7fea2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38033)[0m     @     0x562b7fea3a20 method_vectorcall
[2m[36m(pid=38033)[0m     @     0x562b7fe17bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38033)[0m     @     0x562b7fea2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38033)[0m     @     0x562b7fea3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38033)[0m     @     0x562b7fe18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38033)[0m     @     0x562b7fea2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38033)[0m     @     0x562b7fea3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38033)[0m     @     0x562b7fe18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38033)[0m     @     0x562b7fea2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38033)[0m     @     0x562b7fea3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38033)[0m     @     0x562b7fe18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38033)[0m     @     0x562b7fea2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38033)[0m     @     0x562b7fea3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38033)[0m     @     0x562b7fe18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37983)[0m     @     0x7f40c48e54f5 at::Tensor::copy_()
[2m[36m(pid=37983)[0m     @     0x7f40ca99079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37983)[0m     @     0x55c9894adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37983)[0m     @     0x55c989408b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37983)[0m     @     0x55c989493baf _PyEval_EvalCodeWithName
[2m[36m(pid=37983)[0m     @     0x55c989494a20 method_vectorcall
[2m[36m(pid=37983)[0m     @     0x55c989408bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37983)[0m     @     0x55c989493baf _PyEval_EvalCodeWithName
[2m[36m(pid=37983)[0m     @     0x55c989494643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37983)[0m     @     0x55c989409689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37983)[0m     @     0x55c989493baf _PyEval_EvalCodeWithName
[2m[36m(pid=37983)[0m     @     0x55c989494643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37983)[0m     @     0x55c989409689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37983)[0m     @     0x55c989493baf _PyEval_EvalCodeWithName
[2m[36m(pid=37983)[0m     @     0x55c989494643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37983)[0m     @     0x55c989409689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37983)[0m     @     0x55c989493baf _PyEval_EvalCodeWithName
[2m[36m(pid=37983)[0m     @     0x55c989494643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37983)[0m     @     0x55c989409689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37988)[0m     @     0x7fb3ea9c44f5 at::Tensor::copy_()
[2m[36m(pid=37988)[0m     @     0x7fb3ece978de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37997)[0m     @     0x7f6ea8b8a5a4 at::native::copy_()
[2m[36m(pid=37997)[0m     @     0x7f6ea92754f5 at::Tensor::copy_()
[2m[36m(pid=37997)[0m     @     0x7f6eab7488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38058)[0m     @     0x7edb164bb4f5 at::Tensor::copy_()
[2m[36m(pid=38058)[0m     @     0x7edb1898e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38058)[0m     @     0x7edb164bb4f5 at::Tensor::copy_()
[2m[36m(pid=38058)[0m     @     0x7edb1c56679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37992)[0m     @     0x7f844cc764f5 at::Tensor::copy_()
[2m[36m(pid=37992)[0m     @     0x7f844f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37992)[0m     @     0x7f844cc764f5 at::Tensor::copy_()
[2m[36m(pid=38050)[0m     @     0x7edaca5e24f5 at::Tensor::copy_()
[2m[36m(pid=38050)[0m     @     0x7edaccab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38050)[0m     @     0x7edaca5e24f5 at::Tensor::copy_()
[2m[36m(pid=38050)[0m     @     0x7edad068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38050)[0m     @     0x562d2474cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38050)[0m     @     0x562d246a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38020)[0m     @     0x7f54c4c764f5 at::Tensor::copy_()
[2m[36m(pid=38020)[0m     @     0x7f54c71498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38020)[0m     @     0x7f54c4c764f5 at::Tensor::copy_()
[2m[36m(pid=38020)[0m     @     0x7f54cad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38020)[0m     @     0x5643245edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38020)[0m     @     0x564324548b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38020)[0m     @     0x5643245d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38020)[0m     @     0x5643245d4a20 method_vectorcall
[2m[36m(pid=38020)[0m     @     0x564324548bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37980)[0m     @     0x7f8a6226c4f5 at::Tensor::copy_()
[2m[36m(pid=37980)[0m     @     0x7f8a6473f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37980)[0m     @     0x7f8a6226c4f5 at::Tensor::copy_()
[2m[36m(pid=37980)[0m     @     0x7f8a6831779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37980)[0m     @     0x557a23769fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37980)[0m     @     0x557a236c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37980)[0m     @     0x557a2374fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37980)[0m     @     0x557a23750a20 method_vectorcall
[2m[36m(pid=37980)[0m     @     0x557a236c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37980)[0m     @     0x557a2374fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37980)[0m     @     0x557a23750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37986)[0m     @     0x7f50f80115a4 at::native::copy_()
[2m[36m(pid=37986)[0m     @     0x7f50f86fc4f5 at::Tensor::copy_()
[2m[36m(pid=37986)[0m     @     0x7f50fabcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37973)[0m     @     0x7f815feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37973)[0m     @     0x7f815d9e54f5 at::Tensor::copy_()
[2m[36m(pid=37973)[0m     @     0x7f8163a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37973)[0m     @     0x55c072d55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37973)[0m     @     0x55c072cb0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37973)[0m     @     0x55c072d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37973)[0m     @     0x55c072d3ca20 method_vectorcall
[2m[36m(pid=37973)[0m     @     0x55c072cb0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37973)[0m     @     0x55c072d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37973)[0m     @     0x55c072d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37973)[0m     @     0x55c072cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37973)[0m     @     0x55c072d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37973)[0m     @     0x55c072d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37973)[0m     @     0x55c072cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37973)[0m     @     0x55c072d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37973)[0m     @     0x55c072d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37973)[0m     @     0x55c072cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37973)[0m     @     0x55c072d3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37973)[0m     @     0x55c072d3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37973)[0m     @     0x55c072cb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37990)[0m     @     0x7f2042dea4f5 at::Tensor::copy_()
[2m[36m(pid=37990)[0m     @     0x7f20452bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37990)[0m     @     0x7f2042dea4f5 at::Tensor::copy_()
[2m[36m(pid=37990)[0m     @     0x7f2048e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38047)[0m     @     0x7fafde0ba4f5 at::Tensor::copy_()
[2m[36m(pid=38047)[0m     @     0x7fafe058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38054)[0m     @     0x7faded9384f5 at::Tensor::copy_()
[2m[36m(pid=38054)[0m     @     0x7fadefe0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38054)[0m     @     0x7faded9384f5 at::Tensor::copy_()
[2m[36m(pid=37993)[0m     @     0x7f846a5e24f5 at::Tensor::copy_()
[2m[36m(pid=37993)[0m     @     0x7f847068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37993)[0m     @     0x55d82d98cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37993)[0m     @     0x55d82d8e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37993)[0m     @     0x55d82d972baf _PyEval_EvalCodeWithName
[2m[36m(pid=37993)[0m     @     0x55d82d973a20 method_vectorcall
[2m[36m(pid=37993)[0m     @     0x55d82d8e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37993)[0m     @     0x55d82d972baf _PyEval_EvalCodeWithName
[2m[36m(pid=37993)[0m     @     0x55d82d973643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37993)[0m     @     0x55d82d8e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37993)[0m     @     0x55d82d972baf _PyEval_EvalCodeWithName
[2m[36m(pid=37993)[0m     @     0x55d82d973643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37993)[0m     @     0x55d82d8e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37993)[0m     @     0x55d82d972baf _PyEval_EvalCodeWithName
[2m[36m(pid=37993)[0m     @     0x55d82d973643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37993)[0m     @     0x55d82d8e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37993)[0m     @     0x55d82d972baf _PyEval_EvalCodeWithName
[2m[36m(pid=37993)[0m     @     0x55d82d973643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37993)[0m     @     0x55d82d8e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37984)[0m     @     0x7f9ce721079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37984)[0m     @     0x55a8b99b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37984)[0m     @     0x55a8b9913b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37984)[0m     @     0x55a8b999ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37984)[0m     @     0x55a8b999fa20 method_vectorcall
[2m[36m(pid=37984)[0m     @     0x55a8b9913bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37984)[0m     @     0x55a8b999ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37984)[0m     @     0x55a8b999f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37984)[0m     @     0x55a8b9914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37984)[0m     @     0x55a8b999ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37984)[0m     @     0x55a8b999f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37984)[0m     @     0x55a8b9914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37984)[0m     @     0x55a8b999ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37984)[0m     @     0x55a8b999f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37984)[0m     @     0x55a8b9914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37984)[0m     @     0x55a8b999ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37984)[0m     @     0x55a8b999f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37984)[0m     @     0x55a8b9914689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38098)[0m     @     0x7faf0e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38098)[0m     @     0x7faf0bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=38098)[0m     @     0x7faf11c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38098)[0m     @     0x55f556f48fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38098)[0m     @     0x55f556ea3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38098)[0m     @     0x55f556f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38098)[0m     @     0x55f556f2fa20 method_vectorcall
[2m[36m(pid=38098)[0m     @     0x55f556ea3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38098)[0m     @     0x55f556f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38098)[0m     @     0x55f556f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38098)[0m     @     0x55f556ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38098)[0m     @     0x55f556f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38098)[0m     @     0x55f556f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38098)[0m     @     0x55f556ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38098)[0m     @     0x55f556f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38098)[0m     @     0x55f556f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38098)[0m     @     0x55f556ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38098)[0m     @     0x55f556f2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38098)[0m     @     0x55f556f2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38098)[0m     @     0x55f556ea4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38057)[0m     @     0x7f683edea4f5 at::Tensor::copy_()
[2m[36m(pid=38057)[0m     @     0x7f6844e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38057)[0m     @     0x5641bc407fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38057)[0m     @     0x5641bc362b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38057)[0m     @     0x5641bc3edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38057)[0m     @     0x5641bc3eea20 method_vectorcall
[2m[36m(pid=38057)[0m     @     0x5641bc362bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38057)[0m     @     0x5641bc3edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38057)[0m     @     0x5641bc3ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38057)[0m     @     0x5641bc363689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38057)[0m     @     0x5641bc3edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38057)[0m     @     0x5641bc3ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38057)[0m     @     0x5641bc363689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38057)[0m     @     0x5641bc3edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38057)[0m     @     0x5641bc3ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38057)[0m     @     0x5641bc363689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38057)[0m     @     0x5641bc3edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38057)[0m     @     0x5641bc3ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38057)[0m     @     0x5641bc363689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37975)[0m     @     0x7f40a37888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37975)[0m     @     0x7f40a12b54f5 at::Tensor::copy_()
[2m[36m(pid=37975)[0m     @     0x7f40a736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37975)[0m     @     0x559adecfefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37975)[0m     @     0x559adec59b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37975)[0m     @     0x559adece4baf _PyEval_EvalCodeWithName
[2m[36m(pid=37975)[0m     @     0x559adece5a20 method_vectorcall
[2m[36m(pid=37975)[0m     @     0x559adec59bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37975)[0m     @     0x559adece4baf _PyEval_EvalCodeWithName
[2m[36m(pid=37975)[0m     @     0x559adece5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37975)[0m     @     0x559adec5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37975)[0m     @     0x559adece4baf _PyEval_EvalCodeWithName
[2m[36m(pid=37975)[0m     @     0x559adece5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37975)[0m     @     0x559adec5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37975)[0m     @     0x559adece4baf _PyEval_EvalCodeWithName
[2m[36m(pid=37975)[0m     @     0x559adece5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37975)[0m     @     0x559adec5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37975)[0m     @     0x559adece4baf _PyEval_EvalCodeWithName
[2m[36m(pid=37975)[0m     @     0x559adece5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37975)[0m     @     0x559adec5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38046)[0m     @     0x7f62a1e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38046)[0m     @     0x7f62a1e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38046)[0m     @     0x7f62a12faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38046)[0m     @     0x7f62a12f8388 at::native::copy_impl()
[2m[36m(pid=38046)[0m     @     0x7f62a12fa5a4 at::native::copy_()
[2m[36m(pid=38029)[0m     @     0x7f96ed94279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38029)[0m     @     0x55993578ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38029)[0m     @     0x5599356eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38029)[0m     @     0x559935775baf _PyEval_EvalCodeWithName
[2m[36m(pid=38029)[0m     @     0x559935776a20 method_vectorcall
[2m[36m(pid=38029)[0m     @     0x5599356eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38029)[0m     @     0x559935775baf _PyEval_EvalCodeWithName
[2m[36m(pid=38029)[0m     @     0x559935776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38029)[0m     @     0x5599356eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38029)[0m     @     0x559935775baf _PyEval_EvalCodeWithName
[2m[36m(pid=38029)[0m     @     0x559935776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38029)[0m     @     0x5599356eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38029)[0m     @     0x559935775baf _PyEval_EvalCodeWithName
[2m[36m(pid=38029)[0m     @     0x559935776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38029)[0m     @     0x5599356eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38029)[0m     @     0x559935775baf _PyEval_EvalCodeWithName
[2m[36m(pid=38029)[0m     @     0x559935776643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38029)[0m     @     0x5599356eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37970)[0m     @     0x7f080fbce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37970)[0m     @     0x7f080d6fb4f5 at::Tensor::copy_()
[2m[36m(pid=37970)[0m     @     0x7f08137a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37970)[0m     @     0x55f3b819ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37970)[0m     @     0x55f3b80fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37970)[0m     @     0x55f3b8185baf _PyEval_EvalCodeWithName
[2m[36m(pid=37970)[0m     @     0x55f3b8186a20 method_vectorcall
[2m[36m(pid=37970)[0m     @     0x55f3b80fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37970)[0m     @     0x55f3b8185baf _PyEval_EvalCodeWithName
[2m[36m(pid=37970)[0m     @     0x55f3b8186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37970)[0m     @     0x55f3b80fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37970)[0m     @     0x55f3b8185baf _PyEval_EvalCodeWithName
[2m[36m(pid=37970)[0m     @     0x55f3b8186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37970)[0m     @     0x55f3b80fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37970)[0m     @     0x55f3b8185baf _PyEval_EvalCodeWithName
[2m[36m(pid=37970)[0m     @     0x55f3b8186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37970)[0m     @     0x55f3b80fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37970)[0m     @     0x55f3b8185baf _PyEval_EvalCodeWithName
[2m[36m(pid=37970)[0m     @     0x55f3b8186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37970)[0m     @     0x55f3b80fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38053)[0m     @     0x7ed74fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=38053)[0m     @     0x7ed7520b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38053)[0m     @     0x7ed74fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=38053)[0m     @     0x7ed755c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38053)[0m     @     0x55c4c019cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38053)[0m     @     0x55c4c00f7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38053)[0m     @     0x55c4c0182baf _PyEval_EvalCodeWithName
[2m[36m(pid=38053)[0m     @     0x55c4c0183a20 method_vectorcall
[2m[36m(pid=38053)[0m     @     0x55c4c00f7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38053)[0m     @     0x55c4c0182baf _PyEval_EvalCodeWithName
[2m[36m(pid=38053)[0m     @     0x55c4c0183643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38053)[0m     @     0x55c4c00f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38053)[0m     @     0x55c4c0182baf _PyEval_EvalCodeWithName
[2m[36m(pid=38053)[0m     @     0x55c4c0183643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38053)[0m     @     0x55c4c00f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38053)[0m     @     0x55c4c0182baf _PyEval_EvalCodeWithName
[2m[36m(pid=38053)[0m     @     0x55c4c0183643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38053)[0m     @     0x55c4c00f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38053)[0m     @     0x55c4c0182baf _PyEval_EvalCodeWithName
[2m[36m(pid=38053)[0m     @     0x55c4c0183643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38053)[0m     @     0x55c4c00f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38073)[0m     @     0x7f04bd8f84f5 at::Tensor::copy_()
[2m[36m(pid=38073)[0m     @     0x7f04bfdcb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38073)[0m     @     0x7f04bd8f84f5 at::Tensor::copy_()
[2m[36m(pid=38073)[0m     @     0x7f04c39a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38073)[0m     @     0x5629f6ce5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38073)[0m     @     0x5629f6c40b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38073)[0m     @     0x5629f6ccbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38073)[0m     @     0x5629f6ccca20 method_vectorcall
[2m[36m(pid=38073)[0m     @     0x5629f6c40bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38073)[0m     @     0x5629f6ccbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38073)[0m     @     0x5629f6ccc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38073)[0m     @     0x5629f6c41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38073)[0m     @     0x5629f6ccbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38073)[0m     @     0x5629f6ccc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38073)[0m     @     0x5629f6c41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38073)[0m     @     0x5629f6ccbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38073)[0m     @     0x5629f6ccc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38073)[0m     @     0x5629f6c41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38073)[0m     @     0x5629f6ccbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38073)[0m     @     0x5629f6ccc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38073)[0m     @     0x5629f6c41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38065)[0m     @     0x7fb4a9778ad3 at::TensorIterator::for_each()
[2m[36m(pid=38065)[0m     @     0x7fb4a9778d91 at::TensorIterator::for_each()
[2m[36m(pid=38065)[0m     @     0x7fb4aa05bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38065)[0m     @     0x7fb4aa07ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38065)[0m     @     0x7fb4a9520a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38078)[0m     @     0x7ed6f682b4f5 at::Tensor::copy_()
[2m[36m(pid=38078)[0m     @     0x7ed6f8cfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38078)[0m     @     0x7ed6f682b4f5 at::Tensor::copy_()
[2m[36m(pid=37996)[0m     @     0x7ef4131b34f5 at::Tensor::copy_()
[2m[36m(pid=37996)[0m     @     0x7ef4156868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37996)[0m     @     0x7ef4131b34f5 at::Tensor::copy_()
[2m[36m(pid=37996)[0m     @     0x7ef41925e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37996)[0m     @     0x55de8ca21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37996)[0m     @     0x55de8c97cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37996)[0m     @     0x55de8ca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=37996)[0m     @     0x55de8ca08a20 method_vectorcall
[2m[36m(pid=37996)[0m     @     0x55de8c97cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37996)[0m     @     0x55de8ca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=37996)[0m     @     0x55de8ca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37996)[0m     @     0x55de8c97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37996)[0m     @     0x55de8ca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=37996)[0m     @     0x55de8ca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37996)[0m     @     0x55de8c97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37996)[0m     @     0x55de8ca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=37996)[0m     @     0x55de8ca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37996)[0m     @     0x55de8c97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37996)[0m     @     0x55de8ca07baf _PyEval_EvalCodeWithName
[2m[36m(pid=37996)[0m     @     0x55de8ca08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37996)[0m     @     0x55de8c97d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38024)[0m     @     0x7fc9800a75a4 at::native::copy_()
[2m[36m(pid=38024)[0m     @     0x7fc9807924f5 at::Tensor::copy_()
[2m[36m(pid=38024)[0m     @     0x7fc982c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38024)[0m     @     0x7fc9807924f5 at::Tensor::copy_()
[2m[36m(pid=38001)[0m     @     0x7f1544f8d4f5 at::Tensor::copy_()
[2m[36m(pid=38001)[0m     @     0x7f154b03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38001)[0m     @     0x55cdf55b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38001)[0m     @     0x55cdf5512b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38001)[0m     @     0x55cdf559dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38001)[0m     @     0x55cdf559ea20 method_vectorcall
[2m[36m(pid=38001)[0m     @     0x55cdf5512bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38001)[0m     @     0x55cdf559dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38001)[0m     @     0x55cdf559e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38001)[0m     @     0x55cdf5513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38001)[0m     @     0x55cdf559dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38001)[0m     @     0x55cdf559e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38001)[0m     @     0x55cdf5513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38001)[0m     @     0x55cdf559dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38001)[0m     @     0x55cdf559e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38001)[0m     @     0x55cdf5513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38001)[0m     @     0x55cdf559dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38001)[0m     @     0x55cdf559e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38001)[0m     @     0x55cdf5513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38026)[0m     @     0x7f8a57e514f5 at::Tensor::copy_()
[2m[36m(pid=38026)[0m     @     0x7f8a5a3248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38026)[0m     @     0x7f8a57e514f5 at::Tensor::copy_()
[2m[36m(pid=38026)[0m     @     0x7f8a5defc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38026)[0m     @     0x55e13b8fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38026)[0m     @     0x55e13b858b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38026)[0m     @     0x55e13b8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38026)[0m     @     0x55e13b8e4a20 method_vectorcall
[2m[36m(pid=38026)[0m     @     0x55e13b858bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38026)[0m     @     0x55e13b8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38026)[0m     @     0x55e13b8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38026)[0m     @     0x55e13b859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38026)[0m     @     0x55e13b8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38026)[0m     @     0x55e13b8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38026)[0m     @     0x55e13b859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38026)[0m     @     0x55e13b8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38026)[0m     @     0x55e13b8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38026)[0m     @     0x55e13b859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38026)[0m     @     0x55e13b8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38026)[0m     @     0x55e13b8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38026)[0m     @     0x55e13b859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37985)[0m     @     0x7fb942ad44f5 at::Tensor::copy_()
[2m[36m(pid=37985)[0m     @     0x7fb944fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37985)[0m     @     0x7fb942ad44f5 at::Tensor::copy_()
[2m[36m(pid=37985)[0m     @     0x7fb948b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37985)[0m     @     0x55df5177dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37985)[0m     @     0x55df516d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37985)[0m     @     0x55df51763baf _PyEval_EvalCodeWithName
[2m[36m(pid=37985)[0m     @     0x55df51764a20 method_vectorcall
[2m[36m(pid=37985)[0m     @     0x55df516d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37985)[0m     @     0x55df51763baf _PyEval_EvalCodeWithName
[2m[36m(pid=37985)[0m     @     0x55df51764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37985)[0m     @     0x55df516d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37985)[0m     @     0x55df51763baf _PyEval_EvalCodeWithName
[2m[36m(pid=37985)[0m     @     0x55df51764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37985)[0m     @     0x55df516d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37985)[0m     @     0x55df51763baf _PyEval_EvalCodeWithName
[2m[36m(pid=37985)[0m     @     0x55df51764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37985)[0m     @     0x55df516d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37985)[0m     @     0x55df51763baf _PyEval_EvalCodeWithName
[2m[36m(pid=37985)[0m     @     0x55df51764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37985)[0m     @     0x55df516d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37999)[0m     @     0x7fcaa74f25a4 at::native::copy_()
[2m[36m(pid=37999)[0m     @     0x7fcaa7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=37999)[0m     @     0x7fcaaa0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37999)[0m     @     0x7fcaa7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=37999)[0m     @     0x7fcaadc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37999)[0m     @     0x561ace769fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37999)[0m     @     0x561ace6c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37999)[0m     @     0x561ace74fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37999)[0m     @     0x561ace750a20 method_vectorcall
[2m[36m(pid=37999)[0m     @     0x561ace6c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37999)[0m     @     0x561ace74fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37999)[0m     @     0x561ace750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37999)[0m     @     0x561ace6c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37999)[0m     @     0x561ace74fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37971)[0m     @     0x7f4f14efb4f5 at::Tensor::copy_()
[2m[36m(pid=37971)[0m     @     0x7f4f173ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37971)[0m     @     0x7f4f14efb4f5 at::Tensor::copy_()
[2m[36m(pid=37971)[0m     @     0x7f4f1afa679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37971)[0m     @     0x55af6ceaefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37971)[0m     @     0x55af6ce09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37971)[0m     @     0x55af6ce94baf _PyEval_EvalCodeWithName
[2m[36m(pid=37971)[0m     @     0x55af6ce95a20 method_vectorcall
[2m[36m(pid=37971)[0m     @     0x55af6ce09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37971)[0m     @     0x55af6ce94baf _PyEval_EvalCodeWithName
[2m[36m(pid=37971)[0m     @     0x55af6ce95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37971)[0m     @     0x55af6ce0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37971)[0m     @     0x55af6ce94baf _PyEval_EvalCodeWithName
[2m[36m(pid=37971)[0m     @     0x55af6ce95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37971)[0m     @     0x55af6ce0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37971)[0m     @     0x55af6ce94baf _PyEval_EvalCodeWithName
[2m[36m(pid=37971)[0m     @     0x55af6ce95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37971)[0m     @     0x55af6ce0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37971)[0m     @     0x55af6ce94baf _PyEval_EvalCodeWithName
[2m[36m(pid=37971)[0m     @     0x55af6ce95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37971)[0m     @     0x55af6ce0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38041)[0m     @     0x7f0f4cc764f5 at::Tensor::copy_()
[2m[36m(pid=38041)[0m     @     0x7f0f4f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38041)[0m     @     0x7f0f4cc764f5 at::Tensor::copy_()
[2m[36m(pid=38041)[0m     @     0x7f0f52d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38041)[0m     @     0x55ed89c59fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38041)[0m     @     0x55ed89bb4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38041)[0m     @     0x55ed89c3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38041)[0m     @     0x55ed89c40a20 method_vectorcall
[2m[36m(pid=38041)[0m     @     0x55ed89bb4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38041)[0m     @     0x55ed89c3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38041)[0m     @     0x55ed89c40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38041)[0m     @     0x55ed89bb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38041)[0m     @     0x55ed89c3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38041)[0m     @     0x55ed89c40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38041)[0m     @     0x55ed89bb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38041)[0m     @     0x55ed89c3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38041)[0m     @     0x55ed89c40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38041)[0m     @     0x55ed89bb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38041)[0m     @     0x55ed89c3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38041)[0m     @     0x55ed89c40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38041)[0m     @     0x55ed89bb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37969)[0m     @     0x7ef25b807388 at::native::copy_impl()
[2m[36m(pid=37969)[0m     @     0x7ef25b8095a4 at::native::copy_()
[2m[36m(pid=37969)[0m     @     0x7ef25bef44f5 at::Tensor::copy_()
[2m[36m(pid=37969)[0m     @     0x7ef25e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37991)[0m     @     0x7fccf19784f5 at::Tensor::copy_()
[2m[36m(pid=37991)[0m     @     0x7fccf7a2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37991)[0m     @     0x55f13e97cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37991)[0m     @     0x55f13e8d7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37991)[0m     @     0x55f13e962baf _PyEval_EvalCodeWithName
[2m[36m(pid=37991)[0m     @     0x55f13e963a20 method_vectorcall
[2m[36m(pid=37991)[0m     @     0x55f13e8d7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37991)[0m     @     0x55f13e962baf _PyEval_EvalCodeWithName
[2m[36m(pid=37991)[0m     @     0x55f13e963643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37991)[0m     @     0x55f13e8d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37991)[0m     @     0x55f13e962baf _PyEval_EvalCodeWithName
[2m[36m(pid=37991)[0m     @     0x55f13e963643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37991)[0m     @     0x55f13e8d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37991)[0m     @     0x55f13e962baf _PyEval_EvalCodeWithName
[2m[36m(pid=37991)[0m     @     0x55f13e963643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37991)[0m     @     0x55f13e8d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37991)[0m     @     0x55f13e962baf _PyEval_EvalCodeWithName
[2m[36m(pid=37991)[0m     @     0x55f13e963643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37991)[0m     @     0x55f13e8d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37974)[0m     @     0x564affeddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37974)[0m     @     0x564affede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37974)[0m     @     0x564affe53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37974)[0m     @     0x564affeddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37974)[0m     @     0x564affede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37974)[0m     @     0x564affe53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37976)[0m     @     0x7f90e71b34f5 at::Tensor::copy_()
[2m[36m(pid=37976)[0m     @     0x7f90ed25e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37976)[0m     @     0x5629e71f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37976)[0m     @     0x5629e7154b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37976)[0m     @     0x5629e71dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37976)[0m     @     0x5629e71e0a20 method_vectorcall
[2m[36m(pid=37976)[0m     @     0x5629e7154bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37976)[0m     @     0x5629e71dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37976)[0m     @     0x5629e71e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37976)[0m     @     0x5629e7155689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37976)[0m     @     0x5629e71dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37976)[0m     @     0x5629e71e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37976)[0m     @     0x5629e7155689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37976)[0m     @     0x5629e71dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37976)[0m     @     0x5629e71e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37976)[0m     @     0x5629e7155689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37976)[0m     @     0x5629e71dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37976)[0m     @     0x5629e71e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37976)[0m     @     0x5629e7155689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37995)[0m     @     0x558b5365fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37995)[0m     @     0x558b53660643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37995)[0m     @     0x558b535d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37995)[0m     @     0x558b5365fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37995)[0m     @     0x558b53660643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37995)[0m     @     0x558b535d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37989)[0m     @     0x7ed4b7e5e4f5 at::Tensor::copy_()
[2m[36m(pid=37989)[0m     @     0x7ed4bdf0979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37989)[0m     @     0x55e1fe752fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37989)[0m     @     0x55e1fe6adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37989)[0m     @     0x55e1fe738baf _PyEval_EvalCodeWithName
[2m[36m(pid=37989)[0m     @     0x55e1fe739a20 method_vectorcall
[2m[36m(pid=37989)[0m     @     0x55e1fe6adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37989)[0m     @     0x55e1fe738baf _PyEval_EvalCodeWithName
[2m[36m(pid=37989)[0m     @     0x55e1fe739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37989)[0m     @     0x55e1fe6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37989)[0m     @     0x55e1fe738baf _PyEval_EvalCodeWithName
[2m[36m(pid=37989)[0m     @     0x55e1fe739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37989)[0m     @     0x55e1fe6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37989)[0m     @     0x55e1fe738baf _PyEval_EvalCodeWithName
[2m[36m(pid=37989)[0m     @     0x55e1fe739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37989)[0m     @     0x55e1fe6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37989)[0m     @     0x55e1fe738baf _PyEval_EvalCodeWithName
[2m[36m(pid=37989)[0m     @     0x55e1fe739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37989)[0m     @     0x55e1fe6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37981)[0m     @     0x7ed6e38a14f5 at::Tensor::copy_()
[2m[36m(pid=37981)[0m     @     0x7ed6e994c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37981)[0m     @     0x56328bc79fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37981)[0m     @     0x56328bbd4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37981)[0m     @     0x56328bc5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37981)[0m     @     0x56328bc60a20 method_vectorcall
[2m[36m(pid=37981)[0m     @     0x56328bbd4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37981)[0m     @     0x56328bc5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37981)[0m     @     0x56328bc60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37981)[0m     @     0x56328bbd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37981)[0m     @     0x56328bc5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37981)[0m     @     0x56328bc60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37981)[0m     @     0x56328bbd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37981)[0m     @     0x56328bc5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37981)[0m     @     0x56328bc60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37981)[0m     @     0x56328bbd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37981)[0m     @     0x56328bc5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37981)[0m     @     0x56328bc60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37981)[0m     @     0x56328bbd5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37979)[0m     @     0x5629c653abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37979)[0m     @     0x5629c653b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37979)[0m     @     0x5629c64b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37979)[0m     @     0x5629c653abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37979)[0m     @     0x5629c653b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37979)[0m     @     0x5629c64b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37979)[0m     @     0x5629c653abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37979)[0m     @     0x5629c653b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37979)[0m     @     0x5629c64b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37979)[0m     @     0x5629c653abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37979)[0m     @     0x5629c653b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37979)[0m     @     0x5629c64b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38043)[0m     @     0x7f6fdf3124f5 at::Tensor::copy_()
[2m[36m(pid=38043)[0m     @     0x7f6fe53bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38043)[0m     @     0x56257529ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38043)[0m     @     0x5625751fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38043)[0m     @     0x562575285baf _PyEval_EvalCodeWithName
[2m[36m(pid=38043)[0m     @     0x562575286a20 method_vectorcall
[2m[36m(pid=38043)[0m     @     0x5625751fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38043)[0m     @     0x562575285baf _PyEval_EvalCodeWithName
[2m[36m(pid=38043)[0m     @     0x562575286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38043)[0m     @     0x5625751fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38043)[0m     @     0x562575285baf _PyEval_EvalCodeWithName
[2m[36m(pid=38043)[0m     @     0x562575286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38043)[0m     @     0x5625751fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38043)[0m     @     0x562575285baf _PyEval_EvalCodeWithName
[2m[36m(pid=38043)[0m     @     0x562575286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38043)[0m     @     0x5625751fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38043)[0m     @     0x562575285baf _PyEval_EvalCodeWithName
[2m[36m(pid=38043)[0m     @     0x562575286643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38043)[0m     @     0x5625751fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37977)[0m     @     0x7f602f75b4f5 at::Tensor::copy_()
[2m[36m(pid=37977)[0m     @     0x7f603580679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37977)[0m     @     0x55835ca4afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37977)[0m     @     0x55835c9a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37977)[0m     @     0x55835ca30baf _PyEval_EvalCodeWithName
[2m[36m(pid=37977)[0m     @     0x55835ca31a20 method_vectorcall
[2m[36m(pid=37977)[0m     @     0x55835c9a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37977)[0m     @     0x55835ca30baf _PyEval_EvalCodeWithName
[2m[36m(pid=37977)[0m     @     0x55835ca31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37977)[0m     @     0x55835c9a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37977)[0m     @     0x55835ca30baf _PyEval_EvalCodeWithName
[2m[36m(pid=37977)[0m     @     0x55835ca31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37977)[0m     @     0x55835c9a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37977)[0m     @     0x55835ca30baf _PyEval_EvalCodeWithName
[2m[36m(pid=37977)[0m     @     0x55835ca31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37977)[0m     @     0x55835c9a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37977)[0m     @     0x55835ca30baf _PyEval_EvalCodeWithName
[2m[36m(pid=37977)[0m     @     0x55835ca31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37977)[0m     @     0x55835c9a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38064)[0m     @     0x7efcf81ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38064)[0m     @     0x7efcf5cfb4f5 at::Tensor::copy_()
[2m[36m(pid=38064)[0m     @     0x7efcfbda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38064)[0m     @     0x560b9655ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38064)[0m     @     0x560b964bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38064)[0m     @     0x560b96545baf _PyEval_EvalCodeWithName
[2m[36m(pid=38064)[0m     @     0x560b96546a20 method_vectorcall
[2m[36m(pid=38064)[0m     @     0x560b964babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38064)[0m     @     0x560b96545baf _PyEval_EvalCodeWithName
[2m[36m(pid=38064)[0m     @     0x560b96546643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38064)[0m     @     0x560b964bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38064)[0m     @     0x560b96545baf _PyEval_EvalCodeWithName
[2m[36m(pid=38064)[0m     @     0x560b96546643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38064)[0m     @     0x560b964bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38064)[0m     @     0x560b96545baf _PyEval_EvalCodeWithName
[2m[36m(pid=38064)[0m     @     0x560b96546643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38064)[0m     @     0x560b964bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38064)[0m     @     0x560b96545baf _PyEval_EvalCodeWithName
[2m[36m(pid=38064)[0m     @     0x560b96546643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38064)[0m     @     0x560b964bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x7f0cc85d2d91 at::TensorIterator::for_each()
[2m[36m(pid=38036)[0m     @     0x7f0cc8eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38036)[0m     @     0x7f0cc8ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38023)[0m     @     0x7f59d2db45a4 at::native::copy_()
[2m[36m(pid=38023)[0m     @     0x7f59d349f4f5 at::Tensor::copy_()
[2m[36m(pid=38023)[0m     @     0x7f59d59728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38023)[0m     @     0x7f59d349f4f5 at::Tensor::copy_()
[2m[36m(pid=38023)[0m     @     0x7f59d954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38023)[0m     @     0x564fc8c7dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38023)[0m     @     0x564fc8bd8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38023)[0m     @     0x564fc8c63baf _PyEval_EvalCodeWithName
[2m[36m(pid=38023)[0m     @     0x564fc8c64a20 method_vectorcall
[2m[36m(pid=38023)[0m     @     0x564fc8bd8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38023)[0m     @     0x564fc8c63baf _PyEval_EvalCodeWithName
[2m[36m(pid=38023)[0m     @     0x564fc8c64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38023)[0m     @     0x564fc8bd9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38086)[0m     @     0x5571efe34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38086)[0m     @     0x5571efebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38086)[0m     @     0x5571efebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38086)[0m     @     0x5571efe34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38086)[0m     @     0x5571efebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38086)[0m     @     0x5571efebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38086)[0m     @     0x5571efe34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38086)[0m     @     0x5571efebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38086)[0m     @     0x5571efebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38086)[0m     @     0x5571efe34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x7f7f4691f4f5 at::Tensor::copy_()
[2m[36m(pid=38051)[0m     @     0x7f7f4c9ca79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38051)[0m     @     0x55eb1389cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38051)[0m     @     0x55eb137f7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x55eb13882baf _PyEval_EvalCodeWithName
[2m[36m(pid=38051)[0m     @     0x55eb13883a20 method_vectorcall
[2m[36m(pid=38051)[0m     @     0x55eb137f7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x55eb13882baf _PyEval_EvalCodeWithName
[2m[36m(pid=38051)[0m     @     0x55eb13883643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38051)[0m     @     0x55eb137f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x55eb13882baf _PyEval_EvalCodeWithName
[2m[36m(pid=38051)[0m     @     0x55eb13883643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38051)[0m     @     0x55eb137f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x55eb13882baf _PyEval_EvalCodeWithName
[2m[36m(pid=38051)[0m     @     0x55eb13883643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38051)[0m     @     0x55eb137f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38051)[0m     @     0x55eb13882baf _PyEval_EvalCodeWithName
[2m[36m(pid=38051)[0m     @     0x55eb13883643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38051)[0m     @     0x55eb137f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38032)[0m     @     0x7f25a12b54f5 at::Tensor::copy_()
[2m[36m(pid=38032)[0m     @     0x7f25a736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38032)[0m     @     0x556f116d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38032)[0m     @     0x556f1162db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38032)[0m     @     0x556f116b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38032)[0m     @     0x556f116b9a20 method_vectorcall
[2m[36m(pid=38032)[0m     @     0x556f1162dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38032)[0m     @     0x556f116b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38032)[0m     @     0x556f116b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38032)[0m     @     0x556f1162e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38032)[0m     @     0x556f116b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38032)[0m     @     0x556f116b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38032)[0m     @     0x556f1162e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38032)[0m     @     0x556f116b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38032)[0m     @     0x556f116b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38032)[0m     @     0x556f1162e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38032)[0m     @     0x556f116b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=38032)[0m     @     0x556f116b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38032)[0m     @     0x556f1162e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38030)[0m     @     0x558f9a4b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38030)[0m     @     0x558f9a429689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38030)[0m     @     0x558f9a4b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38030)[0m     @     0x558f9a4b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38030)[0m     @     0x558f9a429689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38092)[0m     @     0x560c23fe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38092)[0m     @     0x560c23fe1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38092)[0m     @     0x560c23f56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38092)[0m     @     0x560c23fe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38092)[0m     @     0x560c23fe1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38092)[0m     @     0x560c23f56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38092)[0m     @     0x560c23fe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38092)[0m     @     0x560c23fe1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38092)[0m     @     0x560c23f56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38092)[0m     @     0x560c23fe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=38092)[0m     @     0x560c23fe1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38092)[0m     @     0x560c23f56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38094)[0m     @     0x7f24919e54f5 at::Tensor::copy_()
[2m[36m(pid=38094)[0m     @     0x7f2493eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38094)[0m     @     0x7f24919e54f5 at::Tensor::copy_()
[2m[36m(pid=38094)[0m     @     0x7f2497a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38094)[0m     @     0x55c8a97cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38094)[0m     @     0x55c8a9729b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38094)[0m     @     0x55c8a97b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=38094)[0m     @     0x55c8a97b5a20 method_vectorcall
[2m[36m(pid=38094)[0m     @     0x55c8a9729bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38094)[0m     @     0x55c8a97b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=38094)[0m     @     0x55c8a97b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38094)[0m     @     0x55c8a972a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38094)[0m     @     0x55c8a97b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=38094)[0m     @     0x55c8a97b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38094)[0m     @     0x55c8a972a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38094)[0m     @     0x55c8a97b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=38094)[0m     @     0x55c8a97b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38094)[0m     @     0x55c8a972a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38094)[0m     @     0x55c8a97b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=38094)[0m     @     0x55c8a97b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38094)[0m     @     0x55c8a972a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38034)[0m     @     0x5576974e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=38034)[0m     @     0x5576974e8a20 method_vectorcall
[2m[36m(pid=38034)[0m     @     0x55769745cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38034)[0m     @     0x5576974e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=38034)[0m     @     0x5576974e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38034)[0m     @     0x55769745d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38034)[0m     @     0x5576974e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=38034)[0m     @     0x5576974e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38034)[0m     @     0x55769745d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38034)[0m     @     0x5576974e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=38034)[0m     @     0x5576974e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38034)[0m     @     0x55769745d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38034)[0m     @     0x5576974e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=38034)[0m     @     0x5576974e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38034)[0m     @     0x55769745d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38090)[0m     @     0x7f0714a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38090)[0m     @     0x560f75e8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38090)[0m     @     0x560f75de6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38090)[0m     @     0x560f75e71baf _PyEval_EvalCodeWithName
[2m[36m(pid=38090)[0m     @     0x560f75e72a20 method_vectorcall
[2m[36m(pid=38090)[0m     @     0x560f75de6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38090)[0m     @     0x560f75e71baf _PyEval_EvalCodeWithName
[2m[36m(pid=38090)[0m     @     0x560f75e72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38090)[0m     @     0x560f75de7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38090)[0m     @     0x560f75e71baf _PyEval_EvalCodeWithName
[2m[36m(pid=38090)[0m     @     0x560f75e72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38090)[0m     @     0x560f75de7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38090)[0m     @     0x560f75e71baf _PyEval_EvalCodeWithName
[2m[36m(pid=38090)[0m     @     0x560f75e72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38090)[0m     @     0x560f75de7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38090)[0m     @     0x560f75e71baf _PyEval_EvalCodeWithName
[2m[36m(pid=38090)[0m     @     0x560f75e72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38090)[0m     @     0x560f75de7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38049)[0m     @     0x7fc0204d24f5 at::Tensor::copy_()
[2m[36m(pid=38049)[0m     @     0x7fc02657d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38049)[0m     @     0x55c4494fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38049)[0m     @     0x55c449457b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38049)[0m     @     0x55c4494e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38049)[0m     @     0x55c4494e3a20 method_vectorcall
[2m[36m(pid=38049)[0m     @     0x55c449457bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38049)[0m     @     0x55c4494e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38049)[0m     @     0x55c4494e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38049)[0m     @     0x55c449458689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38049)[0m     @     0x55c4494e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38049)[0m     @     0x55c4494e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38049)[0m     @     0x55c449458689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38049)[0m     @     0x55c4494e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38049)[0m     @     0x55c4494e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38049)[0m     @     0x55c449458689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38049)[0m     @     0x55c4494e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38049)[0m     @     0x55c4494e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38049)[0m     @     0x55c449458689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38071)[0m     @     0x558d74776baf _PyEval_EvalCodeWithName
[2m[36m(pid=38071)[0m     @     0x558d74777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38071)[0m     @     0x558d746ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38071)[0m     @     0x558d74776baf _PyEval_EvalCodeWithName
[2m[36m(pid=38071)[0m     @     0x558d74777643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38071)[0m     @     0x558d746ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37988)[0m     @     0x7fb3ea9c44f5 at::Tensor::copy_()
[2m[36m(pid=37988)[0m     @     0x7fb3f0a6f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37988)[0m     @     0x564ca8e96fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37988)[0m     @     0x564ca8df1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37988)[0m     @     0x564ca8e7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37988)[0m     @     0x564ca8e7da20 method_vectorcall
[2m[36m(pid=37988)[0m     @     0x564ca8df1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37988)[0m     @     0x564ca8e7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37988)[0m     @     0x564ca8e7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37988)[0m     @     0x564ca8df2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37988)[0m     @     0x564ca8e7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37988)[0m     @     0x564ca8e7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37988)[0m     @     0x564ca8df2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37988)[0m     @     0x564ca8e7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37988)[0m     @     0x564ca8e7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37988)[0m     @     0x564ca8df2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37988)[0m     @     0x564ca8e7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37988)[0m     @     0x564ca8e7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37988)[0m     @     0x564ca8df2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37997)[0m     @     0x7f6ea92754f5 at::Tensor::copy_()
[2m[36m(pid=37997)[0m     @     0x7f6eaf32079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37997)[0m     @     0x5605db189fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37997)[0m     @     0x5605db0e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37997)[0m     @     0x5605db16fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37997)[0m     @     0x5605db170a20 method_vectorcall
[2m[36m(pid=37997)[0m     @     0x5605db0e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37997)[0m     @     0x5605db16fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37997)[0m     @     0x5605db170643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37997)[0m     @     0x5605db0e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37997)[0m     @     0x5605db16fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37997)[0m     @     0x5605db170643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37997)[0m     @     0x5605db0e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37997)[0m     @     0x5605db16fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37997)[0m     @     0x5605db170643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37997)[0m     @     0x5605db0e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37997)[0m     @     0x5605db16fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37997)[0m     @     0x5605db170643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37997)[0m     @     0x5605db0e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38058)[0m     @     0x55e2ae33efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38058)[0m     @     0x55e2ae299b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38058)[0m     @     0x55e2ae324baf _PyEval_EvalCodeWithName
[2m[36m(pid=38058)[0m     @     0x55e2ae325a20 method_vectorcall
[2m[36m(pid=38058)[0m     @     0x55e2ae299bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38058)[0m     @     0x55e2ae324baf _PyEval_EvalCodeWithName
[2m[36m(pid=38058)[0m     @     0x55e2ae325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38058)[0m     @     0x55e2ae29a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38058)[0m     @     0x55e2ae324baf _PyEval_EvalCodeWithName
[2m[36m(pid=38058)[0m     @     0x55e2ae325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38058)[0m     @     0x55e2ae29a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38058)[0m     @     0x55e2ae324baf _PyEval_EvalCodeWithName
[2m[36m(pid=38058)[0m     @     0x55e2ae325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38058)[0m     @     0x55e2ae29a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38058)[0m     @     0x55e2ae324baf _PyEval_EvalCodeWithName
[2m[36m(pid=38058)[0m     @     0x55e2ae325643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38058)[0m     @     0x55e2ae29a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37992)[0m     @     0x7f8452d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37992)[0m     @     0x55fe54465fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37992)[0m     @     0x55fe543c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37992)[0m     @     0x55fe5444bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37992)[0m     @     0x55fe5444ca20 method_vectorcall
[2m[36m(pid=37992)[0m     @     0x55fe543c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37992)[0m     @     0x55fe5444bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37992)[0m     @     0x55fe5444c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37992)[0m     @     0x55fe543c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37992)[0m     @     0x55fe5444bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37992)[0m     @     0x55fe5444c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37992)[0m     @     0x55fe543c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37992)[0m     @     0x55fe5444bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37992)[0m     @     0x55fe5444c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37992)[0m     @     0x55fe543c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37992)[0m     @     0x55fe5444bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37992)[0m     @     0x55fe5444c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37992)[0m     @     0x55fe543c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38050)[0m     @     0x562d24732baf _PyEval_EvalCodeWithName
[2m[36m(pid=38050)[0m     @     0x562d24733a20 method_vectorcall
[2m[36m(pid=38050)[0m     @     0x562d246a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38050)[0m     @     0x562d24732baf _PyEval_EvalCodeWithName
[2m[36m(pid=38050)[0m     @     0x562d24733643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38050)[0m     @     0x562d246a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38050)[0m     @     0x562d24732baf _PyEval_EvalCodeWithName
[2m[36m(pid=38050)[0m     @     0x562d24733643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38050)[0m     @     0x562d246a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38050)[0m     @     0x562d24732baf _PyEval_EvalCodeWithName
[2m[36m(pid=38050)[0m     @     0x562d24733643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38050)[0m     @     0x562d246a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38050)[0m     @     0x562d24732baf _PyEval_EvalCodeWithName
[2m[36m(pid=38050)[0m     @     0x562d24733643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38050)[0m     @     0x562d246a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38020)[0m     @     0x5643245d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38020)[0m     @     0x5643245d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38020)[0m     @     0x564324549689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38020)[0m     @     0x5643245d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38020)[0m     @     0x5643245d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38020)[0m     @     0x564324549689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38020)[0m     @     0x5643245d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38020)[0m     @     0x5643245d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38020)[0m     @     0x564324549689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38020)[0m     @     0x5643245d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38020)[0m     @     0x5643245d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38020)[0m     @     0x564324549689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37980)[0m     @     0x557a236c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37980)[0m     @     0x557a2374fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37980)[0m     @     0x557a23750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37980)[0m     @     0x557a236c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37980)[0m     @     0x557a2374fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37980)[0m     @     0x557a23750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37980)[0m     @     0x557a236c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37980)[0m     @     0x557a2374fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37980)[0m     @     0x557a23750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37980)[0m     @     0x557a236c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37986)[0m     @     0x7f50f86fc4f5 at::Tensor::copy_()
[2m[36m(pid=37986)[0m     @     0x7f50fe7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37986)[0m     @     0x5624a6d4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37986)[0m     @     0x5624a6caab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37986)[0m     @     0x5624a6d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=37986)[0m     @     0x5624a6d36a20 method_vectorcall
[2m[36m(pid=37986)[0m     @     0x5624a6caabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37986)[0m     @     0x5624a6d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=37986)[0m     @     0x5624a6d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37986)[0m     @     0x5624a6cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37986)[0m     @     0x5624a6d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=37986)[0m     @     0x5624a6d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37986)[0m     @     0x5624a6cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37986)[0m     @     0x5624a6d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=37986)[0m     @     0x5624a6d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37986)[0m     @     0x5624a6cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37986)[0m     @     0x5624a6d35baf _PyEval_EvalCodeWithName
[2m[36m(pid=37986)[0m     @     0x5624a6d36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37986)[0m     @     0x5624a6cab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x7f89314408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=38060)[0m     @     0x7f8931440ad3 at::TensorIterator::for_each()
[2m[36m(pid=37990)[0m     @     0x55b207f92fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37990)[0m     @     0x55b207eedb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37990)[0m     @     0x55b207f78baf _PyEval_EvalCodeWithName
[2m[36m(pid=37990)[0m     @     0x55b207f79a20 method_vectorcall
[2m[36m(pid=37990)[0m     @     0x55b207eedbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37990)[0m     @     0x55b207f78baf _PyEval_EvalCodeWithName
[2m[36m(pid=37990)[0m     @     0x55b207f79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37990)[0m     @     0x55b207eee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37990)[0m     @     0x55b207f78baf _PyEval_EvalCodeWithName
[2m[36m(pid=37990)[0m     @     0x55b207f79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37990)[0m     @     0x55b207eee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37990)[0m     @     0x55b207f78baf _PyEval_EvalCodeWithName
[2m[36m(pid=37990)[0m     @     0x55b207f79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37990)[0m     @     0x55b207eee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37990)[0m     @     0x55b207f78baf _PyEval_EvalCodeWithName
[2m[36m(pid=37990)[0m     @     0x55b207f79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37990)[0m     @     0x55b207eee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38047)[0m     @     0x7fafde0ba4f5 at::Tensor::copy_()
[2m[36m(pid=38047)[0m     @     0x7fafe416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38047)[0m     @     0x560803f94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38047)[0m     @     0x560803eefb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38047)[0m     @     0x560803f7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=38047)[0m     @     0x560803f7ba20 method_vectorcall
[2m[36m(pid=38047)[0m     @     0x560803eefbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38047)[0m     @     0x560803f7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=38047)[0m     @     0x560803f7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38047)[0m     @     0x560803ef0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38047)[0m     @     0x560803f7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=38047)[0m     @     0x560803f7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38047)[0m     @     0x560803ef0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38047)[0m     @     0x560803f7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=38047)[0m     @     0x560803f7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38047)[0m     @     0x560803ef0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38047)[0m     @     0x560803f7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=38047)[0m     @     0x560803f7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38047)[0m     @     0x560803ef0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38054)[0m     @     0x7fadf39e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38054)[0m     @     0x55f9b0846fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38054)[0m     @     0x55f9b07a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38054)[0m     @     0x55f9b082cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38054)[0m     @     0x55f9b082da20 method_vectorcall
[2m[36m(pid=38054)[0m     @     0x55f9b07a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38054)[0m     @     0x55f9b082cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38054)[0m     @     0x55f9b082d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38054)[0m     @     0x55f9b07a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38054)[0m     @     0x55f9b082cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38054)[0m     @     0x55f9b082d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38054)[0m     @     0x55f9b07a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38054)[0m     @     0x55f9b082cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38054)[0m     @     0x55f9b082d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38054)[0m     @     0x55f9b07a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38054)[0m     @     0x55f9b082cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=38054)[0m     @     0x55f9b082d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38054)[0m     @     0x55f9b07a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38046)[0m     @     0x7f62a19e54f5 at::Tensor::copy_()
[2m[36m(pid=38046)[0m     @     0x7f62a3eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38046)[0m     @     0x7f62a19e54f5 at::Tensor::copy_()
[2m[36m(pid=38065)[0m     @     0x7fb4a951e388 at::native::copy_impl()
[2m[36m(pid=38065)[0m     @     0x7fb4a95205a4 at::native::copy_()
[2m[36m(pid=38065)[0m     @     0x7fb4a9c0b4f5 at::Tensor::copy_()
[2m[36m(pid=38065)[0m     @     0x7fb4ac0de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38078)[0m     @     0x7ed6fc8d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38078)[0m     @     0x563a91ad0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38078)[0m     @     0x563a91a2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38078)[0m     @     0x563a91ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38078)[0m     @     0x563a91ab7a20 method_vectorcall
[2m[36m(pid=38078)[0m     @     0x563a91a2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38078)[0m     @     0x563a91ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38078)[0m     @     0x563a91ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38078)[0m     @     0x563a91a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38078)[0m     @     0x563a91ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38078)[0m     @     0x563a91ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38078)[0m     @     0x563a91a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38078)[0m     @     0x563a91ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38078)[0m     @     0x563a91ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38078)[0m     @     0x563a91a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38078)[0m     @     0x563a91ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=38078)[0m     @     0x563a91ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38078)[0m     @     0x563a91a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38024)[0m     @     0x7fc98683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38024)[0m     @     0x559dcad5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38024)[0m     @     0x559dcacb8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38024)[0m     @     0x559dcad43baf _PyEval_EvalCodeWithName
[2m[36m(pid=38024)[0m     @     0x559dcad44a20 method_vectorcall
[2m[36m(pid=38024)[0m     @     0x559dcacb8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38024)[0m     @     0x559dcad43baf _PyEval_EvalCodeWithName
[2m[36m(pid=38024)[0m     @     0x559dcad44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38024)[0m     @     0x559dcacb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38024)[0m     @     0x559dcad43baf _PyEval_EvalCodeWithName
[2m[36m(pid=38024)[0m     @     0x559dcad44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38024)[0m     @     0x559dcacb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38024)[0m     @     0x559dcad43baf _PyEval_EvalCodeWithName
[2m[36m(pid=38024)[0m     @     0x559dcad44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38024)[0m     @     0x559dcacb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38024)[0m     @     0x559dcad43baf _PyEval_EvalCodeWithName
[2m[36m(pid=38024)[0m     @     0x559dcad44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38024)[0m     @     0x559dcacb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37999)[0m     @     0x561ace750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37999)[0m     @     0x561ace6c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37999)[0m     @     0x561ace74fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37999)[0m     @     0x561ace750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37999)[0m     @     0x561ace6c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37999)[0m     @     0x561ace74fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37999)[0m     @     0x561ace750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37999)[0m     @     0x561ace6c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37969)[0m     @     0x7ef25bef44f5 at::Tensor::copy_()
[2m[36m(pid=37969)[0m     @     0x7ef261f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37969)[0m     @     0x5649f7e87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37969)[0m     @     0x5649f7de2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37969)[0m     @     0x5649f7e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37969)[0m     @     0x5649f7e6ea20 method_vectorcall
[2m[36m(pid=37969)[0m     @     0x5649f7de2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37969)[0m     @     0x5649f7e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37969)[0m     @     0x5649f7e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37969)[0m     @     0x5649f7de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37969)[0m     @     0x5649f7e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37969)[0m     @     0x5649f7e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37969)[0m     @     0x5649f7de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37969)[0m     @     0x5649f7e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37969)[0m     @     0x5649f7e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37969)[0m     @     0x5649f7de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37969)[0m     @     0x5649f7e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37969)[0m     @     0x5649f7e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37969)[0m     @     0x5649f7de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x7f0cc837aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38036)[0m     @     0x7f0cc8378388 at::native::copy_impl()
[2m[36m(pid=38023)[0m     @     0x564fc8c63baf _PyEval_EvalCodeWithName
[2m[36m(pid=38023)[0m     @     0x564fc8c64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38023)[0m     @     0x564fc8bd9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38023)[0m     @     0x564fc8c63baf _PyEval_EvalCodeWithName
[2m[36m(pid=38023)[0m     @     0x564fc8c64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38023)[0m     @     0x564fc8bd9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38023)[0m     @     0x564fc8c63baf _PyEval_EvalCodeWithName
[2m[36m(pid=38023)[0m     @     0x564fc8c64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38023)[0m     @     0x564fc8bd9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x7f8931440d91 at::TensorIterator::for_each()
[2m[36m(pid=38060)[0m     @     0x7f8931d23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=38060)[0m     @     0x7f8931d46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=38060)[0m     @     0x7f89311e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=38060)[0m     @     0x7f89311e6388 at::native::copy_impl()
[2m[36m(pid=38046)[0m     @     0x7f62a7a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38046)[0m     @     0x55e5e1ff8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38046)[0m     @     0x55e5e1f53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38046)[0m     @     0x55e5e1fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38046)[0m     @     0x55e5e1fdfa20 method_vectorcall
[2m[36m(pid=38046)[0m     @     0x55e5e1f53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38046)[0m     @     0x55e5e1fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38046)[0m     @     0x55e5e1fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38046)[0m     @     0x55e5e1f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38046)[0m     @     0x55e5e1fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38046)[0m     @     0x55e5e1fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38046)[0m     @     0x55e5e1f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38046)[0m     @     0x55e5e1fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38046)[0m     @     0x55e5e1fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38046)[0m     @     0x55e5e1f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38046)[0m     @     0x55e5e1fdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38046)[0m     @     0x55e5e1fdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38046)[0m     @     0x55e5e1f54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38065)[0m     @     0x7fb4a9c0b4f5 at::Tensor::copy_()
[2m[36m(pid=38065)[0m     @     0x7fb4afcb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38065)[0m     @     0x5618d8458fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38065)[0m     @     0x5618d83b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38065)[0m     @     0x5618d843ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38065)[0m     @     0x5618d843fa20 method_vectorcall
[2m[36m(pid=38065)[0m     @     0x5618d83b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38065)[0m     @     0x5618d843ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38065)[0m     @     0x5618d843f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38065)[0m     @     0x5618d83b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38065)[0m     @     0x5618d843ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38065)[0m     @     0x5618d843f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38065)[0m     @     0x5618d83b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38065)[0m     @     0x5618d843ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38065)[0m     @     0x5618d843f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38065)[0m     @     0x5618d83b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38065)[0m     @     0x5618d843ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=38065)[0m     @     0x5618d843f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38065)[0m     @     0x5618d83b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x7f0cc837a5a4 at::native::copy_()
[2m[36m(pid=38036)[0m     @     0x7f0cc8a654f5 at::Tensor::copy_()
[2m[36m(pid=38036)[0m     @     0x7f0ccaf388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38060)[0m     @     0x7f89311e85a4 at::native::copy_()
[2m[36m(pid=38036)[0m     @     0x7f0cc8a654f5 at::Tensor::copy_()
[2m[36m(pid=38036)[0m     @     0x7f0cceb1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38036)[0m     @     0x560403bbdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38036)[0m     @     0x560403b18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x560403ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38036)[0m     @     0x560403ba4a20 method_vectorcall
[2m[36m(pid=38036)[0m     @     0x560403b18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x560403ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38036)[0m     @     0x560403ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38036)[0m     @     0x560403b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x560403ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38036)[0m     @     0x560403ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38036)[0m     @     0x560403b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x560403ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38036)[0m     @     0x560403ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38036)[0m     @     0x560403b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38036)[0m     @     0x560403ba3baf _PyEval_EvalCodeWithName
[2m[36m(pid=38060)[0m     @     0x7f89318d34f5 at::Tensor::copy_()
[2m[36m(pid=38060)[0m     @     0x7f8933da68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=38060)[0m     @     0x7f89318d34f5 at::Tensor::copy_()
[2m[36m(pid=38036)[0m     @     0x560403ba4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38036)[0m     @     0x560403b19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x7f893797e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=38060)[0m     @     0x561ebc7fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=38060)[0m     @     0x561ebc757b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x561ebc7e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38060)[0m     @     0x561ebc7e3a20 method_vectorcall
[2m[36m(pid=38060)[0m     @     0x561ebc757bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x561ebc7e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38060)[0m     @     0x561ebc7e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38060)[0m     @     0x561ebc758689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x561ebc7e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38060)[0m     @     0x561ebc7e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38060)[0m     @     0x561ebc758689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x561ebc7e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38060)[0m     @     0x561ebc7e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38060)[0m     @     0x561ebc758689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=38060)[0m     @     0x561ebc7e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=38060)[0m     @     0x561ebc7e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=38060)[0m     @     0x561ebc758689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:42:11,990	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:42:12,006	ERROR trial_runner.py:567 -- Trial PPO_jss_env_8b5b6_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=38103, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:42:12,011	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
== Status ==
Memory usage on this node: 24.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8b5b6_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_8b5b6_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_8b5b6_00000_0_2020-11-05_10-42-04/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_8b5b6_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_8b5b6_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_8b5b6_00000_0_2020-11-05_10-42-04/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:42:12,022	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:42:12,022	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:42:12,022	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:42:12,023	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 10:42:12,023	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_8b5b6_00000])
