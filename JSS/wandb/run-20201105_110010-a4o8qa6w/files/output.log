2020-11-05 11:00:14,701	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.47 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_15e8e_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=12742)[0m 2020-11-05 11:00:17,486	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=12715)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12715)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12715)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12715)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12715)[0m *** SIGSEGV (@0x0) received by PID 12715 (TID 0x7fd39d910700) from PID 0; stack trace: ***
[2m[36m(pid=12628)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12628)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12628)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12616)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12616)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12616)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12737)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12737)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12737)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12737)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12737)[0m *** SIGSEGV (@0x0) received by PID 12737 (TID 0x7f8ffd125700) from PID 0; stack trace: ***
[2m[36m(pid=12623)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12623)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12623)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12619)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12619)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12619)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12619)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12619)[0m *** SIGSEGV (@0x0) received by PID 12619 (TID 0x7fb81ef7a700) from PID 0; stack trace: ***
[2m[36m(pid=12689)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12689)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12689)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12689)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12689)[0m *** SIGSEGV (@0x0) received by PID 12689 (TID 0x7f76dfcff700) from PID 0; stack trace: ***
[2m[36m(pid=12689)[0m     @     0x7f76df8d8390 (unknown)
[2m[36m(pid=12696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12696)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12696)[0m *** SIGSEGV (@0x0) received by PID 12696 (TID 0x7f8693660700) from PID 0; stack trace: ***
[2m[36m(pid=12696)[0m     @     0x7f8693239390 (unknown)
[2m[36m(pid=12698)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12698)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12698)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12698)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12698)[0m *** SIGSEGV (@0x0) received by PID 12698 (TID 0x7f699ce3e700) from PID 0; stack trace: ***
[2m[36m(pid=12698)[0m     @     0x7f699ca17390 (unknown)
[2m[36m(pid=12698)[0m     @     0x7f3a9e9f3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12692)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12692)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12692)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12692)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12692)[0m *** SIGSEGV (@0x0) received by PID 12692 (TID 0x7fa9644fe700) from PID 0; stack trace: ***
[2m[36m(pid=12692)[0m     @     0x7fa9640d7390 (unknown)
[2m[36m(pid=12692)[0m     @     0x7f7a66293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12692)[0m     @     0x7f7a6358764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12691)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12691)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12691)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12691)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12691)[0m *** SIGSEGV (@0x0) received by PID 12691 (TID 0x7f7106b2b700) from PID 0; stack trace: ***
[2m[36m(pid=12691)[0m     @     0x7f7106704390 (unknown)
[2m[36m(pid=12691)[0m     @     0x7f420881bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12691)[0m     @     0x7f4205b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12684)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12684)[0m *** SIGSEGV (@0x0) received by PID 12684 (TID 0x7f6a10ed3700) from PID 0; stack trace: ***
[2m[36m(pid=12684)[0m     @     0x7f6a10aac390 (unknown)
[2m[36m(pid=12684)[0m     @     0x7f3b12c5ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12745)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12745)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12745)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12745)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12745)[0m *** SIGSEGV (@0x0) received by PID 12745 (TID 0x7f69e5d9e700) from PID 0; stack trace: ***
[2m[36m(pid=12745)[0m     @     0x7f69e5977390 (unknown)
[2m[36m(pid=12745)[0m     @     0x7f3ae7a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12716)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12716)[0m *** SIGSEGV (@0x0) received by PID 12716 (TID 0x7f70787d2700) from PID 0; stack trace: ***
[2m[36m(pid=12716)[0m     @     0x7f70783ab390 (unknown)
[2m[36m(pid=12716)[0m     @     0x7f417a5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12705)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12705)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12705)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12705)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12705)[0m *** SIGSEGV (@0x0) received by PID 12705 (TID 0x7f9e51d3d700) from PID 0; stack trace: ***
[2m[36m(pid=12705)[0m     @     0x7f9e51916390 (unknown)
[2m[36m(pid=12705)[0m     @     0x7f6f5396bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12724)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12724)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12724)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12724)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12724)[0m *** SIGSEGV (@0x0) received by PID 12724 (TID 0x7f72b338d700) from PID 0; stack trace: ***
[2m[36m(pid=12724)[0m     @     0x7f72b2f66390 (unknown)
[2m[36m(pid=12724)[0m     @     0x7f43b518afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12631)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12631)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12631)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12631)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12631)[0m *** SIGSEGV (@0x0) received by PID 12631 (TID 0x7fc38bc3d700) from PID 0; stack trace: ***
[2m[36m(pid=12631)[0m     @     0x7fc38b816390 (unknown)
[2m[36m(pid=12631)[0m     @     0x7f948da20fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12622)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12622)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12622)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12622)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12622)[0m *** SIGSEGV (@0x0) received by PID 12622 (TID 0x7f4d40ea2700) from PID 0; stack trace: ***
[2m[36m(pid=12622)[0m     @     0x7f4d40a7b390 (unknown)
[2m[36m(pid=12622)[0m     @     0x7f1e42b88fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12622)[0m     @     0x7f1e3fe7c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12688)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12688)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12688)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12688)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12688)[0m *** SIGSEGV (@0x0) received by PID 12688 (TID 0x7f1fc1d26700) from PID 0; stack trace: ***
[2m[36m(pid=12688)[0m     @     0x7f1fc18ff390 (unknown)
[2m[36m(pid=12688)[0m     @     0x7ef0c3a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12688)[0m     @     0x7ef0c0d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12625)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12625)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12625)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12625)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12625)[0m *** SIGSEGV (@0x0) received by PID 12625 (TID 0x7f70ac131700) from PID 0; stack trace: ***
[2m[36m(pid=12625)[0m     @     0x7f70abd0a390 (unknown)
[2m[36m(pid=12625)[0m     @     0x7f41adf1ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12625)[0m     @     0x7f41ab21364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12709)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12709)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12709)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12709)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12709)[0m *** SIGSEGV (@0x0) received by PID 12709 (TID 0x7fe4080b8700) from PID 0; stack trace: ***
[2m[36m(pid=12709)[0m     @     0x7fe407c91390 (unknown)
[2m[36m(pid=12709)[0m     @     0x7fb509c3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12709)[0m     @     0x7fb506f3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12709)[0m     @     0x7fb506f33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12740)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12740)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12740)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12740)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12740)[0m *** SIGSEGV (@0x0) received by PID 12740 (TID 0x7fc30c851700) from PID 0; stack trace: ***
[2m[36m(pid=12740)[0m     @     0x7fc30c42a390 (unknown)
[2m[36m(pid=12740)[0m     @     0x7f940e5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12740)[0m     @     0x7f940b89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12740)[0m     @     0x7f940b8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12626)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12626)[0m *** SIGSEGV (@0x0) received by PID 12626 (TID 0x7f66bbb58700) from PID 0; stack trace: ***
[2m[36m(pid=12626)[0m     @     0x7f66bb731390 (unknown)
[2m[36m(pid=12626)[0m     @     0x7f37bd896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12626)[0m     @     0x7f37bab8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12621)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12621)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12621)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12621)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12621)[0m *** SIGSEGV (@0x0) received by PID 12621 (TID 0x7f575dc6a700) from PID 0; stack trace: ***
[2m[36m(pid=12621)[0m     @     0x7f575d843390 (unknown)
[2m[36m(pid=12621)[0m     @     0x7f285f96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12621)[0m     @     0x7f285cc5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12671)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12671)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12671)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12671)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12671)[0m *** SIGSEGV (@0x0) received by PID 12671 (TID 0x7fb476d84700) from PID 0; stack trace: ***
[2m[36m(pid=12671)[0m     @     0x7fb47695d390 (unknown)
[2m[36m(pid=12671)[0m     @     0x7f8578981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12671)[0m     @     0x7f8575c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12714)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12714)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12714)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12714)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12714)[0m *** SIGSEGV (@0x0) received by PID 12714 (TID 0x7f984ad33700) from PID 0; stack trace: ***
[2m[36m(pid=12714)[0m     @     0x7f984a90c390 (unknown)
[2m[36m(pid=12714)[0m     @     0x7f694cb0efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12714)[0m     @     0x7f6949e0264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12711)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12711)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12711)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12711)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12711)[0m *** SIGSEGV (@0x0) received by PID 12711 (TID 0x7fda74a7b700) from PID 0; stack trace: ***
[2m[36m(pid=12711)[0m     @     0x7fda74654390 (unknown)
[2m[36m(pid=12711)[0m     @     0x7fab767dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12711)[0m     @     0x7fab73ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12682)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12682)[0m *** SIGSEGV (@0x0) received by PID 12682 (TID 0x7f7cf1379700) from PID 0; stack trace: ***
[2m[36m(pid=12682)[0m     @     0x7f7cf0f52390 (unknown)
[2m[36m(pid=12682)[0m     @     0x7f4df311bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12682)[0m     @     0x7f4df040f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12682)[0m     @     0x7f4df0412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12675)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12675)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12675)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12675)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12675)[0m *** SIGSEGV (@0x0) received by PID 12675 (TID 0x7f688cd91700) from PID 0; stack trace: ***
[2m[36m(pid=12675)[0m     @     0x7f688c96a390 (unknown)
[2m[36m(pid=12675)[0m     @     0x7f398ea9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12675)[0m     @     0x7f398bd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12704)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12704)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12704)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12704)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12704)[0m *** SIGSEGV (@0x0) received by PID 12704 (TID 0x7f82a96ef700) from PID 0; stack trace: ***
[2m[36m(pid=12704)[0m     @     0x7f82a92c8390 (unknown)
[2m[36m(pid=12704)[0m     @     0x7f53ab4c1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12704)[0m     @     0x7f53a87b564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12704)[0m     @     0x7f53a87b8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12728)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12728)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12728)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12728)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12728)[0m *** SIGSEGV (@0x0) received by PID 12728 (TID 0x7feae4351700) from PID 0; stack trace: ***
[2m[36m(pid=12728)[0m     @     0x7feae3f2a390 (unknown)
[2m[36m(pid=12728)[0m     @     0x7fbbe612dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12728)[0m     @     0x7fbbe342164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12685)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12685)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12685)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12685)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12685)[0m *** SIGSEGV (@0x0) received by PID 12685 (TID 0x7f554504e700) from PID 0; stack trace: ***
[2m[36m(pid=12685)[0m     @     0x7f5544c27390 (unknown)
[2m[36m(pid=12685)[0m     @     0x7f2646d02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12685)[0m     @     0x7f2643ff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12701)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12701)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12701)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12701)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12701)[0m *** SIGSEGV (@0x0) received by PID 12701 (TID 0x7fed19d2f700) from PID 0; stack trace: ***
[2m[36m(pid=12701)[0m     @     0x7fed19908390 (unknown)
[2m[36m(pid=12701)[0m     @     0x7fbe1ba70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12701)[0m     @     0x7fbe18d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12706)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12706)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12706)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12706)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12706)[0m *** SIGSEGV (@0x0) received by PID 12706 (TID 0x7fdf037eb700) from PID 0; stack trace: ***
[2m[36m(pid=12706)[0m     @     0x7fdf033c4390 (unknown)
[2m[36m(pid=12706)[0m     @     0x7fb0054a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12706)[0m     @     0x7fb00279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12706)[0m     @     0x7fb002797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12706)[0m     @     0x7fb002797b53 at::TensorIterator::for_each()
[2m[36m(pid=12649)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12649)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12649)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12649)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12649)[0m *** SIGSEGV (@0x0) received by PID 12649 (TID 0x7f9b3fb56700) from PID 0; stack trace: ***
[2m[36m(pid=12649)[0m     @     0x7f9b3f72f390 (unknown)
[2m[36m(pid=12649)[0m     @     0x7f6c41925fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12649)[0m     @     0x7f6c3ec1964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12667)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12667)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12667)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12667)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12667)[0m *** SIGSEGV (@0x0) received by PID 12667 (TID 0x7f2e5d290700) from PID 0; stack trace: ***
[2m[36m(pid=12667)[0m     @     0x7f2e5ce69390 (unknown)
[2m[36m(pid=12667)[0m     @     0x7eff5ee96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12667)[0m     @     0x7eff5c18a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12752)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12752)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12752)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12752)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12752)[0m *** SIGSEGV (@0x0) received by PID 12752 (TID 0x7f80f68f6700) from PID 0; stack trace: ***
[2m[36m(pid=12752)[0m     @     0x7f80f64cf390 (unknown)
[2m[36m(pid=12752)[0m     @     0x7f51f86defb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12752)[0m     @     0x7f51f59d264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12752)[0m     @     0x7f51f59d5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12752)[0m     @     0x7f51f59d5b53 at::TensorIterator::for_each()
[2m[36m(pid=12712)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12712)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12712)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12712)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12712)[0m *** SIGSEGV (@0x0) received by PID 12712 (TID 0x7fa029afe700) from PID 0; stack trace: ***
[2m[36m(pid=12712)[0m     @     0x7fa0296d7390 (unknown)
[2m[36m(pid=12712)[0m     @     0x7f712b8ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12712)[0m     @     0x7f7128bdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12712)[0m     @     0x7f7128be2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12700)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12700)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12700)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12700)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12700)[0m *** SIGSEGV (@0x0) received by PID 12700 (TID 0x7fa83e63c700) from PID 0; stack trace: ***
[2m[36m(pid=12700)[0m     @     0x7fa83e215390 (unknown)
[2m[36m(pid=12700)[0m     @     0x7f79403b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12700)[0m     @     0x7f793d6a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12700)[0m     @     0x7f793d6a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12700)[0m     @     0x7f793d6a8b53 at::TensorIterator::for_each()
[2m[36m(pid=12715)[0m     @     0x7fd39d4e9390 (unknown)
[2m[36m(pid=12715)[0m     @     0x7fa49f71afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12715)[0m     @     0x7fa49ca0e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12715)[0m     @     0x7fa49ca11977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12628)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12628)[0m *** SIGSEGV (@0x0) received by PID 12628 (TID 0x7f57b8315700) from PID 0; stack trace: ***
[2m[36m(pid=12628)[0m     @     0x7f57b7eee390 (unknown)
[2m[36m(pid=12628)[0m     @     0x7f28ba082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12628)[0m     @     0x7f28b737664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12628)[0m     @     0x7f28b7379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12616)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12616)[0m *** SIGSEGV (@0x0) received by PID 12616 (TID 0x7f2d9fd59700) from PID 0; stack trace: ***
[2m[36m(pid=12616)[0m     @     0x7f2d9f932390 (unknown)
[2m[36m(pid=12616)[0m     @     0x7efea1b28fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12616)[0m     @     0x7efe9ee1c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12616)[0m     @     0x7efe9ee1f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12737)[0m     @     0x7f8ffccfe390 (unknown)
[2m[36m(pid=12737)[0m     @     0x7f60fee96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12737)[0m     @     0x7f60fc18a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12737)[0m     @     0x7f60fc18d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12623)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12623)[0m *** SIGSEGV (@0x0) received by PID 12623 (TID 0x7f5043161700) from PID 0; stack trace: ***
[2m[36m(pid=12623)[0m     @     0x7f5042d3a390 (unknown)
[2m[36m(pid=12623)[0m     @     0x7f2144f46fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12623)[0m     @     0x7f214223a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12623)[0m     @     0x7f214223d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12619)[0m     @     0x7fb81eb53390 (unknown)
[2m[36m(pid=12619)[0m     @     0x7f8920c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12619)[0m     @     0x7f891df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12619)[0m     @     0x7f891df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12689)[0m     @     0x7f47e1a1ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12689)[0m     @     0x7f47ded1364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12689)[0m     @     0x7f47ded16977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12696)[0m     @     0x7f57952dbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12696)[0m     @     0x7f57925cf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12696)[0m     @     0x7f57925d2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12698)[0m     @     0x7f3a9bce764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12698)[0m     @     0x7f3a9bcea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12698)[0m     @     0x7f3a9bceab53 at::TensorIterator::for_each()
[2m[36m(pid=12692)[0m     @     0x7f7a6358a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12692)[0m     @     0x7f7a6358ab53 at::TensorIterator::for_each()
[2m[36m(pid=12692)[0m     @     0x7f7a6358ae11 at::TensorIterator::for_each()
[2m[36m(pid=12691)[0m     @     0x7f4205b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12691)[0m     @     0x7f4205b12b53 at::TensorIterator::for_each()
[2m[36m(pid=12691)[0m     @     0x7f4205b12e11 at::TensorIterator::for_each()
[2m[36m(pid=12684)[0m     @     0x7f3b0ff5364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12684)[0m     @     0x7f3b0ff56977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12684)[0m     @     0x7f3b0ff56b53 at::TensorIterator::for_each()
[2m[36m(pid=12684)[0m     @     0x7f3b0ff56e11 at::TensorIterator::for_each()
[2m[36m(pid=12745)[0m     @     0x7f3ae4d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12745)[0m     @     0x7f3ae4d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12745)[0m     @     0x7f3ae4d67b53 at::TensorIterator::for_each()
[2m[36m(pid=12745)[0m     @     0x7f3ae4d67e11 at::TensorIterator::for_each()
[2m[36m(pid=12716)[0m     @     0x7f417789e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12716)[0m     @     0x7f41778a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12716)[0m     @     0x7f41778a1b53 at::TensorIterator::for_each()
[2m[36m(pid=12716)[0m     @     0x7f41778a1e11 at::TensorIterator::for_each()
[2m[36m(pid=12705)[0m     @     0x7f6f50c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12705)[0m     @     0x7f6f50c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12705)[0m     @     0x7f6f50c62b53 at::TensorIterator::for_each()
[2m[36m(pid=12724)[0m     @     0x7f43b247e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12724)[0m     @     0x7f43b2481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12724)[0m     @     0x7f43b2481b53 at::TensorIterator::for_each()
[2m[36m(pid=12631)[0m     @     0x7f948ad1464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12631)[0m     @     0x7f948ad17977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12622)[0m     @     0x7f1e3fe7f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12688)[0m     @     0x7ef0c0d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12625)[0m     @     0x7f41ab216977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12709)[0m     @     0x7fb506f33b53 at::TensorIterator::for_each()
[2m[36m(pid=12740)[0m     @     0x7f940b8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=12626)[0m     @     0x7f37bab8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12626)[0m     @     0x7f37bab8db53 at::TensorIterator::for_each()
[2m[36m(pid=12621)[0m     @     0x7f285cc62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12671)[0m     @     0x7f8575c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12714)[0m     @     0x7f6949e05977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12711)[0m     @     0x7fab73ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12682)[0m     @     0x7f4df0412b53 at::TensorIterator::for_each()
[2m[36m(pid=12682)[0m     @     0x7f4df0412e11 at::TensorIterator::for_each()
[2m[36m(pid=12675)[0m     @     0x7f398bd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12704)[0m     @     0x7f53a87b8b53 at::TensorIterator::for_each()
[2m[36m(pid=12728)[0m     @     0x7fbbe3424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12685)[0m     @     0x7f2643ff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12701)[0m     @     0x7fbe18d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12706)[0m     @     0x7fb002797e11 at::TensorIterator::for_each()
[2m[36m(pid=12706)[0m     @     0x7fb0054b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12649)[0m     @     0x7f6c3ec1c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12667)[0m     @     0x7eff5c18d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12752)[0m     @     0x7f51f59d5e11 at::TensorIterator::for_each()
[2m[36m(pid=12752)[0m     @     0x7f51f86eec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12712)[0m     @     0x7f7128be2b53 at::TensorIterator::for_each()
[2m[36m(pid=12700)[0m     @     0x7f793d6a8e11 at::TensorIterator::for_each()
[2m[36m(pid=12700)[0m     @     0x7f79403c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12610)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12610)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12610)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12630)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12630)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12630)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12715)[0m     @     0x7fa49ca11b53 at::TensorIterator::for_each()
[2m[36m(pid=12687)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12687)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12687)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12617)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12617)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12617)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12613)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12613)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12613)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12628)[0m     @     0x7f28b7379b53 at::TensorIterator::for_each()
[2m[36m(pid=12645)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12645)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12645)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12616)[0m     @     0x7efe9ee1fb53 at::TensorIterator::for_each()
[2m[36m(pid=12737)[0m     @     0x7f60fc18db53 at::TensorIterator::for_each()
[2m[36m(pid=12737)[0m     @     0x7f60fc18de11 at::TensorIterator::for_each()
[2m[36m(pid=12737)[0m     @     0x7f60feea6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12737)[0m     @     0x7f60feec9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12624)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12624)[0m *** SIGSEGV (@0x0) received by PID 12624 (TID 0x7f05734dc700) from PID 0; stack trace: ***
[2m[36m(pid=12693)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12693)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12693)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12623)[0m     @     0x7f214223db53 at::TensorIterator::for_each()
[2m[36m(pid=12623)[0m     @     0x7f214223de11 at::TensorIterator::for_each()
[2m[36m(pid=12623)[0m     @     0x7f2144f56c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12623)[0m     @     0x7f2144f79cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12677)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12677)[0m *** SIGSEGV (@0x0) received by PID 12677 (TID 0x7f0033c8b700) from PID 0; stack trace: ***
[2m[36m(pid=12642)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12642)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12642)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12642)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12642)[0m *** SIGSEGV (@0x0) received by PID 12642 (TID 0x7f8f3821a700) from PID 0; stack trace: ***
[2m[36m(pid=12642)[0m     @     0x7f8f37df3390 (unknown)
[2m[36m(pid=12619)[0m     @     0x7f891df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=12619)[0m     @     0x7f891df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=12689)[0m     @     0x7f47ded16b53 at::TensorIterator::for_each()
[2m[36m(pid=12689)[0m     @     0x7f47ded16e11 at::TensorIterator::for_each()
[2m[36m(pid=12689)[0m     @     0x7f47e1a2fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12689)[0m     @     0x7f47e1a52cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12696)[0m     @     0x7f57925d2b53 at::TensorIterator::for_each()
[2m[36m(pid=12696)[0m     @     0x7f57925d2e11 at::TensorIterator::for_each()
[2m[36m(pid=12696)[0m     @     0x7f57952ebc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12696)[0m     @     0x7f579530ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12698)[0m     @     0x7f3a9bceae11 at::TensorIterator::for_each()
[2m[36m(pid=12698)[0m     @     0x7f3a9ea03c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12698)[0m     @     0x7f3a9ea26cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12698)[0m     @     0x7f3a9ba64009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12698)[0m     @     0x7f3a9ba62c3f at::native::copy_impl()
[2m[36m(pid=12698)[0m     @     0x7f3a9ba63ed4 at::native::copy_()
[2m[36m(pid=12692)[0m     @     0x7f7a662a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12692)[0m     @     0x7f7a662c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12692)[0m     @     0x7f7a63304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12692)[0m     @     0x7f7a63302c3f at::native::copy_impl()
[2m[36m(pid=12692)[0m     @     0x7f7a63303ed4 at::native::copy_()
[2m[36m(pid=12691)[0m     @     0x7f420882bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12691)[0m     @     0x7f420884ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12691)[0m     @     0x7f420588c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12691)[0m     @     0x7f420588ac3f at::native::copy_impl()
[2m[36m(pid=12691)[0m     @     0x7f420588bed4 at::native::copy_()
[2m[36m(pid=12684)[0m     @     0x7f3b12c6fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12684)[0m     @     0x7f3b12c92cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12684)[0m     @     0x7f3b0fcd0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12684)[0m     @     0x7f3b0fccec3f at::native::copy_impl()
[2m[36m(pid=12684)[0m     @     0x7f3b0fccfed4 at::native::copy_()
[2m[36m(pid=12745)[0m     @     0x7f3ae7a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12745)[0m     @     0x7f3ae7aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12745)[0m     @     0x7f3ae4ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12745)[0m     @     0x7f3ae4adfc3f at::native::copy_impl()
[2m[36m(pid=12745)[0m     @     0x7f3ae4ae0ed4 at::native::copy_()
[2m[36m(pid=12716)[0m     @     0x7f417a5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12716)[0m     @     0x7f417a5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12716)[0m     @     0x7f417761b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12716)[0m     @     0x7f4177619c3f at::native::copy_impl()
[2m[36m(pid=12716)[0m     @     0x7f417761aed4 at::native::copy_()
[2m[36m(pid=12705)[0m     @     0x7f6f50c62e11 at::TensorIterator::for_each()
[2m[36m(pid=12705)[0m     @     0x7f6f5397bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12705)[0m     @     0x7f6f5399ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12724)[0m     @     0x7f43b2481e11 at::TensorIterator::for_each()
[2m[36m(pid=12724)[0m     @     0x7f43b519ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12724)[0m     @     0x7f43b51bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12724)[0m     @     0x7f43b21fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12724)[0m     @     0x7f43b21f9c3f at::native::copy_impl()
[2m[36m(pid=12724)[0m     @     0x7f43b21faed4 at::native::copy_()
[2m[36m(pid=12631)[0m     @     0x7f948ad17b53 at::TensorIterator::for_each()
[2m[36m(pid=12631)[0m     @     0x7f948ad17e11 at::TensorIterator::for_each()
[2m[36m(pid=12631)[0m     @     0x7f948da30c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12631)[0m     @     0x7f948da53cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12631)[0m     @     0x7f948aa91009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12622)[0m     @     0x7f1e3fe7fb53 at::TensorIterator::for_each()
[2m[36m(pid=12622)[0m     @     0x7f1e3fe7fe11 at::TensorIterator::for_each()
[2m[36m(pid=12622)[0m     @     0x7f1e42b98c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12622)[0m     @     0x7f1e42bbbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12688)[0m     @     0x7ef0c0d67b53 at::TensorIterator::for_each()
[2m[36m(pid=12688)[0m     @     0x7ef0c0d67e11 at::TensorIterator::for_each()
[2m[36m(pid=12688)[0m     @     0x7ef0c3a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12688)[0m     @     0x7ef0c3aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12652)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12652)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12652)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12652)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12652)[0m *** SIGSEGV (@0x0) received by PID 12652 (TID 0x7f89e2e3b700) from PID 0; stack trace: ***
[2m[36m(pid=12672)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12672)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12672)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12672)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12672)[0m *** SIGSEGV (@0x0) received by PID 12672 (TID 0x7fa000498700) from PID 0; stack trace: ***
[2m[36m(pid=12672)[0m     @     0x7fa000071390 (unknown)
[2m[36m(pid=12722)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12722)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12722)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12722)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12722)[0m *** SIGSEGV (@0x0) received by PID 12722 (TID 0x7f41d2b95700) from PID 0; stack trace: ***
[2m[36m(pid=12722)[0m     @     0x7f41d276e390 (unknown)
[2m[36m(pid=12609)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12609)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12609)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12609)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12609)[0m *** SIGSEGV (@0x0) received by PID 12609 (TID 0x7f34d8697700) from PID 0; stack trace: ***
[2m[36m(pid=12636)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12636)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12636)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12636)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12636)[0m *** SIGSEGV (@0x0) received by PID 12636 (TID 0x7f515c3af700) from PID 0; stack trace: ***
[2m[36m(pid=12702)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12702)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12702)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12702)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12702)[0m *** SIGSEGV (@0x0) received by PID 12702 (TID 0x7fbcbe004700) from PID 0; stack trace: ***
[2m[36m(pid=12749)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12749)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12749)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12749)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12749)[0m *** SIGSEGV (@0x0) received by PID 12749 (TID 0x7f7509e1e700) from PID 0; stack trace: ***
[2m[36m(pid=12625)[0m     @     0x7f41ab216b53 at::TensorIterator::for_each()
[2m[36m(pid=12625)[0m     @     0x7f41ab216e11 at::TensorIterator::for_each()
[2m[36m(pid=12625)[0m     @     0x7f41adf2fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12625)[0m     @     0x7f41adf52cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12625)[0m     @     0x7f41aaf90009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12615)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12615)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12615)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12615)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12615)[0m *** SIGSEGV (@0x0) received by PID 12615 (TID 0x7f51eafc5700) from PID 0; stack trace: ***
[2m[36m(pid=12709)[0m     @     0x7fb506f33e11 at::TensorIterator::for_each()
[2m[36m(pid=12709)[0m     @     0x7fb509c4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12709)[0m     @     0x7fb509c6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12611)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12611)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12611)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12740)[0m     @     0x7f940b8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=12740)[0m     @     0x7f940e5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12740)[0m     @     0x7f940e5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12740)[0m     @     0x7f940b61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12612)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12612)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12612)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12612)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12612)[0m *** SIGSEGV (@0x0) received by PID 12612 (TID 0x7f79877a6700) from PID 0; stack trace: ***
[2m[36m(pid=12612)[0m     @     0x7f798737f390 (unknown)
[2m[36m(pid=12612)[0m     @     0x7f4a895a2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12612)[0m     @     0x7f4a8689664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12626)[0m     @     0x7f37bab8de11 at::TensorIterator::for_each()
[2m[36m(pid=12626)[0m     @     0x7f37bd8a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12626)[0m     @     0x7f37bd8c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12626)[0m     @     0x7f37ba907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12626)[0m     @     0x7f37ba905c3f at::native::copy_impl()
[2m[36m(pid=12618)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12618)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12618)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12618)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12618)[0m *** SIGSEGV (@0x0) received by PID 12618 (TID 0x7fbc48959700) from PID 0; stack trace: ***
[2m[36m(pid=12618)[0m     @     0x7fbc48532390 (unknown)
[2m[36m(pid=12621)[0m     @     0x7f285cc62b53 at::TensorIterator::for_each()
[2m[36m(pid=12621)[0m     @     0x7f285cc62e11 at::TensorIterator::for_each()
[2m[36m(pid=12621)[0m     @     0x7f285f97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12671)[0m     @     0x7f8575c78b53 at::TensorIterator::for_each()
[2m[36m(pid=12671)[0m     @     0x7f8575c78e11 at::TensorIterator::for_each()
[2m[36m(pid=12671)[0m     @     0x7f8578991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12714)[0m     @     0x7f6949e05b53 at::TensorIterator::for_each()
[2m[36m(pid=12714)[0m     @     0x7f6949e05e11 at::TensorIterator::for_each()
[2m[36m(pid=12714)[0m     @     0x7f694cb1ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12714)[0m     @     0x7f694cb41cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12711)[0m     @     0x7fab73ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=12711)[0m     @     0x7fab73ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=12711)[0m     @     0x7fab767eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12711)[0m     @     0x7fab7680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12682)[0m     @     0x7f4df312bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12682)[0m     @     0x7f4df314ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12682)[0m     @     0x7f4df018c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12682)[0m     @     0x7f4df018ac3f at::native::copy_impl()
[2m[36m(pid=12682)[0m     @     0x7f4df018bed4 at::native::copy_()
[2m[36m(pid=12675)[0m     @     0x7f398bd93b53 at::TensorIterator::for_each()
[2m[36m(pid=12675)[0m     @     0x7f398bd93e11 at::TensorIterator::for_each()
[2m[36m(pid=12675)[0m     @     0x7f398eaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12675)[0m     @     0x7f398eacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12704)[0m     @     0x7f53a87b8e11 at::TensorIterator::for_each()
[2m[36m(pid=12704)[0m     @     0x7f53ab4d1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12704)[0m     @     0x7f53ab4f4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12704)[0m     @     0x7f53a8532009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12728)[0m     @     0x7fbbe3424b53 at::TensorIterator::for_each()
[2m[36m(pid=12728)[0m     @     0x7fbbe3424e11 at::TensorIterator::for_each()
[2m[36m(pid=12728)[0m     @     0x7fbbe613dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12728)[0m     @     0x7fbbe6160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12685)[0m     @     0x7f2643ff9b53 at::TensorIterator::for_each()
[2m[36m(pid=12685)[0m     @     0x7f2643ff9e11 at::TensorIterator::for_each()
[2m[36m(pid=12685)[0m     @     0x7f2646d12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12685)[0m     @     0x7f2646d35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12701)[0m     @     0x7fbe18d67b53 at::TensorIterator::for_each()
[2m[36m(pid=12701)[0m     @     0x7fbe18d67e11 at::TensorIterator::for_each()
[2m[36m(pid=12701)[0m     @     0x7fbe1ba80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12706)[0m     @     0x7fb0054d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12706)[0m     @     0x7fb002511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12706)[0m     @     0x7fb00250fc3f at::native::copy_impl()
[2m[36m(pid=12706)[0m     @     0x7fb002510ed4 at::native::copy_()
[2m[36m(pid=12649)[0m     @     0x7f6c3ec1cb53 at::TensorIterator::for_each()
[2m[36m(pid=12649)[0m     @     0x7f6c3ec1ce11 at::TensorIterator::for_each()
[2m[36m(pid=12649)[0m     @     0x7f6c41935c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12649)[0m     @     0x7f6c41958cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12667)[0m     @     0x7eff5c18db53 at::TensorIterator::for_each()
[2m[36m(pid=12667)[0m     @     0x7eff5c18de11 at::TensorIterator::for_each()
[2m[36m(pid=12667)[0m     @     0x7eff5eea6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12667)[0m     @     0x7eff5eec9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12752)[0m     @     0x7f51f8711cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12752)[0m     @     0x7f51f574f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12752)[0m     @     0x7f51f574dc3f at::native::copy_impl()
[2m[36m(pid=12752)[0m     @     0x7f51f574eed4 at::native::copy_()
[2m[36m(pid=12752)[0m     @     0x7f51f5e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12712)[0m     @     0x7f7128be2e11 at::TensorIterator::for_each()
[2m[36m(pid=12712)[0m     @     0x7f712b8fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12712)[0m     @     0x7f712b91ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12700)[0m     @     0x7f79403e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12700)[0m     @     0x7f793d422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12700)[0m     @     0x7f793d420c3f at::native::copy_impl()
[2m[36m(pid=12700)[0m     @     0x7f793d421ed4 at::native::copy_()
[2m[36m(pid=12629)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12629)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12629)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12629)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12629)[0m *** SIGSEGV (@0x0) received by PID 12629 (TID 0x7efe6c22a700) from PID 0; stack trace: ***
[2m[36m(pid=12629)[0m     @     0x7efe6be03390 (unknown)
[2m[36m(pid=12610)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12610)[0m *** SIGSEGV (@0x0) received by PID 12610 (TID 0x7ff90b14f700) from PID 0; stack trace: ***
[2m[36m(pid=12610)[0m     @     0x7ff90ad28390 (unknown)
[2m[36m(pid=12610)[0m     @     0x7fca0cf46fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12610)[0m     @     0x7fca0a23a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12634)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12634)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12634)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12634)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12634)[0m *** SIGSEGV (@0x0) received by PID 12634 (TID 0x7f115f304700) from PID 0; stack trace: ***
[2m[36m(pid=12620)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12620)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12620)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12620)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12620)[0m *** SIGSEGV (@0x0) received by PID 12620 (TID 0x7f57251c4700) from PID 0; stack trace: ***
[2m[36m(pid=12620)[0m     @     0x7f5724d9d390 (unknown)
[2m[36m(pid=12646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12646)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12646)[0m *** SIGSEGV (@0x0) received by PID 12646 (TID 0x7fe62f07f700) from PID 0; stack trace: ***
[2m[36m(pid=12723)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12723)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12723)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12670)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12670)[0m *** SIGSEGV (@0x0) received by PID 12670 (TID 0x7fb97f1f9700) from PID 0; stack trace: ***
[2m[36m(pid=12643)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12643)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12643)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12643)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12643)[0m *** SIGSEGV (@0x0) received by PID 12643 (TID 0x7f35e5895700) from PID 0; stack trace: ***
[2m[36m(pid=12643)[0m     @     0x7f35e546e390 (unknown)
[2m[36m(pid=12643)[0m     @     0x7f06e7643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12643)[0m     @     0x7f06e493764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12630)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12630)[0m *** SIGSEGV (@0x0) received by PID 12630 (TID 0x7fe482f1f700) from PID 0; stack trace: ***
[2m[36m(pid=12630)[0m     @     0x7fe482af8390 (unknown)
[2m[36m(pid=12630)[0m     @     0x7fb584c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12630)[0m     @     0x7fb581f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12630)[0m     @     0x7fb581f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12715)[0m     @     0x7fa49ca11e11 at::TensorIterator::for_each()
[2m[36m(pid=12715)[0m     @     0x7fa49f72ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12715)[0m     @     0x7fa49f74dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12715)[0m     @     0x7fa49c78b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12715)[0m     @     0x7fa49c789c3f at::native::copy_impl()
[2m[36m(pid=12687)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12687)[0m *** SIGSEGV (@0x0) received by PID 12687 (TID 0x7fe1aee4c700) from PID 0; stack trace: ***
[2m[36m(pid=12687)[0m     @     0x7fe1aea25390 (unknown)
[2m[36m(pid=12687)[0m     @     0x7fb2b0c16fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12687)[0m     @     0x7fb2adf0a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12687)[0m     @     0x7fb2adf0d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12617)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12617)[0m *** SIGSEGV (@0x0) received by PID 12617 (TID 0x7f845a6b1700) from PID 0; stack trace: ***
[2m[36m(pid=12617)[0m     @     0x7f845a28a390 (unknown)
[2m[36m(pid=12617)[0m     @     0x7f555c4b0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12617)[0m     @     0x7f55597a464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12617)[0m     @     0x7f55597a7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12613)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12613)[0m *** SIGSEGV (@0x0) received by PID 12613 (TID 0x7fcccb5fc700) from PID 0; stack trace: ***
[2m[36m(pid=12613)[0m     @     0x7fcccb1d5390 (unknown)
[2m[36m(pid=12613)[0m     @     0x7f9dcce9efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12613)[0m     @     0x7f9dca19264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12613)[0m     @     0x7f9dca195977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12679)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12679)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12679)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12679)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12679)[0m *** SIGSEGV (@0x0) received by PID 12679 (TID 0x7ff2a7128700) from PID 0; stack trace: ***
[2m[36m(pid=12679)[0m     @     0x7ff2a6d01390 (unknown)
[2m[36m(pid=12679)[0m     @     0x7fc3a8f06fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12679)[0m     @     0x7fc3a61fa64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12681)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12681)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12681)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12628)[0m     @     0x7f28b7379e11 at::TensorIterator::for_each()
[2m[36m(pid=12628)[0m     @     0x7f28ba092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12628)[0m     @     0x7f28ba0b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12628)[0m     @     0x7f28b70f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12628)[0m     @     0x7f28b70f1c3f at::native::copy_impl()
[2m[36m(pid=12645)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12645)[0m *** SIGSEGV (@0x0) received by PID 12645 (TID 0x7f342dbf0700) from PID 0; stack trace: ***
[2m[36m(pid=12645)[0m     @     0x7f342d7c9390 (unknown)
[2m[36m(pid=12645)[0m     @     0x7f052f91dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12645)[0m     @     0x7f052cc1164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12645)[0m     @     0x7f052cc14977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12690)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12690)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12690)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12616)[0m     @     0x7efe9ee1fe11 at::TensorIterator::for_each()
[2m[36m(pid=12616)[0m     @     0x7efea1b38c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12616)[0m     @     0x7efea1b5bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12616)[0m     @     0x7efe9eb99009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12616)[0m     @     0x7efe9eb97c3f at::native::copy_impl()
[2m[36m(pid=12737)[0m     @     0x7f60fbf07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12737)[0m     @     0x7f60fbf05c3f at::native::copy_impl()
[2m[36m(pid=12624)[0m     @     0x7f05730b5390 (unknown)
[2m[36m(pid=12624)[0m     @     0x7ed6752c9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12624)[0m     @     0x7ed6725bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12624)[0m     @     0x7ed6725c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12693)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12693)[0m *** SIGSEGV (@0x0) received by PID 12693 (TID 0x7f1c28ecf700) from PID 0; stack trace: ***
[2m[36m(pid=12693)[0m     @     0x7f1c28aa8390 (unknown)
[2m[36m(pid=12693)[0m     @     0x7eed2aa9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12693)[0m     @     0x7eed27d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12623)[0m     @     0x7f2141fb7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12623)[0m     @     0x7f2141fb5c3f at::native::copy_impl()
[2m[36m(pid=12623)[0m     @     0x7f2141fb6ed4 at::native::copy_()
[2m[36m(pid=12677)[0m     @     0x7f0033864390 (unknown)
[2m[36m(pid=12677)[0m     @     0x7ed1359c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12677)[0m     @     0x7ed132cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12677)[0m     @     0x7ed132cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12642)[0m     @     0x7f6039ff0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12642)[0m     @     0x7f60372e464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12642)[0m     @     0x7f60372e7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12619)[0m     @     0x7f8920ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12619)[0m     @     0x7f8920ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12619)[0m     @     0x7f891dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12619)[0m     @     0x7f891dd07c3f at::native::copy_impl()
[2m[36m(pid=12689)[0m     @     0x7f47dea90009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12689)[0m     @     0x7f47dea8ec3f at::native::copy_impl()
[2m[36m(pid=12689)[0m     @     0x7f47dea8fed4 at::native::copy_()
[2m[36m(pid=12696)[0m     @     0x7f579234c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12696)[0m     @     0x7f579234ac3f at::native::copy_impl()
[2m[36m(pid=12696)[0m     @     0x7f579234bed4 at::native::copy_()
[2m[36m(pid=12698)[0m     @     0x7f3a9c1a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12698)[0m     @     0x7f3a9c2ae148 at::Tensor::copy_()
[2m[36m(pid=12698)[0m     @     0x7f3a9dea5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12692)[0m     @     0x7f7a63a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12692)[0m     @     0x7f7a63b4e148 at::Tensor::copy_()
[2m[36m(pid=12692)[0m     @     0x7f7a65745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12691)[0m     @     0x7f4205fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12691)[0m     @     0x7f42060d6148 at::Tensor::copy_()
[2m[36m(pid=12691)[0m     @     0x7f4207ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12684)[0m     @     0x7f3b104125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12684)[0m     @     0x7f3b1051a148 at::Tensor::copy_()
[2m[36m(pid=12684)[0m     @     0x7f3b12111989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12745)[0m     @     0x7f3ae52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12745)[0m     @     0x7f3ae532b148 at::Tensor::copy_()
[2m[36m(pid=12716)[0m     @     0x7f4177d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12716)[0m     @     0x7f4177e65148 at::Tensor::copy_()
[2m[36m(pid=12716)[0m     @     0x7f4179a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12705)[0m     @     0x7f6f509dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12705)[0m     @     0x7f6f509dac3f at::native::copy_impl()
[2m[36m(pid=12705)[0m     @     0x7f6f509dbed4 at::native::copy_()
[2m[36m(pid=12724)[0m     @     0x7f43b293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12724)[0m     @     0x7f43b2a45148 at::Tensor::copy_()
[2m[36m(pid=12631)[0m     @     0x7f948aa8fc3f at::native::copy_impl()
[2m[36m(pid=12631)[0m     @     0x7f948aa90ed4 at::native::copy_()
[2m[36m(pid=12622)[0m     @     0x7f1e3fbf9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12622)[0m     @     0x7f1e3fbf7c3f at::native::copy_impl()
[2m[36m(pid=12622)[0m     @     0x7f1e3fbf8ed4 at::native::copy_()
[2m[36m(pid=12688)[0m     @     0x7ef0c0ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12688)[0m     @     0x7ef0c0adfc3f at::native::copy_impl()
[2m[36m(pid=12688)[0m     @     0x7ef0c0ae0ed4 at::native::copy_()
[2m[36m(pid=12652)[0m     @     0x7f89e2a14390 (unknown)
[2m[36m(pid=12652)[0m     @     0x7f5ae4981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12652)[0m     @     0x7f5ae1c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12672)[0m     @     0x7f7102266fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12672)[0m     @     0x7f70ff55a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12672)[0m     @     0x7f70ff55d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12722)[0m     @     0x7f12d481bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12722)[0m     @     0x7f12d1b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12722)[0m     @     0x7f12d1b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12609)[0m     @     0x7f34d8270390 (unknown)
[2m[36m(pid=12609)[0m     @     0x7f05da14ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12609)[0m     @     0x7f05d744364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12636)[0m     @     0x7f515bf88390 (unknown)
[2m[36m(pid=12636)[0m     @     0x7f225e082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12636)[0m     @     0x7f225b37664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12702)[0m     @     0x7fbcbdbdd390 (unknown)
[2m[36m(pid=12702)[0m     @     0x7f8dbfdf1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12702)[0m     @     0x7f8dbd0e564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12749)[0m     @     0x7f75099f7390 (unknown)
[2m[36m(pid=12749)[0m     @     0x7f460ba70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12749)[0m     @     0x7f4608d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12749)[0m     @     0x7f4608d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12625)[0m     @     0x7f41aaf8ec3f at::native::copy_impl()
[2m[36m(pid=12625)[0m     @     0x7f41aaf8fed4 at::native::copy_()
[2m[36m(pid=12625)[0m     @     0x7f41ab6d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12615)[0m     @     0x7f51eab9e390 (unknown)
[2m[36m(pid=12615)[0m     @     0x7f22ecda4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12615)[0m     @     0x7f22ea09864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12615)[0m     @     0x7f22ea09b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12709)[0m     @     0x7fb506cad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12709)[0m     @     0x7fb506cabc3f at::native::copy_impl()
[2m[36m(pid=12709)[0m     @     0x7fb506caced4 at::native::copy_()
[2m[36m(pid=12718)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12718)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12718)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12718)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12718)[0m *** SIGSEGV (@0x0) received by PID 12718 (TID 0x7fc67b0e6700) from PID 0; stack trace: ***
[2m[36m(pid=12673)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12673)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12673)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12673)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12673)[0m *** SIGSEGV (@0x0) received by PID 12673 (TID 0x7fb8e5aee700) from PID 0; stack trace: ***
[2m[36m(pid=12611)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12611)[0m *** SIGSEGV (@0x0) received by PID 12611 (TID 0x7fc6ec0a6700) from PID 0; stack trace: ***
[2m[36m(pid=12611)[0m     @     0x7fc6ebc7f390 (unknown)
[2m[36m(pid=12611)[0m     @     0x7f97edd6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12611)[0m     @     0x7f97eb06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12735)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12735)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12735)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12695)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12695)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12695)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12740)[0m     @     0x7f940b619c3f at::native::copy_impl()
[2m[36m(pid=12740)[0m     @     0x7f940b61aed4 at::native::copy_()
[2m[36m(pid=12612)[0m     @     0x7f4a86899977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12612)[0m     @     0x7f4a86899b53 at::TensorIterator::for_each()
[2m[36m(pid=12612)[0m     @     0x7f4a86899e11 at::TensorIterator::for_each()
[2m[36m(pid=12612)[0m     @     0x7f4a895b2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12612)[0m     @     0x7f4a895d5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12626)[0m     @     0x7f37ba906ed4 at::native::copy_()
[2m[36m(pid=12626)[0m     @     0x7f37bb0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12626)[0m     @     0x7f37bb151148 at::Tensor::copy_()
[2m[36m(pid=12626)[0m     @     0x7f37bcd48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12618)[0m     @     0x7f8d4a5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12618)[0m     @     0x7f8d4789e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12618)[0m     @     0x7f8d478a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12618)[0m     @     0x7f8d478a1b53 at::TensorIterator::for_each()
[2m[36m(pid=12621)[0m     @     0x7f285f99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12621)[0m     @     0x7f285c9dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12621)[0m     @     0x7f285c9dac3f at::native::copy_impl()
[2m[36m(pid=12621)[0m     @     0x7f285c9dbed4 at::native::copy_()
[2m[36m(pid=12671)[0m     @     0x7f85789b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12671)[0m     @     0x7f85759f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12671)[0m     @     0x7f85759f0c3f at::native::copy_impl()
[2m[36m(pid=12671)[0m     @     0x7f85759f1ed4 at::native::copy_()
[2m[36m(pid=12714)[0m     @     0x7f6949b7f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12714)[0m     @     0x7f6949b7dc3f at::native::copy_impl()
[2m[36m(pid=12714)[0m     @     0x7f6949b7eed4 at::native::copy_()
[2m[36m(pid=12714)[0m     @     0x7f694a2c15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12711)[0m     @     0x7fab7384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12711)[0m     @     0x7fab73849c3f at::native::copy_impl()
[2m[36m(pid=12711)[0m     @     0x7fab7384aed4 at::native::copy_()
[2m[36m(pid=12711)[0m     @     0x7fab73f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12682)[0m     @     0x7f4df08ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12682)[0m     @     0x7f4df09d6148 at::Tensor::copy_()
[2m[36m(pid=12682)[0m     @     0x7f4df25cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12675)[0m     @     0x7f398bb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12675)[0m     @     0x7f398bb0bc3f at::native::copy_impl()
[2m[36m(pid=12675)[0m     @     0x7f398bb0ced4 at::native::copy_()
[2m[36m(pid=12675)[0m     @     0x7f398c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12704)[0m     @     0x7f53a8530c3f at::native::copy_impl()
[2m[36m(pid=12704)[0m     @     0x7f53a8531ed4 at::native::copy_()
[2m[36m(pid=12704)[0m     @     0x7f53a8c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12728)[0m     @     0x7fbbe319e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12728)[0m     @     0x7fbbe319cc3f at::native::copy_impl()
[2m[36m(pid=12728)[0m     @     0x7fbbe319ded4 at::native::copy_()
[2m[36m(pid=12728)[0m     @     0x7fbbe38e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12685)[0m     @     0x7f2643d73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12685)[0m     @     0x7f2643d71c3f at::native::copy_impl()
[2m[36m(pid=12685)[0m     @     0x7f2643d72ed4 at::native::copy_()
[2m[36m(pid=12685)[0m     @     0x7f26444b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12701)[0m     @     0x7fbe1baa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12701)[0m     @     0x7fbe18ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12701)[0m     @     0x7fbe18adfc3f at::native::copy_impl()
[2m[36m(pid=12701)[0m     @     0x7fbe18ae0ed4 at::native::copy_()
[2m[36m(pid=12706)[0m     @     0x7fb002c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12706)[0m     @     0x7fb002d5b148 at::Tensor::copy_()
[2m[36m(pid=12706)[0m     @     0x7fb004952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12706)[0m     @     0x7fb002c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12649)[0m     @     0x7f6c3e996009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12649)[0m     @     0x7f6c3e994c3f at::native::copy_impl()
[2m[36m(pid=12649)[0m     @     0x7f6c3e995ed4 at::native::copy_()
[2m[36m(pid=12649)[0m     @     0x7f6c3f0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12667)[0m     @     0x7eff5bf07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12667)[0m     @     0x7eff5bf05c3f at::native::copy_impl()
[2m[36m(pid=12667)[0m     @     0x7eff5bf06ed4 at::native::copy_()
[2m[36m(pid=12667)[0m     @     0x7eff5c6495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12752)[0m     @     0x7f51f5f99148 at::Tensor::copy_()
[2m[36m(pid=12752)[0m     @     0x7f51f7b90989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12752)[0m     @     0x7f51f5e915cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12752)[0m     @     0x7f51f5f99148 at::Tensor::copy_()
[2m[36m(pid=12712)[0m     @     0x7f712895c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12712)[0m     @     0x7f712895ac3f at::native::copy_impl()
[2m[36m(pid=12712)[0m     @     0x7f712895bed4 at::native::copy_()
[2m[36m(pid=12712)[0m     @     0x7f712909e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12700)[0m     @     0x7f793db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12700)[0m     @     0x7f793dc6c148 at::Tensor::copy_()
[2m[36m(pid=12700)[0m     @     0x7f793f863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12700)[0m     @     0x7f793db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12629)[0m     @     0x7ecf6e015fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12629)[0m     @     0x7ecf6b30964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12629)[0m     @     0x7ecf6b30c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12629)[0m     @     0x7ecf6b30cb53 at::TensorIterator::for_each()
[2m[36m(pid=12610)[0m     @     0x7fca0a23d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12610)[0m     @     0x7fca0a23db53 at::TensorIterator::for_each()
[2m[36m(pid=12610)[0m     @     0x7fca0a23de11 at::TensorIterator::for_each()
[2m[36m(pid=12634)[0m     @     0x7f115eedd390 (unknown)
[2m[36m(pid=12634)[0m     @     0x7ee2610ddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12634)[0m     @     0x7ee25e3d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12634)[0m     @     0x7ee25e3d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12634)[0m     @     0x7ee25e3d4b53 at::TensorIterator::for_each()
[2m[36m(pid=12708)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12708)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12708)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12708)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12708)[0m *** SIGSEGV (@0x0) received by PID 12708 (TID 0x7f7a512dd700) from PID 0; stack trace: ***
[2m[36m(pid=12708)[0m     @     0x7f7a50eb6390 (unknown)
[2m[36m(pid=12708)[0m     @     0x7f4b530aefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12708)[0m     @     0x7f4b503a264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12678)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12678)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12678)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12678)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12678)[0m *** SIGSEGV (@0x0) received by PID 12678 (TID 0x7f93591ce700) from PID 0; stack trace: ***
[2m[36m(pid=12678)[0m     @     0x7f9358da7390 (unknown)
[2m[36m(pid=12678)[0m     @     0x7f645aeebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12678)[0m     @     0x7f64581df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12694)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12694)[0m *** SIGSEGV (@0x0) received by PID 12694 (TID 0x7f9c936cf700) from PID 0; stack trace: ***
[2m[36m(pid=12694)[0m     @     0x7f9c932a8390 (unknown)
[2m[36m(pid=12686)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12686)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12686)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12686)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12686)[0m *** SIGSEGV (@0x0) received by PID 12686 (TID 0x7fa99f86f700) from PID 0; stack trace: ***
[2m[36m(pid=12686)[0m     @     0x7fa99f448390 (unknown)
[2m[36m(pid=12686)[0m     @     0x7f7aa14a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12686)[0m     @     0x7f7a9e79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12638)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12638)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12638)[0m *** Aborted at 1604574023 (unix time) try "date -d @1604574023" if you are using GNU date ***
[2m[36m(pid=12638)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12638)[0m *** SIGSEGV (@0x0) received by PID 12638 (TID 0x7f35d42f9700) from PID 0; stack trace: ***
[2m[36m(pid=12638)[0m     @     0x7f35d3ed2390 (unknown)
[2m[36m(pid=12638)[0m     @     0x7f06d6082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12638)[0m     @     0x7f06d337664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12620)[0m     @     0x7f2826eebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12620)[0m     @     0x7f28241df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12620)[0m     @     0x7f28241e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12620)[0m     @     0x7f28241e2b53 at::TensorIterator::for_each()
[2m[36m(pid=12646)[0m     @     0x7fe62ec58390 (unknown)
[2m[36m(pid=12646)[0m     @     0x7fb730d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12646)[0m     @     0x7fb72e03c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12646)[0m     @     0x7fb72e03f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12646)[0m     @     0x7fb72e03fb53 at::TensorIterator::for_each()
[2m[36m(pid=12723)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12723)[0m *** SIGSEGV (@0x0) received by PID 12723 (TID 0x7ff302f09700) from PID 0; stack trace: ***
[2m[36m(pid=12723)[0m     @     0x7ff302ae2390 (unknown)
[2m[36m(pid=12723)[0m     @     0x7fc404c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12723)[0m     @     0x7fc401f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12723)[0m     @     0x7fc401f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12670)[0m     @     0x7fb97edd2390 (unknown)
[2m[36m(pid=12670)[0m     @     0x7f8a80fd5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12670)[0m     @     0x7f8a7e2c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12670)[0m     @     0x7f8a7e2cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12643)[0m     @     0x7f06e493a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12643)[0m     @     0x7f06e493ab53 at::TensorIterator::for_each()
[2m[36m(pid=12630)[0m     @     0x7fb581f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=12630)[0m     @     0x7fb581f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=12715)[0m     @     0x7fa49c78aed4 at::native::copy_()
[2m[36m(pid=12715)[0m     @     0x7fa49cecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12687)[0m     @     0x7fb2adf0db53 at::TensorIterator::for_each()
[2m[36m(pid=12687)[0m     @     0x7fb2adf0de11 at::TensorIterator::for_each()
[2m[36m(pid=12687)[0m     @     0x7fb2b0c26c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12617)[0m     @     0x7f55597a7b53 at::TensorIterator::for_each()
[2m[36m(pid=12617)[0m     @     0x7f55597a7e11 at::TensorIterator::for_each()
[2m[36m(pid=12617)[0m     @     0x7f555c4c0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12613)[0m     @     0x7f9dca195b53 at::TensorIterator::for_each()
[2m[36m(pid=12613)[0m     @     0x7f9dca195e11 at::TensorIterator::for_each()
[2m[36m(pid=12613)[0m     @     0x7f9dcceaec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12679)[0m     @     0x7fc3a61fd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12679)[0m     @     0x7fc3a61fdb53 at::TensorIterator::for_each()
[2m[36m(pid=12679)[0m     @     0x7fc3a61fde11 at::TensorIterator::for_each()
[2m[36m(pid=12681)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12681)[0m *** SIGSEGV (@0x0) received by PID 12681 (TID 0x7f9252e7b700) from PID 0; stack trace: ***
[2m[36m(pid=12681)[0m     @     0x7f9252a54390 (unknown)
[2m[36m(pid=12681)[0m     @     0x7f6354c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12681)[0m     @     0x7f6351f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12628)[0m     @     0x7f28b70f2ed4 at::native::copy_()
[2m[36m(pid=12628)[0m     @     0x7f28b78355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12628)[0m     @     0x7f28b793d148 at::Tensor::copy_()
[2m[36m(pid=12645)[0m     @     0x7f052cc14b53 at::TensorIterator::for_each()
[2m[36m(pid=12645)[0m     @     0x7f052cc14e11 at::TensorIterator::for_each()
[2m[36m(pid=12645)[0m     @     0x7f052f92dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12690)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12690)[0m *** SIGSEGV (@0x0) received by PID 12690 (TID 0x7f00ccd20700) from PID 0; stack trace: ***
[2m[36m(pid=12690)[0m     @     0x7f00cc8f9390 (unknown)
[2m[36m(pid=12690)[0m     @     0x7ed1ce9f3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12690)[0m     @     0x7ed1cbce764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12616)[0m     @     0x7efe9eb98ed4 at::native::copy_()
[2m[36m(pid=12616)[0m     @     0x7efe9f2db5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12616)[0m     @     0x7efe9f3e3148 at::Tensor::copy_()
[2m[36m(pid=12737)[0m     @     0x7f60fbf06ed4 at::native::copy_()
[2m[36m(pid=12737)[0m     @     0x7f60fc6495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12737)[0m     @     0x7f60fc751148 at::Tensor::copy_()
[2m[36m(pid=12737)[0m     @     0x7f60fe348989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12624)[0m     @     0x7ed6725c0b53 at::TensorIterator::for_each()
[2m[36m(pid=12624)[0m     @     0x7ed6725c0e11 at::TensorIterator::for_each()
[2m[36m(pid=12624)[0m     @     0x7ed6752d9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12624)[0m     @     0x7ed6752fccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12693)[0m     @     0x7eed27d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12693)[0m     @     0x7eed27d93b53 at::TensorIterator::for_each()
[2m[36m(pid=12693)[0m     @     0x7eed27d93e11 at::TensorIterator::for_each()
[2m[36m(pid=12693)[0m     @     0x7eed2aaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12623)[0m     @     0x7f21426f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12623)[0m     @     0x7f2142801148 at::Tensor::copy_()
[2m[36m(pid=12623)[0m     @     0x7f21443f8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12677)[0m     @     0x7ed132cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=12677)[0m     @     0x7ed132cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=12677)[0m     @     0x7ed1359d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12677)[0m     @     0x7ed1359fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12642)[0m     @     0x7f60372e7b53 at::TensorIterator::for_each()
[2m[36m(pid=12642)[0m     @     0x7f60372e7e11 at::TensorIterator::for_each()
[2m[36m(pid=12642)[0m     @     0x7f603a000c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12642)[0m     @     0x7f603a023cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12619)[0m     @     0x7f891dd08ed4 at::native::copy_()
[2m[36m(pid=12619)[0m     @     0x7f891e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12619)[0m     @     0x7f891e553148 at::Tensor::copy_()
[2m[36m(pid=12689)[0m     @     0x7f47df1d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12689)[0m     @     0x7f47df2da148 at::Tensor::copy_()
[2m[36m(pid=12689)[0m     @     0x7f47e0ed1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12696)[0m     @     0x7f5792a8e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12696)[0m     @     0x7f5792b96148 at::Tensor::copy_()
[2m[36m(pid=12696)[0m     @     0x7f579478d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12698)[0m     @     0x7f3a9c1a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12698)[0m     @     0x7f3a9c2ae148 at::Tensor::copy_()
[2m[36m(pid=12698)[0m     @     0x7f3aa2564bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12698)[0m     @     0x55952de76fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12698)[0m     @     0x55952ddd1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12698)[0m     @     0x55952de5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12698)[0m     @     0x55952de5da20 method_vectorcall
[2m[36m(pid=12698)[0m     @     0x55952ddd1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12698)[0m     @     0x55952de5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12698)[0m     @     0x55952de5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12698)[0m     @     0x55952ddd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12698)[0m     @     0x55952de5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12698)[0m     @     0x55952de5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12698)[0m     @     0x55952ddd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12698)[0m     @     0x55952de5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12698)[0m     @     0x55952de5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12698)[0m     @     0x55952ddd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12698)[0m     @     0x55952de5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12692)[0m     @     0x7f7a63a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12692)[0m     @     0x7f7a63b4e148 at::Tensor::copy_()
[2m[36m(pid=12692)[0m     @     0x7f7a69e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12692)[0m     @     0x557da4f03fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12692)[0m     @     0x557da4e5eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12692)[0m     @     0x557da4ee9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12692)[0m     @     0x557da4eeaa20 method_vectorcall
[2m[36m(pid=12691)[0m     @     0x7f4205fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12691)[0m     @     0x7f42060d6148 at::Tensor::copy_()
[2m[36m(pid=12691)[0m     @     0x7f420c38cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12691)[0m     @     0x557ab1780fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12691)[0m     @     0x557ab16dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12691)[0m     @     0x557ab1766baf _PyEval_EvalCodeWithName
[2m[36m(pid=12691)[0m     @     0x557ab1767a20 method_vectorcall
[2m[36m(pid=12691)[0m     @     0x557ab16dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12691)[0m     @     0x557ab1766baf _PyEval_EvalCodeWithName
[2m[36m(pid=12691)[0m     @     0x557ab1767643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12691)[0m     @     0x557ab16dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12691)[0m     @     0x557ab1766baf _PyEval_EvalCodeWithName
[2m[36m(pid=12691)[0m     @     0x557ab1767643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12691)[0m     @     0x557ab16dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12691)[0m     @     0x557ab1766baf _PyEval_EvalCodeWithName
[2m[36m(pid=12691)[0m     @     0x557ab1767643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12691)[0m     @     0x557ab16dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12691)[0m     @     0x557ab1766baf _PyEval_EvalCodeWithName
[2m[36m(pid=12684)[0m     @     0x7f3b104125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12684)[0m     @     0x7f3b1051a148 at::Tensor::copy_()
[2m[36m(pid=12684)[0m     @     0x7f3b167d0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12684)[0m     @     0x55df1e536fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12684)[0m     @     0x55df1e491b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12684)[0m     @     0x55df1e51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12684)[0m     @     0x55df1e51da20 method_vectorcall
[2m[36m(pid=12684)[0m     @     0x55df1e491bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12684)[0m     @     0x55df1e51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12684)[0m     @     0x55df1e51d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12684)[0m     @     0x55df1e492689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12684)[0m     @     0x55df1e51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12684)[0m     @     0x55df1e51d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12684)[0m     @     0x55df1e492689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12684)[0m     @     0x55df1e51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12684)[0m     @     0x55df1e51d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12684)[0m     @     0x55df1e492689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12684)[0m     @     0x55df1e51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12745)[0m     @     0x7f3ae6f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12745)[0m     @     0x7f3ae52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12745)[0m     @     0x7f3ae532b148 at::Tensor::copy_()
[2m[36m(pid=12745)[0m     @     0x7f3aeb5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12745)[0m     @     0x55f871477fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12745)[0m     @     0x55f8713d2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12745)[0m     @     0x55f87145dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12745)[0m     @     0x55f87145ea20 method_vectorcall
[2m[36m(pid=12745)[0m     @     0x55f8713d2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12745)[0m     @     0x55f87145dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12745)[0m     @     0x55f87145e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12745)[0m     @     0x55f8713d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12745)[0m     @     0x55f87145dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12745)[0m     @     0x55f87145e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12745)[0m     @     0x55f8713d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12745)[0m     @     0x55f87145dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12745)[0m     @     0x55f87145e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12745)[0m     @     0x55f8713d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12745)[0m     @     0x55f87145dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12716)[0m     @     0x7f4177d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12716)[0m     @     0x7f4177e65148 at::Tensor::copy_()
[2m[36m(pid=12716)[0m     @     0x7f417e11bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12716)[0m     @     0x55c118ecafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12716)[0m     @     0x55c118e25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12716)[0m     @     0x55c118eb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12716)[0m     @     0x55c118eb1a20 method_vectorcall
[2m[36m(pid=12716)[0m     @     0x55c118e25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12716)[0m     @     0x55c118eb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12716)[0m     @     0x55c118eb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12716)[0m     @     0x55c118e26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12716)[0m     @     0x55c118eb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12716)[0m     @     0x55c118eb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12716)[0m     @     0x55c118e26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12716)[0m     @     0x55c118eb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12716)[0m     @     0x55c118eb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12716)[0m     @     0x55c118e26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12716)[0m     @     0x55c118eb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12705)[0m     @     0x7f6f5111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12705)[0m     @     0x7f6f51226148 at::Tensor::copy_()
[2m[36m(pid=12705)[0m     @     0x7f6f52e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12724)[0m     @     0x7f43b463c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12724)[0m     @     0x7f43b293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12724)[0m     @     0x7f43b2a45148 at::Tensor::copy_()
[2m[36m(pid=12724)[0m     @     0x7f43b8cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12724)[0m     @     0x5566d8dd1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12724)[0m     @     0x5566d8d2cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12724)[0m     @     0x5566d8db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12724)[0m     @     0x5566d8db8a20 method_vectorcall
[2m[36m(pid=12724)[0m     @     0x5566d8d2cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12724)[0m     @     0x5566d8db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12724)[0m     @     0x5566d8db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12724)[0m     @     0x5566d8d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12724)[0m     @     0x5566d8db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12724)[0m     @     0x5566d8db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12724)[0m     @     0x5566d8d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12724)[0m     @     0x5566d8db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12724)[0m     @     0x5566d8db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12724)[0m     @     0x5566d8d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12724)[0m     @     0x5566d8db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12631)[0m     @     0x7f948b1d35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12631)[0m     @     0x7f948b2db148 at::Tensor::copy_()
[2m[36m(pid=12631)[0m     @     0x7f948ced2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12631)[0m     @     0x7f948b1d35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12622)[0m     @     0x7f1e4033b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12622)[0m     @     0x7f1e40443148 at::Tensor::copy_()
[2m[36m(pid=12622)[0m     @     0x7f1e4203a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12688)[0m     @     0x7ef0c12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12688)[0m     @     0x7ef0c132b148 at::Tensor::copy_()
[2m[36m(pid=12688)[0m     @     0x7ef0c2f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12688)[0m     @     0x7ef0c12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12652)[0m     @     0x7f5ae1c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12652)[0m     @     0x7f5ae1c78b53 at::TensorIterator::for_each()
[2m[36m(pid=12652)[0m     @     0x7f5ae1c78e11 at::TensorIterator::for_each()
[2m[36m(pid=12652)[0m     @     0x7f5ae4991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12652)[0m     @     0x7f5ae49b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12672)[0m     @     0x7f70ff55db53 at::TensorIterator::for_each()
[2m[36m(pid=12672)[0m     @     0x7f70ff55de11 at::TensorIterator::for_each()
[2m[36m(pid=12672)[0m     @     0x7f7102276c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12672)[0m     @     0x7f7102299cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12722)[0m     @     0x7f12d1b12b53 at::TensorIterator::for_each()
[2m[36m(pid=12722)[0m     @     0x7f12d1b12e11 at::TensorIterator::for_each()
[2m[36m(pid=12722)[0m     @     0x7f12d482bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12722)[0m     @     0x7f12d484ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12609)[0m     @     0x7f05d7446977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12609)[0m     @     0x7f05d7446b53 at::TensorIterator::for_each()
[2m[36m(pid=12609)[0m     @     0x7f05d7446e11 at::TensorIterator::for_each()
[2m[36m(pid=12609)[0m     @     0x7f05da15fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12636)[0m     @     0x7f225b379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12636)[0m     @     0x7f225b379b53 at::TensorIterator::for_each()
[2m[36m(pid=12636)[0m     @     0x7f225b379e11 at::TensorIterator::for_each()
[2m[36m(pid=12636)[0m     @     0x7f225e092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12636)[0m     @     0x7f225e0b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12702)[0m     @     0x7f8dbd0e8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12702)[0m     @     0x7f8dbd0e8b53 at::TensorIterator::for_each()
[2m[36m(pid=12702)[0m     @     0x7f8dbd0e8e11 at::TensorIterator::for_each()
[2m[36m(pid=12702)[0m     @     0x7f8dbfe01c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12702)[0m     @     0x7f8dbfe24cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12749)[0m     @     0x7f4608d67b53 at::TensorIterator::for_each()
[2m[36m(pid=12749)[0m     @     0x7f4608d67e11 at::TensorIterator::for_each()
[2m[36m(pid=12749)[0m     @     0x7f460ba80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12749)[0m     @     0x7f460baa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12749)[0m     @     0x7f4608ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12625)[0m     @     0x7f41ab7da148 at::Tensor::copy_()
[2m[36m(pid=12625)[0m     @     0x7f41ad3d1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12625)[0m     @     0x7f41ab6d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12625)[0m     @     0x7f41ab7da148 at::Tensor::copy_()
[2m[36m(pid=12615)[0m     @     0x7f22ea09bb53 at::TensorIterator::for_each()
[2m[36m(pid=12615)[0m     @     0x7f22ea09be11 at::TensorIterator::for_each()
[2m[36m(pid=12615)[0m     @     0x7f22ecdb4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12615)[0m     @     0x7f22ecdd7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12709)[0m     @     0x7fb5073ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12709)[0m     @     0x7fb5074f7148 at::Tensor::copy_()
[2m[36m(pid=12709)[0m     @     0x7fb5090ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12709)[0m     @     0x7fb5073ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12718)[0m     @     0x7fc67acbf390 (unknown)
[2m[36m(pid=12718)[0m     @     0x7f977cee1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12718)[0m     @     0x7f977a1d564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12673)[0m     @     0x7fb8e56c7390 (unknown)
[2m[36m(pid=12673)[0m     @     0x7f89e78ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12673)[0m     @     0x7f89e4bdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12673)[0m     @     0x7f89e4be2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12673)[0m     @     0x7f89e4be2b53 at::TensorIterator::for_each()
[2m[36m(pid=12611)[0m     @     0x7f97eb063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12611)[0m     @     0x7f97eb063b53 at::TensorIterator::for_each()
[2m[36m(pid=12611)[0m     @     0x7f97eb063e11 at::TensorIterator::for_each()
[2m[36m(pid=12611)[0m     @     0x7f97edd7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12735)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12735)[0m *** SIGSEGV (@0x0) received by PID 12735 (TID 0x7fb52ec84700) from PID 0; stack trace: ***
[2m[36m(pid=12735)[0m     @     0x7fb52e85d390 (unknown)
[2m[36m(pid=12735)[0m     @     0x7f8630981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12735)[0m     @     0x7f862dc7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12695)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12695)[0m *** SIGSEGV (@0x0) received by PID 12695 (TID 0x7f1cbfbc6700) from PID 0; stack trace: ***
[2m[36m(pid=12695)[0m     @     0x7f1cbf79f390 (unknown)
[2m[36m(pid=12695)[0m     @     0x7eedc1896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12695)[0m     @     0x7eedbeb8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12695)[0m     @     0x7eedbeb8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12740)[0m     @     0x7f940bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12740)[0m     @     0x7f940be65148 at::Tensor::copy_()
[2m[36m(pid=12740)[0m     @     0x7f940da5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12612)[0m     @     0x7f4a86613009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12612)[0m     @     0x7f4a86611c3f at::native::copy_impl()
[2m[36m(pid=12612)[0m     @     0x7f4a86612ed4 at::native::copy_()
[2m[36m(pid=12626)[0m     @     0x7f37bb0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12626)[0m     @     0x7f37bb151148 at::Tensor::copy_()
[2m[36m(pid=12626)[0m     @     0x7f37c1407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12626)[0m     @     0x5583b1f05fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12626)[0m     @     0x5583b1e60b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12626)[0m     @     0x5583b1eebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12626)[0m     @     0x5583b1eeca20 method_vectorcall
[2m[36m(pid=12626)[0m     @     0x5583b1e60bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12626)[0m     @     0x5583b1eebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12626)[0m     @     0x5583b1eec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12626)[0m     @     0x5583b1e61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12626)[0m     @     0x5583b1eebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12626)[0m     @     0x5583b1eec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12626)[0m     @     0x5583b1e61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12626)[0m     @     0x5583b1eebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12626)[0m     @     0x5583b1eec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12626)[0m     @     0x5583b1e61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12626)[0m     @     0x5583b1eebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12618)[0m     @     0x7f8d478a1e11 at::TensorIterator::for_each()
[2m[36m(pid=12618)[0m     @     0x7f8d4a5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12618)[0m     @     0x7f8d4a5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12618)[0m     @     0x7f8d4761b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12618)[0m     @     0x7f8d47619c3f at::native::copy_impl()
[2m[36m(pid=12621)[0m     @     0x7f285d11e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12621)[0m     @     0x7f285d226148 at::Tensor::copy_()
[2m[36m(pid=12621)[0m     @     0x7f285ee1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12671)[0m     @     0x7f85761345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12671)[0m     @     0x7f857623c148 at::Tensor::copy_()
[2m[36m(pid=12671)[0m     @     0x7f8577e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12714)[0m     @     0x7f694a3c9148 at::Tensor::copy_()
[2m[36m(pid=12714)[0m     @     0x7f694bfc0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12711)[0m     @     0x7fab74095148 at::Tensor::copy_()
[2m[36m(pid=12711)[0m     @     0x7fab75c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12711)[0m     @     0x7fab73f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12682)[0m     @     0x7f4df08ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12682)[0m     @     0x7f4df09d6148 at::Tensor::copy_()
[2m[36m(pid=12682)[0m     @     0x7f4df6c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12682)[0m     @     0x56053b09afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12682)[0m     @     0x56053aff5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12682)[0m     @     0x56053b080baf _PyEval_EvalCodeWithName
[2m[36m(pid=12682)[0m     @     0x56053b081a20 method_vectorcall
[2m[36m(pid=12682)[0m     @     0x56053aff5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12682)[0m     @     0x56053b080baf _PyEval_EvalCodeWithName
[2m[36m(pid=12682)[0m     @     0x56053b081643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12682)[0m     @     0x56053aff6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12682)[0m     @     0x56053b080baf _PyEval_EvalCodeWithName
[2m[36m(pid=12682)[0m     @     0x56053b081643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12682)[0m     @     0x56053aff6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12682)[0m     @     0x56053b080baf _PyEval_EvalCodeWithName
[2m[36m(pid=12682)[0m     @     0x56053b081643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12682)[0m     @     0x56053aff6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12682)[0m     @     0x56053b080baf _PyEval_EvalCodeWithName
[2m[36m(pid=12675)[0m     @     0x7f398c357148 at::Tensor::copy_()
[2m[36m(pid=12675)[0m     @     0x7f398df4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12675)[0m     @     0x7f398c24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12704)[0m     @     0x7f53a8d7c148 at::Tensor::copy_()
[2m[36m(pid=12704)[0m     @     0x7f53aa973989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12704)[0m     @     0x7f53a8c745cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12728)[0m     @     0x7fbbe39e8148 at::Tensor::copy_()
[2m[36m(pid=12728)[0m     @     0x7fbbe55df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12728)[0m     @     0x7fbbe38e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12685)[0m     @     0x7f26445bd148 at::Tensor::copy_()
[2m[36m(pid=12685)[0m     @     0x7f26461b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12685)[0m     @     0x7f26444b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12701)[0m     @     0x7fbe192235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12701)[0m     @     0x7fbe1932b148 at::Tensor::copy_()
[2m[36m(pid=12701)[0m     @     0x7fbe1af22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12706)[0m     @     0x7fb002d5b148 at::Tensor::copy_()
[2m[36m(pid=12706)[0m     @     0x7fb009011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12706)[0m     @     0x55d09caabfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12706)[0m     @     0x55d09ca06b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12706)[0m     @     0x55d09ca91baf _PyEval_EvalCodeWithName
[2m[36m(pid=12706)[0m     @     0x55d09ca92a20 method_vectorcall
[2m[36m(pid=12706)[0m     @     0x55d09ca06bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12706)[0m     @     0x55d09ca91baf _PyEval_EvalCodeWithName
[2m[36m(pid=12706)[0m     @     0x55d09ca92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12706)[0m     @     0x55d09ca07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12706)[0m     @     0x55d09ca91baf _PyEval_EvalCodeWithName
[2m[36m(pid=12706)[0m     @     0x55d09ca92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12706)[0m     @     0x55d09ca07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12706)[0m     @     0x55d09ca91baf _PyEval_EvalCodeWithName
[2m[36m(pid=12706)[0m     @     0x55d09ca92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12706)[0m     @     0x55d09ca07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12706)[0m     @     0x55d09ca91baf _PyEval_EvalCodeWithName
[2m[36m(pid=12649)[0m     @     0x7f6c3f1e0148 at::Tensor::copy_()
[2m[36m(pid=12649)[0m     @     0x7f6c40dd7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12649)[0m     @     0x7f6c3f0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12667)[0m     @     0x7eff5c751148 at::Tensor::copy_()
[2m[36m(pid=12667)[0m     @     0x7eff5e348989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12667)[0m     @     0x7eff5c6495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12752)[0m     @     0x7f51fc24fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12752)[0m     @     0x55572a2b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12752)[0m     @     0x55572a214b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12752)[0m     @     0x55572a29fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12752)[0m     @     0x55572a2a0a20 method_vectorcall
[2m[36m(pid=12752)[0m     @     0x55572a214bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12752)[0m     @     0x55572a29fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12752)[0m     @     0x55572a2a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12752)[0m     @     0x55572a215689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12752)[0m     @     0x55572a29fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12752)[0m     @     0x55572a2a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12752)[0m     @     0x55572a215689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12752)[0m     @     0x55572a29fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12752)[0m     @     0x55572a2a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12752)[0m     @     0x55572a215689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12752)[0m     @     0x55572a29fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12712)[0m     @     0x7f71291a6148 at::Tensor::copy_()
[2m[36m(pid=12712)[0m     @     0x7f712ad9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12712)[0m     @     0x7f712909e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12700)[0m     @     0x7f793dc6c148 at::Tensor::copy_()
[2m[36m(pid=12700)[0m     @     0x7f7943f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12700)[0m     @     0x561dac349fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12700)[0m     @     0x561dac2a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12700)[0m     @     0x561dac32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12700)[0m     @     0x561dac330a20 method_vectorcall
[2m[36m(pid=12700)[0m     @     0x561dac2a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12700)[0m     @     0x561dac32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12700)[0m     @     0x561dac330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12700)[0m     @     0x561dac2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12700)[0m     @     0x561dac32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12700)[0m     @     0x561dac330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12700)[0m     @     0x561dac2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12700)[0m     @     0x561dac32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12700)[0m     @     0x561dac330643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12700)[0m     @     0x561dac2a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12700)[0m     @     0x561dac32fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12629)[0m     @     0x7ecf6b30ce11 at::TensorIterator::for_each()
[2m[36m(pid=12629)[0m     @     0x7ecf6e025c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12629)[0m     @     0x7ecf6e048cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12629)[0m     @     0x7ecf6b086009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12610)[0m     @     0x7fca0cf56c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12610)[0m     @     0x7fca0cf79cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12610)[0m     @     0x7fca09fb7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12610)[0m     @     0x7fca09fb5c3f at::native::copy_impl()
[2m[36m(pid=12610)[0m     @     0x7fca09fb6ed4 at::native::copy_()
[2m[36m(pid=12634)[0m     @     0x7ee25e3d4e11 at::TensorIterator::for_each()
[2m[36m(pid=12634)[0m     @     0x7ee2610edc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12634)[0m     @     0x7ee261110cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12634)[0m     @     0x7ee25e14e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12634)[0m     @     0x7ee25e14cc3f at::native::copy_impl()
[2m[36m(pid=12708)[0m     @     0x7f4b503a5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12708)[0m     @     0x7f4b503a5b53 at::TensorIterator::for_each()
[2m[36m(pid=12708)[0m     @     0x7f4b503a5e11 at::TensorIterator::for_each()
[2m[36m(pid=12678)[0m     @     0x7f64581e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12678)[0m     @     0x7f64581e2b53 at::TensorIterator::for_each()
[2m[36m(pid=12678)[0m     @     0x7f64581e2e11 at::TensorIterator::for_each()
[2m[36m(pid=12678)[0m     @     0x7f645aefbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12678)[0m     @     0x7f645af1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12694)[0m     @     0x7f6d954a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12694)[0m     @     0x7f6d9279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12694)[0m     @     0x7f6d92797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12694)[0m     @     0x7f6d92797b53 at::TensorIterator::for_each()
[2m[36m(pid=12686)[0m     @     0x7f7a9e797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12686)[0m     @     0x7f7a9e797b53 at::TensorIterator::for_each()
[2m[36m(pid=12686)[0m     @     0x7f7a9e797e11 at::TensorIterator::for_each()
[2m[36m(pid=12686)[0m     @     0x7f7aa14b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12638)[0m     @     0x7f06d3379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12638)[0m     @     0x7f06d3379b53 at::TensorIterator::for_each()
[2m[36m(pid=12638)[0m     @     0x7f06d3379e11 at::TensorIterator::for_each()
[2m[36m(pid=12638)[0m     @     0x7f06d6092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12620)[0m     @     0x7f28241e2e11 at::TensorIterator::for_each()
[2m[36m(pid=12620)[0m     @     0x7f2826efbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12620)[0m     @     0x7f2826f1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12620)[0m     @     0x7f2823f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12620)[0m     @     0x7f2823f5ac3f at::native::copy_impl()
[2m[36m(pid=12620)[0m     @     0x7f2823f5bed4 at::native::copy_()
[2m[36m(pid=12646)[0m     @     0x7fb72e03fe11 at::TensorIterator::for_each()
[2m[36m(pid=12646)[0m     @     0x7fb730d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12646)[0m     @     0x7fb730d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12646)[0m     @     0x7fb72ddb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12646)[0m     @     0x7fb72ddb7c3f at::native::copy_impl()
[2m[36m(pid=12723)[0m     @     0x7fc401f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=12723)[0m     @     0x7fc401f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=12723)[0m     @     0x7fc404ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12723)[0m     @     0x7fc404ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12723)[0m     @     0x7fc401d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12723)[0m     @     0x7fc401d07c3f at::native::copy_impl()
[2m[36m(pid=12670)[0m     @     0x7f8a7e2ccb53 at::TensorIterator::for_each()
[2m[36m(pid=12670)[0m     @     0x7f8a7e2cce11 at::TensorIterator::for_each()
[2m[36m(pid=12670)[0m     @     0x7f8a80fe5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12670)[0m     @     0x7f8a81008cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12670)[0m     @     0x7f8a7e046009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12670)[0m     @     0x7f8a7e044c3f at::native::copy_impl()
[2m[36m(pid=12643)[0m     @     0x7f06e493ae11 at::TensorIterator::for_each()
[2m[36m(pid=12643)[0m     @     0x7f06e7653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12643)[0m     @     0x7f06e7676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12643)[0m     @     0x7f06e46b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12643)[0m     @     0x7f06e46b2c3f at::native::copy_impl()
[2m[36m(pid=12630)[0m     @     0x7fb584ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12630)[0m     @     0x7fb584ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12630)[0m     @     0x7fb581d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12630)[0m     @     0x7fb581d07c3f at::native::copy_impl()
[2m[36m(pid=12630)[0m     @     0x7fb581d08ed4 at::native::copy_()
[2m[36m(pid=12715)[0m     @     0x7fa49cfd5148 at::Tensor::copy_()
[2m[36m(pid=12715)[0m     @     0x7fa49ebcc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12715)[0m     @     0x7fa49cecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12687)[0m     @     0x7fb2b0c49cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12687)[0m     @     0x7fb2adc87009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12687)[0m     @     0x7fb2adc85c3f at::native::copy_impl()
[2m[36m(pid=12687)[0m     @     0x7fb2adc86ed4 at::native::copy_()
[2m[36m(pid=12617)[0m     @     0x7f555c4e3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12617)[0m     @     0x7f5559521009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12617)[0m     @     0x7f555951fc3f at::native::copy_impl()
[2m[36m(pid=12617)[0m     @     0x7f5559520ed4 at::native::copy_()
[2m[36m(pid=12613)[0m     @     0x7f9dcced1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12613)[0m     @     0x7f9dc9f0f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12613)[0m     @     0x7f9dc9f0dc3f at::native::copy_impl()
[2m[36m(pid=12613)[0m     @     0x7f9dc9f0eed4 at::native::copy_()
[2m[36m(pid=12679)[0m     @     0x7fc3a8f16c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12679)[0m     @     0x7fc3a8f39cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12679)[0m     @     0x7fc3a5f77009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12679)[0m     @     0x7fc3a5f75c3f at::native::copy_impl()
[2m[36m(pid=12679)[0m     @     0x7fc3a5f76ed4 at::native::copy_()
[2m[36m(pid=12681)[0m     @     0x7f6351f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12681)[0m     @     0x7f6351f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=12681)[0m     @     0x7f6351f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=12681)[0m     @     0x7f6354c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12681)[0m     @     0x7f6354c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12628)[0m     @     0x7f28b9534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12628)[0m     @     0x7f28b78355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12628)[0m     @     0x7f28b793d148 at::Tensor::copy_()
[2m[36m(pid=12628)[0m     @     0x7f28bdbf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12628)[0m     @     0x55617550cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12628)[0m     @     0x556175467b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12628)[0m     @     0x5561754f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12628)[0m     @     0x5561754f3a20 method_vectorcall
[2m[36m(pid=12628)[0m     @     0x556175467bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12628)[0m     @     0x5561754f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12628)[0m     @     0x5561754f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12628)[0m     @     0x556175468689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12628)[0m     @     0x5561754f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12628)[0m     @     0x5561754f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12628)[0m     @     0x556175468689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12628)[0m     @     0x5561754f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12628)[0m     @     0x5561754f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12628)[0m     @     0x556175468689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12628)[0m     @     0x5561754f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12645)[0m     @     0x7f052f950cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12645)[0m     @     0x7f052c98e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12645)[0m     @     0x7f052c98cc3f at::native::copy_impl()
[2m[36m(pid=12645)[0m     @     0x7f052c98ded4 at::native::copy_()
[2m[36m(pid=12645)[0m     @     0x7f052d0d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12690)[0m     @     0x7ed1cbcea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12690)[0m     @     0x7ed1cbceab53 at::TensorIterator::for_each()
[2m[36m(pid=12690)[0m     @     0x7ed1cbceae11 at::TensorIterator::for_each()
[2m[36m(pid=12690)[0m     @     0x7ed1cea03c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12690)[0m     @     0x7ed1cea26cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12616)[0m     @     0x7efea0fda989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12616)[0m     @     0x7efe9f2db5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12616)[0m     @     0x7efe9f3e3148 at::Tensor::copy_()
[2m[36m(pid=12737)[0m     @     0x7f60fc6495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12737)[0m     @     0x7f60fc751148 at::Tensor::copy_()
[2m[36m(pid=12737)[0m     @     0x7f6102a07bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12737)[0m     @     0x5632d95c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12737)[0m     @     0x5632d951db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12737)[0m     @     0x5632d95a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12737)[0m     @     0x5632d95a9a20 method_vectorcall
[2m[36m(pid=12737)[0m     @     0x5632d951dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12737)[0m     @     0x5632d95a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12737)[0m     @     0x5632d95a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12737)[0m     @     0x5632d951e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12737)[0m     @     0x5632d95a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12737)[0m     @     0x5632d95a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12737)[0m     @     0x5632d951e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12737)[0m     @     0x5632d95a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12737)[0m     @     0x5632d95a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12737)[0m     @     0x5632d951e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12737)[0m     @     0x5632d95a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12624)[0m     @     0x7ed67233a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12624)[0m     @     0x7ed672338c3f at::native::copy_impl()
[2m[36m(pid=12624)[0m     @     0x7ed672339ed4 at::native::copy_()
[2m[36m(pid=12693)[0m     @     0x7eed2aacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12693)[0m     @     0x7eed27b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12693)[0m     @     0x7eed27b0bc3f at::native::copy_impl()
[2m[36m(pid=12623)[0m     @     0x7f21426f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12623)[0m     @     0x7f2142801148 at::Tensor::copy_()
[2m[36m(pid=12623)[0m     @     0x7f2148ab7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12623)[0m     @     0x55ad6d62afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12623)[0m     @     0x55ad6d585b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12623)[0m     @     0x55ad6d610baf _PyEval_EvalCodeWithName
[2m[36m(pid=12623)[0m     @     0x55ad6d611a20 method_vectorcall
[2m[36m(pid=12623)[0m     @     0x55ad6d585bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12623)[0m     @     0x55ad6d610baf _PyEval_EvalCodeWithName
[2m[36m(pid=12623)[0m     @     0x55ad6d611643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12623)[0m     @     0x55ad6d586689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12623)[0m     @     0x55ad6d610baf _PyEval_EvalCodeWithName
[2m[36m(pid=12623)[0m     @     0x55ad6d611643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12623)[0m     @     0x55ad6d586689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12623)[0m     @     0x55ad6d610baf _PyEval_EvalCodeWithName
[2m[36m(pid=12623)[0m     @     0x55ad6d611643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12623)[0m     @     0x55ad6d586689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12623)[0m     @     0x55ad6d610baf _PyEval_EvalCodeWithName
[2m[36m(pid=12677)[0m     @     0x7ed132a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12677)[0m     @     0x7ed132a37c3f at::native::copy_impl()
[2m[36m(pid=12677)[0m     @     0x7ed132a38ed4 at::native::copy_()
[2m[36m(pid=12677)[0m     @     0x7ed13317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12642)[0m     @     0x7f6037061009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12642)[0m     @     0x7f603705fc3f at::native::copy_impl()
[2m[36m(pid=12642)[0m     @     0x7f6037060ed4 at::native::copy_()
[2m[36m(pid=12642)[0m     @     0x7f60377a35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12619)[0m     @     0x7f892014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12619)[0m     @     0x7f891e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12619)[0m     @     0x7f891e553148 at::Tensor::copy_()
[2m[36m(pid=12619)[0m     @     0x7f8924809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12619)[0m     @     0x558dfd892fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12619)[0m     @     0x558dfd7edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12689)[0m     @     0x7f47df1d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12689)[0m     @     0x7f47df2da148 at::Tensor::copy_()
[2m[36m(pid=12689)[0m     @     0x7f47f8317bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12689)[0m     @     0x557509a56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12689)[0m     @     0x5575099b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12689)[0m     @     0x557509a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12689)[0m     @     0x557509a3da20 method_vectorcall
[2m[36m(pid=12689)[0m     @     0x5575099b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12689)[0m     @     0x557509a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12689)[0m     @     0x557509a3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12689)[0m     @     0x5575099b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12689)[0m     @     0x557509a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12689)[0m     @     0x557509a3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12689)[0m     @     0x5575099b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12689)[0m     @     0x557509a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12689)[0m     @     0x557509a3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12689)[0m     @     0x5575099b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12689)[0m     @     0x557509a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12696)[0m     @     0x7f5792a8e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12696)[0m     @     0x7f5792b96148 at::Tensor::copy_()
[2m[36m(pid=12696)[0m     @     0x7f5798e4cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12696)[0m     @     0x5558ec259fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12696)[0m     @     0x5558ec1b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12696)[0m     @     0x5558ec23fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12696)[0m     @     0x5558ec240a20 method_vectorcall
[2m[36m(pid=12696)[0m     @     0x5558ec1b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12696)[0m     @     0x5558ec23fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12696)[0m     @     0x5558ec240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12696)[0m     @     0x5558ec1b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12696)[0m     @     0x5558ec23fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12696)[0m     @     0x5558ec240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12696)[0m     @     0x5558ec1b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12696)[0m     @     0x5558ec23fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12696)[0m     @     0x5558ec240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12696)[0m     @     0x5558ec1b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12696)[0m     @     0x5558ec23fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12692)[0m     @     0x557da4e5ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12692)[0m     @     0x557da4ee9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12692)[0m     @     0x557da4eea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12692)[0m     @     0x557da4e5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12692)[0m     @     0x557da4ee9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12692)[0m     @     0x557da4eea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12692)[0m     @     0x557da4e5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12692)[0m     @     0x557da4ee9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12692)[0m     @     0x557da4eea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12692)[0m     @     0x557da4e5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12692)[0m     @     0x557da4ee9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12705)[0m     @     0x7f6f5111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12705)[0m     @     0x7f6f51226148 at::Tensor::copy_()
[2m[36m(pid=12705)[0m     @     0x7f6f574dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12705)[0m     @     0x56143655dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12705)[0m     @     0x5614364b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12705)[0m     @     0x561436543baf _PyEval_EvalCodeWithName
[2m[36m(pid=12705)[0m     @     0x561436544a20 method_vectorcall
[2m[36m(pid=12705)[0m     @     0x5614364b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12705)[0m     @     0x561436543baf _PyEval_EvalCodeWithName
[2m[36m(pid=12705)[0m     @     0x561436544643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12705)[0m     @     0x5614364b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12705)[0m     @     0x561436543baf _PyEval_EvalCodeWithName
[2m[36m(pid=12705)[0m     @     0x561436544643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12705)[0m     @     0x5614364b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12705)[0m     @     0x561436543baf _PyEval_EvalCodeWithName
[2m[36m(pid=12705)[0m     @     0x561436544643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12705)[0m     @     0x5614364b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12705)[0m     @     0x561436543baf _PyEval_EvalCodeWithName
[2m[36m(pid=12631)[0m     @     0x7f948b2db148 at::Tensor::copy_()
[2m[36m(pid=12631)[0m     @     0x7f9491591bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12631)[0m     @     0x563ea6f74fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12631)[0m     @     0x563ea6ecfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12631)[0m     @     0x563ea6f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12631)[0m     @     0x563ea6f5ba20 method_vectorcall
[2m[36m(pid=12631)[0m     @     0x563ea6ecfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12631)[0m     @     0x563ea6f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12631)[0m     @     0x563ea6f5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12631)[0m     @     0x563ea6ed0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12631)[0m     @     0x563ea6f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12631)[0m     @     0x563ea6f5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12631)[0m     @     0x563ea6ed0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12631)[0m     @     0x563ea6f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12631)[0m     @     0x563ea6f5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12631)[0m     @     0x563ea6ed0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12631)[0m     @     0x563ea6f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12622)[0m     @     0x7f1e4033b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12622)[0m     @     0x7f1e40443148 at::Tensor::copy_()
[2m[36m(pid=12622)[0m     @     0x7f1e466f9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12622)[0m     @     0x55a8ed4effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12622)[0m     @     0x55a8ed44ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12622)[0m     @     0x55a8ed4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12622)[0m     @     0x55a8ed4d6a20 method_vectorcall
[2m[36m(pid=12622)[0m     @     0x55a8ed44abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12622)[0m     @     0x55a8ed4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12622)[0m     @     0x55a8ed4d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12622)[0m     @     0x55a8ed44b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12622)[0m     @     0x55a8ed4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12622)[0m     @     0x55a8ed4d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12622)[0m     @     0x55a8ed44b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12622)[0m     @     0x55a8ed4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12622)[0m     @     0x55a8ed4d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12622)[0m     @     0x55a8ed44b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12622)[0m     @     0x55a8ed4d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12688)[0m     @     0x7ef0c132b148 at::Tensor::copy_()
[2m[36m(pid=12688)[0m     @     0x7ef0c75e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12688)[0m     @     0x55ad7cacffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12688)[0m     @     0x55ad7ca2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12688)[0m     @     0x55ad7cab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12688)[0m     @     0x55ad7cab6a20 method_vectorcall
[2m[36m(pid=12688)[0m     @     0x55ad7ca2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12688)[0m     @     0x55ad7cab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12688)[0m     @     0x55ad7cab6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12688)[0m     @     0x55ad7ca2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12688)[0m     @     0x55ad7cab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12688)[0m     @     0x55ad7cab6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12688)[0m     @     0x55ad7ca2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12688)[0m     @     0x55ad7cab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12688)[0m     @     0x55ad7cab6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12688)[0m     @     0x55ad7ca2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12688)[0m     @     0x55ad7cab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12652)[0m     @     0x7f5ae19f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12652)[0m     @     0x7f5ae19f0c3f at::native::copy_impl()
[2m[36m(pid=12652)[0m     @     0x7f5ae19f1ed4 at::native::copy_()
[2m[36m(pid=12652)[0m     @     0x7f5ae21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12672)[0m     @     0x7f70ff2d7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12672)[0m     @     0x7f70ff2d5c3f at::native::copy_impl()
[2m[36m(pid=12672)[0m     @     0x7f70ff2d6ed4 at::native::copy_()
[2m[36m(pid=12672)[0m     @     0x7f70ffa195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12672)[0m     @     0x7f70ffb21148 at::Tensor::copy_()
[2m[36m(pid=12722)[0m     @     0x7f12d188c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12722)[0m     @     0x7f12d188ac3f at::native::copy_impl()
[2m[36m(pid=12722)[0m     @     0x7f12d188bed4 at::native::copy_()
[2m[36m(pid=12722)[0m     @     0x7f12d1fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12609)[0m     @     0x7f05da182cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12609)[0m     @     0x7f05d71c0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12609)[0m     @     0x7f05d71bec3f at::native::copy_impl()
[2m[36m(pid=12609)[0m     @     0x7f05d71bfed4 at::native::copy_()
[2m[36m(pid=12636)[0m     @     0x7f225b0f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12636)[0m     @     0x7f225b0f1c3f at::native::copy_impl()
[2m[36m(pid=12636)[0m     @     0x7f225b0f2ed4 at::native::copy_()
[2m[36m(pid=12636)[0m     @     0x7f225b8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12702)[0m     @     0x7f8dbce62009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12702)[0m     @     0x7f8dbce60c3f at::native::copy_impl()
[2m[36m(pid=12702)[0m     @     0x7f8dbce61ed4 at::native::copy_()
[2m[36m(pid=12749)[0m     @     0x7f4608adfc3f at::native::copy_impl()
[2m[36m(pid=12749)[0m     @     0x7f4608ae0ed4 at::native::copy_()
[2m[36m(pid=12749)[0m     @     0x7f46092235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12625)[0m     @     0x7f41b1a90bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12625)[0m     @     0x561e35246fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12625)[0m     @     0x561e351a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12625)[0m     @     0x561e3522cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12625)[0m     @     0x561e3522da20 method_vectorcall
[2m[36m(pid=12625)[0m     @     0x561e351a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12625)[0m     @     0x561e3522cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12625)[0m     @     0x561e3522d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12625)[0m     @     0x561e351a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12625)[0m     @     0x561e3522cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12625)[0m     @     0x561e3522d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12625)[0m     @     0x561e351a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12625)[0m     @     0x561e3522cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12625)[0m     @     0x561e3522d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12625)[0m     @     0x561e351a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12625)[0m     @     0x561e3522cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12615)[0m     @     0x7f22e9e15009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12615)[0m     @     0x7f22e9e13c3f at::native::copy_impl()
[2m[36m(pid=12615)[0m     @     0x7f22e9e14ed4 at::native::copy_()
[2m[36m(pid=12615)[0m     @     0x7f22ea5575cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12709)[0m     @     0x7fb5074f7148 at::Tensor::copy_()
[2m[36m(pid=12709)[0m     @     0x7fb50d7adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12709)[0m     @     0x55a00d9bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12709)[0m     @     0x55a00d91ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12709)[0m     @     0x55a00d9a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12709)[0m     @     0x55a00d9a6a20 method_vectorcall
[2m[36m(pid=12709)[0m     @     0x55a00d91abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12709)[0m     @     0x55a00d9a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12709)[0m     @     0x55a00d9a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12709)[0m     @     0x55a00d91b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12709)[0m     @     0x55a00d9a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12709)[0m     @     0x55a00d9a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12709)[0m     @     0x55a00d91b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12709)[0m     @     0x55a00d9a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12709)[0m     @     0x55a00d9a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12709)[0m     @     0x55a00d91b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12709)[0m     @     0x55a00d9a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12718)[0m     @     0x7f977a1d8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12718)[0m     @     0x7f977a1d8b53 at::TensorIterator::for_each()
[2m[36m(pid=12718)[0m     @     0x7f977a1d8e11 at::TensorIterator::for_each()
[2m[36m(pid=12673)[0m     @     0x7f89e4be2e11 at::TensorIterator::for_each()
[2m[36m(pid=12673)[0m     @     0x7f89e78fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12673)[0m     @     0x7f89e791ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12673)[0m     @     0x7f89e495c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12611)[0m     @     0x7f97edd9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12611)[0m     @     0x7f97eaddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12611)[0m     @     0x7f97eaddbc3f at::native::copy_impl()
[2m[36m(pid=12611)[0m     @     0x7f97eaddced4 at::native::copy_()
[2m[36m(pid=12611)[0m     @     0x7f97eb51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12735)[0m     @     0x7f862dc78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=12735)[0m     @     0x7f862dc78b53 at::TensorIterator::for_each()
[2m[36m(pid=12735)[0m     @     0x7f862dc78e11 at::TensorIterator::for_each()
[2m[36m(pid=12735)[0m     @     0x7f8630991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12735)[0m     @     0x7f86309b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12695)[0m     @     0x7eedbeb8db53 at::TensorIterator::for_each()
[2m[36m(pid=12695)[0m     @     0x7eedbeb8de11 at::TensorIterator::for_each()
[2m[36m(pid=12695)[0m     @     0x7eedc18a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12695)[0m     @     0x7eedc18c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12695)[0m     @     0x7eedbe907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12695)[0m     @     0x7eedbe905c3f at::native::copy_impl()
[2m[36m(pid=12740)[0m     @     0x7f940bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12740)[0m     @     0x7f940be65148 at::Tensor::copy_()
[2m[36m(pid=12740)[0m     @     0x7f941211bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12740)[0m     @     0x55ff10733fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12740)[0m     @     0x55ff1068eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12740)[0m     @     0x55ff10719baf _PyEval_EvalCodeWithName
[2m[36m(pid=12740)[0m     @     0x55ff1071aa20 method_vectorcall
[2m[36m(pid=12740)[0m     @     0x55ff1068ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12740)[0m     @     0x55ff10719baf _PyEval_EvalCodeWithName
[2m[36m(pid=12740)[0m     @     0x55ff1071a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12740)[0m     @     0x55ff1068f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12740)[0m     @     0x55ff10719baf _PyEval_EvalCodeWithName
[2m[36m(pid=12740)[0m     @     0x55ff1071a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12740)[0m     @     0x55ff1068f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12740)[0m     @     0x55ff10719baf _PyEval_EvalCodeWithName
[2m[36m(pid=12740)[0m     @     0x55ff1071a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12740)[0m     @     0x55ff1068f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12740)[0m     @     0x55ff10719baf _PyEval_EvalCodeWithName
[2m[36m(pid=12612)[0m     @     0x7f4a86d555cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12612)[0m     @     0x7f4a86e5d148 at::Tensor::copy_()
[2m[36m(pid=12612)[0m     @     0x7f4a88a54989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12612)[0m     @     0x7f4a86d555cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12618)[0m     @     0x7f8d4761aed4 at::native::copy_()
[2m[36m(pid=12618)[0m     @     0x7f8d47d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12618)[0m     @     0x7f8d47e65148 at::Tensor::copy_()
[2m[36m(pid=12618)[0m     @     0x7f8d49a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12621)[0m     @     0x7f285d11e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12621)[0m     @     0x7f285d226148 at::Tensor::copy_()
[2m[36m(pid=12621)[0m     @     0x7f28634dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12621)[0m     @     0x55803bbb2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12621)[0m     @     0x55803bb0db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12621)[0m     @     0x55803bb98baf _PyEval_EvalCodeWithName
[2m[36m(pid=12621)[0m     @     0x55803bb99a20 method_vectorcall
[2m[36m(pid=12621)[0m     @     0x55803bb0dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12621)[0m     @     0x55803bb98baf _PyEval_EvalCodeWithName
[2m[36m(pid=12621)[0m     @     0x55803bb99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12621)[0m     @     0x55803bb0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12621)[0m     @     0x55803bb98baf _PyEval_EvalCodeWithName
[2m[36m(pid=12621)[0m     @     0x55803bb99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12621)[0m     @     0x55803bb0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12621)[0m     @     0x55803bb98baf _PyEval_EvalCodeWithName
[2m[36m(pid=12621)[0m     @     0x55803bb99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12621)[0m     @     0x55803bb0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12621)[0m     @     0x55803bb98baf _PyEval_EvalCodeWithName
[2m[36m(pid=12671)[0m     @     0x7f85761345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12671)[0m     @     0x7f857623c148 at::Tensor::copy_()
[2m[36m(pid=12671)[0m     @     0x7f857c4f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12671)[0m     @     0x5567e77a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12671)[0m     @     0x5567e76fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12671)[0m     @     0x5567e7788baf _PyEval_EvalCodeWithName
[2m[36m(pid=12671)[0m     @     0x5567e7789a20 method_vectorcall
[2m[36m(pid=12671)[0m     @     0x5567e76fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12671)[0m     @     0x5567e7788baf _PyEval_EvalCodeWithName
[2m[36m(pid=12671)[0m     @     0x5567e7789643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12671)[0m     @     0x5567e76fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12671)[0m     @     0x5567e7788baf _PyEval_EvalCodeWithName
[2m[36m(pid=12671)[0m     @     0x5567e7789643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12671)[0m     @     0x5567e76fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12671)[0m     @     0x5567e7788baf _PyEval_EvalCodeWithName
[2m[36m(pid=12671)[0m     @     0x5567e7789643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12671)[0m     @     0x5567e76fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12671)[0m     @     0x5567e7788baf _PyEval_EvalCodeWithName
[2m[36m(pid=12714)[0m     @     0x7f694a2c15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12714)[0m     @     0x7f694a3c9148 at::Tensor::copy_()
[2m[36m(pid=12714)[0m     @     0x7f695067fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12714)[0m     @     0x55611ecc0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12714)[0m     @     0x55611ec1bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12714)[0m     @     0x55611eca6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12714)[0m     @     0x55611eca7a20 method_vectorcall
[2m[36m(pid=12714)[0m     @     0x55611ec1bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12714)[0m     @     0x55611eca6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12714)[0m     @     0x55611eca7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12714)[0m     @     0x55611ec1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12714)[0m     @     0x55611eca6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12714)[0m     @     0x55611eca7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12714)[0m     @     0x55611ec1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12714)[0m     @     0x55611eca6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12714)[0m     @     0x55611eca7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12714)[0m     @     0x55611ec1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12714)[0m     @     0x55611eca6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12711)[0m     @     0x7fab74095148 at::Tensor::copy_()
[2m[36m(pid=12711)[0m     @     0x7fab7a34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12711)[0m     @     0x556d82e5afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12711)[0m     @     0x556d82db5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12711)[0m     @     0x556d82e40baf _PyEval_EvalCodeWithName
[2m[36m(pid=12711)[0m     @     0x556d82e41a20 method_vectorcall
[2m[36m(pid=12711)[0m     @     0x556d82db5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12711)[0m     @     0x556d82e40baf _PyEval_EvalCodeWithName
[2m[36m(pid=12711)[0m     @     0x556d82e41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12711)[0m     @     0x556d82db6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12711)[0m     @     0x556d82e40baf _PyEval_EvalCodeWithName
[2m[36m(pid=12711)[0m     @     0x556d82e41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12711)[0m     @     0x556d82db6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12711)[0m     @     0x556d82e40baf _PyEval_EvalCodeWithName
[2m[36m(pid=12711)[0m     @     0x556d82e41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12711)[0m     @     0x556d82db6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12711)[0m     @     0x556d82e40baf _PyEval_EvalCodeWithName
[2m[36m(pid=12675)[0m     @     0x7f398c357148 at::Tensor::copy_()
[2m[36m(pid=12675)[0m     @     0x7f399260dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12675)[0m     @     0x5570c52adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12675)[0m     @     0x5570c5208b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12675)[0m     @     0x5570c5293baf _PyEval_EvalCodeWithName
[2m[36m(pid=12675)[0m     @     0x5570c5294a20 method_vectorcall
[2m[36m(pid=12675)[0m     @     0x5570c5208bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12675)[0m     @     0x5570c5293baf _PyEval_EvalCodeWithName
[2m[36m(pid=12675)[0m     @     0x5570c5294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12675)[0m     @     0x5570c5209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12675)[0m     @     0x5570c5293baf _PyEval_EvalCodeWithName
[2m[36m(pid=12675)[0m     @     0x5570c5294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12675)[0m     @     0x5570c5209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12675)[0m     @     0x5570c5293baf _PyEval_EvalCodeWithName
[2m[36m(pid=12675)[0m     @     0x5570c5294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12675)[0m     @     0x5570c5209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12675)[0m     @     0x5570c5293baf _PyEval_EvalCodeWithName
[2m[36m(pid=12704)[0m     @     0x7f53a8d7c148 at::Tensor::copy_()
[2m[36m(pid=12704)[0m     @     0x7f53af032bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12704)[0m     @     0x559b60d34fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12704)[0m     @     0x559b60c8fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12704)[0m     @     0x559b60d1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12704)[0m     @     0x559b60d1ba20 method_vectorcall
[2m[36m(pid=12704)[0m     @     0x559b60c8fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12704)[0m     @     0x559b60d1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12704)[0m     @     0x559b60d1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12704)[0m     @     0x559b60c90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12704)[0m     @     0x559b60d1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12704)[0m     @     0x559b60d1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12704)[0m     @     0x559b60c90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12704)[0m     @     0x559b60d1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12704)[0m     @     0x559b60d1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12704)[0m     @     0x559b60c90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12704)[0m     @     0x559b60d1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12728)[0m     @     0x7fbbe39e8148 at::Tensor::copy_()
[2m[36m(pid=12728)[0m     @     0x7fbbe9c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12728)[0m     @     0x55b4e817dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12728)[0m     @     0x55b4e80d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12728)[0m     @     0x55b4e8163baf _PyEval_EvalCodeWithName
[2m[36m(pid=12728)[0m     @     0x55b4e8164a20 method_vectorcall
[2m[36m(pid=12728)[0m     @     0x55b4e80d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12728)[0m     @     0x55b4e8163baf _PyEval_EvalCodeWithName
[2m[36m(pid=12728)[0m     @     0x55b4e8164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12728)[0m     @     0x55b4e80d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12728)[0m     @     0x55b4e8163baf _PyEval_EvalCodeWithName
[2m[36m(pid=12728)[0m     @     0x55b4e8164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12728)[0m     @     0x55b4e80d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12728)[0m     @     0x55b4e8163baf _PyEval_EvalCodeWithName
[2m[36m(pid=12728)[0m     @     0x55b4e8164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12728)[0m     @     0x55b4e80d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12728)[0m     @     0x55b4e8163baf _PyEval_EvalCodeWithName
[2m[36m(pid=12685)[0m     @     0x7f26445bd148 at::Tensor::copy_()
[2m[36m(pid=12685)[0m     @     0x7f264a873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12685)[0m     @     0x55eb3c0c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12685)[0m     @     0x55eb3c023b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12685)[0m     @     0x55eb3c0aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12685)[0m     @     0x55eb3c0afa20 method_vectorcall
[2m[36m(pid=12685)[0m     @     0x55eb3c023bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12685)[0m     @     0x55eb3c0aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12685)[0m     @     0x55eb3c0af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12685)[0m     @     0x55eb3c024689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12685)[0m     @     0x55eb3c0aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12685)[0m     @     0x55eb3c0af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12685)[0m     @     0x55eb3c024689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12685)[0m     @     0x55eb3c0aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12685)[0m     @     0x55eb3c0af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12685)[0m     @     0x55eb3c024689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12685)[0m     @     0x55eb3c0aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12701)[0m     @     0x7fbe192235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12701)[0m     @     0x7fbe1932b148 at::Tensor::copy_()
[2m[36m(pid=12701)[0m     @     0x7fbe1f5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12701)[0m     @     0x5576b0573fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12701)[0m     @     0x5576b04ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12701)[0m     @     0x5576b0559baf _PyEval_EvalCodeWithName
[2m[36m(pid=12701)[0m     @     0x5576b055aa20 method_vectorcall
[2m[36m(pid=12701)[0m     @     0x5576b04cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12701)[0m     @     0x5576b0559baf _PyEval_EvalCodeWithName
[2m[36m(pid=12701)[0m     @     0x5576b055a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12701)[0m     @     0x5576b04cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12701)[0m     @     0x5576b0559baf _PyEval_EvalCodeWithName
[2m[36m(pid=12701)[0m     @     0x5576b055a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12701)[0m     @     0x5576b04cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12701)[0m     @     0x5576b0559baf _PyEval_EvalCodeWithName
[2m[36m(pid=12701)[0m     @     0x5576b055a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12701)[0m     @     0x5576b04cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12701)[0m     @     0x5576b0559baf _PyEval_EvalCodeWithName
[2m[36m(pid=12649)[0m     @     0x7f6c3f1e0148 at::Tensor::copy_()
[2m[36m(pid=12649)[0m     @     0x7f6c45496bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12649)[0m     @     0x563cba27ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12649)[0m     @     0x563cba1dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12649)[0m     @     0x563cba265baf _PyEval_EvalCodeWithName
[2m[36m(pid=12649)[0m     @     0x563cba266a20 method_vectorcall
[2m[36m(pid=12649)[0m     @     0x563cba1dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12649)[0m     @     0x563cba265baf _PyEval_EvalCodeWithName
[2m[36m(pid=12649)[0m     @     0x563cba266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12649)[0m     @     0x563cba1db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12649)[0m     @     0x563cba265baf _PyEval_EvalCodeWithName
[2m[36m(pid=12649)[0m     @     0x563cba266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12649)[0m     @     0x563cba1db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12649)[0m     @     0x563cba265baf _PyEval_EvalCodeWithName
[2m[36m(pid=12649)[0m     @     0x563cba266643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12649)[0m     @     0x563cba1db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12649)[0m     @     0x563cba265baf _PyEval_EvalCodeWithName
[2m[36m(pid=12667)[0m     @     0x7eff5c751148 at::Tensor::copy_()
[2m[36m(pid=12667)[0m     @     0x7eff62a07bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12667)[0m     @     0x55b2aff50fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12667)[0m     @     0x55b2afeabb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12667)[0m     @     0x55b2aff36baf _PyEval_EvalCodeWithName
[2m[36m(pid=12667)[0m     @     0x55b2aff37a20 method_vectorcall
[2m[36m(pid=12667)[0m     @     0x55b2afeabbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12667)[0m     @     0x55b2aff36baf _PyEval_EvalCodeWithName
[2m[36m(pid=12667)[0m     @     0x55b2aff37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12667)[0m     @     0x55b2afeac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12667)[0m     @     0x55b2aff36baf _PyEval_EvalCodeWithName
[2m[36m(pid=12667)[0m     @     0x55b2aff37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12667)[0m     @     0x55b2afeac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12667)[0m     @     0x55b2aff36baf _PyEval_EvalCodeWithName
[2m[36m(pid=12667)[0m     @     0x55b2aff37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12667)[0m     @     0x55b2afeac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12667)[0m     @     0x55b2aff36baf _PyEval_EvalCodeWithName
[2m[36m(pid=12712)[0m     @     0x7f71291a6148 at::Tensor::copy_()
[2m[36m(pid=12712)[0m     @     0x7f712f45cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12712)[0m     @     0x563ababc6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12712)[0m     @     0x563abab21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12712)[0m     @     0x563ababacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12712)[0m     @     0x563ababada20 method_vectorcall
[2m[36m(pid=12712)[0m     @     0x563abab21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12712)[0m     @     0x563ababacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12712)[0m     @     0x563ababad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12712)[0m     @     0x563abab22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12712)[0m     @     0x563ababacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12712)[0m     @     0x563ababad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12712)[0m     @     0x563abab22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12712)[0m     @     0x563ababacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12712)[0m     @     0x563ababad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12712)[0m     @     0x563abab22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12712)[0m     @     0x563ababacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12629)[0m     @     0x7ecf6b084c3f at::native::copy_impl()
[2m[36m(pid=12629)[0m     @     0x7ecf6b085ed4 at::native::copy_()
[2m[36m(pid=12629)[0m     @     0x7ecf6b7c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12629)[0m     @     0x7ecf6b8d0148 at::Tensor::copy_()
[2m[36m(pid=12610)[0m     @     0x7fca0a6f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12610)[0m     @     0x7fca0a801148 at::Tensor::copy_()
[2m[36m(pid=12610)[0m     @     0x7fca0c3f8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12634)[0m     @     0x7ee25e14ded4 at::native::copy_()
[2m[36m(pid=12634)[0m     @     0x7ee25e8905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12708)[0m     @     0x7f4b530bec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12708)[0m     @     0x7f4b530e1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12708)[0m     @     0x7f4b5011f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12708)[0m     @     0x7f4b5011dc3f at::native::copy_impl()
[2m[36m(pid=12678)[0m     @     0x7f6457f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12678)[0m     @     0x7f6457f5ac3f at::native::copy_impl()
[2m[36m(pid=12678)[0m     @     0x7f6457f5bed4 at::native::copy_()
[2m[36m(pid=12694)[0m     @     0x7f6d92797e11 at::TensorIterator::for_each()
[2m[36m(pid=12694)[0m     @     0x7f6d954b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12694)[0m     @     0x7f6d954d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12686)[0m     @     0x7f7aa14d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12686)[0m     @     0x7f7a9e511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12686)[0m     @     0x7f7a9e50fc3f at::native::copy_impl()
[2m[36m(pid=12686)[0m     @     0x7f7a9e510ed4 at::native::copy_()
[2m[36m(pid=12638)[0m     @     0x7f06d60b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12638)[0m     @     0x7f06d30f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12638)[0m     @     0x7f06d30f1c3f at::native::copy_impl()
[2m[36m(pid=12620)[0m     @     0x7f282469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12620)[0m     @     0x7f28247a6148 at::Tensor::copy_()
[2m[36m(pid=12620)[0m     @     0x7f282639d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12646)[0m     @     0x7fb72ddb8ed4 at::native::copy_()
[2m[36m(pid=12646)[0m     @     0x7fb72e4fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12646)[0m     @     0x7fb72e603148 at::Tensor::copy_()
[2m[36m(pid=12723)[0m     @     0x7fc401d08ed4 at::native::copy_()
[2m[36m(pid=12723)[0m     @     0x7fc40244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12670)[0m     @     0x7f8a7e045ed4 at::native::copy_()
[2m[36m(pid=12670)[0m     @     0x7f8a7e7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12670)[0m     @     0x7f8a7e890148 at::Tensor::copy_()
[2m[36m(pid=12643)[0m     @     0x7f06e46b3ed4 at::native::copy_()
[2m[36m(pid=12643)[0m     @     0x7f06e4df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12643)[0m     @     0x7f06e4efe148 at::Tensor::copy_()
[2m[36m(pid=12643)[0m     @     0x7f06e6af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12630)[0m     @     0x7fb58244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12630)[0m     @     0x7fb582553148 at::Tensor::copy_()
[2m[36m(pid=12630)[0m     @     0x7fb58414a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12630)[0m     @     0x7fb58244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12715)[0m     @     0x7fa49cfd5148 at::Tensor::copy_()
[2m[36m(pid=12715)[0m     @     0x7fa4a328bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12715)[0m     @     0x561ddf025fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12715)[0m     @     0x561ddef80b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12715)[0m     @     0x561ddf00bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12715)[0m     @     0x561ddf00ca20 method_vectorcall
[2m[36m(pid=12715)[0m     @     0x561ddef80bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12715)[0m     @     0x561ddf00bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12715)[0m     @     0x561ddf00c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12715)[0m     @     0x561ddef81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12715)[0m     @     0x561ddf00bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12715)[0m     @     0x561ddf00c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12715)[0m     @     0x561ddef81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12715)[0m     @     0x561ddf00bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12715)[0m     @     0x561ddf00c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12715)[0m     @     0x561ddef81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12715)[0m     @     0x561ddf00bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12687)[0m     @     0x7fb2ae3c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12687)[0m     @     0x7fb2ae4d1148 at::Tensor::copy_()
[2m[36m(pid=12687)[0m     @     0x7fb2b00c8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12687)[0m     @     0x7fb2ae3c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12617)[0m     @     0x7f5559c635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12617)[0m     @     0x7f5559d6b148 at::Tensor::copy_()
[2m[36m(pid=12617)[0m     @     0x7f555b962989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12617)[0m     @     0x7f5559c635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12613)[0m     @     0x7f9dca6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12613)[0m     @     0x7f9dca759148 at::Tensor::copy_()
[2m[36m(pid=12613)[0m     @     0x7f9dcc350989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12613)[0m     @     0x7f9dca6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12679)[0m     @     0x7fc3a66b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12679)[0m     @     0x7fc3a67c1148 at::Tensor::copy_()
[2m[36m(pid=12679)[0m     @     0x7fc3a83b8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12679)[0m     @     0x7fc3a66b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12681)[0m     @     0x7f6351cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12681)[0m     @     0x7f6351cb2c3f at::native::copy_impl()
[2m[36m(pid=12681)[0m     @     0x7f6351cb3ed4 at::native::copy_()
[2m[36m(pid=12681)[0m     @     0x7f63523f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12645)[0m     @     0x7f052d1d8148 at::Tensor::copy_()
[2m[36m(pid=12645)[0m     @     0x7f052edcf989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12645)[0m     @     0x7f052d0d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12645)[0m     @     0x7f052d1d8148 at::Tensor::copy_()
[2m[36m(pid=12690)[0m     @     0x7ed1cba64009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12690)[0m     @     0x7ed1cba62c3f at::native::copy_impl()
[2m[36m(pid=12690)[0m     @     0x7ed1cba63ed4 at::native::copy_()
[2m[36m(pid=12690)[0m     @     0x7ed1cc1a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12616)[0m     @     0x7efea5699bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12616)[0m     @     0x5604f1280fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12616)[0m     @     0x5604f11dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12616)[0m     @     0x5604f1266baf _PyEval_EvalCodeWithName
[2m[36m(pid=12616)[0m     @     0x5604f1267a20 method_vectorcall
[2m[36m(pid=12616)[0m     @     0x5604f11dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12616)[0m     @     0x5604f1266baf _PyEval_EvalCodeWithName
[2m[36m(pid=12616)[0m     @     0x5604f1267643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12616)[0m     @     0x5604f11dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12616)[0m     @     0x5604f1266baf _PyEval_EvalCodeWithName
[2m[36m(pid=12616)[0m     @     0x5604f1267643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12616)[0m     @     0x5604f11dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12616)[0m     @     0x5604f1266baf _PyEval_EvalCodeWithName
[2m[36m(pid=12616)[0m     @     0x5604f1267643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12616)[0m     @     0x5604f11dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12616)[0m     @     0x5604f1266baf _PyEval_EvalCodeWithName
[2m[36m(pid=12624)[0m     @     0x7ed672a7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12624)[0m     @     0x7ed672b84148 at::Tensor::copy_()
[2m[36m(pid=12624)[0m     @     0x7ed67477b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12624)[0m     @     0x7ed672a7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12693)[0m     @     0x7eed27b0ced4 at::native::copy_()
[2m[36m(pid=12693)[0m     @     0x7eed2824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12693)[0m     @     0x7eed28357148 at::Tensor::copy_()
[2m[36m(pid=12693)[0m     @     0x7eed29f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12677)[0m     @     0x7ed133283148 at::Tensor::copy_()
[2m[36m(pid=12677)[0m     @     0x7ed134e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12677)[0m     @     0x7ed13317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12642)[0m     @     0x7f60378ab148 at::Tensor::copy_()
[2m[36m(pid=12642)[0m     @     0x7f60394a2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12642)[0m     @     0x7f60377a35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12619)[0m     @     0x558dfd878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12619)[0m     @     0x558dfd879a20 method_vectorcall
[2m[36m(pid=12619)[0m     @     0x558dfd7edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12619)[0m     @     0x558dfd878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12619)[0m     @     0x558dfd879643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12619)[0m     @     0x558dfd7ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12619)[0m     @     0x558dfd878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12619)[0m     @     0x558dfd879643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12619)[0m     @     0x558dfd7ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12619)[0m     @     0x558dfd878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12619)[0m     @     0x558dfd879643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12619)[0m     @     0x558dfd7ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12619)[0m     @     0x558dfd878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12652)[0m     @     0x7f5ae223c148 at::Tensor::copy_()
[2m[36m(pid=12652)[0m     @     0x7f5ae3e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12652)[0m     @     0x7f5ae21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12672)[0m     @     0x7f7101718989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12672)[0m     @     0x7f70ffa195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12722)[0m     @     0x7f12d20d6148 at::Tensor::copy_()
[2m[36m(pid=12722)[0m     @     0x7f12d3ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12722)[0m     @     0x7f12d1fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12609)[0m     @     0x7f05d79025cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12609)[0m     @     0x7f05d7a0a148 at::Tensor::copy_()
[2m[36m(pid=12609)[0m     @     0x7f05d9601989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12636)[0m     @     0x7f225b93d148 at::Tensor::copy_()
[2m[36m(pid=12636)[0m     @     0x7f225d534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12702)[0m     @     0x7f8dbd5a45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12702)[0m     @     0x7f8dbd6ac148 at::Tensor::copy_()
[2m[36m(pid=12702)[0m     @     0x7f8dbf2a3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12615)[0m     @     0x7f22ea65f148 at::Tensor::copy_()
[2m[36m(pid=12615)[0m     @     0x7f22ec256989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12615)[0m     @     0x7f22ea5575cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12718)[0m     @     0x7f977cef1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12718)[0m     @     0x7f977cf14cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12718)[0m     @     0x7f9779f52009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12718)[0m     @     0x7f9779f50c3f at::native::copy_impl()
[2m[36m(pid=12673)[0m     @     0x7f89e495ac3f at::native::copy_impl()
[2m[36m(pid=12673)[0m     @     0x7f89e495bed4 at::native::copy_()
[2m[36m(pid=12611)[0m     @     0x7f97eb627148 at::Tensor::copy_()
[2m[36m(pid=12611)[0m     @     0x7f97ed21e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12735)[0m     @     0x7f862d9f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12735)[0m     @     0x7f862d9f0c3f at::native::copy_impl()
[2m[36m(pid=12695)[0m     @     0x7eedbe906ed4 at::native::copy_()
[2m[36m(pid=12695)[0m     @     0x7eedbf0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12612)[0m     @     0x7f4a86e5d148 at::Tensor::copy_()
[2m[36m(pid=12612)[0m     @     0x7f4a8d113bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12612)[0m     @     0x55c2478ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12612)[0m     @     0x55c247846b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12612)[0m     @     0x55c2478d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12612)[0m     @     0x55c2478d2a20 method_vectorcall
[2m[36m(pid=12612)[0m     @     0x55c247846bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12612)[0m     @     0x55c2478d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12612)[0m     @     0x55c2478d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12612)[0m     @     0x55c247847689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12612)[0m     @     0x55c2478d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12612)[0m     @     0x55c2478d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12612)[0m     @     0x55c247847689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12612)[0m     @     0x55c2478d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12612)[0m     @     0x55c2478d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12612)[0m     @     0x55c247847689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12612)[0m     @     0x55c2478d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12618)[0m     @     0x7f8d47d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12618)[0m     @     0x7f8d47e65148 at::Tensor::copy_()
[2m[36m(pid=12618)[0m     @     0x7f8d4e11bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12618)[0m     @     0x561df426afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12618)[0m     @     0x561df41c5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12629)[0m     @     0x7ecf6d4c7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12629)[0m     @     0x7ecf6b7c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12629)[0m     @     0x7ecf6b8d0148 at::Tensor::copy_()
[2m[36m(pid=12610)[0m     @     0x7fca0a6f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12610)[0m     @     0x7fca0a801148 at::Tensor::copy_()
[2m[36m(pid=12610)[0m     @     0x7fca10ab7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12610)[0m     @     0x5627b0782fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12610)[0m     @     0x5627b06ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12610)[0m     @     0x5627b0768baf _PyEval_EvalCodeWithName
[2m[36m(pid=12610)[0m     @     0x5627b0769a20 method_vectorcall
[2m[36m(pid=12610)[0m     @     0x5627b06ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12610)[0m     @     0x5627b0768baf _PyEval_EvalCodeWithName
[2m[36m(pid=12610)[0m     @     0x5627b0769643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12610)[0m     @     0x5627b06de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12610)[0m     @     0x5627b0768baf _PyEval_EvalCodeWithName
[2m[36m(pid=12610)[0m     @     0x5627b0769643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12610)[0m     @     0x5627b06de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12610)[0m     @     0x5627b0768baf _PyEval_EvalCodeWithName
[2m[36m(pid=12610)[0m     @     0x5627b0769643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12610)[0m     @     0x5627b06de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12610)[0m     @     0x5627b0768baf _PyEval_EvalCodeWithName
[2m[36m(pid=12634)[0m     @     0x7ee25e998148 at::Tensor::copy_()
[2m[36m(pid=12634)[0m     @     0x7ee26058f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12634)[0m     @     0x7ee25e8905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12634)[0m     @     0x7ee25e998148 at::Tensor::copy_()
[2m[36m(pid=12634)[0m     @     0x7ee264c4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12634)[0m     @     0x55a256826fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12634)[0m     @     0x55a256781b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12634)[0m     @     0x55a25680cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12634)[0m     @     0x55a25680da20 method_vectorcall
[2m[36m(pid=12634)[0m     @     0x55a256781bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12634)[0m     @     0x55a25680cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12634)[0m     @     0x55a25680d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12634)[0m     @     0x55a256782689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12634)[0m     @     0x55a25680cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12708)[0m     @     0x7f4b5011eed4 at::native::copy_()
[2m[36m(pid=12708)[0m     @     0x7f4b508615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12708)[0m     @     0x7f4b50969148 at::Tensor::copy_()
[2m[36m(pid=12708)[0m     @     0x7f4b52560989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12678)[0m     @     0x7f645869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12678)[0m     @     0x7f64587a6148 at::Tensor::copy_()
[2m[36m(pid=12678)[0m     @     0x7f645a39d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12678)[0m     @     0x7f645869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12694)[0m     @     0x7f6d92511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12694)[0m     @     0x7f6d9250fc3f at::native::copy_impl()
[2m[36m(pid=12694)[0m     @     0x7f6d92510ed4 at::native::copy_()
[2m[36m(pid=12694)[0m     @     0x7f6d92c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12686)[0m     @     0x7f7a9ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12686)[0m     @     0x7f7a9ed5b148 at::Tensor::copy_()
[2m[36m(pid=12686)[0m     @     0x7f7aa0952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12686)[0m     @     0x7f7a9ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12638)[0m     @     0x7f06d30f2ed4 at::native::copy_()
[2m[36m(pid=12638)[0m     @     0x7f06d38355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12638)[0m     @     0x7f06d393d148 at::Tensor::copy_()
[2m[36m(pid=12638)[0m     @     0x7f06d5534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12620)[0m     @     0x7f282469e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12620)[0m     @     0x7f28247a6148 at::Tensor::copy_()
[2m[36m(pid=12620)[0m     @     0x7f282aa5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12620)[0m     @     0x5623a937efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12620)[0m     @     0x5623a92d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12620)[0m     @     0x5623a9364baf _PyEval_EvalCodeWithName
[2m[36m(pid=12620)[0m     @     0x5623a9365a20 method_vectorcall
[2m[36m(pid=12620)[0m     @     0x5623a92d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12620)[0m     @     0x5623a9364baf _PyEval_EvalCodeWithName
[2m[36m(pid=12620)[0m     @     0x5623a9365643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12620)[0m     @     0x5623a92da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12620)[0m     @     0x5623a9364baf _PyEval_EvalCodeWithName
[2m[36m(pid=12620)[0m     @     0x5623a9365643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12620)[0m     @     0x5623a92da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12620)[0m     @     0x5623a9364baf _PyEval_EvalCodeWithName
[2m[36m(pid=12620)[0m     @     0x5623a9365643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12620)[0m     @     0x5623a92da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12620)[0m     @     0x5623a9364baf _PyEval_EvalCodeWithName
[2m[36m(pid=12646)[0m     @     0x7fb7301fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12646)[0m     @     0x7fb72e4fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12646)[0m     @     0x7fb72e603148 at::Tensor::copy_()
[2m[36m(pid=12646)[0m     @     0x7fb7348b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12646)[0m     @     0x563d1fca7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12646)[0m     @     0x563d1fc02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12646)[0m     @     0x563d1fc8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12646)[0m     @     0x563d1fc8ea20 method_vectorcall
[2m[36m(pid=12646)[0m     @     0x563d1fc02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12646)[0m     @     0x563d1fc8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12646)[0m     @     0x563d1fc8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12646)[0m     @     0x563d1fc03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12646)[0m     @     0x563d1fc8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12646)[0m     @     0x563d1fc8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12646)[0m     @     0x563d1fc03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12646)[0m     @     0x563d1fc8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12646)[0m     @     0x563d1fc8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12646)[0m     @     0x563d1fc03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12646)[0m     @     0x563d1fc8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12723)[0m     @     0x7fc402553148 at::Tensor::copy_()
[2m[36m(pid=12723)[0m     @     0x7fc40414a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12723)[0m     @     0x7fc40244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12723)[0m     @     0x7fc402553148 at::Tensor::copy_()
[2m[36m(pid=12723)[0m     @     0x7fc408809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12723)[0m     @     0x560fa7089fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12723)[0m     @     0x560fa6fe4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12670)[0m     @     0x7f8a80487989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12670)[0m     @     0x7f8a7e7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12643)[0m     @     0x7f06e4df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12643)[0m     @     0x7f06e4efe148 at::Tensor::copy_()
[2m[36m(pid=12643)[0m     @     0x7f06eb1b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12643)[0m     @     0x561a9b831fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12643)[0m     @     0x561a9b78cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12643)[0m     @     0x561a9b817baf _PyEval_EvalCodeWithName
[2m[36m(pid=12643)[0m     @     0x561a9b818a20 method_vectorcall
[2m[36m(pid=12643)[0m     @     0x561a9b78cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12643)[0m     @     0x561a9b817baf _PyEval_EvalCodeWithName
[2m[36m(pid=12643)[0m     @     0x561a9b818643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12643)[0m     @     0x561a9b78d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12643)[0m     @     0x561a9b817baf _PyEval_EvalCodeWithName
[2m[36m(pid=12643)[0m     @     0x561a9b818643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12643)[0m     @     0x561a9b78d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12643)[0m     @     0x561a9b817baf _PyEval_EvalCodeWithName
[2m[36m(pid=12643)[0m     @     0x561a9b818643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12643)[0m     @     0x561a9b78d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12643)[0m     @     0x561a9b817baf _PyEval_EvalCodeWithName
[2m[36m(pid=12630)[0m     @     0x7fb582553148 at::Tensor::copy_()
[2m[36m(pid=12630)[0m     @     0x7fb588809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12630)[0m     @     0x55df34bc9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12630)[0m     @     0x55df34b24b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12630)[0m     @     0x55df34bafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12630)[0m     @     0x55df34bb0a20 method_vectorcall
[2m[36m(pid=12630)[0m     @     0x55df34b24bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12630)[0m     @     0x55df34bafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12630)[0m     @     0x55df34bb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12630)[0m     @     0x55df34b25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12630)[0m     @     0x55df34bafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12630)[0m     @     0x55df34bb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12630)[0m     @     0x55df34b25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12630)[0m     @     0x55df34bafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12630)[0m     @     0x55df34bb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12630)[0m     @     0x55df34b25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12630)[0m     @     0x55df34bafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12687)[0m     @     0x7fb2ae4d1148 at::Tensor::copy_()
[2m[36m(pid=12687)[0m     @     0x7fb2b4787bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12687)[0m     @     0x55bc7dc26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12687)[0m     @     0x55bc7db81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12687)[0m     @     0x55bc7dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12687)[0m     @     0x55bc7dc0da20 method_vectorcall
[2m[36m(pid=12687)[0m     @     0x55bc7db81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12687)[0m     @     0x55bc7dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12687)[0m     @     0x55bc7dc0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12687)[0m     @     0x55bc7db82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12687)[0m     @     0x55bc7dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12687)[0m     @     0x55bc7dc0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12687)[0m     @     0x55bc7db82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12687)[0m     @     0x55bc7dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12687)[0m     @     0x55bc7dc0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12687)[0m     @     0x55bc7db82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12687)[0m     @     0x55bc7dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12617)[0m     @     0x7f5559d6b148 at::Tensor::copy_()
[2m[36m(pid=12617)[0m     @     0x7f5560021bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12617)[0m     @     0x55b2dfec9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12617)[0m     @     0x55b2dfe24b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12617)[0m     @     0x55b2dfeafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12617)[0m     @     0x55b2dfeb0a20 method_vectorcall
[2m[36m(pid=12617)[0m     @     0x55b2dfe24bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12617)[0m     @     0x55b2dfeafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12617)[0m     @     0x55b2dfeb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12617)[0m     @     0x55b2dfe25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12617)[0m     @     0x55b2dfeafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12617)[0m     @     0x55b2dfeb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12617)[0m     @     0x55b2dfe25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12617)[0m     @     0x55b2dfeafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12617)[0m     @     0x55b2dfeb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12617)[0m     @     0x55b2dfe25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12617)[0m     @     0x55b2dfeafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12613)[0m     @     0x7f9dca759148 at::Tensor::copy_()
[2m[36m(pid=12613)[0m     @     0x7f9dd05f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12613)[0m     @     0x55a2daaa4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12613)[0m     @     0x55a2da9ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12613)[0m     @     0x55a2daa8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12613)[0m     @     0x55a2daa8ba20 method_vectorcall
[2m[36m(pid=12613)[0m     @     0x55a2da9ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12613)[0m     @     0x55a2daa8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12613)[0m     @     0x55a2daa8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12613)[0m     @     0x55a2daa00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12613)[0m     @     0x55a2daa8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12613)[0m     @     0x55a2daa8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12613)[0m     @     0x55a2daa00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12613)[0m     @     0x55a2daa8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12613)[0m     @     0x55a2daa8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12613)[0m     @     0x55a2daa00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12613)[0m     @     0x55a2daa8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12679)[0m     @     0x7fc3a67c1148 at::Tensor::copy_()
[2m[36m(pid=12679)[0m     @     0x7fc3aca77bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12679)[0m     @     0x55f5bd987fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12679)[0m     @     0x55f5bd8e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12679)[0m     @     0x55f5bd96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12679)[0m     @     0x55f5bd96ea20 method_vectorcall
[2m[36m(pid=12679)[0m     @     0x55f5bd8e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12679)[0m     @     0x55f5bd96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12679)[0m     @     0x55f5bd96e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12679)[0m     @     0x55f5bd8e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12679)[0m     @     0x55f5bd96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12679)[0m     @     0x55f5bd96e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12679)[0m     @     0x55f5bd8e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12679)[0m     @     0x55f5bd96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12679)[0m     @     0x55f5bd96e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12679)[0m     @     0x55f5bd8e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12679)[0m     @     0x55f5bd96dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12681)[0m     @     0x7f63524fe148 at::Tensor::copy_()
[2m[36m(pid=12681)[0m     @     0x7f63540f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12681)[0m     @     0x7f63523f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12645)[0m     @     0x7f053348ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12645)[0m     @     0x5605cbb99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12645)[0m     @     0x5605cbaf4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12645)[0m     @     0x5605cbb7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12645)[0m     @     0x5605cbb80a20 method_vectorcall
[2m[36m(pid=12645)[0m     @     0x5605cbaf4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12645)[0m     @     0x5605cbb7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12645)[0m     @     0x5605cbb80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12645)[0m     @     0x5605cbaf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12645)[0m     @     0x5605cbb7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12645)[0m     @     0x5605cbb80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12645)[0m     @     0x5605cbaf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12645)[0m     @     0x5605cbb7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12645)[0m     @     0x5605cbb80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12645)[0m     @     0x5605cbaf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12645)[0m     @     0x5605cbb7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12690)[0m     @     0x7ed1cc2ae148 at::Tensor::copy_()
[2m[36m(pid=12690)[0m     @     0x7ed1cdea5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12690)[0m     @     0x7ed1cc1a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12624)[0m     @     0x7ed672b84148 at::Tensor::copy_()
[2m[36m(pid=12624)[0m     @     0x7ed678e3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12624)[0m     @     0x564a439b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12624)[0m     @     0x564a4390eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12624)[0m     @     0x564a43999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12624)[0m     @     0x564a4399aa20 method_vectorcall
[2m[36m(pid=12624)[0m     @     0x564a4390ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12624)[0m     @     0x564a43999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12624)[0m     @     0x564a4399a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12624)[0m     @     0x564a4390f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12624)[0m     @     0x564a43999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12624)[0m     @     0x564a4399a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12624)[0m     @     0x564a4390f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12624)[0m     @     0x564a43999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12624)[0m     @     0x564a4399a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12624)[0m     @     0x564a4390f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12624)[0m     @     0x564a43999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12693)[0m     @     0x7eed2824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12693)[0m     @     0x7eed28357148 at::Tensor::copy_()
[2m[36m(pid=12693)[0m     @     0x7eed2e60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12693)[0m     @     0x560f49ff7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12693)[0m     @     0x560f49f52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12693)[0m     @     0x560f49fddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12693)[0m     @     0x560f49fdea20 method_vectorcall
[2m[36m(pid=12693)[0m     @     0x560f49f52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12693)[0m     @     0x560f49fddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12693)[0m     @     0x560f49fde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12693)[0m     @     0x560f49f53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12693)[0m     @     0x560f49fddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12693)[0m     @     0x560f49fde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12693)[0m     @     0x560f49f53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12693)[0m     @     0x560f49fddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12693)[0m     @     0x560f49fde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12693)[0m     @     0x560f49f53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12693)[0m     @     0x560f49fddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12677)[0m     @     0x7ed133283148 at::Tensor::copy_()
[2m[36m(pid=12677)[0m     @     0x7ed139539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12677)[0m     @     0x562522300fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12677)[0m     @     0x56252225bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12677)[0m     @     0x5625222e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12677)[0m     @     0x5625222e7a20 method_vectorcall
[2m[36m(pid=12677)[0m     @     0x56252225bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12677)[0m     @     0x5625222e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12677)[0m     @     0x5625222e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12677)[0m     @     0x56252225c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12677)[0m     @     0x5625222e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12677)[0m     @     0x5625222e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12677)[0m     @     0x56252225c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12677)[0m     @     0x5625222e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12677)[0m     @     0x5625222e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12677)[0m     @     0x56252225c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12677)[0m     @     0x5625222e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12642)[0m     @     0x7f60378ab148 at::Tensor::copy_()
[2m[36m(pid=12642)[0m     @     0x7f603db61bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12642)[0m     @     0x55fc39c63fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12642)[0m     @     0x55fc39bbeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12642)[0m     @     0x55fc39c49baf _PyEval_EvalCodeWithName
[2m[36m(pid=12642)[0m     @     0x55fc39c4aa20 method_vectorcall
[2m[36m(pid=12642)[0m     @     0x55fc39bbebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12642)[0m     @     0x55fc39c49baf _PyEval_EvalCodeWithName
[2m[36m(pid=12642)[0m     @     0x55fc39c4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12642)[0m     @     0x55fc39bbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12642)[0m     @     0x55fc39c49baf _PyEval_EvalCodeWithName
[2m[36m(pid=12642)[0m     @     0x55fc39c4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12642)[0m     @     0x55fc39bbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12642)[0m     @     0x55fc39c49baf _PyEval_EvalCodeWithName
[2m[36m(pid=12642)[0m     @     0x55fc39c4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12642)[0m     @     0x55fc39bbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12642)[0m     @     0x55fc39c49baf _PyEval_EvalCodeWithName
[2m[36m(pid=12652)[0m     @     0x7f5ae223c148 at::Tensor::copy_()
[2m[36m(pid=12652)[0m     @     0x7f5ae84f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12652)[0m     @     0x562f3d672fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12652)[0m     @     0x562f3d5cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12652)[0m     @     0x562f3d658baf _PyEval_EvalCodeWithName
[2m[36m(pid=12652)[0m     @     0x562f3d659a20 method_vectorcall
[2m[36m(pid=12652)[0m     @     0x562f3d5cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12652)[0m     @     0x562f3d658baf _PyEval_EvalCodeWithName
[2m[36m(pid=12652)[0m     @     0x562f3d659643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12652)[0m     @     0x562f3d5ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12652)[0m     @     0x562f3d658baf _PyEval_EvalCodeWithName
[2m[36m(pid=12652)[0m     @     0x562f3d659643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12652)[0m     @     0x562f3d5ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12652)[0m     @     0x562f3d658baf _PyEval_EvalCodeWithName
[2m[36m(pid=12652)[0m     @     0x562f3d659643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12652)[0m     @     0x562f3d5ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12652)[0m     @     0x562f3d658baf _PyEval_EvalCodeWithName
[2m[36m(pid=12672)[0m     @     0x7f70ffb21148 at::Tensor::copy_()
[2m[36m(pid=12672)[0m     @     0x7f7105dd7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12672)[0m     @     0x55d46701afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12672)[0m     @     0x55d466f75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12672)[0m     @     0x55d467000baf _PyEval_EvalCodeWithName
[2m[36m(pid=12672)[0m     @     0x55d467001a20 method_vectorcall
[2m[36m(pid=12672)[0m     @     0x55d466f75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12672)[0m     @     0x55d467000baf _PyEval_EvalCodeWithName
[2m[36m(pid=12672)[0m     @     0x55d467001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12672)[0m     @     0x55d466f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12672)[0m     @     0x55d467000baf _PyEval_EvalCodeWithName
[2m[36m(pid=12672)[0m     @     0x55d467001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12672)[0m     @     0x55d466f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12672)[0m     @     0x55d467000baf _PyEval_EvalCodeWithName
[2m[36m(pid=12672)[0m     @     0x55d467001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12672)[0m     @     0x55d466f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12672)[0m     @     0x55d467000baf _PyEval_EvalCodeWithName
[2m[36m(pid=12722)[0m     @     0x7f12d20d6148 at::Tensor::copy_()
[2m[36m(pid=12722)[0m     @     0x7f12d838cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12722)[0m     @     0x56336f47dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12722)[0m     @     0x56336f3d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12722)[0m     @     0x56336f463baf _PyEval_EvalCodeWithName
[2m[36m(pid=12722)[0m     @     0x56336f464a20 method_vectorcall
[2m[36m(pid=12722)[0m     @     0x56336f3d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12722)[0m     @     0x56336f463baf _PyEval_EvalCodeWithName
[2m[36m(pid=12722)[0m     @     0x56336f464643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12722)[0m     @     0x56336f3d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12722)[0m     @     0x56336f463baf _PyEval_EvalCodeWithName
[2m[36m(pid=12722)[0m     @     0x56336f464643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12722)[0m     @     0x56336f3d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12722)[0m     @     0x56336f463baf _PyEval_EvalCodeWithName
[2m[36m(pid=12722)[0m     @     0x56336f464643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12722)[0m     @     0x56336f3d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12722)[0m     @     0x56336f463baf _PyEval_EvalCodeWithName
[2m[36m(pid=12609)[0m     @     0x7f05d79025cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12609)[0m     @     0x7f05d7a0a148 at::Tensor::copy_()
[2m[36m(pid=12609)[0m     @     0x7f05ddcc0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12609)[0m     @     0x56491aebffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12609)[0m     @     0x56491ae1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12609)[0m     @     0x56491aea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12609)[0m     @     0x56491aea6a20 method_vectorcall
[2m[36m(pid=12609)[0m     @     0x56491ae1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12609)[0m     @     0x56491aea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12609)[0m     @     0x56491aea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12609)[0m     @     0x56491ae1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12609)[0m     @     0x56491aea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12609)[0m     @     0x56491aea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12609)[0m     @     0x56491ae1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12609)[0m     @     0x56491aea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12609)[0m     @     0x56491aea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12609)[0m     @     0x56491ae1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12609)[0m     @     0x56491aea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12636)[0m     @     0x7f225b8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12636)[0m     @     0x7f225b93d148 at::Tensor::copy_()
[2m[36m(pid=12636)[0m     @     0x7f2261bf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12636)[0m     @     0x559d719b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12636)[0m     @     0x559d7190eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12636)[0m     @     0x559d71999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12636)[0m     @     0x559d7199aa20 method_vectorcall
[2m[36m(pid=12636)[0m     @     0x559d7190ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12636)[0m     @     0x559d71999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12636)[0m     @     0x559d7199a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12636)[0m     @     0x559d7190f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12636)[0m     @     0x559d71999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12636)[0m     @     0x559d7199a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12636)[0m     @     0x559d7190f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12636)[0m     @     0x559d71999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12636)[0m     @     0x559d7199a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12636)[0m     @     0x559d7190f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12636)[0m     @     0x559d71999baf _PyEval_EvalCodeWithName
[2m[36m(pid=12702)[0m     @     0x7f8dbd5a45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12702)[0m     @     0x7f8dbd6ac148 at::Tensor::copy_()
[2m[36m(pid=12702)[0m     @     0x7f8dc3962bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12702)[0m     @     0x555a38739fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12702)[0m     @     0x555a38694b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12702)[0m     @     0x555a3871fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12702)[0m     @     0x555a38720a20 method_vectorcall
[2m[36m(pid=12702)[0m     @     0x555a38694bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12702)[0m     @     0x555a3871fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12702)[0m     @     0x555a38720643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12702)[0m     @     0x555a38695689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12702)[0m     @     0x555a3871fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12702)[0m     @     0x555a38720643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12702)[0m     @     0x555a38695689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12702)[0m     @     0x555a3871fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12702)[0m     @     0x555a38720643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12702)[0m     @     0x555a38695689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12702)[0m     @     0x555a3871fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12615)[0m     @     0x7f22ea65f148 at::Tensor::copy_()
[2m[36m(pid=12615)[0m     @     0x7f22f0915bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12615)[0m     @     0x56212d982fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12615)[0m     @     0x56212d8ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12615)[0m     @     0x56212d968baf _PyEval_EvalCodeWithName
[2m[36m(pid=12615)[0m     @     0x56212d969a20 method_vectorcall
[2m[36m(pid=12615)[0m     @     0x56212d8ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12615)[0m     @     0x56212d968baf _PyEval_EvalCodeWithName
[2m[36m(pid=12615)[0m     @     0x56212d969643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12615)[0m     @     0x56212d8de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12615)[0m     @     0x56212d968baf _PyEval_EvalCodeWithName
[2m[36m(pid=12615)[0m     @     0x56212d969643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12615)[0m     @     0x56212d8de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12615)[0m     @     0x56212d968baf _PyEval_EvalCodeWithName
[2m[36m(pid=12615)[0m     @     0x56212d969643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12615)[0m     @     0x56212d8de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12615)[0m     @     0x56212d968baf _PyEval_EvalCodeWithName
[2m[36m(pid=12718)[0m     @     0x7f9779f51ed4 at::native::copy_()
[2m[36m(pid=12718)[0m     @     0x7f977a6945cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12718)[0m     @     0x7f977a79c148 at::Tensor::copy_()
[2m[36m(pid=12673)[0m     @     0x7f89e509e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12673)[0m     @     0x7f89e51a6148 at::Tensor::copy_()
[2m[36m(pid=12673)[0m     @     0x7f89e6d9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12673)[0m     @     0x7f89e509e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12611)[0m     @     0x7f97eb51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12611)[0m     @     0x7f97eb627148 at::Tensor::copy_()
[2m[36m(pid=12611)[0m     @     0x7f97f18ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12611)[0m     @     0x562617e59fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12611)[0m     @     0x562617db4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12611)[0m     @     0x562617e3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12611)[0m     @     0x562617e40a20 method_vectorcall
[2m[36m(pid=12611)[0m     @     0x562617db4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12611)[0m     @     0x562617e3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12611)[0m     @     0x562617e40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12611)[0m     @     0x562617db5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12611)[0m     @     0x562617e3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12611)[0m     @     0x562617e40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12611)[0m     @     0x562617db5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12611)[0m     @     0x562617e3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12611)[0m     @     0x562617e40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12611)[0m     @     0x562617db5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12611)[0m     @     0x562617e3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12735)[0m     @     0x7f862d9f1ed4 at::native::copy_()
[2m[36m(pid=12735)[0m     @     0x7f862e1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12735)[0m     @     0x7f862e23c148 at::Tensor::copy_()
[2m[36m(pid=12735)[0m     @     0x7f862fe33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12695)[0m     @     0x7eedbf151148 at::Tensor::copy_()
[2m[36m(pid=12695)[0m     @     0x7eedc0d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12695)[0m     @     0x7eedbf0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12618)[0m     @     0x561df4250baf _PyEval_EvalCodeWithName
[2m[36m(pid=12618)[0m     @     0x561df4251a20 method_vectorcall
[2m[36m(pid=12618)[0m     @     0x561df41c5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12618)[0m     @     0x561df4250baf _PyEval_EvalCodeWithName
[2m[36m(pid=12618)[0m     @     0x561df4251643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12618)[0m     @     0x561df41c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12618)[0m     @     0x561df4250baf _PyEval_EvalCodeWithName
[2m[36m(pid=12618)[0m     @     0x561df4251643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12618)[0m     @     0x561df41c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12618)[0m     @     0x561df4250baf _PyEval_EvalCodeWithName
[2m[36m(pid=12618)[0m     @     0x561df4251643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12618)[0m     @     0x561df41c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12618)[0m     @     0x561df4250baf _PyEval_EvalCodeWithName
[2m[36m(pid=12629)[0m     @     0x7ecf71b86bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12629)[0m     @     0x56124424ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12629)[0m     @     0x5612441aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12629)[0m     @     0x561244235baf _PyEval_EvalCodeWithName
[2m[36m(pid=12629)[0m     @     0x561244236a20 method_vectorcall
[2m[36m(pid=12629)[0m     @     0x5612441aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12629)[0m     @     0x561244235baf _PyEval_EvalCodeWithName
[2m[36m(pid=12629)[0m     @     0x561244236643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12629)[0m     @     0x5612441ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12629)[0m     @     0x561244235baf _PyEval_EvalCodeWithName
[2m[36m(pid=12629)[0m     @     0x561244236643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12629)[0m     @     0x5612441ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12629)[0m     @     0x561244235baf _PyEval_EvalCodeWithName
[2m[36m(pid=12629)[0m     @     0x561244236643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12629)[0m     @     0x5612441ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12629)[0m     @     0x561244235baf _PyEval_EvalCodeWithName
[2m[36m(pid=12634)[0m     @     0x55a25680d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12634)[0m     @     0x55a256782689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12634)[0m     @     0x55a25680cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12634)[0m     @     0x55a25680d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12634)[0m     @     0x55a256782689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12634)[0m     @     0x55a25680cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12708)[0m     @     0x7f4b508615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12678)[0m     @     0x7f64587a6148 at::Tensor::copy_()
[2m[36m(pid=12678)[0m     @     0x7f645ea5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12678)[0m     @     0x5635fe2f5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12678)[0m     @     0x5635fe250b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12678)[0m     @     0x5635fe2dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12678)[0m     @     0x5635fe2dca20 method_vectorcall
[2m[36m(pid=12678)[0m     @     0x5635fe250bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12678)[0m     @     0x5635fe2dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12678)[0m     @     0x5635fe2dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12678)[0m     @     0x5635fe251689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12678)[0m     @     0x5635fe2dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12678)[0m     @     0x5635fe2dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12678)[0m     @     0x5635fe251689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12678)[0m     @     0x5635fe2dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12678)[0m     @     0x5635fe2dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12678)[0m     @     0x5635fe251689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12678)[0m     @     0x5635fe2dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12694)[0m     @     0x7f6d92d5b148 at::Tensor::copy_()
[2m[36m(pid=12694)[0m     @     0x7f6d94952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12686)[0m     @     0x7f7a9ed5b148 at::Tensor::copy_()
[2m[36m(pid=12686)[0m     @     0x7f7aa5011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12686)[0m     @     0x560ab6c49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12686)[0m     @     0x560ab6ba4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12686)[0m     @     0x560ab6c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12686)[0m     @     0x560ab6c30a20 method_vectorcall
[2m[36m(pid=12686)[0m     @     0x560ab6ba4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12686)[0m     @     0x560ab6c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12686)[0m     @     0x560ab6c30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12686)[0m     @     0x560ab6ba5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12686)[0m     @     0x560ab6c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12686)[0m     @     0x560ab6c30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12686)[0m     @     0x560ab6ba5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12686)[0m     @     0x560ab6c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12686)[0m     @     0x560ab6c30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12686)[0m     @     0x560ab6ba5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12686)[0m     @     0x560ab6c2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12638)[0m     @     0x7f06d38355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12638)[0m     @     0x7f06d393d148 at::Tensor::copy_()
[2m[36m(pid=12638)[0m     @     0x7f06d9bf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12638)[0m     @     0x55586a0e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12638)[0m     @     0x55586a040b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12723)[0m     @     0x560fa706fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12723)[0m     @     0x560fa7070a20 method_vectorcall
[2m[36m(pid=12723)[0m     @     0x560fa6fe4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12723)[0m     @     0x560fa706fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12723)[0m     @     0x560fa7070643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12723)[0m     @     0x560fa6fe5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12723)[0m     @     0x560fa706fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12723)[0m     @     0x560fa7070643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12723)[0m     @     0x560fa6fe5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12723)[0m     @     0x560fa706fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12723)[0m     @     0x560fa7070643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12723)[0m     @     0x560fa6fe5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12723)[0m     @     0x560fa706fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12670)[0m     @     0x7f8a7e890148 at::Tensor::copy_()
[2m[36m(pid=12670)[0m     @     0x7f8a84b46bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12670)[0m     @     0x55edb4ebffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12670)[0m     @     0x55edb4e1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12670)[0m     @     0x55edb4ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12670)[0m     @     0x55edb4ea6a20 method_vectorcall
[2m[36m(pid=12670)[0m     @     0x55edb4e1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12670)[0m     @     0x55edb4ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12670)[0m     @     0x55edb4ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12670)[0m     @     0x55edb4e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12670)[0m     @     0x55edb4ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12670)[0m     @     0x55edb4ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12670)[0m     @     0x55edb4e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12670)[0m     @     0x55edb4ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12670)[0m     @     0x55edb4ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12670)[0m     @     0x55edb4e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12670)[0m     @     0x55edb4ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12681)[0m     @     0x7f63524fe148 at::Tensor::copy_()
[2m[36m(pid=12681)[0m     @     0x7f63587b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12681)[0m     @     0x55f98c430fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12681)[0m     @     0x55f98c38bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12681)[0m     @     0x55f98c416baf _PyEval_EvalCodeWithName
[2m[36m(pid=12681)[0m     @     0x55f98c417a20 method_vectorcall
[2m[36m(pid=12681)[0m     @     0x55f98c38bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12681)[0m     @     0x55f98c416baf _PyEval_EvalCodeWithName
[2m[36m(pid=12681)[0m     @     0x55f98c417643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12681)[0m     @     0x55f98c38c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12681)[0m     @     0x55f98c416baf _PyEval_EvalCodeWithName
[2m[36m(pid=12681)[0m     @     0x55f98c417643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12681)[0m     @     0x55f98c38c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12681)[0m     @     0x55f98c416baf _PyEval_EvalCodeWithName
[2m[36m(pid=12681)[0m     @     0x55f98c417643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12681)[0m     @     0x55f98c38c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12681)[0m     @     0x55f98c416baf _PyEval_EvalCodeWithName
[2m[36m(pid=12690)[0m     @     0x7ed1cc2ae148 at::Tensor::copy_()
[2m[36m(pid=12690)[0m     @     0x7ed1d2564bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12690)[0m     @     0x56372cc07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12690)[0m     @     0x56372cb62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12690)[0m     @     0x56372cbedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12690)[0m     @     0x56372cbeea20 method_vectorcall
[2m[36m(pid=12690)[0m     @     0x56372cb62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12690)[0m     @     0x56372cbedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12690)[0m     @     0x56372cbee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12690)[0m     @     0x56372cb63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12690)[0m     @     0x56372cbedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12690)[0m     @     0x56372cbee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12690)[0m     @     0x56372cb63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12690)[0m     @     0x56372cbedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12690)[0m     @     0x56372cbee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12690)[0m     @     0x56372cb63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12690)[0m     @     0x56372cbedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12749)[0m     @     0x7f460932b148 at::Tensor::copy_()
[2m[36m(pid=12718)[0m     @     0x7f977c393989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12718)[0m     @     0x7f977a6945cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12673)[0m     @     0x7f89e51a6148 at::Tensor::copy_()
[2m[36m(pid=12673)[0m     @     0x7f89eb45cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12673)[0m     @     0x55b6a535afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12673)[0m     @     0x55b6a52b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12673)[0m     @     0x55b6a5340baf _PyEval_EvalCodeWithName
[2m[36m(pid=12673)[0m     @     0x55b6a5341a20 method_vectorcall
[2m[36m(pid=12673)[0m     @     0x55b6a52b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12673)[0m     @     0x55b6a5340baf _PyEval_EvalCodeWithName
[2m[36m(pid=12673)[0m     @     0x55b6a5341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12673)[0m     @     0x55b6a52b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12673)[0m     @     0x55b6a5340baf _PyEval_EvalCodeWithName
[2m[36m(pid=12673)[0m     @     0x55b6a5341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12673)[0m     @     0x55b6a52b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12673)[0m     @     0x55b6a5340baf _PyEval_EvalCodeWithName
[2m[36m(pid=12673)[0m     @     0x55b6a5341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12673)[0m     @     0x55b6a52b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12673)[0m     @     0x55b6a5340baf _PyEval_EvalCodeWithName
[2m[36m(pid=12735)[0m     @     0x7f862e1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12695)[0m     @     0x7eedbf151148 at::Tensor::copy_()
[2m[36m(pid=12695)[0m     @     0x7eedc5407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12695)[0m     @     0x558b074b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12695)[0m     @     0x558b07412b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12695)[0m     @     0x558b0749dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12695)[0m     @     0x558b0749ea20 method_vectorcall
[2m[36m(pid=12695)[0m     @     0x558b07412bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12695)[0m     @     0x558b0749dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12695)[0m     @     0x558b0749e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12695)[0m     @     0x558b07413689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12695)[0m     @     0x558b0749dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12695)[0m     @     0x558b0749e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12695)[0m     @     0x558b07413689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12695)[0m     @     0x558b0749dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12695)[0m     @     0x558b0749e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12695)[0m     @     0x558b07413689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12695)[0m     @     0x558b0749dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12708)[0m     @     0x7f4b50969148 at::Tensor::copy_()
[2m[36m(pid=12708)[0m     @     0x7f4b56c1fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12708)[0m     @     0x564b190bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12708)[0m     @     0x564b1901ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12708)[0m     @     0x564b190a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12708)[0m     @     0x564b190a6a20 method_vectorcall
[2m[36m(pid=12708)[0m     @     0x564b1901abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12708)[0m     @     0x564b190a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12708)[0m     @     0x564b190a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12708)[0m     @     0x564b1901b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12708)[0m     @     0x564b190a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12708)[0m     @     0x564b190a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12708)[0m     @     0x564b1901b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12708)[0m     @     0x564b190a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12708)[0m     @     0x564b190a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12708)[0m     @     0x564b1901b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12708)[0m     @     0x564b190a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12694)[0m     @     0x7f6d92c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12694)[0m     @     0x7f6d92d5b148 at::Tensor::copy_()
[2m[36m(pid=12694)[0m     @     0x7f6d99011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12694)[0m     @     0x55c3e30a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12694)[0m     @     0x55c3e3003b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12694)[0m     @     0x55c3e308ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12694)[0m     @     0x55c3e308fa20 method_vectorcall
[2m[36m(pid=12694)[0m     @     0x55c3e3003bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12694)[0m     @     0x55c3e308ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12694)[0m     @     0x55c3e308f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12694)[0m     @     0x55c3e3004689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12694)[0m     @     0x55c3e308ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12694)[0m     @     0x55c3e308f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12694)[0m     @     0x55c3e3004689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12694)[0m     @     0x55c3e308ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12694)[0m     @     0x55c3e308f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12694)[0m     @     0x55c3e3004689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12694)[0m     @     0x55c3e308ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12638)[0m     @     0x55586a0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12638)[0m     @     0x55586a0cca20 method_vectorcall
[2m[36m(pid=12638)[0m     @     0x55586a040bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12638)[0m     @     0x55586a0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12638)[0m     @     0x55586a0cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12638)[0m     @     0x55586a041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12638)[0m     @     0x55586a0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12638)[0m     @     0x55586a0cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12638)[0m     @     0x55586a041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12638)[0m     @     0x55586a0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12638)[0m     @     0x55586a0cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12638)[0m     @     0x55586a041689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12638)[0m     @     0x55586a0cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12749)[0m     @     0x7f460af22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12749)[0m     @     0x7f46092235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=12749)[0m     @     0x7f460932b148 at::Tensor::copy_()
[2m[36m(pid=12749)[0m     @     0x7f460f5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12749)[0m     @     0x55efa5eb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12749)[0m     @     0x55efa5e14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12749)[0m     @     0x55efa5e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12749)[0m     @     0x55efa5ea0a20 method_vectorcall
[2m[36m(pid=12749)[0m     @     0x55efa5e14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12749)[0m     @     0x55efa5e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12749)[0m     @     0x55efa5ea0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12749)[0m     @     0x55efa5e15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12749)[0m     @     0x55efa5e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12749)[0m     @     0x55efa5ea0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12749)[0m     @     0x55efa5e15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12749)[0m     @     0x55efa5e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12749)[0m     @     0x55efa5ea0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12749)[0m     @     0x55efa5e15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12749)[0m     @     0x55efa5e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12718)[0m     @     0x7f977a79c148 at::Tensor::copy_()
[2m[36m(pid=12718)[0m     @     0x7f9780a52bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12718)[0m     @     0x5579a08cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12718)[0m     @     0x5579a0828b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12718)[0m     @     0x5579a08b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=12718)[0m     @     0x5579a08b4a20 method_vectorcall
[2m[36m(pid=12718)[0m     @     0x5579a0828bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12718)[0m     @     0x5579a08b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=12718)[0m     @     0x5579a08b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12718)[0m     @     0x5579a0829689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12718)[0m     @     0x5579a08b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=12718)[0m     @     0x5579a08b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12718)[0m     @     0x5579a0829689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12718)[0m     @     0x5579a08b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=12718)[0m     @     0x5579a08b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12718)[0m     @     0x5579a0829689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12718)[0m     @     0x5579a08b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=12735)[0m     @     0x7f862e23c148 at::Tensor::copy_()
[2m[36m(pid=12735)[0m     @     0x7f86344f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=12735)[0m     @     0x564215b71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12735)[0m     @     0x564215accb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12735)[0m     @     0x564215b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=12735)[0m     @     0x564215b58a20 method_vectorcall
[2m[36m(pid=12735)[0m     @     0x564215accbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12735)[0m     @     0x564215b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=12735)[0m     @     0x564215b58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12735)[0m     @     0x564215acd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12735)[0m     @     0x564215b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=12735)[0m     @     0x564215b58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12735)[0m     @     0x564215acd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12735)[0m     @     0x564215b57baf _PyEval_EvalCodeWithName
[2m[36m(pid=12735)[0m     @     0x564215b58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12735)[0m     @     0x564215acd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12735)[0m     @     0x564215b57baf _PyEval_EvalCodeWithName
2020-11-05 11:00:23,519	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8edbbd3001000000.
2020-11-05 11:00:23,525	ERROR trial_runner.py:567 -- Trial PPO_jss_env_15e8e_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=12742, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 11:00:23,539	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
== Status ==
Memory usage on this node: 24.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.47 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_15e8e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_15e8e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_15e8e_00000_0_2020-11-05_11-00-16/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.47 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_15e8e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_15e8e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_15e8e_00000_0_2020-11-05_11-00-16/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 11:00:23,561	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 11:00:23,561	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 11:00:23,561	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_15e8e_00000])
2020-11-05 11:00:23,572	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 11:00:23,572	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 11:00:23,572	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 11:00:23,572	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
