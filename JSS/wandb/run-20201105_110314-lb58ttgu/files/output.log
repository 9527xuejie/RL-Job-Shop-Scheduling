2020-11-05 11:03:17,932	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_831e6_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=23622)[0m 2020-11-05 11:03:20,722	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=23496)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23496)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23496)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23496)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23496)[0m *** SIGSEGV (@0x0) received by PID 23496 (TID 0x7f97ee38d700) from PID 0; stack trace: ***
[2m[36m(pid=23496)[0m     @     0x7f97edf66390 (unknown)
[2m[36m(pid=23581)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23581)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23581)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23581)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23581)[0m *** SIGSEGV (@0x0) received by PID 23581 (TID 0x7f1c61b6e700) from PID 0; stack trace: ***
[2m[36m(pid=23581)[0m     @     0x7f1c61747390 (unknown)
[2m[36m(pid=23581)[0m     @     0x7eed6392bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23581)[0m     @     0x7eed60c1f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23490)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23490)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23490)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23490)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23490)[0m *** SIGSEGV (@0x0) received by PID 23490 (TID 0x7fd5b3c63700) from PID 0; stack trace: ***
[2m[36m(pid=23490)[0m     @     0x7fd5b383c390 (unknown)
[2m[36m(pid=23490)[0m     @     0x7fa6b4e9efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23577)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23577)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23577)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23577)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23577)[0m *** SIGSEGV (@0x0) received by PID 23577 (TID 0x7f94f22c2700) from PID 0; stack trace: ***
[2m[36m(pid=23577)[0m     @     0x7f94f1e9b390 (unknown)
[2m[36m(pid=23577)[0m     @     0x7f65f409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23606)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23606)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23606)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23606)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23606)[0m *** SIGSEGV (@0x0) received by PID 23606 (TID 0x7fb956430700) from PID 0; stack trace: ***
[2m[36m(pid=23606)[0m     @     0x7fb956009390 (unknown)
[2m[36m(pid=23605)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23605)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23605)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23605)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23605)[0m *** SIGSEGV (@0x0) received by PID 23605 (TID 0x7fea78cb6700) from PID 0; stack trace: ***
[2m[36m(pid=23605)[0m     @     0x7fea7888f390 (unknown)
[2m[36m(pid=23605)[0m     @     0x7fbb7a9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23605)[0m     @     0x7fbb77cdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23500)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23500)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23500)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23500)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23500)[0m *** SIGSEGV (@0x0) received by PID 23500 (TID 0x7fba8d89a700) from PID 0; stack trace: ***
[2m[36m(pid=23500)[0m     @     0x7fba8d473390 (unknown)
[2m[36m(pid=23494)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23494)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23494)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23494)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23494)[0m *** SIGSEGV (@0x0) received by PID 23494 (TID 0x7f8b6c01c700) from PID 0; stack trace: ***
[2m[36m(pid=23494)[0m     @     0x7f8b6bbf5390 (unknown)
[2m[36m(pid=23494)[0m     @     0x7f5c6da1ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23489)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23489)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23489)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23489)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23489)[0m *** SIGSEGV (@0x0) received by PID 23489 (TID 0x7fddf7e0e700) from PID 0; stack trace: ***
[2m[36m(pid=23489)[0m     @     0x7fddf79e7390 (unknown)
[2m[36m(pid=23489)[0m     @     0x7faef99c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23611)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23611)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23611)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23611)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23611)[0m *** SIGSEGV (@0x0) received by PID 23611 (TID 0x7f25136fb700) from PID 0; stack trace: ***
[2m[36m(pid=23611)[0m     @     0x7f25132d4390 (unknown)
[2m[36m(pid=23611)[0m     @     0x7ef6154a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23611)[0m     @     0x7ef61279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23611)[0m     @     0x7ef612797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23612)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23612)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23612)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23612)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23612)[0m *** SIGSEGV (@0x0) received by PID 23612 (TID 0x7f5dea12f700) from PID 0; stack trace: ***
[2m[36m(pid=23612)[0m     @     0x7f5de9d08390 (unknown)
[2m[36m(pid=23612)[0m     @     0x7f2eebe84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23612)[0m     @     0x7f2ee917864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23612)[0m     @     0x7f2ee917b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23612)[0m     @     0x7f2ee917bb53 at::TensorIterator::for_each()
[2m[36m(pid=23571)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23571)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23571)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23571)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23571)[0m *** SIGSEGV (@0x0) received by PID 23571 (TID 0x7f2ebdda3700) from PID 0; stack trace: ***
[2m[36m(pid=23571)[0m     @     0x7f2ebd97c390 (unknown)
[2m[36m(pid=23571)[0m     @     0x7effbfa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23571)[0m     @     0x7effbcd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23609)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23609)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23609)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23609)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23609)[0m *** SIGSEGV (@0x0) received by PID 23609 (TID 0x7f8cf4f60700) from PID 0; stack trace: ***
[2m[36m(pid=23609)[0m     @     0x7f8cf4b39390 (unknown)
[2m[36m(pid=23609)[0m     @     0x7f5df6c5ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23609)[0m     @     0x7f5df3f5364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23609)[0m     @     0x7f5df3f56977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23609)[0m     @     0x7f5df3f56b53 at::TensorIterator::for_each()
[2m[36m(pid=23572)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23572)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23572)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23572)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23572)[0m *** SIGSEGV (@0x0) received by PID 23572 (TID 0x7fe7f07e6700) from PID 0; stack trace: ***
[2m[36m(pid=23572)[0m     @     0x7fe7f03bf390 (unknown)
[2m[36m(pid=23572)[0m     @     0x7fb8f25aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23572)[0m     @     0x7fb8ef89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23572)[0m     @     0x7fb8ef8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23604)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23604)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23604)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23604)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23604)[0m *** SIGSEGV (@0x0) received by PID 23604 (TID 0x7f77edd7b700) from PID 0; stack trace: ***
[2m[36m(pid=23604)[0m     @     0x7f77ed954390 (unknown)
[2m[36m(pid=23604)[0m     @     0x7f48efa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23604)[0m     @     0x7f48ecd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23604)[0m     @     0x7f48ecd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23604)[0m     @     0x7f48ecd67b53 at::TensorIterator::for_each()
[2m[36m(pid=23575)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23575)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23575)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23575)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23575)[0m *** SIGSEGV (@0x0) received by PID 23575 (TID 0x7f81be5b2700) from PID 0; stack trace: ***
[2m[36m(pid=23575)[0m     @     0x7f81be18b390 (unknown)
[2m[36m(pid=23575)[0m     @     0x7f52c03b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23575)[0m     @     0x7f52bd6a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23575)[0m     @     0x7f52bd6a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23575)[0m     @     0x7f52bd6a8b53 at::TensorIterator::for_each()
[2m[36m(pid=23562)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23562)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23562)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23562)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23562)[0m *** SIGSEGV (@0x0) received by PID 23562 (TID 0x7f9a1ab8f700) from PID 0; stack trace: ***
[2m[36m(pid=23562)[0m     @     0x7f9a1a768390 (unknown)
[2m[36m(pid=23562)[0m     @     0x7f6b1c770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23562)[0m     @     0x7f6b19a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23562)[0m     @     0x7f6b19a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23587)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23587)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23587)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23587)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23587)[0m *** SIGSEGV (@0x0) received by PID 23587 (TID 0x7f37c290f700) from PID 0; stack trace: ***
[2m[36m(pid=23587)[0m     @     0x7f37c24e8390 (unknown)
[2m[36m(pid=23587)[0m     @     0x7f08c46e6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23587)[0m     @     0x7f08c19da64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23587)[0m     @     0x7f08c19dd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23513)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23513)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23513)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23513)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23513)[0m *** SIGSEGV (@0x0) received by PID 23513 (TID 0x7f8d09c66700) from PID 0; stack trace: ***
[2m[36m(pid=23513)[0m     @     0x7f8d0983f390 (unknown)
[2m[36m(pid=23513)[0m     @     0x7f5e0b96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23513)[0m     @     0x7f5e08c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23602)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23602)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23602)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23602)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23602)[0m *** SIGSEGV (@0x0) received by PID 23602 (TID 0x7fc98154a700) from PID 0; stack trace: ***
[2m[36m(pid=23602)[0m     @     0x7fc981123390 (unknown)
[2m[36m(pid=23602)[0m     @     0x7f9a8332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23602)[0m     @     0x7f9a8062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23602)[0m     @     0x7f9a80623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23495)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23495)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23495)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23495)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23495)[0m *** SIGSEGV (@0x0) received by PID 23495 (TID 0x7f11f5e47700) from PID 0; stack trace: ***
[2m[36m(pid=23495)[0m     @     0x7f11f5a20390 (unknown)
[2m[36m(pid=23495)[0m     @     0x7ee2f7bf0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23495)[0m     @     0x7ee2f4ee464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23597)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23597)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23597)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23597)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23597)[0m *** SIGSEGV (@0x0) received by PID 23597 (TID 0x7f7b24051700) from PID 0; stack trace: ***
[2m[36m(pid=23597)[0m     @     0x7f7b23c2a390 (unknown)
[2m[36m(pid=23597)[0m     @     0x7f4c25d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23597)[0m     @     0x7f4c2306064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23597)[0m     @     0x7f4c23063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23624)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23624)[0m *** SIGSEGV (@0x0) received by PID 23624 (TID 0x7fa051cd2700) from PID 0; stack trace: ***
[2m[36m(pid=23624)[0m     @     0x7fa0518ab390 (unknown)
[2m[36m(pid=23624)[0m     @     0x7f7153a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23624)[0m     @     0x7f7150d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23624)[0m     @     0x7f7150d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23506)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23506)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23506)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23506)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23506)[0m *** SIGSEGV (@0x0) received by PID 23506 (TID 0x7fdac1061700) from PID 0; stack trace: ***
[2m[36m(pid=23506)[0m     @     0x7fdac0c3a390 (unknown)
[2m[36m(pid=23506)[0m     @     0x7fabc2db2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23537)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23537)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23537)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23537)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23537)[0m *** SIGSEGV (@0x0) received by PID 23537 (TID 0x7fa5e7809700) from PID 0; stack trace: ***
[2m[36m(pid=23537)[0m     @     0x7fa5e73e2390 (unknown)
[2m[36m(pid=23537)[0m     @     0x7f76e94a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23537)[0m     @     0x7f76e679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23537)[0m     @     0x7f76e6797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23537)[0m     @     0x7f76e6797b53 at::TensorIterator::for_each()
[2m[36m(pid=23568)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23568)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23568)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23568)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23568)[0m *** SIGSEGV (@0x0) received by PID 23568 (TID 0x7fbe2ed4e700) from PID 0; stack trace: ***
[2m[36m(pid=23568)[0m     @     0x7fbe2e927390 (unknown)
[2m[36m(pid=23568)[0m     @     0x7f8f30981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23568)[0m     @     0x7f8f2dc7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23568)[0m     @     0x7f8f2dc78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23570)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23570)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23570)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23570)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23570)[0m *** SIGSEGV (@0x0) received by PID 23570 (TID 0x7effd8f5b700) from PID 0; stack trace: ***
[2m[36m(pid=23570)[0m     @     0x7effd8b34390 (unknown)
[2m[36m(pid=23570)[0m     @     0x7ed0dac5ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23570)[0m     @     0x7ed0d7f5364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23570)[0m     @     0x7ed0d7f56977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23570)[0m     @     0x7ed0d7f56b53 at::TensorIterator::for_each()
[2m[36m(pid=23578)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23578)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23578)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23578)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23578)[0m *** SIGSEGV (@0x0) received by PID 23578 (TID 0x7fbc2cab9700) from PID 0; stack trace: ***
[2m[36m(pid=23578)[0m     @     0x7fbc2c692390 (unknown)
[2m[36m(pid=23578)[0m     @     0x7f8d2e885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23578)[0m     @     0x7f8d2bb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23578)[0m     @     0x7f8d2bb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23613)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23613)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23613)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23613)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23613)[0m *** SIGSEGV (@0x0) received by PID 23613 (TID 0x7f593041e700) from PID 0; stack trace: ***
[2m[36m(pid=23613)[0m     @     0x7f592fff7390 (unknown)
[2m[36m(pid=23613)[0m     @     0x7f2a32082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23613)[0m     @     0x7f2a2f37664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23613)[0m     @     0x7f2a2f379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23608)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23608)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23608)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23608)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23608)[0m *** SIGSEGV (@0x0) received by PID 23608 (TID 0x7f48aaaf2700) from PID 0; stack trace: ***
[2m[36m(pid=23608)[0m     @     0x7f48aa6cb390 (unknown)
[2m[36m(pid=23608)[0m     @     0x7f19ac770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23608)[0m     @     0x7f19a9a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23492)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23492)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23492)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23492)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23492)[0m *** SIGSEGV (@0x0) received by PID 23492 (TID 0x7fafb8c27700) from PID 0; stack trace: ***
[2m[36m(pid=23492)[0m     @     0x7fafb8800390 (unknown)
[2m[36m(pid=23492)[0m     @     0x7f80ba9c3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23514)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23514)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23514)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23514)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23514)[0m *** SIGSEGV (@0x0) received by PID 23514 (TID 0x7fb4d5b3f700) from PID 0; stack trace: ***
[2m[36m(pid=23514)[0m     @     0x7fb4d5718390 (unknown)
[2m[36m(pid=23514)[0m     @     0x7f85d792bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23615)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23615)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23615)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23615)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23615)[0m *** SIGSEGV (@0x0) received by PID 23615 (TID 0x7fb65a2ae700) from PID 0; stack trace: ***
[2m[36m(pid=23615)[0m     @     0x7fb659e87390 (unknown)
[2m[36m(pid=23615)[0m     @     0x7f875c06efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23615)[0m     @     0x7f875936264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23615)[0m     @     0x7f8759365977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23565)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23565)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23565)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23565)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23565)[0m *** SIGSEGV (@0x0) received by PID 23565 (TID 0x7f7defbf6700) from PID 0; stack trace: ***
[2m[36m(pid=23565)[0m     @     0x7f7def7cf390 (unknown)
[2m[36m(pid=23565)[0m     @     0x7f4ef1896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23565)[0m     @     0x7f4eeeb8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23565)[0m     @     0x7f4eeeb8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23593)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23593)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23593)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23593)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23593)[0m *** SIGSEGV (@0x0) received by PID 23593 (TID 0x7f65cd9d9700) from PID 0; stack trace: ***
[2m[36m(pid=23593)[0m     @     0x7f65cd5b2390 (unknown)
[2m[36m(pid=23593)[0m     @     0x7f36cf75afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23593)[0m     @     0x7f36cca4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23593)[0m     @     0x7f36cca51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23573)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23573)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23573)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23573)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23573)[0m *** SIGSEGV (@0x0) received by PID 23573 (TID 0x7f3ce4dd7700) from PID 0; stack trace: ***
[2m[36m(pid=23573)[0m     @     0x7f3ce49b0390 (unknown)
[2m[36m(pid=23573)[0m     @     0x7f0de6a9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23573)[0m     @     0x7f0de3d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23573)[0m     @     0x7f0de3d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23546)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23546)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23546)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23546)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23546)[0m *** SIGSEGV (@0x0) received by PID 23546 (TID 0x7f60638e2700) from PID 0; stack trace: ***
[2m[36m(pid=23546)[0m     @     0x7f60634bb390 (unknown)
[2m[36m(pid=23546)[0m     @     0x7f31654a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23546)[0m     @     0x7f316279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23497)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23497)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23497)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23497)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23497)[0m *** SIGSEGV (@0x0) received by PID 23497 (TID 0x7fda043d9700) from PID 0; stack trace: ***
[2m[36m(pid=23497)[0m     @     0x7fda03fb2390 (unknown)
[2m[36m(pid=23497)[0m     @     0x7fab0612dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23497)[0m     @     0x7fab0342164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23497)[0m     @     0x7fab03424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23576)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23576)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23576)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23576)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23576)[0m *** SIGSEGV (@0x0) received by PID 23576 (TID 0x7f8f2f020700) from PID 0; stack trace: ***
[2m[36m(pid=23576)[0m     @     0x7f8f2ebf9390 (unknown)
[2m[36m(pid=23576)[0m     @     0x7f6030c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23576)[0m     @     0x7f602df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23576)[0m     @     0x7f602df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23576)[0m     @     0x7f602df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=23576)[0m     @     0x7f602df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=23491)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23491)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23491)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23491)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23491)[0m *** SIGSEGV (@0x0) received by PID 23491 (TID 0x7fe32bf0d700) from PID 0; stack trace: ***
[2m[36m(pid=23491)[0m     @     0x7fe32bae6390 (unknown)
[2m[36m(pid=23491)[0m     @     0x7fb42db77fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23491)[0m     @     0x7fb42ae6b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23548)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23548)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23548)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23548)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23548)[0m *** SIGSEGV (@0x0) received by PID 23548 (TID 0x7f17101b2700) from PID 0; stack trace: ***
[2m[36m(pid=23548)[0m     @     0x7f170fd8b390 (unknown)
[2m[36m(pid=23548)[0m     @     0x7ee811f9dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23548)[0m     @     0x7ee80f29164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23499)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23499)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23499)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23499)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23499)[0m *** SIGSEGV (@0x0) received by PID 23499 (TID 0x7f9c1f1aa700) from PID 0; stack trace: ***
[2m[36m(pid=23499)[0m     @     0x7f9c1ed83390 (unknown)
[2m[36m(pid=23499)[0m     @     0x7f6d20f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23499)[0m     @     0x7f6d1e26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23510)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23510)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23510)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23510)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23510)[0m *** SIGSEGV (@0x0) received by PID 23510 (TID 0x7f4e6f1c5700) from PID 0; stack trace: ***
[2m[36m(pid=23510)[0m     @     0x7f4e6ed9e390 (unknown)
[2m[36m(pid=23510)[0m     @     0x7f1f70f59fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23510)[0m     @     0x7f1f6e24d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23623)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23623)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23623)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23623)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23623)[0m *** SIGSEGV (@0x0) received by PID 23623 (TID 0x7f463b5f7700) from PID 0; stack trace: ***
[2m[36m(pid=23623)[0m     @     0x7f463b1d0390 (unknown)
[2m[36m(pid=23623)[0m     @     0x7f173d39bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23623)[0m     @     0x7f173a68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23623)[0m     @     0x7f173a692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23523)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23523)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23523)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23523)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23523)[0m *** SIGSEGV (@0x0) received by PID 23523 (TID 0x7fe878da0700) from PID 0; stack trace: ***
[2m[36m(pid=23523)[0m     @     0x7fe878979390 (unknown)
[2m[36m(pid=23523)[0m     @     0x7fb97aba7fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23523)[0m     @     0x7fb977e9b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23488)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23488)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23488)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23488)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23488)[0m *** SIGSEGV (@0x0) received by PID 23488 (TID 0x7f9941319700) from PID 0; stack trace: ***
[2m[36m(pid=23488)[0m     @     0x7f9940ef2390 (unknown)
[2m[36m(pid=23488)[0m     @     0x7f6a430f6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23488)[0m     @     0x7f6a403ea64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23488)[0m     @     0x7f6a403ed977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23505)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23505)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23505)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23505)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23505)[0m *** SIGSEGV (@0x0) received by PID 23505 (TID 0x7fc6ad7f3700) from PID 0; stack trace: ***
[2m[36m(pid=23505)[0m     @     0x7fc6ad3cc390 (unknown)
[2m[36m(pid=23505)[0m     @     0x7f97af5d6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23505)[0m     @     0x7f97ac8ca64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23496)[0m     @     0x7f68f009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23496)[0m     @     0x7f68ed38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23496)[0m     @     0x7f68ed392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23581)[0m     @     0x7eed60c22977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23581)[0m     @     0x7eed60c22b53 at::TensorIterator::for_each()
[2m[36m(pid=23490)[0m     @     0x7fa6b219264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23490)[0m     @     0x7fa6b2195977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23490)[0m     @     0x7fa6b2195b53 at::TensorIterator::for_each()
[2m[36m(pid=23577)[0m     @     0x7f65f138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23577)[0m     @     0x7f65f1392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23577)[0m     @     0x7f65f1392b53 at::TensorIterator::for_each()
[2m[36m(pid=23577)[0m     @     0x7f65f1392e11 at::TensorIterator::for_each()
[2m[36m(pid=23606)[0m     @     0x7f8a5809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23606)[0m     @     0x7f8a5538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23606)[0m     @     0x7f8a55392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23503)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23503)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23503)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23605)[0m     @     0x7fbb77ce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23605)[0m     @     0x7fbb77ce2b53 at::TensorIterator::for_each()
[2m[36m(pid=23605)[0m     @     0x7fbb77ce2e11 at::TensorIterator::for_each()
[2m[36m(pid=23605)[0m     @     0x7fbb7a9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23500)[0m     @     0x7f8b8f643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23500)[0m     @     0x7f8b8c93764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23500)[0m     @     0x7f8b8c93a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23494)[0m     @     0x7f5c6ad1364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23494)[0m     @     0x7f5c6ad16977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23494)[0m     @     0x7f5c6ad16b53 at::TensorIterator::for_each()
[2m[36m(pid=23489)[0m     @     0x7faef6cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23489)[0m     @     0x7faef6cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23489)[0m     @     0x7faef6cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=23611)[0m     @     0x7ef612797b53 at::TensorIterator::for_each()
[2m[36m(pid=23611)[0m     @     0x7ef612797e11 at::TensorIterator::for_each()
[2m[36m(pid=23611)[0m     @     0x7ef6154b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23611)[0m     @     0x7ef6154d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23611)[0m     @     0x7ef612511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23611)[0m     @     0x7ef61250fc3f at::native::copy_impl()
[2m[36m(pid=23612)[0m     @     0x7f2ee917be11 at::TensorIterator::for_each()
[2m[36m(pid=23612)[0m     @     0x7f2eebe94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23612)[0m     @     0x7f2eebeb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23612)[0m     @     0x7f2ee8ef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23612)[0m     @     0x7f2ee8ef3c3f at::native::copy_impl()
[2m[36m(pid=23571)[0m     @     0x7effbcd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23571)[0m     @     0x7effbcd67b53 at::TensorIterator::for_each()
[2m[36m(pid=23609)[0m     @     0x7f5df3f56e11 at::TensorIterator::for_each()
[2m[36m(pid=23609)[0m     @     0x7f5df6c6fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23609)[0m     @     0x7f5df6c92cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23609)[0m     @     0x7f5df3cd0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23609)[0m     @     0x7f5df3ccec3f at::native::copy_impl()
[2m[36m(pid=23572)[0m     @     0x7fb8ef8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=23572)[0m     @     0x7fb8ef8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=23572)[0m     @     0x7fb8f25bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23572)[0m     @     0x7fb8f25ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23572)[0m     @     0x7fb8ef61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23604)[0m     @     0x7f48ecd67e11 at::TensorIterator::for_each()
[2m[36m(pid=23604)[0m     @     0x7f48efa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23604)[0m     @     0x7f48efaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23604)[0m     @     0x7f48ecae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23604)[0m     @     0x7f48ecadfc3f at::native::copy_impl()
[2m[36m(pid=23575)[0m     @     0x7f52bd6a8e11 at::TensorIterator::for_each()
[2m[36m(pid=23575)[0m     @     0x7f52c03c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23575)[0m     @     0x7f52c03e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23575)[0m     @     0x7f52bd422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23575)[0m     @     0x7f52bd420c3f at::native::copy_impl()
[2m[36m(pid=23562)[0m     @     0x7f6b19a67b53 at::TensorIterator::for_each()
[2m[36m(pid=23562)[0m     @     0x7f6b19a67e11 at::TensorIterator::for_each()
[2m[36m(pid=23562)[0m     @     0x7f6b1c780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23562)[0m     @     0x7f6b1c7a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23562)[0m     @     0x7f6b197e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23587)[0m     @     0x7f08c19ddb53 at::TensorIterator::for_each()
[2m[36m(pid=23587)[0m     @     0x7f08c19dde11 at::TensorIterator::for_each()
[2m[36m(pid=23587)[0m     @     0x7f08c46f6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23587)[0m     @     0x7f08c4719cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23587)[0m     @     0x7f08c1757009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23587)[0m     @     0x7f08c1755c3f at::native::copy_impl()
[2m[36m(pid=23513)[0m     @     0x7f5e08c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23513)[0m     @     0x7f5e08c62b53 at::TensorIterator::for_each()
[2m[36m(pid=23513)[0m     @     0x7f5e08c62e11 at::TensorIterator::for_each()
[2m[36m(pid=23513)[0m     @     0x7f5e0b97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23513)[0m     @     0x7f5e0b99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23602)[0m     @     0x7f9a80623b53 at::TensorIterator::for_each()
[2m[36m(pid=23602)[0m     @     0x7f9a80623e11 at::TensorIterator::for_each()
[2m[36m(pid=23602)[0m     @     0x7f9a8333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23602)[0m     @     0x7f9a8335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23495)[0m     @     0x7ee2f4ee7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23495)[0m     @     0x7ee2f4ee7b53 at::TensorIterator::for_each()
[2m[36m(pid=23597)[0m     @     0x7f4c23063b53 at::TensorIterator::for_each()
[2m[36m(pid=23597)[0m     @     0x7f4c23063e11 at::TensorIterator::for_each()
[2m[36m(pid=23597)[0m     @     0x7f4c25d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23597)[0m     @     0x7f4c25d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23597)[0m     @     0x7f4c22ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23624)[0m     @     0x7f7150d67b53 at::TensorIterator::for_each()
[2m[36m(pid=23624)[0m     @     0x7f7150d67e11 at::TensorIterator::for_each()
[2m[36m(pid=23624)[0m     @     0x7f7153a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23624)[0m     @     0x7f7153aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23624)[0m     @     0x7f7150ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23624)[0m     @     0x7f7150adfc3f at::native::copy_impl()
[2m[36m(pid=23506)[0m     @     0x7fabc00a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23506)[0m     @     0x7fabc00a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23506)[0m     @     0x7fabc00a9b53 at::TensorIterator::for_each()
[2m[36m(pid=23537)[0m     @     0x7f76e6797e11 at::TensorIterator::for_each()
[2m[36m(pid=23537)[0m     @     0x7f76e94b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23537)[0m     @     0x7f76e94d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23537)[0m     @     0x7f76e6511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23537)[0m     @     0x7f76e650fc3f at::native::copy_impl()
[2m[36m(pid=23568)[0m     @     0x7f8f2dc78b53 at::TensorIterator::for_each()
[2m[36m(pid=23568)[0m     @     0x7f8f2dc78e11 at::TensorIterator::for_each()
[2m[36m(pid=23570)[0m     @     0x7ed0d7f56e11 at::TensorIterator::for_each()
[2m[36m(pid=23570)[0m     @     0x7ed0dac6fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23570)[0m     @     0x7ed0dac92cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23570)[0m     @     0x7ed0d7cd0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23570)[0m     @     0x7ed0d7ccec3f at::native::copy_impl()
[2m[36m(pid=23578)[0m     @     0x7f8d2bb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=23578)[0m     @     0x7f8d2bb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=23578)[0m     @     0x7f8d2e895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23578)[0m     @     0x7f8d2e8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23578)[0m     @     0x7f8d2b8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23578)[0m     @     0x7f8d2b8f4c3f at::native::copy_impl()
[2m[36m(pid=23613)[0m     @     0x7f2a2f379b53 at::TensorIterator::for_each()
[2m[36m(pid=23613)[0m     @     0x7f2a2f379e11 at::TensorIterator::for_each()
[2m[36m(pid=23613)[0m     @     0x7f2a32092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23613)[0m     @     0x7f2a320b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23608)[0m     @     0x7f19a9a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23608)[0m     @     0x7f19a9a67b53 at::TensorIterator::for_each()
[2m[36m(pid=23492)[0m     @     0x7f80b7cb764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23492)[0m     @     0x7f80b7cba977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23492)[0m     @     0x7f80b7cbab53 at::TensorIterator::for_each()
[2m[36m(pid=23514)[0m     @     0x7f85d4c1f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23514)[0m     @     0x7f85d4c22977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23514)[0m     @     0x7f85d4c22b53 at::TensorIterator::for_each()
[2m[36m(pid=23615)[0m     @     0x7f8759365b53 at::TensorIterator::for_each()
[2m[36m(pid=23615)[0m     @     0x7f8759365e11 at::TensorIterator::for_each()
[2m[36m(pid=23615)[0m     @     0x7f875c07ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23615)[0m     @     0x7f875c0a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23615)[0m     @     0x7f87590df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23615)[0m     @     0x7f87590ddc3f at::native::copy_impl()
[2m[36m(pid=23565)[0m     @     0x7f4eeeb8db53 at::TensorIterator::for_each()
[2m[36m(pid=23565)[0m     @     0x7f4eeeb8de11 at::TensorIterator::for_each()
[2m[36m(pid=23565)[0m     @     0x7f4ef18a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23565)[0m     @     0x7f4ef18c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23565)[0m     @     0x7f4eee907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23565)[0m     @     0x7f4eee905c3f at::native::copy_impl()
[2m[36m(pid=23593)[0m     @     0x7f36cca51b53 at::TensorIterator::for_each()
[2m[36m(pid=23593)[0m     @     0x7f36cca51e11 at::TensorIterator::for_each()
[2m[36m(pid=23593)[0m     @     0x7f36cf76ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23593)[0m     @     0x7f36cf78dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23593)[0m     @     0x7f36cc7cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23573)[0m     @     0x7f0de3d93b53 at::TensorIterator::for_each()
[2m[36m(pid=23573)[0m     @     0x7f0de3d93e11 at::TensorIterator::for_each()
[2m[36m(pid=23573)[0m     @     0x7f0de6aacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23573)[0m     @     0x7f0de6acfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23573)[0m     @     0x7f0de3b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23573)[0m     @     0x7f0de3b0bc3f at::native::copy_impl()
[2m[36m(pid=23546)[0m     @     0x7f3162797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23546)[0m     @     0x7f3162797b53 at::TensorIterator::for_each()
[2m[36m(pid=23497)[0m     @     0x7fab03424b53 at::TensorIterator::for_each()
[2m[36m(pid=23576)[0m     @     0x7f6030ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23576)[0m     @     0x7f6030ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23576)[0m     @     0x7f602dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23576)[0m     @     0x7f602dd07c3f at::native::copy_impl()
[2m[36m(pid=23491)[0m     @     0x7fb42ae6e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23491)[0m     @     0x7fb42ae6eb53 at::TensorIterator::for_each()
[2m[36m(pid=23548)[0m     @     0x7ee80f294977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23548)[0m     @     0x7ee80f294b53 at::TensorIterator::for_each()
[2m[36m(pid=23499)[0m     @     0x7f6d1e26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23499)[0m     @     0x7f6d1e26ab53 at::TensorIterator::for_each()
[2m[36m(pid=23599)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23599)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23599)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23510)[0m     @     0x7f1f6e250977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23510)[0m     @     0x7f1f6e250b53 at::TensorIterator::for_each()
[2m[36m(pid=23504)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23504)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23504)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23623)[0m     @     0x7f173a692b53 at::TensorIterator::for_each()
[2m[36m(pid=23623)[0m     @     0x7f173a692e11 at::TensorIterator::for_each()
[2m[36m(pid=23623)[0m     @     0x7f173d3abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23623)[0m     @     0x7f173d3cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23502)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23502)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23502)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23502)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23502)[0m *** SIGSEGV (@0x0) received by PID 23502 (TID 0x7f8ad2da2700) from PID 0; stack trace: ***
[2m[36m(pid=23550)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23550)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23550)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23550)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23550)[0m *** SIGSEGV (@0x0) received by PID 23550 (TID 0x7f2922173700) from PID 0; stack trace: ***
[2m[36m(pid=23523)[0m     @     0x7fb977e9e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23523)[0m     @     0x7fb977e9eb53 at::TensorIterator::for_each()
[2m[36m(pid=23523)[0m     @     0x7fb977e9ee11 at::TensorIterator::for_each()
[2m[36m(pid=23488)[0m     @     0x7f6a403edb53 at::TensorIterator::for_each()
[2m[36m(pid=23488)[0m     @     0x7f6a403ede11 at::TensorIterator::for_each()
[2m[36m(pid=23488)[0m     @     0x7f6a43106c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23545)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23545)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23545)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23505)[0m     @     0x7f97ac8cd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23505)[0m     @     0x7f97ac8cdb53 at::TensorIterator::for_each()
[2m[36m(pid=23505)[0m     @     0x7f97ac8cde11 at::TensorIterator::for_each()
[2m[36m(pid=23557)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23557)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23557)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23557)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23557)[0m *** SIGSEGV (@0x0) received by PID 23557 (TID 0x7fa6e1461700) from PID 0; stack trace: ***
[2m[36m(pid=23584)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23584)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23584)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23584)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23584)[0m *** SIGSEGV (@0x0) received by PID 23584 (TID 0x7fd94a1b8700) from PID 0; stack trace: ***
[2m[36m(pid=23579)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23579)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23579)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23579)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23579)[0m *** SIGSEGV (@0x0) received by PID 23579 (TID 0x7faf90498700) from PID 0; stack trace: ***
[2m[36m(pid=23579)[0m     @     0x7faf90071390 (unknown)
[2m[36m(pid=23618)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23618)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23618)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23618)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23618)[0m *** SIGSEGV (@0x0) received by PID 23618 (TID 0x7fe0290e6700) from PID 0; stack trace: ***
[2m[36m(pid=23511)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23511)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23511)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23511)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23511)[0m *** SIGSEGV (@0x0) received by PID 23511 (TID 0x7f825732b700) from PID 0; stack trace: ***
[2m[36m(pid=23534)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23534)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23534)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23534)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23534)[0m *** SIGSEGV (@0x0) received by PID 23534 (TID 0x7f48b791e700) from PID 0; stack trace: ***
[2m[36m(pid=23554)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23554)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23554)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23554)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23554)[0m *** SIGSEGV (@0x0) received by PID 23554 (TID 0x7f0bda7f8700) from PID 0; stack trace: ***
[2m[36m(pid=23554)[0m     @     0x7f0bda3d1390 (unknown)
[2m[36m(pid=23496)[0m     @     0x7f68ed392b53 at::TensorIterator::for_each()
[2m[36m(pid=23496)[0m     @     0x7f68ed392e11 at::TensorIterator::for_each()
[2m[36m(pid=23496)[0m     @     0x7f68f00abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23560)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23560)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23560)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23560)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23560)[0m *** SIGSEGV (@0x0) received by PID 23560 (TID 0x7f224b52f700) from PID 0; stack trace: ***
[2m[36m(pid=23560)[0m     @     0x7f224b108390 (unknown)
[2m[36m(pid=23560)[0m     @     0x7ef34d309fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23581)[0m     @     0x7eed60c22e11 at::TensorIterator::for_each()
[2m[36m(pid=23581)[0m     @     0x7eed6393bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23581)[0m     @     0x7eed6395ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23581)[0m     @     0x7eed6099c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23581)[0m     @     0x7eed6099ac3f at::native::copy_impl()
[2m[36m(pid=23490)[0m     @     0x7fa6b2195e11 at::TensorIterator::for_each()
[2m[36m(pid=23490)[0m     @     0x7fa6b4eaec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23490)[0m     @     0x7fa6b4ed1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23490)[0m     @     0x7fa6b1f0f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23589)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23589)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23589)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23589)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23589)[0m *** SIGSEGV (@0x0) received by PID 23589 (TID 0x7f245984f700) from PID 0; stack trace: ***
[2m[36m(pid=23577)[0m     @     0x7f65f40abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23577)[0m     @     0x7f65f40cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23577)[0m     @     0x7f65f110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23577)[0m     @     0x7f65f110ac3f at::native::copy_impl()
[2m[36m(pid=23606)[0m     @     0x7f8a55392b53 at::TensorIterator::for_each()
[2m[36m(pid=23606)[0m     @     0x7f8a55392e11 at::TensorIterator::for_each()
[2m[36m(pid=23503)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23503)[0m *** SIGSEGV (@0x0) received by PID 23503 (TID 0x7f15e1855700) from PID 0; stack trace: ***
[2m[36m(pid=23503)[0m     @     0x7f15e142e390 (unknown)
[2m[36m(pid=23503)[0m     @     0x7ee6e3643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23605)[0m     @     0x7fbb7aa1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23605)[0m     @     0x7fbb77a5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23605)[0m     @     0x7fbb77a5ac3f at::native::copy_impl()
[2m[36m(pid=23500)[0m     @     0x7f8b8c93ab53 at::TensorIterator::for_each()
[2m[36m(pid=23500)[0m     @     0x7f8b8c93ae11 at::TensorIterator::for_each()
[2m[36m(pid=23494)[0m     @     0x7f5c6ad16e11 at::TensorIterator::for_each()
[2m[36m(pid=23494)[0m     @     0x7f5c6da2fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23494)[0m     @     0x7f5c6da52cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23553)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23553)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23553)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23553)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23553)[0m *** SIGSEGV (@0x0) received by PID 23553 (TID 0x7f7bd856a700) from PID 0; stack trace: ***
[2m[36m(pid=23553)[0m     @     0x7f7bd8143390 (unknown)
[2m[36m(pid=23489)[0m     @     0x7faef6cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=23489)[0m     @     0x7faef99d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23489)[0m     @     0x7faef99fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23611)[0m     @     0x7ef612510ed4 at::native::copy_()
[2m[36m(pid=23611)[0m     @     0x7ef612c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23520)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23520)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23520)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23520)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23520)[0m *** SIGSEGV (@0x0) received by PID 23520 (TID 0x7f1fba24a700) from PID 0; stack trace: ***
[2m[36m(pid=23541)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23541)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23541)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23512)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23512)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23512)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23512)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23509)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23509)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23509)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23509)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23509)[0m *** SIGSEGV (@0x0) received by PID 23509 (TID 0x7fdef155e700) from PID 0; stack trace: ***
[2m[36m(pid=23501)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23501)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23501)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23501)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23501)[0m *** SIGSEGV (@0x0) received by PID 23501 (TID 0x7f3682c4f700) from PID 0; stack trace: ***
[2m[36m(pid=23501)[0m     @     0x7f3682828390 (unknown)
[2m[36m(pid=23612)[0m     @     0x7f2ee8ef4ed4 at::native::copy_()
[2m[36m(pid=23612)[0m     @     0x7f2ee96375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23571)[0m     @     0x7effbcd67e11 at::TensorIterator::for_each()
[2m[36m(pid=23571)[0m     @     0x7effbfa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23571)[0m     @     0x7effbfaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23609)[0m     @     0x7f5df3ccfed4 at::native::copy_()
[2m[36m(pid=23609)[0m     @     0x7f5df44125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23572)[0m     @     0x7fb8ef619c3f at::native::copy_impl()
[2m[36m(pid=23572)[0m     @     0x7fb8ef61aed4 at::native::copy_()
[2m[36m(pid=23604)[0m     @     0x7f48ecae0ed4 at::native::copy_()
[2m[36m(pid=23604)[0m     @     0x7f48ed2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23575)[0m     @     0x7f52bd421ed4 at::native::copy_()
[2m[36m(pid=23575)[0m     @     0x7f52bdb645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23562)[0m     @     0x7f6b197dfc3f at::native::copy_impl()
[2m[36m(pid=23562)[0m     @     0x7f6b197e0ed4 at::native::copy_()
[2m[36m(pid=23587)[0m     @     0x7f08c1756ed4 at::native::copy_()
[2m[36m(pid=23513)[0m     @     0x7f5e089dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23513)[0m     @     0x7f5e089dac3f at::native::copy_impl()
[2m[36m(pid=23513)[0m     @     0x7f5e089dbed4 at::native::copy_()
[2m[36m(pid=23513)[0m     @     0x7f5e0911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23602)[0m     @     0x7f9a8039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23602)[0m     @     0x7f9a8039bc3f at::native::copy_impl()
[2m[36m(pid=23602)[0m     @     0x7f9a8039ced4 at::native::copy_()
[2m[36m(pid=23602)[0m     @     0x7f9a80adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23495)[0m     @     0x7ee2f4ee7e11 at::TensorIterator::for_each()
[2m[36m(pid=23495)[0m     @     0x7ee2f7c00c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23495)[0m     @     0x7ee2f7c23cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23495)[0m     @     0x7ee2f4c61009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23495)[0m     @     0x7ee2f4c5fc3f at::native::copy_impl()
[2m[36m(pid=23597)[0m     @     0x7f4c22ddbc3f at::native::copy_impl()
[2m[36m(pid=23597)[0m     @     0x7f4c22ddced4 at::native::copy_()
[2m[36m(pid=23597)[0m     @     0x7f4c2351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23597)[0m     @     0x7f4c23627148 at::Tensor::copy_()
[2m[36m(pid=23624)[0m     @     0x7f7150ae0ed4 at::native::copy_()
[2m[36m(pid=23624)[0m     @     0x7f71512235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23624)[0m     @     0x7f715132b148 at::Tensor::copy_()
[2m[36m(pid=23506)[0m     @     0x7fabc00a9e11 at::TensorIterator::for_each()
[2m[36m(pid=23506)[0m     @     0x7fabc2dc2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23506)[0m     @     0x7fabc2de5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23506)[0m     @     0x7fabbfe23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23506)[0m     @     0x7fabbfe21c3f at::native::copy_impl()
[2m[36m(pid=23537)[0m     @     0x7f76e6510ed4 at::native::copy_()
[2m[36m(pid=23537)[0m     @     0x7f76e6c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23537)[0m     @     0x7f76e6d5b148 at::Tensor::copy_()
[2m[36m(pid=23568)[0m     @     0x7f8f30991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23568)[0m     @     0x7f8f309b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23568)[0m     @     0x7f8f2d9f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23568)[0m     @     0x7f8f2d9f0c3f at::native::copy_impl()
[2m[36m(pid=23568)[0m     @     0x7f8f2d9f1ed4 at::native::copy_()
[2m[36m(pid=23570)[0m     @     0x7ed0d7ccfed4 at::native::copy_()
[2m[36m(pid=23570)[0m     @     0x7ed0d84125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23570)[0m     @     0x7ed0d851a148 at::Tensor::copy_()
[2m[36m(pid=23570)[0m     @     0x7ed0da111989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23578)[0m     @     0x7f8d2b8f5ed4 at::native::copy_()
[2m[36m(pid=23578)[0m     @     0x7f8d2c0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23578)[0m     @     0x7f8d2c140148 at::Tensor::copy_()
[2m[36m(pid=23613)[0m     @     0x7f2a2f0f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23613)[0m     @     0x7f2a2f0f1c3f at::native::copy_impl()
[2m[36m(pid=23613)[0m     @     0x7f2a2f0f2ed4 at::native::copy_()
[2m[36m(pid=23613)[0m     @     0x7f2a2f8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23608)[0m     @     0x7f19a9a67e11 at::TensorIterator::for_each()
[2m[36m(pid=23608)[0m     @     0x7f19ac780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23608)[0m     @     0x7f19ac7a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23608)[0m     @     0x7f19a97e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23608)[0m     @     0x7f19a97dfc3f at::native::copy_impl()
[2m[36m(pid=23492)[0m     @     0x7f80b7cbae11 at::TensorIterator::for_each()
[2m[36m(pid=23492)[0m     @     0x7f80ba9d3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23492)[0m     @     0x7f80ba9f6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23492)[0m     @     0x7f80b7a34009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23492)[0m     @     0x7f80b7a32c3f at::native::copy_impl()
[2m[36m(pid=23514)[0m     @     0x7f85d4c22e11 at::TensorIterator::for_each()
[2m[36m(pid=23514)[0m     @     0x7f85d793bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23514)[0m     @     0x7f85d795ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23514)[0m     @     0x7f85d499c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23514)[0m     @     0x7f85d499ac3f at::native::copy_impl()
[2m[36m(pid=23615)[0m     @     0x7f87590deed4 at::native::copy_()
[2m[36m(pid=23615)[0m     @     0x7f87598215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23615)[0m     @     0x7f8759929148 at::Tensor::copy_()
[2m[36m(pid=23615)[0m     @     0x7f875b520989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23565)[0m     @     0x7f4eee906ed4 at::native::copy_()
[2m[36m(pid=23565)[0m     @     0x7f4eef0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23565)[0m     @     0x7f4eef151148 at::Tensor::copy_()
[2m[36m(pid=23593)[0m     @     0x7f36cc7c9c3f at::native::copy_impl()
[2m[36m(pid=23593)[0m     @     0x7f36cc7caed4 at::native::copy_()
[2m[36m(pid=23593)[0m     @     0x7f36ccf0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23573)[0m     @     0x7f0de3b0ced4 at::native::copy_()
[2m[36m(pid=23573)[0m     @     0x7f0de424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23573)[0m     @     0x7f0de4357148 at::Tensor::copy_()
[2m[36m(pid=23546)[0m     @     0x7f3162797e11 at::TensorIterator::for_each()
[2m[36m(pid=23546)[0m     @     0x7f31654b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23546)[0m     @     0x7f31654d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23546)[0m     @     0x7f3162511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23546)[0m     @     0x7f316250fc3f at::native::copy_impl()
[2m[36m(pid=23497)[0m     @     0x7fab03424e11 at::TensorIterator::for_each()
[2m[36m(pid=23497)[0m     @     0x7fab0613dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23497)[0m     @     0x7fab06160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23497)[0m     @     0x7fab0319e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23497)[0m     @     0x7fab0319cc3f at::native::copy_impl()
[2m[36m(pid=23576)[0m     @     0x7f602dd08ed4 at::native::copy_()
[2m[36m(pid=23576)[0m     @     0x7f602e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23576)[0m     @     0x7f602e553148 at::Tensor::copy_()
[2m[36m(pid=23600)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23600)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23600)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23600)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23600)[0m *** SIGSEGV (@0x0) received by PID 23600 (TID 0x7f170cc8b700) from PID 0; stack trace: ***
[2m[36m(pid=23600)[0m     @     0x7f170c864390 (unknown)
[2m[36m(pid=23600)[0m     @     0x7ee80e9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23600)[0m     @     0x7ee80bcdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23491)[0m     @     0x7fb42ae6ee11 at::TensorIterator::for_each()
[2m[36m(pid=23491)[0m     @     0x7fb42db87c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23491)[0m     @     0x7fb42dbaacfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23491)[0m     @     0x7fb42abe8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23491)[0m     @     0x7fb42abe6c3f at::native::copy_impl()
[2m[36m(pid=23548)[0m     @     0x7ee80f294e11 at::TensorIterator::for_each()
[2m[36m(pid=23548)[0m     @     0x7ee811fadc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23548)[0m     @     0x7ee811fd0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23548)[0m     @     0x7ee80f00e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23548)[0m     @     0x7ee80f00cc3f at::native::copy_impl()
[2m[36m(pid=23499)[0m     @     0x7f6d1e26ae11 at::TensorIterator::for_each()
[2m[36m(pid=23499)[0m     @     0x7f6d20f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23499)[0m     @     0x7f6d20fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23499)[0m     @     0x7f6d1dfe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23499)[0m     @     0x7f6d1dfe2c3f at::native::copy_impl()
[2m[36m(pid=23599)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23599)[0m *** SIGSEGV (@0x0) received by PID 23599 (TID 0x7f19cbf0f700) from PID 0; stack trace: ***
[2m[36m(pid=23599)[0m     @     0x7f19cbae8390 (unknown)
[2m[36m(pid=23599)[0m     @     0x7eeacdcfffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23599)[0m     @     0x7eeacaff364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23540)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23540)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23540)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23515)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23515)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23510)[0m     @     0x7f1f6e250e11 at::TensorIterator::for_each()
[2m[36m(pid=23510)[0m     @     0x7f1f70f69c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23510)[0m     @     0x7f1f70f8ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23510)[0m     @     0x7f1f6dfca009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23510)[0m     @     0x7f1f6dfc8c3f at::native::copy_impl()
[2m[36m(pid=23493)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23493)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23493)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23493)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23493)[0m *** SIGSEGV (@0x0) received by PID 23493 (TID 0x7f634228d700) from PID 0; stack trace: ***
[2m[36m(pid=23539)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23539)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23539)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23539)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23539)[0m *** SIGSEGV (@0x0) received by PID 23539 (TID 0x7febb76a4700) from PID 0; stack trace: ***
[2m[36m(pid=23508)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23508)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23508)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23508)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23508)[0m *** SIGSEGV (@0x0) received by PID 23508 (TID 0x7f205928e700) from PID 0; stack trace: ***
[2m[36m(pid=23508)[0m     @     0x7f2058e67390 (unknown)
[2m[36m(pid=23508)[0m     @     0x7ef15b049fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23508)[0m     @     0x7ef15833d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23516)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23516)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23516)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23516)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23516)[0m *** SIGSEGV (@0x0) received by PID 23516 (TID 0x7f0b578d2700) from PID 0; stack trace: ***
[2m[36m(pid=23574)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23574)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23574)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23574)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23574)[0m *** SIGSEGV (@0x0) received by PID 23574 (TID 0x7f802639c700) from PID 0; stack trace: ***
[2m[36m(pid=23504)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23504)[0m *** SIGSEGV (@0x0) received by PID 23504 (TID 0x7f93f04a1700) from PID 0; stack trace: ***
[2m[36m(pid=23504)[0m     @     0x7f93f007a390 (unknown)
[2m[36m(pid=23504)[0m     @     0x7f64f1fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23504)[0m     @     0x7f64ef29764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23623)[0m     @     0x7f173a40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23623)[0m     @     0x7f173a40ac3f at::native::copy_impl()
[2m[36m(pid=23623)[0m     @     0x7f173a40bed4 at::native::copy_()
[2m[36m(pid=23502)[0m     @     0x7f8ad297b390 (unknown)
[2m[36m(pid=23502)[0m     @     0x7f5bd4b96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23502)[0m     @     0x7f5bd1e8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23502)[0m     @     0x7f5bd1e8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23550)[0m     @     0x7f2921d4c390 (unknown)
[2m[36m(pid=23550)[0m     @     0x7efa23f54fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23550)[0m     @     0x7efa2124864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23550)[0m     @     0x7efa2124b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23523)[0m     @     0x7fb97abb7c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23523)[0m     @     0x7fb97abdacfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23523)[0m     @     0x7fb977c18009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23523)[0m     @     0x7fb977c16c3f at::native::copy_impl()
[2m[36m(pid=23488)[0m     @     0x7f6a43129cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23488)[0m     @     0x7f6a40167009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23488)[0m     @     0x7f6a40165c3f at::native::copy_impl()
[2m[36m(pid=23519)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23519)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23519)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23519)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23519)[0m *** SIGSEGV (@0x0) received by PID 23519 (TID 0x7f06101f3700) from PID 0; stack trace: ***
[2m[36m(pid=23519)[0m     @     0x7f060fdcc390 (unknown)
[2m[36m(pid=23545)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23545)[0m *** SIGSEGV (@0x0) received by PID 23545 (TID 0x7fadd259f700) from PID 0; stack trace: ***
[2m[36m(pid=23545)[0m     @     0x7fadd2178390 (unknown)
[2m[36m(pid=23545)[0m     @     0x7f7ed43b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23545)[0m     @     0x7f7ed16a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23505)[0m     @     0x7f97af5e6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23505)[0m     @     0x7f97af609cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23505)[0m     @     0x7f97ac647009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23505)[0m     @     0x7f97ac645c3f at::native::copy_impl()
[2m[36m(pid=23557)[0m     @     0x7fa6e103a390 (unknown)
[2m[36m(pid=23557)[0m     @     0x7f77e311bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23557)[0m     @     0x7f77e040f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23557)[0m     @     0x7f77e0412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23584)[0m     @     0x7fd949d91390 (unknown)
[2m[36m(pid=23584)[0m     @     0x7faa4bfaefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23584)[0m     @     0x7faa492a264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23579)[0m     @     0x7f8092266fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23579)[0m     @     0x7f808f55a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23579)[0m     @     0x7f808f55d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23566)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23566)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23566)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23566)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23566)[0m *** SIGSEGV (@0x0) received by PID 23566 (TID 0x7fd495d10700) from PID 0; stack trace: ***
[2m[36m(pid=23566)[0m     @     0x7fd4958e9390 (unknown)
[2m[36m(pid=23618)[0m     @     0x7fe028cbf390 (unknown)
[2m[36m(pid=23618)[0m     @     0x7fb12ae48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23618)[0m     @     0x7fb12813c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23618)[0m     @     0x7fb12813f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23511)[0m     @     0x7f8256f04390 (unknown)
[2m[36m(pid=23511)[0m     @     0x7f535910afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23511)[0m     @     0x7f53563fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23511)[0m     @     0x7f5356401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23534)[0m     @     0x7f48b74f7390 (unknown)
[2m[36m(pid=23534)[0m     @     0x7f19b96b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23534)[0m     @     0x7f19b69a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23534)[0m     @     0x7f19b69a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23554)[0m     @     0x7edcdc5c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23554)[0m     @     0x7edcd98b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23496)[0m     @     0x7f68f00cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23496)[0m     @     0x7f68ed10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23496)[0m     @     0x7f68ed10ac3f at::native::copy_impl()
[2m[36m(pid=23496)[0m     @     0x7f68ed10bed4 at::native::copy_()
[2m[36m(pid=23560)[0m     @     0x7ef34a5fd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23560)[0m     @     0x7ef34a600977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23560)[0m     @     0x7ef34a600b53 at::TensorIterator::for_each()
[2m[36m(pid=23581)[0m     @     0x7eed6099bed4 at::native::copy_()
[2m[36m(pid=23581)[0m     @     0x7eed610de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23581)[0m     @     0x7eed611e6148 at::Tensor::copy_()
[2m[36m(pid=23581)[0m     @     0x7eed62ddd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23490)[0m     @     0x7fa6b1f0dc3f at::native::copy_impl()
[2m[36m(pid=23490)[0m     @     0x7fa6b1f0eed4 at::native::copy_()
[2m[36m(pid=23490)[0m     @     0x7fa6b26515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23589)[0m     @     0x7f2459428390 (unknown)
[2m[36m(pid=23589)[0m     @     0x7ef55b616fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23589)[0m     @     0x7ef55890a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23589)[0m     @     0x7ef55890d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23589)[0m     @     0x7ef55890db53 at::TensorIterator::for_each()
[2m[36m(pid=23577)[0m     @     0x7f65f110bed4 at::native::copy_()
[2m[36m(pid=23577)[0m     @     0x7f65f184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23577)[0m     @     0x7f65f1956148 at::Tensor::copy_()
[2m[36m(pid=23606)[0m     @     0x7f8a580abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23606)[0m     @     0x7f8a580cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23606)[0m     @     0x7f8a5510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23606)[0m     @     0x7f8a5510ac3f at::native::copy_impl()
[2m[36m(pid=23606)[0m     @     0x7f8a5510bed4 at::native::copy_()
[2m[36m(pid=23503)[0m     @     0x7ee6e093764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23503)[0m     @     0x7ee6e093a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23503)[0m     @     0x7ee6e093ab53 at::TensorIterator::for_each()
[2m[36m(pid=23605)[0m     @     0x7fbb77a5bed4 at::native::copy_()
[2m[36m(pid=23605)[0m     @     0x7fbb7819e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23605)[0m     @     0x7fbb782a6148 at::Tensor::copy_()
[2m[36m(pid=23605)[0m     @     0x7fbb79e9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23605)[0m     @     0x7fbb7819e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23500)[0m     @     0x7f8b8f653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23500)[0m     @     0x7f8b8f676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23500)[0m     @     0x7f8b8c6b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23500)[0m     @     0x7f8b8c6b2c3f at::native::copy_impl()
[2m[36m(pid=23500)[0m     @     0x7f8b8c6b3ed4 at::native::copy_()
[2m[36m(pid=23494)[0m     @     0x7f5c6aa90009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23494)[0m     @     0x7f5c6aa8ec3f at::native::copy_impl()
[2m[36m(pid=23494)[0m     @     0x7f5c6aa8fed4 at::native::copy_()
[2m[36m(pid=23553)[0m     @     0x7f4cda293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23553)[0m     @     0x7f4cd758764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23489)[0m     @     0x7faef6a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23489)[0m     @     0x7faef6a37c3f at::native::copy_impl()
[2m[36m(pid=23489)[0m     @     0x7faef6a38ed4 at::native::copy_()
[2m[36m(pid=23489)[0m     @     0x7faef717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23611)[0m     @     0x7ef612d5b148 at::Tensor::copy_()
[2m[36m(pid=23611)[0m     @     0x7ef614952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23611)[0m     @     0x7ef612c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23611)[0m     @     0x7ef612d5b148 at::Tensor::copy_()
[2m[36m(pid=23611)[0m     @     0x7ef619011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23611)[0m     @     0x55b90de39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23611)[0m     @     0x55b90dd94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23520)[0m     @     0x7f1fb9e23390 (unknown)
[2m[36m(pid=23520)[0m     @     0x7ef0bc02efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23520)[0m     @     0x7ef0b932264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23520)[0m     @     0x7ef0b9325977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23520)[0m     @     0x7ef0b9325b53 at::TensorIterator::for_each()
[2m[36m(pid=23541)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23541)[0m *** SIGSEGV (@0x0) received by PID 23541 (TID 0x7f41fba9d700) from PID 0; stack trace: ***
[2m[36m(pid=23541)[0m     @     0x7f41fb676390 (unknown)
[2m[36m(pid=23541)[0m     @     0x7f12fd893fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23541)[0m     @     0x7f12fab8764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23541)[0m     @     0x7f12fab8a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23512)[0m *** SIGSEGV (@0x0) received by PID 23512 (TID 0x7fd020222700) from PID 0; stack trace: ***
[2m[36m(pid=23512)[0m     @     0x7fd01fdfb390 (unknown)
[2m[36m(pid=23512)[0m     @     0x7fa12201dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23512)[0m     @     0x7fa11f31164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23512)[0m     @     0x7fa11f314977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23543)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23543)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23543)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23543)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23543)[0m *** SIGSEGV (@0x0) received by PID 23543 (TID 0x7f5d15331700) from PID 0; stack trace: ***
[2m[36m(pid=23543)[0m     @     0x7f5d14f0a390 (unknown)
[2m[36m(pid=23543)[0m     @     0x7f2e1711bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23543)[0m     @     0x7f2e1440f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23509)[0m     @     0x7fdef1137390 (unknown)
[2m[36m(pid=23509)[0m     @     0x7faff332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23509)[0m     @     0x7faff062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23509)[0m     @     0x7faff0623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23501)[0m     @     0x7f0784981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23501)[0m     @     0x7f0781c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23501)[0m     @     0x7f0781c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23501)[0m     @     0x7f0781c78b53 at::TensorIterator::for_each()
[2m[36m(pid=23612)[0m     @     0x7f2ee973f148 at::Tensor::copy_()
[2m[36m(pid=23612)[0m     @     0x7f2eeb336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23612)[0m     @     0x7f2ee96375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23571)[0m     @     0x7effbcae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23571)[0m     @     0x7effbcadfc3f at::native::copy_impl()
[2m[36m(pid=23571)[0m     @     0x7effbcae0ed4 at::native::copy_()
[2m[36m(pid=23571)[0m     @     0x7effbd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23609)[0m     @     0x7f5df451a148 at::Tensor::copy_()
[2m[36m(pid=23609)[0m     @     0x7f5df6111989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23609)[0m     @     0x7f5df44125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23609)[0m     @     0x7f5df451a148 at::Tensor::copy_()
[2m[36m(pid=23572)[0m     @     0x7fb8efd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23572)[0m     @     0x7fb8efe65148 at::Tensor::copy_()
[2m[36m(pid=23572)[0m     @     0x7fb8f1a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23572)[0m     @     0x7fb8efd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23604)[0m     @     0x7f48ed32b148 at::Tensor::copy_()
[2m[36m(pid=23604)[0m     @     0x7f48eef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23604)[0m     @     0x7f48ed2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23604)[0m     @     0x7f48ed32b148 at::Tensor::copy_()
[2m[36m(pid=23575)[0m     @     0x7f52bdc6c148 at::Tensor::copy_()
[2m[36m(pid=23575)[0m     @     0x7f52bf863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23575)[0m     @     0x7f52bdb645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23575)[0m     @     0x7f52bdc6c148 at::Tensor::copy_()
[2m[36m(pid=23562)[0m     @     0x7f6b19f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23562)[0m     @     0x7f6b1a02b148 at::Tensor::copy_()
[2m[36m(pid=23562)[0m     @     0x7f6b1bc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23562)[0m     @     0x7f6b19f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23587)[0m     @     0x7f08c1e995cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23587)[0m     @     0x7f08c1fa1148 at::Tensor::copy_()
[2m[36m(pid=23587)[0m     @     0x7f08c3b98989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23587)[0m     @     0x7f08c1e995cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23513)[0m     @     0x7f5e09226148 at::Tensor::copy_()
[2m[36m(pid=23513)[0m     @     0x7f5e0ae1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23602)[0m     @     0x7f9a80be7148 at::Tensor::copy_()
[2m[36m(pid=23602)[0m     @     0x7f9a827de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23602)[0m     @     0x7f9a80adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23495)[0m     @     0x7ee2f4c60ed4 at::native::copy_()
[2m[36m(pid=23495)[0m     @     0x7ee2f53a35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23597)[0m     @     0x7f4c2521e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23597)[0m     @     0x7f4c2351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23597)[0m     @     0x7f4c23627148 at::Tensor::copy_()
[2m[36m(pid=23597)[0m     @     0x7f4c298ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23624)[0m     @     0x7f7152f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23624)[0m     @     0x7f71512235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23506)[0m     @     0x7fabbfe22ed4 at::native::copy_()
[2m[36m(pid=23506)[0m     @     0x7fabc05655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23537)[0m     @     0x7f76e8952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23537)[0m     @     0x7f76e6c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23568)[0m     @     0x7f8f2e1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23568)[0m     @     0x7f8f2e23c148 at::Tensor::copy_()
[2m[36m(pid=23570)[0m     @     0x7ed0d84125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23570)[0m     @     0x7ed0d851a148 at::Tensor::copy_()
[2m[36m(pid=23570)[0m     @     0x7ed0de7d0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23570)[0m     @     0x5567ceef1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23570)[0m     @     0x5567cee4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23570)[0m     @     0x5567ceed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23570)[0m     @     0x5567ceed8a20 method_vectorcall
[2m[36m(pid=23570)[0m     @     0x5567cee4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23570)[0m     @     0x5567ceed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23570)[0m     @     0x5567ceed8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23570)[0m     @     0x5567cee4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23570)[0m     @     0x5567ceed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23570)[0m     @     0x5567ceed8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23570)[0m     @     0x5567cee4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23570)[0m     @     0x5567ceed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23570)[0m     @     0x5567ceed8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23570)[0m     @     0x5567cee4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23570)[0m     @     0x5567ceed7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23578)[0m     @     0x7f8d2dd37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23578)[0m     @     0x7f8d2c0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23613)[0m     @     0x7f2a2f93d148 at::Tensor::copy_()
[2m[36m(pid=23613)[0m     @     0x7f2a31534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23613)[0m     @     0x7f2a2f8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23608)[0m     @     0x7f19a97e0ed4 at::native::copy_()
[2m[36m(pid=23608)[0m     @     0x7f19a9f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23492)[0m     @     0x7f80b7a33ed4 at::native::copy_()
[2m[36m(pid=23492)[0m     @     0x7f80b81765cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23514)[0m     @     0x7f85d499bed4 at::native::copy_()
[2m[36m(pid=23514)[0m     @     0x7f85d50de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23615)[0m     @     0x7f87598215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23615)[0m     @     0x7f8759929148 at::Tensor::copy_()
[2m[36m(pid=23615)[0m     @     0x7f875fbdfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23615)[0m     @     0x55b10a418fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23615)[0m     @     0x55b10a373b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23615)[0m     @     0x55b10a3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=23615)[0m     @     0x55b10a3ffa20 method_vectorcall
[2m[36m(pid=23615)[0m     @     0x55b10a373bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23615)[0m     @     0x55b10a3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=23615)[0m     @     0x55b10a3ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23615)[0m     @     0x55b10a374689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23615)[0m     @     0x55b10a3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=23615)[0m     @     0x55b10a3ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23615)[0m     @     0x55b10a374689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23615)[0m     @     0x55b10a3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=23565)[0m     @     0x7f4ef0d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23565)[0m     @     0x7f4eef0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23593)[0m     @     0x7f36cd015148 at::Tensor::copy_()
[2m[36m(pid=23593)[0m     @     0x7f36cec0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23593)[0m     @     0x7f36ccf0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23573)[0m     @     0x7f0de5f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23573)[0m     @     0x7f0de424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23546)[0m     @     0x7f3162510ed4 at::native::copy_()
[2m[36m(pid=23546)[0m     @     0x7f3162c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23497)[0m     @     0x7fab0319ded4 at::native::copy_()
[2m[36m(pid=23497)[0m     @     0x7fab038e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23576)[0m     @     0x7f603014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23576)[0m     @     0x7f602e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23600)[0m     @     0x7ee80bce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23600)[0m     @     0x7ee80bce2b53 at::TensorIterator::for_each()
[2m[36m(pid=23491)[0m     @     0x7fb42abe7ed4 at::native::copy_()
[2m[36m(pid=23491)[0m     @     0x7fb42b32a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23548)[0m     @     0x7ee80f00ded4 at::native::copy_()
[2m[36m(pid=23548)[0m     @     0x7ee80f7505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23499)[0m     @     0x7f6d1dfe3ed4 at::native::copy_()
[2m[36m(pid=23499)[0m     @     0x7f6d1e7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23599)[0m     @     0x7eeacaff6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23599)[0m     @     0x7eeacaff6b53 at::TensorIterator::for_each()
[2m[36m(pid=23540)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23540)[0m *** SIGSEGV (@0x0) received by PID 23540 (TID 0x7ff20f596700) from PID 0; stack trace: ***
[2m[36m(pid=23540)[0m     @     0x7ff20f16f390 (unknown)
[2m[36m(pid=23540)[0m     @     0x7fc31136efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23540)[0m     @     0x7fc30e66264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23515)[0m *** Aborted at 1604574206 (unix time) try "date -d @1604574206" if you are using GNU date ***
[2m[36m(pid=23515)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23515)[0m *** SIGSEGV (@0x0) received by PID 23515 (TID 0x7f63d41d5700) from PID 0; stack trace: ***
[2m[36m(pid=23515)[0m     @     0x7f63d3dae390 (unknown)
[2m[36m(pid=23515)[0m     @     0x7f34d5fd5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23510)[0m     @     0x7f1f6dfc9ed4 at::native::copy_()
[2m[36m(pid=23510)[0m     @     0x7f1f6e70c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23493)[0m     @     0x7f6341e66390 (unknown)
[2m[36m(pid=23493)[0m     @     0x7f344406efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23539)[0m     @     0x7febb727d390 (unknown)
[2m[36m(pid=23539)[0m     @     0x7fbcb9473fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23539)[0m     @     0x7fbcb676764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23508)[0m     @     0x7ef158340977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23508)[0m     @     0x7ef158340b53 at::TensorIterator::for_each()
[2m[36m(pid=23508)[0m     @     0x7ef158340e11 at::TensorIterator::for_each()
[2m[36m(pid=23516)[0m     @     0x7f0b574ab390 (unknown)
[2m[36m(pid=23516)[0m     @     0x7edc594a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23516)[0m     @     0x7edc5679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23516)[0m     @     0x7edc56797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23574)[0m     @     0x7f8025f75390 (unknown)
[2m[36m(pid=23574)[0m     @     0x7f512809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23574)[0m     @     0x7f512538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23574)[0m     @     0x7f5125392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23504)[0m     @     0x7f64ef29a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23504)[0m     @     0x7f64ef29ab53 at::TensorIterator::for_each()
[2m[36m(pid=23504)[0m     @     0x7f64ef29ae11 at::TensorIterator::for_each()
[2m[36m(pid=23504)[0m     @     0x7f64f1fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23623)[0m     @     0x7f173ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23623)[0m     @     0x7f173ac56148 at::Tensor::copy_()
[2m[36m(pid=23623)[0m     @     0x7f173c84d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23502)[0m     @     0x7f5bd1e8db53 at::TensorIterator::for_each()
[2m[36m(pid=23502)[0m     @     0x7f5bd1e8de11 at::TensorIterator::for_each()
[2m[36m(pid=23502)[0m     @     0x7f5bd4ba6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23502)[0m     @     0x7f5bd4bc9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23502)[0m     @     0x7f5bd1c07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23550)[0m     @     0x7efa2124bb53 at::TensorIterator::for_each()
[2m[36m(pid=23550)[0m     @     0x7efa2124be11 at::TensorIterator::for_each()
[2m[36m(pid=23550)[0m     @     0x7efa23f64c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23550)[0m     @     0x7efa23f87cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23523)[0m     @     0x7fb977c17ed4 at::native::copy_()
[2m[36m(pid=23523)[0m     @     0x7fb97835a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23523)[0m     @     0x7fb978462148 at::Tensor::copy_()
[2m[36m(pid=23488)[0m     @     0x7f6a40166ed4 at::native::copy_()
[2m[36m(pid=23488)[0m     @     0x7f6a408a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23488)[0m     @     0x7f6a409b1148 at::Tensor::copy_()
[2m[36m(pid=23488)[0m     @     0x7f6a425a8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23519)[0m     @     0x7ed711fd5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23519)[0m     @     0x7ed70f2c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23519)[0m     @     0x7ed70f2cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23545)[0m     @     0x7f7ed16a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23545)[0m     @     0x7f7ed16a8b53 at::TensorIterator::for_each()
[2m[36m(pid=23545)[0m     @     0x7f7ed16a8e11 at::TensorIterator::for_each()
[2m[36m(pid=23545)[0m     @     0x7f7ed43c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23505)[0m     @     0x7f97ac646ed4 at::native::copy_()
[2m[36m(pid=23505)[0m     @     0x7f97acd895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23505)[0m     @     0x7f97ace91148 at::Tensor::copy_()
[2m[36m(pid=23557)[0m     @     0x7f77e0412b53 at::TensorIterator::for_each()
[2m[36m(pid=23557)[0m     @     0x7f77e0412e11 at::TensorIterator::for_each()
[2m[36m(pid=23557)[0m     @     0x7f77e312bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23557)[0m     @     0x7f77e314ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23584)[0m     @     0x7faa492a5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23584)[0m     @     0x7faa492a5b53 at::TensorIterator::for_each()
[2m[36m(pid=23584)[0m     @     0x7faa492a5e11 at::TensorIterator::for_each()
[2m[36m(pid=23584)[0m     @     0x7faa4bfbec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23584)[0m     @     0x7faa4bfe1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23579)[0m     @     0x7f808f55db53 at::TensorIterator::for_each()
[2m[36m(pid=23579)[0m     @     0x7f808f55de11 at::TensorIterator::for_each()
[2m[36m(pid=23579)[0m     @     0x7f8092276c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23579)[0m     @     0x7f8092299cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23579)[0m     @     0x7f808f2d7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23566)[0m     @     0x7fa597a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23566)[0m     @     0x7fa594d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23618)[0m     @     0x7fb12813fb53 at::TensorIterator::for_each()
[2m[36m(pid=23618)[0m     @     0x7fb12813fe11 at::TensorIterator::for_each()
[2m[36m(pid=23618)[0m     @     0x7fb12ae58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23618)[0m     @     0x7fb12ae7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23511)[0m     @     0x7f5356401b53 at::TensorIterator::for_each()
[2m[36m(pid=23511)[0m     @     0x7f5356401e11 at::TensorIterator::for_each()
[2m[36m(pid=23511)[0m     @     0x7f535911ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23511)[0m     @     0x7f535913dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23511)[0m     @     0x7f535617b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23534)[0m     @     0x7f19b69a8b53 at::TensorIterator::for_each()
[2m[36m(pid=23534)[0m     @     0x7f19b69a8e11 at::TensorIterator::for_each()
[2m[36m(pid=23534)[0m     @     0x7f19b96c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23534)[0m     @     0x7f19b96e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23554)[0m     @     0x7edcd98b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23554)[0m     @     0x7edcd98b9b53 at::TensorIterator::for_each()
[2m[36m(pid=23496)[0m     @     0x7f68ed84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23496)[0m     @     0x7f68ed956148 at::Tensor::copy_()
[2m[36m(pid=23496)[0m     @     0x7f68ef54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23560)[0m     @     0x7ef34a600e11 at::TensorIterator::for_each()
[2m[36m(pid=23560)[0m     @     0x7ef34d319c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23560)[0m     @     0x7ef34d33ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23560)[0m     @     0x7ef34a37a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23560)[0m     @     0x7ef34a378c3f at::native::copy_impl()
[2m[36m(pid=23581)[0m     @     0x7eed610de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23581)[0m     @     0x7eed611e6148 at::Tensor::copy_()
[2m[36m(pid=23581)[0m     @     0x7eed6749cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23581)[0m     @     0x55f2f517cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23581)[0m     @     0x55f2f50d7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23581)[0m     @     0x55f2f5162baf _PyEval_EvalCodeWithName
[2m[36m(pid=23581)[0m     @     0x55f2f5163a20 method_vectorcall
[2m[36m(pid=23581)[0m     @     0x55f2f50d7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23581)[0m     @     0x55f2f5162baf _PyEval_EvalCodeWithName
[2m[36m(pid=23581)[0m     @     0x55f2f5163643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23581)[0m     @     0x55f2f50d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23581)[0m     @     0x55f2f5162baf _PyEval_EvalCodeWithName
[2m[36m(pid=23581)[0m     @     0x55f2f5163643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23581)[0m     @     0x55f2f50d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23581)[0m     @     0x55f2f5162baf _PyEval_EvalCodeWithName
[2m[36m(pid=23581)[0m     @     0x55f2f5163643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23581)[0m     @     0x55f2f50d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23581)[0m     @     0x55f2f5162baf _PyEval_EvalCodeWithName
[2m[36m(pid=23490)[0m     @     0x7fa6b2759148 at::Tensor::copy_()
[2m[36m(pid=23490)[0m     @     0x7fa6b4350989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23490)[0m     @     0x7fa6b26515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23589)[0m     @     0x7ef55890de11 at::TensorIterator::for_each()
[2m[36m(pid=23589)[0m     @     0x7ef55b626c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23589)[0m     @     0x7ef55b649cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23577)[0m     @     0x7f65f354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23577)[0m     @     0x7f65f184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23606)[0m     @     0x7f8a5584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23606)[0m     @     0x7f8a55956148 at::Tensor::copy_()
[2m[36m(pid=23606)[0m     @     0x7f8a5754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23503)[0m     @     0x7ee6e093ae11 at::TensorIterator::for_each()
[2m[36m(pid=23503)[0m     @     0x7ee6e3653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23503)[0m     @     0x7ee6e3676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23503)[0m     @     0x7ee6e06b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23503)[0m     @     0x7ee6e06b2c3f at::native::copy_impl()
[2m[36m(pid=23605)[0m     @     0x7fbb782a6148 at::Tensor::copy_()
[2m[36m(pid=23605)[0m     @     0x7fbb7e55cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23605)[0m     @     0x55a272385fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23605)[0m     @     0x55a2722e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23605)[0m     @     0x55a27236bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23605)[0m     @     0x55a27236ca20 method_vectorcall
[2m[36m(pid=23605)[0m     @     0x55a2722e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23605)[0m     @     0x55a27236bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23605)[0m     @     0x55a27236c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23605)[0m     @     0x55a2722e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23605)[0m     @     0x55a27236bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23605)[0m     @     0x55a27236c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23605)[0m     @     0x55a2722e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23605)[0m     @     0x55a27236bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23605)[0m     @     0x55a27236c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23605)[0m     @     0x55a2722e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23605)[0m     @     0x55a27236bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23500)[0m     @     0x7f8b8cdf65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23500)[0m     @     0x7f8b8cefe148 at::Tensor::copy_()
[2m[36m(pid=23500)[0m     @     0x7f8b8eaf5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23494)[0m     @     0x7f5c6b1d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23494)[0m     @     0x7f5c6b2da148 at::Tensor::copy_()
[2m[36m(pid=23494)[0m     @     0x7f5c6ced1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23553)[0m     @     0x7f4cd758a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23489)[0m     @     0x7faef7283148 at::Tensor::copy_()
[2m[36m(pid=23489)[0m     @     0x7faef8e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23489)[0m     @     0x7faef717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23611)[0m     @     0x55b90de1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23611)[0m     @     0x55b90de20a20 method_vectorcall
[2m[36m(pid=23611)[0m     @     0x55b90dd94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23611)[0m     @     0x55b90de1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23611)[0m     @     0x55b90de20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23611)[0m     @     0x55b90dd95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23611)[0m     @     0x55b90de1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23611)[0m     @     0x55b90de20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23611)[0m     @     0x55b90dd95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23611)[0m     @     0x55b90de1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23611)[0m     @     0x55b90de20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23611)[0m     @     0x55b90dd95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23611)[0m     @     0x55b90de1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23520)[0m     @     0x7ef0b9325e11 at::TensorIterator::for_each()
[2m[36m(pid=23520)[0m     @     0x7ef0bc03ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23520)[0m     @     0x7ef0bc061cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23520)[0m     @     0x7ef0b909f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23520)[0m     @     0x7ef0b909dc3f at::native::copy_impl()
[2m[36m(pid=23541)[0m     @     0x7f12fab8ab53 at::TensorIterator::for_each()
[2m[36m(pid=23541)[0m     @     0x7f12fab8ae11 at::TensorIterator::for_each()
[2m[36m(pid=23541)[0m     @     0x7f12fd8a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23541)[0m     @     0x7f12fd8c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23541)[0m     @     0x7f12fa904009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23541)[0m     @     0x7f12fa902c3f at::native::copy_impl()
[2m[36m(pid=23512)[0m     @     0x7fa11f314b53 at::TensorIterator::for_each()
[2m[36m(pid=23512)[0m     @     0x7fa11f314e11 at::TensorIterator::for_each()
[2m[36m(pid=23512)[0m     @     0x7fa12202dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23512)[0m     @     0x7fa122050cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23512)[0m     @     0x7fa11f08e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23512)[0m     @     0x7fa11f08cc3f at::native::copy_impl()
[2m[36m(pid=23543)[0m     @     0x7f2e14412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23543)[0m     @     0x7f2e14412b53 at::TensorIterator::for_each()
[2m[36m(pid=23543)[0m     @     0x7f2e14412e11 at::TensorIterator::for_each()
[2m[36m(pid=23543)[0m     @     0x7f2e1712bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23543)[0m     @     0x7f2e1714ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23509)[0m     @     0x7faff0623b53 at::TensorIterator::for_each()
[2m[36m(pid=23509)[0m     @     0x7faff0623e11 at::TensorIterator::for_each()
[2m[36m(pid=23509)[0m     @     0x7faff333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23509)[0m     @     0x7faff335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23509)[0m     @     0x7faff039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23509)[0m     @     0x7faff039bc3f at::native::copy_impl()
[2m[36m(pid=23501)[0m     @     0x7f0781c78e11 at::TensorIterator::for_each()
[2m[36m(pid=23501)[0m     @     0x7f0784991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23501)[0m     @     0x7f07849b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23501)[0m     @     0x7f07819f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23501)[0m     @     0x7f07819f0c3f at::native::copy_impl()
[2m[36m(pid=23612)[0m     @     0x7f2ee973f148 at::Tensor::copy_()
[2m[36m(pid=23612)[0m     @     0x7f2eef9f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23612)[0m     @     0x55cacf36ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23612)[0m     @     0x55cacf2cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23612)[0m     @     0x55cacf355baf _PyEval_EvalCodeWithName
[2m[36m(pid=23612)[0m     @     0x55cacf356a20 method_vectorcall
[2m[36m(pid=23612)[0m     @     0x55cacf2cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23612)[0m     @     0x55cacf355baf _PyEval_EvalCodeWithName
[2m[36m(pid=23612)[0m     @     0x55cacf356643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23612)[0m     @     0x55cacf2cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23612)[0m     @     0x55cacf355baf _PyEval_EvalCodeWithName
[2m[36m(pid=23612)[0m     @     0x55cacf356643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23612)[0m     @     0x55cacf2cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23612)[0m     @     0x55cacf355baf _PyEval_EvalCodeWithName
[2m[36m(pid=23612)[0m     @     0x55cacf356643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23612)[0m     @     0x55cacf2cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23612)[0m     @     0x55cacf355baf _PyEval_EvalCodeWithName
[2m[36m(pid=23571)[0m     @     0x7effbd32b148 at::Tensor::copy_()
[2m[36m(pid=23571)[0m     @     0x7effbef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23571)[0m     @     0x7effbd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23571)[0m     @     0x7effbd32b148 at::Tensor::copy_()
[2m[36m(pid=23571)[0m     @     0x7effc35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23571)[0m     @     0x5647839a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23571)[0m     @     0x564783901b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23571)[0m     @     0x56478398cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23571)[0m     @     0x56478398da20 method_vectorcall
[2m[36m(pid=23571)[0m     @     0x564783901bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23571)[0m     @     0x56478398cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23609)[0m     @     0x7f5dfa7d0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23609)[0m     @     0x560c6a024fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23609)[0m     @     0x560c69f7fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23609)[0m     @     0x560c6a00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23609)[0m     @     0x560c6a00ba20 method_vectorcall
[2m[36m(pid=23609)[0m     @     0x560c69f7fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23609)[0m     @     0x560c6a00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23609)[0m     @     0x560c6a00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23609)[0m     @     0x560c69f80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23609)[0m     @     0x560c6a00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23609)[0m     @     0x560c6a00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23609)[0m     @     0x560c69f80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23609)[0m     @     0x560c6a00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23609)[0m     @     0x560c6a00b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23609)[0m     @     0x560c69f80689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23609)[0m     @     0x560c6a00abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23572)[0m     @     0x7fb8efe65148 at::Tensor::copy_()
[2m[36m(pid=23572)[0m     @     0x7fb8f611bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23572)[0m     @     0x556a76e99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23572)[0m     @     0x556a76df4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23572)[0m     @     0x556a76e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23572)[0m     @     0x556a76e80a20 method_vectorcall
[2m[36m(pid=23572)[0m     @     0x556a76df4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23572)[0m     @     0x556a76e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23572)[0m     @     0x556a76e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23572)[0m     @     0x556a76df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23572)[0m     @     0x556a76e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23572)[0m     @     0x556a76e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23572)[0m     @     0x556a76df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23572)[0m     @     0x556a76e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23572)[0m     @     0x556a76e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23572)[0m     @     0x556a76df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23572)[0m     @     0x556a76e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23604)[0m     @     0x7f48f35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23604)[0m     @     0x562f06b25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23604)[0m     @     0x562f06a80b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23604)[0m     @     0x562f06b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23604)[0m     @     0x562f06b0ca20 method_vectorcall
[2m[36m(pid=23604)[0m     @     0x562f06a80bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23604)[0m     @     0x562f06b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23604)[0m     @     0x562f06b0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23604)[0m     @     0x562f06a81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23604)[0m     @     0x562f06b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23604)[0m     @     0x562f06b0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23604)[0m     @     0x562f06a81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23604)[0m     @     0x562f06b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23604)[0m     @     0x562f06b0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23604)[0m     @     0x562f06a81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23604)[0m     @     0x562f06b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23575)[0m     @     0x7f52c3f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23575)[0m     @     0x55aaa8ff3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23575)[0m     @     0x55aaa8f4eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23575)[0m     @     0x55aaa8fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23575)[0m     @     0x55aaa8fdaa20 method_vectorcall
[2m[36m(pid=23575)[0m     @     0x55aaa8f4ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23575)[0m     @     0x55aaa8fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23575)[0m     @     0x55aaa8fda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23575)[0m     @     0x55aaa8f4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23575)[0m     @     0x55aaa8fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23575)[0m     @     0x55aaa8fda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23575)[0m     @     0x55aaa8f4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23575)[0m     @     0x55aaa8fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23575)[0m     @     0x55aaa8fda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23575)[0m     @     0x55aaa8f4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23575)[0m     @     0x55aaa8fd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23562)[0m     @     0x7f6b1a02b148 at::Tensor::copy_()
[2m[36m(pid=23562)[0m     @     0x7f6b202e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23562)[0m     @     0x55e304be2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23562)[0m     @     0x55e304b3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23562)[0m     @     0x55e304bc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23562)[0m     @     0x55e304bc9a20 method_vectorcall
[2m[36m(pid=23562)[0m     @     0x55e304b3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23562)[0m     @     0x55e304bc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23562)[0m     @     0x55e304bc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23562)[0m     @     0x55e304b3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23562)[0m     @     0x55e304bc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23562)[0m     @     0x55e304bc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23562)[0m     @     0x55e304b3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23562)[0m     @     0x55e304bc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23562)[0m     @     0x55e304bc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23562)[0m     @     0x55e304b3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23562)[0m     @     0x55e304bc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23587)[0m     @     0x7f08c1fa1148 at::Tensor::copy_()
[2m[36m(pid=23587)[0m     @     0x7f08c8257bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23587)[0m     @     0x5594a1f84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23587)[0m     @     0x5594a1edfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23587)[0m     @     0x5594a1f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23587)[0m     @     0x5594a1f6ba20 method_vectorcall
[2m[36m(pid=23587)[0m     @     0x5594a1edfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23587)[0m     @     0x5594a1f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23587)[0m     @     0x5594a1f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23587)[0m     @     0x5594a1ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23587)[0m     @     0x5594a1f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23587)[0m     @     0x5594a1f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23587)[0m     @     0x5594a1ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23587)[0m     @     0x5594a1f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23587)[0m     @     0x5594a1f6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23587)[0m     @     0x5594a1ee0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23587)[0m     @     0x5594a1f6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23513)[0m     @     0x7f5e0911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23513)[0m     @     0x7f5e09226148 at::Tensor::copy_()
[2m[36m(pid=23513)[0m     @     0x7f5e0f4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23513)[0m     @     0x555d2082efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23513)[0m     @     0x555d20789b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23513)[0m     @     0x555d20814baf _PyEval_EvalCodeWithName
[2m[36m(pid=23513)[0m     @     0x555d20815a20 method_vectorcall
[2m[36m(pid=23513)[0m     @     0x555d20789bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23513)[0m     @     0x555d20814baf _PyEval_EvalCodeWithName
[2m[36m(pid=23513)[0m     @     0x555d20815643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23513)[0m     @     0x555d2078a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23513)[0m     @     0x555d20814baf _PyEval_EvalCodeWithName
[2m[36m(pid=23513)[0m     @     0x555d20815643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23513)[0m     @     0x555d2078a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23513)[0m     @     0x555d20814baf _PyEval_EvalCodeWithName
[2m[36m(pid=23513)[0m     @     0x555d20815643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23513)[0m     @     0x555d2078a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23513)[0m     @     0x555d20814baf _PyEval_EvalCodeWithName
[2m[36m(pid=23602)[0m     @     0x7f9a80be7148 at::Tensor::copy_()
[2m[36m(pid=23602)[0m     @     0x7f9a86e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23602)[0m     @     0x555e8dc95fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23602)[0m     @     0x555e8dbf0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23602)[0m     @     0x555e8dc7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23602)[0m     @     0x555e8dc7ca20 method_vectorcall
[2m[36m(pid=23602)[0m     @     0x555e8dbf0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23602)[0m     @     0x555e8dc7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23602)[0m     @     0x555e8dc7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23602)[0m     @     0x555e8dbf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23602)[0m     @     0x555e8dc7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23602)[0m     @     0x555e8dc7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23602)[0m     @     0x555e8dbf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23602)[0m     @     0x555e8dc7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23602)[0m     @     0x555e8dc7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23602)[0m     @     0x555e8dbf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23602)[0m     @     0x555e8dc7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23495)[0m     @     0x7ee2f54ab148 at::Tensor::copy_()
[2m[36m(pid=23495)[0m     @     0x7ee2f70a2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23495)[0m     @     0x7ee2f53a35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23495)[0m     @     0x7ee2f54ab148 at::Tensor::copy_()
[2m[36m(pid=23495)[0m     @     0x7ee2fb761bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23495)[0m     @     0x55d24d536fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23495)[0m     @     0x55d24d491b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23495)[0m     @     0x55d24d51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23495)[0m     @     0x55d24d51da20 method_vectorcall
[2m[36m(pid=23495)[0m     @     0x55d24d491bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23495)[0m     @     0x55d24d51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23495)[0m     @     0x55d24d51d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23495)[0m     @     0x55d24d492689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23495)[0m     @     0x55d24d51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23495)[0m     @     0x55d24d51d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23495)[0m     @     0x55d24d492689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23495)[0m     @     0x55d24d51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23495)[0m     @     0x55d24d51d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23597)[0m     @     0x5609ec4b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23597)[0m     @     0x5609ec411b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23597)[0m     @     0x5609ec49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23597)[0m     @     0x5609ec49da20 method_vectorcall
[2m[36m(pid=23597)[0m     @     0x5609ec411bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23597)[0m     @     0x5609ec49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23597)[0m     @     0x5609ec49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23597)[0m     @     0x5609ec412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23597)[0m     @     0x5609ec49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23597)[0m     @     0x5609ec49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23597)[0m     @     0x5609ec412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23597)[0m     @     0x5609ec49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23597)[0m     @     0x5609ec49d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23597)[0m     @     0x5609ec412689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23597)[0m     @     0x5609ec49cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23624)[0m     @     0x7f715132b148 at::Tensor::copy_()
[2m[36m(pid=23624)[0m     @     0x7f71575e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23624)[0m     @     0x5646ddf0ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23624)[0m     @     0x5646dde6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23624)[0m     @     0x5646ddef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23624)[0m     @     0x5646ddef6a20 method_vectorcall
[2m[36m(pid=23624)[0m     @     0x5646dde6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23624)[0m     @     0x5646ddef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23624)[0m     @     0x5646ddef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23624)[0m     @     0x5646dde6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23624)[0m     @     0x5646ddef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23624)[0m     @     0x5646ddef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23624)[0m     @     0x5646dde6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23624)[0m     @     0x5646ddef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23624)[0m     @     0x5646ddef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23624)[0m     @     0x5646dde6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23624)[0m     @     0x5646ddef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23506)[0m     @     0x7fabc066d148 at::Tensor::copy_()
[2m[36m(pid=23506)[0m     @     0x7fabc2264989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23506)[0m     @     0x7fabc05655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23506)[0m     @     0x7fabc066d148 at::Tensor::copy_()
[2m[36m(pid=23537)[0m     @     0x7f76e6d5b148 at::Tensor::copy_()
[2m[36m(pid=23537)[0m     @     0x7f76ed011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23537)[0m     @     0x559185f51fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23537)[0m     @     0x559185eacb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23537)[0m     @     0x559185f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=23537)[0m     @     0x559185f38a20 method_vectorcall
[2m[36m(pid=23537)[0m     @     0x559185eacbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23537)[0m     @     0x559185f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=23537)[0m     @     0x559185f38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23537)[0m     @     0x559185ead689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23537)[0m     @     0x559185f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=23537)[0m     @     0x559185f38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23537)[0m     @     0x559185ead689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23537)[0m     @     0x559185f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=23537)[0m     @     0x559185f38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23537)[0m     @     0x559185ead689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23537)[0m     @     0x559185f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=23568)[0m     @     0x7f8f2fe33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23568)[0m     @     0x7f8f2e1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23568)[0m     @     0x7f8f2e23c148 at::Tensor::copy_()
[2m[36m(pid=23568)[0m     @     0x7f8f344f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23568)[0m     @     0x55576df2cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23568)[0m     @     0x55576de87b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23568)[0m     @     0x55576df12baf _PyEval_EvalCodeWithName
[2m[36m(pid=23568)[0m     @     0x55576df13a20 method_vectorcall
[2m[36m(pid=23568)[0m     @     0x55576de87bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23568)[0m     @     0x55576df12baf _PyEval_EvalCodeWithName
[2m[36m(pid=23568)[0m     @     0x55576df13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23568)[0m     @     0x55576de88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23568)[0m     @     0x55576df12baf _PyEval_EvalCodeWithName
[2m[36m(pid=23568)[0m     @     0x55576df13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23568)[0m     @     0x55576de88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23568)[0m     @     0x55576df12baf _PyEval_EvalCodeWithName
[2m[36m(pid=23568)[0m     @     0x55576df13643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23568)[0m     @     0x55576de88689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23568)[0m     @     0x55576df12baf _PyEval_EvalCodeWithName
[2m[36m(pid=23578)[0m     @     0x7f8d2c140148 at::Tensor::copy_()
[2m[36m(pid=23578)[0m     @     0x7f8d323f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23578)[0m     @     0x55f24f4b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23578)[0m     @     0x55f24f413b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23578)[0m     @     0x55f24f49ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23578)[0m     @     0x55f24f49fa20 method_vectorcall
[2m[36m(pid=23578)[0m     @     0x55f24f413bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23578)[0m     @     0x55f24f49ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23578)[0m     @     0x55f24f49f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23578)[0m     @     0x55f24f414689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23578)[0m     @     0x55f24f49ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23578)[0m     @     0x55f24f49f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23578)[0m     @     0x55f24f414689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23578)[0m     @     0x55f24f49ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23578)[0m     @     0x55f24f49f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23578)[0m     @     0x55f24f414689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23578)[0m     @     0x55f24f49ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23613)[0m     @     0x7f2a2f93d148 at::Tensor::copy_()
[2m[36m(pid=23613)[0m     @     0x7f2a35bf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23613)[0m     @     0x56228f46cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23613)[0m     @     0x56228f3c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23613)[0m     @     0x56228f452baf _PyEval_EvalCodeWithName
[2m[36m(pid=23613)[0m     @     0x56228f453a20 method_vectorcall
[2m[36m(pid=23613)[0m     @     0x56228f3c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23613)[0m     @     0x56228f452baf _PyEval_EvalCodeWithName
[2m[36m(pid=23613)[0m     @     0x56228f453643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23613)[0m     @     0x56228f3c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23613)[0m     @     0x56228f452baf _PyEval_EvalCodeWithName
[2m[36m(pid=23613)[0m     @     0x56228f453643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23613)[0m     @     0x56228f3c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23613)[0m     @     0x56228f452baf _PyEval_EvalCodeWithName
[2m[36m(pid=23613)[0m     @     0x56228f453643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23613)[0m     @     0x56228f3c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23613)[0m     @     0x56228f452baf _PyEval_EvalCodeWithName
[2m[36m(pid=23608)[0m     @     0x7f19aa02b148 at::Tensor::copy_()
[2m[36m(pid=23608)[0m     @     0x7f19abc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23608)[0m     @     0x7f19a9f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23608)[0m     @     0x7f19aa02b148 at::Tensor::copy_()
[2m[36m(pid=23608)[0m     @     0x7f19b02e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23608)[0m     @     0x564a1b9aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23608)[0m     @     0x564a1b905b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23608)[0m     @     0x564a1b990baf _PyEval_EvalCodeWithName
[2m[36m(pid=23608)[0m     @     0x564a1b991a20 method_vectorcall
[2m[36m(pid=23492)[0m     @     0x7f80b827e148 at::Tensor::copy_()
[2m[36m(pid=23492)[0m     @     0x7f80b9e75989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23492)[0m     @     0x7f80b81765cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23492)[0m     @     0x7f80b827e148 at::Tensor::copy_()
[2m[36m(pid=23514)[0m     @     0x7f85d51e6148 at::Tensor::copy_()
[2m[36m(pid=23514)[0m     @     0x7f85d6ddd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23514)[0m     @     0x7f85d50de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23514)[0m     @     0x7f85d51e6148 at::Tensor::copy_()
[2m[36m(pid=23615)[0m     @     0x55b10a3ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23615)[0m     @     0x55b10a374689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23615)[0m     @     0x55b10a3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=23565)[0m     @     0x7f4eef151148 at::Tensor::copy_()
[2m[36m(pid=23565)[0m     @     0x7f4ef5407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23565)[0m     @     0x5617a3feffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23565)[0m     @     0x5617a3f4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23565)[0m     @     0x5617a3fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23565)[0m     @     0x5617a3fd6a20 method_vectorcall
[2m[36m(pid=23565)[0m     @     0x5617a3f4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23565)[0m     @     0x5617a3fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23565)[0m     @     0x5617a3fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23565)[0m     @     0x5617a3f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23565)[0m     @     0x5617a3fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23565)[0m     @     0x5617a3fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23565)[0m     @     0x5617a3f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23565)[0m     @     0x5617a3fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23565)[0m     @     0x5617a3fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23565)[0m     @     0x5617a3f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23565)[0m     @     0x5617a3fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23593)[0m     @     0x7f36cd015148 at::Tensor::copy_()
[2m[36m(pid=23593)[0m     @     0x7f36d32cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23593)[0m     @     0x55f510ae2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23593)[0m     @     0x55f510a3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23593)[0m     @     0x55f510ac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23593)[0m     @     0x55f510ac9a20 method_vectorcall
[2m[36m(pid=23593)[0m     @     0x55f510a3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23593)[0m     @     0x55f510ac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23593)[0m     @     0x55f510ac9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23593)[0m     @     0x55f510a3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23593)[0m     @     0x55f510ac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23593)[0m     @     0x55f510ac9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23593)[0m     @     0x55f510a3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23593)[0m     @     0x55f510ac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23593)[0m     @     0x55f510ac9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23593)[0m     @     0x55f510a3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23593)[0m     @     0x55f510ac8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23573)[0m     @     0x7f0de4357148 at::Tensor::copy_()
[2m[36m(pid=23573)[0m     @     0x7f0dea60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23573)[0m     @     0x555f75205fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23573)[0m     @     0x555f75160b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23573)[0m     @     0x555f751ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23573)[0m     @     0x555f751eca20 method_vectorcall
[2m[36m(pid=23573)[0m     @     0x555f75160bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23573)[0m     @     0x555f751ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23573)[0m     @     0x555f751ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23573)[0m     @     0x555f75161689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23573)[0m     @     0x555f751ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23573)[0m     @     0x555f751ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23573)[0m     @     0x555f75161689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23573)[0m     @     0x555f751ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23573)[0m     @     0x555f751ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23573)[0m     @     0x555f75161689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23573)[0m     @     0x555f751ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23546)[0m     @     0x7f3162d5b148 at::Tensor::copy_()
[2m[36m(pid=23546)[0m     @     0x7f3164952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23546)[0m     @     0x7f3162c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23546)[0m     @     0x7f3162d5b148 at::Tensor::copy_()
[2m[36m(pid=23546)[0m     @     0x7f3169011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23546)[0m     @     0x560b7ac54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23546)[0m     @     0x560b7abafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23497)[0m     @     0x7fab039e8148 at::Tensor::copy_()
[2m[36m(pid=23497)[0m     @     0x7fab055df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23497)[0m     @     0x7fab038e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23497)[0m     @     0x7fab039e8148 at::Tensor::copy_()
[2m[36m(pid=23497)[0m     @     0x7fab09c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23497)[0m     @     0x55b6b23d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23497)[0m     @     0x55b6b232bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23497)[0m     @     0x55b6b23b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23497)[0m     @     0x55b6b23b7a20 method_vectorcall
[2m[36m(pid=23497)[0m     @     0x55b6b232bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23576)[0m     @     0x7f602e553148 at::Tensor::copy_()
[2m[36m(pid=23576)[0m     @     0x7f6034809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23576)[0m     @     0x55bc24c8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23576)[0m     @     0x55bc24be5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23576)[0m     @     0x55bc24c70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23576)[0m     @     0x55bc24c71a20 method_vectorcall
[2m[36m(pid=23576)[0m     @     0x55bc24be5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23576)[0m     @     0x55bc24c70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23576)[0m     @     0x55bc24c71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23576)[0m     @     0x55bc24be6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23576)[0m     @     0x55bc24c70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23576)[0m     @     0x55bc24c71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23576)[0m     @     0x55bc24be6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23576)[0m     @     0x55bc24c70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23576)[0m     @     0x55bc24c71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23576)[0m     @     0x55bc24be6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23576)[0m     @     0x55bc24c70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23600)[0m     @     0x7ee80bce2e11 at::TensorIterator::for_each()
[2m[36m(pid=23600)[0m     @     0x7ee80e9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23600)[0m     @     0x7ee80ea1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23600)[0m     @     0x7ee80ba5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23600)[0m     @     0x7ee80ba5ac3f at::native::copy_impl()
[2m[36m(pid=23600)[0m     @     0x7ee80ba5bed4 at::native::copy_()
[2m[36m(pid=23491)[0m     @     0x7fb42b432148 at::Tensor::copy_()
[2m[36m(pid=23491)[0m     @     0x7fb42d029989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23491)[0m     @     0x7fb42b32a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23491)[0m     @     0x7fb42b432148 at::Tensor::copy_()
[2m[36m(pid=23548)[0m     @     0x7ee80f858148 at::Tensor::copy_()
[2m[36m(pid=23548)[0m     @     0x7ee81144f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23548)[0m     @     0x7ee80f7505cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23548)[0m     @     0x7ee80f858148 at::Tensor::copy_()
[2m[36m(pid=23548)[0m     @     0x7ee815b0ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23548)[0m     @     0x55744f822fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23499)[0m     @     0x7f6d1e82e148 at::Tensor::copy_()
[2m[36m(pid=23499)[0m     @     0x7f6d20425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23499)[0m     @     0x7f6d1e7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23499)[0m     @     0x7f6d1e82e148 at::Tensor::copy_()
[2m[36m(pid=23599)[0m     @     0x7eeacaff6e11 at::TensorIterator::for_each()
[2m[36m(pid=23599)[0m     @     0x7eeacdd0fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23599)[0m     @     0x7eeacdd32cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23599)[0m     @     0x7eeacad70009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23599)[0m     @     0x7eeacad6ec3f at::native::copy_impl()
[2m[36m(pid=23599)[0m     @     0x7eeacad6fed4 at::native::copy_()
[2m[36m(pid=23540)[0m     @     0x7fc30e665977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23540)[0m     @     0x7fc30e665b53 at::TensorIterator::for_each()
[2m[36m(pid=23540)[0m     @     0x7fc30e665e11 at::TensorIterator::for_each()
[2m[36m(pid=23540)[0m     @     0x7fc31137ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23540)[0m     @     0x7fc3113a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23515)[0m     @     0x7f34d32c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23515)[0m     @     0x7f34d32cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23515)[0m     @     0x7f34d32ccb53 at::TensorIterator::for_each()
[2m[36m(pid=23515)[0m     @     0x7f34d32cce11 at::TensorIterator::for_each()
[2m[36m(pid=23515)[0m     @     0x7f34d5fe5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23510)[0m     @     0x7f1f6e814148 at::Tensor::copy_()
[2m[36m(pid=23510)[0m     @     0x7f1f7040b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23510)[0m     @     0x7f1f6e70c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23510)[0m     @     0x7f1f6e814148 at::Tensor::copy_()
[2m[36m(pid=23493)[0m     @     0x7f344136264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23493)[0m     @     0x7f3441365977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23493)[0m     @     0x7f3441365b53 at::TensorIterator::for_each()
[2m[36m(pid=23493)[0m     @     0x7f3441365e11 at::TensorIterator::for_each()
[2m[36m(pid=23493)[0m     @     0x7f344407ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23508)[0m     @     0x7ef15b059c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23508)[0m     @     0x7ef15b07ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23508)[0m     @     0x7ef1580ba009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23508)[0m     @     0x7ef1580b8c3f at::native::copy_impl()
[2m[36m(pid=23508)[0m     @     0x7ef1580b9ed4 at::native::copy_()
[2m[36m(pid=23516)[0m     @     0x7edc56797b53 at::TensorIterator::for_each()
[2m[36m(pid=23516)[0m     @     0x7edc56797e11 at::TensorIterator::for_each()
[2m[36m(pid=23516)[0m     @     0x7edc594b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23516)[0m     @     0x7edc594d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23574)[0m     @     0x7f5125392b53 at::TensorIterator::for_each()
[2m[36m(pid=23574)[0m     @     0x7f5125392e11 at::TensorIterator::for_each()
[2m[36m(pid=23574)[0m     @     0x7f51280abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23574)[0m     @     0x7f51280cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23504)[0m     @     0x7f64f1fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23504)[0m     @     0x7f64ef014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23504)[0m     @     0x7f64ef012c3f at::native::copy_impl()
[2m[36m(pid=23504)[0m     @     0x7f64ef013ed4 at::native::copy_()
[2m[36m(pid=23623)[0m     @     0x7f173ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23623)[0m     @     0x7f173ac56148 at::Tensor::copy_()
[2m[36m(pid=23623)[0m     @     0x7f1740f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23623)[0m     @     0x558b575cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23623)[0m     @     0x558b57525b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23623)[0m     @     0x558b575b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23623)[0m     @     0x558b575b1a20 method_vectorcall
[2m[36m(pid=23623)[0m     @     0x558b57525bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23623)[0m     @     0x558b575b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23623)[0m     @     0x558b575b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23623)[0m     @     0x558b57526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23623)[0m     @     0x558b575b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23623)[0m     @     0x558b575b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23623)[0m     @     0x558b57526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23623)[0m     @     0x558b575b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23623)[0m     @     0x558b575b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23623)[0m     @     0x558b57526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23623)[0m     @     0x558b575b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23502)[0m     @     0x7f5bd1c05c3f at::native::copy_impl()
[2m[36m(pid=23502)[0m     @     0x7f5bd1c06ed4 at::native::copy_()
[2m[36m(pid=23502)[0m     @     0x7f5bd23495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23550)[0m     @     0x7efa20fc5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23550)[0m     @     0x7efa20fc3c3f at::native::copy_impl()
[2m[36m(pid=23550)[0m     @     0x7efa20fc4ed4 at::native::copy_()
[2m[36m(pid=23550)[0m     @     0x7efa217075cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23523)[0m     @     0x7fb97a059989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23523)[0m     @     0x7fb97835a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23523)[0m     @     0x7fb978462148 at::Tensor::copy_()
[2m[36m(pid=23488)[0m     @     0x7f6a408a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23488)[0m     @     0x7f6a409b1148 at::Tensor::copy_()
[2m[36m(pid=23488)[0m     @     0x7f6a46c67bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23488)[0m     @     0x55e03fee1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23488)[0m     @     0x55e03fe3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23488)[0m     @     0x55e03fec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23488)[0m     @     0x55e03fec8a20 method_vectorcall
[2m[36m(pid=23488)[0m     @     0x55e03fe3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23488)[0m     @     0x55e03fec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23488)[0m     @     0x55e03fec8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23488)[0m     @     0x55e03fe3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23488)[0m     @     0x55e03fec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23488)[0m     @     0x55e03fec8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23488)[0m     @     0x55e03fe3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23488)[0m     @     0x55e03fec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23488)[0m     @     0x55e03fec8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23488)[0m     @     0x55e03fe3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23488)[0m     @     0x55e03fec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23519)[0m     @     0x7ed70f2ccb53 at::TensorIterator::for_each()
[2m[36m(pid=23519)[0m     @     0x7ed70f2cce11 at::TensorIterator::for_each()
[2m[36m(pid=23545)[0m     @     0x7f7ed43e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23545)[0m     @     0x7f7ed1422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23545)[0m     @     0x7f7ed1420c3f at::native::copy_impl()
[2m[36m(pid=23545)[0m     @     0x7f7ed1421ed4 at::native::copy_()
[2m[36m(pid=23505)[0m     @     0x7f97aea88989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23505)[0m     @     0x7f97acd895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23505)[0m     @     0x7f97ace91148 at::Tensor::copy_()
[2m[36m(pid=23505)[0m     @     0x7f97b3147bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23505)[0m     @     0x5635a5233fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23505)[0m     @     0x5635a518eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23505)[0m     @     0x5635a5219baf _PyEval_EvalCodeWithName
[2m[36m(pid=23505)[0m     @     0x5635a521aa20 method_vectorcall
[2m[36m(pid=23557)[0m     @     0x7f77e018c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23557)[0m     @     0x7f77e018ac3f at::native::copy_impl()
[2m[36m(pid=23557)[0m     @     0x7f77e018bed4 at::native::copy_()
[2m[36m(pid=23557)[0m     @     0x7f77e08ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23584)[0m     @     0x7faa4901f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23584)[0m     @     0x7faa4901dc3f at::native::copy_impl()
[2m[36m(pid=23584)[0m     @     0x7faa4901eed4 at::native::copy_()
[2m[36m(pid=23584)[0m     @     0x7faa497615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23584)[0m     @     0x7faa49869148 at::Tensor::copy_()
[2m[36m(pid=23579)[0m     @     0x7f808f2d5c3f at::native::copy_impl()
[2m[36m(pid=23579)[0m     @     0x7f808f2d6ed4 at::native::copy_()
[2m[36m(pid=23579)[0m     @     0x7f808fa195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23579)[0m     @     0x7f808fb21148 at::Tensor::copy_()
[2m[36m(pid=23579)[0m     @     0x7f8091718989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23566)[0m     @     0x7fa594d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23566)[0m     @     0x7fa594d67b53 at::TensorIterator::for_each()
[2m[36m(pid=23566)[0m     @     0x7fa594d67e11 at::TensorIterator::for_each()
[2m[36m(pid=23566)[0m     @     0x7fa597a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23566)[0m     @     0x7fa597aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23618)[0m     @     0x7fb127eb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23618)[0m     @     0x7fb127eb7c3f at::native::copy_impl()
[2m[36m(pid=23618)[0m     @     0x7fb127eb8ed4 at::native::copy_()
[2m[36m(pid=23618)[0m     @     0x7fb1285fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23618)[0m     @     0x7fb128703148 at::Tensor::copy_()
[2m[36m(pid=23511)[0m     @     0x7f5356179c3f at::native::copy_impl()
[2m[36m(pid=23511)[0m     @     0x7f535617aed4 at::native::copy_()
[2m[36m(pid=23511)[0m     @     0x7f53568bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23511)[0m     @     0x7f53569c5148 at::Tensor::copy_()
[2m[36m(pid=23511)[0m     @     0x7f53585bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23534)[0m     @     0x7f19b6722009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23534)[0m     @     0x7f19b6720c3f at::native::copy_impl()
[2m[36m(pid=23534)[0m     @     0x7f19b6721ed4 at::native::copy_()
[2m[36m(pid=23534)[0m     @     0x7f19b6e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23534)[0m     @     0x7f19b6f6c148 at::Tensor::copy_()
[2m[36m(pid=23534)[0m     @     0x7f19b8b63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23554)[0m     @     0x7edcd98b9e11 at::TensorIterator::for_each()
[2m[36m(pid=23554)[0m     @     0x7edcdc5d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23554)[0m     @     0x7edcdc5f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23554)[0m     @     0x7edcd9633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23554)[0m     @     0x7edcd9631c3f at::native::copy_impl()
[2m[36m(pid=23496)[0m     @     0x7f68ed84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23496)[0m     @     0x7f68ed956148 at::Tensor::copy_()
[2m[36m(pid=23496)[0m     @     0x7f68f3c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23496)[0m     @     0x563c5e4b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23496)[0m     @     0x563c5e40db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23496)[0m     @     0x563c5e498baf _PyEval_EvalCodeWithName
[2m[36m(pid=23496)[0m     @     0x563c5e499a20 method_vectorcall
[2m[36m(pid=23496)[0m     @     0x563c5e40dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23496)[0m     @     0x563c5e498baf _PyEval_EvalCodeWithName
[2m[36m(pid=23496)[0m     @     0x563c5e499643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23496)[0m     @     0x563c5e40e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23496)[0m     @     0x563c5e498baf _PyEval_EvalCodeWithName
[2m[36m(pid=23496)[0m     @     0x563c5e499643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23496)[0m     @     0x563c5e40e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23496)[0m     @     0x563c5e498baf _PyEval_EvalCodeWithName
[2m[36m(pid=23496)[0m     @     0x563c5e499643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23496)[0m     @     0x563c5e40e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23496)[0m     @     0x563c5e498baf _PyEval_EvalCodeWithName
[2m[36m(pid=23560)[0m     @     0x7ef34a379ed4 at::native::copy_()
[2m[36m(pid=23560)[0m     @     0x7ef34aabc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23560)[0m     @     0x7ef34abc4148 at::Tensor::copy_()
[2m[36m(pid=23560)[0m     @     0x7ef34c7bb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23490)[0m     @     0x7fa6b2759148 at::Tensor::copy_()
[2m[36m(pid=23490)[0m     @     0x7fa6b85f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23490)[0m     @     0x555cd61d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23490)[0m     @     0x555cd6134b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23490)[0m     @     0x555cd61bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23490)[0m     @     0x555cd61c0a20 method_vectorcall
[2m[36m(pid=23490)[0m     @     0x555cd6134bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23490)[0m     @     0x555cd61bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23490)[0m     @     0x555cd61c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23490)[0m     @     0x555cd6135689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23490)[0m     @     0x555cd61bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23490)[0m     @     0x555cd61c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23490)[0m     @     0x555cd6135689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23490)[0m     @     0x555cd61bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23490)[0m     @     0x555cd61c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23490)[0m     @     0x555cd6135689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23490)[0m     @     0x555cd61bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23589)[0m     @     0x7ef558687009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23589)[0m     @     0x7ef558685c3f at::native::copy_impl()
[2m[36m(pid=23589)[0m     @     0x7ef558686ed4 at::native::copy_()
[2m[36m(pid=23589)[0m     @     0x7ef558dc95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23589)[0m     @     0x7ef558ed1148 at::Tensor::copy_()
[2m[36m(pid=23589)[0m     @     0x7ef55aac8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23577)[0m     @     0x7f65f1956148 at::Tensor::copy_()
[2m[36m(pid=23577)[0m     @     0x7f65f7c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23577)[0m     @     0x561670eb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23577)[0m     @     0x561670e0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23577)[0m     @     0x561670e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23577)[0m     @     0x561670e9ba20 method_vectorcall
[2m[36m(pid=23577)[0m     @     0x561670e0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23577)[0m     @     0x561670e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23577)[0m     @     0x561670e9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23577)[0m     @     0x561670e10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23577)[0m     @     0x561670e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23577)[0m     @     0x561670e9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23577)[0m     @     0x561670e10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23577)[0m     @     0x561670e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23577)[0m     @     0x561670e9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23577)[0m     @     0x561670e10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23577)[0m     @     0x561670e9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23606)[0m     @     0x7f8a5584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23606)[0m     @     0x7f8a55956148 at::Tensor::copy_()
[2m[36m(pid=23606)[0m     @     0x7f8a5bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23606)[0m     @     0x561cb299ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23606)[0m     @     0x561cb28fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23606)[0m     @     0x561cb2985baf _PyEval_EvalCodeWithName
[2m[36m(pid=23606)[0m     @     0x561cb2986a20 method_vectorcall
[2m[36m(pid=23606)[0m     @     0x561cb28fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23606)[0m     @     0x561cb2985baf _PyEval_EvalCodeWithName
[2m[36m(pid=23606)[0m     @     0x561cb2986643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23606)[0m     @     0x561cb28fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23606)[0m     @     0x561cb2985baf _PyEval_EvalCodeWithName
[2m[36m(pid=23606)[0m     @     0x561cb2986643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23606)[0m     @     0x561cb28fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23606)[0m     @     0x561cb2985baf _PyEval_EvalCodeWithName
[2m[36m(pid=23606)[0m     @     0x561cb2986643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23606)[0m     @     0x561cb28fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23606)[0m     @     0x561cb2985baf _PyEval_EvalCodeWithName
[2m[36m(pid=23503)[0m     @     0x7ee6e06b3ed4 at::native::copy_()
[2m[36m(pid=23503)[0m     @     0x7ee6e0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23503)[0m     @     0x7ee6e0efe148 at::Tensor::copy_()
[2m[36m(pid=23500)[0m     @     0x7f8b8cdf65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23500)[0m     @     0x7f8b8cefe148 at::Tensor::copy_()
[2m[36m(pid=23500)[0m     @     0x7f8b931b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23500)[0m     @     0x55c999245fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23500)[0m     @     0x55c9991a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23500)[0m     @     0x55c99922bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23500)[0m     @     0x55c99922ca20 method_vectorcall
[2m[36m(pid=23500)[0m     @     0x55c9991a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23500)[0m     @     0x55c99922bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23500)[0m     @     0x55c99922c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23500)[0m     @     0x55c9991a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23500)[0m     @     0x55c99922bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23500)[0m     @     0x55c99922c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23500)[0m     @     0x55c9991a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23500)[0m     @     0x55c99922bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23500)[0m     @     0x55c99922c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23500)[0m     @     0x55c9991a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23500)[0m     @     0x55c99922bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23494)[0m     @     0x7f5c6b1d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23494)[0m     @     0x7f5c6b2da148 at::Tensor::copy_()
[2m[36m(pid=23494)[0m     @     0x7f5c943ffbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23494)[0m     @     0x55f2f2b9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23494)[0m     @     0x55f2f2af6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23494)[0m     @     0x55f2f2b81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23494)[0m     @     0x55f2f2b82a20 method_vectorcall
[2m[36m(pid=23494)[0m     @     0x55f2f2af6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23494)[0m     @     0x55f2f2b81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23494)[0m     @     0x55f2f2b82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23494)[0m     @     0x55f2f2af7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23494)[0m     @     0x55f2f2b81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23494)[0m     @     0x55f2f2b82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23494)[0m     @     0x55f2f2af7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23494)[0m     @     0x55f2f2b81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23494)[0m     @     0x55f2f2b82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23494)[0m     @     0x55f2f2af7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23494)[0m     @     0x55f2f2b81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23553)[0m     @     0x7f4cd758ab53 at::TensorIterator::for_each()
[2m[36m(pid=23489)[0m     @     0x7faef7283148 at::Tensor::copy_()
[2m[36m(pid=23489)[0m     @     0x7faefd539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23489)[0m     @     0x56049a966fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23489)[0m     @     0x56049a8c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23489)[0m     @     0x56049a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23489)[0m     @     0x56049a94da20 method_vectorcall
[2m[36m(pid=23489)[0m     @     0x56049a8c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23489)[0m     @     0x56049a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23489)[0m     @     0x56049a94d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23489)[0m     @     0x56049a8c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23489)[0m     @     0x56049a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23489)[0m     @     0x56049a94d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23489)[0m     @     0x56049a8c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23489)[0m     @     0x56049a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23489)[0m     @     0x56049a94d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23489)[0m     @     0x56049a8c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23489)[0m     @     0x56049a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23520)[0m     @     0x7ef0b909eed4 at::native::copy_()
[2m[36m(pid=23520)[0m     @     0x7ef0b97e15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23520)[0m     @     0x7ef0b98e9148 at::Tensor::copy_()
[2m[36m(pid=23541)[0m     @     0x7f12fa903ed4 at::native::copy_()
[2m[36m(pid=23541)[0m     @     0x7f12fb0465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23512)[0m     @     0x7fa11f08ded4 at::native::copy_()
[2m[36m(pid=23512)[0m     @     0x7fa11f7d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23512)[0m     @     0x7fa11f8d8148 at::Tensor::copy_()
[2m[36m(pid=23543)[0m     @     0x7f2e1418c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23543)[0m     @     0x7f2e1418ac3f at::native::copy_impl()
[2m[36m(pid=23543)[0m     @     0x7f2e1418bed4 at::native::copy_()
[2m[36m(pid=23509)[0m     @     0x7faff039ced4 at::native::copy_()
[2m[36m(pid=23509)[0m     @     0x7faff0adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23501)[0m     @     0x7f07819f1ed4 at::native::copy_()
[2m[36m(pid=23501)[0m     @     0x7f07821345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23571)[0m     @     0x56478398d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23571)[0m     @     0x564783902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23571)[0m     @     0x56478398cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23571)[0m     @     0x56478398d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23571)[0m     @     0x564783902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23571)[0m     @     0x56478398cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23571)[0m     @     0x56478398d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23571)[0m     @     0x564783902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23571)[0m     @     0x56478398cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23495)[0m     @     0x55d24d492689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23495)[0m     @     0x55d24d51cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23506)[0m     @     0x7fabc6923bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23506)[0m     @     0x55af2dc26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23506)[0m     @     0x55af2db81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23506)[0m     @     0x55af2dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23506)[0m     @     0x55af2dc0da20 method_vectorcall
[2m[36m(pid=23506)[0m     @     0x55af2db81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23506)[0m     @     0x55af2dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23506)[0m     @     0x55af2dc0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23506)[0m     @     0x55af2db82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23506)[0m     @     0x55af2dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23506)[0m     @     0x55af2dc0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23506)[0m     @     0x55af2db82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23506)[0m     @     0x55af2dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23506)[0m     @     0x55af2dc0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23506)[0m     @     0x55af2db82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23506)[0m     @     0x55af2dc0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23608)[0m     @     0x564a1b905bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23608)[0m     @     0x564a1b990baf _PyEval_EvalCodeWithName
[2m[36m(pid=23608)[0m     @     0x564a1b991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23608)[0m     @     0x564a1b906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23608)[0m     @     0x564a1b990baf _PyEval_EvalCodeWithName
[2m[36m(pid=23608)[0m     @     0x564a1b991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23608)[0m     @     0x564a1b906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23608)[0m     @     0x564a1b990baf _PyEval_EvalCodeWithName
[2m[36m(pid=23608)[0m     @     0x564a1b991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23608)[0m     @     0x564a1b906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23608)[0m     @     0x564a1b990baf _PyEval_EvalCodeWithName
[2m[36m(pid=23492)[0m     @     0x7f80be534bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23492)[0m     @     0x56025cbcffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23492)[0m     @     0x56025cb2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23492)[0m     @     0x56025cbb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23492)[0m     @     0x56025cbb6a20 method_vectorcall
[2m[36m(pid=23492)[0m     @     0x56025cb2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23492)[0m     @     0x56025cbb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23492)[0m     @     0x56025cbb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23492)[0m     @     0x56025cb2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23492)[0m     @     0x56025cbb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23492)[0m     @     0x56025cbb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23492)[0m     @     0x56025cb2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23492)[0m     @     0x56025cbb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23492)[0m     @     0x56025cbb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23492)[0m     @     0x56025cb2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23492)[0m     @     0x56025cbb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=23514)[0m     @     0x7f85db49cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23514)[0m     @     0x56349165ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23514)[0m     @     0x5634915bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23514)[0m     @     0x563491645baf _PyEval_EvalCodeWithName
[2m[36m(pid=23514)[0m     @     0x563491646a20 method_vectorcall
[2m[36m(pid=23514)[0m     @     0x5634915babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23514)[0m     @     0x563491645baf _PyEval_EvalCodeWithName
[2m[36m(pid=23514)[0m     @     0x563491646643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23514)[0m     @     0x5634915bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23514)[0m     @     0x563491645baf _PyEval_EvalCodeWithName
[2m[36m(pid=23514)[0m     @     0x563491646643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23514)[0m     @     0x5634915bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23514)[0m     @     0x563491645baf _PyEval_EvalCodeWithName
[2m[36m(pid=23514)[0m     @     0x563491646643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23514)[0m     @     0x5634915bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23514)[0m     @     0x563491645baf _PyEval_EvalCodeWithName
[2m[36m(pid=23546)[0m     @     0x560b7ac3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23546)[0m     @     0x560b7ac3ba20 method_vectorcall
[2m[36m(pid=23546)[0m     @     0x560b7abafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23546)[0m     @     0x560b7ac3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23546)[0m     @     0x560b7ac3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23546)[0m     @     0x560b7abb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23546)[0m     @     0x560b7ac3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23546)[0m     @     0x560b7ac3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23546)[0m     @     0x560b7abb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23546)[0m     @     0x560b7ac3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23546)[0m     @     0x560b7ac3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23546)[0m     @     0x560b7abb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23546)[0m     @     0x560b7ac3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23497)[0m     @     0x55b6b23b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23497)[0m     @     0x55b6b23b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23497)[0m     @     0x55b6b232c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23497)[0m     @     0x55b6b23b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23497)[0m     @     0x55b6b23b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23497)[0m     @     0x55b6b232c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23497)[0m     @     0x55b6b23b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23497)[0m     @     0x55b6b23b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23497)[0m     @     0x55b6b232c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23497)[0m     @     0x55b6b23b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23600)[0m     @     0x7ee80c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23600)[0m     @     0x7ee80c2a6148 at::Tensor::copy_()
[2m[36m(pid=23600)[0m     @     0x7ee80de9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23491)[0m     @     0x7fb4316e8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23491)[0m     @     0x55de4b709fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23491)[0m     @     0x55de4b664b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23491)[0m     @     0x55de4b6efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23491)[0m     @     0x55de4b6f0a20 method_vectorcall
[2m[36m(pid=23491)[0m     @     0x55de4b664bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23491)[0m     @     0x55de4b6efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23491)[0m     @     0x55de4b6f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23491)[0m     @     0x55de4b665689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23491)[0m     @     0x55de4b6efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23491)[0m     @     0x55de4b6f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23491)[0m     @     0x55de4b665689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23491)[0m     @     0x55de4b6efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23491)[0m     @     0x55de4b6f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23491)[0m     @     0x55de4b665689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23491)[0m     @     0x55de4b6efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23548)[0m     @     0x55744f77db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23548)[0m     @     0x55744f808baf _PyEval_EvalCodeWithName
[2m[36m(pid=23548)[0m     @     0x55744f809a20 method_vectorcall
[2m[36m(pid=23548)[0m     @     0x55744f77dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23548)[0m     @     0x55744f808baf _PyEval_EvalCodeWithName
[2m[36m(pid=23548)[0m     @     0x55744f809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23548)[0m     @     0x55744f77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23548)[0m     @     0x55744f808baf _PyEval_EvalCodeWithName
[2m[36m(pid=23548)[0m     @     0x55744f809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23548)[0m     @     0x55744f77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23548)[0m     @     0x55744f808baf _PyEval_EvalCodeWithName
[2m[36m(pid=23548)[0m     @     0x55744f809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23548)[0m     @     0x55744f77e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23548)[0m     @     0x55744f808baf _PyEval_EvalCodeWithName
[2m[36m(pid=23499)[0m     @     0x7f6d24ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23499)[0m     @     0x5607258e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23499)[0m     @     0x56072583eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23499)[0m     @     0x5607258c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23499)[0m     @     0x5607258caa20 method_vectorcall
[2m[36m(pid=23499)[0m     @     0x56072583ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23499)[0m     @     0x5607258c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23499)[0m     @     0x5607258ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23499)[0m     @     0x56072583f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23499)[0m     @     0x5607258c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23499)[0m     @     0x5607258ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23499)[0m     @     0x56072583f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23499)[0m     @     0x5607258c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23499)[0m     @     0x5607258ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23499)[0m     @     0x56072583f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23499)[0m     @     0x5607258c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23599)[0m     @     0x7eeacb4b25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23540)[0m     @     0x7fc30e3df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23540)[0m     @     0x7fc30e3ddc3f at::native::copy_impl()
[2m[36m(pid=23540)[0m     @     0x7fc30e3deed4 at::native::copy_()
[2m[36m(pid=23515)[0m     @     0x7f34d6008cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23515)[0m     @     0x7f34d3046009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23515)[0m     @     0x7f34d3044c3f at::native::copy_impl()
[2m[36m(pid=23515)[0m     @     0x7f34d3045ed4 at::native::copy_()
[2m[36m(pid=23510)[0m     @     0x7f1f74acabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23510)[0m     @     0x55f3141e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23510)[0m     @     0x55f314140b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23510)[0m     @     0x55f3141cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23510)[0m     @     0x55f3141cca20 method_vectorcall
[2m[36m(pid=23510)[0m     @     0x55f314140bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23510)[0m     @     0x55f3141cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23510)[0m     @     0x55f3141cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23510)[0m     @     0x55f314141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23510)[0m     @     0x55f3141cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23510)[0m     @     0x55f3141cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23510)[0m     @     0x55f314141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23510)[0m     @     0x55f3141cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23510)[0m     @     0x55f3141cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23510)[0m     @     0x55f314141689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23510)[0m     @     0x55f3141cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23493)[0m     @     0x7f34440a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23493)[0m     @     0x7f34410df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23493)[0m     @     0x7f34410ddc3f at::native::copy_impl()
[2m[36m(pid=23539)[0m     @     0x7fbcb676a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=23508)[0m     @     0x7ef1587fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23508)[0m     @     0x7ef158904148 at::Tensor::copy_()
[2m[36m(pid=23508)[0m     @     0x7ef15a4fb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23516)[0m     @     0x7edc56511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23516)[0m     @     0x7edc5650fc3f at::native::copy_impl()
[2m[36m(pid=23574)[0m     @     0x7f512510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23574)[0m     @     0x7f512510ac3f at::native::copy_impl()
[2m[36m(pid=23574)[0m     @     0x7f512510bed4 at::native::copy_()
[2m[36m(pid=23574)[0m     @     0x7f512584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23504)[0m     @     0x7f64ef7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23504)[0m     @     0x7f64ef85e148 at::Tensor::copy_()
[2m[36m(pid=23504)[0m     @     0x7f64f1455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23502)[0m     @     0x7f5bd2451148 at::Tensor::copy_()
[2m[36m(pid=23502)[0m     @     0x7f5bd4048989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23502)[0m     @     0x7f5bd23495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23550)[0m     @     0x7efa2180f148 at::Tensor::copy_()
[2m[36m(pid=23550)[0m     @     0x7efa23406989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23550)[0m     @     0x7efa217075cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23523)[0m     @     0x7fb97e718bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23523)[0m     @     0x557d2b73dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23523)[0m     @     0x557d2b698b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23523)[0m     @     0x557d2b723baf _PyEval_EvalCodeWithName
[2m[36m(pid=23523)[0m     @     0x557d2b724a20 method_vectorcall
[2m[36m(pid=23523)[0m     @     0x557d2b698bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23523)[0m     @     0x557d2b723baf _PyEval_EvalCodeWithName
[2m[36m(pid=23523)[0m     @     0x557d2b724643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23523)[0m     @     0x557d2b699689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23523)[0m     @     0x557d2b723baf _PyEval_EvalCodeWithName
[2m[36m(pid=23523)[0m     @     0x557d2b724643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23523)[0m     @     0x557d2b699689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23523)[0m     @     0x557d2b723baf _PyEval_EvalCodeWithName
[2m[36m(pid=23523)[0m     @     0x557d2b724643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23523)[0m     @     0x557d2b699689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23523)[0m     @     0x557d2b723baf _PyEval_EvalCodeWithName
2020-11-05 11:03:26,724	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=23519)[0m     @     0x7ed711fe5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23519)[0m     @     0x7ed712008cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23519)[0m     @     0x7ed70f046009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23519)[0m     @     0x7ed70f044c3f at::native::copy_impl()
[2m[36m(pid=23519)[0m     @     0x7ed70f045ed4 at::native::copy_()
[2m[36m(pid=23545)[0m     @     0x7f7ed1b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23545)[0m     @     0x7f7ed1c6c148 at::Tensor::copy_()
[2m[36m(pid=23545)[0m     @     0x7f7ed3863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23505)[0m     @     0x5635a518ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23505)[0m     @     0x5635a5219baf _PyEval_EvalCodeWithName
[2m[36m(pid=23505)[0m     @     0x5635a521a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23505)[0m     @     0x5635a518f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23505)[0m     @     0x5635a5219baf _PyEval_EvalCodeWithName
[2m[36m(pid=23505)[0m     @     0x5635a521a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23505)[0m     @     0x5635a518f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23505)[0m     @     0x5635a5219baf _PyEval_EvalCodeWithName
[2m[36m(pid=23505)[0m     @     0x5635a521a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23505)[0m     @     0x5635a518f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23505)[0m     @     0x5635a5219baf _PyEval_EvalCodeWithName
[2m[36m(pid=23557)[0m     @     0x7f77e09d6148 at::Tensor::copy_()
[2m[36m(pid=23557)[0m     @     0x7f77e25cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23557)[0m     @     0x7f77e08ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23579)[0m     @     0x7f808fa195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23566)[0m     @     0x7fa594ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23566)[0m     @     0x7fa594adfc3f at::native::copy_impl()
[2m[36m(pid=23618)[0m     @     0x7fb12a2fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23618)[0m     @     0x7fb1285fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23511)[0m     @     0x7f53568bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23534)[0m     @     0x7f19b6e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23554)[0m     @     0x7edcd9632ed4 at::native::copy_()
[2m[36m(pid=23554)[0m     @     0x7edcd9d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23560)[0m     @     0x7ef34aabc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23589)[0m     @     0x7ef558dc95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23589)[0m     @     0x7ef558ed1148 at::Tensor::copy_()
[2m[36m(pid=23589)[0m     @     0x7ef55f187bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23589)[0m     @     0x56055159efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23589)[0m     @     0x5605514f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23589)[0m     @     0x560551584baf _PyEval_EvalCodeWithName
[2m[36m(pid=23589)[0m     @     0x560551585a20 method_vectorcall
[2m[36m(pid=23589)[0m     @     0x5605514f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23589)[0m     @     0x560551584baf _PyEval_EvalCodeWithName
[2m[36m(pid=23589)[0m     @     0x560551585643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23589)[0m     @     0x5605514fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23589)[0m     @     0x560551584baf _PyEval_EvalCodeWithName
[2m[36m(pid=23589)[0m     @     0x560551585643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23589)[0m     @     0x5605514fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23589)[0m     @     0x560551584baf _PyEval_EvalCodeWithName
[2m[36m(pid=23589)[0m     @     0x560551585643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23589)[0m     @     0x5605514fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23589)[0m     @     0x560551584baf _PyEval_EvalCodeWithName
[2m[36m(pid=23503)[0m     @     0x7ee6e2af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23503)[0m     @     0x7ee6e0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23503)[0m     @     0x7ee6e0efe148 at::Tensor::copy_()
[2m[36m(pid=23503)[0m     @     0x7ee6e71b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23503)[0m     @     0x561494919fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23503)[0m     @     0x561494874b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23503)[0m     @     0x5614948ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23503)[0m     @     0x561494900a20 method_vectorcall
[2m[36m(pid=23503)[0m     @     0x561494874bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23503)[0m     @     0x5614948ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23503)[0m     @     0x561494900643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23503)[0m     @     0x561494875689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23553)[0m     @     0x7f4cd758ae11 at::TensorIterator::for_each()
[2m[36m(pid=23553)[0m     @     0x7f4cda2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23520)[0m     @     0x7ef0bb4e0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23520)[0m     @     0x7ef0b97e15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23520)[0m     @     0x7ef0b98e9148 at::Tensor::copy_()
[2m[36m(pid=23520)[0m     @     0x7ef0bfb9fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23520)[0m     @     0x55f3b2768fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23520)[0m     @     0x55f3b26c3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23520)[0m     @     0x55f3b274ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23520)[0m     @     0x55f3b274fa20 method_vectorcall
[2m[36m(pid=23520)[0m     @     0x55f3b26c3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23520)[0m     @     0x55f3b274ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23541)[0m     @     0x7f12fb14e148 at::Tensor::copy_()
[2m[36m(pid=23541)[0m     @     0x7f12fcd45989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23541)[0m     @     0x7f12fb0465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23541)[0m     @     0x7f12fb14e148 at::Tensor::copy_()
[2m[36m(pid=23512)[0m     @     0x7fa1214cf989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23512)[0m     @     0x7fa11f7d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23512)[0m     @     0x7fa11f8d8148 at::Tensor::copy_()
[2m[36m(pid=23512)[0m     @     0x7fa125b8ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23512)[0m     @     0x55a4c97dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23512)[0m     @     0x55a4c9736b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23512)[0m     @     0x55a4c97c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23512)[0m     @     0x55a4c97c2a20 method_vectorcall
[2m[36m(pid=23512)[0m     @     0x55a4c9736bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23512)[0m     @     0x55a4c97c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23543)[0m     @     0x7f2e148ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23543)[0m     @     0x7f2e149d6148 at::Tensor::copy_()
[2m[36m(pid=23543)[0m     @     0x7f2e165cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23509)[0m     @     0x7faff0be7148 at::Tensor::copy_()
[2m[36m(pid=23509)[0m     @     0x7faff27de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23509)[0m     @     0x7faff0adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23509)[0m     @     0x7faff0be7148 at::Tensor::copy_()
[2m[36m(pid=23501)[0m     @     0x7f078223c148 at::Tensor::copy_()
[2m[36m(pid=23501)[0m     @     0x7f0783e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23501)[0m     @     0x7f07821345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23501)[0m     @     0x7f078223c148 at::Tensor::copy_()
[2m[36m(pid=23599)[0m     @     0x7eeacb5ba148 at::Tensor::copy_()
[2m[36m(pid=23599)[0m     @     0x7eeacd1b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23540)[0m     @     0x7fc30eb215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23540)[0m     @     0x7fc30ec29148 at::Tensor::copy_()
[2m[36m(pid=23540)[0m     @     0x7fc310820989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23515)[0m     @     0x7f34d37885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23515)[0m     @     0x7f34d3890148 at::Tensor::copy_()
[2m[36m(pid=23539)[0m     @     0x7fbcb676ab53 at::TensorIterator::for_each()
[2m[36m(pid=23508)[0m     @     0x7ef1587fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23508)[0m     @     0x7ef158904148 at::Tensor::copy_()
[2m[36m(pid=23508)[0m     @     0x7ef15ebbabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23508)[0m     @     0x556b5dfccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23508)[0m     @     0x556b5df27b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23508)[0m     @     0x556b5dfb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23508)[0m     @     0x556b5dfb3a20 method_vectorcall
[2m[36m(pid=23508)[0m     @     0x556b5df27bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23508)[0m     @     0x556b5dfb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23508)[0m     @     0x556b5dfb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23508)[0m     @     0x556b5df28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23508)[0m     @     0x556b5dfb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23508)[0m     @     0x556b5dfb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23516)[0m     @     0x7edc56510ed4 at::native::copy_()
[2m[36m(pid=23574)[0m     @     0x7f5125956148 at::Tensor::copy_()
[2m[36m(pid=23574)[0m     @     0x7f512754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23574)[0m     @     0x7f512584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23504)[0m     @     0x7f64ef7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23504)[0m     @     0x7f64ef85e148 at::Tensor::copy_()
[2m[36m(pid=23504)[0m     @     0x7f64f5b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23504)[0m     @     0x5640557affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23504)[0m     @     0x56405570ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23504)[0m     @     0x564055795baf _PyEval_EvalCodeWithName
[2m[36m(pid=23504)[0m     @     0x564055796a20 method_vectorcall
[2m[36m(pid=23504)[0m     @     0x56405570abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23504)[0m     @     0x564055795baf _PyEval_EvalCodeWithName
[2m[36m(pid=23504)[0m     @     0x564055796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23504)[0m     @     0x56405570b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23504)[0m     @     0x564055795baf _PyEval_EvalCodeWithName
[2m[36m(pid=23504)[0m     @     0x564055796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23504)[0m     @     0x56405570b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23504)[0m     @     0x564055795baf _PyEval_EvalCodeWithName
[2m[36m(pid=23504)[0m     @     0x564055796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23504)[0m     @     0x56405570b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23504)[0m     @     0x564055795baf _PyEval_EvalCodeWithName
[2m[36m(pid=23502)[0m     @     0x7f5bd2451148 at::Tensor::copy_()
[2m[36m(pid=23502)[0m     @     0x7f5bd8707bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23502)[0m     @     0x5607aa05afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23502)[0m     @     0x5607a9fb5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23502)[0m     @     0x5607aa040baf _PyEval_EvalCodeWithName
[2m[36m(pid=23502)[0m     @     0x5607aa041a20 method_vectorcall
[2m[36m(pid=23502)[0m     @     0x5607a9fb5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23502)[0m     @     0x5607aa040baf _PyEval_EvalCodeWithName
[2m[36m(pid=23502)[0m     @     0x5607aa041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23502)[0m     @     0x5607a9fb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23502)[0m     @     0x5607aa040baf _PyEval_EvalCodeWithName
[2m[36m(pid=23502)[0m     @     0x5607aa041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23502)[0m     @     0x5607a9fb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23502)[0m     @     0x5607aa040baf _PyEval_EvalCodeWithName
[2m[36m(pid=23502)[0m     @     0x5607aa041643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23502)[0m     @     0x5607a9fb6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23502)[0m     @     0x5607aa040baf _PyEval_EvalCodeWithName
[2m[36m(pid=23550)[0m     @     0x7efa2180f148 at::Tensor::copy_()
[2m[36m(pid=23550)[0m     @     0x7efa27ac5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23550)[0m     @     0x55b0f5261fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23550)[0m     @     0x55b0f51bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23550)[0m     @     0x55b0f5247baf _PyEval_EvalCodeWithName
[2m[36m(pid=23550)[0m     @     0x55b0f5248a20 method_vectorcall
[2m[36m(pid=23550)[0m     @     0x55b0f51bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23550)[0m     @     0x55b0f5247baf _PyEval_EvalCodeWithName
[2m[36m(pid=23550)[0m     @     0x55b0f5248643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23550)[0m     @     0x55b0f51bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23550)[0m     @     0x55b0f5247baf _PyEval_EvalCodeWithName
[2m[36m(pid=23550)[0m     @     0x55b0f5248643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23550)[0m     @     0x55b0f51bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23550)[0m     @     0x55b0f5247baf _PyEval_EvalCodeWithName
[2m[36m(pid=23550)[0m     @     0x55b0f5248643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23550)[0m     @     0x55b0f51bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23550)[0m     @     0x55b0f5247baf _PyEval_EvalCodeWithName
[2m[36m(pid=23519)[0m     @     0x7ed70f7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23519)[0m     @     0x7ed70f890148 at::Tensor::copy_()
[2m[36m(pid=23519)[0m     @     0x7ed711487989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23545)[0m     @     0x7f7ed1b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23545)[0m     @     0x7f7ed1c6c148 at::Tensor::copy_()
[2m[36m(pid=23545)[0m     @     0x7f7ed7f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23545)[0m     @     0x55b1c4f36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23545)[0m     @     0x55b1c4e91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23545)[0m     @     0x55b1c4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23545)[0m     @     0x55b1c4f1da20 method_vectorcall
[2m[36m(pid=23545)[0m     @     0x55b1c4e91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23545)[0m     @     0x55b1c4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23545)[0m     @     0x55b1c4f1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23545)[0m     @     0x55b1c4e92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23545)[0m     @     0x55b1c4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23545)[0m     @     0x55b1c4f1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23545)[0m     @     0x55b1c4e92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23545)[0m     @     0x55b1c4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23545)[0m     @     0x55b1c4f1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23545)[0m     @     0x55b1c4e92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23545)[0m     @     0x55b1c4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23557)[0m     @     0x7f77e09d6148 at::Tensor::copy_()
[2m[36m(pid=23557)[0m     @     0x7f77e6c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23557)[0m     @     0x56209dc67fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23557)[0m     @     0x56209dbc2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23557)[0m     @     0x56209dc4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23557)[0m     @     0x56209dc4ea20 method_vectorcall
[2m[36m(pid=23557)[0m     @     0x56209dbc2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23557)[0m     @     0x56209dc4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23557)[0m     @     0x56209dc4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23557)[0m     @     0x56209dbc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23557)[0m     @     0x56209dc4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23557)[0m     @     0x56209dc4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23557)[0m     @     0x56209dbc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23557)[0m     @     0x56209dc4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23557)[0m     @     0x56209dc4e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23557)[0m     @     0x56209dbc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23557)[0m     @     0x56209dc4dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23584)[0m     @     0x7faa4b460989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23584)[0m     @     0x7faa497615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23584)[0m     @     0x7faa49869148 at::Tensor::copy_()
[2m[36m(pid=23584)[0m     @     0x7faa4fb1fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23584)[0m     @     0x5587756d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23584)[0m     @     0x55877562db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23584)[0m     @     0x5587756b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23584)[0m     @     0x5587756b9a20 method_vectorcall
[2m[36m(pid=23584)[0m     @     0x55877562dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23584)[0m     @     0x5587756b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23584)[0m     @     0x5587756b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23584)[0m     @     0x55877562e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23584)[0m     @     0x5587756b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23584)[0m     @     0x5587756b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23584)[0m     @     0x55877562e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23584)[0m     @     0x5587756b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23584)[0m     @     0x5587756b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23584)[0m     @     0x55877562e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23584)[0m     @     0x5587756b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23579)[0m     @     0x7f808fb21148 at::Tensor::copy_()
[2m[36m(pid=23579)[0m     @     0x7f8095dd7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23579)[0m     @     0x55ad666fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23579)[0m     @     0x55ad66658b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23579)[0m     @     0x55ad666e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23579)[0m     @     0x55ad666e4a20 method_vectorcall
[2m[36m(pid=23579)[0m     @     0x55ad66658bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23579)[0m     @     0x55ad666e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23579)[0m     @     0x55ad666e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23579)[0m     @     0x55ad66659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23579)[0m     @     0x55ad666e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23579)[0m     @     0x55ad666e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23579)[0m     @     0x55ad66659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23579)[0m     @     0x55ad666e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23579)[0m     @     0x55ad666e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23579)[0m     @     0x55ad66659689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23579)[0m     @     0x55ad666e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23566)[0m     @     0x7fa594ae0ed4 at::native::copy_()
[2m[36m(pid=23566)[0m     @     0x7fa5952235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23566)[0m     @     0x7fa59532b148 at::Tensor::copy_()
[2m[36m(pid=23566)[0m     @     0x7fa596f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23618)[0m     @     0x7fb128703148 at::Tensor::copy_()
[2m[36m(pid=23618)[0m     @     0x7fb12e9b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23618)[0m     @     0x5584b6a92fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23618)[0m     @     0x5584b69edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23618)[0m     @     0x5584b6a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=23618)[0m     @     0x5584b6a79a20 method_vectorcall
[2m[36m(pid=23618)[0m     @     0x5584b69edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23618)[0m     @     0x5584b6a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=23618)[0m     @     0x5584b6a79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23618)[0m     @     0x5584b69ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23618)[0m     @     0x5584b6a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=23618)[0m     @     0x5584b6a79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23618)[0m     @     0x5584b69ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23618)[0m     @     0x5584b6a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=23618)[0m     @     0x5584b6a79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23618)[0m     @     0x5584b69ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23618)[0m     @     0x5584b6a78baf _PyEval_EvalCodeWithName
[2m[36m(pid=23511)[0m     @     0x7f53569c5148 at::Tensor::copy_()
[2m[36m(pid=23511)[0m     @     0x7f535cc7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23511)[0m     @     0x55f6e7279fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23511)[0m     @     0x55f6e71d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23511)[0m     @     0x55f6e725fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23511)[0m     @     0x55f6e7260a20 method_vectorcall
[2m[36m(pid=23511)[0m     @     0x55f6e71d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23511)[0m     @     0x55f6e725fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23511)[0m     @     0x55f6e7260643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23511)[0m     @     0x55f6e71d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23511)[0m     @     0x55f6e725fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23511)[0m     @     0x55f6e7260643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23511)[0m     @     0x55f6e71d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23511)[0m     @     0x55f6e725fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23511)[0m     @     0x55f6e7260643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23511)[0m     @     0x55f6e71d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23511)[0m     @     0x55f6e725fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23534)[0m     @     0x7f19b6f6c148 at::Tensor::copy_()
[2m[36m(pid=23534)[0m     @     0x7f19bd222bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23534)[0m     @     0x55e876dc8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23534)[0m     @     0x55e876d23b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23534)[0m     @     0x55e876daebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23534)[0m     @     0x55e876dafa20 method_vectorcall
[2m[36m(pid=23534)[0m     @     0x55e876d23bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23534)[0m     @     0x55e876daebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23534)[0m     @     0x55e876daf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23534)[0m     @     0x55e876d24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23534)[0m     @     0x55e876daebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23534)[0m     @     0x55e876daf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23534)[0m     @     0x55e876d24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23534)[0m     @     0x55e876daebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23534)[0m     @     0x55e876daf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23534)[0m     @     0x55e876d24689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23534)[0m     @     0x55e876daebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23560)[0m     @     0x7ef34abc4148 at::Tensor::copy_()
[2m[36m(pid=23560)[0m     @     0x7ef350e7abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23560)[0m     @     0x55da8979dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23560)[0m     @     0x55da896f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23560)[0m     @     0x55da89783baf _PyEval_EvalCodeWithName
[2m[36m(pid=23560)[0m     @     0x55da89784a20 method_vectorcall
[2m[36m(pid=23560)[0m     @     0x55da896f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23560)[0m     @     0x55da89783baf _PyEval_EvalCodeWithName
[2m[36m(pid=23560)[0m     @     0x55da89784643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23560)[0m     @     0x55da896f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23560)[0m     @     0x55da89783baf _PyEval_EvalCodeWithName
[2m[36m(pid=23560)[0m     @     0x55da89784643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23560)[0m     @     0x55da896f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23560)[0m     @     0x55da89783baf _PyEval_EvalCodeWithName
[2m[36m(pid=23560)[0m     @     0x55da89784643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23560)[0m     @     0x55da896f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23560)[0m     @     0x55da89783baf _PyEval_EvalCodeWithName
[2m[36m(pid=23503)[0m     @     0x5614948ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23503)[0m     @     0x561494900643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23503)[0m     @     0x561494875689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23503)[0m     @     0x5614948ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23503)[0m     @     0x561494900643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23503)[0m     @     0x561494875689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23503)[0m     @     0x5614948ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23553)[0m     @     0x7f4cda2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23553)[0m     @     0x7f4cd7304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23553)[0m     @     0x7f4cd7302c3f at::native::copy_impl()
[2m[36m(pid=23520)[0m     @     0x55f3b274f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23520)[0m     @     0x55f3b26c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23520)[0m     @     0x55f3b274ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23520)[0m     @     0x55f3b274f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23520)[0m     @     0x55f3b26c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23520)[0m     @     0x55f3b274ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23520)[0m     @     0x55f3b274f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23520)[0m     @     0x55f3b26c4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23520)[0m     @     0x55f3b274ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23541)[0m     @     0x7f1301404bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23541)[0m     @     0x561590b4cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23541)[0m     @     0x561590aa7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23541)[0m     @     0x561590b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23541)[0m     @     0x561590b33a20 method_vectorcall
[2m[36m(pid=23541)[0m     @     0x561590aa7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23541)[0m     @     0x561590b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23541)[0m     @     0x561590b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23541)[0m     @     0x561590aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23541)[0m     @     0x561590b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23541)[0m     @     0x561590b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23541)[0m     @     0x561590aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23541)[0m     @     0x561590b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23541)[0m     @     0x561590b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23541)[0m     @     0x561590aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23541)[0m     @     0x561590b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23512)[0m     @     0x55a4c97c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23512)[0m     @     0x55a4c9737689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23512)[0m     @     0x55a4c97c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23512)[0m     @     0x55a4c97c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23512)[0m     @     0x55a4c9737689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23512)[0m     @     0x55a4c97c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23512)[0m     @     0x55a4c97c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23512)[0m     @     0x55a4c9737689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23512)[0m     @     0x55a4c97c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23543)[0m     @     0x7f2e148ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23543)[0m     @     0x7f2e149d6148 at::Tensor::copy_()
[2m[36m(pid=23543)[0m     @     0x7f2e1ac8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23543)[0m     @     0x55c94a5d1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23543)[0m     @     0x55c94a52cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23543)[0m     @     0x55c94a5b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23543)[0m     @     0x55c94a5b8a20 method_vectorcall
[2m[36m(pid=23543)[0m     @     0x55c94a52cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23543)[0m     @     0x55c94a5b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23543)[0m     @     0x55c94a5b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23543)[0m     @     0x55c94a52d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23543)[0m     @     0x55c94a5b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23543)[0m     @     0x55c94a5b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23543)[0m     @     0x55c94a52d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23543)[0m     @     0x55c94a5b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23543)[0m     @     0x55c94a5b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23543)[0m     @     0x55c94a52d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23543)[0m     @     0x55c94a5b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23509)[0m     @     0x7faff6e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23509)[0m     @     0x55c89028efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23509)[0m     @     0x55c8901e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23509)[0m     @     0x55c890274baf _PyEval_EvalCodeWithName
[2m[36m(pid=23509)[0m     @     0x55c890275a20 method_vectorcall
[2m[36m(pid=23509)[0m     @     0x55c8901e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23509)[0m     @     0x55c890274baf _PyEval_EvalCodeWithName
[2m[36m(pid=23509)[0m     @     0x55c890275643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23509)[0m     @     0x55c8901ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23509)[0m     @     0x55c890274baf _PyEval_EvalCodeWithName
[2m[36m(pid=23509)[0m     @     0x55c890275643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23509)[0m     @     0x55c8901ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23509)[0m     @     0x55c890274baf _PyEval_EvalCodeWithName
[2m[36m(pid=23509)[0m     @     0x55c890275643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23509)[0m     @     0x55c8901ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23509)[0m     @     0x55c890274baf _PyEval_EvalCodeWithName
[2m[36m(pid=23501)[0m     @     0x7f07884f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23501)[0m     @     0x5568a2f8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23501)[0m     @     0x5568a2ee5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23501)[0m     @     0x5568a2f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23501)[0m     @     0x5568a2f71a20 method_vectorcall
[2m[36m(pid=23501)[0m     @     0x5568a2ee5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23501)[0m     @     0x5568a2f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23501)[0m     @     0x5568a2f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23501)[0m     @     0x5568a2ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23501)[0m     @     0x5568a2f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23501)[0m     @     0x5568a2f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23501)[0m     @     0x5568a2ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23501)[0m     @     0x5568a2f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23501)[0m     @     0x5568a2f71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23501)[0m     @     0x5568a2ee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23501)[0m     @     0x5568a2f70baf _PyEval_EvalCodeWithName
[2m[36m(pid=23600)[0m     @     0x7ee80c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23600)[0m     @     0x7ee80c2a6148 at::Tensor::copy_()
[2m[36m(pid=23600)[0m     @     0x7ee81255cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23600)[0m     @     0x55fafc4d3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23600)[0m     @     0x55fafc42eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23600)[0m     @     0x55fafc4b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23600)[0m     @     0x55fafc4baa20 method_vectorcall
[2m[36m(pid=23600)[0m     @     0x55fafc42ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23600)[0m     @     0x55fafc4b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23600)[0m     @     0x55fafc4ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23600)[0m     @     0x55fafc42f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23600)[0m     @     0x55fafc4b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23600)[0m     @     0x55fafc4ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23600)[0m     @     0x55fafc42f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23600)[0m     @     0x55fafc4b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23600)[0m     @     0x55fafc4ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23600)[0m     @     0x55fafc42f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23600)[0m     @     0x55fafc4b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23599)[0m     @     0x7eeacb4b25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23540)[0m     @     0x7fc30eb215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23540)[0m     @     0x7fc30ec29148 at::Tensor::copy_()
[2m[36m(pid=23540)[0m     @     0x7fc314edfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23540)[0m     @     0x5558213f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23540)[0m     @     0x55582134cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23540)[0m     @     0x5558213d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23540)[0m     @     0x5558213d8a20 method_vectorcall
[2m[36m(pid=23540)[0m     @     0x55582134cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23540)[0m     @     0x5558213d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23540)[0m     @     0x5558213d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23540)[0m     @     0x55582134d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23540)[0m     @     0x5558213d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23540)[0m     @     0x5558213d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23540)[0m     @     0x55582134d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23540)[0m     @     0x5558213d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23540)[0m     @     0x5558213d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23540)[0m     @     0x55582134d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23540)[0m     @     0x5558213d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23515)[0m     @     0x7f34d5487989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23515)[0m     @     0x7f34d37885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23515)[0m     @     0x7f34d3890148 at::Tensor::copy_()
[2m[36m(pid=23515)[0m     @     0x7f34d9b46bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23515)[0m     @     0x5613cbf62fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23515)[0m     @     0x5613cbebdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23515)[0m     @     0x5613cbf48baf _PyEval_EvalCodeWithName
[2m[36m(pid=23515)[0m     @     0x5613cbf49a20 method_vectorcall
[2m[36m(pid=23515)[0m     @     0x5613cbebdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23515)[0m     @     0x5613cbf48baf _PyEval_EvalCodeWithName
[2m[36m(pid=23515)[0m     @     0x5613cbf49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23515)[0m     @     0x5613cbebe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23515)[0m     @     0x5613cbf48baf _PyEval_EvalCodeWithName
[2m[36m(pid=23515)[0m     @     0x5613cbf49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23493)[0m     @     0x7f34410deed4 at::native::copy_()
[2m[36m(pid=23493)[0m     @     0x7f34418215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23539)[0m     @     0x7fbcb676ae11 at::TensorIterator::for_each()
[2m[36m(pid=23539)[0m     @     0x7fbcb9483c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23508)[0m     @     0x556b5df28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23508)[0m     @     0x556b5dfb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23508)[0m     @     0x556b5dfb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23508)[0m     @     0x556b5df28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23508)[0m     @     0x556b5dfb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23516)[0m     @     0x7edc56c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23516)[0m     @     0x7edc56d5b148 at::Tensor::copy_()
[2m[36m(pid=23516)[0m     @     0x7edc58952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23516)[0m     @     0x7edc56c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23574)[0m     @     0x7f5125956148 at::Tensor::copy_()
[2m[36m(pid=23574)[0m     @     0x7f512bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23574)[0m     @     0x55d764d71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23574)[0m     @     0x55d764cccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23574)[0m     @     0x55d764d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=23574)[0m     @     0x55d764d58a20 method_vectorcall
[2m[36m(pid=23574)[0m     @     0x55d764cccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23574)[0m     @     0x55d764d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=23574)[0m     @     0x55d764d58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23574)[0m     @     0x55d764ccd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23574)[0m     @     0x55d764d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=23574)[0m     @     0x55d764d58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23574)[0m     @     0x55d764ccd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23574)[0m     @     0x55d764d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=23574)[0m     @     0x55d764d58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23574)[0m     @     0x55d764ccd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23574)[0m     @     0x55d764d57baf _PyEval_EvalCodeWithName
[2m[36m(pid=23519)[0m     @     0x7ed70f7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23519)[0m     @     0x7ed70f890148 at::Tensor::copy_()
[2m[36m(pid=23519)[0m     @     0x7ed715b46bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23519)[0m     @     0x5610a1a6dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23519)[0m     @     0x5610a19c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23519)[0m     @     0x5610a1a53baf _PyEval_EvalCodeWithName
[2m[36m(pid=23519)[0m     @     0x5610a1a54a20 method_vectorcall
[2m[36m(pid=23519)[0m     @     0x5610a19c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23519)[0m     @     0x5610a1a53baf _PyEval_EvalCodeWithName
[2m[36m(pid=23519)[0m     @     0x5610a1a54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23519)[0m     @     0x5610a19c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23519)[0m     @     0x5610a1a53baf _PyEval_EvalCodeWithName
[2m[36m(pid=23519)[0m     @     0x5610a1a54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23519)[0m     @     0x5610a19c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23519)[0m     @     0x5610a1a53baf _PyEval_EvalCodeWithName
[2m[36m(pid=23519)[0m     @     0x5610a1a54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23519)[0m     @     0x5610a19c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23519)[0m     @     0x5610a1a53baf _PyEval_EvalCodeWithName
[2m[36m(pid=23566)[0m     @     0x7fa5952235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23553)[0m     @     0x7f4cd7303ed4 at::native::copy_()
[2m[36m(pid=23599)[0m     @     0x7eeacb5ba148 at::Tensor::copy_()
[2m[36m(pid=23599)[0m     @     0x7eead1870bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23599)[0m     @     0x558e16489fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23599)[0m     @     0x558e163e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23599)[0m     @     0x558e1646fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23599)[0m     @     0x558e16470a20 method_vectorcall
[2m[36m(pid=23599)[0m     @     0x558e163e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23599)[0m     @     0x558e1646fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23599)[0m     @     0x558e16470643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23599)[0m     @     0x558e163e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23515)[0m     @     0x5613cbebe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23515)[0m     @     0x5613cbf48baf _PyEval_EvalCodeWithName
[2m[36m(pid=23515)[0m     @     0x5613cbf49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23515)[0m     @     0x5613cbebe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23515)[0m     @     0x5613cbf48baf _PyEval_EvalCodeWithName
[2m[36m(pid=23493)[0m     @     0x7f3441929148 at::Tensor::copy_()
[2m[36m(pid=23539)[0m     @     0x7fbcb94a6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23539)[0m     @     0x7fbcb64e4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23516)[0m     @     0x7edc56d5b148 at::Tensor::copy_()
[2m[36m(pid=23516)[0m     @     0x7edc5d011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23516)[0m     @     0x557273d16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23516)[0m     @     0x557273c71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23516)[0m     @     0x557273cfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23516)[0m     @     0x557273cfda20 method_vectorcall
[2m[36m(pid=23516)[0m     @     0x557273c71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23516)[0m     @     0x557273cfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23516)[0m     @     0x557273cfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23516)[0m     @     0x557273c72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23516)[0m     @     0x557273cfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23516)[0m     @     0x557273cfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23516)[0m     @     0x557273c72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23516)[0m     @     0x557273cfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23516)[0m     @     0x557273cfd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23516)[0m     @     0x557273c72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23516)[0m     @     0x557273cfcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23566)[0m     @     0x7fa59532b148 at::Tensor::copy_()
[2m[36m(pid=23566)[0m     @     0x7fa59b5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23566)[0m     @     0x561cc8986fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23566)[0m     @     0x561cc88e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23566)[0m     @     0x561cc896cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23566)[0m     @     0x561cc896da20 method_vectorcall
[2m[36m(pid=23566)[0m     @     0x561cc88e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23566)[0m     @     0x561cc896cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23566)[0m     @     0x561cc896d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23566)[0m     @     0x561cc88e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23566)[0m     @     0x561cc896cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23566)[0m     @     0x561cc896d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23566)[0m     @     0x561cc88e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23566)[0m     @     0x561cc896cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23566)[0m     @     0x561cc896d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23566)[0m     @     0x561cc88e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23566)[0m     @     0x561cc896cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23554)[0m     @     0x7edcd9e7d148 at::Tensor::copy_()
[2m[36m(pid=23553)[0m     @     0x7f4cd7a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23553)[0m     @     0x7f4cd7b4e148 at::Tensor::copy_()
[2m[36m(pid=23553)[0m     @     0x7f4cd9745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23599)[0m     @     0x558e1646fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23599)[0m     @     0x558e16470643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23599)[0m     @     0x558e163e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23599)[0m     @     0x558e1646fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23599)[0m     @     0x558e16470643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23599)[0m     @     0x558e163e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23599)[0m     @     0x558e1646fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23493)[0m     @     0x7f3443520989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23493)[0m     @     0x7f34418215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23493)[0m     @     0x7f3441929148 at::Tensor::copy_()
[2m[36m(pid=23539)[0m     @     0x7fbcb64e2c3f at::native::copy_impl()
[2m[36m(pid=23554)[0m     @     0x7edcdba74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23554)[0m     @     0x7edcd9d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23553)[0m     @     0x7f4cd7a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=23493)[0m     @     0x7f3447bdfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23493)[0m     @     0x5579adc9cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23493)[0m     @     0x5579adbf7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23493)[0m     @     0x5579adc82baf _PyEval_EvalCodeWithName
[2m[36m(pid=23493)[0m     @     0x5579adc83a20 method_vectorcall
[2m[36m(pid=23493)[0m     @     0x5579adbf7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23493)[0m     @     0x5579adc82baf _PyEval_EvalCodeWithName
[2m[36m(pid=23493)[0m     @     0x5579adc83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23493)[0m     @     0x5579adbf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23493)[0m     @     0x5579adc82baf _PyEval_EvalCodeWithName
[2m[36m(pid=23493)[0m     @     0x5579adc83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23493)[0m     @     0x5579adbf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23493)[0m     @     0x5579adc82baf _PyEval_EvalCodeWithName
[2m[36m(pid=23493)[0m     @     0x5579adc83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23493)[0m     @     0x5579adbf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23493)[0m     @     0x5579adc82baf _PyEval_EvalCodeWithName
[2m[36m(pid=23554)[0m     @     0x7edcd9e7d148 at::Tensor::copy_()
[2m[36m(pid=23554)[0m     @     0x7edce0133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23554)[0m     @     0x5652e44b8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23554)[0m     @     0x5652e4413b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23554)[0m     @     0x5652e449ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23554)[0m     @     0x5652e449fa20 method_vectorcall
[2m[36m(pid=23554)[0m     @     0x5652e4413bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23554)[0m     @     0x5652e449ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23554)[0m     @     0x5652e449f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23554)[0m     @     0x5652e4414689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23554)[0m     @     0x5652e449ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23554)[0m     @     0x5652e449f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23554)[0m     @     0x5652e4414689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23554)[0m     @     0x5652e449ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23554)[0m     @     0x5652e449f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23554)[0m     @     0x5652e4414689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23554)[0m     @     0x5652e449ebaf _PyEval_EvalCodeWithName
2020-11-05 11:03:26,854	ERROR trial_runner.py:567 -- Trial PPO_jss_env_831e6_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=23622, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 11:03:26,855	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff310e963d01000000.
[2m[36m(pid=23622)[0m E1105 11:03:26.846412 23622 24746 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=84432216ae17d3f5310e963d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=310e963d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=23622)[0m E1105 11:03:26.846585 23622 24746 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=dd0eb8e8e41ad18f310e963d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=310e963d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=23553)[0m     @     0x7f4cd7b4e148 at::Tensor::copy_()
[2m[36m(pid=23553)[0m     @     0x7f4cdde04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=23553)[0m     @     0x563722574fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23553)[0m     @     0x5637224cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23553)[0m     @     0x56372255abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23553)[0m     @     0x56372255ba20 method_vectorcall
[2m[36m(pid=23553)[0m     @     0x5637224cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23553)[0m     @     0x56372255abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23553)[0m     @     0x56372255b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23553)[0m     @     0x5637224d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23553)[0m     @     0x56372255abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23553)[0m     @     0x56372255b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23553)[0m     @     0x5637224d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23553)[0m     @     0x56372255abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23553)[0m     @     0x56372255b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23553)[0m     @     0x5637224d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23553)[0m     @     0x56372255abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23539)[0m     @     0x7fbcb64e3ed4 at::native::copy_()
== Status ==
Memory usage on this node: 25.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_831e6_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_831e6_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_831e6_00000_0_2020-11-05_11-03-19/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_831e6_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_831e6_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_831e6_00000_0_2020-11-05_11-03-19/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 11:03:26,890	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 11:03:26,890	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_831e6_00000])
2020-11-05 11:03:26,901	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff04668d8f01000000.
2020-11-05 11:03:26,908	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.
2020-11-05 11:03:26,909	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
