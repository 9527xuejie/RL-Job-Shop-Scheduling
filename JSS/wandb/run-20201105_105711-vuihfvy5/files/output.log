2020-11-05 10:57:15,636	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ab29d_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=6454)[0m 2020-11-05 10:57:18,330	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=6449)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6449)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6449)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6449)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6449)[0m *** SIGSEGV (@0x0) received by PID 6449 (TID 0x7f3b61f45700) from PID 0; stack trace: ***
[2m[36m(pid=6449)[0m     @     0x7f3b61b1e390 (unknown)
[2m[36m(pid=6449)[0m     @     0x7f0c63c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6449)[0m     @     0x7f0c60f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6459)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6459)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6459)[0m *** SIGSEGV (@0x0) received by PID 6459 (TID 0x7fc612ace700) from PID 0; stack trace: ***
[2m[36m(pid=6459)[0m     @     0x7fc6126a7390 (unknown)
[2m[36m(pid=6459)[0m     @     0x7f97148a2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6459)[0m     @     0x7f9711b9664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6459)[0m     @     0x7f9711b99977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6459)[0m     @     0x7f9711b99b53 at::TensorIterator::for_each()
[2m[36m(pid=6397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6397)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6397)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6397)[0m *** SIGSEGV (@0x0) received by PID 6397 (TID 0x7f8cc6f36700) from PID 0; stack trace: ***
[2m[36m(pid=6397)[0m     @     0x7f8cc6b0f390 (unknown)
[2m[36m(pid=6397)[0m     @     0x7f5dc8d1bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6397)[0m     @     0x7f5dc600f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6397)[0m     @     0x7f5dc6012977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6423)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6423)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6423)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6423)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6423)[0m *** SIGSEGV (@0x0) received by PID 6423 (TID 0x7f992245f700) from PID 0; stack trace: ***
[2m[36m(pid=6423)[0m     @     0x7f9922038390 (unknown)
[2m[36m(pid=6423)[0m     @     0x7f6a2409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6423)[0m     @     0x7f6a2138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6423)[0m     @     0x7f6a21392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6423)[0m     @     0x7f6a21392b53 at::TensorIterator::for_each()
[2m[36m(pid=6406)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6406)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6406)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6406)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6406)[0m *** SIGSEGV (@0x0) received by PID 6406 (TID 0x7f80144c3700) from PID 0; stack trace: ***
[2m[36m(pid=6406)[0m     @     0x7f801409c390 (unknown)
[2m[36m(pid=6406)[0m     @     0x7f5115e3bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6406)[0m     @     0x7f511312f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6466)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6466)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6466)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6466)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6466)[0m *** SIGSEGV (@0x0) received by PID 6466 (TID 0x7fadc61b5700) from PID 0; stack trace: ***
[2m[36m(pid=6466)[0m     @     0x7fadc5d8e390 (unknown)
[2m[36m(pid=6466)[0m     @     0x7f7ec7faafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6466)[0m     @     0x7f7ec529e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6466)[0m     @     0x7f7ec52a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6438)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6438)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6438)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6438)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6438)[0m *** SIGSEGV (@0x0) received by PID 6438 (TID 0x7f525c51c700) from PID 0; stack trace: ***
[2m[36m(pid=6438)[0m     @     0x7f525c0f5390 (unknown)
[2m[36m(pid=6438)[0m     @     0x7f235e293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6438)[0m     @     0x7f235b58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6438)[0m     @     0x7f235b58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6446)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6446)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6446)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6446)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6446)[0m *** SIGSEGV (@0x0) received by PID 6446 (TID 0x7fce8fa1e700) from PID 0; stack trace: ***
[2m[36m(pid=6446)[0m     @     0x7fce8f5f7390 (unknown)
[2m[36m(pid=6446)[0m     @     0x7f9f91806fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6446)[0m     @     0x7f9f8eafa64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6446)[0m     @     0x7f9f8eafd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6420)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6420)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6420)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6420)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6420)[0m *** SIGSEGV (@0x0) received by PID 6420 (TID 0x7f5da3c3f700) from PID 0; stack trace: ***
[2m[36m(pid=6420)[0m     @     0x7f5da3818390 (unknown)
[2m[36m(pid=6420)[0m     @     0x7f2ea5a20fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6420)[0m     @     0x7f2ea2d1464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6420)[0m     @     0x7f2ea2d17977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6420)[0m     @     0x7f2ea2d17b53 at::TensorIterator::for_each()
[2m[36m(pid=6432)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6432)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6432)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6432)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6432)[0m *** SIGSEGV (@0x0) received by PID 6432 (TID 0x7f7df32d3700) from PID 0; stack trace: ***
[2m[36m(pid=6432)[0m     @     0x7f7df2eac390 (unknown)
[2m[36m(pid=6432)[0m     @     0x7f4ef4f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6432)[0m     @     0x7f4ef226764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6432)[0m     @     0x7f4ef226a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6432)[0m     @     0x7f4ef226ab53 at::TensorIterator::for_each()
[2m[36m(pid=6432)[0m     @     0x7f4ef226ae11 at::TensorIterator::for_each()
[2m[36m(pid=6448)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6448)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6448)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6448)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6448)[0m *** SIGSEGV (@0x0) received by PID 6448 (TID 0x7f5e4f949700) from PID 0; stack trace: ***
[2m[36m(pid=6448)[0m     @     0x7f5e4f522390 (unknown)
[2m[36m(pid=6448)[0m     @     0x7f2f51746fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6448)[0m     @     0x7f2f4ea3a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6448)[0m     @     0x7f2f4ea3d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6441)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6441)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6441)[0m *** SIGSEGV (@0x0) received by PID 6441 (TID 0x7f4df5d5c700) from PID 0; stack trace: ***
[2m[36m(pid=6441)[0m     @     0x7f4df5935390 (unknown)
[2m[36m(pid=6441)[0m     @     0x7f1ef7a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6441)[0m     @     0x7f1ef4d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6441)[0m     @     0x7f1ef4d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6434)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6434)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6434)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6434)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6434)[0m *** SIGSEGV (@0x0) received by PID 6434 (TID 0x7f9b16cff700) from PID 0; stack trace: ***
[2m[36m(pid=6434)[0m     @     0x7f9b168d8390 (unknown)
[2m[36m(pid=6434)[0m     @     0x7f6c18a32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6434)[0m     @     0x7f6c15d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6434)[0m     @     0x7f6c15d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6442)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6442)[0m *** SIGSEGV (@0x0) received by PID 6442 (TID 0x7f0aec6a2700) from PID 0; stack trace: ***
[2m[36m(pid=6442)[0m     @     0x7f0aec27b390 (unknown)
[2m[36m(pid=6442)[0m     @     0x7edbee293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6442)[0m     @     0x7edbeb58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6442)[0m     @     0x7edbeb58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6415)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6415)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6415)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6415)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6415)[0m *** SIGSEGV (@0x0) received by PID 6415 (TID 0x7f0374a69700) from PID 0; stack trace: ***
[2m[36m(pid=6415)[0m     @     0x7f0374642390 (unknown)
[2m[36m(pid=6415)[0m     @     0x7ed476858fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6415)[0m     @     0x7ed473b4c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6415)[0m     @     0x7ed473b4f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6415)[0m     @     0x7ed473b4fb53 at::TensorIterator::for_each()
[2m[36m(pid=6353)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6353)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6353)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6353)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6353)[0m *** SIGSEGV (@0x0) received by PID 6353 (TID 0x7f83d8363700) from PID 0; stack trace: ***
[2m[36m(pid=6353)[0m     @     0x7f83d7f3c390 (unknown)
[2m[36m(pid=6353)[0m     @     0x7f54da067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6353)[0m     @     0x7f54d735b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6353)[0m     @     0x7f54d735e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6358)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6358)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6358)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6358)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6358)[0m *** SIGSEGV (@0x0) received by PID 6358 (TID 0x7f70896ec700) from PID 0; stack trace: ***
[2m[36m(pid=6358)[0m     @     0x7f70892c5390 (unknown)
[2m[36m(pid=6358)[0m     @     0x7f418b3ddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6358)[0m     @     0x7f41886d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6358)[0m     @     0x7f41886d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6426)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6426)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6426)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6426)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6426)[0m *** SIGSEGV (@0x0) received by PID 6426 (TID 0x7f2433053700) from PID 0; stack trace: ***
[2m[36m(pid=6426)[0m     @     0x7f2432c2c390 (unknown)
[2m[36m(pid=6426)[0m     @     0x7ef534d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6426)[0m     @     0x7ef53203c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6426)[0m     @     0x7ef53203f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6336)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6336)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6336)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6336)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6336)[0m *** SIGSEGV (@0x0) received by PID 6336 (TID 0x7fcefe21d700) from PID 0; stack trace: ***
[2m[36m(pid=6336)[0m     @     0x7fcefddf6390 (unknown)
[2m[36m(pid=6336)[0m     @     0x7f9ffffeafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6336)[0m     @     0x7f9ffd2de64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6336)[0m     @     0x7f9ffd2e1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6447)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6447)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6447)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6447)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6447)[0m *** SIGSEGV (@0x0) received by PID 6447 (TID 0x7f201971d700) from PID 0; stack trace: ***
[2m[36m(pid=6447)[0m     @     0x7f20192f6390 (unknown)
[2m[36m(pid=6447)[0m     @     0x7ef11b501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6447)[0m     @     0x7ef1187f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6447)[0m     @     0x7ef1187f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6447)[0m     @     0x7ef1187f8b53 at::TensorIterator::for_each()
[2m[36m(pid=6447)[0m     @     0x7ef1187f8e11 at::TensorIterator::for_each()
[2m[36m(pid=6447)[0m     @     0x7ef11b511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6447)[0m     @     0x7ef11b534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6457)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6457)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6457)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6457)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6457)[0m *** SIGSEGV (@0x0) received by PID 6457 (TID 0x7fb28ba44700) from PID 0; stack trace: ***
[2m[36m(pid=6457)[0m     @     0x7fb28b61d390 (unknown)
[2m[36m(pid=6457)[0m     @     0x7f838d829fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6457)[0m     @     0x7f838ab1d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6457)[0m     @     0x7f838ab20977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6457)[0m     @     0x7f838ab20b53 at::TensorIterator::for_each()
[2m[36m(pid=6457)[0m     @     0x7f838ab20e11 at::TensorIterator::for_each()
[2m[36m(pid=6457)[0m     @     0x7f838d839c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6457)[0m     @     0x7f838d85ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6412)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6412)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6412)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6412)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6412)[0m *** SIGSEGV (@0x0) received by PID 6412 (TID 0x7ff75fad9700) from PID 0; stack trace: ***
[2m[36m(pid=6412)[0m     @     0x7ff75f6b2390 (unknown)
[2m[36m(pid=6412)[0m     @     0x7fc861896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6412)[0m     @     0x7fc85eb8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6412)[0m     @     0x7fc85eb8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6412)[0m     @     0x7fc85eb8db53 at::TensorIterator::for_each()
[2m[36m(pid=6412)[0m     @     0x7fc85eb8de11 at::TensorIterator::for_each()
[2m[36m(pid=6412)[0m     @     0x7fc8618a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6412)[0m     @     0x7fc8618c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6364)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6364)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6364)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6364)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6364)[0m *** SIGSEGV (@0x0) received by PID 6364 (TID 0x7f7fb2e37700) from PID 0; stack trace: ***
[2m[36m(pid=6364)[0m     @     0x7f7fb2a10390 (unknown)
[2m[36m(pid=6364)[0m     @     0x7f50b4a32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6364)[0m     @     0x7f50b1d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6364)[0m     @     0x7f50b1d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6364)[0m     @     0x7f50b1d29b53 at::TensorIterator::for_each()
[2m[36m(pid=6364)[0m     @     0x7f50b1d29e11 at::TensorIterator::for_each()
[2m[36m(pid=6364)[0m     @     0x7f50b4a42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6439)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6439)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6439)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6439)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6439)[0m *** SIGSEGV (@0x0) received by PID 6439 (TID 0x7f87f62e8700) from PID 0; stack trace: ***
[2m[36m(pid=6439)[0m     @     0x7f87f5ec1390 (unknown)
[2m[36m(pid=6439)[0m     @     0x7f58f809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6439)[0m     @     0x7f58f538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6439)[0m     @     0x7f58f5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6439)[0m     @     0x7f58f5392b53 at::TensorIterator::for_each()
[2m[36m(pid=6439)[0m     @     0x7f58f5392e11 at::TensorIterator::for_each()
[2m[36m(pid=6416)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6416)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6416)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6416)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6416)[0m *** SIGSEGV (@0x0) received by PID 6416 (TID 0x7f90d308f700) from PID 0; stack trace: ***
[2m[36m(pid=6416)[0m     @     0x7f90d2c68390 (unknown)
[2m[36m(pid=6416)[0m     @     0x7f61d4d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6416)[0m     @     0x7f61d203c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6416)[0m     @     0x7f61d203f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6416)[0m     @     0x7f61d203fb53 at::TensorIterator::for_each()
[2m[36m(pid=6348)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6348)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6348)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6348)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6348)[0m *** SIGSEGV (@0x0) received by PID 6348 (TID 0x7f503284d700) from PID 0; stack trace: ***
[2m[36m(pid=6348)[0m     @     0x7f5032426390 (unknown)
[2m[36m(pid=6348)[0m     @     0x7f21345c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6424)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6424)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6424)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6424)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6424)[0m *** SIGSEGV (@0x0) received by PID 6424 (TID 0x7f2df3b5b700) from PID 0; stack trace: ***
[2m[36m(pid=6424)[0m     @     0x7f2df3734390 (unknown)
[2m[36m(pid=6424)[0m     @     0x7efef5896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6424)[0m     @     0x7efef2b8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6424)[0m     @     0x7efef2b8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6424)[0m     @     0x7efef2b8db53 at::TensorIterator::for_each()
[2m[36m(pid=6411)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6411)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6411)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6411)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6411)[0m *** SIGSEGV (@0x0) received by PID 6411 (TID 0x7fcaef186700) from PID 0; stack trace: ***
[2m[36m(pid=6411)[0m     @     0x7fcaeed5f390 (unknown)
[2m[36m(pid=6411)[0m     @     0x7f9bf0f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6411)[0m     @     0x7f9bee26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6411)[0m     @     0x7f9bee26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6411)[0m     @     0x7f9bee26ab53 at::TensorIterator::for_each()
[2m[36m(pid=6408)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6408)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6408)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6408)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6408)[0m *** SIGSEGV (@0x0) received by PID 6408 (TID 0x7f7425415700) from PID 0; stack trace: ***
[2m[36m(pid=6408)[0m     @     0x7f7424fee390 (unknown)
[2m[36m(pid=6408)[0m     @     0x7f452711bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6408)[0m     @     0x7f452440f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6408)[0m     @     0x7f4524412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6408)[0m     @     0x7f4524412b53 at::TensorIterator::for_each()
[2m[36m(pid=6408)[0m     @     0x7f4524412e11 at::TensorIterator::for_each()
[2m[36m(pid=6393)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6393)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6393)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6393)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6393)[0m *** SIGSEGV (@0x0) received by PID 6393 (TID 0x7f53e02e9700) from PID 0; stack trace: ***
[2m[36m(pid=6393)[0m     @     0x7f53dfec2390 (unknown)
[2m[36m(pid=6393)[0m     @     0x7f24e20edfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6393)[0m     @     0x7f24df3e164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6393)[0m     @     0x7f24df3e4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6393)[0m     @     0x7f24df3e4b53 at::TensorIterator::for_each()
[2m[36m(pid=6417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6417)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6417)[0m *** SIGSEGV (@0x0) received by PID 6417 (TID 0x7f76fac60700) from PID 0; stack trace: ***
[2m[36m(pid=6417)[0m     @     0x7f76fa839390 (unknown)
[2m[36m(pid=6417)[0m     @     0x7f47fc9e2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6417)[0m     @     0x7f47f9cd664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6417)[0m     @     0x7f47f9cd9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6417)[0m     @     0x7f47f9cd9b53 at::TensorIterator::for_each()
[2m[36m(pid=6417)[0m     @     0x7f47f9cd9e11 at::TensorIterator::for_each()
[2m[36m(pid=6338)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6338)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6338)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6338)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6338)[0m *** SIGSEGV (@0x0) received by PID 6338 (TID 0x7f1b8380a700) from PID 0; stack trace: ***
[2m[36m(pid=6338)[0m     @     0x7f1b833e3390 (unknown)
[2m[36m(pid=6338)[0m     @     0x7eec854a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6338)[0m     @     0x7eec8279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6338)[0m     @     0x7eec82797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6338)[0m     @     0x7eec82797b53 at::TensorIterator::for_each()
[2m[36m(pid=6392)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6392)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6392)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6392)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6392)[0m *** SIGSEGV (@0x0) received by PID 6392 (TID 0x7f1af6ce0700) from PID 0; stack trace: ***
[2m[36m(pid=6392)[0m     @     0x7f1af68b9390 (unknown)
[2m[36m(pid=6392)[0m     @     0x7eebf8a32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6392)[0m     @     0x7eebf5d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6392)[0m     @     0x7eebf5d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6392)[0m     @     0x7eebf5d29b53 at::TensorIterator::for_each()
[2m[36m(pid=6428)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6428)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6428)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6404)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6404)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6404)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6357)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6357)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6357)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6375)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6375)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6375)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6345)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6345)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6345)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6345)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6345)[0m *** SIGSEGV (@0x0) received by PID 6345 (TID 0x7fd00c4b9700) from PID 0; stack trace: ***
[2m[36m(pid=6345)[0m     @     0x7fd00c092390 (unknown)
[2m[36m(pid=6345)[0m     @     0x7fa10e2b2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6345)[0m     @     0x7fa10b5a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6345)[0m     @     0x7fa10b5a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6345)[0m     @     0x7fa10b5a9b53 at::TensorIterator::for_each()
[2m[36m(pid=6345)[0m     @     0x7fa10b5a9e11 at::TensorIterator::for_each()
[2m[36m(pid=6419)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6419)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6419)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6419)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6419)[0m *** SIGSEGV (@0x0) received by PID 6419 (TID 0x7f73fcdfd700) from PID 0; stack trace: ***
[2m[36m(pid=6419)[0m     @     0x7f73fc9d6390 (unknown)
[2m[36m(pid=6419)[0m     @     0x7f44fe9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6419)[0m     @     0x7f44fbcdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6419)[0m     @     0x7f44fbce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6419)[0m     @     0x7f44fbce2b53 at::TensorIterator::for_each()
[2m[36m(pid=6340)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6340)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6340)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6367)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6367)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6367)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6367)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6367)[0m *** SIGSEGV (@0x0) received by PID 6367 (TID 0x7fae3bf12700) from PID 0; stack trace: ***
[2m[36m(pid=6409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6409)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6349)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6349)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6349)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6339)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6339)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6339)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6335)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6335)[0m *** SIGSEGV (@0x0) received by PID 6335 (TID 0x7f3afae6c700) from PID 0; stack trace: ***
[2m[36m(pid=6335)[0m     @     0x7f3afaa45390 (unknown)
[2m[36m(pid=6335)[0m     @     0x7f0bfcc43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6354)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6361)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6361)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6361)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6361)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6365)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6365)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6365)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6366)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6366)[0m *** SIGSEGV (@0x0) received by PID 6366 (TID 0x7f49eb174700) from PID 0; stack trace: ***
[2m[36m(pid=6444)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6444)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6444)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6444)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6444)[0m *** SIGSEGV (@0x0) received by PID 6444 (TID 0x7f89d5900700) from PID 0; stack trace: ***
[2m[36m(pid=6401)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6401)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6401)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6355)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6355)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6355)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6355)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6355)[0m *** SIGSEGV (@0x0) received by PID 6355 (TID 0x7f661c1e2700) from PID 0; stack trace: ***
[2m[36m(pid=6355)[0m     @     0x7f661bdbb390 (unknown)
[2m[36m(pid=6351)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6351)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6351)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6351)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6351)[0m *** SIGSEGV (@0x0) received by PID 6351 (TID 0x7fd3e2519700) from PID 0; stack trace: ***
[2m[36m(pid=6461)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6461)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6461)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6461)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6461)[0m *** SIGSEGV (@0x0) received by PID 6461 (TID 0x7f07252b6700) from PID 0; stack trace: ***
[2m[36m(pid=6435)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6435)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6435)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6418)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6418)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6418)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6418)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6418)[0m *** SIGSEGV (@0x0) received by PID 6418 (TID 0x7f6362e39700) from PID 0; stack trace: ***
[2m[36m(pid=6418)[0m     @     0x7f6362a12390 (unknown)
[2m[36m(pid=6418)[0m     @     0x7f3464a32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6418)[0m     @     0x7f3461d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6413)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6413)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6413)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6413)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6413)[0m *** SIGSEGV (@0x0) received by PID 6413 (TID 0x7f8ba52da700) from PID 0; stack trace: ***
[2m[36m(pid=6413)[0m     @     0x7f8ba4eb3390 (unknown)
[2m[36m(pid=6342)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6342)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6342)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6342)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6342)[0m *** SIGSEGV (@0x0) received by PID 6342 (TID 0x7f185fbdf700) from PID 0; stack trace: ***
[2m[36m(pid=6342)[0m     @     0x7f185f7b8390 (unknown)
[2m[36m(pid=6342)[0m     @     0x7ee961896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6449)[0m     @     0x7f0c60f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6449)[0m     @     0x7f0c60f78b53 at::TensorIterator::for_each()
[2m[36m(pid=6449)[0m     @     0x7f0c60f78e11 at::TensorIterator::for_each()
[2m[36m(pid=6449)[0m     @     0x7f0c63c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6449)[0m     @     0x7f0c63cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6337)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6337)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6337)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6337)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6337)[0m *** SIGSEGV (@0x0) received by PID 6337 (TID 0x7feed23e9700) from PID 0; stack trace: ***
[2m[36m(pid=6337)[0m     @     0x7feed1fc2390 (unknown)
[2m[36m(pid=6337)[0m     @     0x7fbfd409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6337)[0m     @     0x7fbfd138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6376)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6376)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6376)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6376)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6376)[0m *** SIGSEGV (@0x0) received by PID 6376 (TID 0x7fc85f8d8700) from PID 0; stack trace: ***
[2m[36m(pid=6376)[0m     @     0x7fc85f4b1390 (unknown)
[2m[36m(pid=6376)[0m     @     0x7f99616b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6376)[0m     @     0x7f995e9a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6445)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6445)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6445)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6445)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6445)[0m *** SIGSEGV (@0x0) received by PID 6445 (TID 0x7f52de369700) from PID 0; stack trace: ***
[2m[36m(pid=6445)[0m     @     0x7f52ddf42390 (unknown)
[2m[36m(pid=6445)[0m     @     0x7f23e009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6427)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6427)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6427)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6427)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6427)[0m *** SIGSEGV (@0x0) received by PID 6427 (TID 0x7f9182a50700) from PID 0; stack trace: ***
[2m[36m(pid=6427)[0m     @     0x7f9182629390 (unknown)
[2m[36m(pid=6427)[0m     @     0x7f628481bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6427)[0m     @     0x7f6281b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6431)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6431)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6431)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6431)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6431)[0m *** SIGSEGV (@0x0) received by PID 6431 (TID 0x7fc1e62dd700) from PID 0; stack trace: ***
[2m[36m(pid=6431)[0m     @     0x7fc1e5eb6390 (unknown)
[2m[36m(pid=6414)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6414)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6414)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6414)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6414)[0m *** SIGSEGV (@0x0) received by PID 6414 (TID 0x7fccd5248700) from PID 0; stack trace: ***
[2m[36m(pid=6347)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6347)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6347)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6347)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6347)[0m *** SIGSEGV (@0x0) received by PID 6347 (TID 0x7f63f2bf0700) from PID 0; stack trace: ***
[2m[36m(pid=6347)[0m     @     0x7f63f27c9390 (unknown)
[2m[36m(pid=6347)[0m     @     0x7f34f481bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6373)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6373)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6373)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6373)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6373)[0m *** SIGSEGV (@0x0) received by PID 6373 (TID 0x7f5a298a0700) from PID 0; stack trace: ***
[2m[36m(pid=6459)[0m     @     0x7f9711b99e11 at::TensorIterator::for_each()
[2m[36m(pid=6459)[0m     @     0x7f97148b2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6459)[0m     @     0x7f97148d5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6459)[0m     @     0x7f9711913009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6459)[0m     @     0x7f9711911c3f at::native::copy_impl()
[2m[36m(pid=6459)[0m     @     0x7f9711912ed4 at::native::copy_()
[2m[36m(pid=6397)[0m     @     0x7f5dc6012b53 at::TensorIterator::for_each()
[2m[36m(pid=6397)[0m     @     0x7f5dc6012e11 at::TensorIterator::for_each()
[2m[36m(pid=6397)[0m     @     0x7f5dc8d2bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6397)[0m     @     0x7f5dc8d4ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6397)[0m     @     0x7f5dc5d8c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6397)[0m     @     0x7f5dc5d8ac3f at::native::copy_impl()
[2m[36m(pid=6423)[0m     @     0x7f6a21392e11 at::TensorIterator::for_each()
[2m[36m(pid=6423)[0m     @     0x7f6a240abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6423)[0m     @     0x7f6a240cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6423)[0m     @     0x7f6a2110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6423)[0m     @     0x7f6a2110ac3f at::native::copy_impl()
[2m[36m(pid=6423)[0m     @     0x7f6a2110bed4 at::native::copy_()
[2m[36m(pid=6352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6352)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6352)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6352)[0m *** SIGSEGV (@0x0) received by PID 6352 (TID 0x7f4f573c9700) from PID 0; stack trace: ***
[2m[36m(pid=6352)[0m     @     0x7f4f56fa2390 (unknown)
[2m[36m(pid=6352)[0m     @     0x7f205918afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6406)[0m     @     0x7f5113132977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6406)[0m     @     0x7f5113132b53 at::TensorIterator::for_each()
[2m[36m(pid=6406)[0m     @     0x7f5113132e11 at::TensorIterator::for_each()
[2m[36m(pid=6406)[0m     @     0x7f5115e4bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6406)[0m     @     0x7f5115e6ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6341)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6341)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6341)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6341)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6341)[0m *** SIGSEGV (@0x0) received by PID 6341 (TID 0x7fd1bd43e700) from PID 0; stack trace: ***
[2m[36m(pid=6341)[0m     @     0x7fd1bd017390 (unknown)
[2m[36m(pid=6341)[0m     @     0x7fa2bf11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6466)[0m     @     0x7f7ec52a1b53 at::TensorIterator::for_each()
[2m[36m(pid=6466)[0m     @     0x7f7ec52a1e11 at::TensorIterator::for_each()
[2m[36m(pid=6466)[0m     @     0x7f7ec7fbac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6466)[0m     @     0x7f7ec7fddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6466)[0m     @     0x7f7ec501b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6466)[0m     @     0x7f7ec5019c3f at::native::copy_impl()
[2m[36m(pid=6438)[0m     @     0x7f235b58ab53 at::TensorIterator::for_each()
[2m[36m(pid=6438)[0m     @     0x7f235b58ae11 at::TensorIterator::for_each()
[2m[36m(pid=6438)[0m     @     0x7f235e2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6438)[0m     @     0x7f235e2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6438)[0m     @     0x7f235b304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6438)[0m     @     0x7f235b302c3f at::native::copy_impl()
[2m[36m(pid=6446)[0m     @     0x7f9f8eafdb53 at::TensorIterator::for_each()
[2m[36m(pid=6446)[0m     @     0x7f9f8eafde11 at::TensorIterator::for_each()
[2m[36m(pid=6446)[0m     @     0x7f9f91816c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6446)[0m     @     0x7f9f91839cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6446)[0m     @     0x7f9f8e877009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6446)[0m     @     0x7f9f8e875c3f at::native::copy_impl()
[2m[36m(pid=6420)[0m     @     0x7f2ea2d17e11 at::TensorIterator::for_each()
[2m[36m(pid=6420)[0m     @     0x7f2ea5a30c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6420)[0m     @     0x7f2ea5a53cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6420)[0m     @     0x7f2ea2a91009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6420)[0m     @     0x7f2ea2a8fc3f at::native::copy_impl()
[2m[36m(pid=6420)[0m     @     0x7f2ea2a90ed4 at::native::copy_()
[2m[36m(pid=6432)[0m     @     0x7f4ef4f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6432)[0m     @     0x7f4ef4fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6432)[0m     @     0x7f4ef1fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6432)[0m     @     0x7f4ef1fe2c3f at::native::copy_impl()
[2m[36m(pid=6432)[0m     @     0x7f4ef1fe3ed4 at::native::copy_()
[2m[36m(pid=6432)[0m     @     0x7f4ef27265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6448)[0m     @     0x7f2f4ea3db53 at::TensorIterator::for_each()
[2m[36m(pid=6448)[0m     @     0x7f2f4ea3de11 at::TensorIterator::for_each()
[2m[36m(pid=6448)[0m     @     0x7f2f51756c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6448)[0m     @     0x7f2f51779cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6448)[0m     @     0x7f2f4e7b7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6448)[0m     @     0x7f2f4e7b5c3f at::native::copy_impl()
[2m[36m(pid=6441)[0m     @     0x7f1ef4d67b53 at::TensorIterator::for_each()
[2m[36m(pid=6441)[0m     @     0x7f1ef4d67e11 at::TensorIterator::for_each()
[2m[36m(pid=6441)[0m     @     0x7f1ef7a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6441)[0m     @     0x7f1ef7aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6441)[0m     @     0x7f1ef4ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6441)[0m     @     0x7f1ef4adfc3f at::native::copy_impl()
[2m[36m(pid=6434)[0m     @     0x7f6c15d29b53 at::TensorIterator::for_each()
[2m[36m(pid=6434)[0m     @     0x7f6c15d29e11 at::TensorIterator::for_each()
[2m[36m(pid=6434)[0m     @     0x7f6c18a42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6434)[0m     @     0x7f6c18a65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6434)[0m     @     0x7f6c15aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6434)[0m     @     0x7f6c15aa1c3f at::native::copy_impl()
[2m[36m(pid=6442)[0m     @     0x7edbeb58ab53 at::TensorIterator::for_each()
[2m[36m(pid=6442)[0m     @     0x7edbeb58ae11 at::TensorIterator::for_each()
[2m[36m(pid=6442)[0m     @     0x7edbee2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6442)[0m     @     0x7edbee2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6442)[0m     @     0x7edbeb304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6415)[0m     @     0x7ed473b4fe11 at::TensorIterator::for_each()
[2m[36m(pid=6415)[0m     @     0x7ed476868c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6415)[0m     @     0x7ed47688bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6415)[0m     @     0x7ed4738c9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6415)[0m     @     0x7ed4738c7c3f at::native::copy_impl()
[2m[36m(pid=6415)[0m     @     0x7ed4738c8ed4 at::native::copy_()
[2m[36m(pid=6415)[0m     @     0x7ed47400b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6353)[0m     @     0x7f54d735eb53 at::TensorIterator::for_each()
[2m[36m(pid=6353)[0m     @     0x7f54d735ee11 at::TensorIterator::for_each()
[2m[36m(pid=6353)[0m     @     0x7f54da077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6353)[0m     @     0x7f54da09acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6353)[0m     @     0x7f54d70d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6358)[0m     @     0x7f41886d4b53 at::TensorIterator::for_each()
[2m[36m(pid=6358)[0m     @     0x7f41886d4e11 at::TensorIterator::for_each()
[2m[36m(pid=6358)[0m     @     0x7f418b3edc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6358)[0m     @     0x7f418b410cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6358)[0m     @     0x7f418844e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6358)[0m     @     0x7f418844cc3f at::native::copy_impl()
[2m[36m(pid=6426)[0m     @     0x7ef53203fb53 at::TensorIterator::for_each()
[2m[36m(pid=6426)[0m     @     0x7ef53203fe11 at::TensorIterator::for_each()
[2m[36m(pid=6426)[0m     @     0x7ef534d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6426)[0m     @     0x7ef534d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6426)[0m     @     0x7ef531db9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6426)[0m     @     0x7ef531db7c3f at::native::copy_impl()
[2m[36m(pid=6336)[0m     @     0x7f9ffd2e1b53 at::TensorIterator::for_each()
[2m[36m(pid=6336)[0m     @     0x7f9ffd2e1e11 at::TensorIterator::for_each()
[2m[36m(pid=6336)[0m     @     0x7f9fffffac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6336)[0m     @     0x7fa00001dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6336)[0m     @     0x7f9ffd05b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6336)[0m     @     0x7f9ffd059c3f at::native::copy_impl()
[2m[36m(pid=6447)[0m     @     0x7ef118572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6447)[0m     @     0x7ef118570c3f at::native::copy_impl()
[2m[36m(pid=6447)[0m     @     0x7ef118571ed4 at::native::copy_()
[2m[36m(pid=6457)[0m     @     0x7f838a89a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6457)[0m     @     0x7f838a898c3f at::native::copy_impl()
[2m[36m(pid=6457)[0m     @     0x7f838a899ed4 at::native::copy_()
[2m[36m(pid=6412)[0m     @     0x7fc85e907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6412)[0m     @     0x7fc85e905c3f at::native::copy_impl()
[2m[36m(pid=6412)[0m     @     0x7fc85e906ed4 at::native::copy_()
[2m[36m(pid=6364)[0m     @     0x7f50b4a65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6364)[0m     @     0x7f50b1aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6364)[0m     @     0x7f50b1aa1c3f at::native::copy_impl()
[2m[36m(pid=6364)[0m     @     0x7f50b1aa2ed4 at::native::copy_()
[2m[36m(pid=6439)[0m     @     0x7f58f80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6439)[0m     @     0x7f58f80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6439)[0m     @     0x7f58f510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6439)[0m     @     0x7f58f510ac3f at::native::copy_impl()
[2m[36m(pid=6416)[0m     @     0x7f61d203fe11 at::TensorIterator::for_each()
[2m[36m(pid=6416)[0m     @     0x7f61d4d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6416)[0m     @     0x7f61d4d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6416)[0m     @     0x7f61d1db9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6416)[0m     @     0x7f61d1db7c3f at::native::copy_impl()
[2m[36m(pid=6348)[0m     @     0x7f21318b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6348)[0m     @     0x7f21318b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6348)[0m     @     0x7f21318b9b53 at::TensorIterator::for_each()
[2m[36m(pid=6424)[0m     @     0x7efef2b8de11 at::TensorIterator::for_each()
[2m[36m(pid=6424)[0m     @     0x7efef58a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6424)[0m     @     0x7efef58c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6424)[0m     @     0x7efef2907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6424)[0m     @     0x7efef2905c3f at::native::copy_impl()
[2m[36m(pid=6411)[0m     @     0x7f9bee26ae11 at::TensorIterator::for_each()
[2m[36m(pid=6411)[0m     @     0x7f9bf0f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6411)[0m     @     0x7f9bf0fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6411)[0m     @     0x7f9bedfe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6411)[0m     @     0x7f9bedfe2c3f at::native::copy_impl()
[2m[36m(pid=6408)[0m     @     0x7f452712bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6408)[0m     @     0x7f452714ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6408)[0m     @     0x7f452418c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6408)[0m     @     0x7f452418ac3f at::native::copy_impl()
[2m[36m(pid=6393)[0m     @     0x7f24df3e4e11 at::TensorIterator::for_each()
[2m[36m(pid=6393)[0m     @     0x7f24e20fdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6393)[0m     @     0x7f24e2120cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6393)[0m     @     0x7f24df15e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6417)[0m     @     0x7f47fc9f2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6417)[0m     @     0x7f47fca15cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6417)[0m     @     0x7f47f9a53009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6417)[0m     @     0x7f47f9a51c3f at::native::copy_impl()
[2m[36m(pid=6338)[0m     @     0x7eec82797e11 at::TensorIterator::for_each()
[2m[36m(pid=6338)[0m     @     0x7eec854b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6338)[0m     @     0x7eec854d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6338)[0m     @     0x7eec82511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6338)[0m     @     0x7eec8250fc3f at::native::copy_impl()
[2m[36m(pid=6392)[0m     @     0x7eebf5d29e11 at::TensorIterator::for_each()
[2m[36m(pid=6392)[0m     @     0x7eebf8a42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6392)[0m     @     0x7eebf8a65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6392)[0m     @     0x7eebf5aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6392)[0m     @     0x7eebf5aa1c3f at::native::copy_impl()
[2m[36m(pid=6429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6429)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6429)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6429)[0m *** SIGSEGV (@0x0) received by PID 6429 (TID 0x7ff504f4b700) from PID 0; stack trace: ***
[2m[36m(pid=6429)[0m     @     0x7ff504b24390 (unknown)
[2m[36m(pid=6429)[0m     @     0x7fc606cadfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6399)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6399)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6399)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6399)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6399)[0m *** SIGSEGV (@0x0) received by PID 6399 (TID 0x7fb579342700) from PID 0; stack trace: ***
[2m[36m(pid=6399)[0m     @     0x7fb578f1b390 (unknown)
[2m[36m(pid=6399)[0m     @     0x7f867b123fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6428)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6428)[0m *** SIGSEGV (@0x0) received by PID 6428 (TID 0x7f815d2c8700) from PID 0; stack trace: ***
[2m[36m(pid=6428)[0m     @     0x7f815cea1390 (unknown)
[2m[36m(pid=6428)[0m     @     0x7f525f0aefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6428)[0m     @     0x7f525c3a264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6405)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6405)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6405)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6405)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6405)[0m *** SIGSEGV (@0x0) received by PID 6405 (TID 0x7f5e1268b700) from PID 0; stack trace: ***
[2m[36m(pid=6405)[0m     @     0x7f5e12264390 (unknown)
[2m[36m(pid=6405)[0m     @     0x7f2f143b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6404)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6404)[0m *** SIGSEGV (@0x0) received by PID 6404 (TID 0x7fc4d9043700) from PID 0; stack trace: ***
[2m[36m(pid=6404)[0m     @     0x7fc4d8c1c390 (unknown)
[2m[36m(pid=6404)[0m     @     0x7f95dadb2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6404)[0m     @     0x7f95d80a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6357)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6357)[0m *** SIGSEGV (@0x0) received by PID 6357 (TID 0x7f6c0e81c700) from PID 0; stack trace: ***
[2m[36m(pid=6357)[0m     @     0x7f6c0e3f5390 (unknown)
[2m[36m(pid=6357)[0m     @     0x7f3d105c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6357)[0m     @     0x7f3d0d8b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6357)[0m     @     0x7f3d0d8b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6452)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6452)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6452)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6452)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6452)[0m *** SIGSEGV (@0x0) received by PID 6452 (TID 0x7fc80f46c700) from PID 0; stack trace: ***
[2m[36m(pid=6375)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6375)[0m *** SIGSEGV (@0x0) received by PID 6375 (TID 0x7f685dd28700) from PID 0; stack trace: ***
[2m[36m(pid=6375)[0m     @     0x7f685d901390 (unknown)
[2m[36m(pid=6375)[0m     @     0x7f395fa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6375)[0m     @     0x7f395cd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6410)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6410)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6410)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6410)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6410)[0m *** SIGSEGV (@0x0) received by PID 6410 (TID 0x7fafb7d5f700) from PID 0; stack trace: ***
[2m[36m(pid=6410)[0m     @     0x7fafb7938390 (unknown)
[2m[36m(pid=6345)[0m     @     0x7fa10e2c2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6345)[0m     @     0x7fa10e2e5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6345)[0m     @     0x7fa10b323009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6345)[0m     @     0x7fa10b321c3f at::native::copy_impl()
[2m[36m(pid=6419)[0m     @     0x7f44fbce2e11 at::TensorIterator::for_each()
[2m[36m(pid=6419)[0m     @     0x7f44fe9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6419)[0m     @     0x7f44fea1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6419)[0m     @     0x7f44fba5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6419)[0m     @     0x7f44fba5ac3f at::native::copy_impl()
[2m[36m(pid=6396)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6396)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6396)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6396)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6340)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6340)[0m *** SIGSEGV (@0x0) received by PID 6340 (TID 0x7f936c7e3700) from PID 0; stack trace: ***
[2m[36m(pid=6340)[0m     @     0x7f936c3bc390 (unknown)
[2m[36m(pid=6340)[0m     @     0x7f646e5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6340)[0m     @     0x7f646b89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6340)[0m     @     0x7f646b8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6367)[0m     @     0x7fae3baeb390 (unknown)
[2m[36m(pid=6367)[0m     @     0x7f7f3dcfffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6367)[0m     @     0x7f7f3aff364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6367)[0m     @     0x7f7f3aff6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6367)[0m     @     0x7f7f3aff6b53 at::TensorIterator::for_each()
[2m[36m(pid=6409)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6409)[0m *** SIGSEGV (@0x0) received by PID 6409 (TID 0x7fc1fbd24700) from PID 0; stack trace: ***
[2m[36m(pid=6409)[0m     @     0x7fc1fb8fd390 (unknown)
[2m[36m(pid=6409)[0m     @     0x7f92fd9c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6409)[0m     @     0x7f92facbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6409)[0m     @     0x7f92facbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6349)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6349)[0m *** SIGSEGV (@0x0) received by PID 6349 (TID 0x7f2cde9b4700) from PID 0; stack trace: ***
[2m[36m(pid=6349)[0m     @     0x7f2cde58d390 (unknown)
[2m[36m(pid=6349)[0m     @     0x7efde0770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6349)[0m     @     0x7efddda6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6349)[0m     @     0x7efddda67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6339)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6339)[0m *** SIGSEGV (@0x0) received by PID 6339 (TID 0x7f245386c700) from PID 0; stack trace: ***
[2m[36m(pid=6339)[0m     @     0x7f2453445390 (unknown)
[2m[36m(pid=6339)[0m     @     0x7ef555644fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6339)[0m     @     0x7ef55293864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6339)[0m     @     0x7ef55293b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6335)[0m     @     0x7f0bf9f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6335)[0m     @     0x7f0bf9f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6335)[0m     @     0x7f0bf9f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=6335)[0m     @     0x7f0bf9f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=6354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6354)[0m *** SIGSEGV (@0x0) received by PID 6354 (TID 0x7f8f4a491700) from PID 0; stack trace: ***
[2m[36m(pid=6354)[0m     @     0x7f8f4a06a390 (unknown)
[2m[36m(pid=6354)[0m     @     0x7f604c09bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6354)[0m     @     0x7f604938f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6354)[0m     @     0x7f6049392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6361)[0m *** SIGSEGV (@0x0) received by PID 6361 (TID 0x7f8fdb406700) from PID 0; stack trace: ***
[2m[36m(pid=6361)[0m     @     0x7f8fdafdf390 (unknown)
[2m[36m(pid=6361)[0m     @     0x7f60dcf73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6361)[0m     @     0x7f60da26764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6361)[0m     @     0x7f60da26a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6365)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6365)[0m *** SIGSEGV (@0x0) received by PID 6365 (TID 0x7f254b34d700) from PID 0; stack trace: ***
[2m[36m(pid=6365)[0m     @     0x7f254af26390 (unknown)
[2m[36m(pid=6365)[0m     @     0x7ef64d11dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6365)[0m     @     0x7ef64a41164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6365)[0m     @     0x7ef64a414977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6369)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6369)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6369)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6369)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6369)[0m *** SIGSEGV (@0x0) received by PID 6369 (TID 0x7f44ecff0700) from PID 0; stack trace: ***
[2m[36m(pid=6369)[0m     @     0x7f44ecbc9390 (unknown)
[2m[36m(pid=6369)[0m     @     0x7f15eed02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6369)[0m     @     0x7f15ebff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6369)[0m     @     0x7f15ebff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6366)[0m     @     0x7f49ead4d390 (unknown)
[2m[36m(pid=6366)[0m     @     0x7f1aecf59fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6366)[0m     @     0x7f1aea24d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6366)[0m     @     0x7f1aea250977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6444)[0m     @     0x7f89d54d9390 (unknown)
[2m[36m(pid=6444)[0m     @     0x7f5ad75d6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6444)[0m     @     0x7f5ad48ca64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6444)[0m     @     0x7f5ad48cd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6346)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6346)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6346)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6346)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6346)[0m *** SIGSEGV (@0x0) received by PID 6346 (TID 0x7f6d66552700) from PID 0; stack trace: ***
[2m[36m(pid=6346)[0m     @     0x7f6d6612b390 (unknown)
[2m[36m(pid=6346)[0m     @     0x7f3e68000fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6346)[0m     @     0x7f3e652f464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6401)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6401)[0m *** SIGSEGV (@0x0) received by PID 6401 (TID 0x7f3864bfa700) from PID 0; stack trace: ***
[2m[36m(pid=6401)[0m     @     0x7f38647d3390 (unknown)
[2m[36m(pid=6401)[0m     @     0x7f09667dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6401)[0m     @     0x7f0963ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6401)[0m     @     0x7f0963ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6355)[0m     @     0x7f371dfddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6355)[0m     @     0x7f371b2d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6355)[0m     @     0x7f371b2d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6355)[0m     @     0x7f371b2d4b53 at::TensorIterator::for_each()
[2m[36m(pid=6351)[0m     @     0x7fd3e20f2390 (unknown)
[2m[36m(pid=6351)[0m     @     0x7fa4e431ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6351)[0m     @     0x7fa4e161364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6351)[0m     @     0x7fa4e1616977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6351)[0m     @     0x7fa4e1616b53 at::TensorIterator::for_each()
[2m[36m(pid=6461)[0m     @     0x7f0724e8f390 (unknown)
[2m[36m(pid=6461)[0m     @     0x7ed827089fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6461)[0m     @     0x7ed82437d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6461)[0m     @     0x7ed824380977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6461)[0m     @     0x7ed824380b53 at::TensorIterator::for_each()
[2m[36m(pid=6435)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6435)[0m *** SIGSEGV (@0x0) received by PID 6435 (TID 0x7efdcea2a700) from PID 0; stack trace: ***
[2m[36m(pid=6435)[0m     @     0x7efdce603390 (unknown)
[2m[36m(pid=6435)[0m     @     0x7eced05dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6435)[0m     @     0x7ececd8d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6418)[0m     @     0x7f3461d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6418)[0m     @     0x7f3461d29b53 at::TensorIterator::for_each()
[2m[36m(pid=6418)[0m     @     0x7f3461d29e11 at::TensorIterator::for_each()
[2m[36m(pid=6418)[0m     @     0x7f3464a42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6413)[0m     @     0x7f5ca70aefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6413)[0m     @     0x7f5ca43a264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6413)[0m     @     0x7f5ca43a5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6413)[0m     @     0x7f5ca43a5b53 at::TensorIterator::for_each()
[2m[36m(pid=6463)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6463)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6463)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6463)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6463)[0m *** SIGSEGV (@0x0) received by PID 6463 (TID 0x7f438d638700) from PID 0; stack trace: ***
[2m[36m(pid=6463)[0m     @     0x7f438d211390 (unknown)
[2m[36m(pid=6342)[0m     @     0x7ee95eb8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6342)[0m     @     0x7ee95eb8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6342)[0m     @     0x7ee95eb8db53 at::TensorIterator::for_each()
[2m[36m(pid=6449)[0m     @     0x7f0c60cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6449)[0m     @     0x7f0c60cf0c3f at::native::copy_impl()
[2m[36m(pid=6449)[0m     @     0x7f0c60cf1ed4 at::native::copy_()
[2m[36m(pid=6337)[0m     @     0x7fbfd1392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6337)[0m     @     0x7fbfd1392b53 at::TensorIterator::for_each()
[2m[36m(pid=6376)[0m     @     0x7f995e9a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6376)[0m     @     0x7f995e9a8b53 at::TensorIterator::for_each()
[2m[36m(pid=6445)[0m     @     0x7f23dd38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6445)[0m     @     0x7f23dd392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6445)[0m     @     0x7f23dd392b53 at::TensorIterator::for_each()
[2m[36m(pid=6427)[0m     @     0x7f6281b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6427)[0m     @     0x7f6281b12b53 at::TensorIterator::for_each()
[2m[36m(pid=6427)[0m     @     0x7f6281b12e11 at::TensorIterator::for_each()
[2m[36m(pid=6427)[0m     @     0x7f628482bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6427)[0m     @     0x7f628484ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6431)[0m     @     0x7f92e809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6431)[0m     @     0x7f92e538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6431)[0m     @     0x7f92e5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6431)[0m     @     0x7f92e5392b53 at::TensorIterator::for_each()
[2m[36m(pid=6414)[0m     @     0x7fccd4e21390 (unknown)
[2m[36m(pid=6414)[0m     @     0x7f9dd701bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6414)[0m     @     0x7f9dd430f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6414)[0m     @     0x7f9dd4312977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6421)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6421)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6421)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6421)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6347)[0m     @     0x7f34f1b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6347)[0m     @     0x7f34f1b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6347)[0m     @     0x7f34f1b12b53 at::TensorIterator::for_each()
[2m[36m(pid=6373)[0m     @     0x7f5a29479390 (unknown)
[2m[36m(pid=6373)[0m     @     0x7f2b2b643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6373)[0m     @     0x7f2b2893764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6373)[0m     @     0x7f2b2893a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6459)[0m     @     0x7f97120555cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6459)[0m     @     0x7f971215d148 at::Tensor::copy_()
[2m[36m(pid=6459)[0m     @     0x7f9713d54989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6459)[0m     @     0x7f97120555cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6459)[0m     @     0x7f971215d148 at::Tensor::copy_()
[2m[36m(pid=6459)[0m     @     0x7f9718413bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6459)[0m     @     0x5583e51dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6459)[0m     @     0x5583e513ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6459)[0m     @     0x5583e51c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6459)[0m     @     0x5583e51c6a20 method_vectorcall
[2m[36m(pid=6459)[0m     @     0x5583e513abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6459)[0m     @     0x5583e51c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6459)[0m     @     0x5583e51c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6459)[0m     @     0x5583e513b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6397)[0m     @     0x7f5dc5d8bed4 at::native::copy_()
[2m[36m(pid=6397)[0m     @     0x7f5dc64ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6397)[0m     @     0x7f5dc65d6148 at::Tensor::copy_()
[2m[36m(pid=6397)[0m     @     0x7f5dc81cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6423)[0m     @     0x7f6a2184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6423)[0m     @     0x7f6a21956148 at::Tensor::copy_()
[2m[36m(pid=6423)[0m     @     0x7f6a2354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6423)[0m     @     0x7f6a2184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6352)[0m     @     0x7f205647e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6352)[0m     @     0x7f2056481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6352)[0m     @     0x7f2056481b53 at::TensorIterator::for_each()
[2m[36m(pid=6352)[0m     @     0x7f2056481e11 at::TensorIterator::for_each()
[2m[36m(pid=6352)[0m     @     0x7f205919ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6406)[0m     @     0x7f5112eac009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6406)[0m     @     0x7f5112eaac3f at::native::copy_impl()
[2m[36m(pid=6406)[0m     @     0x7f5112eabed4 at::native::copy_()
[2m[36m(pid=6406)[0m     @     0x7f51135ee5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6406)[0m     @     0x7f51136f6148 at::Tensor::copy_()
[2m[36m(pid=6406)[0m     @     0x7f51152ed989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6341)[0m     @     0x7fa2bc40f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6341)[0m     @     0x7fa2bc412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6341)[0m     @     0x7fa2bc412b53 at::TensorIterator::for_each()
[2m[36m(pid=6341)[0m     @     0x7fa2bc412e11 at::TensorIterator::for_each()
[2m[36m(pid=6341)[0m     @     0x7fa2bf12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6466)[0m     @     0x7f7ec501aed4 at::native::copy_()
[2m[36m(pid=6466)[0m     @     0x7f7ec575d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6466)[0m     @     0x7f7ec5865148 at::Tensor::copy_()
[2m[36m(pid=6466)[0m     @     0x7f7ec745c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6438)[0m     @     0x7f235b303ed4 at::native::copy_()
[2m[36m(pid=6438)[0m     @     0x7f235ba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6438)[0m     @     0x7f235bb4e148 at::Tensor::copy_()
[2m[36m(pid=6438)[0m     @     0x7f235d745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6446)[0m     @     0x7f9f8e876ed4 at::native::copy_()
[2m[36m(pid=6446)[0m     @     0x7f9f8efb95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6446)[0m     @     0x7f9f8f0c1148 at::Tensor::copy_()
[2m[36m(pid=6446)[0m     @     0x7f9f90cb8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6420)[0m     @     0x7f2ea31d35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6420)[0m     @     0x7f2ea32db148 at::Tensor::copy_()
[2m[36m(pid=6420)[0m     @     0x7f2ea4ed2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6420)[0m     @     0x7f2ea31d35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6420)[0m     @     0x7f2ea32db148 at::Tensor::copy_()
[2m[36m(pid=6432)[0m     @     0x7f4ef282e148 at::Tensor::copy_()
[2m[36m(pid=6432)[0m     @     0x7f4ef4425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6432)[0m     @     0x7f4ef27265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6432)[0m     @     0x7f4ef282e148 at::Tensor::copy_()
[2m[36m(pid=6432)[0m     @     0x7f4ef8ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6432)[0m     @     0x555c3fe7cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6432)[0m     @     0x555c3fdd7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6448)[0m     @     0x7f2f4e7b6ed4 at::native::copy_()
[2m[36m(pid=6448)[0m     @     0x7f2f4eef95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6448)[0m     @     0x7f2f4f001148 at::Tensor::copy_()
[2m[36m(pid=6448)[0m     @     0x7f2f50bf8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6441)[0m     @     0x7f1ef4ae0ed4 at::native::copy_()
[2m[36m(pid=6441)[0m     @     0x7f1ef52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6441)[0m     @     0x7f1ef532b148 at::Tensor::copy_()
[2m[36m(pid=6441)[0m     @     0x7f1ef6f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6434)[0m     @     0x7f6c15aa2ed4 at::native::copy_()
[2m[36m(pid=6434)[0m     @     0x7f6c161e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6434)[0m     @     0x7f6c162ed148 at::Tensor::copy_()
[2m[36m(pid=6434)[0m     @     0x7f6c17ee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6442)[0m     @     0x7edbeb302c3f at::native::copy_impl()
[2m[36m(pid=6442)[0m     @     0x7edbeb303ed4 at::native::copy_()
[2m[36m(pid=6442)[0m     @     0x7edbeba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6442)[0m     @     0x7edbebb4e148 at::Tensor::copy_()
[2m[36m(pid=6442)[0m     @     0x7edbed745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6415)[0m     @     0x7ed474113148 at::Tensor::copy_()
[2m[36m(pid=6415)[0m     @     0x7ed475d0a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6415)[0m     @     0x7ed47400b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6415)[0m     @     0x7ed474113148 at::Tensor::copy_()
[2m[36m(pid=6415)[0m     @     0x7ed47a3c9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6415)[0m     @     0x555ae2925fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6415)[0m     @     0x555ae2880b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6415)[0m     @     0x555ae290bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6415)[0m     @     0x555ae290ca20 method_vectorcall
[2m[36m(pid=6415)[0m     @     0x555ae2880bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6415)[0m     @     0x555ae290bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6415)[0m     @     0x555ae290c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6415)[0m     @     0x555ae2881689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6415)[0m     @     0x555ae290bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6415)[0m     @     0x555ae290c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6415)[0m     @     0x555ae2881689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6415)[0m     @     0x555ae290bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6415)[0m     @     0x555ae290c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6415)[0m     @     0x555ae2881689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6415)[0m     @     0x555ae290bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6353)[0m     @     0x7f54d70d6c3f at::native::copy_impl()
[2m[36m(pid=6353)[0m     @     0x7f54d70d7ed4 at::native::copy_()
[2m[36m(pid=6353)[0m     @     0x7f54d781a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6353)[0m     @     0x7f54d7922148 at::Tensor::copy_()
[2m[36m(pid=6353)[0m     @     0x7f54d9519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6358)[0m     @     0x7f418844ded4 at::native::copy_()
[2m[36m(pid=6358)[0m     @     0x7f4188b905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6358)[0m     @     0x7f4188c98148 at::Tensor::copy_()
[2m[36m(pid=6358)[0m     @     0x7f418a88f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6426)[0m     @     0x7ef531db8ed4 at::native::copy_()
[2m[36m(pid=6426)[0m     @     0x7ef5324fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6426)[0m     @     0x7ef532603148 at::Tensor::copy_()
[2m[36m(pid=6426)[0m     @     0x7ef5341fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6336)[0m     @     0x7f9ffd05aed4 at::native::copy_()
[2m[36m(pid=6336)[0m     @     0x7f9ffd79d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6336)[0m     @     0x7f9ffd8a5148 at::Tensor::copy_()
[2m[36m(pid=6336)[0m     @     0x7f9fff49c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6447)[0m     @     0x7ef118cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6447)[0m     @     0x7ef118dbc148 at::Tensor::copy_()
[2m[36m(pid=6447)[0m     @     0x7ef11a9b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6447)[0m     @     0x7ef118cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6447)[0m     @     0x7ef118dbc148 at::Tensor::copy_()
[2m[36m(pid=6447)[0m     @     0x7ef11f072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6447)[0m     @     0x55af32066fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6447)[0m     @     0x55af31fc1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6457)[0m     @     0x7f838afdc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6457)[0m     @     0x7f838b0e4148 at::Tensor::copy_()
[2m[36m(pid=6457)[0m     @     0x7f838ccdb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6457)[0m     @     0x7f838afdc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6412)[0m     @     0x7fc85f0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6412)[0m     @     0x7fc85f151148 at::Tensor::copy_()
[2m[36m(pid=6412)[0m     @     0x7fc860d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6412)[0m     @     0x7fc85f0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6412)[0m     @     0x7fc85f151148 at::Tensor::copy_()
[2m[36m(pid=6364)[0m     @     0x7f50b21e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6364)[0m     @     0x7f50b22ed148 at::Tensor::copy_()
[2m[36m(pid=6364)[0m     @     0x7f50b3ee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6364)[0m     @     0x7f50b21e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6439)[0m     @     0x7f58f510bed4 at::native::copy_()
[2m[36m(pid=6439)[0m     @     0x7f58f584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6439)[0m     @     0x7f58f5956148 at::Tensor::copy_()
[2m[36m(pid=6439)[0m     @     0x7f58f754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6439)[0m     @     0x7f58f584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6416)[0m     @     0x7f61d1db8ed4 at::native::copy_()
[2m[36m(pid=6416)[0m     @     0x7f61d24fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6416)[0m     @     0x7f61d2603148 at::Tensor::copy_()
[2m[36m(pid=6416)[0m     @     0x7f61d41fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6348)[0m     @     0x7f21318b9e11 at::TensorIterator::for_each()
[2m[36m(pid=6348)[0m     @     0x7f21345d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6348)[0m     @     0x7f21345f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6348)[0m     @     0x7f2131633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6348)[0m     @     0x7f2131631c3f at::native::copy_impl()
[2m[36m(pid=6348)[0m     @     0x7f2131632ed4 at::native::copy_()
[2m[36m(pid=6424)[0m     @     0x7efef2906ed4 at::native::copy_()
[2m[36m(pid=6424)[0m     @     0x7efef30495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6424)[0m     @     0x7efef3151148 at::Tensor::copy_()
[2m[36m(pid=6424)[0m     @     0x7efef4d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6411)[0m     @     0x7f9bedfe3ed4 at::native::copy_()
[2m[36m(pid=6411)[0m     @     0x7f9bee7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6411)[0m     @     0x7f9bee82e148 at::Tensor::copy_()
[2m[36m(pid=6411)[0m     @     0x7f9bf0425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6408)[0m     @     0x7f452418bed4 at::native::copy_()
[2m[36m(pid=6408)[0m     @     0x7f45248ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6408)[0m     @     0x7f45249d6148 at::Tensor::copy_()
[2m[36m(pid=6408)[0m     @     0x7f45265cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6393)[0m     @     0x7f24df15cc3f at::native::copy_impl()
[2m[36m(pid=6393)[0m     @     0x7f24df15ded4 at::native::copy_()
[2m[36m(pid=6393)[0m     @     0x7f24df8a05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6393)[0m     @     0x7f24df9a8148 at::Tensor::copy_()
[2m[36m(pid=6393)[0m     @     0x7f24e159f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6417)[0m     @     0x7f47f9a52ed4 at::native::copy_()
[2m[36m(pid=6417)[0m     @     0x7f47fa1955cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6417)[0m     @     0x7f47fa29d148 at::Tensor::copy_()
[2m[36m(pid=6417)[0m     @     0x7f47fbe94989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6338)[0m     @     0x7eec82510ed4 at::native::copy_()
[2m[36m(pid=6338)[0m     @     0x7eec82c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6338)[0m     @     0x7eec82d5b148 at::Tensor::copy_()
[2m[36m(pid=6338)[0m     @     0x7eec84952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6392)[0m     @     0x7eebf5aa2ed4 at::native::copy_()
[2m[36m(pid=6392)[0m     @     0x7eebf61e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6392)[0m     @     0x7eebf62ed148 at::Tensor::copy_()
[2m[36m(pid=6392)[0m     @     0x7eebf7ee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6429)[0m     @     0x7fc603fa164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6429)[0m     @     0x7fc603fa4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6429)[0m     @     0x7fc603fa4b53 at::TensorIterator::for_each()
[2m[36m(pid=6399)[0m     @     0x7f867841764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6399)[0m     @     0x7f867841a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6399)[0m     @     0x7f867841ab53 at::TensorIterator::for_each()
[2m[36m(pid=6399)[0m     @     0x7f867841ae11 at::TensorIterator::for_each()
[2m[36m(pid=6428)[0m     @     0x7f525c3a5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6428)[0m     @     0x7f525c3a5b53 at::TensorIterator::for_each()
[2m[36m(pid=6428)[0m     @     0x7f525c3a5e11 at::TensorIterator::for_each()
[2m[36m(pid=6428)[0m     @     0x7f525f0bec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6428)[0m     @     0x7f525f0e1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6405)[0m     @     0x7f2f116a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6405)[0m     @     0x7f2f116a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6405)[0m     @     0x7f2f116a8b53 at::TensorIterator::for_each()
[2m[36m(pid=6405)[0m     @     0x7f2f116a8e11 at::TensorIterator::for_each()
[2m[36m(pid=6405)[0m     @     0x7f2f143c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6404)[0m     @     0x7f95d80a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6404)[0m     @     0x7f95d80a9b53 at::TensorIterator::for_each()
[2m[36m(pid=6404)[0m     @     0x7f95d80a9e11 at::TensorIterator::for_each()
[2m[36m(pid=6404)[0m     @     0x7f95dadc2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6404)[0m     @     0x7f95dade5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6357)[0m     @     0x7f3d0d8b9b53 at::TensorIterator::for_each()
[2m[36m(pid=6357)[0m     @     0x7f3d0d8b9e11 at::TensorIterator::for_each()
[2m[36m(pid=6357)[0m     @     0x7f3d105d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6357)[0m     @     0x7f3d105f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6357)[0m     @     0x7f3d0d633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6357)[0m     @     0x7f3d0d631c3f at::native::copy_impl()
[2m[36m(pid=6452)[0m     @     0x7fc80f045390 (unknown)
[2m[36m(pid=6452)[0m     @     0x7f991124bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6452)[0m     @     0x7f990e53f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6344)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=6344)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=6344)[0m *** Aborted at 1604573844 (unix time) try "date -d @1604573844" if you are using GNU date ***
[2m[36m(pid=6344)[0m PC: @                0x0 (unknown)
[2m[36m(pid=6344)[0m *** SIGSEGV (@0x0) received by PID 6344 (TID 0x7f11e2073700) from PID 0; stack trace: ***
[2m[36m(pid=6344)[0m     @     0x7f11e1c4c390 (unknown)
[2m[36m(pid=6344)[0m     @     0x7ee2e3e63fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6344)[0m     @     0x7ee2e115764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6375)[0m     @     0x7f395cd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6375)[0m     @     0x7f395cd67b53 at::TensorIterator::for_each()
[2m[36m(pid=6375)[0m     @     0x7f395cd67e11 at::TensorIterator::for_each()
[2m[36m(pid=6375)[0m     @     0x7f395fa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6375)[0m     @     0x7f395faa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6410)[0m     @     0x7f80b99c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6410)[0m     @     0x7f80b6cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6410)[0m     @     0x7f80b6cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6410)[0m     @     0x7f80b6cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=6410)[0m     @     0x7f80b6cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=6345)[0m     @     0x7fa10b322ed4 at::native::copy_()
[2m[36m(pid=6345)[0m     @     0x7fa10ba655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6345)[0m     @     0x7fa10bb6d148 at::Tensor::copy_()
[2m[36m(pid=6345)[0m     @     0x7fa10d764989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6419)[0m     @     0x7f44fba5bed4 at::native::copy_()
[2m[36m(pid=6419)[0m     @     0x7f44fc19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6419)[0m     @     0x7f44fc2a6148 at::Tensor::copy_()
[2m[36m(pid=6419)[0m     @     0x7f44fde9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6396)[0m *** SIGSEGV (@0x0) received by PID 6396 (TID 0x7f47260ca700) from PID 0; stack trace: ***
[2m[36m(pid=6396)[0m     @     0x7f4725ca3390 (unknown)
[2m[36m(pid=6396)[0m     @     0x7f1827c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6396)[0m     @     0x7f1824f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6340)[0m     @     0x7f646b8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=6340)[0m     @     0x7f646b8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=6340)[0m     @     0x7f646e5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6340)[0m     @     0x7f646e5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6340)[0m     @     0x7f646b61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6367)[0m     @     0x7f7f3aff6e11 at::TensorIterator::for_each()
[2m[36m(pid=6367)[0m     @     0x7f7f3dd0fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6367)[0m     @     0x7f7f3dd32cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6367)[0m     @     0x7f7f3ad70009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6367)[0m     @     0x7f7f3ad6ec3f at::native::copy_impl()
[2m[36m(pid=6409)[0m     @     0x7f92facbfb53 at::TensorIterator::for_each()
[2m[36m(pid=6409)[0m     @     0x7f92facbfe11 at::TensorIterator::for_each()
[2m[36m(pid=6409)[0m     @     0x7f92fd9d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6409)[0m     @     0x7f92fd9fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6409)[0m     @     0x7f92faa39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6349)[0m     @     0x7efddda67b53 at::TensorIterator::for_each()
[2m[36m(pid=6349)[0m     @     0x7efddda67e11 at::TensorIterator::for_each()
[2m[36m(pid=6349)[0m     @     0x7efde0780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6349)[0m     @     0x7efde07a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6339)[0m     @     0x7ef55293bb53 at::TensorIterator::for_each()
[2m[36m(pid=6339)[0m     @     0x7ef55293be11 at::TensorIterator::for_each()
[2m[36m(pid=6339)[0m     @     0x7ef555654c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6339)[0m     @     0x7ef555677cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6335)[0m     @     0x7f0bfcc53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6335)[0m     @     0x7f0bfcc76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6335)[0m     @     0x7f0bf9cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6335)[0m     @     0x7f0bf9cb2c3f at::native::copy_impl()
[2m[36m(pid=6335)[0m     @     0x7f0bf9cb3ed4 at::native::copy_()
[2m[36m(pid=6354)[0m     @     0x7f6049392b53 at::TensorIterator::for_each()
[2m[36m(pid=6354)[0m     @     0x7f6049392e11 at::TensorIterator::for_each()
[2m[36m(pid=6354)[0m     @     0x7f604c0abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6354)[0m     @     0x7f604c0cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6361)[0m     @     0x7f60da26ab53 at::TensorIterator::for_each()
[2m[36m(pid=6361)[0m     @     0x7f60da26ae11 at::TensorIterator::for_each()
[2m[36m(pid=6361)[0m     @     0x7f60dcf83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6361)[0m     @     0x7f60dcfa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6361)[0m     @     0x7f60d9fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6365)[0m     @     0x7ef64a414b53 at::TensorIterator::for_each()
[2m[36m(pid=6365)[0m     @     0x7ef64a414e11 at::TensorIterator::for_each()
[2m[36m(pid=6365)[0m     @     0x7ef64d12dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6365)[0m     @     0x7ef64d150cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6369)[0m     @     0x7f15ebff9b53 at::TensorIterator::for_each()
[2m[36m(pid=6369)[0m     @     0x7f15ebff9e11 at::TensorIterator::for_each()
[2m[36m(pid=6369)[0m     @     0x7f15eed12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6369)[0m     @     0x7f15eed35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6366)[0m     @     0x7f1aea250b53 at::TensorIterator::for_each()
[2m[36m(pid=6366)[0m     @     0x7f1aea250e11 at::TensorIterator::for_each()
[2m[36m(pid=6366)[0m     @     0x7f1aecf69c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6366)[0m     @     0x7f1aecf8ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6366)[0m     @     0x7f1ae9fca009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6444)[0m     @     0x7f5ad48cdb53 at::TensorIterator::for_each()
[2m[36m(pid=6444)[0m     @     0x7f5ad48cde11 at::TensorIterator::for_each()
[2m[36m(pid=6444)[0m     @     0x7f5ad75e6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6444)[0m     @     0x7f5ad7609cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6444)[0m     @     0x7f5ad4647009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6346)[0m     @     0x7f3e652f7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6346)[0m     @     0x7f3e652f7b53 at::TensorIterator::for_each()
[2m[36m(pid=6346)[0m     @     0x7f3e652f7e11 at::TensorIterator::for_each()
[2m[36m(pid=6346)[0m     @     0x7f3e68010c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6401)[0m     @     0x7f0963ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=6401)[0m     @     0x7f0963ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=6401)[0m     @     0x7f09667eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6401)[0m     @     0x7f096680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6401)[0m     @     0x7f096384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6401)[0m     @     0x7f0963849c3f at::native::copy_impl()
[2m[36m(pid=6355)[0m     @     0x7f371b2d4e11 at::TensorIterator::for_each()
[2m[36m(pid=6355)[0m     @     0x7f371dfedc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6355)[0m     @     0x7f371e010cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6355)[0m     @     0x7f371b04e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6355)[0m     @     0x7f371b04cc3f at::native::copy_impl()
[2m[36m(pid=6355)[0m     @     0x7f371b04ded4 at::native::copy_()
[2m[36m(pid=6351)[0m     @     0x7fa4e1616e11 at::TensorIterator::for_each()
[2m[36m(pid=6351)[0m     @     0x7fa4e432fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6351)[0m     @     0x7fa4e4352cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6351)[0m     @     0x7fa4e1390009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6351)[0m     @     0x7fa4e138ec3f at::native::copy_impl()
[2m[36m(pid=6351)[0m     @     0x7fa4e138fed4 at::native::copy_()
[2m[36m(pid=6461)[0m     @     0x7ed824380e11 at::TensorIterator::for_each()
[2m[36m(pid=6461)[0m     @     0x7ed827099c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6461)[0m     @     0x7ed8270bccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6461)[0m     @     0x7ed8240fa009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6461)[0m     @     0x7ed8240f8c3f at::native::copy_impl()
[2m[36m(pid=6461)[0m     @     0x7ed8240f9ed4 at::native::copy_()
[2m[36m(pid=6435)[0m     @     0x7ececd8d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6435)[0m     @     0x7ececd8d3b53 at::TensorIterator::for_each()
[2m[36m(pid=6435)[0m     @     0x7ececd8d3e11 at::TensorIterator::for_each()
[2m[36m(pid=6435)[0m     @     0x7eced05ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6435)[0m     @     0x7eced060fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6418)[0m     @     0x7f3464a65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6418)[0m     @     0x7f3461aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6418)[0m     @     0x7f3461aa1c3f at::native::copy_impl()
[2m[36m(pid=6418)[0m     @     0x7f3461aa2ed4 at::native::copy_()
[2m[36m(pid=6418)[0m     @     0x7f34621e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6413)[0m     @     0x7f5ca43a5e11 at::TensorIterator::for_each()
[2m[36m(pid=6413)[0m     @     0x7f5ca70bec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6413)[0m     @     0x7f5ca70e1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6413)[0m     @     0x7f5ca411f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6413)[0m     @     0x7f5ca411dc3f at::native::copy_impl()
[2m[36m(pid=6413)[0m     @     0x7f5ca411eed4 at::native::copy_()
[2m[36m(pid=6463)[0m     @     0x7f148f3ddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6463)[0m     @     0x7f148c6d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6463)[0m     @     0x7f148c6d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6463)[0m     @     0x7f148c6d4b53 at::TensorIterator::for_each()
[2m[36m(pid=6463)[0m     @     0x7f148c6d4e11 at::TensorIterator::for_each()
[2m[36m(pid=6342)[0m     @     0x7ee95eb8de11 at::TensorIterator::for_each()
[2m[36m(pid=6342)[0m     @     0x7ee9618a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6342)[0m     @     0x7ee9618c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6342)[0m     @     0x7ee95e907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6342)[0m     @     0x7ee95e905c3f at::native::copy_impl()
[2m[36m(pid=6342)[0m     @     0x7ee95e906ed4 at::native::copy_()
[2m[36m(pid=6449)[0m     @     0x7f0c614345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6449)[0m     @     0x7f0c6153c148 at::Tensor::copy_()
[2m[36m(pid=6449)[0m     @     0x7f0c63133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6449)[0m     @     0x7f0c614345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6449)[0m     @     0x7f0c6153c148 at::Tensor::copy_()
[2m[36m(pid=6337)[0m     @     0x7fbfd1392e11 at::TensorIterator::for_each()
[2m[36m(pid=6337)[0m     @     0x7fbfd40abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6337)[0m     @     0x7fbfd40cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6337)[0m     @     0x7fbfd110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6337)[0m     @     0x7fbfd110ac3f at::native::copy_impl()
[2m[36m(pid=6337)[0m     @     0x7fbfd110bed4 at::native::copy_()
[2m[36m(pid=6376)[0m     @     0x7f995e9a8e11 at::TensorIterator::for_each()
[2m[36m(pid=6376)[0m     @     0x7f99616c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6376)[0m     @     0x7f99616e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6376)[0m     @     0x7f995e722009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6376)[0m     @     0x7f995e720c3f at::native::copy_impl()
[2m[36m(pid=6376)[0m     @     0x7f995e721ed4 at::native::copy_()
[2m[36m(pid=6445)[0m     @     0x7f23dd392e11 at::TensorIterator::for_each()
[2m[36m(pid=6445)[0m     @     0x7f23e00abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6445)[0m     @     0x7f23e00cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6445)[0m     @     0x7f23dd10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6445)[0m     @     0x7f23dd10ac3f at::native::copy_impl()
[2m[36m(pid=6445)[0m     @     0x7f23dd10bed4 at::native::copy_()
[2m[36m(pid=6427)[0m     @     0x7f628188c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6427)[0m     @     0x7f628188ac3f at::native::copy_impl()
[2m[36m(pid=6427)[0m     @     0x7f628188bed4 at::native::copy_()
[2m[36m(pid=6427)[0m     @     0x7f6281fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6431)[0m     @     0x7f92e5392e11 at::TensorIterator::for_each()
[2m[36m(pid=6431)[0m     @     0x7f92e80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6431)[0m     @     0x7f92e80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6431)[0m     @     0x7f92e510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6431)[0m     @     0x7f92e510ac3f at::native::copy_impl()
[2m[36m(pid=6414)[0m     @     0x7f9dd4312b53 at::TensorIterator::for_each()
[2m[36m(pid=6414)[0m     @     0x7f9dd4312e11 at::TensorIterator::for_each()
[2m[36m(pid=6414)[0m     @     0x7f9dd702bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6414)[0m     @     0x7f9dd704ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6414)[0m     @     0x7f9dd408c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6414)[0m     @     0x7f9dd408ac3f at::native::copy_impl()
[2m[36m(pid=6421)[0m *** SIGSEGV (@0x0) received by PID 6421 (TID 0x7f7dfaed5700) from PID 0; stack trace: ***
[2m[36m(pid=6421)[0m     @     0x7f7dfaaae390 (unknown)
[2m[36m(pid=6421)[0m     @     0x7f4efccdbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=6421)[0m     @     0x7f4ef9fcf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=6421)[0m     @     0x7f4ef9fd2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6421)[0m     @     0x7f4ef9fd2b53 at::TensorIterator::for_each()
[2m[36m(pid=6347)[0m     @     0x7f34f1b12e11 at::TensorIterator::for_each()
[2m[36m(pid=6347)[0m     @     0x7f34f482bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6347)[0m     @     0x7f34f484ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6347)[0m     @     0x7f34f188c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6347)[0m     @     0x7f34f188ac3f at::native::copy_impl()
[2m[36m(pid=6373)[0m     @     0x7f2b2893ab53 at::TensorIterator::for_each()
[2m[36m(pid=6373)[0m     @     0x7f2b2893ae11 at::TensorIterator::for_each()
[2m[36m(pid=6373)[0m     @     0x7f2b2b653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6373)[0m     @     0x7f2b2b676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6373)[0m     @     0x7f2b286b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6373)[0m     @     0x7f2b286b2c3f at::native::copy_impl()
[2m[36m(pid=6459)[0m     @     0x5583e51c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6459)[0m     @     0x5583e51c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6459)[0m     @     0x5583e513b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6459)[0m     @     0x5583e51c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6459)[0m     @     0x5583e51c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6459)[0m     @     0x5583e513b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6459)[0m     @     0x5583e51c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6397)[0m     @     0x7f5dc64ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6397)[0m     @     0x7f5dc65d6148 at::Tensor::copy_()
[2m[36m(pid=6397)[0m     @     0x7f5dcc88cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6397)[0m     @     0x55eba03a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6397)[0m     @     0x55eba0303b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6397)[0m     @     0x55eba038ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6397)[0m     @     0x55eba038fa20 method_vectorcall
[2m[36m(pid=6397)[0m     @     0x55eba0303bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6397)[0m     @     0x55eba038ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6397)[0m     @     0x55eba038f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6397)[0m     @     0x55eba0304689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6397)[0m     @     0x55eba038ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6397)[0m     @     0x55eba038f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6397)[0m     @     0x55eba0304689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6397)[0m     @     0x55eba038ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6423)[0m     @     0x7f6a21956148 at::Tensor::copy_()
[2m[36m(pid=6423)[0m     @     0x7f6a27c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6423)[0m     @     0x560b4a287fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6423)[0m     @     0x560b4a1e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6423)[0m     @     0x560b4a26dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6423)[0m     @     0x560b4a26ea20 method_vectorcall
[2m[36m(pid=6423)[0m     @     0x560b4a1e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6423)[0m     @     0x560b4a26dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6423)[0m     @     0x560b4a26e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6423)[0m     @     0x560b4a1e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6423)[0m     @     0x560b4a26dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6423)[0m     @     0x560b4a26e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6423)[0m     @     0x560b4a1e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6423)[0m     @     0x560b4a26dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6423)[0m     @     0x560b4a26e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6423)[0m     @     0x560b4a1e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6423)[0m     @     0x560b4a26dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6352)[0m     @     0x7f20591bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6352)[0m     @     0x7f20561fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6352)[0m     @     0x7f20561f9c3f at::native::copy_impl()
[2m[36m(pid=6352)[0m     @     0x7f20561faed4 at::native::copy_()
[2m[36m(pid=6406)[0m     @     0x7f51135ee5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6406)[0m     @     0x7f51136f6148 at::Tensor::copy_()
[2m[36m(pid=6406)[0m     @     0x7f512ca2ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6406)[0m     @     0x55fb524b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6406)[0m     @     0x55fb5240cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6406)[0m     @     0x55fb52497baf _PyEval_EvalCodeWithName
[2m[36m(pid=6406)[0m     @     0x55fb52498a20 method_vectorcall
[2m[36m(pid=6406)[0m     @     0x55fb5240cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6341)[0m     @     0x7fa2bf14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6341)[0m     @     0x7fa2bc18c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6341)[0m     @     0x7fa2bc18ac3f at::native::copy_impl()
[2m[36m(pid=6341)[0m     @     0x7fa2bc18bed4 at::native::copy_()
[2m[36m(pid=6466)[0m     @     0x7f7ec575d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6466)[0m     @     0x7f7ec5865148 at::Tensor::copy_()
[2m[36m(pid=6466)[0m     @     0x7f7ecbb1bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6466)[0m     @     0x55f797d30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6466)[0m     @     0x55f797c8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6466)[0m     @     0x55f797d16baf _PyEval_EvalCodeWithName
[2m[36m(pid=6466)[0m     @     0x55f797d17a20 method_vectorcall
[2m[36m(pid=6466)[0m     @     0x55f797c8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6466)[0m     @     0x55f797d16baf _PyEval_EvalCodeWithName
[2m[36m(pid=6466)[0m     @     0x55f797d17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6466)[0m     @     0x55f797c8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6466)[0m     @     0x55f797d16baf _PyEval_EvalCodeWithName
[2m[36m(pid=6466)[0m     @     0x55f797d17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6466)[0m     @     0x55f797c8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6466)[0m     @     0x55f797d16baf _PyEval_EvalCodeWithName
[2m[36m(pid=6466)[0m     @     0x55f797d17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6466)[0m     @     0x55f797c8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6466)[0m     @     0x55f797d16baf _PyEval_EvalCodeWithName
[2m[36m(pid=6438)[0m     @     0x7f235ba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6438)[0m     @     0x7f235bb4e148 at::Tensor::copy_()
[2m[36m(pid=6438)[0m     @     0x7f2361e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6438)[0m     @     0x55f409de1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6438)[0m     @     0x55f409d3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6438)[0m     @     0x55f409dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6438)[0m     @     0x55f409dc8a20 method_vectorcall
[2m[36m(pid=6438)[0m     @     0x55f409d3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6438)[0m     @     0x55f409dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6438)[0m     @     0x55f409dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6438)[0m     @     0x55f409d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6438)[0m     @     0x55f409dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6438)[0m     @     0x55f409dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6438)[0m     @     0x55f409d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6438)[0m     @     0x55f409dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6438)[0m     @     0x55f409dc8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6438)[0m     @     0x55f409d3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6438)[0m     @     0x55f409dc7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6446)[0m     @     0x7f9f8efb95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6446)[0m     @     0x7f9f8f0c1148 at::Tensor::copy_()
[2m[36m(pid=6446)[0m     @     0x7f9f95377bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6446)[0m     @     0x564a7b735fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6446)[0m     @     0x564a7b690b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6446)[0m     @     0x564a7b71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6446)[0m     @     0x564a7b71ca20 method_vectorcall
[2m[36m(pid=6446)[0m     @     0x564a7b690bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6446)[0m     @     0x564a7b71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6446)[0m     @     0x564a7b71c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6446)[0m     @     0x564a7b691689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6446)[0m     @     0x564a7b71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6446)[0m     @     0x564a7b71c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6446)[0m     @     0x564a7b691689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6446)[0m     @     0x564a7b71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6446)[0m     @     0x564a7b71c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6446)[0m     @     0x564a7b691689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6446)[0m     @     0x564a7b71bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6420)[0m     @     0x7f2ea9591bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6420)[0m     @     0x55f050e91fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6420)[0m     @     0x55f050decb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6420)[0m     @     0x55f050e77baf _PyEval_EvalCodeWithName
[2m[36m(pid=6420)[0m     @     0x55f050e78a20 method_vectorcall
[2m[36m(pid=6420)[0m     @     0x55f050decbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6420)[0m     @     0x55f050e77baf _PyEval_EvalCodeWithName
[2m[36m(pid=6420)[0m     @     0x55f050e78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6420)[0m     @     0x55f050ded689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6420)[0m     @     0x55f050e77baf _PyEval_EvalCodeWithName
[2m[36m(pid=6420)[0m     @     0x55f050e78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6420)[0m     @     0x55f050ded689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6420)[0m     @     0x55f050e77baf _PyEval_EvalCodeWithName
[2m[36m(pid=6420)[0m     @     0x55f050e78643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6420)[0m     @     0x55f050ded689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6420)[0m     @     0x55f050e77baf _PyEval_EvalCodeWithName
[2m[36m(pid=6432)[0m     @     0x555c3fe62baf _PyEval_EvalCodeWithName
[2m[36m(pid=6432)[0m     @     0x555c3fe63a20 method_vectorcall
[2m[36m(pid=6432)[0m     @     0x555c3fdd7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6432)[0m     @     0x555c3fe62baf _PyEval_EvalCodeWithName
[2m[36m(pid=6432)[0m     @     0x555c3fe63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6432)[0m     @     0x555c3fdd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6432)[0m     @     0x555c3fe62baf _PyEval_EvalCodeWithName
[2m[36m(pid=6432)[0m     @     0x555c3fe63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6432)[0m     @     0x555c3fdd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6432)[0m     @     0x555c3fe62baf _PyEval_EvalCodeWithName
[2m[36m(pid=6432)[0m     @     0x555c3fe63643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6432)[0m     @     0x555c3fdd8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6432)[0m     @     0x555c3fe62baf _PyEval_EvalCodeWithName
[2m[36m(pid=6448)[0m     @     0x7f2f4eef95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6448)[0m     @     0x7f2f4f001148 at::Tensor::copy_()
[2m[36m(pid=6448)[0m     @     0x7f2f552b7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6448)[0m     @     0x558826689fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6448)[0m     @     0x5588265e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6448)[0m     @     0x55882666fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6448)[0m     @     0x558826670a20 method_vectorcall
[2m[36m(pid=6448)[0m     @     0x5588265e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6448)[0m     @     0x55882666fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6448)[0m     @     0x558826670643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6448)[0m     @     0x5588265e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6448)[0m     @     0x55882666fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6448)[0m     @     0x558826670643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6448)[0m     @     0x5588265e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6448)[0m     @     0x55882666fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6448)[0m     @     0x558826670643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6448)[0m     @     0x5588265e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6448)[0m     @     0x55882666fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6441)[0m     @     0x7f1ef52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6441)[0m     @     0x7f1ef532b148 at::Tensor::copy_()
[2m[36m(pid=6441)[0m     @     0x7f1efb5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6441)[0m     @     0x564034faafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6441)[0m     @     0x564034f05b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6441)[0m     @     0x564034f90baf _PyEval_EvalCodeWithName
[2m[36m(pid=6441)[0m     @     0x564034f91a20 method_vectorcall
[2m[36m(pid=6441)[0m     @     0x564034f05bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6441)[0m     @     0x564034f90baf _PyEval_EvalCodeWithName
[2m[36m(pid=6441)[0m     @     0x564034f91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6441)[0m     @     0x564034f06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6441)[0m     @     0x564034f90baf _PyEval_EvalCodeWithName
[2m[36m(pid=6441)[0m     @     0x564034f91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6441)[0m     @     0x564034f06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6441)[0m     @     0x564034f90baf _PyEval_EvalCodeWithName
[2m[36m(pid=6441)[0m     @     0x564034f91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6441)[0m     @     0x564034f06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6441)[0m     @     0x564034f90baf _PyEval_EvalCodeWithName
[2m[36m(pid=6434)[0m     @     0x7f6c161e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6434)[0m     @     0x7f6c162ed148 at::Tensor::copy_()
[2m[36m(pid=6434)[0m     @     0x7f6c1c5a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6434)[0m     @     0x556993dc5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6434)[0m     @     0x556993d20b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6434)[0m     @     0x556993dabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6434)[0m     @     0x556993daca20 method_vectorcall
[2m[36m(pid=6434)[0m     @     0x556993d20bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6434)[0m     @     0x556993dabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6434)[0m     @     0x556993dac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6434)[0m     @     0x556993d21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6434)[0m     @     0x556993dabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6434)[0m     @     0x556993dac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6434)[0m     @     0x556993d21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6434)[0m     @     0x556993dabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6434)[0m     @     0x556993dac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6434)[0m     @     0x556993d21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6434)[0m     @     0x556993dabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6442)[0m     @     0x7edbeba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6442)[0m     @     0x7edbebb4e148 at::Tensor::copy_()
[2m[36m(pid=6442)[0m     @     0x7edbf1e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6442)[0m     @     0x556413590fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6442)[0m     @     0x5564134ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6442)[0m     @     0x556413576baf _PyEval_EvalCodeWithName
[2m[36m(pid=6442)[0m     @     0x556413577a20 method_vectorcall
[2m[36m(pid=6442)[0m     @     0x5564134ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6442)[0m     @     0x556413576baf _PyEval_EvalCodeWithName
[2m[36m(pid=6442)[0m     @     0x556413577643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6442)[0m     @     0x5564134ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6442)[0m     @     0x556413576baf _PyEval_EvalCodeWithName
[2m[36m(pid=6442)[0m     @     0x556413577643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6442)[0m     @     0x5564134ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6442)[0m     @     0x556413576baf _PyEval_EvalCodeWithName
[2m[36m(pid=6442)[0m     @     0x556413577643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6442)[0m     @     0x5564134ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6353)[0m     @     0x7f54d781a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6353)[0m     @     0x7f54d7922148 at::Tensor::copy_()
[2m[36m(pid=6353)[0m     @     0x7f54ddbd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6353)[0m     @     0x561d00373fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6353)[0m     @     0x561d002ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6353)[0m     @     0x561d00359baf _PyEval_EvalCodeWithName
[2m[36m(pid=6353)[0m     @     0x561d0035aa20 method_vectorcall
[2m[36m(pid=6353)[0m     @     0x561d002cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6353)[0m     @     0x561d00359baf _PyEval_EvalCodeWithName
[2m[36m(pid=6353)[0m     @     0x561d0035a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6353)[0m     @     0x561d002cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6353)[0m     @     0x561d00359baf _PyEval_EvalCodeWithName
[2m[36m(pid=6353)[0m     @     0x561d0035a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6353)[0m     @     0x561d002cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6353)[0m     @     0x561d00359baf _PyEval_EvalCodeWithName
[2m[36m(pid=6353)[0m     @     0x561d0035a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6353)[0m     @     0x561d002cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6358)[0m     @     0x7f4188b905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6358)[0m     @     0x7f4188c98148 at::Tensor::copy_()
[2m[36m(pid=6358)[0m     @     0x7f418ef4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6358)[0m     @     0x557ca81fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6358)[0m     @     0x557ca8155b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6358)[0m     @     0x557ca81e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6358)[0m     @     0x557ca81e1a20 method_vectorcall
[2m[36m(pid=6358)[0m     @     0x557ca8155bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6358)[0m     @     0x557ca81e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6358)[0m     @     0x557ca81e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6358)[0m     @     0x557ca8156689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6358)[0m     @     0x557ca81e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6358)[0m     @     0x557ca81e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6358)[0m     @     0x557ca8156689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6358)[0m     @     0x557ca81e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6358)[0m     @     0x557ca81e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6358)[0m     @     0x557ca8156689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6358)[0m     @     0x557ca81e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6426)[0m     @     0x7ef5324fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6426)[0m     @     0x7ef532603148 at::Tensor::copy_()
[2m[36m(pid=6426)[0m     @     0x7ef5388b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6426)[0m     @     0x5559e0bd4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6426)[0m     @     0x5559e0b2fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6426)[0m     @     0x5559e0bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6426)[0m     @     0x5559e0bbba20 method_vectorcall
[2m[36m(pid=6426)[0m     @     0x5559e0b2fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6426)[0m     @     0x5559e0bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6426)[0m     @     0x5559e0bbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6426)[0m     @     0x5559e0b30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6426)[0m     @     0x5559e0bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6426)[0m     @     0x5559e0bbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6426)[0m     @     0x5559e0b30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6426)[0m     @     0x5559e0bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6426)[0m     @     0x5559e0bbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6426)[0m     @     0x5559e0b30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6426)[0m     @     0x5559e0bbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6336)[0m     @     0x7f9ffd79d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6336)[0m     @     0x7f9ffd8a5148 at::Tensor::copy_()
[2m[36m(pid=6336)[0m     @     0x7fa003b5bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6336)[0m     @     0x55fb85914fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6336)[0m     @     0x55fb8586fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6336)[0m     @     0x55fb858fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6336)[0m     @     0x55fb858fba20 method_vectorcall
[2m[36m(pid=6336)[0m     @     0x55fb8586fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6336)[0m     @     0x55fb858fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6336)[0m     @     0x55fb858fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6336)[0m     @     0x55fb85870689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6336)[0m     @     0x55fb858fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6336)[0m     @     0x55fb858fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6336)[0m     @     0x55fb85870689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6336)[0m     @     0x55fb858fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6336)[0m     @     0x55fb858fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6336)[0m     @     0x55fb85870689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6336)[0m     @     0x55fb858fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=6447)[0m     @     0x55af3204cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6447)[0m     @     0x55af3204da20 method_vectorcall
[2m[36m(pid=6447)[0m     @     0x55af31fc1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6447)[0m     @     0x55af3204cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6447)[0m     @     0x55af3204d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6447)[0m     @     0x55af31fc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6447)[0m     @     0x55af3204cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6447)[0m     @     0x55af3204d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6447)[0m     @     0x55af31fc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6447)[0m     @     0x55af3204cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6447)[0m     @     0x55af3204d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6447)[0m     @     0x55af31fc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6447)[0m     @     0x55af3204cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6457)[0m     @     0x7f838b0e4148 at::Tensor::copy_()
[2m[36m(pid=6457)[0m     @     0x7f839139abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6457)[0m     @     0x56124767efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6457)[0m     @     0x5612475d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6457)[0m     @     0x561247664baf _PyEval_EvalCodeWithName
[2m[36m(pid=6457)[0m     @     0x561247665a20 method_vectorcall
[2m[36m(pid=6457)[0m     @     0x5612475d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6457)[0m     @     0x561247664baf _PyEval_EvalCodeWithName
[2m[36m(pid=6457)[0m     @     0x561247665643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6457)[0m     @     0x5612475da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6457)[0m     @     0x561247664baf _PyEval_EvalCodeWithName
[2m[36m(pid=6457)[0m     @     0x561247665643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6457)[0m     @     0x5612475da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6457)[0m     @     0x561247664baf _PyEval_EvalCodeWithName
[2m[36m(pid=6457)[0m     @     0x561247665643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6457)[0m     @     0x5612475da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6457)[0m     @     0x561247664baf _PyEval_EvalCodeWithName
[2m[36m(pid=6412)[0m     @     0x7fc865407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6412)[0m     @     0x559a459a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6412)[0m     @     0x559a458fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6412)[0m     @     0x559a45986baf _PyEval_EvalCodeWithName
[2m[36m(pid=6412)[0m     @     0x559a45987a20 method_vectorcall
[2m[36m(pid=6412)[0m     @     0x559a458fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6412)[0m     @     0x559a45986baf _PyEval_EvalCodeWithName
[2m[36m(pid=6412)[0m     @     0x559a45987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6412)[0m     @     0x559a458fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6412)[0m     @     0x559a45986baf _PyEval_EvalCodeWithName
[2m[36m(pid=6412)[0m     @     0x559a45987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6412)[0m     @     0x559a458fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6412)[0m     @     0x559a45986baf _PyEval_EvalCodeWithName
[2m[36m(pid=6412)[0m     @     0x559a45987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6412)[0m     @     0x559a458fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6412)[0m     @     0x559a45986baf _PyEval_EvalCodeWithName
[2m[36m(pid=6364)[0m     @     0x7f50b22ed148 at::Tensor::copy_()
[2m[36m(pid=6364)[0m     @     0x7f50b85a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6364)[0m     @     0x55ef9a164fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6364)[0m     @     0x55ef9a0bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6364)[0m     @     0x55ef9a14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6364)[0m     @     0x55ef9a14ba20 method_vectorcall
[2m[36m(pid=6364)[0m     @     0x55ef9a0bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6364)[0m     @     0x55ef9a14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6364)[0m     @     0x55ef9a14b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6364)[0m     @     0x55ef9a0c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6364)[0m     @     0x55ef9a14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6364)[0m     @     0x55ef9a14b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6364)[0m     @     0x55ef9a0c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6364)[0m     @     0x55ef9a14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6364)[0m     @     0x55ef9a14b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6364)[0m     @     0x55ef9a0c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6364)[0m     @     0x55ef9a14abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6439)[0m     @     0x7f58f5956148 at::Tensor::copy_()
[2m[36m(pid=6439)[0m     @     0x7f58fbc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6439)[0m     @     0x56176bf66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6439)[0m     @     0x56176bec1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6439)[0m     @     0x56176bf4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6439)[0m     @     0x56176bf4da20 method_vectorcall
[2m[36m(pid=6439)[0m     @     0x56176bec1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6439)[0m     @     0x56176bf4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6439)[0m     @     0x56176bf4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6439)[0m     @     0x56176bec2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6439)[0m     @     0x56176bf4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6439)[0m     @     0x56176bf4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6439)[0m     @     0x56176bec2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6439)[0m     @     0x56176bf4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6439)[0m     @     0x56176bf4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6439)[0m     @     0x56176bec2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6439)[0m     @     0x56176bf4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6416)[0m     @     0x7f61d24fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6416)[0m     @     0x7f61d2603148 at::Tensor::copy_()
[2m[36m(pid=6416)[0m     @     0x7f61d88b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6416)[0m     @     0x5582c3bb6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6416)[0m     @     0x5582c3b11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6416)[0m     @     0x5582c3b9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6416)[0m     @     0x5582c3b9da20 method_vectorcall
[2m[36m(pid=6416)[0m     @     0x5582c3b11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6416)[0m     @     0x5582c3b9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6416)[0m     @     0x5582c3b9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6416)[0m     @     0x5582c3b12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6416)[0m     @     0x5582c3b9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6416)[0m     @     0x5582c3b9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6416)[0m     @     0x5582c3b12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6416)[0m     @     0x5582c3b9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6416)[0m     @     0x5582c3b9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6416)[0m     @     0x5582c3b12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6416)[0m     @     0x5582c3b9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6348)[0m     @     0x7f2131d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6348)[0m     @     0x7f2131e7d148 at::Tensor::copy_()
[2m[36m(pid=6348)[0m     @     0x7f2133a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6424)[0m     @     0x7efef30495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6424)[0m     @     0x7efef3151148 at::Tensor::copy_()
[2m[36m(pid=6424)[0m     @     0x7efef9407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6424)[0m     @     0x559e43403fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6424)[0m     @     0x559e4335eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6424)[0m     @     0x559e433e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6424)[0m     @     0x559e433eaa20 method_vectorcall
[2m[36m(pid=6424)[0m     @     0x559e4335ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6424)[0m     @     0x559e433e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6424)[0m     @     0x559e433ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6424)[0m     @     0x559e4335f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6424)[0m     @     0x559e433e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6424)[0m     @     0x559e433ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6424)[0m     @     0x559e4335f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6424)[0m     @     0x559e433e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6424)[0m     @     0x559e433ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6424)[0m     @     0x559e4335f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6424)[0m     @     0x559e433e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6411)[0m     @     0x7f9bee7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6411)[0m     @     0x7f9bee82e148 at::Tensor::copy_()
[2m[36m(pid=6411)[0m     @     0x7f9bf4ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6411)[0m     @     0x5612caaddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6411)[0m     @     0x5612caa38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6411)[0m     @     0x5612caac3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6411)[0m     @     0x5612caac4a20 method_vectorcall
[2m[36m(pid=6411)[0m     @     0x5612caa38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6411)[0m     @     0x5612caac3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6411)[0m     @     0x5612caac4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6411)[0m     @     0x5612caa39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6411)[0m     @     0x5612caac3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6411)[0m     @     0x5612caac4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6411)[0m     @     0x5612caa39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6411)[0m     @     0x5612caac3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6411)[0m     @     0x5612caac4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6411)[0m     @     0x5612caa39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6411)[0m     @     0x5612caac3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6408)[0m     @     0x7f45248ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6408)[0m     @     0x7f45249d6148 at::Tensor::copy_()
[2m[36m(pid=6408)[0m     @     0x7f452ac8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6408)[0m     @     0x55788e701fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6408)[0m     @     0x55788e65cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6408)[0m     @     0x55788e6e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6408)[0m     @     0x55788e6e8a20 method_vectorcall
[2m[36m(pid=6408)[0m     @     0x55788e65cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6408)[0m     @     0x55788e6e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6408)[0m     @     0x55788e6e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6408)[0m     @     0x55788e65d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6408)[0m     @     0x55788e6e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6408)[0m     @     0x55788e6e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6408)[0m     @     0x55788e65d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6408)[0m     @     0x55788e6e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6408)[0m     @     0x55788e6e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6408)[0m     @     0x55788e65d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6408)[0m     @     0x55788e6e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6393)[0m     @     0x7f24df8a05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6393)[0m     @     0x7f24df9a8148 at::Tensor::copy_()
[2m[36m(pid=6393)[0m     @     0x7f24e5c5ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6393)[0m     @     0x55f1374dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6393)[0m     @     0x55f13743ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6393)[0m     @     0x55f1374c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6393)[0m     @     0x55f1374c6a20 method_vectorcall
[2m[36m(pid=6393)[0m     @     0x55f13743abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6393)[0m     @     0x55f1374c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6393)[0m     @     0x55f1374c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6393)[0m     @     0x55f13743b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6393)[0m     @     0x55f1374c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6417)[0m     @     0x7f47fa1955cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6417)[0m     @     0x7f47fa29d148 at::Tensor::copy_()
[2m[36m(pid=6417)[0m     @     0x7f4800553bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6417)[0m     @     0x55cd0adc2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6417)[0m     @     0x55cd0ad1db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6417)[0m     @     0x55cd0ada8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6417)[0m     @     0x55cd0ada9a20 method_vectorcall
[2m[36m(pid=6417)[0m     @     0x55cd0ad1dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6417)[0m     @     0x55cd0ada8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6417)[0m     @     0x55cd0ada9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6417)[0m     @     0x55cd0ad1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6417)[0m     @     0x55cd0ada8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6417)[0m     @     0x55cd0ada9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6417)[0m     @     0x55cd0ad1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6417)[0m     @     0x55cd0ada8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6417)[0m     @     0x55cd0ada9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6417)[0m     @     0x55cd0ad1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6417)[0m     @     0x55cd0ada8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6338)[0m     @     0x7eec82c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6338)[0m     @     0x7eec82d5b148 at::Tensor::copy_()
[2m[36m(pid=6338)[0m     @     0x7eec89011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6338)[0m     @     0x56254bae0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6338)[0m     @     0x56254ba3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6338)[0m     @     0x56254bac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6338)[0m     @     0x56254bac7a20 method_vectorcall
[2m[36m(pid=6338)[0m     @     0x56254ba3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6338)[0m     @     0x56254bac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6338)[0m     @     0x56254bac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6338)[0m     @     0x56254ba3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6338)[0m     @     0x56254bac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6338)[0m     @     0x56254bac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6338)[0m     @     0x56254ba3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6338)[0m     @     0x56254bac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6338)[0m     @     0x56254bac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6338)[0m     @     0x56254ba3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6338)[0m     @     0x56254bac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6392)[0m     @     0x7eebf61e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6392)[0m     @     0x7eebf62ed148 at::Tensor::copy_()
[2m[36m(pid=6392)[0m     @     0x7eebfc5a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6392)[0m     @     0x55bd68f82fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6392)[0m     @     0x55bd68eddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6392)[0m     @     0x55bd68f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=6392)[0m     @     0x55bd68f69a20 method_vectorcall
[2m[36m(pid=6392)[0m     @     0x55bd68eddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6392)[0m     @     0x55bd68f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=6392)[0m     @     0x55bd68f69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6392)[0m     @     0x55bd68ede689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6392)[0m     @     0x55bd68f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=6392)[0m     @     0x55bd68f69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6392)[0m     @     0x55bd68ede689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6392)[0m     @     0x55bd68f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=6392)[0m     @     0x55bd68f69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6392)[0m     @     0x55bd68ede689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6392)[0m     @     0x55bd68f68baf _PyEval_EvalCodeWithName
[2m[36m(pid=6429)[0m     @     0x7fc603fa4e11 at::TensorIterator::for_each()
[2m[36m(pid=6429)[0m     @     0x7fc606cbdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6429)[0m     @     0x7fc606ce0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6429)[0m     @     0x7fc603d1e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6429)[0m     @     0x7fc603d1cc3f at::native::copy_impl()
[2m[36m(pid=6399)[0m     @     0x7f867b133c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6399)[0m     @     0x7f867b156cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6399)[0m     @     0x7f8678194009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6399)[0m     @     0x7f8678192c3f at::native::copy_impl()
[2m[36m(pid=6428)[0m     @     0x7f525c11f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6428)[0m     @     0x7f525c11dc3f at::native::copy_impl()
[2m[36m(pid=6428)[0m     @     0x7f525c11eed4 at::native::copy_()
[2m[36m(pid=6428)[0m     @     0x7f525c8615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6405)[0m     @     0x7f2f143e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6405)[0m     @     0x7f2f11422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6405)[0m     @     0x7f2f11420c3f at::native::copy_impl()
[2m[36m(pid=6405)[0m     @     0x7f2f11421ed4 at::native::copy_()
[2m[36m(pid=6404)[0m     @     0x7f95d7e23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6404)[0m     @     0x7f95d7e21c3f at::native::copy_impl()
[2m[36m(pid=6404)[0m     @     0x7f95d7e22ed4 at::native::copy_()
[2m[36m(pid=6404)[0m     @     0x7f95d85655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6357)[0m     @     0x7f3d0d632ed4 at::native::copy_()
[2m[36m(pid=6357)[0m     @     0x7f3d0dd755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6357)[0m     @     0x7f3d0de7d148 at::Tensor::copy_()
[2m[36m(pid=6357)[0m     @     0x7f3d0fa74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6452)[0m     @     0x7f990e542977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6452)[0m     @     0x7f990e542b53 at::TensorIterator::for_each()
[2m[36m(pid=6452)[0m     @     0x7f990e542e11 at::TensorIterator::for_each()
[2m[36m(pid=6344)[0m     @     0x7ee2e115a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6344)[0m     @     0x7ee2e115ab53 at::TensorIterator::for_each()
[2m[36m(pid=6344)[0m     @     0x7ee2e115ae11 at::TensorIterator::for_each()
[2m[36m(pid=6344)[0m     @     0x7ee2e3e73c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6375)[0m     @     0x7f395cae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6375)[0m     @     0x7f395cadfc3f at::native::copy_impl()
[2m[36m(pid=6375)[0m     @     0x7f395cae0ed4 at::native::copy_()
[2m[36m(pid=6375)[0m     @     0x7f395d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6410)[0m     @     0x7f80b99d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6410)[0m     @     0x7f80b99fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6410)[0m     @     0x7f80b6a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6410)[0m     @     0x7f80b6a37c3f at::native::copy_impl()
[2m[36m(pid=6410)[0m     @     0x7f80b6a38ed4 at::native::copy_()
[2m[36m(pid=6345)[0m     @     0x7fa10ba655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6345)[0m     @     0x7fa10bb6d148 at::Tensor::copy_()
[2m[36m(pid=6345)[0m     @     0x7fa111e23bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6345)[0m     @     0x55b5a61eefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6345)[0m     @     0x55b5a6149b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6345)[0m     @     0x55b5a61d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6345)[0m     @     0x55b5a61d5a20 method_vectorcall
[2m[36m(pid=6345)[0m     @     0x55b5a6149bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6345)[0m     @     0x55b5a61d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6345)[0m     @     0x55b5a61d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6345)[0m     @     0x55b5a614a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6345)[0m     @     0x55b5a61d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6345)[0m     @     0x55b5a61d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6345)[0m     @     0x55b5a614a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6345)[0m     @     0x55b5a61d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6345)[0m     @     0x55b5a61d5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6345)[0m     @     0x55b5a614a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6345)[0m     @     0x55b5a61d4baf _PyEval_EvalCodeWithName
[2m[36m(pid=6419)[0m     @     0x7f44fc19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6419)[0m     @     0x7f44fc2a6148 at::Tensor::copy_()
[2m[36m(pid=6419)[0m     @     0x7f450255cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6419)[0m     @     0x55a0dedaffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6419)[0m     @     0x55a0ded0ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6419)[0m     @     0x55a0ded95baf _PyEval_EvalCodeWithName
[2m[36m(pid=6419)[0m     @     0x55a0ded96a20 method_vectorcall
[2m[36m(pid=6419)[0m     @     0x55a0ded0abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6419)[0m     @     0x55a0ded95baf _PyEval_EvalCodeWithName
[2m[36m(pid=6419)[0m     @     0x55a0ded96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6419)[0m     @     0x55a0ded0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6419)[0m     @     0x55a0ded95baf _PyEval_EvalCodeWithName
[2m[36m(pid=6419)[0m     @     0x55a0ded96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6419)[0m     @     0x55a0ded0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6419)[0m     @     0x55a0ded95baf _PyEval_EvalCodeWithName
[2m[36m(pid=6419)[0m     @     0x55a0ded96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6419)[0m     @     0x55a0ded0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6419)[0m     @     0x55a0ded95baf _PyEval_EvalCodeWithName
[2m[36m(pid=6396)[0m     @     0x7f1824f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=6396)[0m     @     0x7f1824f78b53 at::TensorIterator::for_each()
[2m[36m(pid=6396)[0m     @     0x7f1824f78e11 at::TensorIterator::for_each()
[2m[36m(pid=6396)[0m     @     0x7f1827c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6396)[0m     @     0x7f1827cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6340)[0m     @     0x7f646b619c3f at::native::copy_impl()
[2m[36m(pid=6340)[0m     @     0x7f646b61aed4 at::native::copy_()
[2m[36m(pid=6340)[0m     @     0x7f646bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6340)[0m     @     0x7f646be65148 at::Tensor::copy_()
[2m[36m(pid=6367)[0m     @     0x7f7f3ad6fed4 at::native::copy_()
[2m[36m(pid=6367)[0m     @     0x7f7f3b4b25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6367)[0m     @     0x7f7f3b5ba148 at::Tensor::copy_()
[2m[36m(pid=6367)[0m     @     0x7f7f3d1b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6409)[0m     @     0x7f92faa37c3f at::native::copy_impl()
[2m[36m(pid=6409)[0m     @     0x7f92faa38ed4 at::native::copy_()
[2m[36m(pid=6409)[0m     @     0x7f92fb17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6409)[0m     @     0x7f92fb283148 at::Tensor::copy_()
[2m[36m(pid=6349)[0m     @     0x7efddd7e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6349)[0m     @     0x7efddd7dfc3f at::native::copy_impl()
[2m[36m(pid=6349)[0m     @     0x7efddd7e0ed4 at::native::copy_()
[2m[36m(pid=6349)[0m     @     0x7efdddf235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6349)[0m     @     0x7efdde02b148 at::Tensor::copy_()
[2m[36m(pid=6339)[0m     @     0x7ef5526b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6339)[0m     @     0x7ef5526b3c3f at::native::copy_impl()
[2m[36m(pid=6339)[0m     @     0x7ef5526b4ed4 at::native::copy_()
[2m[36m(pid=6339)[0m     @     0x7ef552df75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6339)[0m     @     0x7ef552eff148 at::Tensor::copy_()
[2m[36m(pid=6335)[0m     @     0x7f0bfa3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6335)[0m     @     0x7f0bfa4fe148 at::Tensor::copy_()
[2m[36m(pid=6335)[0m     @     0x7f0bfc0f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6335)[0m     @     0x7f0bfa3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6354)[0m     @     0x7f604910c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6354)[0m     @     0x7f604910ac3f at::native::copy_impl()
[2m[36m(pid=6354)[0m     @     0x7f604910bed4 at::native::copy_()
[2m[36m(pid=6354)[0m     @     0x7f604984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6354)[0m     @     0x7f6049956148 at::Tensor::copy_()
[2m[36m(pid=6361)[0m     @     0x7f60d9fe2c3f at::native::copy_impl()
[2m[36m(pid=6361)[0m     @     0x7f60d9fe3ed4 at::native::copy_()
[2m[36m(pid=6361)[0m     @     0x7f60da7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6361)[0m     @     0x7f60da82e148 at::Tensor::copy_()
[2m[36m(pid=6365)[0m     @     0x7ef64a18e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6365)[0m     @     0x7ef64a18cc3f at::native::copy_impl()
[2m[36m(pid=6365)[0m     @     0x7ef64a18ded4 at::native::copy_()
[2m[36m(pid=6365)[0m     @     0x7ef64a8d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6369)[0m     @     0x7f15ebd73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6369)[0m     @     0x7f15ebd71c3f at::native::copy_impl()
[2m[36m(pid=6369)[0m     @     0x7f15ebd72ed4 at::native::copy_()
[2m[36m(pid=6369)[0m     @     0x7f15ec4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6369)[0m     @     0x7f15ec5bd148 at::Tensor::copy_()
[2m[36m(pid=6366)[0m     @     0x7f1ae9fc8c3f at::native::copy_impl()
[2m[36m(pid=6366)[0m     @     0x7f1ae9fc9ed4 at::native::copy_()
[2m[36m(pid=6366)[0m     @     0x7f1aea70c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6366)[0m     @     0x7f1aea814148 at::Tensor::copy_()
[2m[36m(pid=6444)[0m     @     0x7f5ad4645c3f at::native::copy_impl()
[2m[36m(pid=6444)[0m     @     0x7f5ad4646ed4 at::native::copy_()
[2m[36m(pid=6444)[0m     @     0x7f5ad4d895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6444)[0m     @     0x7f5ad4e91148 at::Tensor::copy_()
[2m[36m(pid=6346)[0m     @     0x7f3e68033cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6346)[0m     @     0x7f3e65071009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6346)[0m     @     0x7f3e6506fc3f at::native::copy_impl()
[2m[36m(pid=6346)[0m     @     0x7f3e65070ed4 at::native::copy_()
[2m[36m(pid=6346)[0m     @     0x7f3e657b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6401)[0m     @     0x7f096384aed4 at::native::copy_()
[2m[36m(pid=6401)[0m     @     0x7f0963f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6401)[0m     @     0x7f0964095148 at::Tensor::copy_()
[2m[36m(pid=6355)[0m     @     0x7f371b7905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6355)[0m     @     0x7f371b898148 at::Tensor::copy_()
[2m[36m(pid=6355)[0m     @     0x7f371d48f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6355)[0m     @     0x7f371b7905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6351)[0m     @     0x7fa4e1ad25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6351)[0m     @     0x7fa4e1bda148 at::Tensor::copy_()
[2m[36m(pid=6351)[0m     @     0x7fa4e37d1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6461)[0m     @     0x7ed82483c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6461)[0m     @     0x7ed824944148 at::Tensor::copy_()
[2m[36m(pid=6461)[0m     @     0x7ed82653b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6435)[0m     @     0x7ececd64d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6435)[0m     @     0x7ececd64bc3f at::native::copy_impl()
[2m[36m(pid=6435)[0m     @     0x7ececd64ced4 at::native::copy_()
[2m[36m(pid=6418)[0m     @     0x7f34622ed148 at::Tensor::copy_()
[2m[36m(pid=6413)[0m     @     0x7f5ca48615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6413)[0m     @     0x7f5ca4969148 at::Tensor::copy_()
[2m[36m(pid=6413)[0m     @     0x7f5ca6560989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6463)[0m     @     0x7f148f3edc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6463)[0m     @     0x7f148f410cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6342)[0m     @     0x7ee95f0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6342)[0m     @     0x7ee95f151148 at::Tensor::copy_()
[2m[36m(pid=6342)[0m     @     0x7ee960d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6449)[0m     @     0x7f0c677f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6449)[0m     @     0x56176f944fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6449)[0m     @     0x56176f89fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6449)[0m     @     0x56176f92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6449)[0m     @     0x56176f92ba20 method_vectorcall
[2m[36m(pid=6449)[0m     @     0x56176f89fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6449)[0m     @     0x56176f92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6449)[0m     @     0x56176f92b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6449)[0m     @     0x56176f8a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6449)[0m     @     0x56176f92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6449)[0m     @     0x56176f92b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6449)[0m     @     0x56176f8a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6449)[0m     @     0x56176f92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6449)[0m     @     0x56176f92b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6449)[0m     @     0x56176f8a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6449)[0m     @     0x56176f92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6337)[0m     @     0x7fbfd184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6337)[0m     @     0x7fbfd1956148 at::Tensor::copy_()
[2m[36m(pid=6337)[0m     @     0x7fbfd354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6337)[0m     @     0x7fbfd184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6337)[0m     @     0x7fbfd1956148 at::Tensor::copy_()
[2m[36m(pid=6376)[0m     @     0x7f995ee645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6376)[0m     @     0x7f995ef6c148 at::Tensor::copy_()
[2m[36m(pid=6376)[0m     @     0x7f9960b63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6376)[0m     @     0x7f995ee645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6445)[0m     @     0x7f23dd84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6445)[0m     @     0x7f23dd956148 at::Tensor::copy_()
[2m[36m(pid=6445)[0m     @     0x7f23df54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6445)[0m     @     0x7f23dd84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6427)[0m     @     0x7f62820d6148 at::Tensor::copy_()
[2m[36m(pid=6427)[0m     @     0x7f6283ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6427)[0m     @     0x7f6281fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6427)[0m     @     0x7f62820d6148 at::Tensor::copy_()
[2m[36m(pid=6427)[0m     @     0x7f628838cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6427)[0m     @     0x55fb4375efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6427)[0m     @     0x55fb436b9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6427)[0m     @     0x55fb43744baf _PyEval_EvalCodeWithName
[2m[36m(pid=6427)[0m     @     0x55fb43745a20 method_vectorcall
[2m[36m(pid=6427)[0m     @     0x55fb436b9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6427)[0m     @     0x55fb43744baf _PyEval_EvalCodeWithName
[2m[36m(pid=6427)[0m     @     0x55fb43745643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6427)[0m     @     0x55fb436ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6427)[0m     @     0x55fb43744baf _PyEval_EvalCodeWithName
[2m[36m(pid=6427)[0m     @     0x55fb43745643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6427)[0m     @     0x55fb436ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6427)[0m     @     0x55fb43744baf _PyEval_EvalCodeWithName
[2m[36m(pid=6427)[0m     @     0x55fb43745643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6427)[0m     @     0x55fb436ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6427)[0m     @     0x55fb43744baf _PyEval_EvalCodeWithName
[2m[36m(pid=6431)[0m     @     0x7f92e510bed4 at::native::copy_()
[2m[36m(pid=6431)[0m     @     0x7f92e584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6431)[0m     @     0x7f92e5956148 at::Tensor::copy_()
[2m[36m(pid=6431)[0m     @     0x7f92e754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6431)[0m     @     0x7f92e584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6414)[0m     @     0x7f9dd408bed4 at::native::copy_()
[2m[36m(pid=6414)[0m     @     0x7f9dd47ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6414)[0m     @     0x7f9dd48d6148 at::Tensor::copy_()
[2m[36m(pid=6414)[0m     @     0x7f9dd64cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6414)[0m     @     0x7f9dd47ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6421)[0m     @     0x7f4ef9fd2e11 at::TensorIterator::for_each()
[2m[36m(pid=6421)[0m     @     0x7f4efccebc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6421)[0m     @     0x7f4efcd0ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6421)[0m     @     0x7f4ef9d4c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6421)[0m     @     0x7f4ef9d4ac3f at::native::copy_impl()
[2m[36m(pid=6347)[0m     @     0x7f34f188bed4 at::native::copy_()
[2m[36m(pid=6347)[0m     @     0x7f34f1fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6347)[0m     @     0x7f34f20d6148 at::Tensor::copy_()
[2m[36m(pid=6347)[0m     @     0x7f34f3ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6373)[0m     @     0x7f2b286b3ed4 at::native::copy_()
[2m[36m(pid=6373)[0m     @     0x7f2b28df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6373)[0m     @     0x7f2b28efe148 at::Tensor::copy_()
[2m[36m(pid=6373)[0m     @     0x7f2b2aaf5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6397)[0m     @     0x55eba038f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6397)[0m     @     0x55eba0304689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6397)[0m     @     0x55eba038ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6352)[0m     @     0x7f205693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6352)[0m     @     0x7f2056a45148 at::Tensor::copy_()
[2m[36m(pid=6352)[0m     @     0x7f205863c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6352)[0m     @     0x7f205693d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6406)[0m     @     0x55fb52497baf _PyEval_EvalCodeWithName
[2m[36m(pid=6406)[0m     @     0x55fb52498643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6406)[0m     @     0x55fb5240d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6406)[0m     @     0x55fb52497baf _PyEval_EvalCodeWithName
[2m[36m(pid=6406)[0m     @     0x55fb52498643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6406)[0m     @     0x55fb5240d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6406)[0m     @     0x55fb52497baf _PyEval_EvalCodeWithName
[2m[36m(pid=6406)[0m     @     0x55fb52498643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6406)[0m     @     0x55fb5240d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6406)[0m     @     0x55fb52497baf _PyEval_EvalCodeWithName
[2m[36m(pid=6341)[0m     @     0x7fa2bc8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6341)[0m     @     0x7fa2bc9d6148 at::Tensor::copy_()
[2m[36m(pid=6341)[0m     @     0x7fa2be5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6341)[0m     @     0x7fa2bc8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6442)[0m     @     0x556413576baf _PyEval_EvalCodeWithName
[2m[36m(pid=6353)[0m     @     0x561d00359baf _PyEval_EvalCodeWithName
[2m[36m(pid=6348)[0m     @     0x7f2131d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6348)[0m     @     0x7f2131e7d148 at::Tensor::copy_()
[2m[36m(pid=6348)[0m     @     0x7f2138133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6348)[0m     @     0x55f40abddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6348)[0m     @     0x55f40ab38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6348)[0m     @     0x55f40abc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6348)[0m     @     0x55f40abc4a20 method_vectorcall
[2m[36m(pid=6348)[0m     @     0x55f40ab38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6348)[0m     @     0x55f40abc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6348)[0m     @     0x55f40abc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6348)[0m     @     0x55f40ab39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6348)[0m     @     0x55f40abc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6348)[0m     @     0x55f40abc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6348)[0m     @     0x55f40ab39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6348)[0m     @     0x55f40abc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6348)[0m     @     0x55f40abc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6348)[0m     @     0x55f40ab39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6348)[0m     @     0x55f40abc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6393)[0m     @     0x55f1374c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6393)[0m     @     0x55f13743b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6393)[0m     @     0x55f1374c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6393)[0m     @     0x55f1374c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6393)[0m     @     0x55f13743b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6393)[0m     @     0x55f1374c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6429)[0m     @     0x7fc603d1ded4 at::native::copy_()
[2m[36m(pid=6429)[0m     @     0x7fc6044605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6429)[0m     @     0x7fc604568148 at::Tensor::copy_()
[2m[36m(pid=6399)[0m     @     0x7f8678193ed4 at::native::copy_()
[2m[36m(pid=6399)[0m     @     0x7f86788d65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6399)[0m     @     0x7f86789de148 at::Tensor::copy_()
[2m[36m(pid=6428)[0m     @     0x7f525c969148 at::Tensor::copy_()
[2m[36m(pid=6428)[0m     @     0x7f525e560989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6428)[0m     @     0x7f525c8615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6405)[0m     @     0x7f2f11b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6405)[0m     @     0x7f2f11c6c148 at::Tensor::copy_()
[2m[36m(pid=6405)[0m     @     0x7f2f13863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6404)[0m     @     0x7f95d866d148 at::Tensor::copy_()
[2m[36m(pid=6404)[0m     @     0x7f95da264989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6404)[0m     @     0x7f95d85655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6357)[0m     @     0x7f3d0dd755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6357)[0m     @     0x7f3d0de7d148 at::Tensor::copy_()
[2m[36m(pid=6357)[0m     @     0x7f3d14133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6357)[0m     @     0x55ac80b84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6357)[0m     @     0x55ac80adfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6357)[0m     @     0x55ac80b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6357)[0m     @     0x55ac80b6ba20 method_vectorcall
[2m[36m(pid=6357)[0m     @     0x55ac80adfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6357)[0m     @     0x55ac80b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6357)[0m     @     0x55ac80b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6357)[0m     @     0x55ac80ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6357)[0m     @     0x55ac80b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6357)[0m     @     0x55ac80b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6357)[0m     @     0x55ac80ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6357)[0m     @     0x55ac80b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6357)[0m     @     0x55ac80b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6357)[0m     @     0x55ac80ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6357)[0m     @     0x55ac80b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x7f991125bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=6452)[0m     @     0x7f991127ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6452)[0m     @     0x7f990e2bc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6452)[0m     @     0x7f990e2bac3f at::native::copy_impl()
[2m[36m(pid=6344)[0m     @     0x7ee2e3e96cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=6344)[0m     @     0x7ee2e0ed4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6344)[0m     @     0x7ee2e0ed2c3f at::native::copy_impl()
[2m[36m(pid=6375)[0m     @     0x7f395d32b148 at::Tensor::copy_()
[2m[36m(pid=6375)[0m     @     0x7f395ef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6375)[0m     @     0x7f395d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6410)[0m     @     0x7f80b717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6410)[0m     @     0x7f80b7283148 at::Tensor::copy_()
[2m[36m(pid=6410)[0m     @     0x7f80b8e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6396)[0m     @     0x7f1824cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6396)[0m     @     0x7f1824cf0c3f at::native::copy_impl()
[2m[36m(pid=6396)[0m     @     0x7f1824cf1ed4 at::native::copy_()
[2m[36m(pid=6340)[0m     @     0x7f646da5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6340)[0m     @     0x7f646bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6367)[0m     @     0x7f7f3b4b25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6367)[0m     @     0x7f7f3b5ba148 at::Tensor::copy_()
[2m[36m(pid=6367)[0m     @     0x7f7f41870bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6367)[0m     @     0x5586ae18ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6367)[0m     @     0x5586ae0eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6367)[0m     @     0x5586ae175baf _PyEval_EvalCodeWithName
[2m[36m(pid=6367)[0m     @     0x5586ae176a20 method_vectorcall
[2m[36m(pid=6367)[0m     @     0x5586ae0eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6409)[0m     @     0x7f92fce7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6409)[0m     @     0x7f92fb17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6349)[0m     @     0x7efddfc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6349)[0m     @     0x7efdddf235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6339)[0m     @     0x7ef554af6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6339)[0m     @     0x7ef552df75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6339)[0m     @     0x7ef552eff148 at::Tensor::copy_()
[2m[36m(pid=6339)[0m     @     0x7ef5591b5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6339)[0m     @     0x55f9ff820fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6339)[0m     @     0x55f9ff77bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6339)[0m     @     0x55f9ff806baf _PyEval_EvalCodeWithName
[2m[36m(pid=6339)[0m     @     0x55f9ff807a20 method_vectorcall
[2m[36m(pid=6339)[0m     @     0x55f9ff77bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6339)[0m     @     0x55f9ff806baf _PyEval_EvalCodeWithName
[2m[36m(pid=6339)[0m     @     0x55f9ff807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6339)[0m     @     0x55f9ff77c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6339)[0m     @     0x55f9ff806baf _PyEval_EvalCodeWithName
[2m[36m(pid=6339)[0m     @     0x55f9ff807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6339)[0m     @     0x55f9ff77c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6339)[0m     @     0x55f9ff806baf _PyEval_EvalCodeWithName
[2m[36m(pid=6339)[0m     @     0x55f9ff807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6339)[0m     @     0x55f9ff77c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6335)[0m     @     0x7f0bfa4fe148 at::Tensor::copy_()
[2m[36m(pid=6335)[0m     @     0x7f0c007b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6335)[0m     @     0x55b0e0ac9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6335)[0m     @     0x55b0e0a24b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6335)[0m     @     0x55b0e0aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6335)[0m     @     0x55b0e0ab0a20 method_vectorcall
[2m[36m(pid=6335)[0m     @     0x55b0e0a24bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6335)[0m     @     0x55b0e0aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6335)[0m     @     0x55b0e0ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6335)[0m     @     0x55b0e0a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6335)[0m     @     0x55b0e0aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6335)[0m     @     0x55b0e0ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6335)[0m     @     0x55b0e0a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6335)[0m     @     0x55b0e0aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6335)[0m     @     0x55b0e0ab0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6335)[0m     @     0x55b0e0a25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6335)[0m     @     0x55b0e0aafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6354)[0m     @     0x7f604b54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6354)[0m     @     0x7f604984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6354)[0m     @     0x7f6049956148 at::Tensor::copy_()
[2m[36m(pid=6354)[0m     @     0x7f604fc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6354)[0m     @     0x561a10828fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6354)[0m     @     0x561a10783b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6354)[0m     @     0x561a1080ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6354)[0m     @     0x561a1080fa20 method_vectorcall
[2m[36m(pid=6354)[0m     @     0x561a10783bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6354)[0m     @     0x561a1080ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6354)[0m     @     0x561a1080f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6354)[0m     @     0x561a10784689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6354)[0m     @     0x561a1080ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6354)[0m     @     0x561a1080f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6354)[0m     @     0x561a10784689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6354)[0m     @     0x561a1080ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6354)[0m     @     0x561a1080f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6354)[0m     @     0x561a10784689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6354)[0m     @     0x561a1080ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=6361)[0m     @     0x7f60dc425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6361)[0m     @     0x7f60da7265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6361)[0m     @     0x7f60da82e148 at::Tensor::copy_()
[2m[36m(pid=6361)[0m     @     0x7f60e0ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6361)[0m     @     0x5592798eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6361)[0m     @     0x559279845b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6361)[0m     @     0x5592798d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6361)[0m     @     0x5592798d1a20 method_vectorcall
[2m[36m(pid=6361)[0m     @     0x559279845bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6361)[0m     @     0x5592798d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6361)[0m     @     0x5592798d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6361)[0m     @     0x559279846689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6361)[0m     @     0x5592798d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6361)[0m     @     0x5592798d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6361)[0m     @     0x559279846689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6361)[0m     @     0x5592798d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6361)[0m     @     0x5592798d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6361)[0m     @     0x559279846689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6361)[0m     @     0x5592798d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=6365)[0m     @     0x7ef64a9d8148 at::Tensor::copy_()
[2m[36m(pid=6365)[0m     @     0x7ef64c5cf989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6365)[0m     @     0x7ef64a8d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6369)[0m     @     0x7f15ee1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6369)[0m     @     0x7f15ec4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6369)[0m     @     0x7f15ec5bd148 at::Tensor::copy_()
[2m[36m(pid=6369)[0m     @     0x7f15f2873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6369)[0m     @     0x56158ecedfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6369)[0m     @     0x56158ec48b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6369)[0m     @     0x56158ecd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6369)[0m     @     0x56158ecd4a20 method_vectorcall
[2m[36m(pid=6369)[0m     @     0x56158ec48bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6369)[0m     @     0x56158ecd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6369)[0m     @     0x56158ecd4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6369)[0m     @     0x56158ec49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6369)[0m     @     0x56158ecd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6369)[0m     @     0x56158ecd4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6369)[0m     @     0x56158ec49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6369)[0m     @     0x56158ecd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6369)[0m     @     0x56158ecd4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6369)[0m     @     0x56158ec49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6369)[0m     @     0x56158ecd3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6366)[0m     @     0x7f1aec40b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6366)[0m     @     0x7f1aea70c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6366)[0m     @     0x7f1aea814148 at::Tensor::copy_()
[2m[36m(pid=6366)[0m     @     0x7f1af0acabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6366)[0m     @     0x55cc8fad2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6366)[0m     @     0x55cc8fa2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6366)[0m     @     0x55cc8fab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6366)[0m     @     0x55cc8fab9a20 method_vectorcall
[2m[36m(pid=6366)[0m     @     0x55cc8fa2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6366)[0m     @     0x55cc8fab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6366)[0m     @     0x55cc8fab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6366)[0m     @     0x55cc8fa2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6366)[0m     @     0x55cc8fab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6366)[0m     @     0x55cc8fab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6366)[0m     @     0x55cc8fa2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6366)[0m     @     0x55cc8fab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6366)[0m     @     0x55cc8fab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6366)[0m     @     0x55cc8fa2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6366)[0m     @     0x55cc8fab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6444)[0m     @     0x7f5ad6a88989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6444)[0m     @     0x7f5ad4d895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6444)[0m     @     0x7f5ad4e91148 at::Tensor::copy_()
[2m[36m(pid=6444)[0m     @     0x7f5adb147bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6444)[0m     @     0x55ed0dcc2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6444)[0m     @     0x55ed0dc1db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6444)[0m     @     0x55ed0dca8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6444)[0m     @     0x55ed0dca9a20 method_vectorcall
[2m[36m(pid=6444)[0m     @     0x55ed0dc1dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6444)[0m     @     0x55ed0dca8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6444)[0m     @     0x55ed0dca9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6444)[0m     @     0x55ed0dc1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6444)[0m     @     0x55ed0dca8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6444)[0m     @     0x55ed0dca9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6444)[0m     @     0x55ed0dc1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6444)[0m     @     0x55ed0dca8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6444)[0m     @     0x55ed0dca9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6444)[0m     @     0x55ed0dc1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6444)[0m     @     0x55ed0dca8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6346)[0m     @     0x7f3e658bb148 at::Tensor::copy_()
[2m[36m(pid=6346)[0m     @     0x7f3e674b2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6346)[0m     @     0x7f3e657b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6346)[0m     @     0x7f3e658bb148 at::Tensor::copy_()
[2m[36m(pid=6401)[0m     @     0x7f0965c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6401)[0m     @     0x7f0963f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6401)[0m     @     0x7f0964095148 at::Tensor::copy_()
[2m[36m(pid=6401)[0m     @     0x7f096a34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6401)[0m     @     0x5598ef5b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6401)[0m     @     0x5598ef50cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6401)[0m     @     0x5598ef597baf _PyEval_EvalCodeWithName
[2m[36m(pid=6401)[0m     @     0x5598ef598a20 method_vectorcall
[2m[36m(pid=6401)[0m     @     0x5598ef50cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6401)[0m     @     0x5598ef597baf _PyEval_EvalCodeWithName
[2m[36m(pid=6401)[0m     @     0x5598ef598643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6401)[0m     @     0x5598ef50d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6401)[0m     @     0x5598ef597baf _PyEval_EvalCodeWithName
[2m[36m(pid=6401)[0m     @     0x5598ef598643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6401)[0m     @     0x5598ef50d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6401)[0m     @     0x5598ef597baf _PyEval_EvalCodeWithName
[2m[36m(pid=6401)[0m     @     0x5598ef598643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6401)[0m     @     0x5598ef50d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6355)[0m     @     0x7f371b898148 at::Tensor::copy_()
[2m[36m(pid=6355)[0m     @     0x7f3721b4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6355)[0m     @     0x55db8bc9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6355)[0m     @     0x55db8bbf9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6355)[0m     @     0x55db8bc84baf _PyEval_EvalCodeWithName
[2m[36m(pid=6355)[0m     @     0x55db8bc85a20 method_vectorcall
[2m[36m(pid=6355)[0m     @     0x55db8bbf9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6355)[0m     @     0x55db8bc84baf _PyEval_EvalCodeWithName
[2m[36m(pid=6355)[0m     @     0x55db8bc85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6355)[0m     @     0x55db8bbfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6355)[0m     @     0x55db8bc84baf _PyEval_EvalCodeWithName
[2m[36m(pid=6355)[0m     @     0x55db8bc85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6355)[0m     @     0x55db8bbfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6355)[0m     @     0x55db8bc84baf _PyEval_EvalCodeWithName
[2m[36m(pid=6355)[0m     @     0x55db8bc85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6355)[0m     @     0x55db8bbfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6355)[0m     @     0x55db8bc84baf _PyEval_EvalCodeWithName
[2m[36m(pid=6351)[0m     @     0x7fa4e1ad25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6351)[0m     @     0x7fa4e1bda148 at::Tensor::copy_()
[2m[36m(pid=6351)[0m     @     0x7fa4e7e90bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6351)[0m     @     0x5616df9dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6351)[0m     @     0x5616df93ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6351)[0m     @     0x5616df9c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6351)[0m     @     0x5616df9c6a20 method_vectorcall
[2m[36m(pid=6351)[0m     @     0x5616df93abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6351)[0m     @     0x5616df9c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6351)[0m     @     0x5616df9c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6351)[0m     @     0x5616df93b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6351)[0m     @     0x5616df9c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6351)[0m     @     0x5616df9c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6351)[0m     @     0x5616df93b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6351)[0m     @     0x5616df9c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6351)[0m     @     0x5616df9c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6351)[0m     @     0x5616df93b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6351)[0m     @     0x5616df9c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=6461)[0m     @     0x7ed82483c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6461)[0m     @     0x7ed824944148 at::Tensor::copy_()
[2m[36m(pid=6461)[0m     @     0x7ed82abfabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6461)[0m     @     0x5590880fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6461)[0m     @     0x559088057b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6461)[0m     @     0x5590880e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6461)[0m     @     0x5590880e3a20 method_vectorcall
[2m[36m(pid=6461)[0m     @     0x559088057bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6461)[0m     @     0x5590880e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6461)[0m     @     0x5590880e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6461)[0m     @     0x559088058689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6461)[0m     @     0x5590880e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6461)[0m     @     0x5590880e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6461)[0m     @     0x559088058689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6461)[0m     @     0x5590880e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6461)[0m     @     0x5590880e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6461)[0m     @     0x559088058689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6461)[0m     @     0x5590880e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6435)[0m     @     0x7ececdd8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6435)[0m     @     0x7ececde97148 at::Tensor::copy_()
[2m[36m(pid=6435)[0m     @     0x7ececfa8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6435)[0m     @     0x7ececdd8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6418)[0m     @     0x7f3463ee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6418)[0m     @     0x7f34621e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6418)[0m     @     0x7f34622ed148 at::Tensor::copy_()
[2m[36m(pid=6418)[0m     @     0x7f34685a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6418)[0m     @     0x55986fabdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6418)[0m     @     0x55986fa18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6418)[0m     @     0x55986faa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6418)[0m     @     0x55986faa4a20 method_vectorcall
[2m[36m(pid=6418)[0m     @     0x55986fa18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6418)[0m     @     0x55986faa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6418)[0m     @     0x55986faa4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6418)[0m     @     0x55986fa19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6418)[0m     @     0x55986faa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6418)[0m     @     0x55986faa4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6418)[0m     @     0x55986fa19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6418)[0m     @     0x55986faa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6418)[0m     @     0x55986faa4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6418)[0m     @     0x55986fa19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6413)[0m     @     0x7f5ca48615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6413)[0m     @     0x7f5ca4969148 at::Tensor::copy_()
[2m[36m(pid=6413)[0m     @     0x7f5caac1fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6413)[0m     @     0x5611659d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6413)[0m     @     0x561165931b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6413)[0m     @     0x5611659bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6413)[0m     @     0x5611659bda20 method_vectorcall
[2m[36m(pid=6413)[0m     @     0x561165931bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6413)[0m     @     0x5611659bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6413)[0m     @     0x5611659bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6413)[0m     @     0x561165932689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6413)[0m     @     0x5611659bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6413)[0m     @     0x5611659bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6413)[0m     @     0x561165932689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6413)[0m     @     0x5611659bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6413)[0m     @     0x5611659bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6413)[0m     @     0x561165932689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6413)[0m     @     0x5611659bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x7f148c44e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=6463)[0m     @     0x7f148c44cc3f at::native::copy_impl()
[2m[36m(pid=6463)[0m     @     0x7f148c44ded4 at::native::copy_()
[2m[36m(pid=6342)[0m     @     0x7ee95f0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6342)[0m     @     0x7ee95f151148 at::Tensor::copy_()
[2m[36m(pid=6342)[0m     @     0x7ee965407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6342)[0m     @     0x562803333fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6342)[0m     @     0x56280328eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6342)[0m     @     0x562803319baf _PyEval_EvalCodeWithName
[2m[36m(pid=6342)[0m     @     0x56280331aa20 method_vectorcall
[2m[36m(pid=6342)[0m     @     0x56280328ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6342)[0m     @     0x562803319baf _PyEval_EvalCodeWithName
[2m[36m(pid=6342)[0m     @     0x56280331a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6342)[0m     @     0x56280328f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6342)[0m     @     0x562803319baf _PyEval_EvalCodeWithName
[2m[36m(pid=6342)[0m     @     0x56280331a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6342)[0m     @     0x56280328f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6342)[0m     @     0x562803319baf _PyEval_EvalCodeWithName
[2m[36m(pid=6342)[0m     @     0x56280331a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6342)[0m     @     0x56280328f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6342)[0m     @     0x562803319baf _PyEval_EvalCodeWithName
[2m[36m(pid=6337)[0m     @     0x7fbfd7c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6337)[0m     @     0x55f983399fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6337)[0m     @     0x55f9832f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6337)[0m     @     0x55f98337fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6337)[0m     @     0x55f983380a20 method_vectorcall
[2m[36m(pid=6337)[0m     @     0x55f9832f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6337)[0m     @     0x55f98337fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6337)[0m     @     0x55f983380643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6337)[0m     @     0x55f9832f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6337)[0m     @     0x55f98337fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6337)[0m     @     0x55f983380643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6337)[0m     @     0x55f9832f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6337)[0m     @     0x55f98337fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6337)[0m     @     0x55f983380643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6337)[0m     @     0x55f9832f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6337)[0m     @     0x55f98337fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6376)[0m     @     0x7f995ef6c148 at::Tensor::copy_()
[2m[36m(pid=6376)[0m     @     0x7f9965222bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6376)[0m     @     0x55f7067a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6376)[0m     @     0x55f7066feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6376)[0m     @     0x55f706789baf _PyEval_EvalCodeWithName
[2m[36m(pid=6376)[0m     @     0x55f70678aa20 method_vectorcall
[2m[36m(pid=6376)[0m     @     0x55f7066febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6376)[0m     @     0x55f706789baf _PyEval_EvalCodeWithName
[2m[36m(pid=6376)[0m     @     0x55f70678a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6376)[0m     @     0x55f7066ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6376)[0m     @     0x55f706789baf _PyEval_EvalCodeWithName
[2m[36m(pid=6376)[0m     @     0x55f70678a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6376)[0m     @     0x55f7066ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6376)[0m     @     0x55f706789baf _PyEval_EvalCodeWithName
[2m[36m(pid=6376)[0m     @     0x55f70678a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6376)[0m     @     0x55f7066ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6376)[0m     @     0x55f706789baf _PyEval_EvalCodeWithName
[2m[36m(pid=6445)[0m     @     0x7f23dd956148 at::Tensor::copy_()
[2m[36m(pid=6445)[0m     @     0x7f23e3c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6445)[0m     @     0x5619ed9bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6445)[0m     @     0x5619ed917b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6445)[0m     @     0x5619ed9a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6445)[0m     @     0x5619ed9a3a20 method_vectorcall
[2m[36m(pid=6445)[0m     @     0x5619ed917bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6445)[0m     @     0x5619ed9a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6445)[0m     @     0x5619ed9a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6445)[0m     @     0x5619ed918689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6445)[0m     @     0x5619ed9a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6445)[0m     @     0x5619ed9a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6445)[0m     @     0x5619ed918689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6445)[0m     @     0x5619ed9a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6445)[0m     @     0x5619ed9a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6445)[0m     @     0x5619ed918689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6445)[0m     @     0x5619ed9a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=6431)[0m     @     0x7f92e5956148 at::Tensor::copy_()
[2m[36m(pid=6431)[0m     @     0x7f92ebc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6431)[0m     @     0x5645e7a80fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6431)[0m     @     0x5645e79dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6431)[0m     @     0x5645e7a66baf _PyEval_EvalCodeWithName
[2m[36m(pid=6431)[0m     @     0x5645e7a67a20 method_vectorcall
[2m[36m(pid=6431)[0m     @     0x5645e79dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6431)[0m     @     0x5645e7a66baf _PyEval_EvalCodeWithName
[2m[36m(pid=6431)[0m     @     0x5645e7a67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6431)[0m     @     0x5645e79dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6431)[0m     @     0x5645e7a66baf _PyEval_EvalCodeWithName
[2m[36m(pid=6431)[0m     @     0x5645e7a67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6431)[0m     @     0x5645e79dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6431)[0m     @     0x5645e7a66baf _PyEval_EvalCodeWithName
[2m[36m(pid=6431)[0m     @     0x5645e7a67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6431)[0m     @     0x5645e79dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6431)[0m     @     0x5645e7a66baf _PyEval_EvalCodeWithName
[2m[36m(pid=6414)[0m     @     0x7f9dd48d6148 at::Tensor::copy_()
[2m[36m(pid=6414)[0m     @     0x7f9ddab8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6414)[0m     @     0x55e253f17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6414)[0m     @     0x55e253e72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6414)[0m     @     0x55e253efdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6414)[0m     @     0x55e253efea20 method_vectorcall
[2m[36m(pid=6414)[0m     @     0x55e253e72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6414)[0m     @     0x55e253efdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6414)[0m     @     0x55e253efe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6414)[0m     @     0x55e253e73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6414)[0m     @     0x55e253efdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6414)[0m     @     0x55e253efe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6414)[0m     @     0x55e253e73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6414)[0m     @     0x55e253efdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6414)[0m     @     0x55e253efe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6414)[0m     @     0x55e253e73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6414)[0m     @     0x55e253efdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6421)[0m     @     0x7f4ef9d4bed4 at::native::copy_()
[2m[36m(pid=6421)[0m     @     0x7f4efa48e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6347)[0m     @     0x7f34f1fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6347)[0m     @     0x7f34f20d6148 at::Tensor::copy_()
[2m[36m(pid=6347)[0m     @     0x7f34f838cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6347)[0m     @     0x55a32a2e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6347)[0m     @     0x55a32a23cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6347)[0m     @     0x55a32a2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6347)[0m     @     0x55a32a2c8a20 method_vectorcall
[2m[36m(pid=6347)[0m     @     0x55a32a23cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6347)[0m     @     0x55a32a2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6347)[0m     @     0x55a32a2c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6347)[0m     @     0x55a32a23d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6347)[0m     @     0x55a32a2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6347)[0m     @     0x55a32a2c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6347)[0m     @     0x55a32a23d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6347)[0m     @     0x55a32a2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6347)[0m     @     0x55a32a2c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6347)[0m     @     0x55a32a23d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6347)[0m     @     0x55a32a2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6373)[0m     @     0x7f2b28df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6373)[0m     @     0x7f2b28efe148 at::Tensor::copy_()
[2m[36m(pid=6352)[0m     @     0x7f2056a45148 at::Tensor::copy_()
[2m[36m(pid=6352)[0m     @     0x7f205ccfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6352)[0m     @     0x564e7759bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6352)[0m     @     0x564e774f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6352)[0m     @     0x564e77581baf _PyEval_EvalCodeWithName
[2m[36m(pid=6352)[0m     @     0x564e77582a20 method_vectorcall
[2m[36m(pid=6352)[0m     @     0x564e774f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6352)[0m     @     0x564e77581baf _PyEval_EvalCodeWithName
[2m[36m(pid=6352)[0m     @     0x564e77582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6352)[0m     @     0x564e774f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6352)[0m     @     0x564e77581baf _PyEval_EvalCodeWithName
[2m[36m(pid=6352)[0m     @     0x564e77582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6352)[0m     @     0x564e774f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6352)[0m     @     0x564e77581baf _PyEval_EvalCodeWithName
[2m[36m(pid=6352)[0m     @     0x564e77582643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6352)[0m     @     0x564e774f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6352)[0m     @     0x564e77581baf _PyEval_EvalCodeWithName
[2m[36m(pid=6341)[0m     @     0x7fa2bc9d6148 at::Tensor::copy_()
[2m[36m(pid=6341)[0m     @     0x7fa2c2c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6341)[0m     @     0x559139fe2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6341)[0m     @     0x559139f3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6341)[0m     @     0x559139fc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6341)[0m     @     0x559139fc9a20 method_vectorcall
[2m[36m(pid=6341)[0m     @     0x559139f3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6341)[0m     @     0x559139fc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6341)[0m     @     0x559139fc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6341)[0m     @     0x559139f3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6341)[0m     @     0x559139fc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6341)[0m     @     0x559139fc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6341)[0m     @     0x559139f3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6341)[0m     @     0x559139fc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6341)[0m     @     0x559139fc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6341)[0m     @     0x559139f3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6341)[0m     @     0x559139fc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6429)[0m     @     0x7fc60615f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6429)[0m     @     0x7fc6044605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6429)[0m     @     0x7fc604568148 at::Tensor::copy_()
[2m[36m(pid=6429)[0m     @     0x7fc60a81ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6429)[0m     @     0x556935cb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6429)[0m     @     0x556935c12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6429)[0m     @     0x556935c9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6429)[0m     @     0x556935c9ea20 method_vectorcall
[2m[36m(pid=6429)[0m     @     0x556935c12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6429)[0m     @     0x556935c9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6429)[0m     @     0x556935c9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6429)[0m     @     0x556935c13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6429)[0m     @     0x556935c9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6429)[0m     @     0x556935c9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6429)[0m     @     0x556935c13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6429)[0m     @     0x556935c9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6429)[0m     @     0x556935c9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6429)[0m     @     0x556935c13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6429)[0m     @     0x556935c9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6399)[0m     @     0x7f867a5d5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6399)[0m     @     0x7f86788d65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6399)[0m     @     0x7f86789de148 at::Tensor::copy_()
[2m[36m(pid=6399)[0m     @     0x7f867ec94bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6399)[0m     @     0x55bdbdc41fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6399)[0m     @     0x55bdbdb9cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6399)[0m     @     0x55bdbdc27baf _PyEval_EvalCodeWithName
[2m[36m(pid=6399)[0m     @     0x55bdbdc28a20 method_vectorcall
[2m[36m(pid=6399)[0m     @     0x55bdbdb9cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6399)[0m     @     0x55bdbdc27baf _PyEval_EvalCodeWithName
[2m[36m(pid=6399)[0m     @     0x55bdbdc28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6399)[0m     @     0x55bdbdb9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6399)[0m     @     0x55bdbdc27baf _PyEval_EvalCodeWithName
[2m[36m(pid=6399)[0m     @     0x55bdbdc28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6399)[0m     @     0x55bdbdb9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6399)[0m     @     0x55bdbdc27baf _PyEval_EvalCodeWithName
[2m[36m(pid=6399)[0m     @     0x55bdbdc28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6399)[0m     @     0x55bdbdb9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6399)[0m     @     0x55bdbdc27baf _PyEval_EvalCodeWithName
[2m[36m(pid=6428)[0m     @     0x7f525c969148 at::Tensor::copy_()
[2m[36m(pid=6428)[0m     @     0x7f5262c1fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6428)[0m     @     0x55a07e6f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6428)[0m     @     0x55a07e64eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6428)[0m     @     0x55a07e6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6428)[0m     @     0x55a07e6daa20 method_vectorcall
[2m[36m(pid=6428)[0m     @     0x55a07e64ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6428)[0m     @     0x55a07e6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6428)[0m     @     0x55a07e6da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6428)[0m     @     0x55a07e64f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6428)[0m     @     0x55a07e6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6428)[0m     @     0x55a07e6da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6428)[0m     @     0x55a07e64f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6428)[0m     @     0x55a07e6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6428)[0m     @     0x55a07e6da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6428)[0m     @     0x55a07e64f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6428)[0m     @     0x55a07e6d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6405)[0m     @     0x7f2f11b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6405)[0m     @     0x7f2f11c6c148 at::Tensor::copy_()
[2m[36m(pid=6405)[0m     @     0x7f2f17f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6405)[0m     @     0x55b0a21abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6405)[0m     @     0x55b0a2106b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6405)[0m     @     0x55b0a2191baf _PyEval_EvalCodeWithName
[2m[36m(pid=6405)[0m     @     0x55b0a2192a20 method_vectorcall
[2m[36m(pid=6405)[0m     @     0x55b0a2106bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6405)[0m     @     0x55b0a2191baf _PyEval_EvalCodeWithName
[2m[36m(pid=6405)[0m     @     0x55b0a2192643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6405)[0m     @     0x55b0a2107689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6405)[0m     @     0x55b0a2191baf _PyEval_EvalCodeWithName
[2m[36m(pid=6405)[0m     @     0x55b0a2192643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6405)[0m     @     0x55b0a2107689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6405)[0m     @     0x55b0a2191baf _PyEval_EvalCodeWithName
[2m[36m(pid=6405)[0m     @     0x55b0a2192643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6405)[0m     @     0x55b0a2107689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6405)[0m     @     0x55b0a2191baf _PyEval_EvalCodeWithName
[2m[36m(pid=6404)[0m     @     0x7f95d866d148 at::Tensor::copy_()
[2m[36m(pid=6404)[0m     @     0x7f95de923bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6404)[0m     @     0x555bfe8aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6404)[0m     @     0x555bfe809b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6404)[0m     @     0x555bfe894baf _PyEval_EvalCodeWithName
[2m[36m(pid=6404)[0m     @     0x555bfe895a20 method_vectorcall
[2m[36m(pid=6404)[0m     @     0x555bfe809bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6404)[0m     @     0x555bfe894baf _PyEval_EvalCodeWithName
[2m[36m(pid=6404)[0m     @     0x555bfe895643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6404)[0m     @     0x555bfe80a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6404)[0m     @     0x555bfe894baf _PyEval_EvalCodeWithName
[2m[36m(pid=6404)[0m     @     0x555bfe895643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6404)[0m     @     0x555bfe80a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6404)[0m     @     0x555bfe894baf _PyEval_EvalCodeWithName
[2m[36m(pid=6404)[0m     @     0x555bfe895643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6404)[0m     @     0x555bfe80a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6404)[0m     @     0x555bfe894baf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x7f990e2bbed4 at::native::copy_()
[2m[36m(pid=6452)[0m     @     0x7f990e9fe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6452)[0m     @     0x7f990eb06148 at::Tensor::copy_()
[2m[36m(pid=6344)[0m     @     0x7ee2e0ed3ed4 at::native::copy_()
[2m[36m(pid=6344)[0m     @     0x7ee2e16165cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6344)[0m     @     0x7ee2e171e148 at::Tensor::copy_()
[2m[36m(pid=6375)[0m     @     0x7f395d32b148 at::Tensor::copy_()
[2m[36m(pid=6375)[0m     @     0x7f39635e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6375)[0m     @     0x555a79fa7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6375)[0m     @     0x555a79f02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6375)[0m     @     0x555a79f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6375)[0m     @     0x555a79f8ea20 method_vectorcall
[2m[36m(pid=6375)[0m     @     0x555a79f02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6375)[0m     @     0x555a79f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6375)[0m     @     0x555a79f8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6375)[0m     @     0x555a79f03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6375)[0m     @     0x555a79f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6375)[0m     @     0x555a79f8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6375)[0m     @     0x555a79f03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6375)[0m     @     0x555a79f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6375)[0m     @     0x555a79f8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6375)[0m     @     0x555a79f03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6375)[0m     @     0x555a79f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6410)[0m     @     0x7f80b717b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6410)[0m     @     0x7f80b7283148 at::Tensor::copy_()
[2m[36m(pid=6410)[0m     @     0x7f80bd539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6410)[0m     @     0x5648a0ae6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6410)[0m     @     0x5648a0a41b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6410)[0m     @     0x5648a0accbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6410)[0m     @     0x5648a0acda20 method_vectorcall
[2m[36m(pid=6410)[0m     @     0x5648a0a41bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6410)[0m     @     0x5648a0accbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6410)[0m     @     0x5648a0acd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6410)[0m     @     0x5648a0a42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6410)[0m     @     0x5648a0accbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6410)[0m     @     0x5648a0acd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6410)[0m     @     0x5648a0a42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6410)[0m     @     0x5648a0accbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6410)[0m     @     0x5648a0acd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6410)[0m     @     0x5648a0a42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6410)[0m     @     0x5648a0accbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6396)[0m     @     0x7f18254345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6396)[0m     @     0x7f182553c148 at::Tensor::copy_()
[2m[36m(pid=6396)[0m     @     0x7f1827133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6340)[0m     @     0x7f646be65148 at::Tensor::copy_()
[2m[36m(pid=6340)[0m     @     0x7f647211bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6340)[0m     @     0x55ccb4691fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6340)[0m     @     0x55ccb45ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6340)[0m     @     0x55ccb4677baf _PyEval_EvalCodeWithName
[2m[36m(pid=6340)[0m     @     0x55ccb4678a20 method_vectorcall
[2m[36m(pid=6340)[0m     @     0x55ccb45ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6340)[0m     @     0x55ccb4677baf _PyEval_EvalCodeWithName
[2m[36m(pid=6340)[0m     @     0x55ccb4678643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6340)[0m     @     0x55ccb45ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6340)[0m     @     0x55ccb4677baf _PyEval_EvalCodeWithName
[2m[36m(pid=6340)[0m     @     0x55ccb4678643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6340)[0m     @     0x55ccb45ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6340)[0m     @     0x55ccb4677baf _PyEval_EvalCodeWithName
[2m[36m(pid=6340)[0m     @     0x55ccb4678643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6340)[0m     @     0x55ccb45ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6340)[0m     @     0x55ccb4677baf _PyEval_EvalCodeWithName
[2m[36m(pid=6367)[0m     @     0x5586ae175baf _PyEval_EvalCodeWithName
[2m[36m(pid=6367)[0m     @     0x5586ae176643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6367)[0m     @     0x5586ae0eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6367)[0m     @     0x5586ae175baf _PyEval_EvalCodeWithName
[2m[36m(pid=6367)[0m     @     0x5586ae176643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6367)[0m     @     0x5586ae0eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6367)[0m     @     0x5586ae175baf _PyEval_EvalCodeWithName
[2m[36m(pid=6367)[0m     @     0x5586ae176643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6367)[0m     @     0x5586ae0eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6367)[0m     @     0x5586ae175baf _PyEval_EvalCodeWithName
[2m[36m(pid=6409)[0m     @     0x7f92fb283148 at::Tensor::copy_()
[2m[36m(pid=6409)[0m     @     0x7f9301539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6409)[0m     @     0x5571e988ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6409)[0m     @     0x5571e97eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6409)[0m     @     0x5571e9875baf _PyEval_EvalCodeWithName
[2m[36m(pid=6409)[0m     @     0x5571e9876a20 method_vectorcall
[2m[36m(pid=6409)[0m     @     0x5571e97eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6409)[0m     @     0x5571e9875baf _PyEval_EvalCodeWithName
[2m[36m(pid=6409)[0m     @     0x5571e9876643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6409)[0m     @     0x5571e97eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6409)[0m     @     0x5571e9875baf _PyEval_EvalCodeWithName
[2m[36m(pid=6409)[0m     @     0x5571e9876643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6409)[0m     @     0x5571e97eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6409)[0m     @     0x5571e9875baf _PyEval_EvalCodeWithName
[2m[36m(pid=6409)[0m     @     0x5571e9876643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6409)[0m     @     0x5571e97eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6409)[0m     @     0x5571e9875baf _PyEval_EvalCodeWithName
[2m[36m(pid=6349)[0m     @     0x7efdde02b148 at::Tensor::copy_()
[2m[36m(pid=6349)[0m     @     0x7efde42e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6349)[0m     @     0x55f578389fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6349)[0m     @     0x55f5782e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6349)[0m     @     0x55f57836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6349)[0m     @     0x55f578370a20 method_vectorcall
[2m[36m(pid=6349)[0m     @     0x55f5782e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6349)[0m     @     0x55f57836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6349)[0m     @     0x55f578370643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6349)[0m     @     0x55f5782e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6349)[0m     @     0x55f57836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6349)[0m     @     0x55f578370643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6349)[0m     @     0x55f5782e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6349)[0m     @     0x55f57836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6349)[0m     @     0x55f578370643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6349)[0m     @     0x55f5782e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6349)[0m     @     0x55f57836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=6339)[0m     @     0x55f9ff806baf _PyEval_EvalCodeWithName
[2m[36m(pid=6365)[0m     @     0x7ef64a9d8148 at::Tensor::copy_()
[2m[36m(pid=6365)[0m     @     0x7ef650c8ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6365)[0m     @     0x5593da613fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6365)[0m     @     0x5593da56eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6365)[0m     @     0x5593da5f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6365)[0m     @     0x5593da5faa20 method_vectorcall
[2m[36m(pid=6365)[0m     @     0x5593da56ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6365)[0m     @     0x5593da5f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6365)[0m     @     0x5593da5fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6365)[0m     @     0x5593da56f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6365)[0m     @     0x5593da5f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6365)[0m     @     0x5593da5fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6365)[0m     @     0x5593da56f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6365)[0m     @     0x5593da5f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6365)[0m     @     0x5593da5fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6365)[0m     @     0x5593da56f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6365)[0m     @     0x5593da5f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=6346)[0m     @     0x7f3e6bb71bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6346)[0m     @     0x5583414d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6346)[0m     @     0x55834142bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6346)[0m     @     0x5583414b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6346)[0m     @     0x5583414b7a20 method_vectorcall
[2m[36m(pid=6346)[0m     @     0x55834142bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6346)[0m     @     0x5583414b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6346)[0m     @     0x5583414b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6346)[0m     @     0x55834142c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6346)[0m     @     0x5583414b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6346)[0m     @     0x5583414b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6346)[0m     @     0x55834142c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6346)[0m     @     0x5583414b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6346)[0m     @     0x5583414b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6346)[0m     @     0x55834142c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6346)[0m     @     0x5583414b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=6401)[0m     @     0x5598ef597baf _PyEval_EvalCodeWithName
[2m[36m(pid=6435)[0m     @     0x7ececde97148 at::Tensor::copy_()
[2m[36m(pid=6435)[0m     @     0x7eced414dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6435)[0m     @     0x555be62f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6435)[0m     @     0x555be624cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6435)[0m     @     0x555be62d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6435)[0m     @     0x555be62d8a20 method_vectorcall
[2m[36m(pid=6435)[0m     @     0x555be624cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6435)[0m     @     0x555be62d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6435)[0m     @     0x555be62d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6435)[0m     @     0x555be624d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6435)[0m     @     0x555be62d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6435)[0m     @     0x555be62d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6435)[0m     @     0x555be624d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6435)[0m     @     0x555be62d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6435)[0m     @     0x555be62d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6435)[0m     @     0x555be624d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6435)[0m     @     0x555be62d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6418)[0m     @     0x55986faa3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x7f148cb905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6463)[0m     @     0x7f148cc98148 at::Tensor::copy_()
[2m[36m(pid=6421)[0m     @     0x7f4efa596148 at::Tensor::copy_()
[2m[36m(pid=6421)[0m     @     0x7f4efc18d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6421)[0m     @     0x7f4efa48e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6373)[0m     @     0x7f2b2f1b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6373)[0m     @     0x557815e12fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6373)[0m     @     0x557815d6db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6373)[0m     @     0x557815df8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6373)[0m     @     0x557815df9a20 method_vectorcall
[2m[36m(pid=6373)[0m     @     0x557815d6dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6373)[0m     @     0x557815df8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6373)[0m     @     0x557815df9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6373)[0m     @     0x557815d6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6373)[0m     @     0x557815df8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6373)[0m     @     0x557815df9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6373)[0m     @     0x557815d6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6373)[0m     @     0x557815df8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6373)[0m     @     0x557815df9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6373)[0m     @     0x557815d6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6373)[0m     @     0x557815df8baf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x7f99106fd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6452)[0m     @     0x7f990e9fe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6344)[0m     @     0x7ee2e3315989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6344)[0m     @     0x7ee2e16165cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6396)[0m     @     0x7f18254345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6396)[0m     @     0x7f182553c148 at::Tensor::copy_()
[2m[36m(pid=6396)[0m     @     0x7f182b7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6396)[0m     @     0x5560f237afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6396)[0m     @     0x5560f22d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6396)[0m     @     0x5560f2360baf _PyEval_EvalCodeWithName
[2m[36m(pid=6396)[0m     @     0x5560f2361a20 method_vectorcall
[2m[36m(pid=6396)[0m     @     0x5560f22d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6396)[0m     @     0x5560f2360baf _PyEval_EvalCodeWithName
[2m[36m(pid=6396)[0m     @     0x5560f2361643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6396)[0m     @     0x5560f22d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6396)[0m     @     0x5560f2360baf _PyEval_EvalCodeWithName
[2m[36m(pid=6396)[0m     @     0x5560f2361643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6396)[0m     @     0x5560f22d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6396)[0m     @     0x5560f2360baf _PyEval_EvalCodeWithName
[2m[36m(pid=6396)[0m     @     0x5560f2361643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6396)[0m     @     0x5560f22d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6396)[0m     @     0x5560f2360baf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x7f148e88f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=6463)[0m     @     0x7f148cb905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=6463)[0m     @     0x7f148cc98148 at::Tensor::copy_()
[2m[36m(pid=6421)[0m     @     0x7f4efa596148 at::Tensor::copy_()
[2m[36m(pid=6421)[0m     @     0x7f4f0084cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6421)[0m     @     0x562b5ae33fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6421)[0m     @     0x562b5ad8eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6421)[0m     @     0x562b5ae19baf _PyEval_EvalCodeWithName
[2m[36m(pid=6421)[0m     @     0x562b5ae1aa20 method_vectorcall
[2m[36m(pid=6421)[0m     @     0x562b5ad8ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6421)[0m     @     0x562b5ae19baf _PyEval_EvalCodeWithName
[2m[36m(pid=6421)[0m     @     0x562b5ae1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6421)[0m     @     0x562b5ad8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6421)[0m     @     0x562b5ae19baf _PyEval_EvalCodeWithName
[2m[36m(pid=6421)[0m     @     0x562b5ae1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6421)[0m     @     0x562b5ad8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6421)[0m     @     0x562b5ae19baf _PyEval_EvalCodeWithName
[2m[36m(pid=6421)[0m     @     0x562b5ae1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6421)[0m     @     0x562b5ad8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6421)[0m     @     0x562b5ae19baf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x7f990eb06148 at::Tensor::copy_()
[2m[36m(pid=6452)[0m     @     0x7f9914dbcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6452)[0m     @     0x562b1d6edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6452)[0m     @     0x562b1d648b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6452)[0m     @     0x562b1d6d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x562b1d6d4a20 method_vectorcall
[2m[36m(pid=6452)[0m     @     0x562b1d648bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6452)[0m     @     0x562b1d6d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x562b1d6d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6452)[0m     @     0x562b1d649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6452)[0m     @     0x562b1d6d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x562b1d6d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6452)[0m     @     0x562b1d649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6452)[0m     @     0x562b1d6d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6452)[0m     @     0x562b1d6d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6452)[0m     @     0x562b1d649689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6452)[0m     @     0x562b1d6d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=6344)[0m     @     0x7ee2e171e148 at::Tensor::copy_()
[2m[36m(pid=6344)[0m     @     0x7ee2e79d4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6344)[0m     @     0x55c99532cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6344)[0m     @     0x55c995287b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6344)[0m     @     0x55c995312baf _PyEval_EvalCodeWithName
[2m[36m(pid=6344)[0m     @     0x55c995313a20 method_vectorcall
[2m[36m(pid=6344)[0m     @     0x55c995287bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6344)[0m     @     0x55c995312baf _PyEval_EvalCodeWithName
[2m[36m(pid=6344)[0m     @     0x55c995313643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6344)[0m     @     0x55c995288689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6344)[0m     @     0x55c995312baf _PyEval_EvalCodeWithName
[2m[36m(pid=6344)[0m     @     0x55c995313643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6344)[0m     @     0x55c995288689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6344)[0m     @     0x55c995312baf _PyEval_EvalCodeWithName
[2m[36m(pid=6344)[0m     @     0x55c995313643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6344)[0m     @     0x55c995288689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6344)[0m     @     0x55c995312baf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x7f1492f4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=6463)[0m     @     0x5603453c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=6463)[0m     @     0x56034531cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6463)[0m     @     0x5603453a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x5603453a8a20 method_vectorcall
[2m[36m(pid=6463)[0m     @     0x56034531cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6463)[0m     @     0x5603453a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x5603453a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6463)[0m     @     0x56034531d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6463)[0m     @     0x5603453a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x5603453a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6463)[0m     @     0x56034531d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6463)[0m     @     0x5603453a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=6463)[0m     @     0x5603453a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=6463)[0m     @     0x56034531d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=6463)[0m     @     0x5603453a7baf _PyEval_EvalCodeWithName
2020-11-05 10:57:24,528	ERROR trial_runner.py:567 -- Trial PPO_jss_env_ab29d_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=6454, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:57:24,532	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:57:24,533	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:57:24,533	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
[2m[36m(pid=6454)[0m E1105 10:57:24.521525  6454  7451 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=4db1cba171d56c3356c9ec1501000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6454)[0m E1105 10:57:24.521710  6454  7451 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=5cf29c5b7b7ed08d56c9ec1501000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6454)[0m E1105 10:57:24.528575  6454  7451 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6454)[0m E1105 10:57:24.528713  6454  7451 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6454)[0m E1105 10:57:24.528825  6454  7451 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9ecf84e34eb8e61dc2621d1401000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=6454)[0m E1105 10:57:24.528877  6454  7451 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=f3cba62d4c01820bc2621d1401000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=6454)[0m E1105 10:57:24.534862  6454  7451 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=37f711ca0d66f5bd4100f4fd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=6454)[0m E1105 10:57:24.535904  6454  7451 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=9d0a2db204e8f81056c9ec1501000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=56c9ec1501000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=6454)[0m E1105 10:57:24.536018  6454  7451 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=8fbf1bd7de98d288c2621d1401000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=c2621d1401000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:57:24,562	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
== Status ==
Memory usage on this node: 23.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ab29d_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ab29d_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ab29d_00000_0_2020-11-05_10-57-16/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 23.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ab29d_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ab29d_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ab29d_00000_0_2020-11-05_10-57-16/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_ab29d_00000])
