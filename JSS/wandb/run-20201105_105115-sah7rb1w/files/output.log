2020-11-05 10:51:18,963	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_d695b_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=66156)[0m 2020-11-05 10:51:21,761	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=66156)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=66156)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=66156)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=66156)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=66156)[0m 
[2m[36m(pid=66156)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=66143)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66143)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66143)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66143)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66143)[0m *** SIGSEGV (@0x0) received by PID 66143 (TID 0x7fc7b330e700) from PID 0; stack trace: ***
[2m[36m(pid=66143)[0m     @     0x7fc7b2ee7390 (unknown)
[2m[36m(pid=66143)[0m     @     0x7f98b2e93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66143)[0m     @     0x7f98b25be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66143)[0m     @     0x7f98b25c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66143)[0m     @     0x7f98b25c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=66114)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66114)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66114)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66114)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66114)[0m *** SIGSEGV (@0x0) received by PID 66114 (TID 0x7fb4f8239700) from PID 0; stack trace: ***
[2m[36m(pid=66114)[0m     @     0x7fb4f7e12390 (unknown)
[2m[36m(pid=66114)[0m     @     0x7f85f7d2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66114)[0m     @     0x7f85f74577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66114)[0m     @     0x7f85f745a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66114)[0m     @     0x7f85f745aad3 at::TensorIterator::for_each()
[2m[36m(pid=66114)[0m     @     0x7f85f745ad91 at::TensorIterator::for_each()
[2m[36m(pid=66111)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66111)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66111)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66111)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66111)[0m *** SIGSEGV (@0x0) received by PID 66111 (TID 0x7f05250ff700) from PID 0; stack trace: ***
[2m[36m(pid=66111)[0m     @     0x7f0524cd8390 (unknown)
[2m[36m(pid=66111)[0m     @     0x7ed624bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66111)[0m     @     0x7ed6242fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66111)[0m     @     0x7ed6242ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66111)[0m     @     0x7ed6242ffad3 at::TensorIterator::for_each()
[2m[36m(pid=66111)[0m     @     0x7ed6242ffd91 at::TensorIterator::for_each()
[2m[36m(pid=66111)[0m     @     0x7ed624be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66111)[0m     @     0x7ed624c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66038)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66038)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66038)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66044)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66044)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66044)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66131)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66131)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66131)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66131)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66131)[0m *** SIGSEGV (@0x0) received by PID 66131 (TID 0x7f979d88c700) from PID 0; stack trace: ***
[2m[36m(pid=66131)[0m     @     0x7f979d465390 (unknown)
[2m[36m(pid=66131)[0m     @     0x7f689d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66131)[0m     @     0x7f689caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66131)[0m     @     0x7f689cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66131)[0m     @     0x7f689cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=66020)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66020)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66020)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66095)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66095)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66095)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66095)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66095)[0m *** SIGSEGV (@0x0) received by PID 66095 (TID 0x7f84f9a33700) from PID 0; stack trace: ***
[2m[36m(pid=66095)[0m     @     0x7f84f960c390 (unknown)
[2m[36m(pid=66095)[0m     @     0x7f55f95a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66095)[0m     @     0x7f55f8ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66095)[0m     @     0x7f55f8cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66095)[0m     @     0x7f55f8cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=66116)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66116)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66116)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66116)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66116)[0m *** SIGSEGV (@0x0) received by PID 66116 (TID 0x7f2730af4700) from PID 0; stack trace: ***
[2m[36m(pid=66116)[0m     @     0x7f27306cd390 (unknown)
[2m[36m(pid=66116)[0m     @     0x7ef830563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66116)[0m     @     0x7ef82fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66116)[0m     @     0x7ef82fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66116)[0m     @     0x7ef82fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=66116)[0m     @     0x7ef82fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=66116)[0m     @     0x7ef830574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66030)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66030)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66030)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66153)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66153)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66153)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66153)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66153)[0m *** SIGSEGV (@0x0) received by PID 66153 (TID 0x7f0850541700) from PID 0; stack trace: ***
[2m[36m(pid=66153)[0m     @     0x7f085011a390 (unknown)
[2m[36m(pid=66153)[0m     @     0x7ed94fed8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66153)[0m     @     0x7ed94f6037db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66153)[0m     @     0x7ed94f6068f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66153)[0m     @     0x7ed94f606ad3 at::TensorIterator::for_each()
[2m[36m(pid=66153)[0m     @     0x7ed94f606d91 at::TensorIterator::for_each()
[2m[36m(pid=66153)[0m     @     0x7ed94fee9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66153)[0m     @     0x7ed94ff0cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66019)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66019)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66019)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66042)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66042)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66042)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66146)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66146)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66146)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66146)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66146)[0m *** SIGSEGV (@0x0) received by PID 66146 (TID 0x7fd5a0a22700) from PID 0; stack trace: ***
[2m[36m(pid=66146)[0m     @     0x7fd5a05fb390 (unknown)
[2m[36m(pid=66146)[0m     @     0x7fa6a0563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66146)[0m     @     0x7fa69fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66146)[0m     @     0x7fa69fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66146)[0m     @     0x7fa69fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=66118)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66118)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66118)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66118)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66118)[0m *** SIGSEGV (@0x0) received by PID 66118 (TID 0x7f33a1162700) from PID 0; stack trace: ***
[2m[36m(pid=66118)[0m     @     0x7f33a0d3b390 (unknown)
[2m[36m(pid=66023)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66023)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66023)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66018)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66018)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66018)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66150)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66150)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66150)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66150)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66150)[0m *** SIGSEGV (@0x0) received by PID 66150 (TID 0x7fe48b210700) from PID 0; stack trace: ***
[2m[36m(pid=66150)[0m     @     0x7fe48ade9390 (unknown)
[2m[36m(pid=66150)[0m     @     0x7fb58ad83f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66150)[0m     @     0x7fb58a4ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66150)[0m     @     0x7fb58a4b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66150)[0m     @     0x7fb58a4b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=66150)[0m     @     0x7fb58a4b1d91 at::TensorIterator::for_each()
[2m[36m(pid=66150)[0m     @     0x7fb58ad94b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66150)[0m     @     0x7fb58adb7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66133)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66133)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66133)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66133)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66133)[0m *** SIGSEGV (@0x0) received by PID 66133 (TID 0x7f9a67fae700) from PID 0; stack trace: ***
[2m[36m(pid=66024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66024)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66024)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66024)[0m *** SIGSEGV (@0x0) received by PID 66024 (TID 0x7fb4a9879700) from PID 0; stack trace: ***
[2m[36m(pid=66103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66103)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66040)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66040)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66034)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66034)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66034)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66106)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66106)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66106)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66106)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66039)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66039)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66039)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66036)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66036)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66036)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66036)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66036)[0m *** SIGSEGV (@0x0) received by PID 66036 (TID 0x7f72a2841700) from PID 0; stack trace: ***
[2m[36m(pid=66022)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66022)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66022)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66022)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66022)[0m *** SIGSEGV (@0x0) received by PID 66022 (TID 0x7f41fa310700) from PID 0; stack trace: ***
[2m[36m(pid=66026)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66026)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66026)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66026)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66026)[0m *** SIGSEGV (@0x0) received by PID 66026 (TID 0x7feef3fb2700) from PID 0; stack trace: ***
[2m[36m(pid=66046)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66046)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66046)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66033)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66033)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66033)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66091)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66091)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66091)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66041)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66041)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66041)[0m *** SIGSEGV (@0x0) received by PID 66041 (TID 0x7f529af7b700) from PID 0; stack trace: ***
[2m[36m(pid=66041)[0m     @     0x7f529ab54390 (unknown)
[2m[36m(pid=66041)[0m     @     0x7f239aad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66041)[0m     @     0x7f239a1fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66080)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66080)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66080)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66080)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66080)[0m *** SIGSEGV (@0x0) received by PID 66080 (TID 0x7f3fc7a3e700) from PID 0; stack trace: ***
[2m[36m(pid=66080)[0m     @     0x7f3fc7617390 (unknown)
[2m[36m(pid=66080)[0m     @     0x7f10c743af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66080)[0m     @     0x7f10c6b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66089)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66089)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66089)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66089)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66089)[0m *** SIGSEGV (@0x0) received by PID 66089 (TID 0x7fb7d8e3d700) from PID 0; stack trace: ***
[2m[36m(pid=66089)[0m     @     0x7fb7d8a16390 (unknown)
[2m[36m(pid=66135)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66135)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66135)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66135)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66135)[0m *** SIGSEGV (@0x0) received by PID 66135 (TID 0x7ff1c063f700) from PID 0; stack trace: ***
[2m[36m(pid=66135)[0m     @     0x7ff1c0218390 (unknown)
[2m[36m(pid=66135)[0m     @     0x7fc2bfd2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66087)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66087)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66087)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66087)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66087)[0m *** SIGSEGV (@0x0) received by PID 66087 (TID 0x7fc6757f8700) from PID 0; stack trace: ***
[2m[36m(pid=66087)[0m     @     0x7fc6753d1390 (unknown)
[2m[36m(pid=66087)[0m     @     0x7f977535ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66087)[0m     @     0x7f9774a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66123)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66123)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66123)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66123)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66123)[0m *** SIGSEGV (@0x0) received by PID 66123 (TID 0x7f568b9fe700) from PID 0; stack trace: ***
[2m[36m(pid=66123)[0m     @     0x7f568b5d7390 (unknown)
[2m[36m(pid=66123)[0m     @     0x7f278b572f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66123)[0m     @     0x7f278ac9d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66027)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66027)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66027)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66027)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66027)[0m *** SIGSEGV (@0x0) received by PID 66027 (TID 0x7f128f89e700) from PID 0; stack trace: ***
[2m[36m(pid=66027)[0m     @     0x7f128f477390 (unknown)
[2m[36m(pid=66027)[0m     @     0x7ee38f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66027)[0m     @     0x7ee38e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66032)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66032)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66032)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66032)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66032)[0m *** SIGSEGV (@0x0) received by PID 66032 (TID 0x7f02e87f5700) from PID 0; stack trace: ***
[2m[36m(pid=66032)[0m     @     0x7f02e83ce390 (unknown)
[2m[36m(pid=66032)[0m     @     0x7ed3e832cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66120)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66120)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66120)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66120)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66120)[0m *** SIGSEGV (@0x0) received by PID 66120 (TID 0x7f710f066700) from PID 0; stack trace: ***
[2m[36m(pid=66120)[0m     @     0x7f710ec3f390 (unknown)
[2m[36m(pid=66120)[0m     @     0x7f420ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66120)[0m     @     0x7f420e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66104)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66104)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66104)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66104)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66104)[0m *** SIGSEGV (@0x0) received by PID 66104 (TID 0x7fc6adb0b700) from PID 0; stack trace: ***
[2m[36m(pid=66104)[0m     @     0x7fc6ad6e4390 (unknown)
[2m[36m(pid=66104)[0m     @     0x7f97ad687f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66104)[0m     @     0x7f97acdb27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66025)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66025)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66025)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66025)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66025)[0m *** SIGSEGV (@0x0) received by PID 66025 (TID 0x7f8c95759700) from PID 0; stack trace: ***
[2m[36m(pid=66025)[0m     @     0x7f8c95332390 (unknown)
[2m[36m(pid=66025)[0m     @     0x7f5d952cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66025)[0m     @     0x7f5d949f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66132)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66132)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66132)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66132)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66132)[0m *** SIGSEGV (@0x0) received by PID 66132 (TID 0x7fb9beddc700) from PID 0; stack trace: ***
[2m[36m(pid=66132)[0m     @     0x7fb9be9b5390 (unknown)
[2m[36m(pid=66132)[0m     @     0x7f8abe93af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66132)[0m     @     0x7f8abe0657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66132)[0m     @     0x7f8abe0688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66132)[0m     @     0x7f8abe068ad3 at::TensorIterator::for_each()
[2m[36m(pid=66132)[0m     @     0x7f8abe068d91 at::TensorIterator::for_each()
[2m[36m(pid=66132)[0m     @     0x7f8abe94bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66132)[0m     @     0x7f8abe96ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66132)[0m     @     0x7f8abde10a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66132)[0m     @     0x7f8abde0e388 at::native::copy_impl()
[2m[36m(pid=66132)[0m     @     0x7f8abde105a4 at::native::copy_()
[2m[36m(pid=66132)[0m     @     0x7f8abe4fb4f5 at::Tensor::copy_()
[2m[36m(pid=66137)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66137)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66137)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66137)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66137)[0m *** SIGSEGV (@0x0) received by PID 66137 (TID 0x7fd461cc3700) from PID 0; stack trace: ***
[2m[36m(pid=66137)[0m     @     0x7fd46189c390 (unknown)
[2m[36m(pid=66137)[0m     @     0x7fa5617f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66137)[0m     @     0x7fa560f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66137)[0m     @     0x7fa560f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66137)[0m     @     0x7fa560f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=66137)[0m     @     0x7fa560f27d91 at::TensorIterator::for_each()
[2m[36m(pid=66137)[0m     @     0x7fa56180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66137)[0m     @     0x7fa56182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66137)[0m     @     0x7fa560ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66137)[0m     @     0x7fa560ccd388 at::native::copy_impl()
[2m[36m(pid=66137)[0m     @     0x7fa560ccf5a4 at::native::copy_()
[2m[36m(pid=66099)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66099)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66099)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66099)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66099)[0m *** SIGSEGV (@0x0) received by PID 66099 (TID 0x7f11dd5ad700) from PID 0; stack trace: ***
[2m[36m(pid=66099)[0m     @     0x7f11dd186390 (unknown)
[2m[36m(pid=66099)[0m     @     0x7ee2dd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66099)[0m     @     0x7ee2dc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66099)[0m     @     0x7ee2dc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66099)[0m     @     0x7ee2dc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=66099)[0m     @     0x7ee2dc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=66099)[0m     @     0x7ee2dd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66099)[0m     @     0x7ee2dd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66099)[0m     @     0x7ee2dc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66099)[0m     @     0x7ee2dc589388 at::native::copy_impl()
[2m[36m(pid=66099)[0m     @     0x7ee2dc58b5a4 at::native::copy_()
[2m[36m(pid=66124)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66124)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66124)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66124)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66124)[0m *** SIGSEGV (@0x0) received by PID 66124 (TID 0x7fd297856700) from PID 0; stack trace: ***
[2m[36m(pid=66124)[0m     @     0x7fd29742f390 (unknown)
[2m[36m(pid=66124)[0m     @     0x7fa397229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66124)[0m     @     0x7fa3969547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66124)[0m     @     0x7fa3969578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66084)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66084)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66084)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66084)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66084)[0m *** SIGSEGV (@0x0) received by PID 66084 (TID 0x7ffa10c08700) from PID 0; stack trace: ***
[2m[36m(pid=66084)[0m     @     0x7ffa107e1390 (unknown)
[2m[36m(pid=66084)[0m     @     0x7fcb1074cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66084)[0m     @     0x7fcb0fe777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66084)[0m     @     0x7fcb0fe7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66105)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66105)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66105)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66105)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66105)[0m *** SIGSEGV (@0x0) received by PID 66105 (TID 0x7f978d0d7700) from PID 0; stack trace: ***
[2m[36m(pid=66105)[0m     @     0x7f978ccb0390 (unknown)
[2m[36m(pid=66105)[0m     @     0x7f688cb3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66105)[0m     @     0x7f688c2667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66105)[0m     @     0x7f688c2698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66105)[0m     @     0x7f688c269ad3 at::TensorIterator::for_each()
[2m[36m(pid=66105)[0m     @     0x7f688c269d91 at::TensorIterator::for_each()
[2m[36m(pid=66105)[0m     @     0x7f688cb4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66105)[0m     @     0x7f688cb6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66105)[0m     @     0x7f688c011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66105)[0m     @     0x7f688c00f388 at::native::copy_impl()
[2m[36m(pid=66105)[0m     @     0x7f688c0115a4 at::native::copy_()
[2m[36m(pid=66054)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66054)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66054)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66054)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66054)[0m *** SIGSEGV (@0x0) received by PID 66054 (TID 0x7f2326639700) from PID 0; stack trace: ***
[2m[36m(pid=66054)[0m     @     0x7f2326212390 (unknown)
[2m[36m(pid=66054)[0m     @     0x7ef42613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66126)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66126)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66126)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66126)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66126)[0m *** SIGSEGV (@0x0) received by PID 66126 (TID 0x7ffa8c909700) from PID 0; stack trace: ***
[2m[36m(pid=66126)[0m     @     0x7ffa8c4e2390 (unknown)
[2m[36m(pid=66126)[0m     @     0x7fcb8c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66126)[0m     @     0x7fcb8ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66126)[0m     @     0x7fcb8ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66126)[0m     @     0x7fcb8ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=66126)[0m     @     0x7fcb8ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=66126)[0m     @     0x7fcb8c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66126)[0m     @     0x7fcb8c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66126)[0m     @     0x7fcb8b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66126)[0m     @     0x7fcb8b807388 at::native::copy_impl()
[2m[36m(pid=66126)[0m     @     0x7fcb8b8095a4 at::native::copy_()
[2m[36m(pid=66126)[0m     @     0x7fcb8bef44f5 at::Tensor::copy_()
[2m[36m(pid=66088)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66088)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66088)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66088)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66088)[0m *** SIGSEGV (@0x0) received by PID 66088 (TID 0x7fe60b38f700) from PID 0; stack trace: ***
[2m[36m(pid=66097)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66097)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66097)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66097)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66097)[0m *** SIGSEGV (@0x0) received by PID 66097 (TID 0x7fda454b1700) from PID 0; stack trace: ***
[2m[36m(pid=66097)[0m     @     0x7fda4508a390 (unknown)
[2m[36m(pid=66097)[0m     @     0x7fab45023f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66050)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66050)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66050)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66050)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66050)[0m *** SIGSEGV (@0x0) received by PID 66050 (TID 0x7f858ebae700) from PID 0; stack trace: ***
[2m[36m(pid=66050)[0m     @     0x7f858e787390 (unknown)
[2m[36m(pid=66050)[0m     @     0x7f568e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66100)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66100)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66100)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66100)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66100)[0m *** SIGSEGV (@0x0) received by PID 66100 (TID 0x7f1acdba8700) from PID 0; stack trace: ***
[2m[36m(pid=66100)[0m     @     0x7f1acd781390 (unknown)
[2m[36m(pid=66100)[0m     @     0x7eebcd6f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66037)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66037)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66053)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66053)[0m *** SIGSEGV (@0x0) received by PID 66053 (TID 0x7f25f295b700) from PID 0; stack trace: ***
[2m[36m(pid=66053)[0m     @     0x7f25f2534390 (unknown)
[2m[36m(pid=66138)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66138)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66138)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66138)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66138)[0m *** SIGSEGV (@0x0) received by PID 66138 (TID 0x7f1a121e4700) from PID 0; stack trace: ***
[2m[36m(pid=66138)[0m     @     0x7f1a11dbd390 (unknown)
[2m[36m(pid=66138)[0m     @     0x7eeb11d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66093)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66093)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66093)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66093)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66093)[0m *** SIGSEGV (@0x0) received by PID 66093 (TID 0x7f7a7fdf8700) from PID 0; stack trace: ***
[2m[36m(pid=66093)[0m     @     0x7f7a7f9d1390 (unknown)
[2m[36m(pid=66043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66043)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66043)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66043)[0m *** SIGSEGV (@0x0) received by PID 66043 (TID 0x7fdd7b22d700) from PID 0; stack trace: ***
[2m[36m(pid=66043)[0m     @     0x7fdd7ae06390 (unknown)
[2m[36m(pid=66082)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66082)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66082)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66125)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66125)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66125)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66125)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66125)[0m *** SIGSEGV (@0x0) received by PID 66125 (TID 0x7fc962f85700) from PID 0; stack trace: ***
[2m[36m(pid=66125)[0m     @     0x7fc962b5e390 (unknown)
[2m[36m(pid=66125)[0m     @     0x7f9a6280bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66125)[0m     @     0x7f9a61f367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66125)[0m     @     0x7f9a61f398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66125)[0m     @     0x7f9a61f39ad3 at::TensorIterator::for_each()
[2m[36m(pid=66125)[0m     @     0x7f9a61f39d91 at::TensorIterator::for_each()
[2m[36m(pid=66125)[0m     @     0x7f9a6281cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66125)[0m     @     0x7f9a6283fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66125)[0m     @     0x7f9a61ce1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66125)[0m     @     0x7f9a61cdf388 at::native::copy_impl()
[2m[36m(pid=66125)[0m     @     0x7f9a61ce15a4 at::native::copy_()
[2m[36m(pid=66128)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66128)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66128)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66128)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66128)[0m *** SIGSEGV (@0x0) received by PID 66128 (TID 0x7f742ac8e700) from PID 0; stack trace: ***
[2m[36m(pid=66128)[0m     @     0x7f742a867390 (unknown)
[2m[36m(pid=66128)[0m     @     0x7f452a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66128)[0m     @     0x7f4529ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66128)[0m     @     0x7f4529ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66128)[0m     @     0x7f4529ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=66128)[0m     @     0x7f4529ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=66128)[0m     @     0x7f452a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66128)[0m     @     0x7f452a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66128)[0m     @     0x7f4529c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66128)[0m     @     0x7f4529c8f388 at::native::copy_impl()
[2m[36m(pid=66128)[0m     @     0x7f4529c915a4 at::native::copy_()
[2m[36m(pid=66128)[0m     @     0x7f452a37c4f5 at::Tensor::copy_()
[2m[36m(pid=66021)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66021)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66021)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66021)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66021)[0m *** SIGSEGV (@0x0) received by PID 66021 (TID 0x7fc3f6bd0700) from PID 0; stack trace: ***
[2m[36m(pid=66021)[0m     @     0x7fc3f67a9390 (unknown)
[2m[36m(pid=66021)[0m     @     0x7f94f64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66021)[0m     @     0x7f94f5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66096)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66096)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66096)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66096)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66096)[0m *** SIGSEGV (@0x0) received by PID 66096 (TID 0x7f34bb364700) from PID 0; stack trace: ***
[2m[36m(pid=66096)[0m     @     0x7f34baf3d390 (unknown)
[2m[36m(pid=66096)[0m     @     0x7f05baed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66096)[0m     @     0x7f05ba5fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66096)[0m     @     0x7f05ba6018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66096)[0m     @     0x7f05ba601ad3 at::TensorIterator::for_each()
[2m[36m(pid=66096)[0m     @     0x7f05ba601d91 at::TensorIterator::for_each()
[2m[36m(pid=66096)[0m     @     0x7f05baee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66096)[0m     @     0x7f05baf07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66096)[0m     @     0x7f05ba3a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66096)[0m     @     0x7f05ba3a7388 at::native::copy_impl()
[2m[36m(pid=66096)[0m     @     0x7f05ba3a95a4 at::native::copy_()
[2m[36m(pid=66096)[0m     @     0x7f05baa944f5 at::Tensor::copy_()
[2m[36m(pid=66096)[0m     @     0x7f05bcf678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66090)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66090)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66090)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66090)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66090)[0m *** SIGSEGV (@0x0) received by PID 66090 (TID 0x7f7848fcc700) from PID 0; stack trace: ***
[2m[36m(pid=66090)[0m     @     0x7f7848ba5390 (unknown)
[2m[36m(pid=66090)[0m     @     0x7f4948b3ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66090)[0m     @     0x7f494826a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66094)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66094)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66094)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66094)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66094)[0m *** SIGSEGV (@0x0) received by PID 66094 (TID 0x7f4065efa700) from PID 0; stack trace: ***
[2m[36m(pid=66094)[0m     @     0x7f4065ad3390 (unknown)
[2m[36m(pid=66094)[0m     @     0x7f1165a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66094)[0m     @     0x7f11651357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66098)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66098)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66098)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66098)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66098)[0m *** SIGSEGV (@0x0) received by PID 66098 (TID 0x7fb56fdc5700) from PID 0; stack trace: ***
[2m[36m(pid=66098)[0m     @     0x7fb56f99e390 (unknown)
[2m[36m(pid=66098)[0m     @     0x7f866f751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66098)[0m     @     0x7f866ee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66098)[0m     @     0x7f866ee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66141)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66141)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66141)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66141)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66141)[0m *** SIGSEGV (@0x0) received by PID 66141 (TID 0x7fe658566700) from PID 0; stack trace: ***
[2m[36m(pid=66141)[0m     @     0x7fe65813f390 (unknown)
[2m[36m(pid=66141)[0m     @     0x7fb75801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66141)[0m     @     0x7fb7577477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66141)[0m     @     0x7fb75774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66141)[0m     @     0x7fb75774aad3 at::TensorIterator::for_each()
[2m[36m(pid=66141)[0m     @     0x7fb75774ad91 at::TensorIterator::for_each()
[2m[36m(pid=66141)[0m     @     0x7fb75802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66141)[0m     @     0x7fb758050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66141)[0m     @     0x7fb7574f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66141)[0m     @     0x7fb7574f0388 at::native::copy_impl()
[2m[36m(pid=66141)[0m     @     0x7fb7574f25a4 at::native::copy_()
[2m[36m(pid=66141)[0m     @     0x7fb757bdd4f5 at::Tensor::copy_()
[2m[36m(pid=66143)[0m     @     0x7f98b25c1d91 at::TensorIterator::for_each()
[2m[36m(pid=66143)[0m     @     0x7f98b2ea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66143)[0m     @     0x7f98b2ec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66143)[0m     @     0x7f98b2369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66143)[0m     @     0x7f98b2367388 at::native::copy_impl()
[2m[36m(pid=66114)[0m     @     0x7f85f7d3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66114)[0m     @     0x7f85f7d60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66114)[0m     @     0x7f85f7202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66114)[0m     @     0x7f85f7200388 at::native::copy_impl()
[2m[36m(pid=66114)[0m     @     0x7f85f72025a4 at::native::copy_()
[2m[36m(pid=66111)[0m     @     0x7ed6240a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66111)[0m     @     0x7ed6240a5388 at::native::copy_impl()
[2m[36m(pid=66111)[0m     @     0x7ed6240a75a4 at::native::copy_()
[2m[36m(pid=66111)[0m     @     0x7ed6247924f5 at::Tensor::copy_()
[2m[36m(pid=66111)[0m     @     0x7ed626c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66038)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66038)[0m *** SIGSEGV (@0x0) received by PID 66038 (TID 0x7f3d93fed700) from PID 0; stack trace: ***
[2m[36m(pid=66038)[0m     @     0x7f3d93bc6390 (unknown)
[2m[36m(pid=66038)[0m     @     0x7f0e939c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66038)[0m     @     0x7f0e930f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66038)[0m     @     0x7f0e930f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66044)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66044)[0m *** SIGSEGV (@0x0) received by PID 66044 (TID 0x7f8d8b393700) from PID 0; stack trace: ***
[2m[36m(pid=66044)[0m     @     0x7f8d8af6c390 (unknown)
[2m[36m(pid=66044)[0m     @     0x7f5e8af13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66044)[0m     @     0x7f5e8a63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66131)[0m     @     0x7f689cafad91 at::TensorIterator::for_each()
[2m[36m(pid=66131)[0m     @     0x7f689d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66131)[0m     @     0x7f689d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66131)[0m     @     0x7f689c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66131)[0m     @     0x7f689c8a0388 at::native::copy_impl()
[2m[36m(pid=66020)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66020)[0m *** SIGSEGV (@0x0) received by PID 66020 (TID 0x7f9a63ed7700) from PID 0; stack trace: ***
[2m[36m(pid=66020)[0m     @     0x7f9a63ab0390 (unknown)
[2m[36m(pid=66020)[0m     @     0x7f6b63a48f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66020)[0m     @     0x7f6b631737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66095)[0m     @     0x7f55f8cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=66095)[0m     @     0x7f55f95b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66095)[0m     @     0x7f55f95d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66095)[0m     @     0x7f55f8a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66095)[0m     @     0x7f55f8a78388 at::native::copy_impl()
[2m[36m(pid=66116)[0m     @     0x7ef830597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66116)[0m     @     0x7ef82fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66116)[0m     @     0x7ef82fa37388 at::native::copy_impl()
[2m[36m(pid=66116)[0m     @     0x7ef82fa395a4 at::native::copy_()
[2m[36m(pid=66030)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66030)[0m *** SIGSEGV (@0x0) received by PID 66030 (TID 0x7fd98ce66700) from PID 0; stack trace: ***
[2m[36m(pid=66030)[0m     @     0x7fd98ca3f390 (unknown)
[2m[36m(pid=66030)[0m     @     0x7faa8c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66030)[0m     @     0x7faa8be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66153)[0m     @     0x7ed94f3aea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66153)[0m     @     0x7ed94f3ac388 at::native::copy_impl()
[2m[36m(pid=66153)[0m     @     0x7ed94f3ae5a4 at::native::copy_()
[2m[36m(pid=66019)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66019)[0m *** SIGSEGV (@0x0) received by PID 66019 (TID 0x7ffba7a6f700) from PID 0; stack trace: ***
[2m[36m(pid=66019)[0m     @     0x7ffba7648390 (unknown)
[2m[36m(pid=66019)[0m     @     0x7fcca75f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66019)[0m     @     0x7fcca6d1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66042)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66042)[0m *** SIGSEGV (@0x0) received by PID 66042 (TID 0x7f669f214700) from PID 0; stack trace: ***
[2m[36m(pid=66042)[0m     @     0x7f669eded390 (unknown)
[2m[36m(pid=66042)[0m     @     0x7f379ed83f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66042)[0m     @     0x7f379e4ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66042)[0m     @     0x7f379e4b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66146)[0m     @     0x7fa69fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=66146)[0m     @     0x7fa6a0574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66146)[0m     @     0x7fa6a0597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66146)[0m     @     0x7fa69fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66146)[0m     @     0x7fa69fa37388 at::native::copy_impl()
[2m[36m(pid=66118)[0m     @     0x7f04a0c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66118)[0m     @     0x7f04a039f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66118)[0m     @     0x7f04a03a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66118)[0m     @     0x7f04a03a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=66023)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66023)[0m *** SIGSEGV (@0x0) received by PID 66023 (TID 0x7f6cc27a1700) from PID 0; stack trace: ***
[2m[36m(pid=66023)[0m     @     0x7f6cc237a390 (unknown)
[2m[36m(pid=66023)[0m     @     0x7f3dc22fef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66023)[0m     @     0x7f3dc1a297db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66023)[0m     @     0x7f3dc1a2c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66023)[0m     @     0x7f3dc1a2cad3 at::TensorIterator::for_each()
[2m[36m(pid=66018)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66018)[0m *** SIGSEGV (@0x0) received by PID 66018 (TID 0x7f50384d7700) from PID 0; stack trace: ***
[2m[36m(pid=66018)[0m     @     0x7f50380b0390 (unknown)
[2m[36m(pid=66018)[0m     @     0x7f213801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66018)[0m     @     0x7f21377477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66018)[0m     @     0x7f213774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66150)[0m     @     0x7fb58a259a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66150)[0m     @     0x7fb58a257388 at::native::copy_impl()
[2m[36m(pid=66150)[0m     @     0x7fb58a2595a4 at::native::copy_()
[2m[36m(pid=66150)[0m     @     0x7fb58a9444f5 at::Tensor::copy_()
[2m[36m(pid=66133)[0m     @     0x7f9a67b87390 (unknown)
[2m[36m(pid=66133)[0m     @     0x7f6b67af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66133)[0m     @     0x7f6b672207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66133)[0m     @     0x7f6b672238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66024)[0m     @     0x7fb4a9452390 (unknown)
[2m[36m(pid=66024)[0m     @     0x7f85a9377f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66024)[0m     @     0x7f85a8aa27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66024)[0m     @     0x7f85a8aa58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66103)[0m *** SIGSEGV (@0x0) received by PID 66103 (TID 0x7fd8ff962700) from PID 0; stack trace: ***
[2m[36m(pid=66103)[0m     @     0x7fd8ff53b390 (unknown)
[2m[36m(pid=66103)[0m     @     0x7fa9ff43af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66103)[0m     @     0x7fa9feb657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66101)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66101)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66101)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66101)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66101)[0m *** SIGSEGV (@0x0) received by PID 66101 (TID 0x7fab8fe40700) from PID 0; stack trace: ***
[2m[36m(pid=66101)[0m     @     0x7fab8fa19390 (unknown)
[2m[36m(pid=66101)[0m     @     0x7f7c8f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66101)[0m     @     0x7f7c8f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66040)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66040)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66040)[0m *** SIGSEGV (@0x0) received by PID 66040 (TID 0x7fb8873a7700) from PID 0; stack trace: ***
[2m[36m(pid=66040)[0m     @     0x7fb886f80390 (unknown)
[2m[36m(pid=66040)[0m     @     0x7f8986f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66085)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66085)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66085)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66085)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66085)[0m *** SIGSEGV (@0x0) received by PID 66085 (TID 0x7f808a050700) from PID 0; stack trace: ***
[2m[36m(pid=66085)[0m     @     0x7f8089c29390 (unknown)
[2m[36m(pid=66052)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66052)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66052)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66052)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66052)[0m *** SIGSEGV (@0x0) received by PID 66052 (TID 0x7fa0467ab700) from PID 0; stack trace: ***
[2m[36m(pid=66052)[0m     @     0x7fa046384390 (unknown)
[2m[36m(pid=66052)[0m     @     0x7f714631ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66052)[0m     @     0x7f7145a497db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66034)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66034)[0m *** SIGSEGV (@0x0) received by PID 66034 (TID 0x7f8e32e04700) from PID 0; stack trace: ***
[2m[36m(pid=66034)[0m     @     0x7f8e329dd390 (unknown)
[2m[36m(pid=66034)[0m     @     0x7f5f3295ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66034)[0m     @     0x7f5f3208a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66029)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66029)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66029)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66029)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66029)[0m *** SIGSEGV (@0x0) received by PID 66029 (TID 0x7f13ddf6f700) from PID 0; stack trace: ***
[2m[36m(pid=66029)[0m     @     0x7f13ddb48390 (unknown)
[2m[36m(pid=66029)[0m     @     0x7ee4dda0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66029)[0m     @     0x7ee4dd1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66106)[0m *** SIGSEGV (@0x0) received by PID 66106 (TID 0x7f3e706ca700) from PID 0; stack trace: ***
[2m[36m(pid=66106)[0m     @     0x7f3e702a3390 (unknown)
[2m[36m(pid=66106)[0m     @     0x7f0f70223f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66106)[0m     @     0x7f0f6f94e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66106)[0m     @     0x7f0f6f9518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66127)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66127)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66127)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66127)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66127)[0m *** SIGSEGV (@0x0) received by PID 66127 (TID 0x7f61a94ab700) from PID 0; stack trace: ***
[2m[36m(pid=66127)[0m     @     0x7f61a9084390 (unknown)
[2m[36m(pid=66127)[0m     @     0x7f32a9023f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66127)[0m     @     0x7f32a874e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66039)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66039)[0m *** SIGSEGV (@0x0) received by PID 66039 (TID 0x7fa0f7993700) from PID 0; stack trace: ***
[2m[36m(pid=66039)[0m     @     0x7fa0f756c390 (unknown)
[2m[36m(pid=66039)[0m     @     0x7f71f750df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66039)[0m     @     0x7f71f6c387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66039)[0m     @     0x7f71f6c3b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66039)[0m     @     0x7f71f6c3bad3 at::TensorIterator::for_each()
[2m[36m(pid=66136)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66136)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66136)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66136)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66136)[0m *** SIGSEGV (@0x0) received by PID 66136 (TID 0x7f407ad94700) from PID 0; stack trace: ***
[2m[36m(pid=66136)[0m     @     0x7f407a96d390 (unknown)
[2m[36m(pid=66136)[0m     @     0x7f117a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66136)[0m     @     0x7f1179ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66136)[0m     @     0x7f1179ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66036)[0m     @     0x7f72a241a390 (unknown)
[2m[36m(pid=66036)[0m     @     0x7f43a234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66036)[0m     @     0x7f43a1a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66036)[0m     @     0x7f43a1a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66036)[0m     @     0x7f43a1a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=66022)[0m     @     0x7f41f9ee9390 (unknown)
[2m[36m(pid=66022)[0m     @     0x7f12f9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66022)[0m     @     0x7f12f954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66022)[0m     @     0x7f12f95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66022)[0m     @     0x7f12f9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=66148)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66148)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66148)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66148)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66148)[0m *** SIGSEGV (@0x0) received by PID 66148 (TID 0x7f282fd54700) from PID 0; stack trace: ***
[2m[36m(pid=66148)[0m     @     0x7f282f92d390 (unknown)
[2m[36m(pid=66148)[0m     @     0x7ef92f8b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66148)[0m     @     0x7ef92efdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66026)[0m     @     0x7feef3b8b390 (unknown)
[2m[36m(pid=66026)[0m     @     0x7fbff3af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66026)[0m     @     0x7fbff32207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66026)[0m     @     0x7fbff32238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66026)[0m     @     0x7fbff3223ad3 at::TensorIterator::for_each()
[2m[36m(pid=66031)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66031)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66031)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66031)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66031)[0m *** SIGSEGV (@0x0) received by PID 66031 (TID 0x7f6e7c949700) from PID 0; stack trace: ***
[2m[36m(pid=66031)[0m     @     0x7f6e7c522390 (unknown)
[2m[36m(pid=66031)[0m     @     0x7f3f7c32cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66031)[0m     @     0x7f3f7ba577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66046)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66046)[0m *** SIGSEGV (@0x0) received by PID 66046 (TID 0x7f6e491d4700) from PID 0; stack trace: ***
[2m[36m(pid=66046)[0m     @     0x7f6e48dad390 (unknown)
[2m[36m(pid=66046)[0m     @     0x7f3f48c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66046)[0m     @     0x7f3f4839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66046)[0m     @     0x7f3f483a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66033)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66033)[0m *** SIGSEGV (@0x0) received by PID 66033 (TID 0x7f60e52da700) from PID 0; stack trace: ***
[2m[36m(pid=66033)[0m     @     0x7f60e4eb3390 (unknown)
[2m[36m(pid=66033)[0m     @     0x7f31e4e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66033)[0m     @     0x7f31e45627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66033)[0m     @     0x7f31e45658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66119)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66119)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66119)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66119)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66119)[0m *** SIGSEGV (@0x0) received by PID 66119 (TID 0x7f520952d700) from PID 0; stack trace: ***
[2m[36m(pid=66119)[0m     @     0x7f5209106390 (unknown)
[2m[36m(pid=66091)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66091)[0m *** SIGSEGV (@0x0) received by PID 66091 (TID 0x7f08cecef700) from PID 0; stack trace: ***
[2m[36m(pid=66091)[0m     @     0x7f08ce8c8390 (unknown)
[2m[36m(pid=66091)[0m     @     0x7ed9ce7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66091)[0m     @     0x7ed9cdee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66091)[0m     @     0x7ed9cdee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66092)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66092)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66092)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66092)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66092)[0m *** SIGSEGV (@0x0) received by PID 66092 (TID 0x7fe92edb1700) from PID 0; stack trace: ***
[2m[36m(pid=66092)[0m     @     0x7fe92e98a390 (unknown)
[2m[36m(pid=66092)[0m     @     0x7fba2e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66092)[0m     @     0x7fba2de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66041)[0m     @     0x7f239a1ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66041)[0m     @     0x7f239a1ffad3 at::TensorIterator::for_each()
[2m[36m(pid=66080)[0m     @     0x7f10c6b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66089)[0m     @     0x7f88d895df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66089)[0m     @     0x7f88d80887db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66089)[0m     @     0x7f88d808b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66135)[0m     @     0x7fc2bf4577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66135)[0m     @     0x7fc2bf45a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66135)[0m     @     0x7fc2bf45aad3 at::TensorIterator::for_each()
[2m[36m(pid=66087)[0m     @     0x7f9774a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66087)[0m     @     0x7f9774a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=66123)[0m     @     0x7f278aca08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66123)[0m     @     0x7f278aca0ad3 at::TensorIterator::for_each()
[2m[36m(pid=66027)[0m     @     0x7ee38e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66027)[0m     @     0x7ee38e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=66032)[0m     @     0x7ed3e7a577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66032)[0m     @     0x7ed3e7a5a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66120)[0m     @     0x7f420e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66120)[0m     @     0x7f420e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=66104)[0m     @     0x7f97acdb58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66104)[0m     @     0x7f97acdb5ad3 at::TensorIterator::for_each()
[2m[36m(pid=66025)[0m     @     0x7f5d949fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66025)[0m     @     0x7f5d949fbad3 at::TensorIterator::for_each()
[2m[36m(pid=66132)[0m     @     0x7f8ac09ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66132)[0m     @     0x7f8abe4fb4f5 at::Tensor::copy_()
[2m[36m(pid=66132)[0m     @     0x7f8ac45a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66132)[0m     @     0x55cfcbadafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66132)[0m     @     0x55cfcba35b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66132)[0m     @     0x55cfcbac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66132)[0m     @     0x55cfcbac1a20 method_vectorcall
[2m[36m(pid=66132)[0m     @     0x55cfcba35bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66132)[0m     @     0x55cfcbac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66132)[0m     @     0x55cfcbac1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66132)[0m     @     0x55cfcba36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66132)[0m     @     0x55cfcbac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66132)[0m     @     0x55cfcbac1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66132)[0m     @     0x55cfcba36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66137)[0m     @     0x7fa5613ba4f5 at::Tensor::copy_()
[2m[36m(pid=66137)[0m     @     0x7fa56388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66137)[0m     @     0x7fa5613ba4f5 at::Tensor::copy_()
[2m[36m(pid=66137)[0m     @     0x7fa56746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66137)[0m     @     0x5649508e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66137)[0m     @     0x564950843b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66137)[0m     @     0x5649508cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66137)[0m     @     0x5649508cfa20 method_vectorcall
[2m[36m(pid=66137)[0m     @     0x564950843bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66137)[0m     @     0x5649508cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66137)[0m     @     0x5649508cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66137)[0m     @     0x564950844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66137)[0m     @     0x5649508cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66137)[0m     @     0x5649508cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66137)[0m     @     0x564950844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66137)[0m     @     0x5649508cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66137)[0m     @     0x5649508cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66137)[0m     @     0x564950844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66099)[0m     @     0x7ee2dcc764f5 at::Tensor::copy_()
[2m[36m(pid=66099)[0m     @     0x7ee2df1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66099)[0m     @     0x7ee2dcc764f5 at::Tensor::copy_()
[2m[36m(pid=66099)[0m     @     0x7ee2e2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66099)[0m     @     0x55f51d11ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66099)[0m     @     0x55f51d07ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66099)[0m     @     0x55f51d105baf _PyEval_EvalCodeWithName
[2m[36m(pid=66099)[0m     @     0x55f51d106a20 method_vectorcall
[2m[36m(pid=66099)[0m     @     0x55f51d07abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66099)[0m     @     0x55f51d105baf _PyEval_EvalCodeWithName
[2m[36m(pid=66099)[0m     @     0x55f51d106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66099)[0m     @     0x55f51d07b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66124)[0m     @     0x7fa396957ad3 at::TensorIterator::for_each()
[2m[36m(pid=66124)[0m     @     0x7fa396957d91 at::TensorIterator::for_each()
[2m[36m(pid=66124)[0m     @     0x7fa39723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66124)[0m     @     0x7fa39725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66084)[0m     @     0x7fcb0fe7aad3 at::TensorIterator::for_each()
[2m[36m(pid=66084)[0m     @     0x7fcb0fe7ad91 at::TensorIterator::for_each()
[2m[36m(pid=66084)[0m     @     0x7fcb1075db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66105)[0m     @     0x7f688c6fc4f5 at::Tensor::copy_()
[2m[36m(pid=66105)[0m     @     0x7f688ebcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66105)[0m     @     0x7f688c6fc4f5 at::Tensor::copy_()
[2m[36m(pid=66054)[0m     @     0x7ef4258657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66054)[0m     @     0x7ef4258688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66126)[0m     @     0x7fcb8e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66126)[0m     @     0x7fcb8bef44f5 at::Tensor::copy_()
[2m[36m(pid=66126)[0m     @     0x7fcb91f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66126)[0m     @     0x556430d92fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66126)[0m     @     0x556430cedb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66126)[0m     @     0x556430d78baf _PyEval_EvalCodeWithName
[2m[36m(pid=66126)[0m     @     0x556430d79a20 method_vectorcall
[2m[36m(pid=66126)[0m     @     0x556430cedbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66126)[0m     @     0x556430d78baf _PyEval_EvalCodeWithName
[2m[36m(pid=66126)[0m     @     0x556430d79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66126)[0m     @     0x556430cee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66126)[0m     @     0x556430d78baf _PyEval_EvalCodeWithName
[2m[36m(pid=66126)[0m     @     0x556430d79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66126)[0m     @     0x556430cee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66126)[0m     @     0x556430d78baf _PyEval_EvalCodeWithName
[2m[36m(pid=66126)[0m     @     0x556430d79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66126)[0m     @     0x556430cee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66126)[0m     @     0x556430d78baf _PyEval_EvalCodeWithName
[2m[36m(pid=66126)[0m     @     0x556430d79643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66126)[0m     @     0x556430cee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66088)[0m     @     0x7fe60af68390 (unknown)
[2m[36m(pid=66088)[0m     @     0x7fb70ae70f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66088)[0m     @     0x7fb70a59b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66088)[0m     @     0x7fb70a59e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66088)[0m     @     0x7fb70a59ead3 at::TensorIterator::for_each()
[2m[36m(pid=66086)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=66086)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=66086)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66086)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66086)[0m *** SIGSEGV (@0x0) received by PID 66086 (TID 0x7f7c80108700) from PID 0; stack trace: ***
[2m[36m(pid=66086)[0m     @     0x7f7c7fce1390 (unknown)
[2m[36m(pid=66097)[0m     @     0x7fab4474e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66097)[0m     @     0x7fab447518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66097)[0m     @     0x7fab44751ad3 at::TensorIterator::for_each()
[2m[36m(pid=66050)[0m     @     0x7f568dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66050)[0m     @     0x7f568dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66050)[0m     @     0x7f568dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=66100)[0m     @     0x7eebcce1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66100)[0m     @     0x7eebcce228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66100)[0m     @     0x7eebcce22ad3 at::TensorIterator::for_each()
[2m[36m(pid=66037)[0m *** Aborted at 1604573487 (unix time) try "date -d @1604573487" if you are using GNU date ***
[2m[36m(pid=66037)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66037)[0m *** SIGSEGV (@0x0) received by PID 66037 (TID 0x7fe7d6e86700) from PID 0; stack trace: ***
[2m[36m(pid=66037)[0m     @     0x7fe7d6a5f390 (unknown)
[2m[36m(pid=66037)[0m     @     0x7fb8d67bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66053)[0m     @     0x7ef6f24c1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66053)[0m     @     0x7ef6f1bec7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66053)[0m     @     0x7ef6f1bef8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66053)[0m     @     0x7ef6f1befad3 at::TensorIterator::for_each()
[2m[36m(pid=66138)[0m     @     0x7eeb1147d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66138)[0m     @     0x7eeb114808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66138)[0m     @     0x7eeb11480ad3 at::TensorIterator::for_each()
[2m[36m(pid=66093)[0m     @     0x7f4b7f751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66093)[0m     @     0x7f4b7ee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66093)[0m     @     0x7f4b7ee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66093)[0m     @     0x7f4b7ee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=66043)[0m     @     0x7fae7adb0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66043)[0m     @     0x7fae7a4db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66043)[0m     @     0x7fae7a4de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66043)[0m     @     0x7fae7a4dead3 at::TensorIterator::for_each()
[2m[36m(pid=66082)[0m PC: @                0x0 (unknown)
[2m[36m(pid=66082)[0m *** SIGSEGV (@0x0) received by PID 66082 (TID 0x7f840b7cf700) from PID 0; stack trace: ***
[2m[36m(pid=66082)[0m     @     0x7f840b3a8390 (unknown)
[2m[36m(pid=66082)[0m     @     0x7f550b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66082)[0m     @     0x7f550a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66125)[0m     @     0x7f9a623cc4f5 at::Tensor::copy_()
[2m[36m(pid=66125)[0m     @     0x7f9a6489f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66125)[0m     @     0x7f9a623cc4f5 at::Tensor::copy_()
[2m[36m(pid=66125)[0m     @     0x7f9a6847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66125)[0m     @     0x559700283fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66125)[0m     @     0x5597001deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66125)[0m     @     0x559700269baf _PyEval_EvalCodeWithName
[2m[36m(pid=66125)[0m     @     0x55970026aa20 method_vectorcall
[2m[36m(pid=66125)[0m     @     0x5597001debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66125)[0m     @     0x559700269baf _PyEval_EvalCodeWithName
[2m[36m(pid=66125)[0m     @     0x55970026a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66125)[0m     @     0x5597001df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66125)[0m     @     0x559700269baf _PyEval_EvalCodeWithName
[2m[36m(pid=66125)[0m     @     0x55970026a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66125)[0m     @     0x5597001df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66125)[0m     @     0x559700269baf _PyEval_EvalCodeWithName
[2m[36m(pid=66125)[0m     @     0x55970026a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66125)[0m     @     0x5597001df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66125)[0m     @     0x559700269baf _PyEval_EvalCodeWithName
[2m[36m(pid=66125)[0m     @     0x55970026a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66125)[0m     @     0x5597001df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66128)[0m     @     0x7f452c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66128)[0m     @     0x7f452a37c4f5 at::Tensor::copy_()
[2m[36m(pid=66128)[0m     @     0x7f453042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66128)[0m     @     0x562350bcbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66128)[0m     @     0x562350b26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66128)[0m     @     0x562350bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66128)[0m     @     0x562350bb2a20 method_vectorcall
[2m[36m(pid=66128)[0m     @     0x562350b26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66128)[0m     @     0x562350bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66128)[0m     @     0x562350bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66128)[0m     @     0x562350b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66128)[0m     @     0x562350bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66128)[0m     @     0x562350bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66128)[0m     @     0x562350b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66128)[0m     @     0x562350bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66128)[0m     @     0x562350bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66128)[0m     @     0x562350b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66128)[0m     @     0x562350bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66128)[0m     @     0x562350bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66128)[0m     @     0x562350b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66021)[0m     @     0x7f94f5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66021)[0m     @     0x7f94f5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=66021)[0m     @     0x7f94f5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=66021)[0m     @     0x7f94f650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66021)[0m     @     0x7f94f652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66096)[0m     @     0x7f05baa944f5 at::Tensor::copy_()
[2m[36m(pid=66096)[0m     @     0x7f05c0b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66096)[0m     @     0x55d9ad684fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66096)[0m     @     0x55d9ad5dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66096)[0m     @     0x55d9ad66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66096)[0m     @     0x55d9ad66ba20 method_vectorcall
[2m[36m(pid=66096)[0m     @     0x55d9ad5dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66096)[0m     @     0x55d9ad66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66096)[0m     @     0x55d9ad66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66096)[0m     @     0x55d9ad5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66096)[0m     @     0x55d9ad66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66096)[0m     @     0x55d9ad66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66096)[0m     @     0x55d9ad5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66096)[0m     @     0x55d9ad66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66096)[0m     @     0x55d9ad66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66096)[0m     @     0x55d9ad5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66096)[0m     @     0x55d9ad66abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66096)[0m     @     0x55d9ad66b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66096)[0m     @     0x55d9ad5e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66090)[0m     @     0x7f494826d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66090)[0m     @     0x7f494826dad3 at::TensorIterator::for_each()
[2m[36m(pid=66090)[0m     @     0x7f494826dd91 at::TensorIterator::for_each()
[2m[36m(pid=66090)[0m     @     0x7f4948b50b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66090)[0m     @     0x7f4948b73c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66094)[0m     @     0x7f11651388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66094)[0m     @     0x7f1165138ad3 at::TensorIterator::for_each()
[2m[36m(pid=66094)[0m     @     0x7f1165138d91 at::TensorIterator::for_each()
[2m[36m(pid=66094)[0m     @     0x7f1165a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66094)[0m     @     0x7f1165a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66098)[0m     @     0x7f866ee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=66098)[0m     @     0x7f866ee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=66098)[0m     @     0x7f866f762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66098)[0m     @     0x7f866f785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66098)[0m     @     0x7f866ec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66141)[0m     @     0x7fb75a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66141)[0m     @     0x7fb757bdd4f5 at::Tensor::copy_()
[2m[36m(pid=66141)[0m     @     0x7fb75dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66141)[0m     @     0x555778cb8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66141)[0m     @     0x555778c13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66141)[0m     @     0x555778c9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66141)[0m     @     0x555778c9fa20 method_vectorcall
[2m[36m(pid=66141)[0m     @     0x555778c13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66141)[0m     @     0x555778c9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66141)[0m     @     0x555778c9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66141)[0m     @     0x555778c14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66141)[0m     @     0x555778c9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66141)[0m     @     0x555778c9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66141)[0m     @     0x555778c14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66141)[0m     @     0x555778c9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66141)[0m     @     0x555778c9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66141)[0m     @     0x555778c14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66141)[0m     @     0x555778c9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66141)[0m     @     0x555778c9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66141)[0m     @     0x555778c14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66143)[0m     @     0x7f98b23695a4 at::native::copy_()
[2m[36m(pid=66143)[0m     @     0x7f98b2a544f5 at::Tensor::copy_()
[2m[36m(pid=66143)[0m     @     0x7f98b4f278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66114)[0m     @     0x7f85f78ed4f5 at::Tensor::copy_()
[2m[36m(pid=66114)[0m     @     0x7f85f9dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66114)[0m     @     0x7f85f78ed4f5 at::Tensor::copy_()
[2m[36m(pid=66114)[0m     @     0x7f85fd99879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66114)[0m     @     0x5633e3c27fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66114)[0m     @     0x5633e3b82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66114)[0m     @     0x5633e3c0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66114)[0m     @     0x5633e3c0ea20 method_vectorcall
[2m[36m(pid=66114)[0m     @     0x5633e3b82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66114)[0m     @     0x5633e3c0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66114)[0m     @     0x5633e3c0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66114)[0m     @     0x5633e3b83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66114)[0m     @     0x5633e3c0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66114)[0m     @     0x5633e3c0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66114)[0m     @     0x5633e3b83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66114)[0m     @     0x5633e3c0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66114)[0m     @     0x5633e3c0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66114)[0m     @     0x5633e3b83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66114)[0m     @     0x5633e3c0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66114)[0m     @     0x5633e3c0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66114)[0m     @     0x5633e3b83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66111)[0m     @     0x7ed6247924f5 at::Tensor::copy_()
[2m[36m(pid=66111)[0m     @     0x7ed62a83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66111)[0m     @     0x55c107eabfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66111)[0m     @     0x55c107e06b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66111)[0m     @     0x55c107e91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66111)[0m     @     0x55c107e92a20 method_vectorcall
[2m[36m(pid=66111)[0m     @     0x55c107e06bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66111)[0m     @     0x55c107e91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66111)[0m     @     0x55c107e92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66111)[0m     @     0x55c107e07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66111)[0m     @     0x55c107e91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66111)[0m     @     0x55c107e92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66111)[0m     @     0x55c107e07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66111)[0m     @     0x55c107e91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66111)[0m     @     0x55c107e92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66111)[0m     @     0x55c107e07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66111)[0m     @     0x55c107e91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66111)[0m     @     0x55c107e92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66111)[0m     @     0x55c107e07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x7f0e930f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=66038)[0m     @     0x7f0e930f3d91 at::TensorIterator::for_each()
[2m[36m(pid=66038)[0m     @     0x7f0e939d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66038)[0m     @     0x7f0e939f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66044)[0m     @     0x7f5e8a6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66044)[0m     @     0x7f5e8a641ad3 at::TensorIterator::for_each()
[2m[36m(pid=66044)[0m     @     0x7f5e8a641d91 at::TensorIterator::for_each()
[2m[36m(pid=66044)[0m     @     0x7f5e8af24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66044)[0m     @     0x7f5e8af47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66131)[0m     @     0x7f689c8a25a4 at::native::copy_()
[2m[36m(pid=66131)[0m     @     0x7f689cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=66131)[0m     @     0x7f689f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66020)[0m     @     0x7f6b631768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66020)[0m     @     0x7f6b63176ad3 at::TensorIterator::for_each()
[2m[36m(pid=66020)[0m     @     0x7f6b63176d91 at::TensorIterator::for_each()
[2m[36m(pid=66020)[0m     @     0x7f6b63a59b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66020)[0m     @     0x7f6b63a7cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66095)[0m     @     0x7f55f8a7a5a4 at::native::copy_()
[2m[36m(pid=66095)[0m     @     0x7f55f91654f5 at::Tensor::copy_()
[2m[36m(pid=66095)[0m     @     0x7f55fb6388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66095)[0m     @     0x7f55f91654f5 at::Tensor::copy_()
[2m[36m(pid=66116)[0m     @     0x7ef8301244f5 at::Tensor::copy_()
[2m[36m(pid=66116)[0m     @     0x7ef8325f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66116)[0m     @     0x7ef8301244f5 at::Tensor::copy_()
[2m[36m(pid=66116)[0m     @     0x7ef8361cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66116)[0m     @     0x55f8a2472fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66116)[0m     @     0x55f8a23cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66116)[0m     @     0x55f8a2458baf _PyEval_EvalCodeWithName
[2m[36m(pid=66116)[0m     @     0x55f8a2459a20 method_vectorcall
[2m[36m(pid=66116)[0m     @     0x55f8a23cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66116)[0m     @     0x55f8a2458baf _PyEval_EvalCodeWithName
[2m[36m(pid=66116)[0m     @     0x55f8a2459643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66116)[0m     @     0x55f8a23ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66116)[0m     @     0x55f8a2458baf _PyEval_EvalCodeWithName
[2m[36m(pid=66116)[0m     @     0x55f8a2459643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66116)[0m     @     0x55f8a23ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66116)[0m     @     0x55f8a2458baf _PyEval_EvalCodeWithName
[2m[36m(pid=66116)[0m     @     0x55f8a2459643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66116)[0m     @     0x55f8a23ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66116)[0m     @     0x55f8a2458baf _PyEval_EvalCodeWithName
[2m[36m(pid=66116)[0m     @     0x55f8a2459643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66116)[0m     @     0x55f8a23ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x7faa8bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66030)[0m     @     0x7faa8bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=66030)[0m     @     0x7faa8bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=66030)[0m     @     0x7faa8c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66030)[0m     @     0x7faa8c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66153)[0m     @     0x7ed94fa994f5 at::Tensor::copy_()
[2m[36m(pid=66153)[0m     @     0x7ed951f6c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66153)[0m     @     0x7ed94fa994f5 at::Tensor::copy_()
[2m[36m(pid=66153)[0m     @     0x7ed955b4479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66153)[0m     @     0x55b28e8c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66153)[0m     @     0x55b28e822b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66153)[0m     @     0x55b28e8adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66153)[0m     @     0x55b28e8aea20 method_vectorcall
[2m[36m(pid=66153)[0m     @     0x55b28e822bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66153)[0m     @     0x55b28e8adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66153)[0m     @     0x55b28e8ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66153)[0m     @     0x55b28e823689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66153)[0m     @     0x55b28e8adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66153)[0m     @     0x55b28e8ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66153)[0m     @     0x55b28e823689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66153)[0m     @     0x55b28e8adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66153)[0m     @     0x55b28e8ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66153)[0m     @     0x55b28e823689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66153)[0m     @     0x55b28e8adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66153)[0m     @     0x55b28e8ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66153)[0m     @     0x55b28e823689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66019)[0m     @     0x7fcca6d208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66019)[0m     @     0x7fcca6d20ad3 at::TensorIterator::for_each()
[2m[36m(pid=66042)[0m     @     0x7f379e4b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=66042)[0m     @     0x7f379e4b1d91 at::TensorIterator::for_each()
[2m[36m(pid=66042)[0m     @     0x7f379ed94b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66042)[0m     @     0x7f379edb7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66146)[0m     @     0x7fa69fa395a4 at::native::copy_()
[2m[36m(pid=66146)[0m     @     0x7fa6a01244f5 at::Tensor::copy_()
[2m[36m(pid=66146)[0m     @     0x7fa6a25f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66146)[0m     @     0x7fa6a01244f5 at::Tensor::copy_()
[2m[36m(pid=66146)[0m     @     0x7fa6a61cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66146)[0m     @     0x564fe5946fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66146)[0m     @     0x564fe58a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x7f04a03a2d91 at::TensorIterator::for_each()
[2m[36m(pid=66118)[0m     @     0x7f04a0c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66118)[0m     @     0x7f04a0ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66118)[0m     @     0x7f04a014aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66118)[0m     @     0x7f04a0148388 at::native::copy_impl()
[2m[36m(pid=66118)[0m     @     0x7f04a014a5a4 at::native::copy_()
[2m[36m(pid=66023)[0m     @     0x7f3dc1a2cd91 at::TensorIterator::for_each()
[2m[36m(pid=66023)[0m     @     0x7f3dc230fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66023)[0m     @     0x7f3dc2332c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66023)[0m     @     0x7f3dc17d4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66023)[0m     @     0x7f3dc17d2388 at::native::copy_impl()
[2m[36m(pid=66023)[0m     @     0x7f3dc17d45a4 at::native::copy_()
[2m[36m(pid=66018)[0m     @     0x7f213774aad3 at::TensorIterator::for_each()
[2m[36m(pid=66018)[0m     @     0x7f213774ad91 at::TensorIterator::for_each()
[2m[36m(pid=66018)[0m     @     0x7f213802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66018)[0m     @     0x7f2138050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66150)[0m     @     0x7fb58ce178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66150)[0m     @     0x7fb58a9444f5 at::Tensor::copy_()
[2m[36m(pid=66150)[0m     @     0x7fb5909ef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66150)[0m     @     0x55a6084a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66150)[0m     @     0x55a608403b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66150)[0m     @     0x55a60848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66150)[0m     @     0x55a60848fa20 method_vectorcall
[2m[36m(pid=66150)[0m     @     0x55a608403bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66150)[0m     @     0x55a60848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66150)[0m     @     0x55a60848f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66150)[0m     @     0x55a608404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66150)[0m     @     0x55a60848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66150)[0m     @     0x55a60848f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66150)[0m     @     0x55a608404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66150)[0m     @     0x55a60848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66150)[0m     @     0x55a60848f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66150)[0m     @     0x55a608404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66150)[0m     @     0x55a60848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66150)[0m     @     0x55a60848f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66150)[0m     @     0x55a608404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66133)[0m     @     0x7f6b67223ad3 at::TensorIterator::for_each()
[2m[36m(pid=66133)[0m     @     0x7f6b67223d91 at::TensorIterator::for_each()
[2m[36m(pid=66133)[0m     @     0x7f6b67b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66133)[0m     @     0x7f6b67b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66133)[0m     @     0x7f6b66fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66133)[0m     @     0x7f6b66fc9388 at::native::copy_impl()
[2m[36m(pid=66024)[0m     @     0x7f85a8aa5ad3 at::TensorIterator::for_each()
[2m[36m(pid=66024)[0m     @     0x7f85a8aa5d91 at::TensorIterator::for_each()
[2m[36m(pid=66024)[0m     @     0x7f85a9388b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66024)[0m     @     0x7f85a93abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66024)[0m     @     0x7f85a884da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66024)[0m     @     0x7f85a884b388 at::native::copy_impl()
[2m[36m(pid=66103)[0m     @     0x7fa9feb688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66103)[0m     @     0x7fa9feb68ad3 at::TensorIterator::for_each()
[2m[36m(pid=66103)[0m     @     0x7fa9feb68d91 at::TensorIterator::for_each()
[2m[36m(pid=66103)[0m     @     0x7fa9ff44bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66103)[0m     @     0x7fa9ff46ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66101)[0m     @     0x7f7c8f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66101)[0m     @     0x7f7c8f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=66101)[0m     @     0x7f7c8f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=66101)[0m     @     0x7f7c8f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66101)[0m     @     0x7f7c8f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66040)[0m     @     0x7f898663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66040)[0m     @     0x7f89866418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66040)[0m     @     0x7f8986641ad3 at::TensorIterator::for_each()
[2m[36m(pid=66085)[0m     @     0x7f5189b9ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66085)[0m     @     0x7f51892ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66085)[0m     @     0x7f51892cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66085)[0m     @     0x7f51892cdad3 at::TensorIterator::for_each()
[2m[36m(pid=66052)[0m     @     0x7f7145a4c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66052)[0m     @     0x7f7145a4cad3 at::TensorIterator::for_each()
[2m[36m(pid=66052)[0m     @     0x7f7145a4cd91 at::TensorIterator::for_each()
[2m[36m(pid=66052)[0m     @     0x7f714632fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66052)[0m     @     0x7f7146352c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66034)[0m     @     0x7f5f3208d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66034)[0m     @     0x7f5f3208dad3 at::TensorIterator::for_each()
[2m[36m(pid=66034)[0m     @     0x7f5f3208dd91 at::TensorIterator::for_each()
[2m[36m(pid=66034)[0m     @     0x7f5f32970b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66034)[0m     @     0x7f5f32993c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66029)[0m     @     0x7ee4dd1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66029)[0m     @     0x7ee4dd138ad3 at::TensorIterator::for_each()
[2m[36m(pid=66106)[0m     @     0x7f0f6f951ad3 at::TensorIterator::for_each()
[2m[36m(pid=66106)[0m     @     0x7f0f6f951d91 at::TensorIterator::for_each()
[2m[36m(pid=66106)[0m     @     0x7f0f70234b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66106)[0m     @     0x7f0f70257c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66106)[0m     @     0x7f0f6f6f9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66106)[0m     @     0x7f0f6f6f7388 at::native::copy_impl()
[2m[36m(pid=66127)[0m     @     0x7f32a87518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66127)[0m     @     0x7f32a8751ad3 at::TensorIterator::for_each()
[2m[36m(pid=66127)[0m     @     0x7f32a8751d91 at::TensorIterator::for_each()
[2m[36m(pid=66127)[0m     @     0x7f32a9034b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66039)[0m     @     0x7f71f6c3bd91 at::TensorIterator::for_each()
[2m[36m(pid=66039)[0m     @     0x7f71f751eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66039)[0m     @     0x7f71f7541c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66039)[0m     @     0x7f71f69e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66039)[0m     @     0x7f71f69e1388 at::native::copy_impl()
[2m[36m(pid=66136)[0m     @     0x7f1179ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=66136)[0m     @     0x7f1179ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=66136)[0m     @     0x7f117a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66036)[0m     @     0x7f43a1a79d91 at::TensorIterator::for_each()
[2m[36m(pid=66036)[0m     @     0x7f43a235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66036)[0m     @     0x7f43a237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66036)[0m     @     0x7f43a1821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66036)[0m     @     0x7f43a181f388 at::native::copy_impl()
[2m[36m(pid=66022)[0m     @     0x7f12f9552d91 at::TensorIterator::for_each()
[2m[36m(pid=66022)[0m     @     0x7f12f9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66022)[0m     @     0x7f12f9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66022)[0m     @     0x7f12f92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66022)[0m     @     0x7f12f92f8388 at::native::copy_impl()
[2m[36m(pid=66148)[0m     @     0x7ef92efdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66148)[0m     @     0x7ef92efdfad3 at::TensorIterator::for_each()
[2m[36m(pid=66148)[0m     @     0x7ef92efdfd91 at::TensorIterator::for_each()
[2m[36m(pid=66026)[0m     @     0x7fbff3223d91 at::TensorIterator::for_each()
[2m[36m(pid=66026)[0m     @     0x7fbff3b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66026)[0m     @     0x7fbff3b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66026)[0m     @     0x7fbff2fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66026)[0m     @     0x7fbff2fc9388 at::native::copy_impl()
[2m[36m(pid=66031)[0m     @     0x7f3f7ba5a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66031)[0m     @     0x7f3f7ba5aad3 at::TensorIterator::for_each()
[2m[36m(pid=66031)[0m     @     0x7f3f7ba5ad91 at::TensorIterator::for_each()
[2m[36m(pid=66031)[0m     @     0x7f3f7c33db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66031)[0m     @     0x7f3f7c360c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66046)[0m     @     0x7f3f483a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=66046)[0m     @     0x7f3f483a2d91 at::TensorIterator::for_each()
[2m[36m(pid=66046)[0m     @     0x7f3f48c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66046)[0m     @     0x7f3f48ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66046)[0m     @     0x7f3f4814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66033)[0m     @     0x7f31e4565ad3 at::TensorIterator::for_each()
[2m[36m(pid=66033)[0m     @     0x7f31e4565d91 at::TensorIterator::for_each()
[2m[36m(pid=66033)[0m     @     0x7f31e4e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66033)[0m     @     0x7f31e4e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66033)[0m     @     0x7f31e430da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66119)[0m     @     0x7f2309088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66119)[0m     @     0x7f23087b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66119)[0m     @     0x7f23087b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66119)[0m     @     0x7f23087b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=66091)[0m     @     0x7ed9cdee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=66091)[0m     @     0x7ed9cdee9d91 at::TensorIterator::for_each()
[2m[36m(pid=66091)[0m     @     0x7ed9ce7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66091)[0m     @     0x7ed9ce7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66091)[0m     @     0x7ed9cdc91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66091)[0m     @     0x7ed9cdc8f388 at::native::copy_impl()
[2m[36m(pid=66092)[0m     @     0x7fba2de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66092)[0m     @     0x7fba2de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=66092)[0m     @     0x7fba2de38d91 at::TensorIterator::for_each()
[2m[36m(pid=66041)[0m     @     0x7f239a1ffd91 at::TensorIterator::for_each()
[2m[36m(pid=66041)[0m     @     0x7f239aae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66041)[0m     @     0x7f239ab05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66041)[0m     @     0x7f2399fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66041)[0m     @     0x7f2399fa5388 at::native::copy_impl()
[2m[36m(pid=66041)[0m     @     0x7f2399fa75a4 at::native::copy_()
[2m[36m(pid=66080)[0m     @     0x7f10c6b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=66089)[0m     @     0x7f88d808bad3 at::TensorIterator::for_each()
[2m[36m(pid=66089)[0m     @     0x7f88d808bd91 at::TensorIterator::for_each()
[2m[36m(pid=66089)[0m     @     0x7f88d896eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66135)[0m     @     0x7fc2bf45ad91 at::TensorIterator::for_each()
[2m[36m(pid=66135)[0m     @     0x7fc2bfd3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66135)[0m     @     0x7fc2bfd60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66135)[0m     @     0x7fc2bf202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66135)[0m     @     0x7fc2bf200388 at::native::copy_impl()
[2m[36m(pid=66135)[0m     @     0x7fc2bf2025a4 at::native::copy_()
[2m[36m(pid=66087)[0m     @     0x7f9774a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=66087)[0m     @     0x7f9775370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66087)[0m     @     0x7f9775393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66087)[0m     @     0x7f9774835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66087)[0m     @     0x7f9774833388 at::native::copy_impl()
[2m[36m(pid=66087)[0m     @     0x7f97748355a4 at::native::copy_()
[2m[36m(pid=66123)[0m     @     0x7f278aca0d91 at::TensorIterator::for_each()
[2m[36m(pid=66123)[0m     @     0x7f278b583b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66123)[0m     @     0x7f278b5a6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66123)[0m     @     0x7f278aa48a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66123)[0m     @     0x7f278aa46388 at::native::copy_impl()
[2m[36m(pid=66123)[0m     @     0x7f278aa485a4 at::native::copy_()
[2m[36m(pid=66027)[0m     @     0x7ee38e957d91 at::TensorIterator::for_each()
[2m[36m(pid=66027)[0m     @     0x7ee38f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66027)[0m     @     0x7ee38f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66027)[0m     @     0x7ee38e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66027)[0m     @     0x7ee38e6fd388 at::native::copy_impl()
[2m[36m(pid=66027)[0m     @     0x7ee38e6ff5a4 at::native::copy_()
[2m[36m(pid=66032)[0m     @     0x7ed3e7a5aad3 at::TensorIterator::for_each()
[2m[36m(pid=66032)[0m     @     0x7ed3e7a5ad91 at::TensorIterator::for_each()
[2m[36m(pid=66032)[0m     @     0x7ed3e833db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66032)[0m     @     0x7ed3e8360c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66032)[0m     @     0x7ed3e7802a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66032)[0m     @     0x7ed3e7800388 at::native::copy_impl()
[2m[36m(pid=66120)[0m     @     0x7f420e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=66120)[0m     @     0x7f420ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66120)[0m     @     0x7f420ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66120)[0m     @     0x7f420def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66120)[0m     @     0x7f420def5388 at::native::copy_impl()
[2m[36m(pid=66120)[0m     @     0x7f420def75a4 at::native::copy_()
[2m[36m(pid=66104)[0m     @     0x7f97acdb5d91 at::TensorIterator::for_each()
[2m[36m(pid=66104)[0m     @     0x7f97ad698b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66104)[0m     @     0x7f97ad6bbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66104)[0m     @     0x7f97acb5da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66104)[0m     @     0x7f97acb5b388 at::native::copy_impl()
[2m[36m(pid=66104)[0m     @     0x7f97acb5d5a4 at::native::copy_()
[2m[36m(pid=66025)[0m     @     0x7f5d949fbd91 at::TensorIterator::for_each()
[2m[36m(pid=66025)[0m     @     0x7f5d952deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66025)[0m     @     0x7f5d95301c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66025)[0m     @     0x7f5d947a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66025)[0m     @     0x7f5d947a1388 at::native::copy_impl()
[2m[36m(pid=66132)[0m     @     0x55cfcbac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66132)[0m     @     0x55cfcbac1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66132)[0m     @     0x55cfcba36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66132)[0m     @     0x55cfcbac0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66132)[0m     @     0x55cfcbac1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66132)[0m     @     0x55cfcba36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66137)[0m     @     0x5649508cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66137)[0m     @     0x5649508cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66137)[0m     @     0x564950844689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66099)[0m     @     0x55f51d105baf _PyEval_EvalCodeWithName
[2m[36m(pid=66099)[0m     @     0x55f51d106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66099)[0m     @     0x55f51d07b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66099)[0m     @     0x55f51d105baf _PyEval_EvalCodeWithName
[2m[36m(pid=66099)[0m     @     0x55f51d106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66099)[0m     @     0x55f51d07b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66099)[0m     @     0x55f51d105baf _PyEval_EvalCodeWithName
[2m[36m(pid=66099)[0m     @     0x55f51d106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66099)[0m     @     0x55f51d07b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66124)[0m     @     0x7fa3966ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66124)[0m     @     0x7fa3966fd388 at::native::copy_impl()
[2m[36m(pid=66124)[0m     @     0x7fa3966ff5a4 at::native::copy_()
[2m[36m(pid=66124)[0m     @     0x7fa396dea4f5 at::Tensor::copy_()
[2m[36m(pid=66124)[0m     @     0x7fa3992bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66084)[0m     @     0x7fcb10780c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66084)[0m     @     0x7fcb0fc22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66084)[0m     @     0x7fcb0fc20388 at::native::copy_impl()
[2m[36m(pid=66084)[0m     @     0x7fcb0fc225a4 at::native::copy_()
[2m[36m(pid=66084)[0m     @     0x7fcb1030d4f5 at::Tensor::copy_()
[2m[36m(pid=66105)[0m     @     0x7f68927a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66105)[0m     @     0x55726eacafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66105)[0m     @     0x55726ea25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66105)[0m     @     0x55726eab0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66105)[0m     @     0x55726eab1a20 method_vectorcall
[2m[36m(pid=66105)[0m     @     0x55726ea25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66105)[0m     @     0x55726eab0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66105)[0m     @     0x55726eab1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66105)[0m     @     0x55726ea26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66105)[0m     @     0x55726eab0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66105)[0m     @     0x55726eab1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66105)[0m     @     0x55726ea26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66105)[0m     @     0x55726eab0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66105)[0m     @     0x55726eab1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66105)[0m     @     0x55726ea26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66105)[0m     @     0x55726eab0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66105)[0m     @     0x55726eab1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66105)[0m     @     0x55726ea26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x7ef425868ad3 at::TensorIterator::for_each()
[2m[36m(pid=66054)[0m     @     0x7ef425868d91 at::TensorIterator::for_each()
[2m[36m(pid=66054)[0m     @     0x7ef42614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66054)[0m     @     0x7ef42616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66054)[0m     @     0x7ef425610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66054)[0m     @     0x7ef42560e388 at::native::copy_impl()
[2m[36m(pid=66088)[0m     @     0x7fb70a59ed91 at::TensorIterator::for_each()
[2m[36m(pid=66088)[0m     @     0x7fb70ae81b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66088)[0m     @     0x7fb70aea4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66088)[0m     @     0x7fb70a346a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66088)[0m     @     0x7fb70a344388 at::native::copy_impl()
[2m[36m(pid=66086)[0m     @     0x7f4d7faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=66086)[0m     @     0x7f4d7f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66086)[0m     @     0x7f4d7f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66097)[0m     @     0x7fab44751d91 at::TensorIterator::for_each()
[2m[36m(pid=66097)[0m     @     0x7fab45034b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66097)[0m     @     0x7fab45057c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66097)[0m     @     0x7fab444f9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66097)[0m     @     0x7fab444f7388 at::native::copy_impl()
[2m[36m(pid=66050)[0m     @     0x7f568dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=66050)[0m     @     0x7f568e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66050)[0m     @     0x7f568e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66050)[0m     @     0x7f568d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66050)[0m     @     0x7f568d9cd388 at::native::copy_impl()
[2m[36m(pid=66100)[0m     @     0x7eebcce22d91 at::TensorIterator::for_each()
[2m[36m(pid=66100)[0m     @     0x7eebcd705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66100)[0m     @     0x7eebcd728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66100)[0m     @     0x7eebccbcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66100)[0m     @     0x7eebccbc8388 at::native::copy_impl()
[2m[36m(pid=66037)[0m     @     0x7fb8d5ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=66053)[0m     @     0x7ef6f1befd91 at::TensorIterator::for_each()
[2m[36m(pid=66053)[0m     @     0x7ef6f24d2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66053)[0m     @     0x7ef6f24f5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66053)[0m     @     0x7ef6f1997a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66053)[0m     @     0x7ef6f1995388 at::native::copy_impl()
[2m[36m(pid=66138)[0m     @     0x7eeb11480d91 at::TensorIterator::for_each()
[2m[36m(pid=66138)[0m     @     0x7eeb11d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66138)[0m     @     0x7eeb11d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66138)[0m     @     0x7eeb11228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66138)[0m     @     0x7eeb11226388 at::native::copy_impl()
[2m[36m(pid=66093)[0m     @     0x7f4b7ee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=66093)[0m     @     0x7f4b7f762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66093)[0m     @     0x7f4b7f785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66093)[0m     @     0x7f4b7ec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66093)[0m     @     0x7f4b7ec25388 at::native::copy_impl()
[2m[36m(pid=66043)[0m     @     0x7fae7a4ded91 at::TensorIterator::for_each()
[2m[36m(pid=66043)[0m     @     0x7fae7adc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66043)[0m     @     0x7fae7ade4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66043)[0m     @     0x7fae7a286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66043)[0m     @     0x7fae7a284388 at::native::copy_impl()
[2m[36m(pid=66082)[0m     @     0x7f550a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66082)[0m     @     0x7f550a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=66082)[0m     @     0x7f550a957d91 at::TensorIterator::for_each()
[2m[36m(pid=66021)[0m     @     0x7f94f59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66021)[0m     @     0x7f94f59cd388 at::native::copy_impl()
[2m[36m(pid=66021)[0m     @     0x7f94f59cf5a4 at::native::copy_()
[2m[36m(pid=66021)[0m     @     0x7f94f60ba4f5 at::Tensor::copy_()
[2m[36m(pid=66090)[0m     @     0x7f4948015a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66090)[0m     @     0x7f4948013388 at::native::copy_impl()
[2m[36m(pid=66090)[0m     @     0x7f49480155a4 at::native::copy_()
[2m[36m(pid=66094)[0m     @     0x7f1164ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66094)[0m     @     0x7f1164ede388 at::native::copy_impl()
[2m[36m(pid=66094)[0m     @     0x7f1164ee05a4 at::native::copy_()
[2m[36m(pid=66098)[0m     @     0x7f866ec25388 at::native::copy_impl()
[2m[36m(pid=66098)[0m     @     0x7f866ec275a4 at::native::copy_()
[2m[36m(pid=66098)[0m     @     0x7f866f3124f5 at::Tensor::copy_()
[2m[36m(pid=66143)[0m     @     0x7f98b2a544f5 at::Tensor::copy_()
[2m[36m(pid=66143)[0m     @     0x7f98b8aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66143)[0m     @     0x5632f0ed4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66143)[0m     @     0x5632f0e2fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66143)[0m     @     0x5632f0ebabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66143)[0m     @     0x5632f0ebba20 method_vectorcall
[2m[36m(pid=66143)[0m     @     0x5632f0e2fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66143)[0m     @     0x5632f0ebabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66143)[0m     @     0x5632f0ebb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66143)[0m     @     0x5632f0e30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66143)[0m     @     0x5632f0ebabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66143)[0m     @     0x5632f0ebb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66143)[0m     @     0x5632f0e30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66143)[0m     @     0x5632f0ebabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66143)[0m     @     0x5632f0ebb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66143)[0m     @     0x5632f0e30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66143)[0m     @     0x5632f0ebabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66143)[0m     @     0x5632f0ebb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66143)[0m     @     0x5632f0e30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x7f0e92e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66038)[0m     @     0x7f0e92e99388 at::native::copy_impl()
[2m[36m(pid=66038)[0m     @     0x7f0e92e9b5a4 at::native::copy_()
[2m[36m(pid=66044)[0m     @     0x7f5e8a3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66044)[0m     @     0x7f5e8a3e7388 at::native::copy_impl()
[2m[36m(pid=66044)[0m     @     0x7f5e8a3e95a4 at::native::copy_()
[2m[36m(pid=66131)[0m     @     0x7f689cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=66131)[0m     @     0x7f68a303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66131)[0m     @     0x555f455e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66131)[0m     @     0x555f4553cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66131)[0m     @     0x555f455c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66131)[0m     @     0x555f455c8a20 method_vectorcall
[2m[36m(pid=66131)[0m     @     0x555f4553cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66131)[0m     @     0x555f455c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66131)[0m     @     0x555f455c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66131)[0m     @     0x555f4553d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66131)[0m     @     0x555f455c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66131)[0m     @     0x555f455c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66131)[0m     @     0x555f4553d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66131)[0m     @     0x555f455c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66131)[0m     @     0x555f455c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66131)[0m     @     0x555f4553d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66131)[0m     @     0x555f455c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66131)[0m     @     0x555f455c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66131)[0m     @     0x555f4553d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66020)[0m     @     0x7f6b62f1ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66020)[0m     @     0x7f6b62f1c388 at::native::copy_impl()
[2m[36m(pid=66020)[0m     @     0x7f6b62f1e5a4 at::native::copy_()
2020-11-05 10:51:27,424	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=66095)[0m     @     0x7f55ff21079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66095)[0m     @     0x55b162d6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66095)[0m     @     0x55b162cc5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66095)[0m     @     0x55b162d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=66095)[0m     @     0x55b162d51a20 method_vectorcall
[2m[36m(pid=66095)[0m     @     0x55b162cc5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66095)[0m     @     0x55b162d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=66095)[0m     @     0x55b162d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66095)[0m     @     0x55b162cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66095)[0m     @     0x55b162d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=66095)[0m     @     0x55b162d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66095)[0m     @     0x55b162cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66095)[0m     @     0x55b162d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=66095)[0m     @     0x55b162d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66095)[0m     @     0x55b162cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66095)[0m     @     0x55b162d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=66095)[0m     @     0x55b162d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66095)[0m     @     0x55b162cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x7faa8bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66030)[0m     @     0x7faa8bc48388 at::native::copy_impl()
[2m[36m(pid=66030)[0m     @     0x7faa8bc4a5a4 at::native::copy_()
[2m[36m(pid=66019)[0m     @     0x7fcca6d20d91 at::TensorIterator::for_each()
[2m[36m(pid=66019)[0m     @     0x7fcca7603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66019)[0m     @     0x7fcca7626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66019)[0m     @     0x7fcca6ac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66019)[0m     @     0x7fcca6ac6388 at::native::copy_impl()
[2m[36m(pid=66042)[0m     @     0x7f379e259a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66042)[0m     @     0x7f379e257388 at::native::copy_impl()
[2m[36m(pid=66042)[0m     @     0x7f379e2595a4 at::native::copy_()
[2m[36m(pid=66042)[0m     @     0x7f379e9444f5 at::Tensor::copy_()
[2m[36m(pid=66146)[0m     @     0x564fe592cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66146)[0m     @     0x564fe592da20 method_vectorcall
[2m[36m(pid=66146)[0m     @     0x564fe58a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66146)[0m     @     0x564fe592cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66146)[0m     @     0x564fe592d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66146)[0m     @     0x564fe58a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66146)[0m     @     0x564fe592cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66146)[0m     @     0x564fe592d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66146)[0m     @     0x564fe58a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66146)[0m     @     0x564fe592cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66146)[0m     @     0x564fe592d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66146)[0m     @     0x564fe58a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66146)[0m     @     0x564fe592cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66146)[0m     @     0x564fe592d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66146)[0m     @     0x564fe58a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x7f04a08354f5 at::Tensor::copy_()
[2m[36m(pid=66118)[0m     @     0x7f04a2d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66023)[0m     @     0x7f3dc1ebf4f5 at::Tensor::copy_()
[2m[36m(pid=66023)[0m     @     0x7f3dc43928de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66023)[0m     @     0x7f3dc1ebf4f5 at::Tensor::copy_()
[2m[36m(pid=66023)[0m     @     0x7f3dc7f6a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66023)[0m     @     0x563b834defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66023)[0m     @     0x563b83439b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66023)[0m     @     0x563b834c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=66023)[0m     @     0x563b834c5a20 method_vectorcall
[2m[36m(pid=66023)[0m     @     0x563b83439bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66023)[0m     @     0x563b834c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=66023)[0m     @     0x563b834c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66023)[0m     @     0x563b8343a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66023)[0m     @     0x563b834c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=66023)[0m     @     0x563b834c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66023)[0m     @     0x563b8343a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66023)[0m     @     0x563b834c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=66023)[0m     @     0x563b834c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66023)[0m     @     0x563b8343a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66023)[0m     @     0x563b834c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=66023)[0m     @     0x563b834c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66023)[0m     @     0x563b8343a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66018)[0m     @     0x7f21374f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66018)[0m     @     0x7f21374f0388 at::native::copy_impl()
[2m[36m(pid=66018)[0m     @     0x7f21374f25a4 at::native::copy_()
[2m[36m(pid=66018)[0m     @     0x7f2137bdd4f5 at::Tensor::copy_()
[2m[36m(pid=66133)[0m     @     0x7f6b66fcb5a4 at::native::copy_()
[2m[36m(pid=66133)[0m     @     0x7f6b676b64f5 at::Tensor::copy_()
[2m[36m(pid=66133)[0m     @     0x7f6b69b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66024)[0m     @     0x7f85a884d5a4 at::native::copy_()
[2m[36m(pid=66024)[0m     @     0x7f85a8f384f5 at::Tensor::copy_()
[2m[36m(pid=66024)[0m     @     0x7f85ab40b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66103)[0m     @     0x7fa9fe910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66103)[0m     @     0x7fa9fe90e388 at::native::copy_impl()
[2m[36m(pid=66103)[0m     @     0x7fa9fe9105a4 at::native::copy_()
[2m[36m(pid=66103)[0m     @     0x7fa9feffb4f5 at::Tensor::copy_()
[2m[36m(pid=66103)[0m     @     0x7faa014ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66101)[0m     @     0x7f7c8edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66101)[0m     @     0x7f7c8edb2388 at::native::copy_impl()
[2m[36m(pid=66101)[0m     @     0x7f7c8edb45a4 at::native::copy_()
[2m[36m(pid=66101)[0m     @     0x7f7c8f49f4f5 at::Tensor::copy_()
[2m[36m(pid=66040)[0m     @     0x7f8986641d91 at::TensorIterator::for_each()
[2m[36m(pid=66040)[0m     @     0x7f8986f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66040)[0m     @     0x7f8986f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66040)[0m     @     0x7f89863e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66040)[0m     @     0x7f89863e7388 at::native::copy_impl()
[2m[36m(pid=66085)[0m     @     0x7f51892cdd91 at::TensorIterator::for_each()
[2m[36m(pid=66085)[0m     @     0x7f5189bb0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66085)[0m     @     0x7f5189bd3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66085)[0m     @     0x7f5189075a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66085)[0m     @     0x7f5189073388 at::native::copy_impl()
[2m[36m(pid=66085)[0m     @     0x7f51890755a4 at::native::copy_()
[2m[36m(pid=66052)[0m     @     0x7f71457f4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66052)[0m     @     0x7f71457f2388 at::native::copy_impl()
[2m[36m(pid=66052)[0m     @     0x7f71457f45a4 at::native::copy_()
[2m[36m(pid=66052)[0m     @     0x7f7145edf4f5 at::Tensor::copy_()
[2m[36m(pid=66034)[0m     @     0x7f5f31e35a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66034)[0m     @     0x7f5f31e33388 at::native::copy_impl()
[2m[36m(pid=66034)[0m     @     0x7f5f31e355a4 at::native::copy_()
[2m[36m(pid=66034)[0m     @     0x7f5f325204f5 at::Tensor::copy_()
[2m[36m(pid=66034)[0m     @     0x7f5f349f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66029)[0m     @     0x7ee4dd138d91 at::TensorIterator::for_each()
[2m[36m(pid=66029)[0m     @     0x7ee4dda1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66029)[0m     @     0x7ee4dda3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66106)[0m     @     0x7f0f6f6f95a4 at::native::copy_()
[2m[36m(pid=66106)[0m     @     0x7f0f6fde44f5 at::Tensor::copy_()
[2m[36m(pid=66106)[0m     @     0x7f0f722b78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66106)[0m     @     0x7f0f6fde44f5 at::Tensor::copy_()
[2m[36m(pid=66127)[0m     @     0x7f32a9057c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66127)[0m     @     0x7f32a84f9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66127)[0m     @     0x7f32a84f7388 at::native::copy_impl()
[2m[36m(pid=66127)[0m     @     0x7f32a84f95a4 at::native::copy_()
[2m[36m(pid=66127)[0m     @     0x7f32a8be44f5 at::Tensor::copy_()
[2m[36m(pid=66039)[0m     @     0x7f71f69e35a4 at::native::copy_()
[2m[36m(pid=66039)[0m     @     0x7f71f70ce4f5 at::Tensor::copy_()
[2m[36m(pid=66039)[0m     @     0x7f71f95a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66136)[0m     @     0x7f117a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66136)[0m     @     0x7f1179c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66136)[0m     @     0x7f1179c8f388 at::native::copy_impl()
[2m[36m(pid=66136)[0m     @     0x7f1179c915a4 at::native::copy_()
[2m[36m(pid=66136)[0m     @     0x7f117a37c4f5 at::Tensor::copy_()
[2m[36m(pid=66036)[0m     @     0x7f43a18215a4 at::native::copy_()
[2m[36m(pid=66036)[0m     @     0x7f43a1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=66036)[0m     @     0x7f43a43df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66036)[0m     @     0x7f43a1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=66036)[0m     @     0x7f43a7fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66036)[0m     @     0x559220106fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66036)[0m     @     0x559220061b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66036)[0m     @     0x5592200ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66036)[0m     @     0x5592200eda20 method_vectorcall
[2m[36m(pid=66036)[0m     @     0x559220061bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66036)[0m     @     0x5592200ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66036)[0m     @     0x5592200ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66036)[0m     @     0x559220062689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66036)[0m     @     0x5592200ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66036)[0m     @     0x5592200ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66036)[0m     @     0x559220062689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66036)[0m     @     0x5592200ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66036)[0m     @     0x5592200ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66036)[0m     @     0x559220062689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66036)[0m     @     0x5592200ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66036)[0m     @     0x5592200ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66036)[0m     @     0x559220062689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66022)[0m     @     0x7f12f92fa5a4 at::native::copy_()
[2m[36m(pid=66022)[0m     @     0x7f12f99e54f5 at::Tensor::copy_()
[2m[36m(pid=66022)[0m     @     0x7f12fbeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66022)[0m     @     0x7f12f99e54f5 at::Tensor::copy_()
[2m[36m(pid=66022)[0m     @     0x7f12ffa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66022)[0m     @     0x55a107c0cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66022)[0m     @     0x55a107b67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66022)[0m     @     0x55a107bf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66022)[0m     @     0x55a107bf3a20 method_vectorcall
[2m[36m(pid=66022)[0m     @     0x55a107b67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66022)[0m     @     0x55a107bf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66022)[0m     @     0x55a107bf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66022)[0m     @     0x55a107b68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66148)[0m     @     0x7ef92f8c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66148)[0m     @     0x7ef92f8e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66148)[0m     @     0x7ef92ed87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66148)[0m     @     0x7ef92ed85388 at::native::copy_impl()
[2m[36m(pid=66148)[0m     @     0x7ef92ed875a4 at::native::copy_()
[2m[36m(pid=66026)[0m     @     0x7fbff2fcb5a4 at::native::copy_()
[2m[36m(pid=66026)[0m     @     0x7fbff36b64f5 at::Tensor::copy_()
[2m[36m(pid=66026)[0m     @     0x7fbff5b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66026)[0m     @     0x7fbff36b64f5 at::Tensor::copy_()
[2m[36m(pid=66026)[0m     @     0x7fbff976179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66026)[0m     @     0x55ae23d06fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66026)[0m     @     0x55ae23c61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66031)[0m     @     0x7f3f7b802a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66031)[0m     @     0x7f3f7b800388 at::native::copy_impl()
[2m[36m(pid=66031)[0m     @     0x7f3f7b8025a4 at::native::copy_()
[2m[36m(pid=66046)[0m     @     0x7f3f48148388 at::native::copy_impl()
[2m[36m(pid=66046)[0m     @     0x7f3f4814a5a4 at::native::copy_()
[2m[36m(pid=66046)[0m     @     0x7f3f488354f5 at::Tensor::copy_()
[2m[36m(pid=66033)[0m     @     0x7f31e430b388 at::native::copy_impl()
[2m[36m(pid=66033)[0m     @     0x7f31e430d5a4 at::native::copy_()
[2m[36m(pid=66033)[0m     @     0x7f31e49f84f5 at::Tensor::copy_()
[2m[36m(pid=66119)[0m     @     0x7f23087b6d91 at::TensorIterator::for_each()
[2m[36m(pid=66119)[0m     @     0x7f2309099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66119)[0m     @     0x7f23090bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66119)[0m     @     0x7f230855ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66119)[0m     @     0x7f230855c388 at::native::copy_impl()
[2m[36m(pid=66091)[0m     @     0x7ed9cdc915a4 at::native::copy_()
[2m[36m(pid=66091)[0m     @     0x7ed9ce37c4f5 at::Tensor::copy_()
[2m[36m(pid=66091)[0m     @     0x7ed9d084f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66092)[0m     @     0x7fba2e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66092)[0m     @     0x7fba2e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66092)[0m     @     0x7fba2dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66092)[0m     @     0x7fba2dbde388 at::native::copy_impl()
[2m[36m(pid=66041)[0m     @     0x7f239a6924f5 at::Tensor::copy_()
[2m[36m(pid=66041)[0m     @     0x7f239cb658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66041)[0m     @     0x7f239a6924f5 at::Tensor::copy_()
[2m[36m(pid=66041)[0m     @     0x7f23a073d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66041)[0m     @     0x55d2330edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66041)[0m     @     0x55d233048b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66041)[0m     @     0x55d2330d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=66041)[0m     @     0x55d2330d4a20 method_vectorcall
[2m[36m(pid=66041)[0m     @     0x55d233048bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66041)[0m     @     0x55d2330d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=66041)[0m     @     0x55d2330d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66041)[0m     @     0x55d233049689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66041)[0m     @     0x55d2330d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=66041)[0m     @     0x55d2330d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66041)[0m     @     0x55d233049689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66041)[0m     @     0x55d2330d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=66041)[0m     @     0x55d2330d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66041)[0m     @     0x55d233049689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x7f10c6b68d91 at::TensorIterator::for_each()
[2m[36m(pid=66080)[0m     @     0x7f10c744bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66080)[0m     @     0x7f10c746ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66089)[0m     @     0x7f88d8991c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66135)[0m     @     0x7fc2bf8ed4f5 at::Tensor::copy_()
[2m[36m(pid=66135)[0m     @     0x7fc2c1dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66135)[0m     @     0x7fc2bf8ed4f5 at::Tensor::copy_()
[2m[36m(pid=66087)[0m     @     0x7f9774f204f5 at::Tensor::copy_()
[2m[36m(pid=66087)[0m     @     0x7f97773f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66087)[0m     @     0x7f9774f204f5 at::Tensor::copy_()
[2m[36m(pid=66087)[0m     @     0x7f977afcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66087)[0m     @     0x55c7c36c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66087)[0m     @     0x55c7c3623b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66087)[0m     @     0x55c7c36aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66087)[0m     @     0x55c7c36afa20 method_vectorcall
[2m[36m(pid=66087)[0m     @     0x55c7c3623bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66087)[0m     @     0x55c7c36aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66087)[0m     @     0x55c7c36af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66087)[0m     @     0x55c7c3624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66087)[0m     @     0x55c7c36aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66087)[0m     @     0x55c7c36af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66087)[0m     @     0x55c7c3624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66087)[0m     @     0x55c7c36aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66087)[0m     @     0x55c7c36af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66087)[0m     @     0x55c7c3624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66087)[0m     @     0x55c7c36aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66087)[0m     @     0x55c7c36af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66087)[0m     @     0x55c7c3624689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66123)[0m     @     0x7f278b1334f5 at::Tensor::copy_()
[2m[36m(pid=66123)[0m     @     0x7f278d6068de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66123)[0m     @     0x7f278b1334f5 at::Tensor::copy_()
[2m[36m(pid=66123)[0m     @     0x7f27911de79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66123)[0m     @     0x56461f2c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66123)[0m     @     0x56461f21fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66123)[0m     @     0x56461f2aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66123)[0m     @     0x56461f2aba20 method_vectorcall
[2m[36m(pid=66123)[0m     @     0x56461f21fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66123)[0m     @     0x56461f2aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66123)[0m     @     0x56461f2ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66123)[0m     @     0x56461f220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66123)[0m     @     0x56461f2aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66123)[0m     @     0x56461f2ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66123)[0m     @     0x56461f220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66123)[0m     @     0x56461f2aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66123)[0m     @     0x56461f2ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66123)[0m     @     0x56461f220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66123)[0m     @     0x56461f2aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=66123)[0m     @     0x56461f2ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66123)[0m     @     0x56461f220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66027)[0m     @     0x7ee38edea4f5 at::Tensor::copy_()
[2m[36m(pid=66027)[0m     @     0x7ee3912bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66027)[0m     @     0x7ee38edea4f5 at::Tensor::copy_()
[2m[36m(pid=66027)[0m     @     0x7ee394e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66027)[0m     @     0x55be203cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66027)[0m     @     0x55be20326b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66027)[0m     @     0x55be203b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66027)[0m     @     0x55be203b2a20 method_vectorcall
[2m[36m(pid=66027)[0m     @     0x55be20326bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66027)[0m     @     0x55be203b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66027)[0m     @     0x55be203b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66027)[0m     @     0x55be20327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66027)[0m     @     0x55be203b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66027)[0m     @     0x55be203b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66027)[0m     @     0x55be20327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66027)[0m     @     0x55be203b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66027)[0m     @     0x55be203b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66027)[0m     @     0x55be20327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66027)[0m     @     0x55be203b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66027)[0m     @     0x55be203b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66027)[0m     @     0x55be20327689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66032)[0m     @     0x7ed3e78025a4 at::native::copy_()
[2m[36m(pid=66032)[0m     @     0x7ed3e7eed4f5 at::Tensor::copy_()
[2m[36m(pid=66032)[0m     @     0x7ed3ea3c08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66120)[0m     @     0x7f420e5e24f5 at::Tensor::copy_()
[2m[36m(pid=66120)[0m     @     0x7f4210ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66120)[0m     @     0x7f420e5e24f5 at::Tensor::copy_()
[2m[36m(pid=66120)[0m     @     0x7f421468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66120)[0m     @     0x55d216555fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66120)[0m     @     0x55d2164b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66120)[0m     @     0x55d21653bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66120)[0m     @     0x55d21653ca20 method_vectorcall
[2m[36m(pid=66120)[0m     @     0x55d2164b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66120)[0m     @     0x55d21653bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66120)[0m     @     0x55d21653c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66120)[0m     @     0x55d2164b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66120)[0m     @     0x55d21653bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66120)[0m     @     0x55d21653c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66120)[0m     @     0x55d2164b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66120)[0m     @     0x55d21653bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66120)[0m     @     0x55d21653c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66120)[0m     @     0x55d2164b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66120)[0m     @     0x55d21653bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66120)[0m     @     0x55d21653c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66120)[0m     @     0x55d2164b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66104)[0m     @     0x7f97ad2484f5 at::Tensor::copy_()
[2m[36m(pid=66104)[0m     @     0x7f97af71b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66104)[0m     @     0x7f97ad2484f5 at::Tensor::copy_()
[2m[36m(pid=66104)[0m     @     0x7f97b32f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66104)[0m     @     0x55e625173fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66104)[0m     @     0x55e6250ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66104)[0m     @     0x55e625159baf _PyEval_EvalCodeWithName
[2m[36m(pid=66104)[0m     @     0x55e62515aa20 method_vectorcall
[2m[36m(pid=66104)[0m     @     0x55e6250cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66104)[0m     @     0x55e625159baf _PyEval_EvalCodeWithName
[2m[36m(pid=66104)[0m     @     0x55e62515a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66104)[0m     @     0x55e6250cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66104)[0m     @     0x55e625159baf _PyEval_EvalCodeWithName
[2m[36m(pid=66104)[0m     @     0x55e62515a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66104)[0m     @     0x55e6250cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66104)[0m     @     0x55e625159baf _PyEval_EvalCodeWithName
[2m[36m(pid=66104)[0m     @     0x55e62515a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66104)[0m     @     0x55e6250cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66104)[0m     @     0x55e625159baf _PyEval_EvalCodeWithName
[2m[36m(pid=66104)[0m     @     0x55e62515a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66025)[0m     @     0x7f5d947a35a4 at::native::copy_()
[2m[36m(pid=66025)[0m     @     0x7f5d94e8e4f5 at::Tensor::copy_()
[2m[36m(pid=66025)[0m     @     0x7f5d973618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66025)[0m     @     0x7f5d94e8e4f5 at::Tensor::copy_()
[2m[36m(pid=66124)[0m     @     0x7fa396dea4f5 at::Tensor::copy_()
[2m[36m(pid=66124)[0m     @     0x7fa39ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66124)[0m     @     0x558ba76e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66124)[0m     @     0x558ba763db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66124)[0m     @     0x558ba76c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66124)[0m     @     0x558ba76c9a20 method_vectorcall
[2m[36m(pid=66124)[0m     @     0x558ba763dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66124)[0m     @     0x558ba76c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66124)[0m     @     0x558ba76c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66124)[0m     @     0x558ba763e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66124)[0m     @     0x558ba76c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66124)[0m     @     0x558ba76c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66124)[0m     @     0x558ba763e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66124)[0m     @     0x558ba76c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66124)[0m     @     0x558ba76c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66124)[0m     @     0x558ba763e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66124)[0m     @     0x558ba76c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66124)[0m     @     0x558ba76c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66124)[0m     @     0x558ba763e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66084)[0m     @     0x7fcb127e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66084)[0m     @     0x7fcb1030d4f5 at::Tensor::copy_()
[2m[36m(pid=66084)[0m     @     0x7fcb163b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66084)[0m     @     0x560575362fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66084)[0m     @     0x5605752bdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66084)[0m     @     0x560575348baf _PyEval_EvalCodeWithName
[2m[36m(pid=66084)[0m     @     0x560575349a20 method_vectorcall
[2m[36m(pid=66084)[0m     @     0x5605752bdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66084)[0m     @     0x560575348baf _PyEval_EvalCodeWithName
[2m[36m(pid=66084)[0m     @     0x560575349643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66084)[0m     @     0x5605752be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66084)[0m     @     0x560575348baf _PyEval_EvalCodeWithName
[2m[36m(pid=66084)[0m     @     0x560575349643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66084)[0m     @     0x5605752be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66084)[0m     @     0x560575348baf _PyEval_EvalCodeWithName
[2m[36m(pid=66084)[0m     @     0x560575349643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66084)[0m     @     0x5605752be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66084)[0m     @     0x560575348baf _PyEval_EvalCodeWithName
[2m[36m(pid=66084)[0m     @     0x560575349643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66084)[0m     @     0x5605752be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x7ef4256105a4 at::native::copy_()
[2m[36m(pid=66054)[0m     @     0x7ef425cfb4f5 at::Tensor::copy_()
[2m[36m(pid=66054)[0m     @     0x7ef4281ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66088)[0m     @     0x7fb70a3465a4 at::native::copy_()
[2m[36m(pid=66088)[0m     @     0x7fb70aa314f5 at::Tensor::copy_()
[2m[36m(pid=66088)[0m     @     0x7fb70cf048de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66086)[0m     @     0x7f4d7f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=66097)[0m     @     0x7fab444f95a4 at::native::copy_()
[2m[36m(pid=66097)[0m     @     0x7fab44be44f5 at::Tensor::copy_()
[2m[36m(pid=66097)[0m     @     0x7fab470b78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66097)[0m     @     0x7fab44be44f5 at::Tensor::copy_()
[2m[36m(pid=66050)[0m     @     0x7f568d9cf5a4 at::native::copy_()
[2m[36m(pid=66050)[0m     @     0x7f568e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=66050)[0m     @     0x7f569058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66050)[0m     @     0x7f568e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=66100)[0m     @     0x7eebccbca5a4 at::native::copy_()
[2m[36m(pid=66100)[0m     @     0x7eebcd2b54f5 at::Tensor::copy_()
[2m[36m(pid=66100)[0m     @     0x7eebcf7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66100)[0m     @     0x7eebcd2b54f5 at::Tensor::copy_()
[2m[36m(pid=66037)[0m     @     0x7fb8d5ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=66037)[0m     @     0x7fb8d5ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=66037)[0m     @     0x7fb8d5ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=66053)[0m     @     0x7ef6f19975a4 at::native::copy_()
[2m[36m(pid=66053)[0m     @     0x7ef6f20824f5 at::Tensor::copy_()
[2m[36m(pid=66053)[0m     @     0x7ef6f45558de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66053)[0m     @     0x7ef6f20824f5 at::Tensor::copy_()
[2m[36m(pid=66053)[0m     @     0x7ef6f812d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66053)[0m     @     0x55aa1ceabfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66053)[0m     @     0x55aa1ce06b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66053)[0m     @     0x55aa1ce91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66053)[0m     @     0x55aa1ce92a20 method_vectorcall
[2m[36m(pid=66053)[0m     @     0x55aa1ce06bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66053)[0m     @     0x55aa1ce91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66053)[0m     @     0x55aa1ce92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66138)[0m     @     0x7eeb112285a4 at::native::copy_()
[2m[36m(pid=66138)[0m     @     0x7eeb119134f5 at::Tensor::copy_()
[2m[36m(pid=66138)[0m     @     0x7eeb13de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66138)[0m     @     0x7eeb119134f5 at::Tensor::copy_()
[2m[36m(pid=66093)[0m     @     0x7f4b7ec275a4 at::native::copy_()
[2m[36m(pid=66093)[0m     @     0x7f4b7f3124f5 at::Tensor::copy_()
[2m[36m(pid=66093)[0m     @     0x7f4b817e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66043)[0m     @     0x7fae7a2865a4 at::native::copy_()
[2m[36m(pid=66043)[0m     @     0x7fae7a9714f5 at::Tensor::copy_()
[2m[36m(pid=66043)[0m     @     0x7fae7ce448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66082)[0m     @     0x7f550b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66082)[0m     @     0x7f550b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66082)[0m     @     0x7f550a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66082)[0m     @     0x7f550a6fd388 at::native::copy_impl()
[2m[36m(pid=66082)[0m     @     0x7f550a6ff5a4 at::native::copy_()
[2m[36m(pid=66021)[0m     @     0x7f94f858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66021)[0m     @     0x7f94f60ba4f5 at::Tensor::copy_()
[2m[36m(pid=66021)[0m     @     0x7f94fc16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66021)[0m     @     0x563adb469fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66021)[0m     @     0x563adb3c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66021)[0m     @     0x563adb44fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66021)[0m     @     0x563adb450a20 method_vectorcall
[2m[36m(pid=66021)[0m     @     0x563adb3c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66021)[0m     @     0x563adb44fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66021)[0m     @     0x563adb450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66021)[0m     @     0x563adb3c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66021)[0m     @     0x563adb44fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66021)[0m     @     0x563adb450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66021)[0m     @     0x563adb3c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66021)[0m     @     0x563adb44fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66021)[0m     @     0x563adb450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66021)[0m     @     0x563adb3c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66021)[0m     @     0x563adb44fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66021)[0m     @     0x563adb450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66021)[0m     @     0x563adb3c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66090)[0m     @     0x7f49487004f5 at::Tensor::copy_()
[2m[36m(pid=66090)[0m     @     0x7f494abd38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66090)[0m     @     0x7f49487004f5 at::Tensor::copy_()
[2m[36m(pid=66090)[0m     @     0x7f494e7ab79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66090)[0m     @     0x55aa04437fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66090)[0m     @     0x55aa04392b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66090)[0m     @     0x55aa0441dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66090)[0m     @     0x55aa0441ea20 method_vectorcall
[2m[36m(pid=66090)[0m     @     0x55aa04392bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66090)[0m     @     0x55aa0441dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66090)[0m     @     0x55aa0441e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66090)[0m     @     0x55aa04393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66090)[0m     @     0x55aa0441dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66090)[0m     @     0x55aa0441e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66090)[0m     @     0x55aa04393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66090)[0m     @     0x55aa0441dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66090)[0m     @     0x55aa0441e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66090)[0m     @     0x55aa04393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66090)[0m     @     0x55aa0441dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66090)[0m     @     0x55aa0441e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66090)[0m     @     0x55aa04393689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66094)[0m     @     0x7f11655cb4f5 at::Tensor::copy_()
[2m[36m(pid=66094)[0m     @     0x7f1167a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66094)[0m     @     0x7f11655cb4f5 at::Tensor::copy_()
[2m[36m(pid=66094)[0m     @     0x7f116b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66094)[0m     @     0x556849f11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66094)[0m     @     0x556849e6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66094)[0m     @     0x556849ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66094)[0m     @     0x556849ef8a20 method_vectorcall
[2m[36m(pid=66094)[0m     @     0x556849e6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66094)[0m     @     0x556849ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66094)[0m     @     0x556849ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66094)[0m     @     0x556849e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66094)[0m     @     0x556849ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66094)[0m     @     0x556849ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66094)[0m     @     0x556849e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66094)[0m     @     0x556849ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66094)[0m     @     0x556849ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66094)[0m     @     0x556849e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66094)[0m     @     0x556849ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66094)[0m     @     0x556849ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66094)[0m     @     0x556849e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66098)[0m     @     0x7f86717e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66098)[0m     @     0x7f866f3124f5 at::Tensor::copy_()
[2m[36m(pid=66098)[0m     @     0x7f86753bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66098)[0m     @     0x55c645e87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66098)[0m     @     0x55c645de2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66098)[0m     @     0x55c645e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66098)[0m     @     0x55c645e6ea20 method_vectorcall
[2m[36m(pid=66098)[0m     @     0x55c645de2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66098)[0m     @     0x55c645e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66098)[0m     @     0x55c645e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66098)[0m     @     0x55c645de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66098)[0m     @     0x55c645e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66098)[0m     @     0x55c645e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66098)[0m     @     0x55c645de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66098)[0m     @     0x55c645e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66098)[0m     @     0x55c645e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66098)[0m     @     0x55c645de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66098)[0m     @     0x55c645e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66098)[0m     @     0x55c645e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66098)[0m     @     0x55c645de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x7f0e935864f5 at::Tensor::copy_()
[2m[36m(pid=66038)[0m     @     0x7f0e95a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66038)[0m     @     0x7f0e935864f5 at::Tensor::copy_()
[2m[36m(pid=66038)[0m     @     0x7f0e9963179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66038)[0m     @     0x55904f761fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66038)[0m     @     0x55904f6bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x55904f747baf _PyEval_EvalCodeWithName
[2m[36m(pid=66038)[0m     @     0x55904f748a20 method_vectorcall
[2m[36m(pid=66038)[0m     @     0x55904f6bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x55904f747baf _PyEval_EvalCodeWithName
[2m[36m(pid=66038)[0m     @     0x55904f748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66038)[0m     @     0x55904f6bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x55904f747baf _PyEval_EvalCodeWithName
[2m[36m(pid=66038)[0m     @     0x55904f748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66038)[0m     @     0x55904f6bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x55904f747baf _PyEval_EvalCodeWithName
[2m[36m(pid=66038)[0m     @     0x55904f748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66038)[0m     @     0x55904f6bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66038)[0m     @     0x55904f747baf _PyEval_EvalCodeWithName
[2m[36m(pid=66038)[0m     @     0x55904f748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66038)[0m     @     0x55904f6bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66044)[0m     @     0x7f5e8aad44f5 at::Tensor::copy_()
[2m[36m(pid=66044)[0m     @     0x7f5e8cfa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66044)[0m     @     0x7f5e8aad44f5 at::Tensor::copy_()
[2m[36m(pid=66044)[0m     @     0x7f5e90b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66044)[0m     @     0x56382952ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66044)[0m     @     0x56382948ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66044)[0m     @     0x563829515baf _PyEval_EvalCodeWithName
[2m[36m(pid=66044)[0m     @     0x563829516a20 method_vectorcall
[2m[36m(pid=66044)[0m     @     0x56382948abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66044)[0m     @     0x563829515baf _PyEval_EvalCodeWithName
[2m[36m(pid=66044)[0m     @     0x563829516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66044)[0m     @     0x56382948b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66044)[0m     @     0x563829515baf _PyEval_EvalCodeWithName
[2m[36m(pid=66044)[0m     @     0x563829516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66044)[0m     @     0x56382948b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66044)[0m     @     0x563829515baf _PyEval_EvalCodeWithName
[2m[36m(pid=66044)[0m     @     0x563829516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66044)[0m     @     0x56382948b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66044)[0m     @     0x563829515baf _PyEval_EvalCodeWithName
[2m[36m(pid=66044)[0m     @     0x563829516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66044)[0m     @     0x56382948b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66020)[0m     @     0x7f6b636094f5 at::Tensor::copy_()
[2m[36m(pid=66020)[0m     @     0x7f6b65adc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66020)[0m     @     0x7f6b636094f5 at::Tensor::copy_()
[2m[36m(pid=66020)[0m     @     0x7f6b696b479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66020)[0m     @     0x55f17e797fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66020)[0m     @     0x55f17e6f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66020)[0m     @     0x55f17e77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66020)[0m     @     0x55f17e77ea20 method_vectorcall
[2m[36m(pid=66020)[0m     @     0x55f17e6f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66020)[0m     @     0x55f17e77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66020)[0m     @     0x55f17e77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66020)[0m     @     0x55f17e6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66020)[0m     @     0x55f17e77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66020)[0m     @     0x55f17e77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66020)[0m     @     0x55f17e6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66020)[0m     @     0x55f17e77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66020)[0m     @     0x55f17e77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66020)[0m     @     0x55f17e6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66020)[0m     @     0x55f17e77dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66020)[0m     @     0x55f17e77e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66020)[0m     @     0x55f17e6f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x7faa8c3354f5 at::Tensor::copy_()
[2m[36m(pid=66030)[0m     @     0x7faa8e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66030)[0m     @     0x7faa8c3354f5 at::Tensor::copy_()
[2m[36m(pid=66030)[0m     @     0x7faa923e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66030)[0m     @     0x560a80a94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66030)[0m     @     0x560a809efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x560a80a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66030)[0m     @     0x560a80a7ba20 method_vectorcall
[2m[36m(pid=66030)[0m     @     0x560a809efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x560a80a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66030)[0m     @     0x560a80a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66030)[0m     @     0x560a809f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x560a80a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66030)[0m     @     0x560a80a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66030)[0m     @     0x560a809f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x560a80a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66030)[0m     @     0x560a80a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66030)[0m     @     0x560a809f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66030)[0m     @     0x560a80a7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66030)[0m     @     0x560a80a7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66030)[0m     @     0x560a809f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66019)[0m     @     0x7fcca6ac85a4 at::native::copy_()
[2m[36m(pid=66019)[0m     @     0x7fcca71b34f5 at::Tensor::copy_()
[2m[36m(pid=66019)[0m     @     0x7fcca96868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66042)[0m     @     0x7f37a0e178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66042)[0m     @     0x7f379e9444f5 at::Tensor::copy_()
[2m[36m(pid=66042)[0m     @     0x7f37a49ef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66042)[0m     @     0x5556680e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66042)[0m     @     0x55566803cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66042)[0m     @     0x5556680c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66042)[0m     @     0x5556680c8a20 method_vectorcall
[2m[36m(pid=66042)[0m     @     0x55566803cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66042)[0m     @     0x5556680c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66042)[0m     @     0x5556680c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66042)[0m     @     0x55566803d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66042)[0m     @     0x5556680c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66042)[0m     @     0x5556680c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66042)[0m     @     0x55566803d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66042)[0m     @     0x5556680c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66042)[0m     @     0x5556680c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66042)[0m     @     0x55566803d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66042)[0m     @     0x5556680c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66042)[0m     @     0x5556680c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66042)[0m     @     0x55566803d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x7f04a08354f5 at::Tensor::copy_()
[2m[36m(pid=66118)[0m     @     0x7f04a68e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66118)[0m     @     0x55c86a575fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66118)[0m     @     0x55c86a4d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x55c86a55bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66118)[0m     @     0x55c86a55ca20 method_vectorcall
[2m[36m(pid=66118)[0m     @     0x55c86a4d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x55c86a55bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66118)[0m     @     0x55c86a55c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66118)[0m     @     0x55c86a4d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x55c86a55bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66118)[0m     @     0x55c86a55c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66118)[0m     @     0x55c86a4d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x55c86a55bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66118)[0m     @     0x55c86a55c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66118)[0m     @     0x55c86a4d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66118)[0m     @     0x55c86a55bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66118)[0m     @     0x55c86a55c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66118)[0m     @     0x55c86a4d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66018)[0m     @     0x7f213a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66018)[0m     @     0x7f2137bdd4f5 at::Tensor::copy_()
[2m[36m(pid=66018)[0m     @     0x7f213dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66018)[0m     @     0x55e7aaa31fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66018)[0m     @     0x55e7aa98cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66018)[0m     @     0x55e7aaa17baf _PyEval_EvalCodeWithName
[2m[36m(pid=66018)[0m     @     0x55e7aaa18a20 method_vectorcall
[2m[36m(pid=66018)[0m     @     0x55e7aa98cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66018)[0m     @     0x55e7aaa17baf _PyEval_EvalCodeWithName
[2m[36m(pid=66018)[0m     @     0x55e7aaa18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66018)[0m     @     0x55e7aa98d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66018)[0m     @     0x55e7aaa17baf _PyEval_EvalCodeWithName
[2m[36m(pid=66018)[0m     @     0x55e7aaa18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66018)[0m     @     0x55e7aa98d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66018)[0m     @     0x55e7aaa17baf _PyEval_EvalCodeWithName
[2m[36m(pid=66018)[0m     @     0x55e7aaa18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66018)[0m     @     0x55e7aa98d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66018)[0m     @     0x55e7aaa17baf _PyEval_EvalCodeWithName
[2m[36m(pid=66018)[0m     @     0x55e7aaa18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66018)[0m     @     0x55e7aa98d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66133)[0m     @     0x7f6b676b64f5 at::Tensor::copy_()
[2m[36m(pid=66133)[0m     @     0x7f6b6d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66133)[0m     @     0x55f44a45afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66133)[0m     @     0x55f44a3b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66133)[0m     @     0x55f44a440baf _PyEval_EvalCodeWithName
[2m[36m(pid=66133)[0m     @     0x55f44a441a20 method_vectorcall
[2m[36m(pid=66133)[0m     @     0x55f44a3b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66133)[0m     @     0x55f44a440baf _PyEval_EvalCodeWithName
[2m[36m(pid=66133)[0m     @     0x55f44a441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66133)[0m     @     0x55f44a3b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66133)[0m     @     0x55f44a440baf _PyEval_EvalCodeWithName
[2m[36m(pid=66133)[0m     @     0x55f44a441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66133)[0m     @     0x55f44a3b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66133)[0m     @     0x55f44a440baf _PyEval_EvalCodeWithName
[2m[36m(pid=66133)[0m     @     0x55f44a441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66133)[0m     @     0x55f44a3b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66133)[0m     @     0x55f44a440baf _PyEval_EvalCodeWithName
[2m[36m(pid=66133)[0m     @     0x55f44a441643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66133)[0m     @     0x55f44a3b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66024)[0m     @     0x7f85a8f384f5 at::Tensor::copy_()
[2m[36m(pid=66024)[0m     @     0x7f85aefe379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66024)[0m     @     0x563a2e416fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66024)[0m     @     0x563a2e371b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66024)[0m     @     0x563a2e3fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66024)[0m     @     0x563a2e3fda20 method_vectorcall
[2m[36m(pid=66024)[0m     @     0x563a2e371bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66024)[0m     @     0x563a2e3fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66024)[0m     @     0x563a2e3fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66024)[0m     @     0x563a2e372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66024)[0m     @     0x563a2e3fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66024)[0m     @     0x563a2e3fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66024)[0m     @     0x563a2e372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66024)[0m     @     0x563a2e3fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66024)[0m     @     0x563a2e3fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66024)[0m     @     0x563a2e372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66024)[0m     @     0x563a2e3fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66024)[0m     @     0x563a2e3fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66024)[0m     @     0x563a2e372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66103)[0m     @     0x7fa9feffb4f5 at::Tensor::copy_()
[2m[36m(pid=66103)[0m     @     0x7faa050a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66103)[0m     @     0x562d20243fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66103)[0m     @     0x562d2019eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66103)[0m     @     0x562d20229baf _PyEval_EvalCodeWithName
[2m[36m(pid=66103)[0m     @     0x562d2022aa20 method_vectorcall
[2m[36m(pid=66103)[0m     @     0x562d2019ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66103)[0m     @     0x562d20229baf _PyEval_EvalCodeWithName
[2m[36m(pid=66103)[0m     @     0x562d2022a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66103)[0m     @     0x562d2019f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66103)[0m     @     0x562d20229baf _PyEval_EvalCodeWithName
[2m[36m(pid=66103)[0m     @     0x562d2022a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66103)[0m     @     0x562d2019f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66103)[0m     @     0x562d20229baf _PyEval_EvalCodeWithName
[2m[36m(pid=66103)[0m     @     0x562d2022a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66103)[0m     @     0x562d2019f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66103)[0m     @     0x562d20229baf _PyEval_EvalCodeWithName
[2m[36m(pid=66103)[0m     @     0x562d2022a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66103)[0m     @     0x562d2019f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66101)[0m     @     0x7f7c919728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66101)[0m     @     0x7f7c8f49f4f5 at::Tensor::copy_()
[2m[36m(pid=66101)[0m     @     0x7f7c9554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66101)[0m     @     0x557373e9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66101)[0m     @     0x557373df6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66101)[0m     @     0x557373e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=66101)[0m     @     0x557373e82a20 method_vectorcall
[2m[36m(pid=66101)[0m     @     0x557373df6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66101)[0m     @     0x557373e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=66101)[0m     @     0x557373e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66101)[0m     @     0x557373df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66101)[0m     @     0x557373e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=66101)[0m     @     0x557373e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66101)[0m     @     0x557373df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66101)[0m     @     0x557373e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=66101)[0m     @     0x557373e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66101)[0m     @     0x557373df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x7f89863e95a4 at::native::copy_()
[2m[36m(pid=66085)[0m     @     0x7f51897604f5 at::Tensor::copy_()
[2m[36m(pid=66085)[0m     @     0x7f518bc338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66052)[0m     @     0x7f71483b28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66052)[0m     @     0x7f7145edf4f5 at::Tensor::copy_()
[2m[36m(pid=66052)[0m     @     0x7f714bf8a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66052)[0m     @     0x55ba52f51fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66052)[0m     @     0x55ba52eacb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66052)[0m     @     0x55ba52f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=66052)[0m     @     0x55ba52f38a20 method_vectorcall
[2m[36m(pid=66052)[0m     @     0x55ba52eacbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66052)[0m     @     0x55ba52f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=66052)[0m     @     0x55ba52f38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66052)[0m     @     0x55ba52ead689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66034)[0m     @     0x7f5f325204f5 at::Tensor::copy_()
[2m[36m(pid=66034)[0m     @     0x7f5f385cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66034)[0m     @     0x55d48417cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66034)[0m     @     0x55d4840d7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66034)[0m     @     0x55d484162baf _PyEval_EvalCodeWithName
[2m[36m(pid=66034)[0m     @     0x55d484163a20 method_vectorcall
[2m[36m(pid=66034)[0m     @     0x55d4840d7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66034)[0m     @     0x55d484162baf _PyEval_EvalCodeWithName
[2m[36m(pid=66034)[0m     @     0x55d484163643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66034)[0m     @     0x55d4840d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66034)[0m     @     0x55d484162baf _PyEval_EvalCodeWithName
[2m[36m(pid=66034)[0m     @     0x55d484163643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66034)[0m     @     0x55d4840d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66034)[0m     @     0x55d484162baf _PyEval_EvalCodeWithName
[2m[36m(pid=66034)[0m     @     0x55d484163643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66034)[0m     @     0x55d4840d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66034)[0m     @     0x55d484162baf _PyEval_EvalCodeWithName
[2m[36m(pid=66106)[0m     @     0x7f0f75e8f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66106)[0m     @     0x55bc18b0cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66106)[0m     @     0x55bc18a67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66106)[0m     @     0x55bc18af2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66106)[0m     @     0x55bc18af3a20 method_vectorcall
[2m[36m(pid=66106)[0m     @     0x55bc18a67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66106)[0m     @     0x55bc18af2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66106)[0m     @     0x55bc18af3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66106)[0m     @     0x55bc18a68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66106)[0m     @     0x55bc18af2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66106)[0m     @     0x55bc18af3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66106)[0m     @     0x55bc18a68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66106)[0m     @     0x55bc18af2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66106)[0m     @     0x55bc18af3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66106)[0m     @     0x55bc18a68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66106)[0m     @     0x55bc18af2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66106)[0m     @     0x55bc18af3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66106)[0m     @     0x55bc18a68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66127)[0m     @     0x7f32ab0b78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66127)[0m     @     0x7f32a8be44f5 at::Tensor::copy_()
[2m[36m(pid=66127)[0m     @     0x7f32aec8f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66039)[0m     @     0x7f71f70ce4f5 at::Tensor::copy_()
[2m[36m(pid=66039)[0m     @     0x7f71fd17979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66039)[0m     @     0x55b350e4afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66039)[0m     @     0x55b350da5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66039)[0m     @     0x55b350e30baf _PyEval_EvalCodeWithName
[2m[36m(pid=66039)[0m     @     0x55b350e31a20 method_vectorcall
[2m[36m(pid=66039)[0m     @     0x55b350da5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66039)[0m     @     0x55b350e30baf _PyEval_EvalCodeWithName
[2m[36m(pid=66039)[0m     @     0x55b350e31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66039)[0m     @     0x55b350da6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66039)[0m     @     0x55b350e30baf _PyEval_EvalCodeWithName
[2m[36m(pid=66039)[0m     @     0x55b350e31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66039)[0m     @     0x55b350da6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66039)[0m     @     0x55b350e30baf _PyEval_EvalCodeWithName
[2m[36m(pid=66039)[0m     @     0x55b350e31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66039)[0m     @     0x55b350da6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66039)[0m     @     0x55b350e30baf _PyEval_EvalCodeWithName
[2m[36m(pid=66039)[0m     @     0x55b350e31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66039)[0m     @     0x55b350da6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66136)[0m     @     0x7f117c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66136)[0m     @     0x7f117a37c4f5 at::Tensor::copy_()
[2m[36m(pid=66136)[0m     @     0x7f118042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66136)[0m     @     0x564f39259fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66136)[0m     @     0x564f391b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66136)[0m     @     0x564f3923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66136)[0m     @     0x564f39240a20 method_vectorcall
[2m[36m(pid=66136)[0m     @     0x564f391b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66136)[0m     @     0x564f3923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66136)[0m     @     0x564f39240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66136)[0m     @     0x564f391b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66136)[0m     @     0x564f3923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66136)[0m     @     0x564f39240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66136)[0m     @     0x564f391b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66136)[0m     @     0x564f3923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66136)[0m     @     0x564f39240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66136)[0m     @     0x564f391b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66136)[0m     @     0x564f3923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66136)[0m     @     0x564f39240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66136)[0m     @     0x564f391b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66022)[0m     @     0x55a107bf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66022)[0m     @     0x55a107bf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66022)[0m     @     0x55a107b68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66022)[0m     @     0x55a107bf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66022)[0m     @     0x55a107bf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66022)[0m     @     0x55a107b68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66022)[0m     @     0x55a107bf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=66022)[0m     @     0x55a107bf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66022)[0m     @     0x55a107b68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66148)[0m     @     0x7ef92f4724f5 at::Tensor::copy_()
[2m[36m(pid=66148)[0m     @     0x7ef9319458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66148)[0m     @     0x7ef92f4724f5 at::Tensor::copy_()
[2m[36m(pid=66148)[0m     @     0x7ef93551d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66148)[0m     @     0x55ff72498fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66148)[0m     @     0x55ff723f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66148)[0m     @     0x55ff7247ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66148)[0m     @     0x55ff7247fa20 method_vectorcall
[2m[36m(pid=66148)[0m     @     0x55ff723f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66148)[0m     @     0x55ff7247ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66148)[0m     @     0x55ff7247f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66148)[0m     @     0x55ff723f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66148)[0m     @     0x55ff7247ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66148)[0m     @     0x55ff7247f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66148)[0m     @     0x55ff723f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66148)[0m     @     0x55ff7247ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66148)[0m     @     0x55ff7247f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66148)[0m     @     0x55ff723f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66148)[0m     @     0x55ff7247ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66148)[0m     @     0x55ff7247f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66148)[0m     @     0x55ff723f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66026)[0m     @     0x55ae23cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66026)[0m     @     0x55ae23ceda20 method_vectorcall
[2m[36m(pid=66026)[0m     @     0x55ae23c61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66026)[0m     @     0x55ae23cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66026)[0m     @     0x55ae23ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66026)[0m     @     0x55ae23c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66026)[0m     @     0x55ae23cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66026)[0m     @     0x55ae23ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66026)[0m     @     0x55ae23c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66026)[0m     @     0x55ae23cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66026)[0m     @     0x55ae23ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66026)[0m     @     0x55ae23c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66026)[0m     @     0x55ae23cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66026)[0m     @     0x55ae23ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66026)[0m     @     0x55ae23c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66031)[0m     @     0x7f3f7beed4f5 at::Tensor::copy_()
[2m[36m(pid=66031)[0m     @     0x7f3f7e3c08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66031)[0m     @     0x7f3f7beed4f5 at::Tensor::copy_()
[2m[36m(pid=66031)[0m     @     0x7f3f81f9879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66031)[0m     @     0x5651abbe2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66031)[0m     @     0x5651abb3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66031)[0m     @     0x5651abbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66031)[0m     @     0x5651abbc9a20 method_vectorcall
[2m[36m(pid=66031)[0m     @     0x5651abb3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66031)[0m     @     0x5651abbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66031)[0m     @     0x5651abbc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66031)[0m     @     0x5651abb3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66031)[0m     @     0x5651abbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66031)[0m     @     0x5651abbc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66031)[0m     @     0x5651abb3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66031)[0m     @     0x5651abbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66031)[0m     @     0x5651abbc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66031)[0m     @     0x5651abb3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66031)[0m     @     0x5651abbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66031)[0m     @     0x5651abbc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66031)[0m     @     0x5651abb3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66046)[0m     @     0x7f3f4ad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66046)[0m     @     0x7f3f488354f5 at::Tensor::copy_()
[2m[36m(pid=66046)[0m     @     0x7f3f4e8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66046)[0m     @     0x559e105f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66046)[0m     @     0x559e10551b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66046)[0m     @     0x559e105dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66046)[0m     @     0x559e105dda20 method_vectorcall
[2m[36m(pid=66046)[0m     @     0x559e10551bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66046)[0m     @     0x559e105dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66046)[0m     @     0x559e105dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66046)[0m     @     0x559e10552689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66046)[0m     @     0x559e105dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66046)[0m     @     0x559e105dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66046)[0m     @     0x559e10552689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66046)[0m     @     0x559e105dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66046)[0m     @     0x559e105dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66046)[0m     @     0x559e10552689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66046)[0m     @     0x559e105dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66046)[0m     @     0x559e105dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66046)[0m     @     0x559e10552689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66033)[0m     @     0x7f31e6ecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66033)[0m     @     0x7f31e49f84f5 at::Tensor::copy_()
[2m[36m(pid=66033)[0m     @     0x7f31eaaa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66033)[0m     @     0x55f524ccbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66033)[0m     @     0x55f524c26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66033)[0m     @     0x55f524cb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66033)[0m     @     0x55f524cb2a20 method_vectorcall
[2m[36m(pid=66033)[0m     @     0x55f524c26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66033)[0m     @     0x55f524cb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66033)[0m     @     0x55f524cb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66033)[0m     @     0x55f524c27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66033)[0m     @     0x55f524cb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66033)[0m     @     0x55f524cb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66033)[0m     @     0x55f524c27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66033)[0m     @     0x55f524cb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66033)[0m     @     0x55f524cb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66033)[0m     @     0x55f524c27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66033)[0m     @     0x55f524cb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=66033)[0m     @     0x55f524cb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66033)[0m     @     0x55f524c27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66119)[0m     @     0x7f230855e5a4 at::native::copy_()
[2m[36m(pid=66119)[0m     @     0x7f2308c494f5 at::Tensor::copy_()
[2m[36m(pid=66119)[0m     @     0x7f230b11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66091)[0m     @     0x7ed9ce37c4f5 at::Tensor::copy_()
[2m[36m(pid=66091)[0m     @     0x7ed9d442779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66091)[0m     @     0x56448fab4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66091)[0m     @     0x56448fa0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66091)[0m     @     0x56448fa9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66091)[0m     @     0x56448fa9ba20 method_vectorcall
[2m[36m(pid=66091)[0m     @     0x56448fa0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66091)[0m     @     0x56448fa9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66091)[0m     @     0x56448fa9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66091)[0m     @     0x56448fa10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66091)[0m     @     0x56448fa9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66091)[0m     @     0x56448fa9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66091)[0m     @     0x56448fa10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66091)[0m     @     0x56448fa9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66091)[0m     @     0x56448fa9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66091)[0m     @     0x56448fa10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66091)[0m     @     0x56448fa9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=66091)[0m     @     0x56448fa9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66091)[0m     @     0x56448fa10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66092)[0m     @     0x7fba2dbe05a4 at::native::copy_()
[2m[36m(pid=66092)[0m     @     0x7fba2e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=66092)[0m     @     0x7fba3079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66092)[0m     @     0x7fba2e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=66041)[0m     @     0x55d2330d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=66041)[0m     @     0x55d2330d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66041)[0m     @     0x55d233049689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x7f10c6910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66080)[0m     @     0x7f10c690e388 at::native::copy_impl()
[2m[36m(pid=66089)[0m     @     0x7f88d7e33a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66089)[0m     @     0x7f88d7e31388 at::native::copy_impl()
[2m[36m(pid=66089)[0m     @     0x7f88d7e335a4 at::native::copy_()
[2m[36m(pid=66135)[0m     @     0x7fc2c599879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66135)[0m     @     0x5573f4e25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66135)[0m     @     0x5573f4d80b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66135)[0m     @     0x5573f4e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66135)[0m     @     0x5573f4e0ca20 method_vectorcall
[2m[36m(pid=66135)[0m     @     0x5573f4d80bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66135)[0m     @     0x5573f4e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66135)[0m     @     0x5573f4e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66135)[0m     @     0x5573f4d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66135)[0m     @     0x5573f4e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66135)[0m     @     0x5573f4e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66135)[0m     @     0x5573f4d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66135)[0m     @     0x5573f4e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66135)[0m     @     0x5573f4e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66135)[0m     @     0x5573f4d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66135)[0m     @     0x5573f4e0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66135)[0m     @     0x5573f4e0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66135)[0m     @     0x5573f4d81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66032)[0m     @     0x7ed3e7eed4f5 at::Tensor::copy_()
[2m[36m(pid=66032)[0m     @     0x7ed3edf9879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66032)[0m     @     0x56060e8d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66032)[0m     @     0x56060e831b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66032)[0m     @     0x56060e8bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66032)[0m     @     0x56060e8bda20 method_vectorcall
[2m[36m(pid=66032)[0m     @     0x56060e831bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66032)[0m     @     0x56060e8bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66032)[0m     @     0x56060e8bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66032)[0m     @     0x56060e832689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66032)[0m     @     0x56060e8bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66032)[0m     @     0x56060e8bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66032)[0m     @     0x56060e832689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66032)[0m     @     0x56060e8bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66032)[0m     @     0x56060e8bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66032)[0m     @     0x56060e832689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66032)[0m     @     0x56060e8bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66032)[0m     @     0x56060e8bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66032)[0m     @     0x56060e832689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66104)[0m     @     0x55e6250cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66025)[0m     @     0x7f5d9af3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66025)[0m     @     0x5594e3393fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66025)[0m     @     0x5594e32eeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66025)[0m     @     0x5594e3379baf _PyEval_EvalCodeWithName
[2m[36m(pid=66025)[0m     @     0x5594e337aa20 method_vectorcall
[2m[36m(pid=66025)[0m     @     0x5594e32eebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66025)[0m     @     0x5594e3379baf _PyEval_EvalCodeWithName
[2m[36m(pid=66025)[0m     @     0x5594e337a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66025)[0m     @     0x5594e32ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66025)[0m     @     0x5594e3379baf _PyEval_EvalCodeWithName
[2m[36m(pid=66025)[0m     @     0x5594e337a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66025)[0m     @     0x5594e32ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66025)[0m     @     0x5594e3379baf _PyEval_EvalCodeWithName
[2m[36m(pid=66025)[0m     @     0x5594e337a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66025)[0m     @     0x5594e32ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66025)[0m     @     0x5594e3379baf _PyEval_EvalCodeWithName
[2m[36m(pid=66025)[0m     @     0x5594e337a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66025)[0m     @     0x5594e32ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x7ef425cfb4f5 at::Tensor::copy_()
[2m[36m(pid=66054)[0m     @     0x7ef42bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66054)[0m     @     0x560196c56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66054)[0m     @     0x560196bb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x560196c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66054)[0m     @     0x560196c3da20 method_vectorcall
[2m[36m(pid=66054)[0m     @     0x560196bb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x560196c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66054)[0m     @     0x560196c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66054)[0m     @     0x560196bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x560196c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66054)[0m     @     0x560196c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66054)[0m     @     0x560196bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x560196c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66054)[0m     @     0x560196c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66054)[0m     @     0x560196bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66054)[0m     @     0x560196c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66054)[0m     @     0x560196c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66054)[0m     @     0x560196bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66088)[0m     @     0x7fb70aa314f5 at::Tensor::copy_()
[2m[36m(pid=66088)[0m     @     0x7fb710adc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66088)[0m     @     0x556b3db71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66088)[0m     @     0x556b3daccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66088)[0m     @     0x556b3db57baf _PyEval_EvalCodeWithName
[2m[36m(pid=66088)[0m     @     0x556b3db58a20 method_vectorcall
[2m[36m(pid=66088)[0m     @     0x556b3daccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66088)[0m     @     0x556b3db57baf _PyEval_EvalCodeWithName
[2m[36m(pid=66088)[0m     @     0x556b3db58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66088)[0m     @     0x556b3dacd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66088)[0m     @     0x556b3db57baf _PyEval_EvalCodeWithName
[2m[36m(pid=66088)[0m     @     0x556b3db58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66088)[0m     @     0x556b3dacd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66088)[0m     @     0x556b3db57baf _PyEval_EvalCodeWithName
[2m[36m(pid=66088)[0m     @     0x556b3db58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66088)[0m     @     0x556b3dacd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66088)[0m     @     0x556b3db57baf _PyEval_EvalCodeWithName
[2m[36m(pid=66088)[0m     @     0x556b3db58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66088)[0m     @     0x556b3dacd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x7f4d7f223d91 at::TensorIterator::for_each()
[2m[36m(pid=66086)[0m     @     0x7f4d7fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66097)[0m     @     0x7fab4ac8f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66097)[0m     @     0x558b7edcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66097)[0m     @     0x558b7ed25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66097)[0m     @     0x558b7edb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66097)[0m     @     0x558b7edb1a20 method_vectorcall
[2m[36m(pid=66097)[0m     @     0x558b7ed25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66097)[0m     @     0x558b7edb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66097)[0m     @     0x558b7edb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66097)[0m     @     0x558b7ed26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66097)[0m     @     0x558b7edb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66097)[0m     @     0x558b7edb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66097)[0m     @     0x558b7ed26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66097)[0m     @     0x558b7edb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66097)[0m     @     0x558b7edb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66097)[0m     @     0x558b7ed26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66097)[0m     @     0x558b7edb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=66097)[0m     @     0x558b7edb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66097)[0m     @     0x558b7ed26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66050)[0m     @     0x7f569416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66050)[0m     @     0x55d43f359fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66050)[0m     @     0x55d43f2b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66050)[0m     @     0x55d43f33fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66050)[0m     @     0x55d43f340a20 method_vectorcall
[2m[36m(pid=66050)[0m     @     0x55d43f2b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66050)[0m     @     0x55d43f33fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66050)[0m     @     0x55d43f340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66050)[0m     @     0x55d43f2b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66050)[0m     @     0x55d43f33fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66050)[0m     @     0x55d43f340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66050)[0m     @     0x55d43f2b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66050)[0m     @     0x55d43f33fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66050)[0m     @     0x55d43f340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66050)[0m     @     0x55d43f2b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66050)[0m     @     0x55d43f33fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66050)[0m     @     0x55d43f340643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66050)[0m     @     0x55d43f2b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66100)[0m     @     0x7eebd336079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66100)[0m     @     0x557912202fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66100)[0m     @     0x55791215db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66100)[0m     @     0x5579121e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66100)[0m     @     0x5579121e9a20 method_vectorcall
[2m[36m(pid=66100)[0m     @     0x55791215dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66100)[0m     @     0x5579121e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66100)[0m     @     0x5579121e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66100)[0m     @     0x55791215e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66100)[0m     @     0x5579121e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66100)[0m     @     0x5579121e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66100)[0m     @     0x55791215e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66100)[0m     @     0x5579121e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66100)[0m     @     0x5579121e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66100)[0m     @     0x55791215e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66100)[0m     @     0x5579121e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=66100)[0m     @     0x5579121e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66100)[0m     @     0x55791215e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66037)[0m     @     0x7fb8d67ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=66037)[0m     @     0x7fb8d67efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66037)[0m     @     0x7fb8d5c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66037)[0m     @     0x7fb8d5c8f388 at::native::copy_impl()
[2m[36m(pid=66053)[0m     @     0x55aa1ce07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66053)[0m     @     0x55aa1ce91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66053)[0m     @     0x55aa1ce92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66053)[0m     @     0x55aa1ce07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66053)[0m     @     0x55aa1ce91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66053)[0m     @     0x55aa1ce92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66053)[0m     @     0x55aa1ce07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66053)[0m     @     0x55aa1ce91baf _PyEval_EvalCodeWithName
[2m[36m(pid=66053)[0m     @     0x55aa1ce92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66053)[0m     @     0x55aa1ce07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66138)[0m     @     0x7eeb179be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66138)[0m     @     0x56220599ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66138)[0m     @     0x5622058fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66138)[0m     @     0x562205985baf _PyEval_EvalCodeWithName
[2m[36m(pid=66138)[0m     @     0x562205986a20 method_vectorcall
[2m[36m(pid=66138)[0m     @     0x5622058fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66138)[0m     @     0x562205985baf _PyEval_EvalCodeWithName
[2m[36m(pid=66138)[0m     @     0x562205986643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66138)[0m     @     0x5622058fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66138)[0m     @     0x562205985baf _PyEval_EvalCodeWithName
[2m[36m(pid=66138)[0m     @     0x562205986643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66138)[0m     @     0x5622058fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66138)[0m     @     0x562205985baf _PyEval_EvalCodeWithName
[2m[36m(pid=66138)[0m     @     0x562205986643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66138)[0m     @     0x5622058fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66138)[0m     @     0x562205985baf _PyEval_EvalCodeWithName
[2m[36m(pid=66138)[0m     @     0x562205986643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66138)[0m     @     0x5622058fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66093)[0m     @     0x7f4b7f3124f5 at::Tensor::copy_()
[2m[36m(pid=66093)[0m     @     0x7f4b853bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66093)[0m     @     0x5636265e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66093)[0m     @     0x56362653cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66093)[0m     @     0x5636265c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66093)[0m     @     0x5636265c8a20 method_vectorcall
[2m[36m(pid=66093)[0m     @     0x56362653cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66093)[0m     @     0x5636265c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66093)[0m     @     0x5636265c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66093)[0m     @     0x56362653d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66093)[0m     @     0x5636265c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66093)[0m     @     0x5636265c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66093)[0m     @     0x56362653d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66093)[0m     @     0x5636265c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66093)[0m     @     0x5636265c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66093)[0m     @     0x56362653d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66093)[0m     @     0x5636265c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66093)[0m     @     0x5636265c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66093)[0m     @     0x56362653d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66043)[0m     @     0x7fae7a9714f5 at::Tensor::copy_()
[2m[36m(pid=66043)[0m     @     0x7fae80a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66043)[0m     @     0x55befcd72fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66043)[0m     @     0x55befcccdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66043)[0m     @     0x55befcd58baf _PyEval_EvalCodeWithName
[2m[36m(pid=66043)[0m     @     0x55befcd59a20 method_vectorcall
[2m[36m(pid=66043)[0m     @     0x55befcccdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66043)[0m     @     0x55befcd58baf _PyEval_EvalCodeWithName
[2m[36m(pid=66043)[0m     @     0x55befcd59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66043)[0m     @     0x55befccce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66043)[0m     @     0x55befcd58baf _PyEval_EvalCodeWithName
[2m[36m(pid=66043)[0m     @     0x55befcd59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66043)[0m     @     0x55befccce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66043)[0m     @     0x55befcd58baf _PyEval_EvalCodeWithName
[2m[36m(pid=66043)[0m     @     0x55befcd59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66043)[0m     @     0x55befccce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66043)[0m     @     0x55befcd58baf _PyEval_EvalCodeWithName
[2m[36m(pid=66043)[0m     @     0x55befcd59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66043)[0m     @     0x55befccce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66082)[0m     @     0x7f550adea4f5 at::Tensor::copy_()
[2m[36m(pid=66082)[0m     @     0x7f550d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66019)[0m     @     0x7fcca71b34f5 at::Tensor::copy_()
[2m[36m(pid=66019)[0m     @     0x7fccad25e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66019)[0m     @     0x55c1833a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66019)[0m     @     0x55c183304b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66019)[0m     @     0x55c18338fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66019)[0m     @     0x55c183390a20 method_vectorcall
[2m[36m(pid=66019)[0m     @     0x55c183304bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66019)[0m     @     0x55c18338fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66019)[0m     @     0x55c183390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66019)[0m     @     0x55c183305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66019)[0m     @     0x55c18338fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66019)[0m     @     0x55c183390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66019)[0m     @     0x55c183305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66019)[0m     @     0x55c18338fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66019)[0m     @     0x55c183390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66019)[0m     @     0x55c183305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66019)[0m     @     0x55c18338fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66019)[0m     @     0x55c183390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66019)[0m     @     0x55c183305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66101)[0m     @     0x557373e81baf _PyEval_EvalCodeWithName
[2m[36m(pid=66101)[0m     @     0x557373e82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66101)[0m     @     0x557373df7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x7f8986ad44f5 at::Tensor::copy_()
[2m[36m(pid=66040)[0m     @     0x7f8988fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66085)[0m     @     0x7f51897604f5 at::Tensor::copy_()
[2m[36m(pid=66085)[0m     @     0x7f518f80b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66085)[0m     @     0x562a1b38afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66085)[0m     @     0x562a1b2e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66085)[0m     @     0x562a1b370baf _PyEval_EvalCodeWithName
[2m[36m(pid=66085)[0m     @     0x562a1b371a20 method_vectorcall
[2m[36m(pid=66085)[0m     @     0x562a1b2e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66085)[0m     @     0x562a1b370baf _PyEval_EvalCodeWithName
[2m[36m(pid=66085)[0m     @     0x562a1b371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66085)[0m     @     0x562a1b2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66085)[0m     @     0x562a1b370baf _PyEval_EvalCodeWithName
[2m[36m(pid=66085)[0m     @     0x562a1b371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66085)[0m     @     0x562a1b2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66085)[0m     @     0x562a1b370baf _PyEval_EvalCodeWithName
[2m[36m(pid=66085)[0m     @     0x562a1b371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66085)[0m     @     0x562a1b2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66085)[0m     @     0x562a1b370baf _PyEval_EvalCodeWithName
[2m[36m(pid=66085)[0m     @     0x562a1b371643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66085)[0m     @     0x562a1b2e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66052)[0m     @     0x55ba52f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=66052)[0m     @     0x55ba52f38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66052)[0m     @     0x55ba52ead689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66052)[0m     @     0x55ba52f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=66052)[0m     @     0x55ba52f38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66052)[0m     @     0x55ba52ead689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66052)[0m     @     0x55ba52f37baf _PyEval_EvalCodeWithName
[2m[36m(pid=66052)[0m     @     0x55ba52f38643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66052)[0m     @     0x55ba52ead689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66034)[0m     @     0x55d484163643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66034)[0m     @     0x55d4840d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66029)[0m     @     0x7ee4dcee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66029)[0m     @     0x7ee4dcede388 at::native::copy_impl()
[2m[36m(pid=66029)[0m     @     0x7ee4dcee05a4 at::native::copy_()
[2m[36m(pid=66127)[0m     @     0x55787f907fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66127)[0m     @     0x55787f862b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66127)[0m     @     0x55787f8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66127)[0m     @     0x55787f8eea20 method_vectorcall
[2m[36m(pid=66127)[0m     @     0x55787f862bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66127)[0m     @     0x55787f8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66127)[0m     @     0x55787f8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66127)[0m     @     0x55787f863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66127)[0m     @     0x55787f8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66127)[0m     @     0x55787f8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66127)[0m     @     0x55787f863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66127)[0m     @     0x55787f8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66127)[0m     @     0x55787f8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66127)[0m     @     0x55787f863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66127)[0m     @     0x55787f8edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66127)[0m     @     0x55787f8ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66127)[0m     @     0x55787f863689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66119)[0m     @     0x7f2308c494f5 at::Tensor::copy_()
[2m[36m(pid=66119)[0m     @     0x7f230ecf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66119)[0m     @     0x560160b18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66119)[0m     @     0x560160a73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66119)[0m     @     0x560160afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66119)[0m     @     0x560160affa20 method_vectorcall
[2m[36m(pid=66119)[0m     @     0x560160a73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66119)[0m     @     0x560160afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66119)[0m     @     0x560160aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66119)[0m     @     0x560160a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66119)[0m     @     0x560160afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66119)[0m     @     0x560160aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66119)[0m     @     0x560160a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66119)[0m     @     0x560160afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66119)[0m     @     0x560160aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66119)[0m     @     0x560160a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66119)[0m     @     0x560160afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=66119)[0m     @     0x560160aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66119)[0m     @     0x560160a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66092)[0m     @     0x7fba3437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66092)[0m     @     0x555cc04d1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66092)[0m     @     0x555cc042cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66092)[0m     @     0x555cc04b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66092)[0m     @     0x555cc04b8a20 method_vectorcall
[2m[36m(pid=66092)[0m     @     0x555cc042cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66092)[0m     @     0x555cc04b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66092)[0m     @     0x555cc04b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66092)[0m     @     0x555cc042d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66092)[0m     @     0x555cc04b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66092)[0m     @     0x555cc04b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66092)[0m     @     0x555cc042d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66092)[0m     @     0x555cc04b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66092)[0m     @     0x555cc04b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66092)[0m     @     0x555cc042d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66092)[0m     @     0x555cc04b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=66092)[0m     @     0x555cc04b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66092)[0m     @     0x555cc042d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x7f10c69105a4 at::native::copy_()
[2m[36m(pid=66080)[0m     @     0x7f10c6ffb4f5 at::Tensor::copy_()
[2m[36m(pid=66080)[0m     @     0x7f10c94ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66089)[0m     @     0x7f88d851e4f5 at::Tensor::copy_()
[2m[36m(pid=66089)[0m     @     0x7f88da9f18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66089)[0m     @     0x7f88d851e4f5 at::Tensor::copy_()
[2m[36m(pid=66089)[0m     @     0x7f88de5c979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66089)[0m     @     0x55f023757fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66089)[0m     @     0x55f0236b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66089)[0m     @     0x55f02373dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66089)[0m     @     0x55f02373ea20 method_vectorcall
[2m[36m(pid=66089)[0m     @     0x55f0236b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66089)[0m     @     0x55f02373dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66089)[0m     @     0x55f02373e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66089)[0m     @     0x55f0236b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66089)[0m     @     0x55f02373dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66089)[0m     @     0x55f02373e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66089)[0m     @     0x55f0236b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66089)[0m     @     0x55f02373dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66089)[0m     @     0x55f02373e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66089)[0m     @     0x55f0236b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66089)[0m     @     0x55f02373dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66089)[0m     @     0x55f02373e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66089)[0m     @     0x55f0236b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x7f4d7fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=66037)[0m     @     0x7fb8d5c915a4 at::native::copy_()
[2m[36m(pid=66037)[0m     @     0x7fb8d637c4f5 at::Tensor::copy_()
[2m[36m(pid=66082)[0m     @     0x7f550adea4f5 at::Tensor::copy_()
[2m[36m(pid=66082)[0m     @     0x7f5510e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66082)[0m     @     0x5556d975efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66082)[0m     @     0x5556d96b9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66082)[0m     @     0x5556d9744baf _PyEval_EvalCodeWithName
[2m[36m(pid=66082)[0m     @     0x5556d9745a20 method_vectorcall
[2m[36m(pid=66082)[0m     @     0x5556d96b9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66082)[0m     @     0x5556d9744baf _PyEval_EvalCodeWithName
[2m[36m(pid=66082)[0m     @     0x5556d9745643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66082)[0m     @     0x5556d96ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66082)[0m     @     0x5556d9744baf _PyEval_EvalCodeWithName
[2m[36m(pid=66082)[0m     @     0x5556d9745643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66082)[0m     @     0x5556d96ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66082)[0m     @     0x5556d9744baf _PyEval_EvalCodeWithName
[2m[36m(pid=66082)[0m     @     0x5556d9745643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66082)[0m     @     0x5556d96ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66082)[0m     @     0x5556d9744baf _PyEval_EvalCodeWithName
[2m[36m(pid=66082)[0m     @     0x5556d9745643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66082)[0m     @     0x5556d96ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66029)[0m     @     0x7ee4dd5cb4f5 at::Tensor::copy_()
[2m[36m(pid=66029)[0m     @     0x7ee4dfa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66080)[0m     @     0x7f10c6ffb4f5 at::Tensor::copy_()
[2m[36m(pid=66080)[0m     @     0x7f10cd0a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66080)[0m     @     0x55f2e2857fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66080)[0m     @     0x55f2e27b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x55f2e283dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66080)[0m     @     0x55f2e283ea20 method_vectorcall
[2m[36m(pid=66080)[0m     @     0x55f2e27b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x55f2e283dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66080)[0m     @     0x55f2e283e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66080)[0m     @     0x55f2e27b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x55f2e283dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66080)[0m     @     0x55f2e283e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66080)[0m     @     0x55f2e27b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x55f2e283dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66080)[0m     @     0x55f2e283e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66080)[0m     @     0x55f2e27b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66080)[0m     @     0x55f2e283dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66080)[0m     @     0x55f2e283e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66080)[0m     @     0x55f2e27b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x7f4d7efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=66086)[0m     @     0x7f4d7efc9388 at::native::copy_impl()
[2m[36m(pid=66037)[0m     @     0x7fb8d884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66037)[0m     @     0x7fb8d637c4f5 at::Tensor::copy_()
[2m[36m(pid=66037)[0m     @     0x7fb8dc42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66037)[0m     @     0x5571b7763fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66037)[0m     @     0x5571b76beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66037)[0m     @     0x5571b7749baf _PyEval_EvalCodeWithName
[2m[36m(pid=66037)[0m     @     0x5571b774aa20 method_vectorcall
[2m[36m(pid=66037)[0m     @     0x5571b76bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66037)[0m     @     0x5571b7749baf _PyEval_EvalCodeWithName
[2m[36m(pid=66037)[0m     @     0x5571b774a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66037)[0m     @     0x5571b76bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66037)[0m     @     0x5571b7749baf _PyEval_EvalCodeWithName
[2m[36m(pid=66037)[0m     @     0x5571b774a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66037)[0m     @     0x5571b76bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66037)[0m     @     0x5571b7749baf _PyEval_EvalCodeWithName
[2m[36m(pid=66037)[0m     @     0x5571b774a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66037)[0m     @     0x5571b76bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66037)[0m     @     0x5571b7749baf _PyEval_EvalCodeWithName
[2m[36m(pid=66037)[0m     @     0x5571b774a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66037)[0m     @     0x5571b76bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x7f8986ad44f5 at::Tensor::copy_()
[2m[36m(pid=66040)[0m     @     0x7f898cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66040)[0m     @     0x55f377617fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66040)[0m     @     0x55f377572b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x55f3775fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66040)[0m     @     0x55f3775fea20 method_vectorcall
[2m[36m(pid=66040)[0m     @     0x55f377572bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x55f3775fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66040)[0m     @     0x55f3775fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66040)[0m     @     0x55f377573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x55f3775fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66040)[0m     @     0x55f3775fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66040)[0m     @     0x55f377573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x55f3775fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66040)[0m     @     0x55f3775fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66040)[0m     @     0x55f377573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66040)[0m     @     0x55f3775fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=66040)[0m     @     0x55f3775fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66040)[0m     @     0x55f377573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66029)[0m     @     0x7ee4dd5cb4f5 at::Tensor::copy_()
[2m[36m(pid=66029)[0m     @     0x7ee4e367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66029)[0m     @     0x555560a4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66029)[0m     @     0x5555609a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66029)[0m     @     0x555560a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=66029)[0m     @     0x555560a35a20 method_vectorcall
[2m[36m(pid=66029)[0m     @     0x5555609a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66029)[0m     @     0x555560a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=66029)[0m     @     0x555560a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66029)[0m     @     0x5555609aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x7f4d7efcb5a4 at::native::copy_()
[2m[36m(pid=66029)[0m     @     0x555560a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=66029)[0m     @     0x555560a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66029)[0m     @     0x5555609aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66029)[0m     @     0x555560a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=66029)[0m     @     0x555560a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66029)[0m     @     0x5555609aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66029)[0m     @     0x555560a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=66029)[0m     @     0x555560a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66029)[0m     @     0x5555609aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x7f4d7f6b64f5 at::Tensor::copy_()
[2m[36m(pid=66086)[0m     @     0x7f4d81b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=66086)[0m     @     0x7f4d7f6b64f5 at::Tensor::copy_()
[2m[36m(pid=66086)[0m     @     0x7f4d8576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=66086)[0m     @     0x557f0f09efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=66086)[0m     @     0x557f0eff9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x557f0f084baf _PyEval_EvalCodeWithName
[2m[36m(pid=66086)[0m     @     0x557f0f085a20 method_vectorcall
[2m[36m(pid=66086)[0m     @     0x557f0eff9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x557f0f084baf _PyEval_EvalCodeWithName
[2m[36m(pid=66086)[0m     @     0x557f0f085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66086)[0m     @     0x557f0effa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x557f0f084baf _PyEval_EvalCodeWithName
[2m[36m(pid=66086)[0m     @     0x557f0f085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66086)[0m     @     0x557f0effa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x557f0f084baf _PyEval_EvalCodeWithName
[2m[36m(pid=66086)[0m     @     0x557f0f085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66086)[0m     @     0x557f0effa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=66086)[0m     @     0x557f0f084baf _PyEval_EvalCodeWithName
[2m[36m(pid=66086)[0m     @     0x557f0f085643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=66086)[0m     @     0x557f0effa689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:51:27,605	ERROR trial_runner.py:567 -- Trial PPO_jss_env_d695b_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=66156, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:51:27,606	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:51:27,607	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:51:27,607	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:51:27,607	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:51:27,607	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:51:27,607	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
== Status ==
Memory usage on this node: 23.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_d695b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_d695b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_d695b_00000_0_2020-11-05_10-51-20/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:51:27,618	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.

2020-11-05 10:51:27,619	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:51:27,619	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
== Status ==
Memory usage on this node: 23.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_d695b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_d695b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_d695b_00000_0_2020-11-05_10-51-20/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_d695b_00000])
2020-11-05 10:51:27,629	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:51:27,630	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:51:27,630	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:51:27,630	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
