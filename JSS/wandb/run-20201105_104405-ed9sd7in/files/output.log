2020-11-05 10:44:09,619	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_d6abc_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=44367)[0m 2020-11-05 10:44:12,434	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=44367)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=44367)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=44367)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=44367)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=44367)[0m 
[2m[36m(pid=44367)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=44341)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44341)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44341)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44341)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44341)[0m *** SIGSEGV (@0x0) received by PID 44341 (TID 0x7fc22287e700) from PID 0; stack trace: ***
[2m[36m(pid=44341)[0m     @     0x7fc222457390 (unknown)
[2m[36m(pid=44341)[0m     @     0x7f932234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44372)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44372)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44372)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44372)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44372)[0m *** SIGSEGV (@0x0) received by PID 44372 (TID 0x7f20a31b4700) from PID 0; stack trace: ***
[2m[36m(pid=44372)[0m     @     0x7f20a2d8d390 (unknown)
[2m[36m(pid=44372)[0m     @     0x7ef1a2cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44332)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44332)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44332)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44332)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44332)[0m *** SIGSEGV (@0x0) received by PID 44332 (TID 0x7f4af2469700) from PID 0; stack trace: ***
[2m[36m(pid=44332)[0m     @     0x7f4af2042390 (unknown)
[2m[36m(pid=44363)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44363)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44363)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44363)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44363)[0m *** SIGSEGV (@0x0) received by PID 44363 (TID 0x7f7e63e2f700) from PID 0; stack trace: ***
[2m[36m(pid=44363)[0m     @     0x7f7e63a08390 (unknown)
[2m[36m(pid=44363)[0m     @     0x7f4f63751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44363)[0m     @     0x7f4f62e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44363)[0m     @     0x7f4f62e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44315)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44315)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44315)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44315)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44315)[0m *** SIGSEGV (@0x0) received by PID 44315 (TID 0x7f0ac67fc700) from PID 0; stack trace: ***
[2m[36m(pid=44315)[0m     @     0x7f0ac63d5390 (unknown)
[2m[36m(pid=44315)[0m     @     0x7edbc634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44361)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44361)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44361)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44361)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44361)[0m *** SIGSEGV (@0x0) received by PID 44361 (TID 0x7fd614ffe700) from PID 0; stack trace: ***
[2m[36m(pid=44361)[0m     @     0x7fd614bd7390 (unknown)
[2m[36m(pid=44362)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44362)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44362)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44362)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44362)[0m *** SIGSEGV (@0x0) received by PID 44362 (TID 0x7f558aa0f700) from PID 0; stack trace: ***
[2m[36m(pid=44362)[0m     @     0x7f558a5e8390 (unknown)
[2m[36m(pid=44362)[0m     @     0x7f268a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44362)[0m     @     0x7f2689c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44362)[0m     @     0x7f2689c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44329)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44329)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44329)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44329)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44329)[0m *** SIGSEGV (@0x0) received by PID 44329 (TID 0x7f1ef9091700) from PID 0; stack trace: ***
[2m[36m(pid=44329)[0m     @     0x7f1ef8c6a390 (unknown)
[2m[36m(pid=44329)[0m     @     0x7eeff8b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44329)[0m     @     0x7eeff82667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44343)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44343)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44343)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44343)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44343)[0m *** SIGSEGV (@0x0) received by PID 44343 (TID 0x7f7bd8b8f700) from PID 0; stack trace: ***
[2m[36m(pid=44343)[0m     @     0x7f7bd8768390 (unknown)
[2m[36m(pid=44343)[0m     @     0x7f4cd8563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44343)[0m     @     0x7f4cd7c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44343)[0m     @     0x7f4cd7c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44310)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44310)[0m *** SIGSEGV (@0x0) received by PID 44310 (TID 0x7f8464abf700) from PID 0; stack trace: ***
[2m[36m(pid=44310)[0m     @     0x7f8464698390 (unknown)
[2m[36m(pid=44310)[0m     @     0x7f5564339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44310)[0m     @     0x7f5563a647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44348)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44348)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44348)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44348)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44348)[0m *** SIGSEGV (@0x0) received by PID 44348 (TID 0x7fedb70b8700) from PID 0; stack trace: ***
[2m[36m(pid=44348)[0m     @     0x7fedb6c91390 (unknown)
[2m[36m(pid=44348)[0m     @     0x7fbeb6ad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44348)[0m     @     0x7fbeb61fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44346)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44346)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44346)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44346)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44346)[0m *** SIGSEGV (@0x0) received by PID 44346 (TID 0x7f11aab93700) from PID 0; stack trace: ***
[2m[36m(pid=44346)[0m     @     0x7f11aa76c390 (unknown)
[2m[36m(pid=44346)[0m     @     0x7ee2aa4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44321)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44321)[0m *** SIGSEGV (@0x0) received by PID 44321 (TID 0x7fa1bd08d700) from PID 0; stack trace: ***
[2m[36m(pid=44321)[0m     @     0x7fa1bcc66390 (unknown)
[2m[36m(pid=44321)[0m     @     0x7f72bca8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44321)[0m     @     0x7f72bc1b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44325)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44325)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44325)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44325)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44325)[0m *** SIGSEGV (@0x0) received by PID 44325 (TID 0x7f7d5be1f700) from PID 0; stack trace: ***
[2m[36m(pid=44325)[0m     @     0x7f7d5b9f8390 (unknown)
[2m[36m(pid=44325)[0m     @     0x7f4e5b8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44325)[0m     @     0x7f4e5b0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44325)[0m     @     0x7f4e5b00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44325)[0m     @     0x7f4e5b00cad3 at::TensorIterator::for_each()
[2m[36m(pid=44345)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44345)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44345)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44345)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44345)[0m *** SIGSEGV (@0x0) received by PID 44345 (TID 0x7f37305df700) from PID 0; stack trace: ***
[2m[36m(pid=44345)[0m     @     0x7f37301b8390 (unknown)
[2m[36m(pid=44345)[0m     @     0x7f08300cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44345)[0m     @     0x7f082f7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44349)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44349)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44349)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44349)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44349)[0m *** SIGSEGV (@0x0) received by PID 44349 (TID 0x7f9ac132b700) from PID 0; stack trace: ***
[2m[36m(pid=44349)[0m     @     0x7f9ac0f04390 (unknown)
[2m[36m(pid=44349)[0m     @     0x7f6bc0ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44349)[0m     @     0x7f6bc05cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44330)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44330)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44330)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44330)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44330)[0m *** SIGSEGV (@0x0) received by PID 44330 (TID 0x7fb596584700) from PID 0; stack trace: ***
[2m[36m(pid=44330)[0m     @     0x7fb59615d390 (unknown)
[2m[36m(pid=44330)[0m     @     0x7f8695e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44330)[0m     @     0x7f869554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44355)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44355)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44355)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44355)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44355)[0m *** SIGSEGV (@0x0) received by PID 44355 (TID 0x7f98e56dd700) from PID 0; stack trace: ***
[2m[36m(pid=44355)[0m     @     0x7f98e52b6390 (unknown)
[2m[36m(pid=44355)[0m     @     0x7f69e524af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44355)[0m     @     0x7f69e49757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44338)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44338)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44338)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44338)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44338)[0m *** SIGSEGV (@0x0) received by PID 44338 (TID 0x7f4b0c8be700) from PID 0; stack trace: ***
[2m[36m(pid=44338)[0m     @     0x7f4b0c497390 (unknown)
[2m[36m(pid=44338)[0m     @     0x7f1c0c3e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44339)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44339)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44339)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44339)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44339)[0m *** SIGSEGV (@0x0) received by PID 44339 (TID 0x7f34eb4fd700) from PID 0; stack trace: ***
[2m[36m(pid=44339)[0m     @     0x7f34eb0d6390 (unknown)
[2m[36m(pid=44339)[0m     @     0x7f05eb068f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44339)[0m     @     0x7f05ea7937db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44341)[0m     @     0x7f9321a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44341)[0m     @     0x7f9321a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44341)[0m     @     0x7f9321a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=44372)[0m     @     0x7ef1a24277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44372)[0m     @     0x7ef1a242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44372)[0m     @     0x7ef1a242aad3 at::TensorIterator::for_each()
[2m[36m(pid=44332)[0m     @     0x7f1bf1e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44332)[0m     @     0x7f1bf154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44332)[0m     @     0x7f1bf15528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44332)[0m     @     0x7f1bf1552ad3 at::TensorIterator::for_each()
[2m[36m(pid=44363)[0m     @     0x7f4f62e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=44363)[0m     @     0x7f4f62e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=44363)[0m     @     0x7f4f63762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44315)[0m     @     0x7edbc5a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44315)[0m     @     0x7edbc5a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44361)[0m     @     0x7fa714a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44361)[0m     @     0x7fa7141b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44361)[0m     @     0x7fa7141b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44362)[0m     @     0x7f2689c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=44362)[0m     @     0x7f2689c27d91 at::TensorIterator::for_each()
[2m[36m(pid=44362)[0m     @     0x7f268a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44362)[0m     @     0x7f268a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44329)[0m     @     0x7eeff82698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44329)[0m     @     0x7eeff8269ad3 at::TensorIterator::for_each()
[2m[36m(pid=44343)[0m     @     0x7f4cd7c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=44343)[0m     @     0x7f4cd7c91d91 at::TensorIterator::for_each()
[2m[36m(pid=44343)[0m     @     0x7f4cd8574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44310)[0m     @     0x7f5563a678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44310)[0m     @     0x7f5563a67ad3 at::TensorIterator::for_each()
[2m[36m(pid=44348)[0m     @     0x7fbeb61ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44348)[0m     @     0x7fbeb61ffad3 at::TensorIterator::for_each()
[2m[36m(pid=44346)[0m     @     0x7ee2a9c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44346)[0m     @     0x7ee2a9c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44321)[0m     @     0x7f72bc1b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44321)[0m     @     0x7f72bc1b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=44321)[0m     @     0x7f72bc1b9d91 at::TensorIterator::for_each()
[2m[36m(pid=44325)[0m     @     0x7f4e5b00cd91 at::TensorIterator::for_each()
[2m[36m(pid=44325)[0m     @     0x7f4e5b8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44325)[0m     @     0x7f4e5b912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44345)[0m     @     0x7f082f7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44345)[0m     @     0x7f082f7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=44349)[0m     @     0x7f6bc05d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44330)[0m     @     0x7f86955528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44330)[0m     @     0x7f8695552ad3 at::TensorIterator::for_each()
[2m[36m(pid=44355)[0m     @     0x7f69e49788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44355)[0m     @     0x7f69e4978ad3 at::TensorIterator::for_each()
[2m[36m(pid=44338)[0m     @     0x7f1c0bb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44338)[0m     @     0x7f1c0bb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44338)[0m     @     0x7f1c0bb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=44258)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44258)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44258)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44258)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44258)[0m *** SIGSEGV (@0x0) received by PID 44258 (TID 0x7fbe3009c700) from PID 0; stack trace: ***
[2m[36m(pid=44258)[0m     @     0x7fbe2fc75390 (unknown)
[2m[36m(pid=44366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44366)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44366)[0m *** SIGSEGV (@0x0) received by PID 44366 (TID 0x7fb737c55700) from PID 0; stack trace: ***
[2m[36m(pid=44247)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44247)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44247)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44247)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44247)[0m *** SIGSEGV (@0x0) received by PID 44247 (TID 0x7fa3ddfa6700) from PID 0; stack trace: ***
[2m[36m(pid=44238)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44238)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44238)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44238)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44238)[0m *** SIGSEGV (@0x0) received by PID 44238 (TID 0x7f45a34e6700) from PID 0; stack trace: ***
[2m[36m(pid=44339)[0m     @     0x7f05ea7968f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44339)[0m     @     0x7f05ea796ad3 at::TensorIterator::for_each()
[2m[36m(pid=44339)[0m     @     0x7f05ea796d91 at::TensorIterator::for_each()
[2m[36m(pid=44339)[0m     @     0x7f05eb079b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44339)[0m     @     0x7f05eb09cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44250)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44250)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44250)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44254)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44254)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44254)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44249)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44249)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44249)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44242)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44242)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44242)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44331)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44331)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44331)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44260)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44260)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44260)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44314)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44314)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44314)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44322)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44322)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44322)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44322)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44322)[0m *** SIGSEGV (@0x0) received by PID 44322 (TID 0x7fce44644700) from PID 0; stack trace: ***
[2m[36m(pid=44307)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44307)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44307)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44307)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44307)[0m *** SIGSEGV (@0x0) received by PID 44307 (TID 0x7fa9d9272700) from PID 0; stack trace: ***
[2m[36m(pid=44257)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44257)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44257)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44257)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44257)[0m *** SIGSEGV (@0x0) received by PID 44257 (TID 0x7f48a30b4700) from PID 0; stack trace: ***
[2m[36m(pid=44257)[0m     @     0x7f48a2c8d390 (unknown)
[2m[36m(pid=44257)[0m     @     0x7f19a2c10f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44257)[0m     @     0x7f19a233b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44311)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44311)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44311)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44311)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44311)[0m *** SIGSEGV (@0x0) received by PID 44311 (TID 0x7fc246bd1700) from PID 0; stack trace: ***
[2m[36m(pid=44311)[0m     @     0x7fc2467aa390 (unknown)
[2m[36m(pid=44311)[0m     @     0x7f934674ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44311)[0m     @     0x7f9345e797db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44243)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44243)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44243)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44243)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44243)[0m *** SIGSEGV (@0x0) received by PID 44243 (TID 0x7fad19182700) from PID 0; stack trace: ***
[2m[36m(pid=44243)[0m     @     0x7fad18d5b390 (unknown)
[2m[36m(pid=44243)[0m     @     0x7f7e18c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44243)[0m     @     0x7f7e1839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44304)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44304)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44304)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44304)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44304)[0m *** SIGSEGV (@0x0) received by PID 44304 (TID 0x7f9d5eddc700) from PID 0; stack trace: ***
[2m[36m(pid=44266)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44266)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44266)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44266)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44266)[0m *** SIGSEGV (@0x0) received by PID 44266 (TID 0x7f4a710a1700) from PID 0; stack trace: ***
[2m[36m(pid=44266)[0m     @     0x7f4a70c7a390 (unknown)
[2m[36m(pid=44266)[0m     @     0x7f1b70bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44266)[0m     @     0x7f1b702fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44352)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44352)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44352)[0m *** SIGSEGV (@0x0) received by PID 44352 (TID 0x7f75362f1700) from PID 0; stack trace: ***
[2m[36m(pid=44352)[0m     @     0x7f7535eca390 (unknown)
[2m[36m(pid=44317)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44317)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44317)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44317)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44354)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44274)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44274)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44274)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44274)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44274)[0m *** SIGSEGV (@0x0) received by PID 44274 (TID 0x7ff977b67700) from PID 0; stack trace: ***
[2m[36m(pid=44274)[0m     @     0x7ff977740390 (unknown)
[2m[36m(pid=44274)[0m     @     0x7fca776aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44296)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44296)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44296)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44296)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44296)[0m *** SIGSEGV (@0x0) received by PID 44296 (TID 0x7f7f3578d700) from PID 0; stack trace: ***
[2m[36m(pid=44296)[0m     @     0x7f7f35366390 (unknown)
[2m[36m(pid=44296)[0m     @     0x7f5035166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44296)[0m     @     0x7f50348917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44341)[0m     @     0x7f9321a79d91 at::TensorIterator::for_each()
[2m[36m(pid=44341)[0m     @     0x7f932235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44341)[0m     @     0x7f932237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44341)[0m     @     0x7f9321821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44341)[0m     @     0x7f932181f388 at::native::copy_impl()
[2m[36m(pid=44341)[0m     @     0x7f93218215a4 at::native::copy_()
[2m[36m(pid=44341)[0m     @     0x7f9321f0c4f5 at::Tensor::copy_()
[2m[36m(pid=44372)[0m     @     0x7ef1a242ad91 at::TensorIterator::for_each()
[2m[36m(pid=44372)[0m     @     0x7ef1a2d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44372)[0m     @     0x7ef1a2d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44372)[0m     @     0x7ef1a21d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44372)[0m     @     0x7ef1a21d0388 at::native::copy_impl()
[2m[36m(pid=44372)[0m     @     0x7ef1a21d25a4 at::native::copy_()
[2m[36m(pid=44241)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44241)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44241)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44241)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44241)[0m *** SIGSEGV (@0x0) received by PID 44241 (TID 0x7f1f98dbf700) from PID 0; stack trace: ***
[2m[36m(pid=44241)[0m     @     0x7f1f98998390 (unknown)
[2m[36m(pid=44241)[0m     @     0x7ef098825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44241)[0m     @     0x7ef097f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44241)[0m     @     0x7ef097f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44332)[0m     @     0x7f1bf1552d91 at::TensorIterator::for_each()
[2m[36m(pid=44332)[0m     @     0x7f1bf1e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44332)[0m     @     0x7f1bf1e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44332)[0m     @     0x7f1bf12faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44332)[0m     @     0x7f1bf12f8388 at::native::copy_impl()
[2m[36m(pid=44332)[0m     @     0x7f1bf12fa5a4 at::native::copy_()
[2m[36m(pid=44332)[0m     @     0x7f1bf19e54f5 at::Tensor::copy_()
[2m[36m(pid=44363)[0m     @     0x7f4f63785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44363)[0m     @     0x7f4f62c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44363)[0m     @     0x7f4f62c25388 at::native::copy_impl()
[2m[36m(pid=44363)[0m     @     0x7f4f62c275a4 at::native::copy_()
[2m[36m(pid=44363)[0m     @     0x7f4f633124f5 at::Tensor::copy_()
[2m[36m(pid=44363)[0m     @     0x7f4f657e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44363)[0m     @     0x7f4f633124f5 at::Tensor::copy_()
[2m[36m(pid=44315)[0m     @     0x7edbc5a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=44315)[0m     @     0x7edbc5a79d91 at::TensorIterator::for_each()
[2m[36m(pid=44315)[0m     @     0x7edbc635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44315)[0m     @     0x7edbc637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44315)[0m     @     0x7edbc5821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44315)[0m     @     0x7edbc581f388 at::native::copy_impl()
[2m[36m(pid=44269)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44269)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44269)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44269)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44269)[0m *** SIGSEGV (@0x0) received by PID 44269 (TID 0x7fea06671700) from PID 0; stack trace: ***
[2m[36m(pid=44269)[0m     @     0x7fea0624a390 (unknown)
[2m[36m(pid=44269)[0m     @     0x7fbb0613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44269)[0m     @     0x7fbb058657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44269)[0m     @     0x7fbb058688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44361)[0m     @     0x7fa7141b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=44361)[0m     @     0x7fa7141b9d91 at::TensorIterator::for_each()
[2m[36m(pid=44361)[0m     @     0x7fa714a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44361)[0m     @     0x7fa714abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44361)[0m     @     0x7fa713f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44361)[0m     @     0x7fa713f5f388 at::native::copy_impl()
[2m[36m(pid=44334)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44334)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44334)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44334)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44334)[0m *** SIGSEGV (@0x0) received by PID 44334 (TID 0x7f24d3f2e700) from PID 0; stack trace: ***
[2m[36m(pid=44334)[0m     @     0x7f24d3b07390 (unknown)
[2m[36m(pid=44334)[0m     @     0x7ef5d38ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44334)[0m     @     0x7ef5d2ff77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44334)[0m     @     0x7ef5d2ffa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44362)[0m     @     0x7f26899cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44362)[0m     @     0x7f26899cd388 at::native::copy_impl()
[2m[36m(pid=44362)[0m     @     0x7f26899cf5a4 at::native::copy_()
[2m[36m(pid=44362)[0m     @     0x7f268a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=44362)[0m     @     0x7f268c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44362)[0m     @     0x7f268a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=44329)[0m     @     0x7eeff8269d91 at::TensorIterator::for_each()
[2m[36m(pid=44329)[0m     @     0x7eeff8b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44329)[0m     @     0x7eeff8b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44329)[0m     @     0x7eeff8011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44329)[0m     @     0x7eeff800f388 at::native::copy_impl()
[2m[36m(pid=44329)[0m     @     0x7eeff80115a4 at::native::copy_()
[2m[36m(pid=44343)[0m     @     0x7f4cd8597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44343)[0m     @     0x7f4cd7a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44343)[0m     @     0x7f4cd7a37388 at::native::copy_impl()
[2m[36m(pid=44343)[0m     @     0x7f4cd7a395a4 at::native::copy_()
[2m[36m(pid=44343)[0m     @     0x7f4cd81244f5 at::Tensor::copy_()
[2m[36m(pid=44343)[0m     @     0x7f4cda5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44246)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44246)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44246)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44246)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44246)[0m *** SIGSEGV (@0x0) received by PID 44246 (TID 0x7fe58242a700) from PID 0; stack trace: ***
[2m[36m(pid=44246)[0m     @     0x7fe582003390 (unknown)
[2m[36m(pid=44246)[0m     @     0x7fb681e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44246)[0m     @     0x7fb68154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44246)[0m     @     0x7fb6815528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44246)[0m     @     0x7fb681552ad3 at::TensorIterator::for_each()
[2m[36m(pid=44310)[0m     @     0x7f5563a67d91 at::TensorIterator::for_each()
[2m[36m(pid=44310)[0m     @     0x7f556434ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44310)[0m     @     0x7f556436dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44310)[0m     @     0x7f556380fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44310)[0m     @     0x7f556380d388 at::native::copy_impl()
[2m[36m(pid=44310)[0m     @     0x7f556380f5a4 at::native::copy_()
[2m[36m(pid=44310)[0m     @     0x7f5563efa4f5 at::Tensor::copy_()
[2m[36m(pid=44297)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44297)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44297)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44297)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44297)[0m *** SIGSEGV (@0x0) received by PID 44297 (TID 0x7f7165769700) from PID 0; stack trace: ***
[2m[36m(pid=44297)[0m     @     0x7f7165342390 (unknown)
[2m[36m(pid=44297)[0m     @     0x7f42652b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44297)[0m     @     0x7f42649e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44318)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44318)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44318)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44318)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44318)[0m *** SIGSEGV (@0x0) received by PID 44318 (TID 0x7f166fca7700) from PID 0; stack trace: ***
[2m[36m(pid=44318)[0m     @     0x7f166f880390 (unknown)
[2m[36m(pid=44318)[0m     @     0x7ee76f83bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44318)[0m     @     0x7ee76ef667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44318)[0m     @     0x7ee76ef698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44320)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44320)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44320)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44320)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44320)[0m *** SIGSEGV (@0x0) received by PID 44320 (TID 0x7f5966f61700) from PID 0; stack trace: ***
[2m[36m(pid=44320)[0m     @     0x7f5966b3a390 (unknown)
[2m[36m(pid=44320)[0m     @     0x7f2a66aa4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44320)[0m     @     0x7f2a661cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44320)[0m     @     0x7f2a661d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44320)[0m     @     0x7f2a661d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=44259)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44259)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44259)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44259)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44259)[0m *** SIGSEGV (@0x0) received by PID 44259 (TID 0x7f054b822700) from PID 0; stack trace: ***
[2m[36m(pid=44259)[0m     @     0x7f054b3fb390 (unknown)
[2m[36m(pid=44259)[0m     @     0x7ed64b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44259)[0m     @     0x7ed64a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44259)[0m     @     0x7ed64a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44251)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44251)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44251)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44251)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44251)[0m *** SIGSEGV (@0x0) received by PID 44251 (TID 0x7f5d0e7e6700) from PID 0; stack trace: ***
[2m[36m(pid=44251)[0m     @     0x7f5d0e3bf390 (unknown)
[2m[36m(pid=44251)[0m     @     0x7f2e0e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44251)[0m     @     0x7f2e0da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44348)[0m     @     0x7fbeb61ffd91 at::TensorIterator::for_each()
[2m[36m(pid=44348)[0m     @     0x7fbeb6ae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44348)[0m     @     0x7fbeb6b05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44348)[0m     @     0x7fbeb5fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44348)[0m     @     0x7fbeb5fa5388 at::native::copy_impl()
[2m[36m(pid=44348)[0m     @     0x7fbeb5fa75a4 at::native::copy_()
[2m[36m(pid=44348)[0m     @     0x7fbeb66924f5 at::Tensor::copy_()
[2m[36m(pid=44348)[0m     @     0x7fbeb8b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44346)[0m     @     0x7ee2a9c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=44346)[0m     @     0x7ee2a9c27d91 at::TensorIterator::for_each()
[2m[36m(pid=44346)[0m     @     0x7ee2aa50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44346)[0m     @     0x7ee2aa52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44346)[0m     @     0x7ee2a99cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44346)[0m     @     0x7ee2a99cd388 at::native::copy_impl()
[2m[36m(pid=44321)[0m     @     0x7f72bca9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44321)[0m     @     0x7f72bcabfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44321)[0m     @     0x7f72bbf61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44321)[0m     @     0x7f72bbf5f388 at::native::copy_impl()
[2m[36m(pid=44321)[0m     @     0x7f72bbf615a4 at::native::copy_()
[2m[36m(pid=44321)[0m     @     0x7f72bc64c4f5 at::Tensor::copy_()
[2m[36m(pid=44321)[0m     @     0x7f72beb1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44252)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44252)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44252)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44252)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44252)[0m *** SIGSEGV (@0x0) received by PID 44252 (TID 0x7f987b338700) from PID 0; stack trace: ***
[2m[36m(pid=44252)[0m     @     0x7f987af11390 (unknown)
[2m[36m(pid=44252)[0m     @     0x7f697ae93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44252)[0m     @     0x7f697a5be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44252)[0m     @     0x7f697a5c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44325)[0m     @     0x7f4e5adb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44325)[0m     @     0x7f4e5adb2388 at::native::copy_impl()
[2m[36m(pid=44325)[0m     @     0x7f4e5adb45a4 at::native::copy_()
[2m[36m(pid=44325)[0m     @     0x7f4e5b49f4f5 at::Tensor::copy_()
[2m[36m(pid=44325)[0m     @     0x7f4e5d9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44325)[0m     @     0x7f4e5b49f4f5 at::Tensor::copy_()
[2m[36m(pid=44325)[0m     @     0x7f4e6154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44325)[0m     @     0x55c06ec4afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44325)[0m     @     0x55c06eba5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44325)[0m     @     0x55c06ec30baf _PyEval_EvalCodeWithName
[2m[36m(pid=44325)[0m     @     0x55c06ec31a20 method_vectorcall
[2m[36m(pid=44325)[0m     @     0x55c06eba5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44325)[0m     @     0x55c06ec30baf _PyEval_EvalCodeWithName
[2m[36m(pid=44325)[0m     @     0x55c06ec31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44325)[0m     @     0x55c06eba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44325)[0m     @     0x55c06ec30baf _PyEval_EvalCodeWithName
[2m[36m(pid=44345)[0m     @     0x7f082f7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=44345)[0m     @     0x7f08300deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44345)[0m     @     0x7f0830101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44345)[0m     @     0x7f082f5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44345)[0m     @     0x7f082f5a1388 at::native::copy_impl()
[2m[36m(pid=44345)[0m     @     0x7f082f5a35a4 at::native::copy_()
[2m[36m(pid=44345)[0m     @     0x7f082fc8e4f5 at::Tensor::copy_()
[2m[36m(pid=44345)[0m     @     0x7f08321618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44349)[0m     @     0x7f6bc05d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=44349)[0m     @     0x7f6bc05d2d91 at::TensorIterator::for_each()
[2m[36m(pid=44349)[0m     @     0x7f6bc0eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44349)[0m     @     0x7f6bc0ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44349)[0m     @     0x7f6bc037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44349)[0m     @     0x7f6bc0378388 at::native::copy_impl()
[2m[36m(pid=44349)[0m     @     0x7f6bc037a5a4 at::native::copy_()
[2m[36m(pid=44330)[0m     @     0x7f8695552d91 at::TensorIterator::for_each()
[2m[36m(pid=44330)[0m     @     0x7f8695e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44330)[0m     @     0x7f8695e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44330)[0m     @     0x7f86952faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44330)[0m     @     0x7f86952f8388 at::native::copy_impl()
[2m[36m(pid=44330)[0m     @     0x7f86952fa5a4 at::native::copy_()
[2m[36m(pid=44330)[0m     @     0x7f86959e54f5 at::Tensor::copy_()
[2m[36m(pid=44330)[0m     @     0x7f8697eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44355)[0m     @     0x7f69e4978d91 at::TensorIterator::for_each()
[2m[36m(pid=44355)[0m     @     0x7f69e525bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44355)[0m     @     0x7f69e527ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44355)[0m     @     0x7f69e4720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44355)[0m     @     0x7f69e471e388 at::native::copy_impl()
[2m[36m(pid=44355)[0m     @     0x7f69e47205a4 at::native::copy_()
[2m[36m(pid=44245)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44245)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44245)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44245)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44245)[0m *** SIGSEGV (@0x0) received by PID 44245 (TID 0x7fd24bb18700) from PID 0; stack trace: ***
[2m[36m(pid=44245)[0m     @     0x7fd24b6f1390 (unknown)
[2m[36m(pid=44245)[0m     @     0x7fa34b5eff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44245)[0m     @     0x7fa34ad1a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44245)[0m     @     0x7fa34ad1d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44302)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44302)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44302)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44302)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44302)[0m *** SIGSEGV (@0x0) received by PID 44302 (TID 0x7f5ad0cfa700) from PID 0; stack trace: ***
[2m[36m(pid=44302)[0m     @     0x7f5ad08d3390 (unknown)
[2m[36m(pid=44302)[0m     @     0x7f2bd0825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44302)[0m     @     0x7f2bcff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44302)[0m     @     0x7f2bcff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44302)[0m     @     0x7f2bcff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=44313)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44313)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44313)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44313)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44313)[0m *** SIGSEGV (@0x0) received by PID 44313 (TID 0x7f4c94351700) from PID 0; stack trace: ***
[2m[36m(pid=44313)[0m     @     0x7f4c93f2a390 (unknown)
[2m[36m(pid=44313)[0m     @     0x7f1d93eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44313)[0m     @     0x7f1d935e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44313)[0m     @     0x7f1d935e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44309)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44309)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44309)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44309)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44309)[0m *** SIGSEGV (@0x0) received by PID 44309 (TID 0x7fc3af201700) from PID 0; stack trace: ***
[2m[36m(pid=44265)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44265)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44265)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44265)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44265)[0m *** SIGSEGV (@0x0) received by PID 44265 (TID 0x7f3abb733700) from PID 0; stack trace: ***
[2m[36m(pid=44265)[0m     @     0x7f3abb30c390 (unknown)
[2m[36m(pid=44265)[0m     @     0x7f0bbb229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44265)[0m     @     0x7f0bba9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44240)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44240)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44240)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44240)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44240)[0m *** SIGSEGV (@0x0) received by PID 44240 (TID 0x7feb68de4700) from PID 0; stack trace: ***
[2m[36m(pid=44240)[0m     @     0x7feb689bd390 (unknown)
[2m[36m(pid=44240)[0m     @     0x7fbc68774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44240)[0m     @     0x7fbc67e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44312)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44312)[0m *** SIGSEGV (@0x0) received by PID 44312 (TID 0x7efe56de6700) from PID 0; stack trace: ***
[2m[36m(pid=44312)[0m     @     0x7efe569bf390 (unknown)
[2m[36m(pid=44312)[0m     @     0x7ecf5694cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44312)[0m     @     0x7ecf560777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44324)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44324)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44324)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44324)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44324)[0m *** SIGSEGV (@0x0) received by PID 44324 (TID 0x7fe364941700) from PID 0; stack trace: ***
[2m[36m(pid=44324)[0m     @     0x7fe36451a390 (unknown)
[2m[36m(pid=44324)[0m     @     0x7fb4643e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44324)[0m     @     0x7fb463b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44353)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44353)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44353)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44276)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44276)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44276)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44276)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44276)[0m *** SIGSEGV (@0x0) received by PID 44276 (TID 0x7fae68b3b700) from PID 0; stack trace: ***
[2m[36m(pid=44276)[0m     @     0x7fae68714390 (unknown)
[2m[36m(pid=44276)[0m     @     0x7f7f68563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44276)[0m     @     0x7f7f67c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44267)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44267)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44267)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44255)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44255)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44255)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44255)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44255)[0m *** SIGSEGV (@0x0) received by PID 44255 (TID 0x7f6d7f531700) from PID 0; stack trace: ***
[2m[36m(pid=44255)[0m     @     0x7f6d7f10a390 (unknown)
[2m[36m(pid=44255)[0m     @     0x7f3e7f083f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44255)[0m     @     0x7f3e7e7ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44326)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44326)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44326)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44326)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44262)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44262)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44262)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44262)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44262)[0m *** SIGSEGV (@0x0) received by PID 44262 (TID 0x7f388f232700) from PID 0; stack trace: ***
[2m[36m(pid=44262)[0m     @     0x7f388ee0b390 (unknown)
[2m[36m(pid=44262)[0m     @     0x7f098edb0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44262)[0m     @     0x7f098e4db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44300)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44300)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44300)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44300)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44300)[0m *** SIGSEGV (@0x0) received by PID 44300 (TID 0x7f0f353c0700) from PID 0; stack trace: ***
[2m[36m(pid=44300)[0m     @     0x7f0f34f99390 (unknown)
[2m[36m(pid=44300)[0m     @     0x7ee034ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44300)[0m     @     0x7ee0345cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44350)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44350)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44350)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44350)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44350)[0m *** SIGSEGV (@0x0) received by PID 44350 (TID 0x7fca2849b700) from PID 0; stack trace: ***
[2m[36m(pid=44256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44256)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44256)[0m *** SIGSEGV (@0x0) received by PID 44256 (TID 0x7f43143cd700) from PID 0; stack trace: ***
[2m[36m(pid=44256)[0m     @     0x7f4313fa6390 (unknown)
[2m[36m(pid=44256)[0m     @     0x7f1413e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44256)[0m     @     0x7f14135367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44338)[0m     @     0x7f1c0bb11d91 at::TensorIterator::for_each()
[2m[36m(pid=44338)[0m     @     0x7f1c0c3f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44338)[0m     @     0x7f1c0c417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44338)[0m     @     0x7f1c0b8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44338)[0m     @     0x7f1c0b8b7388 at::native::copy_impl()
[2m[36m(pid=44258)[0m     @     0x7f8f2faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44258)[0m     @     0x7f8f2f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44258)[0m     @     0x7f8f2f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44258)[0m     @     0x7f8f2f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=44366)[0m     @     0x7fb73782e390 (unknown)
[2m[36m(pid=44366)[0m     @     0x7f88377a9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44366)[0m     @     0x7f8836ed47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44366)[0m     @     0x7f8836ed78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44366)[0m     @     0x7f8836ed7ad3 at::TensorIterator::for_each()
[2m[36m(pid=44247)[0m     @     0x7fa3ddb7f390 (unknown)
[2m[36m(pid=44247)[0m     @     0x7f74dda0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44247)[0m     @     0x7f74dd1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44247)[0m     @     0x7f74dd1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44238)[0m     @     0x7f45a30bf390 (unknown)
[2m[36m(pid=44238)[0m     @     0x7f16a3052f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44238)[0m     @     0x7f16a277d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44238)[0m     @     0x7f16a27808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44339)[0m     @     0x7f05ea53ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44339)[0m     @     0x7f05ea53c388 at::native::copy_impl()
[2m[36m(pid=44339)[0m     @     0x7f05ea53e5a4 at::native::copy_()
[2m[36m(pid=44339)[0m     @     0x7f05eac294f5 at::Tensor::copy_()
[2m[36m(pid=44339)[0m     @     0x7f05ed0fc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44335)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44335)[0m *** SIGSEGV (@0x0) received by PID 44335 (TID 0x7f6ba8848700) from PID 0; stack trace: ***
[2m[36m(pid=44335)[0m     @     0x7f6ba8421390 (unknown)
[2m[36m(pid=44335)[0m     @     0x7f3ca82def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44335)[0m     @     0x7f3ca7a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44264)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44264)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44264)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44264)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44264)[0m *** SIGSEGV (@0x0) received by PID 44264 (TID 0x7f77b9294700) from PID 0; stack trace: ***
[2m[36m(pid=44264)[0m     @     0x7f77b8e6d390 (unknown)
[2m[36m(pid=44264)[0m     @     0x7f48b8e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44264)[0m     @     0x7f48b853d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44308)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44308)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44308)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44308)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44308)[0m *** SIGSEGV (@0x0) received by PID 44308 (TID 0x7f401238e700) from PID 0; stack trace: ***
[2m[36m(pid=44308)[0m     @     0x7f4011f67390 (unknown)
[2m[36m(pid=44308)[0m     @     0x7f1111e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44308)[0m     @     0x7f111154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44316)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44316)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44316)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44316)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44316)[0m *** SIGSEGV (@0x0) received by PID 44316 (TID 0x7f2cf64e6700) from PID 0; stack trace: ***
[2m[36m(pid=44316)[0m     @     0x7f2cf60bf390 (unknown)
[2m[36m(pid=44316)[0m     @     0x7efdf604df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44250)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44250)[0m *** SIGSEGV (@0x0) received by PID 44250 (TID 0x7f0edb8b4700) from PID 0; stack trace: ***
[2m[36m(pid=44250)[0m     @     0x7f0edb48d390 (unknown)
[2m[36m(pid=44250)[0m     @     0x7edfdb229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44250)[0m     @     0x7edfda9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44250)[0m     @     0x7edfda9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44250)[0m     @     0x7edfda957ad3 at::TensorIterator::for_each()
[2m[36m(pid=44319)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44319)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44319)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44319)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44319)[0m *** SIGSEGV (@0x0) received by PID 44319 (TID 0x7f7c23691700) from PID 0; stack trace: ***
[2m[36m(pid=44244)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44244)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44244)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44244)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44244)[0m *** SIGSEGV (@0x0) received by PID 44244 (TID 0x7fb914550700) from PID 0; stack trace: ***
[2m[36m(pid=44244)[0m     @     0x7fb914129390 (unknown)
[2m[36m(pid=44275)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44275)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44275)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44275)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44275)[0m *** SIGSEGV (@0x0) received by PID 44275 (TID 0x7f8e13001700) from PID 0; stack trace: ***
[2m[36m(pid=44275)[0m     @     0x7f8e12bda390 (unknown)
[2m[36m(pid=44275)[0m     @     0x7f5f12a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44275)[0m     @     0x7f5f1214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44275)[0m     @     0x7f5f1214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44358)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44358)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44358)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44358)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44358)[0m *** SIGSEGV (@0x0) received by PID 44358 (TID 0x7fdc6c709700) from PID 0; stack trace: ***
[2m[36m(pid=44358)[0m     @     0x7fdc6c2e2390 (unknown)
[2m[36m(pid=44358)[0m     @     0x7fad6c263f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44358)[0m     @     0x7fad6b98e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44358)[0m     @     0x7fad6b9918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44254)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44254)[0m *** SIGSEGV (@0x0) received by PID 44254 (TID 0x7f8f73ac2700) from PID 0; stack trace: ***
[2m[36m(pid=44254)[0m     @     0x7f8f7369b390 (unknown)
[2m[36m(pid=44254)[0m     @     0x7f607361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44254)[0m     @     0x7f6072d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44254)[0m     @     0x7f6072d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44254)[0m     @     0x7f6072d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=44239)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=44239)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=44239)[0m *** Aborted at 1604573058 (unix time) try "date -d @1604573058" if you are using GNU date ***
[2m[36m(pid=44239)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44239)[0m *** SIGSEGV (@0x0) received by PID 44239 (TID 0x7fae86616700) from PID 0; stack trace: ***
[2m[36m(pid=44239)[0m     @     0x7fae861ef390 (unknown)
[2m[36m(pid=44239)[0m     @     0x7f7f8613af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44239)[0m     @     0x7f7f858657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44249)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44249)[0m *** SIGSEGV (@0x0) received by PID 44249 (TID 0x7f1f70b97700) from PID 0; stack trace: ***
[2m[36m(pid=44249)[0m     @     0x7f1f70770390 (unknown)
[2m[36m(pid=44249)[0m     @     0x7ef07071ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44249)[0m     @     0x7ef06fe4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44249)[0m     @     0x7ef06fe4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44249)[0m     @     0x7ef06fe4dad3 at::TensorIterator::for_each()
[2m[36m(pid=44242)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44242)[0m *** SIGSEGV (@0x0) received by PID 44242 (TID 0x7f3cb90fb700) from PID 0; stack trace: ***
[2m[36m(pid=44242)[0m     @     0x7f3cb8cd4390 (unknown)
[2m[36m(pid=44242)[0m     @     0x7f0db8bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44242)[0m     @     0x7f0db82fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44242)[0m     @     0x7f0db82ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44242)[0m     @     0x7f0db82ffad3 at::TensorIterator::for_each()
[2m[36m(pid=44331)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44331)[0m *** SIGSEGV (@0x0) received by PID 44331 (TID 0x7f3464fcb700) from PID 0; stack trace: ***
[2m[36m(pid=44331)[0m     @     0x7f3464ba4390 (unknown)
[2m[36m(pid=44331)[0m     @     0x7f0564b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44331)[0m     @     0x7f05642667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44331)[0m     @     0x7f05642698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44331)[0m     @     0x7f0564269ad3 at::TensorIterator::for_each()
[2m[36m(pid=44260)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44260)[0m *** SIGSEGV (@0x0) received by PID 44260 (TID 0x7f5b4b85d700) from PID 0; stack trace: ***
[2m[36m(pid=44260)[0m     @     0x7f5b4b436390 (unknown)
[2m[36m(pid=44260)[0m     @     0x7f2c4b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44260)[0m     @     0x7f2c4a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44260)[0m     @     0x7f2c4a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44260)[0m     @     0x7f2c4a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=44314)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44314)[0m *** SIGSEGV (@0x0) received by PID 44314 (TID 0x7f0203dac700) from PID 0; stack trace: ***
[2m[36m(pid=44314)[0m     @     0x7f0203985390 (unknown)
[2m[36m(pid=44314)[0m     @     0x7ed3038def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44314)[0m     @     0x7ed3030097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44314)[0m     @     0x7ed30300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44322)[0m     @     0x7fce4421d390 (unknown)
[2m[36m(pid=44322)[0m     @     0x7f9f4401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44322)[0m     @     0x7f9f437477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44322)[0m     @     0x7f9f4374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44322)[0m     @     0x7f9f4374aad3 at::TensorIterator::for_each()
[2m[36m(pid=44307)[0m     @     0x7fa9d8e4b390 (unknown)
[2m[36m(pid=44307)[0m     @     0x7f7ad8de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44307)[0m     @     0x7f7ad850f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44307)[0m     @     0x7f7ad85128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44307)[0m     @     0x7f7ad8512ad3 at::TensorIterator::for_each()
[2m[36m(pid=44257)[0m     @     0x7f19a233e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44257)[0m     @     0x7f19a233ead3 at::TensorIterator::for_each()
[2m[36m(pid=44257)[0m     @     0x7f19a233ed91 at::TensorIterator::for_each()
[2m[36m(pid=44311)[0m     @     0x7f9345e7c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44311)[0m     @     0x7f9345e7cad3 at::TensorIterator::for_each()
[2m[36m(pid=44243)[0m     @     0x7f7e183a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44243)[0m     @     0x7f7e183a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=44304)[0m     @     0x7f9d5e9b5390 (unknown)
[2m[36m(pid=44304)[0m     @     0x7f6e5e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44304)[0m     @     0x7f6e5de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44304)[0m     @     0x7f6e5de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44266)[0m     @     0x7f1b702ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44266)[0m     @     0x7f1b702ffad3 at::TensorIterator::for_each()
[2m[36m(pid=44352)[0m     @     0x7f4635e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44352)[0m     @     0x7f463554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44352)[0m     @     0x7f46355528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44317)[0m *** SIGSEGV (@0x0) received by PID 44317 (TID 0x7f4f47005700) from PID 0; stack trace: ***
[2m[36m(pid=44317)[0m     @     0x7f4f46bde390 (unknown)
[2m[36m(pid=44317)[0m     @     0x7f2046a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44317)[0m     @     0x7f204614c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44354)[0m *** SIGSEGV (@0x0) received by PID 44354 (TID 0x7f3d6d78f700) from PID 0; stack trace: ***
[2m[36m(pid=44354)[0m     @     0x7f3d6d368390 (unknown)
[2m[36m(pid=44354)[0m     @     0x7f0e6d2fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44354)[0m     @     0x7f0e6ca277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44274)[0m     @     0x7fca76dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44274)[0m     @     0x7fca76ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44274)[0m     @     0x7fca76ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=44296)[0m     @     0x7f50348948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44296)[0m     @     0x7f5034894ad3 at::TensorIterator::for_each()
[2m[36m(pid=44341)[0m     @     0x7f93243df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44341)[0m     @     0x7f9321f0c4f5 at::Tensor::copy_()
[2m[36m(pid=44341)[0m     @     0x7f9327fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44341)[0m     @     0x5645fbaeffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44341)[0m     @     0x5645fba4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44341)[0m     @     0x5645fbad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44341)[0m     @     0x5645fbad6a20 method_vectorcall
[2m[36m(pid=44341)[0m     @     0x5645fba4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44341)[0m     @     0x5645fbad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44341)[0m     @     0x5645fbad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44341)[0m     @     0x5645fba4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44341)[0m     @     0x5645fbad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44341)[0m     @     0x5645fbad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44341)[0m     @     0x5645fba4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44341)[0m     @     0x5645fbad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44341)[0m     @     0x5645fbad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44341)[0m     @     0x5645fba4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44341)[0m     @     0x5645fbad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44341)[0m     @     0x5645fbad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44341)[0m     @     0x5645fba4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44372)[0m     @     0x7ef1a28bd4f5 at::Tensor::copy_()
[2m[36m(pid=44372)[0m     @     0x7ef1a4d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44372)[0m     @     0x7ef1a28bd4f5 at::Tensor::copy_()
[2m[36m(pid=44372)[0m     @     0x7ef1a896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44372)[0m     @     0x55a67ea74fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44372)[0m     @     0x55a67e9cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44372)[0m     @     0x55a67ea5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44372)[0m     @     0x55a67ea5ba20 method_vectorcall
[2m[36m(pid=44372)[0m     @     0x55a67e9cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44372)[0m     @     0x55a67ea5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44372)[0m     @     0x55a67ea5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44372)[0m     @     0x55a67e9d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44241)[0m     @     0x7ef097f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=44241)[0m     @     0x7ef097f53d91 at::TensorIterator::for_each()
[2m[36m(pid=44241)[0m     @     0x7ef098836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44332)[0m     @     0x7f1bf3eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44332)[0m     @     0x7f1bf19e54f5 at::Tensor::copy_()
[2m[36m(pid=44332)[0m     @     0x7f1bf7a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44332)[0m     @     0x562632c6efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44332)[0m     @     0x562632bc9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44332)[0m     @     0x562632c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=44332)[0m     @     0x562632c55a20 method_vectorcall
[2m[36m(pid=44332)[0m     @     0x562632bc9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44332)[0m     @     0x562632c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=44332)[0m     @     0x562632c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44363)[0m     @     0x7f4f693bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44363)[0m     @     0x56446f881fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44363)[0m     @     0x56446f7dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44363)[0m     @     0x56446f867baf _PyEval_EvalCodeWithName
[2m[36m(pid=44363)[0m     @     0x56446f868a20 method_vectorcall
[2m[36m(pid=44363)[0m     @     0x56446f7dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44363)[0m     @     0x56446f867baf _PyEval_EvalCodeWithName
[2m[36m(pid=44363)[0m     @     0x56446f868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44363)[0m     @     0x56446f7dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44363)[0m     @     0x56446f867baf _PyEval_EvalCodeWithName
[2m[36m(pid=44363)[0m     @     0x56446f868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44363)[0m     @     0x56446f7dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44363)[0m     @     0x56446f867baf _PyEval_EvalCodeWithName
[2m[36m(pid=44363)[0m     @     0x56446f868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44363)[0m     @     0x56446f7dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44363)[0m     @     0x56446f867baf _PyEval_EvalCodeWithName
[2m[36m(pid=44363)[0m     @     0x56446f868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44363)[0m     @     0x56446f7dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44315)[0m     @     0x7edbc58215a4 at::native::copy_()
[2m[36m(pid=44315)[0m     @     0x7edbc5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=44315)[0m     @     0x7edbc83df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44269)[0m     @     0x7fbb05868ad3 at::TensorIterator::for_each()
[2m[36m(pid=44269)[0m     @     0x7fbb05868d91 at::TensorIterator::for_each()
[2m[36m(pid=44269)[0m     @     0x7fbb0614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44361)[0m     @     0x7fa713f615a4 at::native::copy_()
[2m[36m(pid=44361)[0m     @     0x7fa71464c4f5 at::Tensor::copy_()
[2m[36m(pid=44361)[0m     @     0x7fa716b1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44334)[0m     @     0x7ef5d2ffaad3 at::TensorIterator::for_each()
[2m[36m(pid=44334)[0m     @     0x7ef5d2ffad91 at::TensorIterator::for_each()
[2m[36m(pid=44334)[0m     @     0x7ef5d38ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44334)[0m     @     0x7ef5d3900c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44362)[0m     @     0x7f269016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44362)[0m     @     0x5586f3daefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44362)[0m     @     0x5586f3d09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44362)[0m     @     0x5586f3d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44362)[0m     @     0x5586f3d95a20 method_vectorcall
[2m[36m(pid=44362)[0m     @     0x5586f3d09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44362)[0m     @     0x5586f3d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44362)[0m     @     0x5586f3d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44362)[0m     @     0x5586f3d0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44362)[0m     @     0x5586f3d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44362)[0m     @     0x5586f3d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44362)[0m     @     0x5586f3d0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44362)[0m     @     0x5586f3d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44362)[0m     @     0x5586f3d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44362)[0m     @     0x5586f3d0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44362)[0m     @     0x5586f3d94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44362)[0m     @     0x5586f3d95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44362)[0m     @     0x5586f3d0a689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:44:18,158	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=44329)[0m     @     0x7eeff86fc4f5 at::Tensor::copy_()
[2m[36m(pid=44329)[0m     @     0x7eeffabcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44329)[0m     @     0x7eeff86fc4f5 at::Tensor::copy_()
[2m[36m(pid=44329)[0m     @     0x7eeffe7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44329)[0m     @     0x5614b6335fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44329)[0m     @     0x5614b6290b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44329)[0m     @     0x5614b631bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44329)[0m     @     0x5614b631ca20 method_vectorcall
[2m[36m(pid=44329)[0m     @     0x5614b6290bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44329)[0m     @     0x5614b631bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44329)[0m     @     0x5614b631c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44329)[0m     @     0x5614b6291689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44329)[0m     @     0x5614b631bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44329)[0m     @     0x5614b631c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44329)[0m     @     0x5614b6291689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44329)[0m     @     0x5614b631bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44343)[0m     @     0x7f4cd81244f5 at::Tensor::copy_()
[2m[36m(pid=44343)[0m     @     0x7f4cde1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44343)[0m     @     0x5570b67e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44343)[0m     @     0x5570b673db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44343)[0m     @     0x5570b67c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44343)[0m     @     0x5570b67c9a20 method_vectorcall
[2m[36m(pid=44343)[0m     @     0x5570b673dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44343)[0m     @     0x5570b67c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44343)[0m     @     0x5570b67c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44343)[0m     @     0x5570b673e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44343)[0m     @     0x5570b67c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44343)[0m     @     0x5570b67c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44343)[0m     @     0x5570b673e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44343)[0m     @     0x5570b67c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44343)[0m     @     0x5570b67c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44343)[0m     @     0x5570b673e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44343)[0m     @     0x5570b67c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44343)[0m     @     0x5570b67c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44343)[0m     @     0x5570b673e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x7fb681552d91 at::TensorIterator::for_each()
[2m[36m(pid=44246)[0m     @     0x7fb681e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44246)[0m     @     0x7fb681e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44246)[0m     @     0x7fb6812faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44246)[0m     @     0x7fb6812f8388 at::native::copy_impl()
[2m[36m(pid=44310)[0m     @     0x7f55663cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44310)[0m     @     0x7f5563efa4f5 at::Tensor::copy_()
[2m[36m(pid=44310)[0m     @     0x7f5569fa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44310)[0m     @     0x5605474d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44310)[0m     @     0x560547430b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44310)[0m     @     0x5605474bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44310)[0m     @     0x5605474bca20 method_vectorcall
[2m[36m(pid=44310)[0m     @     0x560547430bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44310)[0m     @     0x5605474bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44310)[0m     @     0x5605474bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44310)[0m     @     0x560547431689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44310)[0m     @     0x5605474bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44310)[0m     @     0x5605474bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44310)[0m     @     0x560547431689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44310)[0m     @     0x5605474bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44310)[0m     @     0x5605474bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44310)[0m     @     0x560547431689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44310)[0m     @     0x5605474bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44310)[0m     @     0x5605474bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44310)[0m     @     0x560547431689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44297)[0m     @     0x7f42649e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44297)[0m     @     0x7f42649e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=44297)[0m     @     0x7f42649e5d91 at::TensorIterator::for_each()
[2m[36m(pid=44297)[0m     @     0x7f42652c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44297)[0m     @     0x7f42652ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44318)[0m     @     0x7ee76ef69ad3 at::TensorIterator::for_each()
[2m[36m(pid=44318)[0m     @     0x7ee76ef69d91 at::TensorIterator::for_each()
[2m[36m(pid=44318)[0m     @     0x7ee76f84cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44318)[0m     @     0x7ee76f86fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44320)[0m     @     0x7f2a661d2d91 at::TensorIterator::for_each()
[2m[36m(pid=44320)[0m     @     0x7f2a66ab5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44320)[0m     @     0x7f2a66ad8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44320)[0m     @     0x7f2a65f7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44320)[0m     @     0x7f2a65f78388 at::native::copy_impl()
[2m[36m(pid=44320)[0m     @     0x7f2a65f7a5a4 at::native::copy_()
[2m[36m(pid=44259)[0m     @     0x7ed64a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=44259)[0m     @     0x7ed64a957d91 at::TensorIterator::for_each()
[2m[36m(pid=44259)[0m     @     0x7ed64b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44259)[0m     @     0x7ed64b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44259)[0m     @     0x7ed64a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44251)[0m     @     0x7f2e0da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44251)[0m     @     0x7f2e0da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=44251)[0m     @     0x7f2e0da79d91 at::TensorIterator::for_each()
[2m[36m(pid=44251)[0m     @     0x7f2e0e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44251)[0m     @     0x7f2e0e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44348)[0m     @     0x7fbeb66924f5 at::Tensor::copy_()
[2m[36m(pid=44348)[0m     @     0x7fbebc73d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44348)[0m     @     0x555e01d07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44348)[0m     @     0x555e01c62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44348)[0m     @     0x555e01cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44348)[0m     @     0x555e01ceea20 method_vectorcall
[2m[36m(pid=44348)[0m     @     0x555e01c62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44348)[0m     @     0x555e01cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44348)[0m     @     0x555e01cee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44348)[0m     @     0x555e01c63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44348)[0m     @     0x555e01cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44348)[0m     @     0x555e01cee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44348)[0m     @     0x555e01c63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44348)[0m     @     0x555e01cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44348)[0m     @     0x555e01cee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44348)[0m     @     0x555e01c63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44348)[0m     @     0x555e01cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44348)[0m     @     0x555e01cee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44348)[0m     @     0x555e01c63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44346)[0m     @     0x7ee2a99cf5a4 at::native::copy_()
[2m[36m(pid=44346)[0m     @     0x7ee2aa0ba4f5 at::Tensor::copy_()
[2m[36m(pid=44346)[0m     @     0x7ee2ac58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44346)[0m     @     0x7ee2aa0ba4f5 at::Tensor::copy_()
[2m[36m(pid=44346)[0m     @     0x7ee2b016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44346)[0m     @     0x55e93fc84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44346)[0m     @     0x55e93fbdfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44346)[0m     @     0x55e93fc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44346)[0m     @     0x55e93fc6ba20 method_vectorcall
[2m[36m(pid=44346)[0m     @     0x55e93fbdfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44346)[0m     @     0x55e93fc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44346)[0m     @     0x55e93fc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44346)[0m     @     0x55e93fbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44346)[0m     @     0x55e93fc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44346)[0m     @     0x55e93fc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44346)[0m     @     0x55e93fbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44346)[0m     @     0x55e93fc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44321)[0m     @     0x7f72bc64c4f5 at::Tensor::copy_()
[2m[36m(pid=44321)[0m     @     0x7f72c26f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44321)[0m     @     0x5639f1a98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44321)[0m     @     0x5639f19f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44321)[0m     @     0x5639f1a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44321)[0m     @     0x5639f1a7fa20 method_vectorcall
[2m[36m(pid=44321)[0m     @     0x5639f19f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44321)[0m     @     0x5639f1a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44321)[0m     @     0x5639f1a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44321)[0m     @     0x5639f19f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44321)[0m     @     0x5639f1a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44321)[0m     @     0x5639f1a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44321)[0m     @     0x5639f19f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44321)[0m     @     0x5639f1a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44321)[0m     @     0x5639f1a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44321)[0m     @     0x5639f19f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44321)[0m     @     0x5639f1a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44321)[0m     @     0x5639f1a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44321)[0m     @     0x5639f19f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x7f697a5c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=44252)[0m     @     0x7f697a5c1d91 at::TensorIterator::for_each()
[2m[36m(pid=44252)[0m     @     0x7f697aea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44252)[0m     @     0x7f697aec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44252)[0m     @     0x7f697a369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44252)[0m     @     0x7f697a367388 at::native::copy_impl()
[2m[36m(pid=44325)[0m     @     0x55c06ec31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44325)[0m     @     0x55c06eba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44325)[0m     @     0x55c06ec30baf _PyEval_EvalCodeWithName
[2m[36m(pid=44325)[0m     @     0x55c06ec31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44325)[0m     @     0x55c06eba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44325)[0m     @     0x55c06ec30baf _PyEval_EvalCodeWithName
[2m[36m(pid=44325)[0m     @     0x55c06ec31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44325)[0m     @     0x55c06eba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44345)[0m     @     0x7f082fc8e4f5 at::Tensor::copy_()
[2m[36m(pid=44345)[0m     @     0x7f0835d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44345)[0m     @     0x557a1e24dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44345)[0m     @     0x557a1e1a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44345)[0m     @     0x557a1e233baf _PyEval_EvalCodeWithName
[2m[36m(pid=44345)[0m     @     0x557a1e234a20 method_vectorcall
[2m[36m(pid=44345)[0m     @     0x557a1e1a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44345)[0m     @     0x557a1e233baf _PyEval_EvalCodeWithName
[2m[36m(pid=44345)[0m     @     0x557a1e234643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44345)[0m     @     0x557a1e1a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44345)[0m     @     0x557a1e233baf _PyEval_EvalCodeWithName
[2m[36m(pid=44345)[0m     @     0x557a1e234643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44345)[0m     @     0x557a1e1a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44345)[0m     @     0x557a1e233baf _PyEval_EvalCodeWithName
[2m[36m(pid=44345)[0m     @     0x557a1e234643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44345)[0m     @     0x557a1e1a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44345)[0m     @     0x557a1e233baf _PyEval_EvalCodeWithName
[2m[36m(pid=44345)[0m     @     0x557a1e234643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44345)[0m     @     0x557a1e1a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44349)[0m     @     0x7f6bc0a654f5 at::Tensor::copy_()
[2m[36m(pid=44349)[0m     @     0x7f6bc2f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44349)[0m     @     0x7f6bc0a654f5 at::Tensor::copy_()
[2m[36m(pid=44349)[0m     @     0x7f6bc6b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44349)[0m     @     0x558c4d54bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44349)[0m     @     0x558c4d4a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44349)[0m     @     0x558c4d531baf _PyEval_EvalCodeWithName
[2m[36m(pid=44349)[0m     @     0x558c4d532a20 method_vectorcall
[2m[36m(pid=44349)[0m     @     0x558c4d4a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44349)[0m     @     0x558c4d531baf _PyEval_EvalCodeWithName
[2m[36m(pid=44349)[0m     @     0x558c4d532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44349)[0m     @     0x558c4d4a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44349)[0m     @     0x558c4d531baf _PyEval_EvalCodeWithName
[2m[36m(pid=44349)[0m     @     0x558c4d532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44349)[0m     @     0x558c4d4a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44349)[0m     @     0x558c4d531baf _PyEval_EvalCodeWithName
[2m[36m(pid=44349)[0m     @     0x558c4d532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44349)[0m     @     0x558c4d4a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44349)[0m     @     0x558c4d531baf _PyEval_EvalCodeWithName
[2m[36m(pid=44349)[0m     @     0x558c4d532643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44349)[0m     @     0x558c4d4a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44330)[0m     @     0x7f86959e54f5 at::Tensor::copy_()
[2m[36m(pid=44330)[0m     @     0x7f869ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44330)[0m     @     0x55dcdb33dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44330)[0m     @     0x55dcdb298b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44330)[0m     @     0x55dcdb323baf _PyEval_EvalCodeWithName
[2m[36m(pid=44330)[0m     @     0x55dcdb324a20 method_vectorcall
[2m[36m(pid=44330)[0m     @     0x55dcdb298bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44330)[0m     @     0x55dcdb323baf _PyEval_EvalCodeWithName
[2m[36m(pid=44330)[0m     @     0x55dcdb324643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44330)[0m     @     0x55dcdb299689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44330)[0m     @     0x55dcdb323baf _PyEval_EvalCodeWithName
[2m[36m(pid=44330)[0m     @     0x55dcdb324643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44330)[0m     @     0x55dcdb299689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44330)[0m     @     0x55dcdb323baf _PyEval_EvalCodeWithName
[2m[36m(pid=44330)[0m     @     0x55dcdb324643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44330)[0m     @     0x55dcdb299689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44330)[0m     @     0x55dcdb323baf _PyEval_EvalCodeWithName
[2m[36m(pid=44330)[0m     @     0x55dcdb324643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44330)[0m     @     0x55dcdb299689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44355)[0m     @     0x7f69e4e0b4f5 at::Tensor::copy_()
[2m[36m(pid=44355)[0m     @     0x7f69e72de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44355)[0m     @     0x7f69e4e0b4f5 at::Tensor::copy_()
[2m[36m(pid=44355)[0m     @     0x7f69eaeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44355)[0m     @     0x55cca6ed8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44355)[0m     @     0x55cca6e33b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44355)[0m     @     0x55cca6ebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44355)[0m     @     0x55cca6ebfa20 method_vectorcall
[2m[36m(pid=44355)[0m     @     0x55cca6e33bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44355)[0m     @     0x55cca6ebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44355)[0m     @     0x55cca6ebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44355)[0m     @     0x55cca6e34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44355)[0m     @     0x55cca6ebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44355)[0m     @     0x55cca6ebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44355)[0m     @     0x55cca6e34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44355)[0m     @     0x55cca6ebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44355)[0m     @     0x55cca6ebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44355)[0m     @     0x55cca6e34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44355)[0m     @     0x55cca6ebebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44355)[0m     @     0x55cca6ebf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44355)[0m     @     0x55cca6e34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44245)[0m     @     0x7fa34ad1dad3 at::TensorIterator::for_each()
[2m[36m(pid=44245)[0m     @     0x7fa34ad1dd91 at::TensorIterator::for_each()
[2m[36m(pid=44245)[0m     @     0x7fa34b600b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44245)[0m     @     0x7fa34b623c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44245)[0m     @     0x7fa34aac5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44302)[0m     @     0x7f2bcff53d91 at::TensorIterator::for_each()
[2m[36m(pid=44302)[0m     @     0x7f2bd0836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44302)[0m     @     0x7f2bd0859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44302)[0m     @     0x7f2bcfcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44302)[0m     @     0x7f2bcfcf9388 at::native::copy_impl()
[2m[36m(pid=44313)[0m     @     0x7f1d935e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=44313)[0m     @     0x7f1d935e4d91 at::TensorIterator::for_each()
[2m[36m(pid=44313)[0m     @     0x7f1d93ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44313)[0m     @     0x7f1d93eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44313)[0m     @     0x7f1d9338ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44313)[0m     @     0x7f1d9338a388 at::native::copy_impl()
[2m[36m(pid=44309)[0m     @     0x7fc3aedda390 (unknown)
[2m[36m(pid=44309)[0m     @     0x7f94aed5ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44309)[0m     @     0x7f94ae4897db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44309)[0m     @     0x7f94ae48c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44309)[0m     @     0x7f94ae48cad3 at::TensorIterator::for_each()
[2m[36m(pid=44265)[0m     @     0x7f0bba9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44265)[0m     @     0x7f0bba957ad3 at::TensorIterator::for_each()
[2m[36m(pid=44265)[0m     @     0x7f0bba957d91 at::TensorIterator::for_each()
[2m[36m(pid=44265)[0m     @     0x7f0bbb23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44265)[0m     @     0x7f0bbb25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44240)[0m     @     0x7fbc67ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44240)[0m     @     0x7fbc67ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=44240)[0m     @     0x7fbc67ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=44240)[0m     @     0x7fbc68785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44312)[0m     @     0x7ecf5607a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44312)[0m     @     0x7ecf5607aad3 at::TensorIterator::for_each()
[2m[36m(pid=44312)[0m     @     0x7ecf5607ad91 at::TensorIterator::for_each()
[2m[36m(pid=44312)[0m     @     0x7ecf5695db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44312)[0m     @     0x7ecf56980c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44324)[0m     @     0x7fb463b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44324)[0m     @     0x7fb463b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=44324)[0m     @     0x7fb463b11d91 at::TensorIterator::for_each()
[2m[36m(pid=44324)[0m     @     0x7fb4643f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44324)[0m     @     0x7fb464417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44353)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44353)[0m *** SIGSEGV (@0x0) received by PID 44353 (TID 0x7fb4ad9aa700) from PID 0; stack trace: ***
[2m[36m(pid=44353)[0m     @     0x7fb4ad583390 (unknown)
[2m[36m(pid=44353)[0m     @     0x7f85ad4e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44353)[0m     @     0x7f85acc0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44353)[0m     @     0x7f85acc118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44276)[0m     @     0x7f7f67c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44276)[0m     @     0x7f7f67c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=44276)[0m     @     0x7f7f67c91d91 at::TensorIterator::for_each()
[2m[36m(pid=44276)[0m     @     0x7f7f68574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44276)[0m     @     0x7f7f68597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44267)[0m PC: @                0x0 (unknown)
[2m[36m(pid=44267)[0m *** SIGSEGV (@0x0) received by PID 44267 (TID 0x7ff4a1367700) from PID 0; stack trace: ***
[2m[36m(pid=44267)[0m     @     0x7ff4a0f40390 (unknown)
[2m[36m(pid=44267)[0m     @     0x7fc5a0ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44267)[0m     @     0x7fc5a05cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44267)[0m     @     0x7fc5a05d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44255)[0m     @     0x7f3e7e7b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44255)[0m     @     0x7f3e7e7b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=44255)[0m     @     0x7f3e7e7b1d91 at::TensorIterator::for_each()
[2m[36m(pid=44255)[0m     @     0x7f3e7f094b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44255)[0m     @     0x7f3e7f0b7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44326)[0m *** SIGSEGV (@0x0) received by PID 44326 (TID 0x7f9bfb0d7700) from PID 0; stack trace: ***
[2m[36m(pid=44326)[0m     @     0x7f9bfacb0390 (unknown)
[2m[36m(pid=44326)[0m     @     0x7f6cfaad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44262)[0m     @     0x7f098e4de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44262)[0m     @     0x7f098e4dead3 at::TensorIterator::for_each()
[2m[36m(pid=44262)[0m     @     0x7f098e4ded91 at::TensorIterator::for_each()
[2m[36m(pid=44262)[0m     @     0x7f098edc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44262)[0m     @     0x7f098ede4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44300)[0m     @     0x7ee0345d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44300)[0m     @     0x7ee0345d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=44300)[0m     @     0x7ee0345d2d91 at::TensorIterator::for_each()
[2m[36m(pid=44300)[0m     @     0x7ee034eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44300)[0m     @     0x7ee034ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44350)[0m     @     0x7fca28074390 (unknown)
[2m[36m(pid=44350)[0m     @     0x7f9b28014f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44350)[0m     @     0x7f9b2773f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44256)[0m     @     0x7f14135398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44256)[0m     @     0x7f1413539ad3 at::TensorIterator::for_each()
[2m[36m(pid=44256)[0m     @     0x7f1413539d91 at::TensorIterator::for_each()
[2m[36m(pid=44256)[0m     @     0x7f1413e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44256)[0m     @     0x7f1413e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44256)[0m     @     0x7f14132e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44256)[0m     @     0x7f14132df388 at::native::copy_impl()
[2m[36m(pid=44338)[0m     @     0x7f1c0b8b95a4 at::native::copy_()
[2m[36m(pid=44338)[0m     @     0x7f1c0bfa44f5 at::Tensor::copy_()
[2m[36m(pid=44338)[0m     @     0x7f1c0e4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44338)[0m     @     0x7f1c0bfa44f5 at::Tensor::copy_()
[2m[36m(pid=44338)[0m     @     0x7f1c1204f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44338)[0m     @     0x55c778bbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44338)[0m     @     0x55c778b1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44338)[0m     @     0x55c778ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44338)[0m     @     0x55c778ba6a20 method_vectorcall
[2m[36m(pid=44338)[0m     @     0x55c778b1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44338)[0m     @     0x55c778ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44338)[0m     @     0x55c778ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44338)[0m     @     0x55c778b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44338)[0m     @     0x55c778ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44338)[0m     @     0x55c778ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44338)[0m     @     0x55c778b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44338)[0m     @     0x55c778ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44338)[0m     @     0x55c778ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44338)[0m     @     0x55c778b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44338)[0m     @     0x55c778ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44338)[0m     @     0x55c778ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44338)[0m     @     0x55c778b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44258)[0m     @     0x7f8f2f223d91 at::TensorIterator::for_each()
[2m[36m(pid=44258)[0m     @     0x7f8f2fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44258)[0m     @     0x7f8f2fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44258)[0m     @     0x7f8f2efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44258)[0m     @     0x7f8f2efc9388 at::native::copy_impl()
[2m[36m(pid=44258)[0m     @     0x7f8f2efcb5a4 at::native::copy_()
[2m[36m(pid=44366)[0m     @     0x7f8836ed7d91 at::TensorIterator::for_each()
[2m[36m(pid=44366)[0m     @     0x7f88377bab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44366)[0m     @     0x7f88377ddc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44366)[0m     @     0x7f8836c7fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44366)[0m     @     0x7f8836c7d388 at::native::copy_impl()
[2m[36m(pid=44366)[0m     @     0x7f8836c7f5a4 at::native::copy_()
[2m[36m(pid=44247)[0m     @     0x7f74dd138ad3 at::TensorIterator::for_each()
[2m[36m(pid=44247)[0m     @     0x7f74dd138d91 at::TensorIterator::for_each()
[2m[36m(pid=44247)[0m     @     0x7f74dda1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44247)[0m     @     0x7f74dda3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44247)[0m     @     0x7f74dcee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44247)[0m     @     0x7f74dcede388 at::native::copy_impl()
[2m[36m(pid=44238)[0m     @     0x7f16a2780ad3 at::TensorIterator::for_each()
[2m[36m(pid=44238)[0m     @     0x7f16a2780d91 at::TensorIterator::for_each()
[2m[36m(pid=44238)[0m     @     0x7f16a3063b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44238)[0m     @     0x7f16a3086c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44238)[0m     @     0x7f16a2528a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44238)[0m     @     0x7f16a2526388 at::native::copy_impl()
[2m[36m(pid=44238)[0m     @     0x7f16a25285a4 at::native::copy_()
[2m[36m(pid=44339)[0m     @     0x7f05eac294f5 at::Tensor::copy_()
[2m[36m(pid=44339)[0m     @     0x7f05f0cd479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44339)[0m     @     0x562f8fac1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44339)[0m     @     0x562f8fa1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44339)[0m     @     0x562f8faa7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44339)[0m     @     0x562f8faa8a20 method_vectorcall
[2m[36m(pid=44339)[0m     @     0x562f8fa1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44339)[0m     @     0x562f8faa7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44339)[0m     @     0x562f8faa8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44339)[0m     @     0x562f8fa1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44339)[0m     @     0x562f8faa7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44339)[0m     @     0x562f8faa8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44339)[0m     @     0x562f8fa1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44339)[0m     @     0x562f8faa7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44339)[0m     @     0x562f8faa8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44339)[0m     @     0x562f8fa1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44339)[0m     @     0x562f8faa7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44339)[0m     @     0x562f8faa8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44339)[0m     @     0x562f8fa1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44335)[0m     @     0x7f3ca7a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44335)[0m     @     0x7f3ca7a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=44335)[0m     @     0x7f3ca7a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=44335)[0m     @     0x7f3ca82efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44335)[0m     @     0x7f3ca8312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44264)[0m     @     0x7f48b85408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44264)[0m     @     0x7f48b8540ad3 at::TensorIterator::for_each()
[2m[36m(pid=44264)[0m     @     0x7f48b8540d91 at::TensorIterator::for_each()
[2m[36m(pid=44264)[0m     @     0x7f48b8e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44264)[0m     @     0x7f48b8e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44264)[0m     @     0x7f48b82e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44308)[0m     @     0x7f11115528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44308)[0m     @     0x7f1111552ad3 at::TensorIterator::for_each()
[2m[36m(pid=44308)[0m     @     0x7f1111552d91 at::TensorIterator::for_each()
[2m[36m(pid=44308)[0m     @     0x7f1111e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44308)[0m     @     0x7f1111e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44308)[0m     @     0x7f11112faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44316)[0m     @     0x7efdf57787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44250)[0m     @     0x7edfda957d91 at::TensorIterator::for_each()
[2m[36m(pid=44250)[0m     @     0x7edfdb23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44250)[0m     @     0x7edfdb25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44250)[0m     @     0x7edfda6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44250)[0m     @     0x7edfda6fd388 at::native::copy_impl()
[2m[36m(pid=44319)[0m     @     0x7f7c2326a390 (unknown)
[2m[36m(pid=44319)[0m     @     0x7f4d231fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44319)[0m     @     0x7f4d229277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44244)[0m     @     0x7f8a1401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=44244)[0m     @     0x7f8a137477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44244)[0m     @     0x7f8a1374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44275)[0m     @     0x7f5f1214fad3 at::TensorIterator::for_each()
[2m[36m(pid=44275)[0m     @     0x7f5f1214fd91 at::TensorIterator::for_each()
[2m[36m(pid=44275)[0m     @     0x7f5f12a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44275)[0m     @     0x7f5f12a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44275)[0m     @     0x7f5f11ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44358)[0m     @     0x7fad6b991ad3 at::TensorIterator::for_each()
[2m[36m(pid=44358)[0m     @     0x7fad6b991d91 at::TensorIterator::for_each()
[2m[36m(pid=44358)[0m     @     0x7fad6c274b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44358)[0m     @     0x7fad6c297c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44358)[0m     @     0x7fad6b739a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44358)[0m     @     0x7fad6b737388 at::native::copy_impl()
[2m[36m(pid=44254)[0m     @     0x7f6072d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=44254)[0m     @     0x7f6073630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44254)[0m     @     0x7f6073653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44254)[0m     @     0x7f6072af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44254)[0m     @     0x7f6072af3388 at::native::copy_impl()
[2m[36m(pid=44239)[0m     @     0x7f7f858688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44239)[0m     @     0x7f7f85868ad3 at::TensorIterator::for_each()
[2m[36m(pid=44239)[0m     @     0x7f7f85868d91 at::TensorIterator::for_each()
[2m[36m(pid=44239)[0m     @     0x7f7f8614bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44249)[0m     @     0x7ef06fe4dd91 at::TensorIterator::for_each()
[2m[36m(pid=44249)[0m     @     0x7ef070730b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44249)[0m     @     0x7ef070753c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44249)[0m     @     0x7ef06fbf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44242)[0m     @     0x7f0db82ffd91 at::TensorIterator::for_each()
[2m[36m(pid=44242)[0m     @     0x7f0db8be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44242)[0m     @     0x7f0db8c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44242)[0m     @     0x7f0db80a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44242)[0m     @     0x7f0db80a5388 at::native::copy_impl()
[2m[36m(pid=44331)[0m     @     0x7f0564269d91 at::TensorIterator::for_each()
[2m[36m(pid=44331)[0m     @     0x7f0564b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44331)[0m     @     0x7f0564b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44331)[0m     @     0x7f0564011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44331)[0m     @     0x7f056400f388 at::native::copy_impl()
[2m[36m(pid=44331)[0m     @     0x7f05640115a4 at::native::copy_()
[2m[36m(pid=44260)[0m     @     0x7f2c4a957d91 at::TensorIterator::for_each()
[2m[36m(pid=44260)[0m     @     0x7f2c4b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44260)[0m     @     0x7f2c4b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44260)[0m     @     0x7f2c4a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44260)[0m     @     0x7f2c4a6fd388 at::native::copy_impl()
[2m[36m(pid=44260)[0m     @     0x7f2c4a6ff5a4 at::native::copy_()
[2m[36m(pid=44314)[0m     @     0x7ed30300cad3 at::TensorIterator::for_each()
[2m[36m(pid=44314)[0m     @     0x7ed30300cd91 at::TensorIterator::for_each()
[2m[36m(pid=44314)[0m     @     0x7ed3038efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44314)[0m     @     0x7ed303912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44314)[0m     @     0x7ed302db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44314)[0m     @     0x7ed302db2388 at::native::copy_impl()
[2m[36m(pid=44322)[0m     @     0x7f9f4374ad91 at::TensorIterator::for_each()
[2m[36m(pid=44322)[0m     @     0x7f9f4402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44322)[0m     @     0x7f9f44050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44322)[0m     @     0x7f9f434f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44322)[0m     @     0x7f9f434f0388 at::native::copy_impl()
[2m[36m(pid=44322)[0m     @     0x7f9f434f25a4 at::native::copy_()
[2m[36m(pid=44307)[0m     @     0x7f7ad8512d91 at::TensorIterator::for_each()
[2m[36m(pid=44307)[0m     @     0x7f7ad8df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44307)[0m     @     0x7f7ad8e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44307)[0m     @     0x7f7ad82baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44307)[0m     @     0x7f7ad82b8388 at::native::copy_impl()
[2m[36m(pid=44307)[0m     @     0x7f7ad82ba5a4 at::native::copy_()
[2m[36m(pid=44257)[0m     @     0x7f19a2c21b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44257)[0m     @     0x7f19a2c44c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44257)[0m     @     0x7f19a20e6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44257)[0m     @     0x7f19a20e4388 at::native::copy_impl()
[2m[36m(pid=44257)[0m     @     0x7f19a20e65a4 at::native::copy_()
[2m[36m(pid=44257)[0m     @     0x7f19a27d14f5 at::Tensor::copy_()
[2m[36m(pid=44311)[0m     @     0x7f9345e7cd91 at::TensorIterator::for_each()
[2m[36m(pid=44311)[0m     @     0x7f934675fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44311)[0m     @     0x7f9346782c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44311)[0m     @     0x7f9345c24a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44311)[0m     @     0x7f9345c22388 at::native::copy_impl()
[2m[36m(pid=44311)[0m     @     0x7f9345c245a4 at::native::copy_()
[2m[36m(pid=44243)[0m     @     0x7f7e183a2d91 at::TensorIterator::for_each()
[2m[36m(pid=44243)[0m     @     0x7f7e18c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44243)[0m     @     0x7f7e18ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44304)[0m     @     0x7f6e5de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=44304)[0m     @     0x7f6e5de38d91 at::TensorIterator::for_each()
[2m[36m(pid=44304)[0m     @     0x7f6e5e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44304)[0m     @     0x7f6e5e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44304)[0m     @     0x7f6e5dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44304)[0m     @     0x7f6e5dbde388 at::native::copy_impl()
[2m[36m(pid=44266)[0m     @     0x7f1b702ffd91 at::TensorIterator::for_each()
[2m[36m(pid=44266)[0m     @     0x7f1b70be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44266)[0m     @     0x7f1b70c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44266)[0m     @     0x7f1b700a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44266)[0m     @     0x7f1b700a5388 at::native::copy_impl()
[2m[36m(pid=44266)[0m     @     0x7f1b700a75a4 at::native::copy_()
[2m[36m(pid=44266)[0m     @     0x7f1b707924f5 at::Tensor::copy_()
[2m[36m(pid=44352)[0m     @     0x7f4635552ad3 at::TensorIterator::for_each()
[2m[36m(pid=44352)[0m     @     0x7f4635552d91 at::TensorIterator::for_each()
[2m[36m(pid=44352)[0m     @     0x7f4635e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44352)[0m     @     0x7f4635e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44352)[0m     @     0x7f46352faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44352)[0m     @     0x7f46352f8388 at::native::copy_impl()
[2m[36m(pid=44317)[0m     @     0x7f204614f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44317)[0m     @     0x7f204614fad3 at::TensorIterator::for_each()
[2m[36m(pid=44317)[0m     @     0x7f204614fd91 at::TensorIterator::for_each()
[2m[36m(pid=44317)[0m     @     0x7f2046a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44317)[0m     @     0x7f2046a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44317)[0m     @     0x7f2045ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44317)[0m     @     0x7f2045ef5388 at::native::copy_impl()
[2m[36m(pid=44354)[0m     @     0x7f0e6ca2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44354)[0m     @     0x7f0e6ca2aad3 at::TensorIterator::for_each()
[2m[36m(pid=44354)[0m     @     0x7f0e6ca2ad91 at::TensorIterator::for_each()
[2m[36m(pid=44354)[0m     @     0x7f0e6d30db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44354)[0m     @     0x7f0e6d330c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44354)[0m     @     0x7f0e6c7d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44274)[0m     @     0x7fca76ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=44274)[0m     @     0x7fca776bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44274)[0m     @     0x7fca776e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44274)[0m     @     0x7fca76b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44274)[0m     @     0x7fca76b82388 at::native::copy_impl()
[2m[36m(pid=44274)[0m     @     0x7fca76b845a4 at::native::copy_()
[2m[36m(pid=44274)[0m     @     0x7fca7726f4f5 at::Tensor::copy_()
[2m[36m(pid=44296)[0m     @     0x7f5034894d91 at::TensorIterator::for_each()
[2m[36m(pid=44296)[0m     @     0x7f5035177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44296)[0m     @     0x7f503519ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44296)[0m     @     0x7f503463ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44296)[0m     @     0x7f503463a388 at::native::copy_impl()
[2m[36m(pid=44296)[0m     @     0x7f503463c5a4 at::native::copy_()
[2m[36m(pid=44372)[0m     @     0x55a67ea5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44372)[0m     @     0x55a67ea5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44372)[0m     @     0x55a67e9d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44372)[0m     @     0x55a67ea5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44372)[0m     @     0x55a67ea5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44372)[0m     @     0x55a67e9d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44372)[0m     @     0x55a67ea5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44372)[0m     @     0x55a67ea5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44372)[0m     @     0x55a67e9d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44241)[0m     @     0x7ef098859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44241)[0m     @     0x7ef097cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44241)[0m     @     0x7ef097cf9388 at::native::copy_impl()
[2m[36m(pid=44241)[0m     @     0x7ef097cfb5a4 at::native::copy_()
[2m[36m(pid=44241)[0m     @     0x7ef0983e64f5 at::Tensor::copy_()
[2m[36m(pid=44332)[0m     @     0x562632bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44332)[0m     @     0x562632c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=44332)[0m     @     0x562632c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44332)[0m     @     0x562632bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44332)[0m     @     0x562632c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=44332)[0m     @     0x562632c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44332)[0m     @     0x562632bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44332)[0m     @     0x562632c54baf _PyEval_EvalCodeWithName
[2m[36m(pid=44332)[0m     @     0x562632c55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44332)[0m     @     0x562632bca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44315)[0m     @     0x7edbc5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=44315)[0m     @     0x7edbcbfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44315)[0m     @     0x564d0da77fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44315)[0m     @     0x564d0d9d2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44315)[0m     @     0x564d0da5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44315)[0m     @     0x564d0da5ea20 method_vectorcall
[2m[36m(pid=44315)[0m     @     0x564d0d9d2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44315)[0m     @     0x564d0da5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44315)[0m     @     0x564d0da5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44315)[0m     @     0x564d0d9d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44315)[0m     @     0x564d0da5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44315)[0m     @     0x564d0da5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44315)[0m     @     0x564d0d9d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44315)[0m     @     0x564d0da5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44315)[0m     @     0x564d0da5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44315)[0m     @     0x564d0d9d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44315)[0m     @     0x564d0da5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44315)[0m     @     0x564d0da5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44315)[0m     @     0x564d0d9d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44269)[0m     @     0x7fbb0616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44269)[0m     @     0x7fbb05610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44269)[0m     @     0x7fbb0560e388 at::native::copy_impl()
[2m[36m(pid=44269)[0m     @     0x7fbb056105a4 at::native::copy_()
[2m[36m(pid=44269)[0m     @     0x7fbb05cfb4f5 at::Tensor::copy_()
[2m[36m(pid=44361)[0m     @     0x7fa71464c4f5 at::Tensor::copy_()
[2m[36m(pid=44361)[0m     @     0x7fa71a6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44361)[0m     @     0x563b41c44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44361)[0m     @     0x563b41b9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44361)[0m     @     0x563b41c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44361)[0m     @     0x563b41c2ba20 method_vectorcall
[2m[36m(pid=44361)[0m     @     0x563b41b9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44361)[0m     @     0x563b41c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44361)[0m     @     0x563b41c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44361)[0m     @     0x563b41ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44361)[0m     @     0x563b41c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44361)[0m     @     0x563b41c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44361)[0m     @     0x563b41ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44361)[0m     @     0x563b41c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44361)[0m     @     0x563b41c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44361)[0m     @     0x563b41ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44361)[0m     @     0x563b41c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44361)[0m     @     0x563b41c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44361)[0m     @     0x563b41ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44334)[0m     @     0x7ef5d2da2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44334)[0m     @     0x7ef5d2da0388 at::native::copy_impl()
[2m[36m(pid=44334)[0m     @     0x7ef5d2da25a4 at::native::copy_()
[2m[36m(pid=44334)[0m     @     0x7ef5d348d4f5 at::Tensor::copy_()
[2m[36m(pid=44334)[0m     @     0x7ef5d59608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44329)[0m     @     0x5614b631c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44329)[0m     @     0x5614b6291689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44329)[0m     @     0x5614b631bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44329)[0m     @     0x5614b631c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44329)[0m     @     0x5614b6291689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x7fb6812fa5a4 at::native::copy_()
[2m[36m(pid=44246)[0m     @     0x7fb6819e54f5 at::Tensor::copy_()
[2m[36m(pid=44246)[0m     @     0x7fb683eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44246)[0m     @     0x7fb6819e54f5 at::Tensor::copy_()
[2m[36m(pid=44297)[0m     @     0x7f426478da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44297)[0m     @     0x7f426478b388 at::native::copy_impl()
[2m[36m(pid=44297)[0m     @     0x7f426478d5a4 at::native::copy_()
[2m[36m(pid=44297)[0m     @     0x7f4264e784f5 at::Tensor::copy_()
[2m[36m(pid=44318)[0m     @     0x7ee76ed11a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44318)[0m     @     0x7ee76ed0f388 at::native::copy_impl()
[2m[36m(pid=44318)[0m     @     0x7ee76ed115a4 at::native::copy_()
[2m[36m(pid=44318)[0m     @     0x7ee76f3fc4f5 at::Tensor::copy_()
[2m[36m(pid=44320)[0m     @     0x7f2a666654f5 at::Tensor::copy_()
[2m[36m(pid=44320)[0m     @     0x7f2a68b388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44320)[0m     @     0x7f2a666654f5 at::Tensor::copy_()
[2m[36m(pid=44320)[0m     @     0x7f2a6c71079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44320)[0m     @     0x561bbf56dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44320)[0m     @     0x561bbf4c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44320)[0m     @     0x561bbf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=44320)[0m     @     0x561bbf554a20 method_vectorcall
[2m[36m(pid=44320)[0m     @     0x561bbf4c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44320)[0m     @     0x561bbf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=44320)[0m     @     0x561bbf554643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44320)[0m     @     0x561bbf4c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44320)[0m     @     0x561bbf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=44320)[0m     @     0x561bbf554643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44320)[0m     @     0x561bbf4c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44320)[0m     @     0x561bbf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=44320)[0m     @     0x561bbf554643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44320)[0m     @     0x561bbf4c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44320)[0m     @     0x561bbf553baf _PyEval_EvalCodeWithName
[2m[36m(pid=44320)[0m     @     0x561bbf554643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44320)[0m     @     0x561bbf4c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44259)[0m     @     0x7ed64a6fd388 at::native::copy_impl()
[2m[36m(pid=44259)[0m     @     0x7ed64a6ff5a4 at::native::copy_()
[2m[36m(pid=44259)[0m     @     0x7ed64adea4f5 at::Tensor::copy_()
[2m[36m(pid=44259)[0m     @     0x7ed64d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44251)[0m     @     0x7f2e0d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44251)[0m     @     0x7f2e0d81f388 at::native::copy_impl()
[2m[36m(pid=44251)[0m     @     0x7f2e0d8215a4 at::native::copy_()
[2m[36m(pid=44251)[0m     @     0x7f2e0df0c4f5 at::Tensor::copy_()
[2m[36m(pid=44251)[0m     @     0x7f2e103df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44346)[0m     @     0x55e93fc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44346)[0m     @     0x55e93fbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44346)[0m     @     0x55e93fc6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44346)[0m     @     0x55e93fc6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44346)[0m     @     0x55e93fbe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x7f697a3695a4 at::native::copy_()
[2m[36m(pid=44252)[0m     @     0x7f697aa544f5 at::Tensor::copy_()
[2m[36m(pid=44252)[0m     @     0x7f697cf278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44252)[0m     @     0x7f697aa544f5 at::Tensor::copy_()
[2m[36m(pid=44245)[0m     @     0x7fa34aac3388 at::native::copy_impl()
[2m[36m(pid=44245)[0m     @     0x7fa34aac55a4 at::native::copy_()
[2m[36m(pid=44245)[0m     @     0x7fa34b1b04f5 at::Tensor::copy_()
[2m[36m(pid=44302)[0m     @     0x7f2bcfcfb5a4 at::native::copy_()
[2m[36m(pid=44302)[0m     @     0x7f2bd03e64f5 at::Tensor::copy_()
[2m[36m(pid=44302)[0m     @     0x7f2bd28b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44313)[0m     @     0x7f1d9338c5a4 at::native::copy_()
[2m[36m(pid=44313)[0m     @     0x7f1d93a774f5 at::Tensor::copy_()
[2m[36m(pid=44313)[0m     @     0x7f1d95f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44309)[0m     @     0x7f94ae48cd91 at::TensorIterator::for_each()
[2m[36m(pid=44309)[0m     @     0x7f94aed6fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44309)[0m     @     0x7f94aed92c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44309)[0m     @     0x7f94ae234a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44265)[0m     @     0x7f0bba6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44265)[0m     @     0x7f0bba6fd388 at::native::copy_impl()
[2m[36m(pid=44265)[0m     @     0x7f0bba6ff5a4 at::native::copy_()
[2m[36m(pid=44240)[0m     @     0x7fbc687a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44240)[0m     @     0x7fbc67c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44240)[0m     @     0x7fbc67c48388 at::native::copy_impl()
[2m[36m(pid=44240)[0m     @     0x7fbc67c4a5a4 at::native::copy_()
[2m[36m(pid=44312)[0m     @     0x7ecf55e22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44312)[0m     @     0x7ecf55e20388 at::native::copy_impl()
[2m[36m(pid=44312)[0m     @     0x7ecf55e225a4 at::native::copy_()
[2m[36m(pid=44324)[0m     @     0x7fb4638b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44324)[0m     @     0x7fb4638b7388 at::native::copy_impl()
[2m[36m(pid=44324)[0m     @     0x7fb4638b95a4 at::native::copy_()
[2m[36m(pid=44353)[0m     @     0x7f85acc11ad3 at::TensorIterator::for_each()
[2m[36m(pid=44353)[0m     @     0x7f85acc11d91 at::TensorIterator::for_each()
[2m[36m(pid=44353)[0m     @     0x7f85ad4f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44276)[0m     @     0x7f7f67a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44276)[0m     @     0x7f7f67a37388 at::native::copy_impl()
[2m[36m(pid=44276)[0m     @     0x7f7f67a395a4 at::native::copy_()
[2m[36m(pid=44276)[0m     @     0x7f7f681244f5 at::Tensor::copy_()
[2m[36m(pid=44267)[0m     @     0x7fc5a05d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=44267)[0m     @     0x7fc5a05d2d91 at::TensorIterator::for_each()
[2m[36m(pid=44267)[0m     @     0x7fc5a0eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44267)[0m     @     0x7fc5a0ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44255)[0m     @     0x7f3e7e559a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44255)[0m     @     0x7f3e7e557388 at::native::copy_impl()
[2m[36m(pid=44255)[0m     @     0x7f3e7e5595a4 at::native::copy_()
[2m[36m(pid=44326)[0m     @     0x7f6cfa1fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=44326)[0m     @     0x7f6cfa1ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44262)[0m     @     0x7f098e286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44262)[0m     @     0x7f098e284388 at::native::copy_impl()
[2m[36m(pid=44262)[0m     @     0x7f098e2865a4 at::native::copy_()
[2m[36m(pid=44300)[0m     @     0x7ee03437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44300)[0m     @     0x7ee034378388 at::native::copy_impl()
[2m[36m(pid=44300)[0m     @     0x7ee03437a5a4 at::native::copy_()
[2m[36m(pid=44350)[0m     @     0x7f9b277428f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44256)[0m     @     0x7f14132e15a4 at::native::copy_()
[2m[36m(pid=44256)[0m     @     0x7f14139cc4f5 at::Tensor::copy_()
[2m[36m(pid=44256)[0m     @     0x7f1415e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44258)[0m     @     0x7f8f2f6b64f5 at::Tensor::copy_()
[2m[36m(pid=44258)[0m     @     0x7f8f31b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44366)[0m     @     0x7f883736a4f5 at::Tensor::copy_()
[2m[36m(pid=44366)[0m     @     0x7f883983d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44247)[0m     @     0x7f74dcee05a4 at::native::copy_()
[2m[36m(pid=44247)[0m     @     0x7f74dd5cb4f5 at::Tensor::copy_()
[2m[36m(pid=44247)[0m     @     0x7f74dfa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44238)[0m     @     0x7f16a2c134f5 at::Tensor::copy_()
[2m[36m(pid=44238)[0m     @     0x7f16a50e68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44335)[0m     @     0x7f3ca77b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44335)[0m     @     0x7f3ca77b2388 at::native::copy_impl()
[2m[36m(pid=44335)[0m     @     0x7f3ca77b45a4 at::native::copy_()
[2m[36m(pid=44335)[0m     @     0x7f3ca7e9f4f5 at::Tensor::copy_()
[2m[36m(pid=44264)[0m     @     0x7f48b82e6388 at::native::copy_impl()
[2m[36m(pid=44264)[0m     @     0x7f48b82e85a4 at::native::copy_()
[2m[36m(pid=44264)[0m     @     0x7f48b89d34f5 at::Tensor::copy_()
[2m[36m(pid=44264)[0m     @     0x7f48baea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44308)[0m     @     0x7f11112f8388 at::native::copy_impl()
[2m[36m(pid=44308)[0m     @     0x7f11112fa5a4 at::native::copy_()
[2m[36m(pid=44308)[0m     @     0x7f11119e54f5 at::Tensor::copy_()
[2m[36m(pid=44308)[0m     @     0x7f1113eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44316)[0m     @     0x7efdf577b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44250)[0m     @     0x7edfda6ff5a4 at::native::copy_()
[2m[36m(pid=44250)[0m     @     0x7edfdadea4f5 at::Tensor::copy_()
[2m[36m(pid=44250)[0m     @     0x7edfdd2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44250)[0m     @     0x7edfdadea4f5 at::Tensor::copy_()
[2m[36m(pid=44319)[0m     @     0x7f4d2292a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=44319)[0m     @     0x7f4d2292aad3 at::TensorIterator::for_each()
[2m[36m(pid=44244)[0m     @     0x7f8a1374aad3 at::TensorIterator::for_each()
[2m[36m(pid=44244)[0m     @     0x7f8a1374ad91 at::TensorIterator::for_each()
[2m[36m(pid=44244)[0m     @     0x7f8a1402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44244)[0m     @     0x7f8a14050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44275)[0m     @     0x7f5f11ef5388 at::native::copy_impl()
[2m[36m(pid=44275)[0m     @     0x7f5f11ef75a4 at::native::copy_()
[2m[36m(pid=44275)[0m     @     0x7f5f125e24f5 at::Tensor::copy_()
[2m[36m(pid=44275)[0m     @     0x7f5f14ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44358)[0m     @     0x7fad6b7395a4 at::native::copy_()
[2m[36m(pid=44358)[0m     @     0x7fad6be244f5 at::Tensor::copy_()
[2m[36m(pid=44358)[0m     @     0x7fad6e2f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44254)[0m     @     0x7f6072af55a4 at::native::copy_()
[2m[36m(pid=44254)[0m     @     0x7f60731e04f5 at::Tensor::copy_()
[2m[36m(pid=44254)[0m     @     0x7f60756b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44254)[0m     @     0x7f60731e04f5 at::Tensor::copy_()
[2m[36m(pid=44239)[0m     @     0x7f7f8616ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44239)[0m     @     0x7f7f85610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44239)[0m     @     0x7f7f8560e388 at::native::copy_impl()
[2m[36m(pid=44239)[0m     @     0x7f7f856105a4 at::native::copy_()
[2m[36m(pid=44249)[0m     @     0x7ef06fbf3388 at::native::copy_impl()
[2m[36m(pid=44249)[0m     @     0x7ef06fbf55a4 at::native::copy_()
[2m[36m(pid=44249)[0m     @     0x7ef0702e04f5 at::Tensor::copy_()
[2m[36m(pid=44249)[0m     @     0x7ef0727b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44242)[0m     @     0x7f0db80a75a4 at::native::copy_()
[2m[36m(pid=44242)[0m     @     0x7f0db87924f5 at::Tensor::copy_()
[2m[36m(pid=44242)[0m     @     0x7f0dbac658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44331)[0m     @     0x7f05646fc4f5 at::Tensor::copy_()
[2m[36m(pid=44331)[0m     @     0x7f0566bcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44260)[0m     @     0x7f2c4adea4f5 at::Tensor::copy_()
[2m[36m(pid=44260)[0m     @     0x7f2c4d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44314)[0m     @     0x7ed302db45a4 at::native::copy_()
[2m[36m(pid=44314)[0m     @     0x7ed30349f4f5 at::Tensor::copy_()
[2m[36m(pid=44314)[0m     @     0x7ed3059728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44322)[0m     @     0x7f9f43bdd4f5 at::Tensor::copy_()
[2m[36m(pid=44322)[0m     @     0x7f9f460b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44307)[0m     @     0x7f7ad89a54f5 at::Tensor::copy_()
[2m[36m(pid=44307)[0m     @     0x7f7adae788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44257)[0m     @     0x7f19a4ca48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44257)[0m     @     0x7f19a27d14f5 at::Tensor::copy_()
[2m[36m(pid=44257)[0m     @     0x7f19a887c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44257)[0m     @     0x5653e1aeffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44257)[0m     @     0x5653e1a4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44257)[0m     @     0x5653e1ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44257)[0m     @     0x5653e1ad6a20 method_vectorcall
[2m[36m(pid=44257)[0m     @     0x5653e1a4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44257)[0m     @     0x5653e1ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44257)[0m     @     0x5653e1ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44257)[0m     @     0x5653e1a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44257)[0m     @     0x5653e1ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44257)[0m     @     0x5653e1ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44257)[0m     @     0x5653e1a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44257)[0m     @     0x5653e1ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44257)[0m     @     0x5653e1ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44257)[0m     @     0x5653e1a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44257)[0m     @     0x5653e1ad5baf _PyEval_EvalCodeWithName
[2m[36m(pid=44257)[0m     @     0x5653e1ad6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44257)[0m     @     0x5653e1a4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44311)[0m     @     0x7f934630f4f5 at::Tensor::copy_()
[2m[36m(pid=44311)[0m     @     0x7f93487e28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44311)[0m     @     0x7f934630f4f5 at::Tensor::copy_()
[2m[36m(pid=44311)[0m     @     0x7f934c3ba79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44311)[0m     @     0x55bbd8a8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44311)[0m     @     0x55bbd89e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44243)[0m     @     0x7f7e1814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44243)[0m     @     0x7f7e18148388 at::native::copy_impl()
[2m[36m(pid=44304)[0m     @     0x7f6e5dbe05a4 at::native::copy_()
[2m[36m(pid=44304)[0m     @     0x7f6e5e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=44304)[0m     @     0x7f6e6079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44266)[0m     @     0x7f1b72c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44266)[0m     @     0x7f1b707924f5 at::Tensor::copy_()
[2m[36m(pid=44266)[0m     @     0x7f1b7683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44266)[0m     @     0x556373dbefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44266)[0m     @     0x556373d19b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44266)[0m     @     0x556373da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44266)[0m     @     0x556373da5a20 method_vectorcall
[2m[36m(pid=44266)[0m     @     0x556373d19bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44266)[0m     @     0x556373da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44266)[0m     @     0x556373da5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44266)[0m     @     0x556373d1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44266)[0m     @     0x556373da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44266)[0m     @     0x556373da5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44266)[0m     @     0x556373d1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44266)[0m     @     0x556373da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44266)[0m     @     0x556373da5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44266)[0m     @     0x556373d1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44266)[0m     @     0x556373da4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44352)[0m     @     0x7f46352fa5a4 at::native::copy_()
[2m[36m(pid=44352)[0m     @     0x7f46359e54f5 at::Tensor::copy_()
[2m[36m(pid=44317)[0m     @     0x7f2045ef75a4 at::native::copy_()
[2m[36m(pid=44354)[0m     @     0x7f0e6c7d0388 at::native::copy_impl()
[2m[36m(pid=44354)[0m     @     0x7f0e6c7d25a4 at::native::copy_()
[2m[36m(pid=44274)[0m     @     0x7fca797428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44274)[0m     @     0x7fca7726f4f5 at::Tensor::copy_()
[2m[36m(pid=44274)[0m     @     0x7fca7d31a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44274)[0m     @     0x55a80351afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44274)[0m     @     0x55a803475b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44274)[0m     @     0x55a803500baf _PyEval_EvalCodeWithName
[2m[36m(pid=44274)[0m     @     0x55a803501a20 method_vectorcall
[2m[36m(pid=44274)[0m     @     0x55a803475bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44274)[0m     @     0x55a803500baf _PyEval_EvalCodeWithName
[2m[36m(pid=44274)[0m     @     0x55a803501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44274)[0m     @     0x55a803476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44274)[0m     @     0x55a803500baf _PyEval_EvalCodeWithName
[2m[36m(pid=44274)[0m     @     0x55a803501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44274)[0m     @     0x55a803476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44274)[0m     @     0x55a803500baf _PyEval_EvalCodeWithName
[2m[36m(pid=44274)[0m     @     0x55a803501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44274)[0m     @     0x55a803476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44274)[0m     @     0x55a803500baf _PyEval_EvalCodeWithName
[2m[36m(pid=44274)[0m     @     0x55a803501643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44274)[0m     @     0x55a803476689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44296)[0m     @     0x7f5034d274f5 at::Tensor::copy_()
[2m[36m(pid=44296)[0m     @     0x7f50371fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44296)[0m     @     0x7f5034d274f5 at::Tensor::copy_()
[2m[36m(pid=44241)[0m     @     0x7ef09a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44241)[0m     @     0x7ef0983e64f5 at::Tensor::copy_()
[2m[36m(pid=44241)[0m     @     0x7ef09e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44241)[0m     @     0x55adad7b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44241)[0m     @     0x55adad711b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44241)[0m     @     0x55adad79cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44241)[0m     @     0x55adad79da20 method_vectorcall
[2m[36m(pid=44241)[0m     @     0x55adad711bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44241)[0m     @     0x55adad79cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44241)[0m     @     0x55adad79d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44241)[0m     @     0x55adad712689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44241)[0m     @     0x55adad79cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44241)[0m     @     0x55adad79d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44241)[0m     @     0x55adad712689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44241)[0m     @     0x55adad79cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44241)[0m     @     0x55adad79d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44241)[0m     @     0x55adad712689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44241)[0m     @     0x55adad79cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44241)[0m     @     0x55adad79d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44241)[0m     @     0x55adad712689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44269)[0m     @     0x7fbb081ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44269)[0m     @     0x7fbb05cfb4f5 at::Tensor::copy_()
[2m[36m(pid=44269)[0m     @     0x7fbb0bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44269)[0m     @     0x560a56c6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44269)[0m     @     0x560a56bc5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44269)[0m     @     0x560a56c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=44269)[0m     @     0x560a56c51a20 method_vectorcall
[2m[36m(pid=44269)[0m     @     0x560a56bc5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44269)[0m     @     0x560a56c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=44269)[0m     @     0x560a56c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44269)[0m     @     0x560a56bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44269)[0m     @     0x560a56c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=44269)[0m     @     0x560a56c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44269)[0m     @     0x560a56bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44269)[0m     @     0x560a56c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=44269)[0m     @     0x560a56c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44269)[0m     @     0x560a56bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44269)[0m     @     0x560a56c50baf _PyEval_EvalCodeWithName
[2m[36m(pid=44269)[0m     @     0x560a56c51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44269)[0m     @     0x560a56bc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44334)[0m     @     0x7ef5d348d4f5 at::Tensor::copy_()
[2m[36m(pid=44334)[0m     @     0x7ef5ec28379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44334)[0m     @     0x55c4c4fb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44334)[0m     @     0x55c4c4f0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44334)[0m     @     0x55c4c4f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44334)[0m     @     0x55c4c4f9ba20 method_vectorcall
[2m[36m(pid=44334)[0m     @     0x55c4c4f0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44334)[0m     @     0x55c4c4f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44334)[0m     @     0x55c4c4f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44334)[0m     @     0x55c4c4f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44334)[0m     @     0x55c4c4f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44334)[0m     @     0x55c4c4f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44334)[0m     @     0x55c4c4f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44334)[0m     @     0x55c4c4f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44334)[0m     @     0x55c4c4f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44334)[0m     @     0x55c4c4f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44334)[0m     @     0x55c4c4f9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44334)[0m     @     0x55c4c4f9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44334)[0m     @     0x55c4c4f10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x7fb687a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44246)[0m     @     0x5613cf8a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44246)[0m     @     0x5613cf7fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x5613cf886baf _PyEval_EvalCodeWithName
[2m[36m(pid=44246)[0m     @     0x5613cf887a20 method_vectorcall
[2m[36m(pid=44246)[0m     @     0x5613cf7fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x5613cf886baf _PyEval_EvalCodeWithName
[2m[36m(pid=44246)[0m     @     0x5613cf887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44246)[0m     @     0x5613cf7fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x5613cf886baf _PyEval_EvalCodeWithName
[2m[36m(pid=44246)[0m     @     0x5613cf887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44246)[0m     @     0x5613cf7fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x5613cf886baf _PyEval_EvalCodeWithName
[2m[36m(pid=44246)[0m     @     0x5613cf887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44246)[0m     @     0x5613cf7fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44246)[0m     @     0x5613cf886baf _PyEval_EvalCodeWithName
[2m[36m(pid=44246)[0m     @     0x5613cf887643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44246)[0m     @     0x5613cf7fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44297)[0m     @     0x7f426734b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44297)[0m     @     0x7f4264e784f5 at::Tensor::copy_()
[2m[36m(pid=44297)[0m     @     0x7f426af2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44297)[0m     @     0x562539c7bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44297)[0m     @     0x562539bd6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44297)[0m     @     0x562539c61baf _PyEval_EvalCodeWithName
[2m[36m(pid=44297)[0m     @     0x562539c62a20 method_vectorcall
[2m[36m(pid=44297)[0m     @     0x562539bd6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44297)[0m     @     0x562539c61baf _PyEval_EvalCodeWithName
[2m[36m(pid=44297)[0m     @     0x562539c62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44297)[0m     @     0x562539bd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44297)[0m     @     0x562539c61baf _PyEval_EvalCodeWithName
[2m[36m(pid=44297)[0m     @     0x562539c62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44297)[0m     @     0x562539bd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44297)[0m     @     0x562539c61baf _PyEval_EvalCodeWithName
[2m[36m(pid=44297)[0m     @     0x562539c62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44297)[0m     @     0x562539bd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44297)[0m     @     0x562539c61baf _PyEval_EvalCodeWithName
[2m[36m(pid=44297)[0m     @     0x562539c62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44297)[0m     @     0x562539bd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44318)[0m     @     0x7ee7718cf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44318)[0m     @     0x7ee76f3fc4f5 at::Tensor::copy_()
[2m[36m(pid=44318)[0m     @     0x7ee7754a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44318)[0m     @     0x563541d9ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44318)[0m     @     0x563541cfab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44318)[0m     @     0x563541d85baf _PyEval_EvalCodeWithName
[2m[36m(pid=44318)[0m     @     0x563541d86a20 method_vectorcall
[2m[36m(pid=44318)[0m     @     0x563541cfabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44318)[0m     @     0x563541d85baf _PyEval_EvalCodeWithName
[2m[36m(pid=44318)[0m     @     0x563541d86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44318)[0m     @     0x563541cfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44318)[0m     @     0x563541d85baf _PyEval_EvalCodeWithName
[2m[36m(pid=44318)[0m     @     0x563541d86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44318)[0m     @     0x563541cfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44318)[0m     @     0x563541d85baf _PyEval_EvalCodeWithName
[2m[36m(pid=44318)[0m     @     0x563541d86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44318)[0m     @     0x563541cfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44318)[0m     @     0x563541d85baf _PyEval_EvalCodeWithName
[2m[36m(pid=44318)[0m     @     0x563541d86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44318)[0m     @     0x563541cfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44259)[0m     @     0x7ed64adea4f5 at::Tensor::copy_()
[2m[36m(pid=44259)[0m     @     0x7ed650e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44259)[0m     @     0x55780ba0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44259)[0m     @     0x55780b966b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44259)[0m     @     0x55780b9f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44259)[0m     @     0x55780b9f2a20 method_vectorcall
[2m[36m(pid=44259)[0m     @     0x55780b966bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44259)[0m     @     0x55780b9f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44259)[0m     @     0x55780b9f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44259)[0m     @     0x55780b967689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44259)[0m     @     0x55780b9f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44259)[0m     @     0x55780b9f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44259)[0m     @     0x55780b967689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44259)[0m     @     0x55780b9f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44259)[0m     @     0x55780b9f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44259)[0m     @     0x55780b967689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44259)[0m     @     0x55780b9f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44259)[0m     @     0x55780b9f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44259)[0m     @     0x55780b967689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44251)[0m     @     0x7f2e0df0c4f5 at::Tensor::copy_()
[2m[36m(pid=44251)[0m     @     0x7f2e13fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44251)[0m     @     0x556f6b874fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44251)[0m     @     0x556f6b7cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44251)[0m     @     0x556f6b85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44251)[0m     @     0x556f6b85ba20 method_vectorcall
[2m[36m(pid=44251)[0m     @     0x556f6b7cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44251)[0m     @     0x556f6b85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44251)[0m     @     0x556f6b85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44251)[0m     @     0x556f6b7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44251)[0m     @     0x556f6b85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44251)[0m     @     0x556f6b85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44251)[0m     @     0x556f6b7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44251)[0m     @     0x556f6b85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44251)[0m     @     0x556f6b85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44251)[0m     @     0x556f6b7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44251)[0m     @     0x556f6b85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44251)[0m     @     0x556f6b85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44251)[0m     @     0x556f6b7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x7f6980aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44252)[0m     @     0x557a8f518fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44252)[0m     @     0x557a8f473b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x557a8f4febaf _PyEval_EvalCodeWithName
[2m[36m(pid=44252)[0m     @     0x557a8f4ffa20 method_vectorcall
[2m[36m(pid=44252)[0m     @     0x557a8f473bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x557a8f4febaf _PyEval_EvalCodeWithName
[2m[36m(pid=44252)[0m     @     0x557a8f4ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44252)[0m     @     0x557a8f474689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x557a8f4febaf _PyEval_EvalCodeWithName
[2m[36m(pid=44252)[0m     @     0x557a8f4ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44252)[0m     @     0x557a8f474689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x557a8f4febaf _PyEval_EvalCodeWithName
[2m[36m(pid=44252)[0m     @     0x557a8f4ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44252)[0m     @     0x557a8f474689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44252)[0m     @     0x557a8f4febaf _PyEval_EvalCodeWithName
[2m[36m(pid=44252)[0m     @     0x557a8f4ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44252)[0m     @     0x557a8f474689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44245)[0m     @     0x7fa34d6838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44245)[0m     @     0x7fa34b1b04f5 at::Tensor::copy_()
[2m[36m(pid=44245)[0m     @     0x7fa35125b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44245)[0m     @     0x5632f5031fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44245)[0m     @     0x5632f4f8cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44245)[0m     @     0x5632f5017baf _PyEval_EvalCodeWithName
[2m[36m(pid=44245)[0m     @     0x5632f5018a20 method_vectorcall
[2m[36m(pid=44245)[0m     @     0x5632f4f8cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44245)[0m     @     0x5632f5017baf _PyEval_EvalCodeWithName
[2m[36m(pid=44245)[0m     @     0x5632f5018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44245)[0m     @     0x5632f4f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44245)[0m     @     0x5632f5017baf _PyEval_EvalCodeWithName
[2m[36m(pid=44245)[0m     @     0x5632f5018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44245)[0m     @     0x5632f4f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44245)[0m     @     0x5632f5017baf _PyEval_EvalCodeWithName
[2m[36m(pid=44245)[0m     @     0x5632f5018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44245)[0m     @     0x5632f4f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44245)[0m     @     0x5632f5017baf _PyEval_EvalCodeWithName
[2m[36m(pid=44245)[0m     @     0x5632f5018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44245)[0m     @     0x5632f4f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44302)[0m     @     0x7f2bd03e64f5 at::Tensor::copy_()
[2m[36m(pid=44302)[0m     @     0x7f2bd649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44302)[0m     @     0x55a282f35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44302)[0m     @     0x55a282e90b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44302)[0m     @     0x55a282f1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44302)[0m     @     0x55a282f1ca20 method_vectorcall
[2m[36m(pid=44302)[0m     @     0x55a282e90bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44302)[0m     @     0x55a282f1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44302)[0m     @     0x55a282f1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44302)[0m     @     0x55a282e91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44302)[0m     @     0x55a282f1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44302)[0m     @     0x55a282f1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44302)[0m     @     0x55a282e91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44302)[0m     @     0x55a282f1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44302)[0m     @     0x55a282f1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44302)[0m     @     0x55a282e91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44302)[0m     @     0x55a282f1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44302)[0m     @     0x55a282f1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44302)[0m     @     0x55a282e91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44313)[0m     @     0x7f1d93a774f5 at::Tensor::copy_()
[2m[36m(pid=44313)[0m     @     0x7f1d99b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44313)[0m     @     0x55cb868a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44313)[0m     @     0x55cb86801b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44313)[0m     @     0x55cb8688cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44313)[0m     @     0x55cb8688da20 method_vectorcall
[2m[36m(pid=44313)[0m     @     0x55cb86801bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44313)[0m     @     0x55cb8688cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44313)[0m     @     0x55cb8688d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44313)[0m     @     0x55cb86802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44313)[0m     @     0x55cb8688cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44313)[0m     @     0x55cb8688d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44313)[0m     @     0x55cb86802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44313)[0m     @     0x55cb8688cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44313)[0m     @     0x55cb8688d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44313)[0m     @     0x55cb86802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44313)[0m     @     0x55cb8688cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44313)[0m     @     0x55cb8688d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44313)[0m     @     0x55cb86802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44309)[0m     @     0x7f94ae232388 at::native::copy_impl()
[2m[36m(pid=44309)[0m     @     0x7f94ae2345a4 at::native::copy_()
[2m[36m(pid=44309)[0m     @     0x7f94ae91f4f5 at::Tensor::copy_()
[2m[36m(pid=44309)[0m     @     0x7f94b0df28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44265)[0m     @     0x7f0bbadea4f5 at::Tensor::copy_()
[2m[36m(pid=44265)[0m     @     0x7f0bbd2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44265)[0m     @     0x7f0bbadea4f5 at::Tensor::copy_()
[2m[36m(pid=44265)[0m     @     0x7f0bc0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44265)[0m     @     0x562125469fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44265)[0m     @     0x5621253c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44265)[0m     @     0x56212544fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44265)[0m     @     0x562125450a20 method_vectorcall
[2m[36m(pid=44265)[0m     @     0x5621253c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44265)[0m     @     0x56212544fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44265)[0m     @     0x562125450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44265)[0m     @     0x5621253c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44265)[0m     @     0x56212544fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44265)[0m     @     0x562125450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44265)[0m     @     0x5621253c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44265)[0m     @     0x56212544fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44265)[0m     @     0x562125450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44265)[0m     @     0x5621253c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44265)[0m     @     0x56212544fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44265)[0m     @     0x562125450643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44265)[0m     @     0x5621253c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44240)[0m     @     0x7fbc683354f5 at::Tensor::copy_()
[2m[36m(pid=44240)[0m     @     0x7fbc6a8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44240)[0m     @     0x7fbc683354f5 at::Tensor::copy_()
[2m[36m(pid=44240)[0m     @     0x7fbc6e3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44240)[0m     @     0x563eed24cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44240)[0m     @     0x563eed1a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44240)[0m     @     0x563eed232baf _PyEval_EvalCodeWithName
[2m[36m(pid=44240)[0m     @     0x563eed233a20 method_vectorcall
[2m[36m(pid=44240)[0m     @     0x563eed1a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44240)[0m     @     0x563eed232baf _PyEval_EvalCodeWithName
[2m[36m(pid=44240)[0m     @     0x563eed233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44240)[0m     @     0x563eed1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44240)[0m     @     0x563eed232baf _PyEval_EvalCodeWithName
[2m[36m(pid=44240)[0m     @     0x563eed233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44240)[0m     @     0x563eed1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44240)[0m     @     0x563eed232baf _PyEval_EvalCodeWithName
[2m[36m(pid=44240)[0m     @     0x563eed233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44240)[0m     @     0x563eed1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44240)[0m     @     0x563eed232baf _PyEval_EvalCodeWithName
[2m[36m(pid=44240)[0m     @     0x563eed233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44240)[0m     @     0x563eed1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44312)[0m     @     0x7ecf5650d4f5 at::Tensor::copy_()
[2m[36m(pid=44312)[0m     @     0x7ecf589e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44324)[0m     @     0x7fb463fa44f5 at::Tensor::copy_()
[2m[36m(pid=44324)[0m     @     0x7fb4664778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44324)[0m     @     0x7fb463fa44f5 at::Tensor::copy_()
[2m[36m(pid=44324)[0m     @     0x7fb46a04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44324)[0m     @     0x55c8f062ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44324)[0m     @     0x55c8f058ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44324)[0m     @     0x55c8f0615baf _PyEval_EvalCodeWithName
[2m[36m(pid=44324)[0m     @     0x55c8f0616a20 method_vectorcall
[2m[36m(pid=44324)[0m     @     0x55c8f058abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44324)[0m     @     0x55c8f0615baf _PyEval_EvalCodeWithName
[2m[36m(pid=44324)[0m     @     0x55c8f0616643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44324)[0m     @     0x55c8f058b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44324)[0m     @     0x55c8f0615baf _PyEval_EvalCodeWithName
[2m[36m(pid=44324)[0m     @     0x55c8f0616643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44324)[0m     @     0x55c8f058b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44324)[0m     @     0x55c8f0615baf _PyEval_EvalCodeWithName
[2m[36m(pid=44324)[0m     @     0x55c8f0616643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44324)[0m     @     0x55c8f058b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44324)[0m     @     0x55c8f0615baf _PyEval_EvalCodeWithName
[2m[36m(pid=44324)[0m     @     0x55c8f0616643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44324)[0m     @     0x55c8f058b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44353)[0m     @     0x7f85ad517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44353)[0m     @     0x7f85ac9b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44353)[0m     @     0x7f85ac9b7388 at::native::copy_impl()
[2m[36m(pid=44353)[0m     @     0x7f85ac9b95a4 at::native::copy_()
[2m[36m(pid=44276)[0m     @     0x7f7f6a5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44276)[0m     @     0x7f7f681244f5 at::Tensor::copy_()
[2m[36m(pid=44276)[0m     @     0x7f7f6e1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44276)[0m     @     0x556cfcbf6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44276)[0m     @     0x556cfcb51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44276)[0m     @     0x556cfcbdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44276)[0m     @     0x556cfcbdda20 method_vectorcall
[2m[36m(pid=44276)[0m     @     0x556cfcb51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44276)[0m     @     0x556cfcbdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44276)[0m     @     0x556cfcbdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44276)[0m     @     0x556cfcb52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44276)[0m     @     0x556cfcbdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44276)[0m     @     0x556cfcbdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44276)[0m     @     0x556cfcb52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44276)[0m     @     0x556cfcbdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44276)[0m     @     0x556cfcbdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44276)[0m     @     0x556cfcb52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44276)[0m     @     0x556cfcbdcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44276)[0m     @     0x556cfcbdd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44276)[0m     @     0x556cfcb52689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:44:18,238	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=44267)[0m     @     0x7fc5a037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44267)[0m     @     0x7fc5a0378388 at::native::copy_impl()
[2m[36m(pid=44267)[0m     @     0x7fc5a037a5a4 at::native::copy_()
[2m[36m(pid=44255)[0m     @     0x7f3e7ec444f5 at::Tensor::copy_()
[2m[36m(pid=44255)[0m     @     0x7f3e811178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44255)[0m     @     0x7f3e7ec444f5 at::Tensor::copy_()
[2m[36m(pid=44255)[0m     @     0x7f3e84cef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44255)[0m     @     0x559a9ff60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44255)[0m     @     0x559a9febbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44255)[0m     @     0x559a9ff46baf _PyEval_EvalCodeWithName
[2m[36m(pid=44255)[0m     @     0x559a9ff47a20 method_vectorcall
[2m[36m(pid=44255)[0m     @     0x559a9febbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44255)[0m     @     0x559a9ff46baf _PyEval_EvalCodeWithName
[2m[36m(pid=44255)[0m     @     0x559a9ff47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44255)[0m     @     0x559a9febc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44255)[0m     @     0x559a9ff46baf _PyEval_EvalCodeWithName
[2m[36m(pid=44255)[0m     @     0x559a9ff47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44255)[0m     @     0x559a9febc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44255)[0m     @     0x559a9ff46baf _PyEval_EvalCodeWithName
[2m[36m(pid=44255)[0m     @     0x559a9ff47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44255)[0m     @     0x559a9febc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44255)[0m     @     0x559a9ff46baf _PyEval_EvalCodeWithName
[2m[36m(pid=44255)[0m     @     0x559a9ff47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44255)[0m     @     0x559a9febc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x7f6cfa1ffad3 at::TensorIterator::for_each()
[2m[36m(pid=44326)[0m     @     0x7f6cfa1ffd91 at::TensorIterator::for_each()
[2m[36m(pid=44326)[0m     @     0x7f6cfaae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44326)[0m     @     0x7f6cfab05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44326)[0m     @     0x7f6cf9fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44326)[0m     @     0x7f6cf9fa5388 at::native::copy_impl()
[2m[36m(pid=44262)[0m     @     0x7f098e9714f5 at::Tensor::copy_()
[2m[36m(pid=44262)[0m     @     0x7f0990e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44262)[0m     @     0x7f098e9714f5 at::Tensor::copy_()
[2m[36m(pid=44262)[0m     @     0x7f0994a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44262)[0m     @     0x562f4b402fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44262)[0m     @     0x562f4b35db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44262)[0m     @     0x562f4b3e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44262)[0m     @     0x562f4b3e9a20 method_vectorcall
[2m[36m(pid=44262)[0m     @     0x562f4b35dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44262)[0m     @     0x562f4b3e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44262)[0m     @     0x562f4b3e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44262)[0m     @     0x562f4b35e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44262)[0m     @     0x562f4b3e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44262)[0m     @     0x562f4b3e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44262)[0m     @     0x562f4b35e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44262)[0m     @     0x562f4b3e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44262)[0m     @     0x562f4b3e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44262)[0m     @     0x562f4b35e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44262)[0m     @     0x562f4b3e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44262)[0m     @     0x562f4b3e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44262)[0m     @     0x562f4b35e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44300)[0m     @     0x7ee034a654f5 at::Tensor::copy_()
[2m[36m(pid=44300)[0m     @     0x7ee036f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44300)[0m     @     0x7ee034a654f5 at::Tensor::copy_()
[2m[36m(pid=44300)[0m     @     0x7ee03ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44300)[0m     @     0x55b398fc9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44300)[0m     @     0x55b398f24b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44300)[0m     @     0x55b398fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44300)[0m     @     0x55b398fb0a20 method_vectorcall
[2m[36m(pid=44300)[0m     @     0x55b398f24bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44300)[0m     @     0x55b398fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44300)[0m     @     0x55b398fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44300)[0m     @     0x55b398f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44300)[0m     @     0x55b398fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44300)[0m     @     0x55b398fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44300)[0m     @     0x55b398f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44300)[0m     @     0x55b398fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44300)[0m     @     0x55b398fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44300)[0m     @     0x55b398f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44300)[0m     @     0x55b398fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44300)[0m     @     0x55b398fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44300)[0m     @     0x55b398f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44350)[0m     @     0x7f9b27742ad3 at::TensorIterator::for_each()
[2m[36m(pid=44350)[0m     @     0x7f9b27742d91 at::TensorIterator::for_each()
[2m[36m(pid=44350)[0m     @     0x7f9b28025b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44350)[0m     @     0x7f9b28048c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44256)[0m     @     0x7f14139cc4f5 at::Tensor::copy_()
[2m[36m(pid=44256)[0m     @     0x7f1419a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44256)[0m     @     0x562d0e6bbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44256)[0m     @     0x562d0e616b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44256)[0m     @     0x562d0e6a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44256)[0m     @     0x562d0e6a2a20 method_vectorcall
[2m[36m(pid=44256)[0m     @     0x562d0e616bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44256)[0m     @     0x562d0e6a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44256)[0m     @     0x562d0e6a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44256)[0m     @     0x562d0e617689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44256)[0m     @     0x562d0e6a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44256)[0m     @     0x562d0e6a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44256)[0m     @     0x562d0e617689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44256)[0m     @     0x562d0e6a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44256)[0m     @     0x562d0e6a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44256)[0m     @     0x562d0e617689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44256)[0m     @     0x562d0e6a1baf _PyEval_EvalCodeWithName
[2m[36m(pid=44256)[0m     @     0x562d0e6a2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44256)[0m     @     0x562d0e617689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44258)[0m     @     0x7f8f2f6b64f5 at::Tensor::copy_()
[2m[36m(pid=44258)[0m     @     0x7f8f3576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44258)[0m     @     0x562aac9f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44258)[0m     @     0x562aac94cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44258)[0m     @     0x562aac9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44258)[0m     @     0x562aac9d8a20 method_vectorcall
[2m[36m(pid=44258)[0m     @     0x562aac94cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44258)[0m     @     0x562aac9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44258)[0m     @     0x562aac9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44258)[0m     @     0x562aac94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44258)[0m     @     0x562aac9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44258)[0m     @     0x562aac9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44258)[0m     @     0x562aac94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44258)[0m     @     0x562aac9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44258)[0m     @     0x562aac9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44258)[0m     @     0x562aac94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44258)[0m     @     0x562aac9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44258)[0m     @     0x562aac9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44258)[0m     @     0x562aac94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44366)[0m     @     0x7f883736a4f5 at::Tensor::copy_()
[2m[36m(pid=44366)[0m     @     0x7f883d41579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44366)[0m     @     0x558edbc87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44366)[0m     @     0x558edbbe2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44366)[0m     @     0x558edbc6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44366)[0m     @     0x558edbc6ea20 method_vectorcall
[2m[36m(pid=44366)[0m     @     0x558edbbe2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44366)[0m     @     0x558edbc6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44366)[0m     @     0x558edbc6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44366)[0m     @     0x558edbbe3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44366)[0m     @     0x558edbc6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44366)[0m     @     0x558edbc6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44366)[0m     @     0x558edbbe3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44366)[0m     @     0x558edbc6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44366)[0m     @     0x558edbc6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44366)[0m     @     0x558edbbe3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44366)[0m     @     0x558edbc6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44366)[0m     @     0x558edbc6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44366)[0m     @     0x558edbbe3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44247)[0m     @     0x7f74dd5cb4f5 at::Tensor::copy_()
[2m[36m(pid=44247)[0m     @     0x7f74e367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44247)[0m     @     0x562d322adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44247)[0m     @     0x562d32208b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44247)[0m     @     0x562d32293baf _PyEval_EvalCodeWithName
[2m[36m(pid=44247)[0m     @     0x562d32294a20 method_vectorcall
[2m[36m(pid=44247)[0m     @     0x562d32208bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44247)[0m     @     0x562d32293baf _PyEval_EvalCodeWithName
[2m[36m(pid=44247)[0m     @     0x562d32294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44247)[0m     @     0x562d32209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44247)[0m     @     0x562d32293baf _PyEval_EvalCodeWithName
[2m[36m(pid=44247)[0m     @     0x562d32294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44247)[0m     @     0x562d32209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44247)[0m     @     0x562d32293baf _PyEval_EvalCodeWithName
[2m[36m(pid=44247)[0m     @     0x562d32294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44247)[0m     @     0x562d32209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44247)[0m     @     0x562d32293baf _PyEval_EvalCodeWithName
[2m[36m(pid=44247)[0m     @     0x562d32294643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44247)[0m     @     0x562d32209689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44238)[0m     @     0x7f16a2c134f5 at::Tensor::copy_()
[2m[36m(pid=44238)[0m     @     0x7f16a8cbe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44238)[0m     @     0x5626b6ec1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44238)[0m     @     0x5626b6e1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44238)[0m     @     0x5626b6ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44238)[0m     @     0x5626b6ea8a20 method_vectorcall
[2m[36m(pid=44238)[0m     @     0x5626b6e1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44238)[0m     @     0x5626b6ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44238)[0m     @     0x5626b6ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44238)[0m     @     0x5626b6e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44238)[0m     @     0x5626b6ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44238)[0m     @     0x5626b6ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44238)[0m     @     0x5626b6e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44238)[0m     @     0x5626b6ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44238)[0m     @     0x5626b6ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44238)[0m     @     0x5626b6e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44238)[0m     @     0x5626b6ea7baf _PyEval_EvalCodeWithName
[2m[36m(pid=44238)[0m     @     0x5626b6ea8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44238)[0m     @     0x5626b6e1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44335)[0m     @     0x7f3caa3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44335)[0m     @     0x7f3ca7e9f4f5 at::Tensor::copy_()
[2m[36m(pid=44335)[0m     @     0x7f3cadf4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44335)[0m     @     0x55e2f787ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44335)[0m     @     0x55e2f77dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44335)[0m     @     0x55e2f7865baf _PyEval_EvalCodeWithName
[2m[36m(pid=44335)[0m     @     0x55e2f7866a20 method_vectorcall
[2m[36m(pid=44335)[0m     @     0x55e2f77dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44335)[0m     @     0x55e2f7865baf _PyEval_EvalCodeWithName
[2m[36m(pid=44335)[0m     @     0x55e2f7866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44335)[0m     @     0x55e2f77db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44335)[0m     @     0x55e2f7865baf _PyEval_EvalCodeWithName
[2m[36m(pid=44335)[0m     @     0x55e2f7866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44335)[0m     @     0x55e2f77db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44335)[0m     @     0x55e2f7865baf _PyEval_EvalCodeWithName
[2m[36m(pid=44335)[0m     @     0x55e2f7866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44335)[0m     @     0x55e2f77db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44335)[0m     @     0x55e2f7865baf _PyEval_EvalCodeWithName
[2m[36m(pid=44335)[0m     @     0x55e2f7866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44335)[0m     @     0x55e2f77db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44264)[0m     @     0x7f48b89d34f5 at::Tensor::copy_()
[2m[36m(pid=44264)[0m     @     0x7f48bea7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44264)[0m     @     0x5603bcaaefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44264)[0m     @     0x5603bca09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44264)[0m     @     0x5603bca94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44264)[0m     @     0x5603bca95a20 method_vectorcall
[2m[36m(pid=44264)[0m     @     0x5603bca09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44264)[0m     @     0x5603bca94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44264)[0m     @     0x5603bca95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44264)[0m     @     0x5603bca0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44264)[0m     @     0x5603bca94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44264)[0m     @     0x5603bca95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44264)[0m     @     0x5603bca0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44264)[0m     @     0x5603bca94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44264)[0m     @     0x5603bca95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44264)[0m     @     0x5603bca0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44308)[0m     @     0x7f11119e54f5 at::Tensor::copy_()
[2m[36m(pid=44308)[0m     @     0x7f1117a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44308)[0m     @     0x56010a34ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44308)[0m     @     0x56010a2aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44308)[0m     @     0x56010a335baf _PyEval_EvalCodeWithName
[2m[36m(pid=44308)[0m     @     0x56010a336a20 method_vectorcall
[2m[36m(pid=44308)[0m     @     0x56010a2aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44308)[0m     @     0x56010a335baf _PyEval_EvalCodeWithName
[2m[36m(pid=44308)[0m     @     0x56010a336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44308)[0m     @     0x56010a2ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44308)[0m     @     0x56010a335baf _PyEval_EvalCodeWithName
[2m[36m(pid=44308)[0m     @     0x56010a336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44308)[0m     @     0x56010a2ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44308)[0m     @     0x56010a335baf _PyEval_EvalCodeWithName
[2m[36m(pid=44308)[0m     @     0x56010a336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44308)[0m     @     0x56010a2ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44308)[0m     @     0x56010a335baf _PyEval_EvalCodeWithName
[2m[36m(pid=44308)[0m     @     0x56010a336643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44308)[0m     @     0x56010a2ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x7efdf577bad3 at::TensorIterator::for_each()
[2m[36m(pid=44316)[0m     @     0x7efdf577bd91 at::TensorIterator::for_each()
[2m[36m(pid=44316)[0m     @     0x7efdf605eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44316)[0m     @     0x7efdf6081c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44250)[0m     @     0x7edfe0e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44250)[0m     @     0x5653bbb73fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44250)[0m     @     0x5653bbaceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44250)[0m     @     0x5653bbb59baf _PyEval_EvalCodeWithName
[2m[36m(pid=44250)[0m     @     0x5653bbb5aa20 method_vectorcall
[2m[36m(pid=44250)[0m     @     0x5653bbacebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44250)[0m     @     0x5653bbb59baf _PyEval_EvalCodeWithName
[2m[36m(pid=44250)[0m     @     0x5653bbb5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44250)[0m     @     0x5653bbacf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44250)[0m     @     0x5653bbb59baf _PyEval_EvalCodeWithName
[2m[36m(pid=44250)[0m     @     0x5653bbb5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44250)[0m     @     0x5653bbacf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44250)[0m     @     0x5653bbb59baf _PyEval_EvalCodeWithName
[2m[36m(pid=44250)[0m     @     0x5653bbb5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44250)[0m     @     0x5653bbacf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44250)[0m     @     0x5653bbb59baf _PyEval_EvalCodeWithName
[2m[36m(pid=44250)[0m     @     0x5653bbb5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44250)[0m     @     0x5653bbacf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44319)[0m     @     0x7f4d2292ad91 at::TensorIterator::for_each()
[2m[36m(pid=44319)[0m     @     0x7f4d2320db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=44244)[0m     @     0x7f8a134f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44244)[0m     @     0x7f8a134f0388 at::native::copy_impl()
[2m[36m(pid=44244)[0m     @     0x7f8a134f25a4 at::native::copy_()
[2m[36m(pid=44275)[0m     @     0x7f5f125e24f5 at::Tensor::copy_()
[2m[36m(pid=44275)[0m     @     0x7f5f1868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44275)[0m     @     0x55981939efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44275)[0m     @     0x5598192f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44275)[0m     @     0x559819384baf _PyEval_EvalCodeWithName
[2m[36m(pid=44275)[0m     @     0x559819385a20 method_vectorcall
[2m[36m(pid=44275)[0m     @     0x5598192f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44275)[0m     @     0x559819384baf _PyEval_EvalCodeWithName
[2m[36m(pid=44275)[0m     @     0x559819385643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44275)[0m     @     0x5598192fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44275)[0m     @     0x559819384baf _PyEval_EvalCodeWithName
[2m[36m(pid=44275)[0m     @     0x559819385643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44275)[0m     @     0x5598192fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44275)[0m     @     0x559819384baf _PyEval_EvalCodeWithName
[2m[36m(pid=44275)[0m     @     0x559819385643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44275)[0m     @     0x5598192fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44275)[0m     @     0x559819384baf _PyEval_EvalCodeWithName
[2m[36m(pid=44275)[0m     @     0x559819385643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44275)[0m     @     0x5598192fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44358)[0m     @     0x7fad6be244f5 at::Tensor::copy_()
[2m[36m(pid=44358)[0m     @     0x7fad71ecf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44358)[0m     @     0x556cca713fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44358)[0m     @     0x556cca66eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44358)[0m     @     0x556cca6f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44358)[0m     @     0x556cca6faa20 method_vectorcall
[2m[36m(pid=44358)[0m     @     0x556cca66ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44358)[0m     @     0x556cca6f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44358)[0m     @     0x556cca6fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44358)[0m     @     0x556cca66f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44358)[0m     @     0x556cca6f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44358)[0m     @     0x556cca6fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44358)[0m     @     0x556cca66f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44358)[0m     @     0x556cca6f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44358)[0m     @     0x556cca6fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44358)[0m     @     0x556cca66f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44358)[0m     @     0x556cca6f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44358)[0m     @     0x556cca6fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44358)[0m     @     0x556cca66f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44254)[0m     @     0x7f607928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44254)[0m     @     0x561a2c126fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44254)[0m     @     0x561a2c081b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44254)[0m     @     0x561a2c10cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44254)[0m     @     0x561a2c10da20 method_vectorcall
[2m[36m(pid=44254)[0m     @     0x561a2c081bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44254)[0m     @     0x561a2c10cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44254)[0m     @     0x561a2c10d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44254)[0m     @     0x561a2c082689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44254)[0m     @     0x561a2c10cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44254)[0m     @     0x561a2c10d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44254)[0m     @     0x561a2c082689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44254)[0m     @     0x561a2c10cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44254)[0m     @     0x561a2c10d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44254)[0m     @     0x561a2c082689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44254)[0m     @     0x561a2c10cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44254)[0m     @     0x561a2c10d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44254)[0m     @     0x561a2c082689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44239)[0m     @     0x7f7f85cfb4f5 at::Tensor::copy_()
[2m[36m(pid=44239)[0m     @     0x7f7f881ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44239)[0m     @     0x7f7f85cfb4f5 at::Tensor::copy_()
[2m[36m(pid=44239)[0m     @     0x7f7f8bda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44239)[0m     @     0x55fc7b64afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44239)[0m     @     0x55fc7b5a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44239)[0m     @     0x55fc7b630baf _PyEval_EvalCodeWithName
[2m[36m(pid=44239)[0m     @     0x55fc7b631a20 method_vectorcall
[2m[36m(pid=44239)[0m     @     0x55fc7b5a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44239)[0m     @     0x55fc7b630baf _PyEval_EvalCodeWithName
[2m[36m(pid=44239)[0m     @     0x55fc7b631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44239)[0m     @     0x55fc7b5a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44239)[0m     @     0x55fc7b630baf _PyEval_EvalCodeWithName
[2m[36m(pid=44239)[0m     @     0x55fc7b631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44239)[0m     @     0x55fc7b5a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44239)[0m     @     0x55fc7b630baf _PyEval_EvalCodeWithName
[2m[36m(pid=44239)[0m     @     0x55fc7b631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44239)[0m     @     0x55fc7b5a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44239)[0m     @     0x55fc7b630baf _PyEval_EvalCodeWithName
[2m[36m(pid=44239)[0m     @     0x55fc7b631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44239)[0m     @     0x55fc7b5a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44249)[0m     @     0x7ef0702e04f5 at::Tensor::copy_()
[2m[36m(pid=44249)[0m     @     0x7ef07638b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44249)[0m     @     0x556ed9357fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44249)[0m     @     0x556ed92b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44249)[0m     @     0x556ed933dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44249)[0m     @     0x556ed933ea20 method_vectorcall
[2m[36m(pid=44249)[0m     @     0x556ed92b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44249)[0m     @     0x556ed933dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44249)[0m     @     0x556ed933e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44249)[0m     @     0x556ed92b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44249)[0m     @     0x556ed933dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44249)[0m     @     0x556ed933e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44249)[0m     @     0x556ed92b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44249)[0m     @     0x556ed933dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44249)[0m     @     0x556ed933e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44249)[0m     @     0x556ed92b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44249)[0m     @     0x556ed933dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44249)[0m     @     0x556ed933e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44249)[0m     @     0x556ed92b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44242)[0m     @     0x7f0db87924f5 at::Tensor::copy_()
[2m[36m(pid=44242)[0m     @     0x7f0dbe83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44242)[0m     @     0x5603885b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44242)[0m     @     0x560388514b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44242)[0m     @     0x56038859fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44242)[0m     @     0x5603885a0a20 method_vectorcall
[2m[36m(pid=44242)[0m     @     0x560388514bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44242)[0m     @     0x56038859fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44242)[0m     @     0x5603885a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44242)[0m     @     0x560388515689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44242)[0m     @     0x56038859fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44242)[0m     @     0x5603885a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44242)[0m     @     0x560388515689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44242)[0m     @     0x56038859fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44242)[0m     @     0x5603885a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44242)[0m     @     0x560388515689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44242)[0m     @     0x56038859fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44242)[0m     @     0x5603885a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44242)[0m     @     0x560388515689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44331)[0m     @     0x7f05646fc4f5 at::Tensor::copy_()
[2m[36m(pid=44331)[0m     @     0x7f056a7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44331)[0m     @     0x5609edc4bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44331)[0m     @     0x5609edba6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44331)[0m     @     0x5609edc31baf _PyEval_EvalCodeWithName
[2m[36m(pid=44331)[0m     @     0x5609edc32a20 method_vectorcall
[2m[36m(pid=44331)[0m     @     0x5609edba6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44331)[0m     @     0x5609edc31baf _PyEval_EvalCodeWithName
[2m[36m(pid=44331)[0m     @     0x5609edc32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44331)[0m     @     0x5609edba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44331)[0m     @     0x5609edc31baf _PyEval_EvalCodeWithName
[2m[36m(pid=44331)[0m     @     0x5609edc32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44331)[0m     @     0x5609edba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44331)[0m     @     0x5609edc31baf _PyEval_EvalCodeWithName
[2m[36m(pid=44331)[0m     @     0x5609edc32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44331)[0m     @     0x5609edba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44331)[0m     @     0x5609edc31baf _PyEval_EvalCodeWithName
[2m[36m(pid=44331)[0m     @     0x5609edc32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44331)[0m     @     0x5609edba7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44260)[0m     @     0x7f2c4adea4f5 at::Tensor::copy_()
[2m[36m(pid=44260)[0m     @     0x7f2c50e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44260)[0m     @     0x55f643903fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44260)[0m     @     0x55f64385eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44260)[0m     @     0x55f6438e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44260)[0m     @     0x55f6438eaa20 method_vectorcall
[2m[36m(pid=44260)[0m     @     0x55f64385ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44260)[0m     @     0x55f6438e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44260)[0m     @     0x55f6438ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44260)[0m     @     0x55f64385f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44260)[0m     @     0x55f6438e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44260)[0m     @     0x55f6438ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44260)[0m     @     0x55f64385f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44260)[0m     @     0x55f6438e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44260)[0m     @     0x55f6438ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44260)[0m     @     0x55f64385f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44260)[0m     @     0x55f6438e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=44260)[0m     @     0x55f6438ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44260)[0m     @     0x55f64385f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44314)[0m     @     0x7ed30349f4f5 at::Tensor::copy_()
[2m[36m(pid=44314)[0m     @     0x7ed30954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44314)[0m     @     0x55bdc0c19fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44314)[0m     @     0x55bdc0b74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44314)[0m     @     0x55bdc0bffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44314)[0m     @     0x55bdc0c00a20 method_vectorcall
[2m[36m(pid=44314)[0m     @     0x55bdc0b74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44314)[0m     @     0x55bdc0bffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44314)[0m     @     0x55bdc0c00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44314)[0m     @     0x55bdc0b75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44314)[0m     @     0x55bdc0bffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44314)[0m     @     0x55bdc0c00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44314)[0m     @     0x55bdc0b75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44314)[0m     @     0x55bdc0bffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44314)[0m     @     0x55bdc0c00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44314)[0m     @     0x55bdc0b75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44314)[0m     @     0x55bdc0bffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44314)[0m     @     0x55bdc0c00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44314)[0m     @     0x55bdc0b75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44322)[0m     @     0x7f9f43bdd4f5 at::Tensor::copy_()
[2m[36m(pid=44322)[0m     @     0x7f9f49c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44322)[0m     @     0x55afea939fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44322)[0m     @     0x55afea894b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44322)[0m     @     0x55afea91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44322)[0m     @     0x55afea920a20 method_vectorcall
[2m[36m(pid=44322)[0m     @     0x55afea894bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44322)[0m     @     0x55afea91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44322)[0m     @     0x55afea920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44322)[0m     @     0x55afea895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44322)[0m     @     0x55afea91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44322)[0m     @     0x55afea920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44322)[0m     @     0x55afea895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44322)[0m     @     0x55afea91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44322)[0m     @     0x55afea920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44322)[0m     @     0x55afea895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44322)[0m     @     0x55afea91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44322)[0m     @     0x55afea920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44322)[0m     @     0x55afea895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44307)[0m     @     0x7f7ad89a54f5 at::Tensor::copy_()
[2m[36m(pid=44307)[0m     @     0x7f7adea5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44307)[0m     @     0x558d8a162fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44307)[0m     @     0x558d8a0bdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44307)[0m     @     0x558d8a148baf _PyEval_EvalCodeWithName
[2m[36m(pid=44307)[0m     @     0x558d8a149a20 method_vectorcall
[2m[36m(pid=44307)[0m     @     0x558d8a0bdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44307)[0m     @     0x558d8a148baf _PyEval_EvalCodeWithName
[2m[36m(pid=44307)[0m     @     0x558d8a149643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44307)[0m     @     0x558d8a0be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44307)[0m     @     0x558d8a148baf _PyEval_EvalCodeWithName
[2m[36m(pid=44307)[0m     @     0x558d8a149643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44307)[0m     @     0x558d8a0be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44307)[0m     @     0x558d8a148baf _PyEval_EvalCodeWithName
[2m[36m(pid=44307)[0m     @     0x558d8a149643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44307)[0m     @     0x558d8a0be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44307)[0m     @     0x558d8a148baf _PyEval_EvalCodeWithName
[2m[36m(pid=44307)[0m     @     0x558d8a149643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44307)[0m     @     0x558d8a0be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44311)[0m     @     0x55bbd8a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=44311)[0m     @     0x55bbd8a72a20 method_vectorcall
[2m[36m(pid=44311)[0m     @     0x55bbd89e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44311)[0m     @     0x55bbd8a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=44311)[0m     @     0x55bbd8a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44311)[0m     @     0x55bbd89e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44311)[0m     @     0x55bbd8a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=44311)[0m     @     0x55bbd8a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44311)[0m     @     0x55bbd89e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44311)[0m     @     0x55bbd8a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=44311)[0m     @     0x55bbd8a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44311)[0m     @     0x55bbd89e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44311)[0m     @     0x55bbd8a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=44311)[0m     @     0x55bbd8a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44311)[0m     @     0x55bbd89e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44243)[0m     @     0x7f7e1814a5a4 at::native::copy_()
[2m[36m(pid=44243)[0m     @     0x7f7e188354f5 at::Tensor::copy_()
[2m[36m(pid=44243)[0m     @     0x7f7e1ad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44243)[0m     @     0x7f7e188354f5 at::Tensor::copy_()
[2m[36m(pid=44243)[0m     @     0x7f7e1e8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44243)[0m     @     0x5618156d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44243)[0m     @     0x56181562db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44243)[0m     @     0x5618156b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44243)[0m     @     0x5618156b9a20 method_vectorcall
[2m[36m(pid=44243)[0m     @     0x56181562dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44243)[0m     @     0x5618156b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44243)[0m     @     0x5618156b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44243)[0m     @     0x56181562e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44243)[0m     @     0x5618156b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44243)[0m     @     0x5618156b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44243)[0m     @     0x56181562e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44304)[0m     @     0x7f6e5e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=44304)[0m     @     0x7f6e6437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44304)[0m     @     0x5576991a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44304)[0m     @     0x557699101b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44304)[0m     @     0x55769918cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44304)[0m     @     0x55769918da20 method_vectorcall
[2m[36m(pid=44304)[0m     @     0x557699101bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44304)[0m     @     0x55769918cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44304)[0m     @     0x55769918d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44304)[0m     @     0x557699102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44304)[0m     @     0x55769918cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44304)[0m     @     0x55769918d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44304)[0m     @     0x557699102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44304)[0m     @     0x55769918cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44304)[0m     @     0x55769918d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44304)[0m     @     0x557699102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44304)[0m     @     0x55769918cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44304)[0m     @     0x55769918d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44304)[0m     @     0x557699102689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44266)[0m     @     0x556373da5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44266)[0m     @     0x556373d1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44352)[0m     @     0x7f4637eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44352)[0m     @     0x7f46359e54f5 at::Tensor::copy_()
[2m[36m(pid=44352)[0m     @     0x7f463ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44352)[0m     @     0x56191ffb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44352)[0m     @     0x56191ff12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44352)[0m     @     0x56191ff9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44352)[0m     @     0x56191ff9ea20 method_vectorcall
[2m[36m(pid=44352)[0m     @     0x56191ff12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44352)[0m     @     0x56191ff9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44352)[0m     @     0x56191ff9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44352)[0m     @     0x56191ff13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44352)[0m     @     0x56191ff9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44352)[0m     @     0x56191ff9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44352)[0m     @     0x56191ff13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44352)[0m     @     0x56191ff9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44352)[0m     @     0x56191ff9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44352)[0m     @     0x56191ff13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44352)[0m     @     0x56191ff9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44352)[0m     @     0x56191ff9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44352)[0m     @     0x56191ff13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44317)[0m     @     0x7f20465e24f5 at::Tensor::copy_()
[2m[36m(pid=44317)[0m     @     0x7f2048ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44317)[0m     @     0x7f20465e24f5 at::Tensor::copy_()
[2m[36m(pid=44317)[0m     @     0x7f204c68d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44317)[0m     @     0x556580197fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44317)[0m     @     0x5565800f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44317)[0m     @     0x55658017dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44317)[0m     @     0x55658017ea20 method_vectorcall
[2m[36m(pid=44317)[0m     @     0x5565800f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44317)[0m     @     0x55658017dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44317)[0m     @     0x55658017e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44317)[0m     @     0x5565800f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44317)[0m     @     0x55658017dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44317)[0m     @     0x55658017e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44317)[0m     @     0x5565800f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44317)[0m     @     0x55658017dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44317)[0m     @     0x55658017e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44317)[0m     @     0x5565800f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44317)[0m     @     0x55658017dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44317)[0m     @     0x55658017e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44317)[0m     @     0x5565800f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44354)[0m     @     0x7f0e6cebd4f5 at::Tensor::copy_()
[2m[36m(pid=44354)[0m     @     0x7f0e6f3908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44354)[0m     @     0x7f0e6cebd4f5 at::Tensor::copy_()
[2m[36m(pid=44354)[0m     @     0x7f0e72f6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44354)[0m     @     0x56540f70efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44354)[0m     @     0x56540f669b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44354)[0m     @     0x56540f6f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44354)[0m     @     0x56540f6f5a20 method_vectorcall
[2m[36m(pid=44354)[0m     @     0x56540f669bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44354)[0m     @     0x56540f6f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44354)[0m     @     0x56540f6f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44354)[0m     @     0x56540f66a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44354)[0m     @     0x56540f6f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44354)[0m     @     0x56540f6f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44354)[0m     @     0x56540f66a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44354)[0m     @     0x56540f6f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44354)[0m     @     0x56540f6f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44354)[0m     @     0x56540f66a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44354)[0m     @     0x56540f6f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=44354)[0m     @     0x56540f6f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44354)[0m     @     0x56540f66a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44296)[0m     @     0x7f503add279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44296)[0m     @     0x559dc7670fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44296)[0m     @     0x559dc75cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44296)[0m     @     0x559dc7656baf _PyEval_EvalCodeWithName
[2m[36m(pid=44296)[0m     @     0x559dc7657a20 method_vectorcall
[2m[36m(pid=44296)[0m     @     0x559dc75cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44296)[0m     @     0x559dc7656baf _PyEval_EvalCodeWithName
[2m[36m(pid=44296)[0m     @     0x559dc7657643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44296)[0m     @     0x559dc75cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44296)[0m     @     0x559dc7656baf _PyEval_EvalCodeWithName
[2m[36m(pid=44296)[0m     @     0x559dc7657643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44296)[0m     @     0x559dc75cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44296)[0m     @     0x559dc7656baf _PyEval_EvalCodeWithName
[2m[36m(pid=44296)[0m     @     0x559dc7657643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44296)[0m     @     0x559dc75cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44296)[0m     @     0x559dc7656baf _PyEval_EvalCodeWithName
[2m[36m(pid=44296)[0m     @     0x559dc7657643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44296)[0m     @     0x559dc75cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44309)[0m     @     0x7f94ae91f4f5 at::Tensor::copy_()
[2m[36m(pid=44309)[0m     @     0x7f94b49ca79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44309)[0m     @     0x560a43026fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44309)[0m     @     0x560a42f81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44309)[0m     @     0x560a4300cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44309)[0m     @     0x560a4300da20 method_vectorcall
[2m[36m(pid=44309)[0m     @     0x560a42f81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44309)[0m     @     0x560a4300cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44309)[0m     @     0x560a4300d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44309)[0m     @     0x560a42f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44309)[0m     @     0x560a4300cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44309)[0m     @     0x560a4300d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44309)[0m     @     0x560a42f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44309)[0m     @     0x560a4300cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44309)[0m     @     0x560a4300d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44309)[0m     @     0x560a42f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44309)[0m     @     0x560a4300cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44309)[0m     @     0x560a4300d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44309)[0m     @     0x560a42f82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44312)[0m     @     0x7ecf5650d4f5 at::Tensor::copy_()
[2m[36m(pid=44312)[0m     @     0x7ecf5c5b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44312)[0m     @     0x55610c614fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44312)[0m     @     0x55610c56fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44312)[0m     @     0x55610c5fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=44312)[0m     @     0x55610c5fba20 method_vectorcall
[2m[36m(pid=44312)[0m     @     0x55610c56fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44312)[0m     @     0x55610c5fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=44312)[0m     @     0x55610c5fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44312)[0m     @     0x55610c570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44312)[0m     @     0x55610c5fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=44312)[0m     @     0x55610c5fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44312)[0m     @     0x55610c570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44312)[0m     @     0x55610c5fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=44312)[0m     @     0x55610c5fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44312)[0m     @     0x55610c570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44312)[0m     @     0x55610c5fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=44312)[0m     @     0x55610c5fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44312)[0m     @     0x55610c570689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44353)[0m     @     0x7f85ad0a44f5 at::Tensor::copy_()
[2m[36m(pid=44353)[0m     @     0x7f85af5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44353)[0m     @     0x7f85ad0a44f5 at::Tensor::copy_()
[2m[36m(pid=44353)[0m     @     0x7f85b314f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44353)[0m     @     0x555b7b048fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44353)[0m     @     0x555b7afa3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44353)[0m     @     0x555b7b02ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44353)[0m     @     0x555b7b02fa20 method_vectorcall
[2m[36m(pid=44353)[0m     @     0x555b7afa3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44353)[0m     @     0x555b7b02ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44353)[0m     @     0x555b7b02f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44353)[0m     @     0x555b7afa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44353)[0m     @     0x555b7b02ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44353)[0m     @     0x555b7b02f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44353)[0m     @     0x555b7afa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44353)[0m     @     0x555b7b02ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44353)[0m     @     0x555b7b02f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44353)[0m     @     0x555b7afa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44353)[0m     @     0x555b7b02ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=44353)[0m     @     0x555b7b02f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44353)[0m     @     0x555b7afa4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44267)[0m     @     0x7fc5a0a654f5 at::Tensor::copy_()
[2m[36m(pid=44267)[0m     @     0x7fc5a2f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44267)[0m     @     0x7fc5a0a654f5 at::Tensor::copy_()
[2m[36m(pid=44267)[0m     @     0x7fc5a6b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44267)[0m     @     0x560f83a35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44267)[0m     @     0x560f83990b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44267)[0m     @     0x560f83a1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44267)[0m     @     0x560f83a1ca20 method_vectorcall
[2m[36m(pid=44267)[0m     @     0x560f83990bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44267)[0m     @     0x560f83a1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44267)[0m     @     0x560f83a1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44267)[0m     @     0x560f83991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44267)[0m     @     0x560f83a1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44267)[0m     @     0x560f83a1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44267)[0m     @     0x560f83991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44267)[0m     @     0x560f83a1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44267)[0m     @     0x560f83a1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44267)[0m     @     0x560f83991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44267)[0m     @     0x560f83a1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44267)[0m     @     0x560f83a1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44267)[0m     @     0x560f83991689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x7f6cf9fa75a4 at::native::copy_()
[2m[36m(pid=44326)[0m     @     0x7f6cfa6924f5 at::Tensor::copy_()
[2m[36m(pid=44326)[0m     @     0x7f6cfcb658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44350)[0m     @     0x7f9b274eaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44350)[0m     @     0x7f9b274e8388 at::native::copy_impl()
[2m[36m(pid=44350)[0m     @     0x7f9b274ea5a4 at::native::copy_()
[2m[36m(pid=44264)[0m     @     0x5603bca94baf _PyEval_EvalCodeWithName
[2m[36m(pid=44264)[0m     @     0x5603bca95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44264)[0m     @     0x5603bca0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x7efdf5523a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44316)[0m     @     0x7efdf5521388 at::native::copy_impl()
[2m[36m(pid=44316)[0m     @     0x7efdf55235a4 at::native::copy_()
[2m[36m(pid=44316)[0m     @     0x7efdf5c0e4f5 at::Tensor::copy_()
[2m[36m(pid=44319)[0m     @     0x7f4d23230c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=44319)[0m     @     0x7f4d226d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=44319)[0m     @     0x7f4d226d0388 at::native::copy_impl()
[2m[36m(pid=44319)[0m     @     0x7f4d226d25a4 at::native::copy_()
[2m[36m(pid=44244)[0m     @     0x7f8a13bdd4f5 at::Tensor::copy_()
[2m[36m(pid=44244)[0m     @     0x7f8a160b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44244)[0m     @     0x7f8a13bdd4f5 at::Tensor::copy_()
[2m[36m(pid=44244)[0m     @     0x7f8a19c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44244)[0m     @     0x55bfa9179fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44244)[0m     @     0x55bfa90d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44244)[0m     @     0x55bfa915fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44244)[0m     @     0x55bfa9160a20 method_vectorcall
[2m[36m(pid=44244)[0m     @     0x55bfa90d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44244)[0m     @     0x55bfa915fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44244)[0m     @     0x55bfa9160643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44244)[0m     @     0x55bfa90d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44244)[0m     @     0x55bfa915fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44244)[0m     @     0x55bfa9160643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44244)[0m     @     0x55bfa90d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44244)[0m     @     0x55bfa915fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44244)[0m     @     0x55bfa9160643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44244)[0m     @     0x55bfa90d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44244)[0m     @     0x55bfa915fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=44244)[0m     @     0x55bfa9160643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44244)[0m     @     0x55bfa90d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44243)[0m     @     0x5618156b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44243)[0m     @     0x5618156b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44243)[0m     @     0x56181562e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44243)[0m     @     0x5618156b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=44243)[0m     @     0x5618156b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44243)[0m     @     0x56181562e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x7f6cfa6924f5 at::Tensor::copy_()
[2m[36m(pid=44326)[0m     @     0x7f6d0073d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44326)[0m     @     0x55e062284fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44326)[0m     @     0x55e0621dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x55e06226abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44326)[0m     @     0x55e06226ba20 method_vectorcall
[2m[36m(pid=44326)[0m     @     0x55e0621dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x55e06226abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44326)[0m     @     0x55e06226b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44326)[0m     @     0x55e0621e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x55e06226abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44326)[0m     @     0x55e06226b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44326)[0m     @     0x55e0621e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x55e06226abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44326)[0m     @     0x55e06226b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44326)[0m     @     0x55e0621e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44326)[0m     @     0x55e06226abaf _PyEval_EvalCodeWithName
[2m[36m(pid=44326)[0m     @     0x55e06226b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44326)[0m     @     0x55e0621e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x7efdf80e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44316)[0m     @     0x7efdf5c0e4f5 at::Tensor::copy_()
[2m[36m(pid=44316)[0m     @     0x7efdfbcb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44316)[0m     @     0x55b52b31efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44316)[0m     @     0x55b52b279b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x55b52b304baf _PyEval_EvalCodeWithName
[2m[36m(pid=44316)[0m     @     0x55b52b305a20 method_vectorcall
[2m[36m(pid=44316)[0m     @     0x55b52b279bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x55b52b304baf _PyEval_EvalCodeWithName
[2m[36m(pid=44316)[0m     @     0x55b52b305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44316)[0m     @     0x55b52b27a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x55b52b304baf _PyEval_EvalCodeWithName
[2m[36m(pid=44316)[0m     @     0x55b52b305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44316)[0m     @     0x55b52b27a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x55b52b304baf _PyEval_EvalCodeWithName
[2m[36m(pid=44316)[0m     @     0x55b52b305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44316)[0m     @     0x55b52b27a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44316)[0m     @     0x55b52b304baf _PyEval_EvalCodeWithName
[2m[36m(pid=44316)[0m     @     0x55b52b305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44316)[0m     @     0x55b52b27a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44319)[0m     @     0x7f4d22dbd4f5 at::Tensor::copy_()
[2m[36m(pid=44319)[0m     @     0x7f4d252908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=44319)[0m     @     0x7f4d22dbd4f5 at::Tensor::copy_()
[2m[36m(pid=44319)[0m     @     0x7f4d28e6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=44319)[0m     @     0x561192e62fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=44350)[0m     @     0x7f9b27bd54f5 at::Tensor::copy_()
[2m[36m(pid=44319)[0m     @     0x561192dbdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44319)[0m     @     0x561192e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=44319)[0m     @     0x561192e49a20 method_vectorcall
[2m[36m(pid=44319)[0m     @     0x561192dbdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44319)[0m     @     0x561192e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=44319)[0m     @     0x561192e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44319)[0m     @     0x561192dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44319)[0m     @     0x561192e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=44319)[0m     @     0x561192e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44319)[0m     @     0x561192dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44319)[0m     @     0x561192e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=44319)[0m     @     0x561192e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44319)[0m     @     0x561192dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44319)[0m     @     0x561192e48baf _PyEval_EvalCodeWithName
[2m[36m(pid=44319)[0m     @     0x561192e49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=44319)[0m     @     0x561192dbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=44350)[0m     @     0x7f9b2a0a88de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:44:18,369	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:44:18,373	ERROR trial_runner.py:567 -- Trial PPO_jss_env_d6abc_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=44367, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 24.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_d6abc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_d6abc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_d6abc_00000_0_2020-11-05_10-44-10/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_d6abc_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_d6abc_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_d6abc_00000_0_2020-11-05_10-44-10/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:44:18,390	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:44:18,391	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:44:18,391	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:44:18,391	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:44:18,391	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_d6abc_00000])
