2020-11-05 10:33:46,343	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_632d4_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=17739)[0m 2020-11-05 10:33:49,122	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=17739)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=17739)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=17739)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=17739)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=17739)[0m 
[2m[36m(pid=17739)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=17744)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17744)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17744)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17748)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17748)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17748)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17748)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17748)[0m *** SIGSEGV (@0x0) received by PID 17748 (TID 0x7fa507f3d700) from PID 0; stack trace: ***
[2m[36m(pid=17757)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17757)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17757)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17757)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17757)[0m *** SIGSEGV (@0x0) received by PID 17757 (TID 0x7f10aab6f700) from PID 0; stack trace: ***
[2m[36m(pid=17641)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17641)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17641)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17747)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17747)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17747)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17747)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17747)[0m *** SIGSEGV (@0x0) received by PID 17747 (TID 0x7f8a62a6e700) from PID 0; stack trace: ***
[2m[36m(pid=17631)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17631)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17631)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17761)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17761)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17761)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17761)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17761)[0m *** SIGSEGV (@0x0) received by PID 17761 (TID 0x7fd3a970d700) from PID 0; stack trace: ***
[2m[36m(pid=17680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17680)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17729)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17729)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17729)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17684)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17684)[0m *** SIGSEGV (@0x0) received by PID 17684 (TID 0x7f93295cf700) from PID 0; stack trace: ***
[2m[36m(pid=17725)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17725)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17725)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17695)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17695)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17695)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17622)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17622)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17622)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17622)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17622)[0m *** SIGSEGV (@0x0) received by PID 17622 (TID 0x7fe234b72700) from PID 0; stack trace: ***
[2m[36m(pid=17622)[0m     @     0x7fe23474b390 (unknown)
[2m[36m(pid=17700)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17700)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17700)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17700)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17700)[0m *** SIGSEGV (@0x0) received by PID 17700 (TID 0x7f8b719e0700) from PID 0; stack trace: ***
[2m[36m(pid=17700)[0m     @     0x7f8b715b9390 (unknown)
[2m[36m(pid=17700)[0m     @     0x7f5c71564f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17716)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17716)[0m *** SIGSEGV (@0x0) received by PID 17716 (TID 0x7fe2ef215700) from PID 0; stack trace: ***
[2m[36m(pid=17716)[0m     @     0x7fe2eedee390 (unknown)
[2m[36m(pid=17716)[0m     @     0x7fb3eed83f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17716)[0m     @     0x7fb3ee4ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17708)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17708)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17708)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17708)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17708)[0m *** SIGSEGV (@0x0) received by PID 17708 (TID 0x7f4093c89700) from PID 0; stack trace: ***
[2m[36m(pid=17708)[0m     @     0x7f4093862390 (unknown)
[2m[36m(pid=17708)[0m     @     0x7f1193751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17708)[0m     @     0x7f1192e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17655)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17655)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17655)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17655)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17655)[0m *** SIGSEGV (@0x0) received by PID 17655 (TID 0x7f85a856d700) from PID 0; stack trace: ***
[2m[36m(pid=17655)[0m     @     0x7f85a8146390 (unknown)
[2m[36m(pid=17655)[0m     @     0x7f56a80d4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17709)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17709)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17709)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17709)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17709)[0m *** SIGSEGV (@0x0) received by PID 17709 (TID 0x7f79e6064700) from PID 0; stack trace: ***
[2m[36m(pid=17744)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17744)[0m *** SIGSEGV (@0x0) received by PID 17744 (TID 0x7fa5aaf61700) from PID 0; stack trace: ***
[2m[36m(pid=17744)[0m     @     0x7fa5aab3a390 (unknown)
[2m[36m(pid=17744)[0m     @     0x7f76aaa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17744)[0m     @     0x7f76aa14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17744)[0m     @     0x7f76aa14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17744)[0m     @     0x7f76aa14fad3 at::TensorIterator::for_each()
[2m[36m(pid=17748)[0m     @     0x7fa507b16390 (unknown)
[2m[36m(pid=17748)[0m     @     0x7f7607ab5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17748)[0m     @     0x7f76071e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17748)[0m     @     0x7f76071e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17748)[0m     @     0x7f76071e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=17757)[0m     @     0x7f10aa748390 (unknown)
[2m[36m(pid=17757)[0m     @     0x7ee1aa6ebf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17757)[0m     @     0x7ee1a9e167db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17757)[0m     @     0x7ee1a9e198f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17757)[0m     @     0x7ee1a9e19ad3 at::TensorIterator::for_each()
[2m[36m(pid=17641)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17641)[0m *** SIGSEGV (@0x0) received by PID 17641 (TID 0x7fe24aeee700) from PID 0; stack trace: ***
[2m[36m(pid=17641)[0m     @     0x7fe24aac7390 (unknown)
[2m[36m(pid=17641)[0m     @     0x7fb34aa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17641)[0m     @     0x7fb34a14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17747)[0m     @     0x7f8a62647390 (unknown)
[2m[36m(pid=17747)[0m     @     0x7f5b624f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17747)[0m     @     0x7f5b61c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17747)[0m     @     0x7f5b61c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17747)[0m     @     0x7f5b61c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=17631)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17631)[0m *** SIGSEGV (@0x0) received by PID 17631 (TID 0x7fa82a986700) from PID 0; stack trace: ***
[2m[36m(pid=17631)[0m     @     0x7fa82a55f390 (unknown)
[2m[36m(pid=17631)[0m     @     0x7f792a512f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17631)[0m     @     0x7f7929c3d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17631)[0m     @     0x7f7929c408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17761)[0m     @     0x7fd3a92e6390 (unknown)
[2m[36m(pid=17761)[0m     @     0x7fa4a9267f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17761)[0m     @     0x7fa4a89927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17761)[0m     @     0x7fa4a89958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17761)[0m     @     0x7fa4a8995ad3 at::TensorIterator::for_each()
[2m[36m(pid=17680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17680)[0m *** SIGSEGV (@0x0) received by PID 17680 (TID 0x7f87bad21700) from PID 0; stack trace: ***
[2m[36m(pid=17680)[0m     @     0x7f87ba8fa390 (unknown)
[2m[36m(pid=17680)[0m     @     0x7f58ba7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17680)[0m     @     0x7f58b9ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17680)[0m     @     0x7f58b9ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17729)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17729)[0m *** SIGSEGV (@0x0) received by PID 17729 (TID 0x7f55824f0700) from PID 0; stack trace: ***
[2m[36m(pid=17729)[0m     @     0x7f55820c9390 (unknown)
[2m[36m(pid=17729)[0m     @     0x7f268207af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17729)[0m     @     0x7f26817a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17729)[0m     @     0x7f26817a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17684)[0m     @     0x7f93291a8390 (unknown)
[2m[36m(pid=17684)[0m     @     0x7f64290b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17684)[0m     @     0x7f64287e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17684)[0m     @     0x7f64287e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17684)[0m     @     0x7f64287e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=17721)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17721)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17721)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17721)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17721)[0m *** SIGSEGV (@0x0) received by PID 17721 (TID 0x7f69e1ede700) from PID 0; stack trace: ***
[2m[36m(pid=17721)[0m     @     0x7f69e1ab7390 (unknown)
[2m[36m(pid=17725)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17725)[0m *** SIGSEGV (@0x0) received by PID 17725 (TID 0x7f6025e67700) from PID 0; stack trace: ***
[2m[36m(pid=17725)[0m     @     0x7f6025a40390 (unknown)
[2m[36m(pid=17725)[0m     @     0x7f31257f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17725)[0m     @     0x7f3124f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17695)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17695)[0m *** SIGSEGV (@0x0) received by PID 17695 (TID 0x7f3fbf3cc700) from PID 0; stack trace: ***
[2m[36m(pid=17695)[0m     @     0x7f3fbefa5390 (unknown)
[2m[36m(pid=17695)[0m     @     0x7f10bef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17695)[0m     @     0x7f10be63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17622)[0m     @     0x7fb33470cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17622)[0m     @     0x7fb333e377db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17700)[0m     @     0x7f5c70c8f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17700)[0m     @     0x7f5c70c928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17716)[0m     @     0x7fb3ee4b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17716)[0m     @     0x7fb3ee4b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=17708)[0m     @     0x7f1192e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17655)[0m     @     0x7f56a77ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17709)[0m     @     0x7f79e5c3d390 (unknown)
[2m[36m(pid=17709)[0m     @     0x7f4ae5becf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17709)[0m     @     0x7f4ae53177db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17748)[0m     @     0x7f76071e3d91 at::TensorIterator::for_each()
[2m[36m(pid=17757)[0m     @     0x7ee1a9e19d91 at::TensorIterator::for_each()
[2m[36m(pid=17641)[0m     @     0x7fb34a14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17747)[0m     @     0x7f5b61c27d91 at::TensorIterator::for_each()
[2m[36m(pid=17631)[0m     @     0x7f7929c40ad3 at::TensorIterator::for_each()
[2m[36m(pid=17761)[0m     @     0x7fa4a8995d91 at::TensorIterator::for_each()
[2m[36m(pid=17680)[0m     @     0x7f58b9ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=17729)[0m     @     0x7f26817a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=17684)[0m     @     0x7f64287e3d91 at::TensorIterator::for_each()
[2m[36m(pid=17721)[0m     @     0x7f3ae1a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17721)[0m     @     0x7f3ae11357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17619)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17619)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17722)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17722)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17722)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17722)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17722)[0m *** SIGSEGV (@0x0) received by PID 17722 (TID 0x7f358783f700) from PID 0; stack trace: ***
[2m[36m(pid=17725)[0m     @     0x7f3124f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17725)[0m     @     0x7f3124f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=17676)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17676)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17676)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17695)[0m     @     0x7f10be6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17695)[0m     @     0x7f10be641ad3 at::TensorIterator::for_each()
[2m[36m(pid=17695)[0m     @     0x7f10be641d91 at::TensorIterator::for_each()
[2m[36m(pid=17695)[0m     @     0x7f10bef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17695)[0m     @     0x7f10bef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17647)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17647)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17647)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17647)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17647)[0m *** SIGSEGV (@0x0) received by PID 17647 (TID 0x7f3bd21f4700) from PID 0; stack trace: ***
[2m[36m(pid=17648)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17648)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17648)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17648)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17648)[0m *** SIGSEGV (@0x0) received by PID 17648 (TID 0x7f9d8368a700) from PID 0; stack trace: ***
[2m[36m(pid=17623)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17623)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17623)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17717)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17717)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17717)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17731)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17731)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17731)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17733)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17733)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17733)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17733)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17733)[0m *** SIGSEGV (@0x0) received by PID 17733 (TID 0x7f17b5c4f700) from PID 0; stack trace: ***
[2m[36m(pid=17733)[0m     @     0x7f17b5828390 (unknown)
[2m[36m(pid=17733)[0m     @     0x7ee8b56f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17733)[0m     @     0x7ee8b4e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17719)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17719)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17719)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17719)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17719)[0m *** SIGSEGV (@0x0) received by PID 17719 (TID 0x7f1ef8c71700) from PID 0; stack trace: ***
[2m[36m(pid=17653)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17653)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17653)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17618)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17618)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17618)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17618)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17622)[0m     @     0x7fb333e3a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17622)[0m     @     0x7fb333e3aad3 at::TensorIterator::for_each()
[2m[36m(pid=17622)[0m     @     0x7fb333e3ad91 at::TensorIterator::for_each()
[2m[36m(pid=17622)[0m     @     0x7fb33471db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17622)[0m     @     0x7fb334740c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17632)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17632)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17632)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17632)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17632)[0m *** SIGSEGV (@0x0) received by PID 17632 (TID 0x7f9579874700) from PID 0; stack trace: ***
[2m[36m(pid=17704)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17704)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17704)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17704)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17704)[0m *** SIGSEGV (@0x0) received by PID 17704 (TID 0x7f4149dcd700) from PID 0; stack trace: ***
[2m[36m(pid=17700)[0m     @     0x7f5c70c92ad3 at::TensorIterator::for_each()
[2m[36m(pid=17700)[0m     @     0x7f5c70c92d91 at::TensorIterator::for_each()
[2m[36m(pid=17700)[0m     @     0x7f5c71575b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17700)[0m     @     0x7f5c71598c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17698)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17698)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17698)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17715)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17715)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17715)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17715)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17715)[0m *** SIGSEGV (@0x0) received by PID 17715 (TID 0x7f44b33cf700) from PID 0; stack trace: ***
[2m[36m(pid=17716)[0m     @     0x7fb3ee4b1d91 at::TensorIterator::for_each()
[2m[36m(pid=17716)[0m     @     0x7fb3eed94b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17716)[0m     @     0x7fb3eedb7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17716)[0m     @     0x7fb3ee259a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17716)[0m     @     0x7fb3ee257388 at::native::copy_impl()
[2m[36m(pid=17617)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17617)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17617)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17617)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17617)[0m *** SIGSEGV (@0x0) received by PID 17617 (TID 0x7fc59a8a5700) from PID 0; stack trace: ***
[2m[36m(pid=17699)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17699)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17699)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17699)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17699)[0m *** SIGSEGV (@0x0) received by PID 17699 (TID 0x7f7b19674700) from PID 0; stack trace: ***
[2m[36m(pid=17708)[0m     @     0x7f1192e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=17708)[0m     @     0x7f1192e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=17708)[0m     @     0x7f1193762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17708)[0m     @     0x7f1193785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17708)[0m     @     0x7f1192c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17708)[0m     @     0x7f1192c25388 at::native::copy_impl()
[2m[36m(pid=17630)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17630)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17630)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17630)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17630)[0m *** SIGSEGV (@0x0) received by PID 17630 (TID 0x7fab24590700) from PID 0; stack trace: ***
[2m[36m(pid=17655)[0m     @     0x7f56a78028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17655)[0m     @     0x7f56a7802ad3 at::TensorIterator::for_each()
[2m[36m(pid=17655)[0m     @     0x7f56a7802d91 at::TensorIterator::for_each()
[2m[36m(pid=17655)[0m     @     0x7f56a80e5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17709)[0m     @     0x7f4ae531a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17709)[0m     @     0x7f4ae531aad3 at::TensorIterator::for_each()
[2m[36m(pid=17634)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17634)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17634)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17634)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17634)[0m *** SIGSEGV (@0x0) received by PID 17634 (TID 0x7fc3c5297700) from PID 0; stack trace: ***
[2m[36m(pid=17634)[0m     @     0x7fc3c4e70390 (unknown)
[2m[36m(pid=17634)[0m     @     0x7f94c4e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17634)[0m     @     0x7f94c453d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17674)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17674)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17674)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17638)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17638)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17638)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17642)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17642)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17642)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17659)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17659)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17659)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17650)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17650)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17650)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17723)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17723)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17723)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17723)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17723)[0m *** SIGSEGV (@0x0) received by PID 17723 (TID 0x7fdff7fa9700) from PID 0; stack trace: ***
[2m[36m(pid=17736)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17736)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17736)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17626)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17626)[0m *** SIGSEGV (@0x0) received by PID 17626 (TID 0x7f220bbc7700) from PID 0; stack trace: ***
[2m[36m(pid=17702)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17702)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17702)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17727)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17727)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17727)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17727)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17727)[0m *** SIGSEGV (@0x0) received by PID 17727 (TID 0x7f34fc32f700) from PID 0; stack trace: ***
[2m[36m(pid=17697)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17697)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17697)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17697)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17697)[0m *** SIGSEGV (@0x0) received by PID 17697 (TID 0x7fd535294700) from PID 0; stack trace: ***
[2m[36m(pid=17629)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17629)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17629)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17629)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17629)[0m *** SIGSEGV (@0x0) received by PID 17629 (TID 0x7f4864c3f700) from PID 0; stack trace: ***
[2m[36m(pid=17741)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17741)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17741)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17741)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17741)[0m *** SIGSEGV (@0x0) received by PID 17741 (TID 0x7f233dfdb700) from PID 0; stack trace: ***
[2m[36m(pid=17741)[0m     @     0x7f233dbb4390 (unknown)
[2m[36m(pid=17682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17682)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17682)[0m *** SIGSEGV (@0x0) received by PID 17682 (TID 0x7fe5ce7fa700) from PID 0; stack trace: ***
[2m[36m(pid=17682)[0m     @     0x7fe5ce3d3390 (unknown)
[2m[36m(pid=17682)[0m     @     0x7fb6ce34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17657)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17657)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17657)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17657)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17657)[0m *** SIGSEGV (@0x0) received by PID 17657 (TID 0x7f3b32f7d700) from PID 0; stack trace: ***
[2m[36m(pid=17657)[0m     @     0x7f3b32b56390 (unknown)
[2m[36m(pid=17657)[0m     @     0x7f0c329ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17657)[0m     @     0x7f0c320f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17712)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17712)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17712)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17712)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17712)[0m *** SIGSEGV (@0x0) received by PID 17712 (TID 0x7fc993ed4700) from PID 0; stack trace: ***
[2m[36m(pid=17620)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17620)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17620)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17620)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17620)[0m *** SIGSEGV (@0x0) received by PID 17620 (TID 0x7f9945fa7700) from PID 0; stack trace: ***
[2m[36m(pid=17620)[0m     @     0x7f9945b80390 (unknown)
[2m[36m(pid=17706)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17706)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17706)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17706)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17706)[0m *** SIGSEGV (@0x0) received by PID 17706 (TID 0x7fc15a1a4700) from PID 0; stack trace: ***
[2m[36m(pid=17706)[0m     @     0x7fc159d7d390 (unknown)
[2m[36m(pid=17706)[0m     @     0x7f9259d37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17706)[0m     @     0x7f92594627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17703)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17703)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17703)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17703)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17703)[0m *** SIGSEGV (@0x0) received by PID 17703 (TID 0x7fab30073700) from PID 0; stack trace: ***
[2m[36m(pid=17703)[0m     @     0x7fab2fc4c390 (unknown)
[2m[36m(pid=17703)[0m     @     0x7f7c2faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17703)[0m     @     0x7f7c2f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17744)[0m     @     0x7f76aa14fd91 at::TensorIterator::for_each()
[2m[36m(pid=17744)[0m     @     0x7f76aaa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17744)[0m     @     0x7f76aaa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17744)[0m     @     0x7f76a9ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17744)[0m     @     0x7f76a9ef5388 at::native::copy_impl()
[2m[36m(pid=17744)[0m     @     0x7f76a9ef75a4 at::native::copy_()
[2m[36m(pid=17744)[0m     @     0x7f76aa5e24f5 at::Tensor::copy_()
[2m[36m(pid=17744)[0m     @     0x7f76acab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17748)[0m     @     0x7f7607ac6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17748)[0m     @     0x7f7607ae9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17748)[0m     @     0x7f7606f8ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17748)[0m     @     0x7f7606f89388 at::native::copy_impl()
[2m[36m(pid=17748)[0m     @     0x7f7606f8b5a4 at::native::copy_()
[2m[36m(pid=17748)[0m     @     0x7f76076764f5 at::Tensor::copy_()
[2m[36m(pid=17748)[0m     @     0x7f7609b498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17633)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17633)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17633)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17633)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17633)[0m *** SIGSEGV (@0x0) received by PID 17633 (TID 0x7f18791a8700) from PID 0; stack trace: ***
[2m[36m(pid=17633)[0m     @     0x7f1878d81390 (unknown)
[2m[36m(pid=17633)[0m     @     0x7ee978c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17633)[0m     @     0x7ee97839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17633)[0m     @     0x7ee9783a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17757)[0m     @     0x7ee1aa6fcb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17757)[0m     @     0x7ee1aa71fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17757)[0m     @     0x7ee1a9bc1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17757)[0m     @     0x7ee1a9bbf388 at::native::copy_impl()
[2m[36m(pid=17757)[0m     @     0x7ee1a9bc15a4 at::native::copy_()
[2m[36m(pid=17757)[0m     @     0x7ee1aa2ac4f5 at::Tensor::copy_()
[2m[36m(pid=17757)[0m     @     0x7ee1ac77f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17641)[0m     @     0x7fb34a14fad3 at::TensorIterator::for_each()
[2m[36m(pid=17641)[0m     @     0x7fb34a14fd91 at::TensorIterator::for_each()
[2m[36m(pid=17641)[0m     @     0x7fb34aa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17641)[0m     @     0x7fb34aa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17641)[0m     @     0x7fb349ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17641)[0m     @     0x7fb349ef5388 at::native::copy_impl()
[2m[36m(pid=17641)[0m     @     0x7fb349ef75a4 at::native::copy_()
[2m[36m(pid=17747)[0m     @     0x7f5b6250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17747)[0m     @     0x7f5b6252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17747)[0m     @     0x7f5b619cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17747)[0m     @     0x7f5b619cd388 at::native::copy_impl()
[2m[36m(pid=17747)[0m     @     0x7f5b619cf5a4 at::native::copy_()
[2m[36m(pid=17747)[0m     @     0x7f5b620ba4f5 at::Tensor::copy_()
[2m[36m(pid=17747)[0m     @     0x7f5b6458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17631)[0m     @     0x7f7929c40d91 at::TensorIterator::for_each()
[2m[36m(pid=17631)[0m     @     0x7f792a523b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17631)[0m     @     0x7f792a546c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17631)[0m     @     0x7f79299e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17631)[0m     @     0x7f79299e6388 at::native::copy_impl()
[2m[36m(pid=17631)[0m     @     0x7f79299e85a4 at::native::copy_()
[2m[36m(pid=17631)[0m     @     0x7f792a0d34f5 at::Tensor::copy_()
[2m[36m(pid=17631)[0m     @     0x7f792c5a68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17761)[0m     @     0x7fa4a9278b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17761)[0m     @     0x7fa4a929bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17761)[0m     @     0x7fa4a873da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17761)[0m     @     0x7fa4a873b388 at::native::copy_impl()
[2m[36m(pid=17761)[0m     @     0x7fa4a873d5a4 at::native::copy_()
[2m[36m(pid=17761)[0m     @     0x7fa4a8e284f5 at::Tensor::copy_()
[2m[36m(pid=17761)[0m     @     0x7fa4ab2fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17680)[0m     @     0x7f58b9ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=17680)[0m     @     0x7f58ba7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17680)[0m     @     0x7f58ba7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17680)[0m     @     0x7f58b9c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17680)[0m     @     0x7f58b9c8f388 at::native::copy_impl()
[2m[36m(pid=17680)[0m     @     0x7f58b9c915a4 at::native::copy_()
[2m[36m(pid=17680)[0m     @     0x7f58ba37c4f5 at::Tensor::copy_()
[2m[36m(pid=17680)[0m     @     0x7f58bc84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17729)[0m     @     0x7f26817a8d91 at::TensorIterator::for_each()
[2m[36m(pid=17729)[0m     @     0x7f268208bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17729)[0m     @     0x7f26820aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17729)[0m     @     0x7f2681550a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17729)[0m     @     0x7f268154e388 at::native::copy_impl()
[2m[36m(pid=17729)[0m     @     0x7f26815505a4 at::native::copy_()
[2m[36m(pid=17729)[0m     @     0x7f2681c3b4f5 at::Tensor::copy_()
[2m[36m(pid=17729)[0m     @     0x7f268410e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17684)[0m     @     0x7f64290c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17684)[0m     @     0x7f64290e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17684)[0m     @     0x7f642858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17684)[0m     @     0x7f6428589388 at::native::copy_impl()
[2m[36m(pid=17684)[0m     @     0x7f642858b5a4 at::native::copy_()
[2m[36m(pid=17684)[0m     @     0x7f6428c764f5 at::Tensor::copy_()
[2m[36m(pid=17684)[0m     @     0x7f642b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17672)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17672)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17672)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17672)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17672)[0m *** SIGSEGV (@0x0) received by PID 17672 (TID 0x7f32f51a5700) from PID 0; stack trace: ***
[2m[36m(pid=17672)[0m     @     0x7f32f4d7e390 (unknown)
[2m[36m(pid=17672)[0m     @     0x7f03f4c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17672)[0m     @     0x7f03f439f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17672)[0m     @     0x7f03f43a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17743)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17743)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17743)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17743)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17743)[0m *** SIGSEGV (@0x0) received by PID 17743 (TID 0x7f4fc2f15700) from PID 0; stack trace: ***
[2m[36m(pid=17743)[0m     @     0x7f4fc2aee390 (unknown)
[2m[36m(pid=17743)[0m     @     0x7f20c29ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17743)[0m     @     0x7f20c20f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17743)[0m     @     0x7f20c20fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17624)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17624)[0m *** SIGSEGV (@0x0) received by PID 17624 (TID 0x7fdcd0e99700) from PID 0; stack trace: ***
[2m[36m(pid=17624)[0m     @     0x7fdcd0a72390 (unknown)
[2m[36m(pid=17624)[0m     @     0x7fadd0940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17624)[0m     @     0x7fadd006b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17677)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17677)[0m *** SIGSEGV (@0x0) received by PID 17677 (TID 0x7f0e2c7cf700) from PID 0; stack trace: ***
[2m[36m(pid=17677)[0m     @     0x7f0e2c3a8390 (unknown)
[2m[36m(pid=17677)[0m     @     0x7edf2c336f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17677)[0m     @     0x7edf2ba617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17677)[0m     @     0x7edf2ba648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17721)[0m     @     0x7f3ae11388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17721)[0m     @     0x7f3ae1138ad3 at::TensorIterator::for_each()
[2m[36m(pid=17721)[0m     @     0x7f3ae1138d91 at::TensorIterator::for_each()
[2m[36m(pid=17721)[0m     @     0x7f3ae1a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17721)[0m     @     0x7f3ae1a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17616)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17616)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17616)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17616)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17616)[0m *** SIGSEGV (@0x0) received by PID 17616 (TID 0x7fb0bf017700) from PID 0; stack trace: ***
[2m[36m(pid=17616)[0m     @     0x7fb0bebf0390 (unknown)
[2m[36m(pid=17616)[0m     @     0x7f81bea13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17616)[0m     @     0x7f81be13e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17616)[0m     @     0x7f81be1418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17619)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17619)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17619)[0m *** SIGSEGV (@0x0) received by PID 17619 (TID 0x7f83fbf8e700) from PID 0; stack trace: ***
[2m[36m(pid=17619)[0m     @     0x7f83fbb67390 (unknown)
[2m[36m(pid=17619)[0m     @     0x7f54fbaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17619)[0m     @     0x7f54fb2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17722)[0m     @     0x7f3587418390 (unknown)
[2m[36m(pid=17722)[0m     @     0x7f06873cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17722)[0m     @     0x7f0686af87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17722)[0m     @     0x7f0686afb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17725)[0m     @     0x7f3124f27d91 at::TensorIterator::for_each()
[2m[36m(pid=17725)[0m     @     0x7f312580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17725)[0m     @     0x7f312582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17725)[0m     @     0x7f3124ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17725)[0m     @     0x7f3124ccd388 at::native::copy_impl()
[2m[36m(pid=17725)[0m     @     0x7f3124ccf5a4 at::native::copy_()
[2m[36m(pid=17676)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17676)[0m *** SIGSEGV (@0x0) received by PID 17676 (TID 0x7f98473b2700) from PID 0; stack trace: ***
[2m[36m(pid=17676)[0m     @     0x7f9846f8b390 (unknown)
[2m[36m(pid=17676)[0m     @     0x7f6946f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17676)[0m     @     0x7f694663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17676)[0m     @     0x7f69466418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17695)[0m     @     0x7f10be3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17695)[0m     @     0x7f10be3e7388 at::native::copy_impl()
[2m[36m(pid=17695)[0m     @     0x7f10be3e95a4 at::native::copy_()
[2m[36m(pid=17695)[0m     @     0x7f10bead44f5 at::Tensor::copy_()
[2m[36m(pid=17695)[0m     @     0x7f10c0fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17647)[0m     @     0x7f3bd1dcd390 (unknown)
[2m[36m(pid=17647)[0m     @     0x7f0cd1d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17647)[0m     @     0x7f0cd147d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17647)[0m     @     0x7f0cd14808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17648)[0m     @     0x7f9d83263390 (unknown)
[2m[36m(pid=17648)[0m     @     0x7f6e83124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17648)[0m     @     0x7f6e8284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17648)[0m     @     0x7f6e828528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17623)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17623)[0m *** SIGSEGV (@0x0) received by PID 17623 (TID 0x7f989601d700) from PID 0; stack trace: ***
[2m[36m(pid=17623)[0m     @     0x7f9895bf6390 (unknown)
[2m[36m(pid=17623)[0m     @     0x7f6995b9ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17623)[0m     @     0x7f69952ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17623)[0m     @     0x7f69952cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17701)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17701)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17701)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17701)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17701)[0m *** SIGSEGV (@0x0) received by PID 17701 (TID 0x7f8a72893700) from PID 0; stack trace: ***
[2m[36m(pid=17701)[0m     @     0x7f8a7246c390 (unknown)
[2m[36m(pid=17701)[0m     @     0x7f5b7234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17701)[0m     @     0x7f5b71a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17635)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17635)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17635)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17635)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17635)[0m *** SIGSEGV (@0x0) received by PID 17635 (TID 0x7fcaf43f7700) from PID 0; stack trace: ***
[2m[36m(pid=17635)[0m     @     0x7fcaf3fd0390 (unknown)
[2m[36m(pid=17635)[0m     @     0x7f9bf3eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17635)[0m     @     0x7f9bf35e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17705)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17705)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17705)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17705)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17705)[0m *** SIGSEGV (@0x0) received by PID 17705 (TID 0x7f6ca145d700) from PID 0; stack trace: ***
[2m[36m(pid=17636)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17636)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17636)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17636)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17636)[0m *** SIGSEGV (@0x0) received by PID 17636 (TID 0x7fd27430e700) from PID 0; stack trace: ***
[2m[36m(pid=17636)[0m     @     0x7fd273ee7390 (unknown)
[2m[36m(pid=17636)[0m     @     0x7fa373e89f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17636)[0m     @     0x7fa3735b47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17636)[0m     @     0x7fa3735b78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17627)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17627)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17627)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17627)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17627)[0m *** SIGSEGV (@0x0) received by PID 17627 (TID 0x7f0e25ed5700) from PID 0; stack trace: ***
[2m[36m(pid=17688)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17688)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17688)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17688)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17688)[0m *** SIGSEGV (@0x0) received by PID 17688 (TID 0x7f398d1a0700) from PID 0; stack trace: ***
[2m[36m(pid=17685)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17685)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17685)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17685)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17685)[0m *** SIGSEGV (@0x0) received by PID 17685 (TID 0x7f7223724700) from PID 0; stack trace: ***
[2m[36m(pid=17685)[0m     @     0x7f72232fd390 (unknown)
[2m[36m(pid=17685)[0m     @     0x7f4323229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17685)[0m     @     0x7f43229547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17753)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17753)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17753)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17753)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17753)[0m *** SIGSEGV (@0x0) received by PID 17753 (TID 0x7fa724a03700) from PID 0; stack trace: ***
[2m[36m(pid=17753)[0m     @     0x7fa7245dc390 (unknown)
[2m[36m(pid=17753)[0m     @     0x7f782457cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17753)[0m     @     0x7f7823ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17713)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17713)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17713)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17713)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17713)[0m *** SIGSEGV (@0x0) received by PID 17713 (TID 0x7fba99a59700) from PID 0; stack trace: ***
[2m[36m(pid=17713)[0m     @     0x7fba99632390 (unknown)
[2m[36m(pid=17644)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17644)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17644)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17644)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17644)[0m *** SIGSEGV (@0x0) received by PID 17644 (TID 0x7fae3623c700) from PID 0; stack trace: ***
[2m[36m(pid=17717)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17717)[0m *** SIGSEGV (@0x0) received by PID 17717 (TID 0x7f303c91a700) from PID 0; stack trace: ***
[2m[36m(pid=17717)[0m     @     0x7f303c4f3390 (unknown)
[2m[36m(pid=17717)[0m     @     0x7f013c3e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17717)[0m     @     0x7f013bb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17717)[0m     @     0x7f013bb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17731)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17731)[0m *** SIGSEGV (@0x0) received by PID 17731 (TID 0x7fcbb6548700) from PID 0; stack trace: ***
[2m[36m(pid=17731)[0m     @     0x7fcbb6121390 (unknown)
[2m[36m(pid=17731)[0m     @     0x7f9cb60cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17731)[0m     @     0x7f9cb57f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17731)[0m     @     0x7f9cb57fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17733)[0m     @     0x7ee8b4e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17733)[0m     @     0x7ee8b4e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=17733)[0m     @     0x7ee8b4e22d91 at::TensorIterator::for_each()
[2m[36m(pid=17733)[0m     @     0x7ee8b5705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17719)[0m     @     0x7f1ef884a390 (unknown)
[2m[36m(pid=17719)[0m     @     0x7eeff8563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17719)[0m     @     0x7eeff7c8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17719)[0m     @     0x7eeff7c918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17653)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17653)[0m *** SIGSEGV (@0x0) received by PID 17653 (TID 0x7f8826820700) from PID 0; stack trace: ***
[2m[36m(pid=17653)[0m     @     0x7f88263f9390 (unknown)
[2m[36m(pid=17653)[0m     @     0x7f592634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17653)[0m     @     0x7f5925a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17653)[0m     @     0x7f5925a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17618)[0m *** SIGSEGV (@0x0) received by PID 17618 (TID 0x7fcced8d3700) from PID 0; stack trace: ***
[2m[36m(pid=17618)[0m     @     0x7fcced4ac390 (unknown)
[2m[36m(pid=17618)[0m     @     0x7f9ded3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17618)[0m     @     0x7f9decaf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17618)[0m     @     0x7f9decafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17622)[0m     @     0x7fb333be2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17622)[0m     @     0x7fb333be0388 at::native::copy_impl()
[2m[36m(pid=17622)[0m     @     0x7fb333be25a4 at::native::copy_()
[2m[36m(pid=17622)[0m     @     0x7fb3342cd4f5 at::Tensor::copy_()
[2m[36m(pid=17632)[0m     @     0x7f957944d390 (unknown)
[2m[36m(pid=17632)[0m     @     0x7f66793ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17632)[0m     @     0x7f6678af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17632)[0m     @     0x7f6678afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17632)[0m     @     0x7f6678afaad3 at::TensorIterator::for_each()
[2m[36m(pid=17704)[0m     @     0x7f41499a6390 (unknown)
[2m[36m(pid=17704)[0m     @     0x7f12497f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17704)[0m     @     0x7f1248f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17704)[0m     @     0x7f1248f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17700)[0m     @     0x7f5c70a3aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17700)[0m     @     0x7f5c70a38388 at::native::copy_impl()
[2m[36m(pid=17700)[0m     @     0x7f5c70a3a5a4 at::native::copy_()
[2m[36m(pid=17700)[0m     @     0x7f5c711254f5 at::Tensor::copy_()
[2m[36m(pid=17700)[0m     @     0x7f5c735f88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17698)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17698)[0m *** SIGSEGV (@0x0) received by PID 17698 (TID 0x7f96f48b7700) from PID 0; stack trace: ***
[2m[36m(pid=17698)[0m     @     0x7f96f4490390 (unknown)
[2m[36m(pid=17698)[0m     @     0x7f67f4333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17698)[0m     @     0x7f67f3a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17698)[0m     @     0x7f67f3a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17715)[0m     @     0x7f44b2fa8390 (unknown)
[2m[36m(pid=17715)[0m     @     0x7f15b2f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17715)[0m     @     0x7f15b263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17715)[0m     @     0x7f15b26418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17716)[0m     @     0x7fb3ee2595a4 at::native::copy_()
[2m[36m(pid=17716)[0m     @     0x7fb3ee9444f5 at::Tensor::copy_()
[2m[36m(pid=17716)[0m     @     0x7fb3f0e178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17716)[0m     @     0x7fb3ee9444f5 at::Tensor::copy_()
[2m[36m(pid=17716)[0m     @     0x7fb3f49ef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17716)[0m     @     0x559e3c798fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17716)[0m     @     0x559e3c6f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17716)[0m     @     0x559e3c77ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17716)[0m     @     0x559e3c77fa20 method_vectorcall
[2m[36m(pid=17716)[0m     @     0x559e3c6f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17716)[0m     @     0x559e3c77ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17716)[0m     @     0x559e3c77f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17716)[0m     @     0x559e3c6f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17716)[0m     @     0x559e3c77ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17716)[0m     @     0x559e3c77f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17716)[0m     @     0x559e3c6f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17716)[0m     @     0x559e3c77ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17716)[0m     @     0x559e3c77f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17716)[0m     @     0x559e3c6f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17716)[0m     @     0x559e3c77ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17716)[0m     @     0x559e3c77f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17716)[0m     @     0x559e3c6f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17617)[0m     @     0x7fc59a47e390 (unknown)
[2m[36m(pid=17617)[0m     @     0x7f969a193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17617)[0m     @     0x7f96998be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17617)[0m     @     0x7f96998c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17617)[0m     @     0x7f96998c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=17699)[0m     @     0x7f7b1924d390 (unknown)
[2m[36m(pid=17699)[0m     @     0x7f4c190b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17699)[0m     @     0x7f4c187e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17699)[0m     @     0x7f4c187e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17708)[0m     @     0x7f1192c275a4 at::native::copy_()
[2m[36m(pid=17708)[0m     @     0x7f11933124f5 at::Tensor::copy_()
[2m[36m(pid=17708)[0m     @     0x7f11957e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17630)[0m     @     0x7fab24169390 (unknown)
[2m[36m(pid=17630)[0m     @     0x7f7c23ed8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17630)[0m     @     0x7f7c236037db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17630)[0m     @     0x7f7c236068f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17630)[0m     @     0x7f7c23606ad3 at::TensorIterator::for_each()
[2m[36m(pid=17655)[0m     @     0x7f56a8108c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17655)[0m     @     0x7f56a75aaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17655)[0m     @     0x7f56a75a8388 at::native::copy_impl()
[2m[36m(pid=17655)[0m     @     0x7f56a75aa5a4 at::native::copy_()
[2m[36m(pid=17709)[0m     @     0x7f4ae531ad91 at::TensorIterator::for_each()
[2m[36m(pid=17709)[0m     @     0x7f4ae5bfdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17709)[0m     @     0x7f4ae5c20c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17709)[0m     @     0x7f4ae50c2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17709)[0m     @     0x7f4ae50c0388 at::native::copy_impl()
[2m[36m(pid=17634)[0m     @     0x7f94c45408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17634)[0m     @     0x7f94c4540ad3 at::TensorIterator::for_each()
[2m[36m(pid=17634)[0m     @     0x7f94c4540d91 at::TensorIterator::for_each()
[2m[36m(pid=17634)[0m     @     0x7f94c4e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17674)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17674)[0m *** SIGSEGV (@0x0) received by PID 17674 (TID 0x7f5847050700) from PID 0; stack trace: ***
[2m[36m(pid=17674)[0m     @     0x7f5846c29390 (unknown)
[2m[36m(pid=17674)[0m     @     0x7f2946badf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17674)[0m     @     0x7f29462d87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17638)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17638)[0m *** SIGSEGV (@0x0) received by PID 17638 (TID 0x7f1544637700) from PID 0; stack trace: ***
[2m[36m(pid=17638)[0m     @     0x7f1544210390 (unknown)
[2m[36m(pid=17638)[0m     @     0x7ee643ed8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17638)[0m     @     0x7ee6436037db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17638)[0m     @     0x7ee6436068f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17638)[0m     @     0x7ee643606ad3 at::TensorIterator::for_each()
[2m[36m(pid=17738)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17738)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17738)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17738)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17738)[0m *** SIGSEGV (@0x0) received by PID 17738 (TID 0x7f1be1005700) from PID 0; stack trace: ***
[2m[36m(pid=17738)[0m     @     0x7f1be0bde390 (unknown)
[2m[36m(pid=17738)[0m     @     0x7eece097ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17738)[0m     @     0x7eece00aa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17738)[0m     @     0x7eece00ad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17670)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17670)[0m *** SIGSEGV (@0x0) received by PID 17670 (TID 0x7f4e6c758700) from PID 0; stack trace: ***
[2m[36m(pid=17670)[0m     @     0x7f4e6c331390 (unknown)
[2m[36m(pid=17670)[0m     @     0x7f1f6c2b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17670)[0m     @     0x7f1f6b9dc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17670)[0m     @     0x7f1f6b9df8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17670)[0m     @     0x7f1f6b9dfad3 at::TensorIterator::for_each()
[2m[36m(pid=17642)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17642)[0m *** SIGSEGV (@0x0) received by PID 17642 (TID 0x7f993c024700) from PID 0; stack trace: ***
[2m[36m(pid=17642)[0m     @     0x7f993bbfd390 (unknown)
[2m[36m(pid=17642)[0m     @     0x7f6a3baf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17642)[0m     @     0x7f6a3b2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17659)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17659)[0m *** SIGSEGV (@0x0) received by PID 17659 (TID 0x7f41f4621700) from PID 0; stack trace: ***
[2m[36m(pid=17659)[0m     @     0x7f41f41fa390 (unknown)
[2m[36m(pid=17659)[0m     @     0x7f12f401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17659)[0m     @     0x7f12f37477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17659)[0m     @     0x7f12f374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17659)[0m     @     0x7f12f374aad3 at::TensorIterator::for_each()
[2m[36m(pid=17707)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17707)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17707)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17707)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17707)[0m *** SIGSEGV (@0x0) received by PID 17707 (TID 0x7f0180981700) from PID 0; stack trace: ***
[2m[36m(pid=17707)[0m     @     0x7f018055a390 (unknown)
[2m[36m(pid=17707)[0m     @     0x7ed2804f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17621)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17621)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17621)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17621)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17621)[0m *** SIGSEGV (@0x0) received by PID 17621 (TID 0x7fd9063b2700) from PID 0; stack trace: ***
[2m[36m(pid=17621)[0m     @     0x7fd905f8b390 (unknown)
[2m[36m(pid=17621)[0m     @     0x7faa05e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17621)[0m     @     0x7faa0554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17650)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17650)[0m *** SIGSEGV (@0x0) received by PID 17650 (TID 0x7ff5b94e8700) from PID 0; stack trace: ***
[2m[36m(pid=17650)[0m     @     0x7ff5b90c1390 (unknown)
[2m[36m(pid=17650)[0m     @     0x7fc6b9075f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17650)[0m     @     0x7fc6b87a07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17650)[0m     @     0x7fc6b87a38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17650)[0m     @     0x7fc6b87a3ad3 at::TensorIterator::for_each()
[2m[36m(pid=17723)[0m     @     0x7fdff7b82390 (unknown)
[2m[36m(pid=17723)[0m     @     0x7fb0f7af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17723)[0m     @     0x7fb0f72207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17723)[0m     @     0x7fb0f72238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17723)[0m     @     0x7fb0f7223ad3 at::TensorIterator::for_each()
[2m[36m(pid=17736)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17736)[0m *** SIGSEGV (@0x0) received by PID 17736 (TID 0x7fef16a45700) from PID 0; stack trace: ***
[2m[36m(pid=17736)[0m     @     0x7fef1661e390 (unknown)
[2m[36m(pid=17736)[0m     @     0x7fc01657cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17736)[0m     @     0x7fc015ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17736)[0m     @     0x7fc015caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17626)[0m     @     0x7f220b7a0390 (unknown)
[2m[36m(pid=17626)[0m     @     0x7ef30b61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17626)[0m     @     0x7ef30ad4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17626)[0m     @     0x7ef30ad4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17626)[0m     @     0x7ef30ad4dad3 at::TensorIterator::for_each()
[2m[36m(pid=17626)[0m     @     0x7ef30ad4dd91 at::TensorIterator::for_each()
[2m[36m(pid=17626)[0m     @     0x7ef30b630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=17694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=17694)[0m *** Aborted at 1604572434 (unix time) try "date -d @1604572434" if you are using GNU date ***
[2m[36m(pid=17694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17694)[0m *** SIGSEGV (@0x0) received by PID 17694 (TID 0x7f14e84ac700) from PID 0; stack trace: ***
[2m[36m(pid=17694)[0m     @     0x7f14e8085390 (unknown)
[2m[36m(pid=17694)[0m     @     0x7ee5e7eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17694)[0m     @     0x7ee5e75e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17694)[0m     @     0x7ee5e75e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17702)[0m PC: @                0x0 (unknown)
[2m[36m(pid=17702)[0m *** SIGSEGV (@0x0) received by PID 17702 (TID 0x7f0271bba700) from PID 0; stack trace: ***
[2m[36m(pid=17702)[0m     @     0x7f0271793390 (unknown)
[2m[36m(pid=17702)[0m     @     0x7ed3716f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17702)[0m     @     0x7ed370e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17702)[0m     @     0x7ed370e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17702)[0m     @     0x7ed370e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=17727)[0m     @     0x7f34fbf08390 (unknown)
[2m[36m(pid=17727)[0m     @     0x7f05fbeb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17727)[0m     @     0x7f05fb5e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17727)[0m     @     0x7f05fb5e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17727)[0m     @     0x7f05fb5e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=17697)[0m     @     0x7fd534e6d390 (unknown)
[2m[36m(pid=17697)[0m     @     0x7fa634e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17697)[0m     @     0x7fa63453d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17629)[0m     @     0x7f4864818390 (unknown)
[2m[36m(pid=17629)[0m     @     0x7f196474cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17629)[0m     @     0x7f1963e777db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17629)[0m     @     0x7f1963e7a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17629)[0m     @     0x7f1963e7aad3 at::TensorIterator::for_each()
[2m[36m(pid=17741)[0m     @     0x7ef43db5ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17741)[0m     @     0x7ef43d28a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17741)[0m     @     0x7ef43d28d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17682)[0m     @     0x7fb6cda767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17682)[0m     @     0x7fb6cda798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17682)[0m     @     0x7fb6cda79ad3 at::TensorIterator::for_each()
[2m[36m(pid=17657)[0m     @     0x7f0c320fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17657)[0m     @     0x7f0c320faad3 at::TensorIterator::for_each()
[2m[36m(pid=17712)[0m     @     0x7fc993aad390 (unknown)
[2m[36m(pid=17712)[0m     @     0x7f9a93a23f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17712)[0m     @     0x7f9a9314e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17712)[0m     @     0x7f9a931518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17620)[0m     @     0x7f6a45ab7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17620)[0m     @     0x7f6a451e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17620)[0m     @     0x7f6a451e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17620)[0m     @     0x7f6a451e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=17706)[0m     @     0x7f92594658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17706)[0m     @     0x7f9259465ad3 at::TensorIterator::for_each()
[2m[36m(pid=17703)[0m     @     0x7f7c2f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17703)[0m     @     0x7f7c2f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=17703)[0m     @     0x7f7c2f223d91 at::TensorIterator::for_each()
[2m[36m(pid=17703)[0m     @     0x7f7c2fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17744)[0m     @     0x7f76aa5e24f5 at::Tensor::copy_()
[2m[36m(pid=17744)[0m     @     0x7f76b068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17744)[0m     @     0x55fe2e58ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17744)[0m     @     0x55fe2e4eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17744)[0m     @     0x55fe2e575baf _PyEval_EvalCodeWithName
[2m[36m(pid=17744)[0m     @     0x55fe2e576a20 method_vectorcall
[2m[36m(pid=17744)[0m     @     0x55fe2e4eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17744)[0m     @     0x55fe2e575baf _PyEval_EvalCodeWithName
[2m[36m(pid=17744)[0m     @     0x55fe2e576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17744)[0m     @     0x55fe2e4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17744)[0m     @     0x55fe2e575baf _PyEval_EvalCodeWithName
[2m[36m(pid=17744)[0m     @     0x55fe2e576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17744)[0m     @     0x55fe2e4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17744)[0m     @     0x55fe2e575baf _PyEval_EvalCodeWithName
[2m[36m(pid=17744)[0m     @     0x55fe2e576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17744)[0m     @     0x55fe2e4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17744)[0m     @     0x55fe2e575baf _PyEval_EvalCodeWithName
[2m[36m(pid=17744)[0m     @     0x55fe2e576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17744)[0m     @     0x55fe2e4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17748)[0m     @     0x7f76076764f5 at::Tensor::copy_()
[2m[36m(pid=17748)[0m     @     0x7f760d72179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17748)[0m     @     0x55769d1fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17748)[0m     @     0x55769d156b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17748)[0m     @     0x55769d1e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17748)[0m     @     0x55769d1e2a20 method_vectorcall
[2m[36m(pid=17748)[0m     @     0x55769d156bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17748)[0m     @     0x55769d1e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17748)[0m     @     0x55769d1e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17748)[0m     @     0x55769d157689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17748)[0m     @     0x55769d1e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17748)[0m     @     0x55769d1e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17748)[0m     @     0x55769d157689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17748)[0m     @     0x55769d1e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17748)[0m     @     0x55769d1e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17748)[0m     @     0x55769d157689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17748)[0m     @     0x55769d1e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17748)[0m     @     0x55769d1e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17748)[0m     @     0x55769d157689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17633)[0m     @     0x7ee9783a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=17633)[0m     @     0x7ee9783a2d91 at::TensorIterator::for_each()
[2m[36m(pid=17633)[0m     @     0x7ee978c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17633)[0m     @     0x7ee978ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17757)[0m     @     0x7ee1aa2ac4f5 at::Tensor::copy_()
[2m[36m(pid=17757)[0m     @     0x7ee1b035779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17757)[0m     @     0x55e23366ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17757)[0m     @     0x55e2335cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17757)[0m     @     0x55e233655baf _PyEval_EvalCodeWithName
[2m[36m(pid=17757)[0m     @     0x55e233656a20 method_vectorcall
[2m[36m(pid=17757)[0m     @     0x55e2335cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17757)[0m     @     0x55e233655baf _PyEval_EvalCodeWithName
[2m[36m(pid=17757)[0m     @     0x55e233656643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17757)[0m     @     0x55e2335cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17757)[0m     @     0x55e233655baf _PyEval_EvalCodeWithName
[2m[36m(pid=17757)[0m     @     0x55e233656643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17757)[0m     @     0x55e2335cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17757)[0m     @     0x55e233655baf _PyEval_EvalCodeWithName
[2m[36m(pid=17757)[0m     @     0x55e233656643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17757)[0m     @     0x55e2335cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17757)[0m     @     0x55e233655baf _PyEval_EvalCodeWithName
[2m[36m(pid=17757)[0m     @     0x55e233656643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17757)[0m     @     0x55e2335cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17641)[0m     @     0x7fb34a5e24f5 at::Tensor::copy_()
[2m[36m(pid=17641)[0m     @     0x7fb34cab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17641)[0m     @     0x7fb34a5e24f5 at::Tensor::copy_()
[2m[36m(pid=17641)[0m     @     0x7fb35068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17641)[0m     @     0x557bf6c81fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17641)[0m     @     0x557bf6bdcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17641)[0m     @     0x557bf6c67baf _PyEval_EvalCodeWithName
[2m[36m(pid=17641)[0m     @     0x557bf6c68a20 method_vectorcall
[2m[36m(pid=17641)[0m     @     0x557bf6bdcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17641)[0m     @     0x557bf6c67baf _PyEval_EvalCodeWithName
[2m[36m(pid=17641)[0m     @     0x557bf6c68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17641)[0m     @     0x557bf6bdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17641)[0m     @     0x557bf6c67baf _PyEval_EvalCodeWithName
[2m[36m(pid=17641)[0m     @     0x557bf6c68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17641)[0m     @     0x557bf6bdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17641)[0m     @     0x557bf6c67baf _PyEval_EvalCodeWithName
[2m[36m(pid=17641)[0m     @     0x557bf6c68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17641)[0m     @     0x557bf6bdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17641)[0m     @     0x557bf6c67baf _PyEval_EvalCodeWithName
[2m[36m(pid=17641)[0m     @     0x557bf6c68643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17641)[0m     @     0x557bf6bdd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17747)[0m     @     0x7f5b620ba4f5 at::Tensor::copy_()
[2m[36m(pid=17747)[0m     @     0x7f5b6816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17747)[0m     @     0x5580eef28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17747)[0m     @     0x5580eee83b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17747)[0m     @     0x5580eef0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17747)[0m     @     0x5580eef0fa20 method_vectorcall
[2m[36m(pid=17747)[0m     @     0x5580eee83bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17747)[0m     @     0x5580eef0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17747)[0m     @     0x5580eef0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17747)[0m     @     0x5580eee84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17747)[0m     @     0x5580eef0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17747)[0m     @     0x5580eef0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17747)[0m     @     0x5580eee84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17747)[0m     @     0x5580eef0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17747)[0m     @     0x5580eef0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17747)[0m     @     0x5580eee84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17747)[0m     @     0x5580eef0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17747)[0m     @     0x5580eef0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17747)[0m     @     0x5580eee84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17631)[0m     @     0x7f792a0d34f5 at::Tensor::copy_()
[2m[36m(pid=17631)[0m     @     0x7f793017e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17631)[0m     @     0x5565fc3e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17631)[0m     @     0x5565fc344b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17631)[0m     @     0x5565fc3cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17631)[0m     @     0x5565fc3d0a20 method_vectorcall
[2m[36m(pid=17631)[0m     @     0x5565fc344bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17631)[0m     @     0x5565fc3cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17631)[0m     @     0x5565fc3d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17631)[0m     @     0x5565fc345689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17631)[0m     @     0x5565fc3cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17631)[0m     @     0x5565fc3d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17631)[0m     @     0x5565fc345689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17631)[0m     @     0x5565fc3cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17631)[0m     @     0x5565fc3d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17631)[0m     @     0x5565fc345689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17631)[0m     @     0x5565fc3cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17631)[0m     @     0x5565fc3d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17631)[0m     @     0x5565fc345689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17761)[0m     @     0x7fa4a8e284f5 at::Tensor::copy_()
[2m[36m(pid=17761)[0m     @     0x7fa4aeed379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17761)[0m     @     0x56164c4aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17761)[0m     @     0x56164c405b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17761)[0m     @     0x56164c490baf _PyEval_EvalCodeWithName
[2m[36m(pid=17761)[0m     @     0x56164c491a20 method_vectorcall
[2m[36m(pid=17761)[0m     @     0x56164c405bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17761)[0m     @     0x56164c490baf _PyEval_EvalCodeWithName
[2m[36m(pid=17761)[0m     @     0x56164c491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17761)[0m     @     0x56164c406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17761)[0m     @     0x56164c490baf _PyEval_EvalCodeWithName
[2m[36m(pid=17761)[0m     @     0x56164c491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17761)[0m     @     0x56164c406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17761)[0m     @     0x56164c490baf _PyEval_EvalCodeWithName
[2m[36m(pid=17761)[0m     @     0x56164c491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17761)[0m     @     0x56164c406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17761)[0m     @     0x56164c490baf _PyEval_EvalCodeWithName
[2m[36m(pid=17761)[0m     @     0x56164c491643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17761)[0m     @     0x56164c406689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17680)[0m     @     0x7f58ba37c4f5 at::Tensor::copy_()
[2m[36m(pid=17680)[0m     @     0x7f58c042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17680)[0m     @     0x55d017ad7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17680)[0m     @     0x55d017a32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17680)[0m     @     0x55d017abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17680)[0m     @     0x55d017abea20 method_vectorcall
[2m[36m(pid=17680)[0m     @     0x55d017a32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17680)[0m     @     0x55d017abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17680)[0m     @     0x55d017abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17680)[0m     @     0x55d017a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17680)[0m     @     0x55d017abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17680)[0m     @     0x55d017abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17680)[0m     @     0x55d017a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17680)[0m     @     0x55d017abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17680)[0m     @     0x55d017abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17680)[0m     @     0x55d017a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17680)[0m     @     0x55d017abdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17680)[0m     @     0x55d017abe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17680)[0m     @     0x55d017a33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17729)[0m     @     0x7f2681c3b4f5 at::Tensor::copy_()
[2m[36m(pid=17729)[0m     @     0x7f2687ce679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17729)[0m     @     0x562fafce4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17729)[0m     @     0x562fafc3fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17729)[0m     @     0x562fafccabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17729)[0m     @     0x562fafccba20 method_vectorcall
[2m[36m(pid=17729)[0m     @     0x562fafc3fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17729)[0m     @     0x562fafccabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17729)[0m     @     0x562fafccb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17729)[0m     @     0x562fafc40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17729)[0m     @     0x562fafccabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17729)[0m     @     0x562fafccb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17729)[0m     @     0x562fafc40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17729)[0m     @     0x562fafccabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17729)[0m     @     0x562fafccb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17729)[0m     @     0x562fafc40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17729)[0m     @     0x562fafccabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17729)[0m     @     0x562fafccb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17729)[0m     @     0x562fafc40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17684)[0m     @     0x7f6428c764f5 at::Tensor::copy_()
[2m[36m(pid=17684)[0m     @     0x7f642ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17684)[0m     @     0x559693b94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17684)[0m     @     0x559693aefb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17684)[0m     @     0x559693b7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17684)[0m     @     0x559693b7ba20 method_vectorcall
[2m[36m(pid=17684)[0m     @     0x559693aefbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17684)[0m     @     0x559693b7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17684)[0m     @     0x559693b7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17684)[0m     @     0x559693af0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17684)[0m     @     0x559693b7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17684)[0m     @     0x559693b7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17684)[0m     @     0x559693af0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17684)[0m     @     0x559693b7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17684)[0m     @     0x559693b7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17684)[0m     @     0x559693af0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17684)[0m     @     0x559693b7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17684)[0m     @     0x559693b7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17684)[0m     @     0x559693af0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17672)[0m     @     0x7f03f43a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=17672)[0m     @     0x7f03f43a2d91 at::TensorIterator::for_each()
[2m[36m(pid=17672)[0m     @     0x7f03f4c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17672)[0m     @     0x7f03f4ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17672)[0m     @     0x7f03f414aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17743)[0m     @     0x7f20c20faad3 at::TensorIterator::for_each()
[2m[36m(pid=17743)[0m     @     0x7f20c20fad91 at::TensorIterator::for_each()
[2m[36m(pid=17743)[0m     @     0x7f20c29ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17743)[0m     @     0x7f20c2a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17743)[0m     @     0x7f20c1ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17624)[0m     @     0x7fadd006e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17624)[0m     @     0x7fadd006ead3 at::TensorIterator::for_each()
[2m[36m(pid=17624)[0m     @     0x7fadd006ed91 at::TensorIterator::for_each()
[2m[36m(pid=17624)[0m     @     0x7fadd0951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17624)[0m     @     0x7fadd0974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17677)[0m     @     0x7edf2ba64ad3 at::TensorIterator::for_each()
[2m[36m(pid=17677)[0m     @     0x7edf2ba64d91 at::TensorIterator::for_each()
[2m[36m(pid=17677)[0m     @     0x7edf2c347b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17677)[0m     @     0x7edf2c36ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17677)[0m     @     0x7edf2b80ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17677)[0m     @     0x7edf2b80a388 at::native::copy_impl()
[2m[36m(pid=17721)[0m     @     0x7f3ae0ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17721)[0m     @     0x7f3ae0ede388 at::native::copy_impl()
[2m[36m(pid=17721)[0m     @     0x7f3ae0ee05a4 at::native::copy_()
[2m[36m(pid=17721)[0m     @     0x7f3ae15cb4f5 at::Tensor::copy_()
[2m[36m(pid=17721)[0m     @     0x7f3ae3a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17616)[0m     @     0x7f81be141ad3 at::TensorIterator::for_each()
[2m[36m(pid=17616)[0m     @     0x7f81be141d91 at::TensorIterator::for_each()
[2m[36m(pid=17616)[0m     @     0x7f81bea24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17616)[0m     @     0x7f81bea47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17616)[0m     @     0x7f81bdee9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17619)[0m     @     0x7f54fb2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17619)[0m     @     0x7f54fb223ad3 at::TensorIterator::for_each()
[2m[36m(pid=17619)[0m     @     0x7f54fb223d91 at::TensorIterator::for_each()
[2m[36m(pid=17619)[0m     @     0x7f54fbb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17619)[0m     @     0x7f54fbb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17722)[0m     @     0x7f0686afbad3 at::TensorIterator::for_each()
[2m[36m(pid=17722)[0m     @     0x7f0686afbd91 at::TensorIterator::for_each()
[2m[36m(pid=17722)[0m     @     0x7f06873deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17722)[0m     @     0x7f0687401c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17722)[0m     @     0x7f06868a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17722)[0m     @     0x7f06868a1388 at::native::copy_impl()
[2m[36m(pid=17725)[0m     @     0x7f31253ba4f5 at::Tensor::copy_()
[2m[36m(pid=17725)[0m     @     0x7f312788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17725)[0m     @     0x7f31253ba4f5 at::Tensor::copy_()
[2m[36m(pid=17725)[0m     @     0x7f312b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17725)[0m     @     0x559a17b0efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17725)[0m     @     0x559a17a69b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17725)[0m     @     0x559a17af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17725)[0m     @     0x559a17af5a20 method_vectorcall
[2m[36m(pid=17725)[0m     @     0x559a17a69bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17725)[0m     @     0x559a17af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17725)[0m     @     0x559a17af5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17725)[0m     @     0x559a17a6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17725)[0m     @     0x559a17af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17725)[0m     @     0x559a17af5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17725)[0m     @     0x559a17a6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17725)[0m     @     0x559a17af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17725)[0m     @     0x559a17af5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17725)[0m     @     0x559a17a6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17725)[0m     @     0x559a17af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17725)[0m     @     0x559a17af5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17725)[0m     @     0x559a17a6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17676)[0m     @     0x7f6946641ad3 at::TensorIterator::for_each()
[2m[36m(pid=17676)[0m     @     0x7f6946641d91 at::TensorIterator::for_each()
[2m[36m(pid=17676)[0m     @     0x7f6946f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17676)[0m     @     0x7f6946f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17676)[0m     @     0x7f69463e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17676)[0m     @     0x7f69463e7388 at::native::copy_impl()
[2m[36m(pid=17695)[0m     @     0x7f10bead44f5 at::Tensor::copy_()
[2m[36m(pid=17695)[0m     @     0x7f10c4b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17695)[0m     @     0x56407de04fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17695)[0m     @     0x56407dd5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17695)[0m     @     0x56407ddeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17695)[0m     @     0x56407ddeba20 method_vectorcall
[2m[36m(pid=17695)[0m     @     0x56407dd5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17695)[0m     @     0x56407ddeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17695)[0m     @     0x56407ddeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17695)[0m     @     0x56407dd60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17695)[0m     @     0x56407ddeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17695)[0m     @     0x56407ddeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17695)[0m     @     0x56407dd60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17695)[0m     @     0x56407ddeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17695)[0m     @     0x56407ddeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17695)[0m     @     0x56407dd60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17695)[0m     @     0x56407ddeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17695)[0m     @     0x56407ddeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17695)[0m     @     0x56407dd60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17647)[0m     @     0x7f0cd1480ad3 at::TensorIterator::for_each()
[2m[36m(pid=17647)[0m     @     0x7f0cd1480d91 at::TensorIterator::for_each()
[2m[36m(pid=17647)[0m     @     0x7f0cd1d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17647)[0m     @     0x7f0cd1d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17647)[0m     @     0x7f0cd1228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17647)[0m     @     0x7f0cd1226388 at::native::copy_impl()
[2m[36m(pid=17648)[0m     @     0x7f6e82852ad3 at::TensorIterator::for_each()
[2m[36m(pid=17648)[0m     @     0x7f6e82852d91 at::TensorIterator::for_each()
[2m[36m(pid=17648)[0m     @     0x7f6e83135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17648)[0m     @     0x7f6e83158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17648)[0m     @     0x7f6e825faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17648)[0m     @     0x7f6e825f8388 at::native::copy_impl()
[2m[36m(pid=17623)[0m     @     0x7f69952cdad3 at::TensorIterator::for_each()
[2m[36m(pid=17623)[0m     @     0x7f69952cdd91 at::TensorIterator::for_each()
[2m[36m(pid=17623)[0m     @     0x7f6995bb0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17623)[0m     @     0x7f6995bd3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17623)[0m     @     0x7f6995075a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17623)[0m     @     0x7f6995073388 at::native::copy_impl()
[2m[36m(pid=17701)[0m     @     0x7f5b71a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17701)[0m     @     0x7f5b71a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=17701)[0m     @     0x7f5b71a79d91 at::TensorIterator::for_each()
[2m[36m(pid=17701)[0m     @     0x7f5b7235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17701)[0m     @     0x7f5b7237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17635)[0m     @     0x7f9bf35e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17635)[0m     @     0x7f9bf35e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=17635)[0m     @     0x7f9bf35e4d91 at::TensorIterator::for_each()
[2m[36m(pid=17635)[0m     @     0x7f9bf3ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17705)[0m     @     0x7f6ca1036390 (unknown)
[2m[36m(pid=17705)[0m     @     0x7f3da0ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17705)[0m     @     0x7f3da05cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17705)[0m     @     0x7f3da05d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17636)[0m     @     0x7fa3735b7ad3 at::TensorIterator::for_each()
[2m[36m(pid=17636)[0m     @     0x7fa3735b7d91 at::TensorIterator::for_each()
[2m[36m(pid=17636)[0m     @     0x7fa373e9ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17636)[0m     @     0x7fa373ebdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17636)[0m     @     0x7fa37335fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17636)[0m     @     0x7fa37335d388 at::native::copy_impl()
[2m[36m(pid=17627)[0m     @     0x7f0e25aae390 (unknown)
[2m[36m(pid=17627)[0m     @     0x7edf25a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17627)[0m     @     0x7edf251357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17627)[0m     @     0x7edf251388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17627)[0m     @     0x7edf25138ad3 at::TensorIterator::for_each()
[2m[36m(pid=17688)[0m     @     0x7f398cd79390 (unknown)
[2m[36m(pid=17688)[0m     @     0x7f0a8cc1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17688)[0m     @     0x7f0a8c34a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17685)[0m     @     0x7f43229578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17685)[0m     @     0x7f4322957ad3 at::TensorIterator::for_each()
[2m[36m(pid=17685)[0m     @     0x7f4322957d91 at::TensorIterator::for_each()
[2m[36m(pid=17685)[0m     @     0x7f432323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17753)[0m     @     0x7f7823caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17753)[0m     @     0x7f7823caaad3 at::TensorIterator::for_each()
[2m[36m(pid=17753)[0m     @     0x7f7823caad91 at::TensorIterator::for_each()
[2m[36m(pid=17753)[0m     @     0x7f782458db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17753)[0m     @     0x7f78245b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17713)[0m     @     0x7f8b995e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17713)[0m     @     0x7f8b98d0f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17713)[0m     @     0x7f8b98d128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17713)[0m     @     0x7f8b98d12ad3 at::TensorIterator::for_each()
[2m[36m(pid=17644)[0m     @     0x7fae35e15390 (unknown)
[2m[36m(pid=17644)[0m     @     0x7f7f35da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=17644)[0m     @     0x7f7f354cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17644)[0m     @     0x7f7f354d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17644)[0m     @     0x7f7f354d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=17717)[0m     @     0x7f013bb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=17717)[0m     @     0x7f013bb11d91 at::TensorIterator::for_each()
[2m[36m(pid=17717)[0m     @     0x7f013c3f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17717)[0m     @     0x7f013c417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17717)[0m     @     0x7f013b8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17731)[0m     @     0x7f9cb57fbad3 at::TensorIterator::for_each()
[2m[36m(pid=17731)[0m     @     0x7f9cb57fbd91 at::TensorIterator::for_each()
[2m[36m(pid=17731)[0m     @     0x7f9cb60deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17731)[0m     @     0x7f9cb6101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17733)[0m     @     0x7ee8b5728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17733)[0m     @     0x7ee8b4bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17733)[0m     @     0x7ee8b4bc8388 at::native::copy_impl()
[2m[36m(pid=17733)[0m     @     0x7ee8b4bca5a4 at::native::copy_()
[2m[36m(pid=17719)[0m     @     0x7eeff7c91ad3 at::TensorIterator::for_each()
[2m[36m(pid=17719)[0m     @     0x7eeff7c91d91 at::TensorIterator::for_each()
[2m[36m(pid=17719)[0m     @     0x7eeff8574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17719)[0m     @     0x7eeff8597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17719)[0m     @     0x7eeff7a39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17719)[0m     @     0x7eeff7a37388 at::native::copy_impl()
[2m[36m(pid=17719)[0m     @     0x7eeff7a395a4 at::native::copy_()
[2m[36m(pid=17653)[0m     @     0x7f5925a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=17653)[0m     @     0x7f5925a79d91 at::TensorIterator::for_each()
[2m[36m(pid=17653)[0m     @     0x7f592635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17653)[0m     @     0x7f592637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17653)[0m     @     0x7f5925821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17618)[0m     @     0x7f9decafaad3 at::TensorIterator::for_each()
[2m[36m(pid=17618)[0m     @     0x7f9decafad91 at::TensorIterator::for_each()
[2m[36m(pid=17618)[0m     @     0x7f9ded3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17618)[0m     @     0x7f9ded400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17618)[0m     @     0x7f9dec8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17618)[0m     @     0x7f9dec8a0388 at::native::copy_impl()
[2m[36m(pid=17622)[0m     @     0x7fb3367a08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17622)[0m     @     0x7fb3342cd4f5 at::Tensor::copy_()
[2m[36m(pid=17622)[0m     @     0x7fb33a37879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17622)[0m     @     0x5602de53ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17622)[0m     @     0x5602de49ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17622)[0m     @     0x5602de525baf _PyEval_EvalCodeWithName
[2m[36m(pid=17622)[0m     @     0x5602de526a20 method_vectorcall
[2m[36m(pid=17622)[0m     @     0x5602de49abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17622)[0m     @     0x5602de525baf _PyEval_EvalCodeWithName
[2m[36m(pid=17622)[0m     @     0x5602de526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17622)[0m     @     0x5602de49b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17622)[0m     @     0x5602de525baf _PyEval_EvalCodeWithName
[2m[36m(pid=17622)[0m     @     0x5602de526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17622)[0m     @     0x5602de49b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17622)[0m     @     0x5602de525baf _PyEval_EvalCodeWithName
[2m[36m(pid=17622)[0m     @     0x5602de526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17622)[0m     @     0x5602de49b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17622)[0m     @     0x5602de525baf _PyEval_EvalCodeWithName
[2m[36m(pid=17622)[0m     @     0x5602de526643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17622)[0m     @     0x5602de49b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17632)[0m     @     0x7f6678afad91 at::TensorIterator::for_each()
[2m[36m(pid=17632)[0m     @     0x7f66793ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17632)[0m     @     0x7f6679400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17632)[0m     @     0x7f66788a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17632)[0m     @     0x7f66788a0388 at::native::copy_impl()
[2m[36m(pid=17704)[0m     @     0x7f1248f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=17704)[0m     @     0x7f1248f27d91 at::TensorIterator::for_each()
[2m[36m(pid=17704)[0m     @     0x7f124980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17704)[0m     @     0x7f124982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17704)[0m     @     0x7f1248ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17704)[0m     @     0x7f1248ccd388 at::native::copy_impl()
[2m[36m(pid=17700)[0m     @     0x7f5c711254f5 at::Tensor::copy_()
[2m[36m(pid=17700)[0m     @     0x7f5c771d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17700)[0m     @     0x5586000c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17700)[0m     @     0x558600023b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17700)[0m     @     0x5586000aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17700)[0m     @     0x5586000afa20 method_vectorcall
[2m[36m(pid=17700)[0m     @     0x558600023bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17700)[0m     @     0x5586000aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17700)[0m     @     0x5586000af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17700)[0m     @     0x558600024689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17700)[0m     @     0x5586000aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17700)[0m     @     0x5586000af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17700)[0m     @     0x558600024689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17700)[0m     @     0x5586000aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17700)[0m     @     0x5586000af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17700)[0m     @     0x558600024689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17700)[0m     @     0x5586000aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17700)[0m     @     0x5586000af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17700)[0m     @     0x558600024689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17698)[0m     @     0x7f67f3a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=17698)[0m     @     0x7f67f3a61d91 at::TensorIterator::for_each()
[2m[36m(pid=17698)[0m     @     0x7f67f4344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17698)[0m     @     0x7f67f4367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17698)[0m     @     0x7f67f3809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17698)[0m     @     0x7f67f3807388 at::native::copy_impl()
[2m[36m(pid=17715)[0m     @     0x7f15b2641ad3 at::TensorIterator::for_each()
[2m[36m(pid=17715)[0m     @     0x7f15b2641d91 at::TensorIterator::for_each()
[2m[36m(pid=17715)[0m     @     0x7f15b2f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17715)[0m     @     0x7f15b2f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17715)[0m     @     0x7f15b23e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17715)[0m     @     0x7f15b23e7388 at::native::copy_impl()
[2m[36m(pid=17617)[0m     @     0x7f96998c1d91 at::TensorIterator::for_each()
[2m[36m(pid=17617)[0m     @     0x7f969a1a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17617)[0m     @     0x7f969a1c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17617)[0m     @     0x7f9699669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17617)[0m     @     0x7f9699667388 at::native::copy_impl()
[2m[36m(pid=17699)[0m     @     0x7f4c187e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=17699)[0m     @     0x7f4c187e3d91 at::TensorIterator::for_each()
[2m[36m(pid=17699)[0m     @     0x7f4c190c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17699)[0m     @     0x7f4c190e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17699)[0m     @     0x7f4c1858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17699)[0m     @     0x7f4c18589388 at::native::copy_impl()
[2m[36m(pid=17708)[0m     @     0x7f11933124f5 at::Tensor::copy_()
[2m[36m(pid=17708)[0m     @     0x7f11993bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17708)[0m     @     0x5593b85f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17708)[0m     @     0x5593b854bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17708)[0m     @     0x5593b85d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17708)[0m     @     0x5593b85d7a20 method_vectorcall
[2m[36m(pid=17708)[0m     @     0x5593b854bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17708)[0m     @     0x5593b85d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17708)[0m     @     0x5593b85d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17708)[0m     @     0x5593b854c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17708)[0m     @     0x5593b85d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17708)[0m     @     0x5593b85d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17708)[0m     @     0x5593b854c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17708)[0m     @     0x5593b85d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17708)[0m     @     0x5593b85d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17708)[0m     @     0x5593b854c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17708)[0m     @     0x5593b85d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17708)[0m     @     0x5593b85d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17708)[0m     @     0x5593b854c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17630)[0m     @     0x7f7c23606d91 at::TensorIterator::for_each()
[2m[36m(pid=17630)[0m     @     0x7f7c23ee9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17630)[0m     @     0x7f7c23f0cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17630)[0m     @     0x7f7c233aea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17630)[0m     @     0x7f7c233ac388 at::native::copy_impl()
[2m[36m(pid=17655)[0m     @     0x7f56a7c954f5 at::Tensor::copy_()
[2m[36m(pid=17655)[0m     @     0x7f56aa1688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17655)[0m     @     0x7f56a7c954f5 at::Tensor::copy_()
[2m[36m(pid=17655)[0m     @     0x7f56add4079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17655)[0m     @     0x558e9a2edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17655)[0m     @     0x558e9a248b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17655)[0m     @     0x558e9a2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17655)[0m     @     0x558e9a2d4a20 method_vectorcall
[2m[36m(pid=17655)[0m     @     0x558e9a248bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17655)[0m     @     0x558e9a2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17655)[0m     @     0x558e9a2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17655)[0m     @     0x558e9a249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17655)[0m     @     0x558e9a2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17655)[0m     @     0x558e9a2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17655)[0m     @     0x558e9a249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17655)[0m     @     0x558e9a2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17655)[0m     @     0x558e9a2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17655)[0m     @     0x558e9a249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17655)[0m     @     0x558e9a2d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17655)[0m     @     0x558e9a2d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17655)[0m     @     0x558e9a249689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17709)[0m     @     0x7f4ae50c25a4 at::native::copy_()
[2m[36m(pid=17709)[0m     @     0x7f4ae57ad4f5 at::Tensor::copy_()
[2m[36m(pid=17709)[0m     @     0x7f4ae7c808de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17709)[0m     @     0x7f4ae57ad4f5 at::Tensor::copy_()
[2m[36m(pid=17709)[0m     @     0x7f4aeb85879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17709)[0m     @     0x55bc46478fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17709)[0m     @     0x55bc463d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17709)[0m     @     0x55bc4645ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17709)[0m     @     0x55bc4645fa20 method_vectorcall
[2m[36m(pid=17709)[0m     @     0x55bc463d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17709)[0m     @     0x55bc4645ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17709)[0m     @     0x55bc4645f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17709)[0m     @     0x55bc463d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17709)[0m     @     0x55bc4645ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17709)[0m     @     0x55bc4645f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17709)[0m     @     0x55bc463d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x7f94c4e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17634)[0m     @     0x7f94c42e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17634)[0m     @     0x7f94c42e6388 at::native::copy_impl()
[2m[36m(pid=17634)[0m     @     0x7f94c42e85a4 at::native::copy_()
[2m[36m(pid=17674)[0m     @     0x7f29462db8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17638)[0m     @     0x7ee643606d91 at::TensorIterator::for_each()
[2m[36m(pid=17638)[0m     @     0x7ee643ee9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17638)[0m     @     0x7ee643f0cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17738)[0m     @     0x7eece00adad3 at::TensorIterator::for_each()
[2m[36m(pid=17738)[0m     @     0x7eece00add91 at::TensorIterator::for_each()
[2m[36m(pid=17738)[0m     @     0x7eece0990b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17670)[0m     @     0x7f1f6b9dfd91 at::TensorIterator::for_each()
[2m[36m(pid=17670)[0m     @     0x7f1f6c2c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17670)[0m     @     0x7f1f6c2e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17642)[0m     @     0x7f6a3b2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17642)[0m     @     0x7f6a3b223ad3 at::TensorIterator::for_each()
[2m[36m(pid=17659)[0m     @     0x7f12f374ad91 at::TensorIterator::for_each()
[2m[36m(pid=17659)[0m     @     0x7f12f402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17659)[0m     @     0x7f12f4050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17707)[0m     @     0x7ed27fc217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=17707)[0m     @     0x7ed27fc248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17621)[0m     @     0x7faa055528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17621)[0m     @     0x7faa05552ad3 at::TensorIterator::for_each()
[2m[36m(pid=17650)[0m     @     0x7fc6b87a3d91 at::TensorIterator::for_each()
[2m[36m(pid=17650)[0m     @     0x7fc6b9086b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17650)[0m     @     0x7fc6b90a9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17650)[0m     @     0x7fc6b854ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17723)[0m     @     0x7fb0f7223d91 at::TensorIterator::for_each()
[2m[36m(pid=17723)[0m     @     0x7fb0f7b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17723)[0m     @     0x7fb0f7b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17723)[0m     @     0x7fb0f6fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17723)[0m     @     0x7fb0f6fc9388 at::native::copy_impl()
[2m[36m(pid=17723)[0m     @     0x7fb0f6fcb5a4 at::native::copy_()
[2m[36m(pid=17736)[0m     @     0x7fc015caaad3 at::TensorIterator::for_each()
[2m[36m(pid=17736)[0m     @     0x7fc015caad91 at::TensorIterator::for_each()
[2m[36m(pid=17736)[0m     @     0x7fc01658db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17736)[0m     @     0x7fc0165b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17736)[0m     @     0x7fc015a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17736)[0m     @     0x7fc015a50388 at::native::copy_impl()
[2m[36m(pid=17626)[0m     @     0x7ef30b653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17626)[0m     @     0x7ef30aaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17626)[0m     @     0x7ef30aaf3388 at::native::copy_impl()
[2m[36m(pid=17626)[0m     @     0x7ef30aaf55a4 at::native::copy_()
[2m[36m(pid=17694)[0m     @     0x7ee5e75e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=17694)[0m     @     0x7ee5e75e4d91 at::TensorIterator::for_each()
[2m[36m(pid=17694)[0m     @     0x7ee5e7ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17694)[0m     @     0x7ee5e7eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17702)[0m     @     0x7ed370e22d91 at::TensorIterator::for_each()
[2m[36m(pid=17702)[0m     @     0x7ed371705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17702)[0m     @     0x7ed371728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17702)[0m     @     0x7ed370bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17702)[0m     @     0x7ed370bc8388 at::native::copy_impl()
[2m[36m(pid=17727)[0m     @     0x7f05fb5e4d91 at::TensorIterator::for_each()
[2m[36m(pid=17727)[0m     @     0x7f05fbec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17727)[0m     @     0x7f05fbeeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17727)[0m     @     0x7f05fb38ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17727)[0m     @     0x7f05fb38a388 at::native::copy_impl()
[2m[36m(pid=17697)[0m     @     0x7fa6345408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17629)[0m     @     0x7f1963e7ad91 at::TensorIterator::for_each()
[2m[36m(pid=17629)[0m     @     0x7f196475db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17629)[0m     @     0x7f1964780c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17629)[0m     @     0x7f1963c22a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17629)[0m     @     0x7f1963c20388 at::native::copy_impl()
[2m[36m(pid=17741)[0m     @     0x7ef43d28dad3 at::TensorIterator::for_each()
[2m[36m(pid=17741)[0m     @     0x7ef43d28dd91 at::TensorIterator::for_each()
[2m[36m(pid=17741)[0m     @     0x7ef43db70b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17741)[0m     @     0x7ef43db93c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17741)[0m     @     0x7ef43d035a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17682)[0m     @     0x7fb6cda79d91 at::TensorIterator::for_each()
[2m[36m(pid=17682)[0m     @     0x7fb6ce35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17682)[0m     @     0x7fb6ce37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17682)[0m     @     0x7fb6cd821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17682)[0m     @     0x7fb6cd81f388 at::native::copy_impl()
[2m[36m(pid=17657)[0m     @     0x7f0c320fad91 at::TensorIterator::for_each()
[2m[36m(pid=17657)[0m     @     0x7f0c329ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17657)[0m     @     0x7f0c32a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17712)[0m     @     0x7f9a93151ad3 at::TensorIterator::for_each()
[2m[36m(pid=17712)[0m     @     0x7f9a93151d91 at::TensorIterator::for_each()
[2m[36m(pid=17712)[0m     @     0x7f9a93a34b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17712)[0m     @     0x7f9a93a57c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17620)[0m     @     0x7f6a451e5d91 at::TensorIterator::for_each()
[2m[36m(pid=17620)[0m     @     0x7f6a45ac8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17620)[0m     @     0x7f6a45aebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17620)[0m     @     0x7f6a44f8da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17620)[0m     @     0x7f6a44f8b388 at::native::copy_impl()
[2m[36m(pid=17706)[0m     @     0x7f9259465d91 at::TensorIterator::for_each()
[2m[36m(pid=17706)[0m     @     0x7f9259d48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17706)[0m     @     0x7f9259d6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17706)[0m     @     0x7f925920da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17706)[0m     @     0x7f925920b388 at::native::copy_impl()
[2m[36m(pid=17703)[0m     @     0x7f7c2fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17703)[0m     @     0x7f7c2efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17703)[0m     @     0x7f7c2efc9388 at::native::copy_impl()
[2m[36m(pid=17703)[0m     @     0x7f7c2efcb5a4 at::native::copy_()
[2m[36m(pid=17703)[0m     @     0x7f7c2f6b64f5 at::Tensor::copy_()
[2m[36m(pid=17633)[0m     @     0x7ee97814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17633)[0m     @     0x7ee978148388 at::native::copy_impl()
[2m[36m(pid=17633)[0m     @     0x7ee97814a5a4 at::native::copy_()
[2m[36m(pid=17672)[0m     @     0x7f03f4148388 at::native::copy_impl()
[2m[36m(pid=17672)[0m     @     0x7f03f414a5a4 at::native::copy_()
[2m[36m(pid=17743)[0m     @     0x7f20c1ea0388 at::native::copy_impl()
[2m[36m(pid=17743)[0m     @     0x7f20c1ea25a4 at::native::copy_()
[2m[36m(pid=17624)[0m     @     0x7fadcfe16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17624)[0m     @     0x7fadcfe14388 at::native::copy_impl()
[2m[36m(pid=17624)[0m     @     0x7fadcfe165a4 at::native::copy_()
[2m[36m(pid=17677)[0m     @     0x7edf2b80c5a4 at::native::copy_()
[2m[36m(pid=17721)[0m     @     0x7f3ae15cb4f5 at::Tensor::copy_()
[2m[36m(pid=17721)[0m     @     0x7f3ae767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17721)[0m     @     0x56116171afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17721)[0m     @     0x561161675b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17721)[0m     @     0x561161700baf _PyEval_EvalCodeWithName
[2m[36m(pid=17721)[0m     @     0x561161701a20 method_vectorcall
[2m[36m(pid=17721)[0m     @     0x561161675bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17721)[0m     @     0x561161700baf _PyEval_EvalCodeWithName
[2m[36m(pid=17721)[0m     @     0x561161701643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17721)[0m     @     0x561161676689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17721)[0m     @     0x561161700baf _PyEval_EvalCodeWithName
[2m[36m(pid=17721)[0m     @     0x561161701643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17721)[0m     @     0x561161676689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17721)[0m     @     0x561161700baf _PyEval_EvalCodeWithName
[2m[36m(pid=17721)[0m     @     0x561161701643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17721)[0m     @     0x561161676689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17721)[0m     @     0x561161700baf _PyEval_EvalCodeWithName
[2m[36m(pid=17721)[0m     @     0x561161701643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17721)[0m     @     0x561161676689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17616)[0m     @     0x7f81bdee7388 at::native::copy_impl()
[2m[36m(pid=17616)[0m     @     0x7f81bdee95a4 at::native::copy_()
[2m[36m(pid=17619)[0m     @     0x7f54fafcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17619)[0m     @     0x7f54fafc9388 at::native::copy_impl()
[2m[36m(pid=17619)[0m     @     0x7f54fafcb5a4 at::native::copy_()
[2m[36m(pid=17722)[0m     @     0x7f06868a35a4 at::native::copy_()
[2m[36m(pid=17722)[0m     @     0x7f0686f8e4f5 at::Tensor::copy_()
[2m[36m(pid=17676)[0m     @     0x7f69463e95a4 at::native::copy_()
[2m[36m(pid=17647)[0m     @     0x7f0cd12285a4 at::native::copy_()
[2m[36m(pid=17648)[0m     @     0x7f6e825fa5a4 at::native::copy_()
[2m[36m(pid=17623)[0m     @     0x7f69950755a4 at::native::copy_()
[2m[36m(pid=17701)[0m     @     0x7f5b71821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17701)[0m     @     0x7f5b7181f388 at::native::copy_impl()
[2m[36m(pid=17635)[0m     @     0x7f9bf3eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17635)[0m     @     0x7f9bf338ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17635)[0m     @     0x7f9bf338a388 at::native::copy_impl()
[2m[36m(pid=17636)[0m     @     0x7fa37335f5a4 at::native::copy_()
[2m[36m(pid=17636)[0m     @     0x7fa373a4a4f5 at::Tensor::copy_()
[2m[36m(pid=17627)[0m     @     0x7edf25138d91 at::TensorIterator::for_each()
[2m[36m(pid=17627)[0m     @     0x7edf25a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17627)[0m     @     0x7edf25a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17688)[0m     @     0x7f0a8c34d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=17685)[0m     @     0x7f432325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17685)[0m     @     0x7f43226ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17685)[0m     @     0x7f43226fd388 at::native::copy_impl()
[2m[36m(pid=17753)[0m     @     0x7f7823a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17753)[0m     @     0x7f7823a50388 at::native::copy_impl()
[2m[36m(pid=17713)[0m     @     0x7f8b98d12d91 at::TensorIterator::for_each()
[2m[36m(pid=17713)[0m     @     0x7f8b995f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17713)[0m     @     0x7f8b99618c1d at::native::(anonymous namespace)::copy_kernel()
2020-11-05 10:33:54,787	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=17644)[0m     @     0x7f7f354d2d91 at::TensorIterator::for_each()
[2m[36m(pid=17644)[0m     @     0x7f7f35db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17644)[0m     @     0x7f7f35dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17717)[0m     @     0x7f013b8b7388 at::native::copy_impl()
[2m[36m(pid=17717)[0m     @     0x7f013b8b95a4 at::native::copy_()
[2m[36m(pid=17731)[0m     @     0x7f9cb55a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17731)[0m     @     0x7f9cb55a1388 at::native::copy_impl()
[2m[36m(pid=17731)[0m     @     0x7f9cb55a35a4 at::native::copy_()
[2m[36m(pid=17733)[0m     @     0x7ee8b52b54f5 at::Tensor::copy_()
[2m[36m(pid=17733)[0m     @     0x7ee8b77888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17733)[0m     @     0x7ee8b52b54f5 at::Tensor::copy_()
[2m[36m(pid=17733)[0m     @     0x7ee8bb36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17733)[0m     @     0x55edefb95fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17733)[0m     @     0x55edefaf0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17733)[0m     @     0x55edefb7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17733)[0m     @     0x55edefb7ca20 method_vectorcall
[2m[36m(pid=17733)[0m     @     0x55edefaf0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17733)[0m     @     0x55edefb7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17733)[0m     @     0x55edefb7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17733)[0m     @     0x55edefaf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17733)[0m     @     0x55edefb7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17733)[0m     @     0x55edefb7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17733)[0m     @     0x55edefaf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17733)[0m     @     0x55edefb7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17733)[0m     @     0x55edefb7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17733)[0m     @     0x55edefaf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17733)[0m     @     0x55edefb7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17733)[0m     @     0x55edefb7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17719)[0m     @     0x7eeff81244f5 at::Tensor::copy_()
[2m[36m(pid=17719)[0m     @     0x7eeffa5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17719)[0m     @     0x7eeff81244f5 at::Tensor::copy_()
[2m[36m(pid=17719)[0m     @     0x7eeffe1cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17719)[0m     @     0x5640d88bdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17719)[0m     @     0x5640d8818b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17719)[0m     @     0x5640d88a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17719)[0m     @     0x5640d88a4a20 method_vectorcall
[2m[36m(pid=17719)[0m     @     0x5640d8818bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17653)[0m     @     0x7f592581f388 at::native::copy_impl()
[2m[36m(pid=17653)[0m     @     0x7f59258215a4 at::native::copy_()
[2m[36m(pid=17653)[0m     @     0x7f5925f0c4f5 at::Tensor::copy_()
[2m[36m(pid=17653)[0m     @     0x7f59283df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17618)[0m     @     0x7f9dec8a25a4 at::native::copy_()
[2m[36m(pid=17618)[0m     @     0x7f9decf8d4f5 at::Tensor::copy_()
[2m[36m(pid=17618)[0m     @     0x7f9def4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17632)[0m     @     0x7f66788a25a4 at::native::copy_()
[2m[36m(pid=17632)[0m     @     0x7f6678f8d4f5 at::Tensor::copy_()
[2m[36m(pid=17632)[0m     @     0x7f667b4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17704)[0m     @     0x7f1248ccf5a4 at::native::copy_()
[2m[36m(pid=17704)[0m     @     0x7f12493ba4f5 at::Tensor::copy_()
[2m[36m(pid=17704)[0m     @     0x7f124b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17698)[0m     @     0x7f67f38095a4 at::native::copy_()
[2m[36m(pid=17698)[0m     @     0x7f67f3ef44f5 at::Tensor::copy_()
[2m[36m(pid=17698)[0m     @     0x7f67f63c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17715)[0m     @     0x7f15b23e95a4 at::native::copy_()
[2m[36m(pid=17715)[0m     @     0x7f15b2ad44f5 at::Tensor::copy_()
[2m[36m(pid=17715)[0m     @     0x7f15b4fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17617)[0m     @     0x7f96996695a4 at::native::copy_()
[2m[36m(pid=17617)[0m     @     0x7f9699d544f5 at::Tensor::copy_()
[2m[36m(pid=17617)[0m     @     0x7f969c2278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17699)[0m     @     0x7f4c1858b5a4 at::native::copy_()
[2m[36m(pid=17699)[0m     @     0x7f4c18c764f5 at::Tensor::copy_()
[2m[36m(pid=17699)[0m     @     0x7f4c1b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17630)[0m     @     0x7f7c233ae5a4 at::native::copy_()
[2m[36m(pid=17630)[0m     @     0x7f7c23a994f5 at::Tensor::copy_()
[2m[36m(pid=17630)[0m     @     0x7f7c25f6c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17709)[0m     @     0x55bc4645ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17709)[0m     @     0x55bc4645f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17709)[0m     @     0x55bc463d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17709)[0m     @     0x55bc4645ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17709)[0m     @     0x55bc4645f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17709)[0m     @     0x55bc463d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x7f94c49d34f5 at::Tensor::copy_()
[2m[36m(pid=17634)[0m     @     0x7f94c6ea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17634)[0m     @     0x7f94c49d34f5 at::Tensor::copy_()
[2m[36m(pid=17634)[0m     @     0x7f94caa7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17634)[0m     @     0x55d9e7617fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17634)[0m     @     0x55d9e7572b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x55d9e75fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17634)[0m     @     0x55d9e75fea20 method_vectorcall
[2m[36m(pid=17634)[0m     @     0x55d9e7572bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x55d9e75fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17634)[0m     @     0x55d9e75fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17634)[0m     @     0x55d9e7573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x55d9e75fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17634)[0m     @     0x55d9e75fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17634)[0m     @     0x55d9e7573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x55d9e75fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17634)[0m     @     0x55d9e75fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17634)[0m     @     0x55d9e7573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x55d9e75fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17674)[0m     @     0x7f29462dbad3 at::TensorIterator::for_each()
[2m[36m(pid=17638)[0m     @     0x7ee6433aea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17638)[0m     @     0x7ee6433ac388 at::native::copy_impl()
[2m[36m(pid=17638)[0m     @     0x7ee6433ae5a4 at::native::copy_()
[2m[36m(pid=17638)[0m     @     0x7ee643a994f5 at::Tensor::copy_()
[2m[36m(pid=17738)[0m     @     0x7eece09b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17738)[0m     @     0x7eecdfe55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17738)[0m     @     0x7eecdfe53388 at::native::copy_impl()
[2m[36m(pid=17738)[0m     @     0x7eecdfe555a4 at::native::copy_()
[2m[36m(pid=17670)[0m     @     0x7f1f6b787a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17670)[0m     @     0x7f1f6b785388 at::native::copy_impl()
[2m[36m(pid=17670)[0m     @     0x7f1f6b7875a4 at::native::copy_()
[2m[36m(pid=17642)[0m     @     0x7f6a3b223d91 at::TensorIterator::for_each()
[2m[36m(pid=17642)[0m     @     0x7f6a3bb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17642)[0m     @     0x7f6a3bb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17642)[0m     @     0x7f6a3afcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17659)[0m     @     0x7f12f34f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17659)[0m     @     0x7f12f34f0388 at::native::copy_impl()
[2m[36m(pid=17659)[0m     @     0x7f12f34f25a4 at::native::copy_()
[2m[36m(pid=17659)[0m     @     0x7f12f3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=17659)[0m     @     0x7f12f60b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17707)[0m     @     0x7ed27fc24ad3 at::TensorIterator::for_each()
[2m[36m(pid=17707)[0m     @     0x7ed27fc24d91 at::TensorIterator::for_each()
[2m[36m(pid=17707)[0m     @     0x7ed280507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17707)[0m     @     0x7ed28052ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17621)[0m     @     0x7faa05552d91 at::TensorIterator::for_each()
[2m[36m(pid=17621)[0m     @     0x7faa05e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17621)[0m     @     0x7faa05e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17621)[0m     @     0x7faa052faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17621)[0m     @     0x7faa052f8388 at::native::copy_impl()
[2m[36m(pid=17650)[0m     @     0x7fc6b8549388 at::native::copy_impl()
[2m[36m(pid=17650)[0m     @     0x7fc6b854b5a4 at::native::copy_()
[2m[36m(pid=17650)[0m     @     0x7fc6b8c364f5 at::Tensor::copy_()
[2m[36m(pid=17723)[0m     @     0x7fb0f76b64f5 at::Tensor::copy_()
[2m[36m(pid=17723)[0m     @     0x7fb0f9b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17736)[0m     @     0x7fc015a525a4 at::native::copy_()
[2m[36m(pid=17626)[0m     @     0x7ef30b1e04f5 at::Tensor::copy_()
[2m[36m(pid=17626)[0m     @     0x7ef30d6b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17626)[0m     @     0x7ef30b1e04f5 at::Tensor::copy_()
[2m[36m(pid=17626)[0m     @     0x7ef31128b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17626)[0m     @     0x559a399e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17626)[0m     @     0x559a3993db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17626)[0m     @     0x559a399c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17626)[0m     @     0x559a399c9a20 method_vectorcall
[2m[36m(pid=17626)[0m     @     0x559a3993dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17626)[0m     @     0x559a399c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17626)[0m     @     0x559a399c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17694)[0m     @     0x7ee5e738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17694)[0m     @     0x7ee5e738a388 at::native::copy_impl()
[2m[36m(pid=17694)[0m     @     0x7ee5e738c5a4 at::native::copy_()
[2m[36m(pid=17702)[0m     @     0x7ed370bca5a4 at::native::copy_()
[2m[36m(pid=17702)[0m     @     0x7ed3712b54f5 at::Tensor::copy_()
[2m[36m(pid=17702)[0m     @     0x7ed3737888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17727)[0m     @     0x7f05fb38c5a4 at::native::copy_()
[2m[36m(pid=17727)[0m     @     0x7f05fba774f5 at::Tensor::copy_()
[2m[36m(pid=17697)[0m     @     0x7fa634540ad3 at::TensorIterator::for_each()
[2m[36m(pid=17629)[0m     @     0x7f1963c225a4 at::native::copy_()
[2m[36m(pid=17629)[0m     @     0x7f196430d4f5 at::Tensor::copy_()
[2m[36m(pid=17741)[0m     @     0x7ef43d033388 at::native::copy_impl()
[2m[36m(pid=17741)[0m     @     0x7ef43d0355a4 at::native::copy_()
[2m[36m(pid=17682)[0m     @     0x7fb6cd8215a4 at::native::copy_()
[2m[36m(pid=17682)[0m     @     0x7fb6cdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=17657)[0m     @     0x7f0c31ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17657)[0m     @     0x7f0c31ea0388 at::native::copy_impl()
[2m[36m(pid=17657)[0m     @     0x7f0c31ea25a4 at::native::copy_()
[2m[36m(pid=17712)[0m     @     0x7f9a92ef9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17712)[0m     @     0x7f9a92ef7388 at::native::copy_impl()
[2m[36m(pid=17712)[0m     @     0x7f9a92ef95a4 at::native::copy_()
[2m[36m(pid=17620)[0m     @     0x7f6a44f8d5a4 at::native::copy_()
[2m[36m(pid=17706)[0m     @     0x7f925920d5a4 at::native::copy_()
[2m[36m(pid=17706)[0m     @     0x7f92598f84f5 at::Tensor::copy_()
[2m[36m(pid=17706)[0m     @     0x7f925bdcb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17703)[0m     @     0x7f7c31b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17703)[0m     @     0x7f7c2f6b64f5 at::Tensor::copy_()
[2m[36m(pid=17703)[0m     @     0x7f7c3576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17703)[0m     @     0x5605edfb3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17703)[0m     @     0x5605edf0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17703)[0m     @     0x5605edf99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17703)[0m     @     0x5605edf9aa20 method_vectorcall
[2m[36m(pid=17703)[0m     @     0x5605edf0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17703)[0m     @     0x5605edf99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17703)[0m     @     0x5605edf9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17703)[0m     @     0x5605edf0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17703)[0m     @     0x5605edf99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17703)[0m     @     0x5605edf9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17703)[0m     @     0x5605edf0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17703)[0m     @     0x5605edf99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17703)[0m     @     0x5605edf9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17703)[0m     @     0x5605edf0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17703)[0m     @     0x5605edf99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17703)[0m     @     0x5605edf9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17703)[0m     @     0x5605edf0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17633)[0m     @     0x7ee9788354f5 at::Tensor::copy_()
[2m[36m(pid=17633)[0m     @     0x7ee97ad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17633)[0m     @     0x7ee9788354f5 at::Tensor::copy_()
[2m[36m(pid=17633)[0m     @     0x7ee97e8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17633)[0m     @     0x55add17effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17633)[0m     @     0x55add174ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17633)[0m     @     0x55add17d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17633)[0m     @     0x55add17d6a20 method_vectorcall
[2m[36m(pid=17633)[0m     @     0x55add174abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17672)[0m     @     0x7f03f48354f5 at::Tensor::copy_()
[2m[36m(pid=17672)[0m     @     0x7f03f6d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17672)[0m     @     0x7f03f48354f5 at::Tensor::copy_()
[2m[36m(pid=17672)[0m     @     0x7f03fa8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17672)[0m     @     0x557f18ae8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17672)[0m     @     0x557f18a43b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17672)[0m     @     0x557f18acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17672)[0m     @     0x557f18acfa20 method_vectorcall
[2m[36m(pid=17672)[0m     @     0x557f18a43bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17672)[0m     @     0x557f18acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17672)[0m     @     0x557f18acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17672)[0m     @     0x557f18a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17672)[0m     @     0x557f18acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17672)[0m     @     0x557f18acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17672)[0m     @     0x557f18a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17672)[0m     @     0x557f18acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17672)[0m     @     0x557f18acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17672)[0m     @     0x557f18a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17743)[0m     @     0x7f20c258d4f5 at::Tensor::copy_()
[2m[36m(pid=17743)[0m     @     0x7f20c4a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17743)[0m     @     0x7f20c258d4f5 at::Tensor::copy_()
[2m[36m(pid=17743)[0m     @     0x7f20c863879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17743)[0m     @     0x55cc517f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17743)[0m     @     0x55cc5174eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17743)[0m     @     0x55cc517d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17743)[0m     @     0x55cc517daa20 method_vectorcall
[2m[36m(pid=17743)[0m     @     0x55cc5174ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17743)[0m     @     0x55cc517d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17743)[0m     @     0x55cc517da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17743)[0m     @     0x55cc5174f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17743)[0m     @     0x55cc517d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17743)[0m     @     0x55cc517da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17743)[0m     @     0x55cc5174f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17743)[0m     @     0x55cc517d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17743)[0m     @     0x55cc517da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17743)[0m     @     0x55cc5174f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17743)[0m     @     0x55cc517d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17743)[0m     @     0x55cc517da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17743)[0m     @     0x55cc5174f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17624)[0m     @     0x7fadd05014f5 at::Tensor::copy_()
[2m[36m(pid=17624)[0m     @     0x7fadd29d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17624)[0m     @     0x7fadd05014f5 at::Tensor::copy_()
[2m[36m(pid=17624)[0m     @     0x7fadd61a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17677)[0m     @     0x7edf2bef74f5 at::Tensor::copy_()
[2m[36m(pid=17677)[0m     @     0x7edf2e3ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17677)[0m     @     0x7edf2bef74f5 at::Tensor::copy_()
[2m[36m(pid=17677)[0m     @     0x7edf31fa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17677)[0m     @     0x5558d1881fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17677)[0m     @     0x5558d17dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17677)[0m     @     0x5558d1867baf _PyEval_EvalCodeWithName
[2m[36m(pid=17677)[0m     @     0x5558d1868a20 method_vectorcall
[2m[36m(pid=17677)[0m     @     0x5558d17dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17677)[0m     @     0x5558d1867baf _PyEval_EvalCodeWithName
[2m[36m(pid=17677)[0m     @     0x5558d1868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17677)[0m     @     0x5558d17dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17677)[0m     @     0x5558d1867baf _PyEval_EvalCodeWithName
[2m[36m(pid=17677)[0m     @     0x5558d1868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17677)[0m     @     0x5558d17dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17677)[0m     @     0x5558d1867baf _PyEval_EvalCodeWithName
[2m[36m(pid=17677)[0m     @     0x5558d1868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17677)[0m     @     0x5558d17dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17677)[0m     @     0x5558d1867baf _PyEval_EvalCodeWithName
[2m[36m(pid=17677)[0m     @     0x5558d1868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17677)[0m     @     0x5558d17dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17616)[0m     @     0x7f81be5d44f5 at::Tensor::copy_()
[2m[36m(pid=17616)[0m     @     0x7f81c0aa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17616)[0m     @     0x7f81be5d44f5 at::Tensor::copy_()
[2m[36m(pid=17616)[0m     @     0x7f81c447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17616)[0m     @     0x560c2d03cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17616)[0m     @     0x560c2cf97b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17616)[0m     @     0x560c2d022baf _PyEval_EvalCodeWithName
[2m[36m(pid=17616)[0m     @     0x560c2d023a20 method_vectorcall
[2m[36m(pid=17616)[0m     @     0x560c2cf97bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17616)[0m     @     0x560c2d022baf _PyEval_EvalCodeWithName
[2m[36m(pid=17616)[0m     @     0x560c2d023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17616)[0m     @     0x560c2cf98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17616)[0m     @     0x560c2d022baf _PyEval_EvalCodeWithName
[2m[36m(pid=17616)[0m     @     0x560c2d023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17616)[0m     @     0x560c2cf98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17616)[0m     @     0x560c2d022baf _PyEval_EvalCodeWithName
[2m[36m(pid=17616)[0m     @     0x560c2d023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17616)[0m     @     0x560c2cf98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17619)[0m     @     0x7f54fb6b64f5 at::Tensor::copy_()
[2m[36m(pid=17619)[0m     @     0x7f54fdb898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17619)[0m     @     0x7f54fb6b64f5 at::Tensor::copy_()
[2m[36m(pid=17619)[0m     @     0x7f550176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17619)[0m     @     0x557a3b743fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17619)[0m     @     0x557a3b69eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17722)[0m     @     0x7f06894618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17722)[0m     @     0x7f0686f8e4f5 at::Tensor::copy_()
[2m[36m(pid=17722)[0m     @     0x7f068d03979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17722)[0m     @     0x55ccd6c0efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17722)[0m     @     0x55ccd6b69b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17722)[0m     @     0x55ccd6bf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17722)[0m     @     0x55ccd6bf5a20 method_vectorcall
[2m[36m(pid=17722)[0m     @     0x55ccd6b69bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17722)[0m     @     0x55ccd6bf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17722)[0m     @     0x55ccd6bf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17722)[0m     @     0x55ccd6b6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17722)[0m     @     0x55ccd6bf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17722)[0m     @     0x55ccd6bf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17722)[0m     @     0x55ccd6b6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17722)[0m     @     0x55ccd6bf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17722)[0m     @     0x55ccd6bf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17722)[0m     @     0x55ccd6b6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17722)[0m     @     0x55ccd6bf4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17722)[0m     @     0x55ccd6bf5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17722)[0m     @     0x55ccd6b6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17676)[0m     @     0x7f6946ad44f5 at::Tensor::copy_()
[2m[36m(pid=17676)[0m     @     0x7f6948fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17676)[0m     @     0x7f6946ad44f5 at::Tensor::copy_()
[2m[36m(pid=17676)[0m     @     0x7f694cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17676)[0m     @     0x564897b61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17676)[0m     @     0x564897abcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17676)[0m     @     0x564897b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=17676)[0m     @     0x564897b48a20 method_vectorcall
[2m[36m(pid=17676)[0m     @     0x564897abcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17676)[0m     @     0x564897b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=17676)[0m     @     0x564897b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17676)[0m     @     0x564897abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17676)[0m     @     0x564897b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=17676)[0m     @     0x564897b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17676)[0m     @     0x564897abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17676)[0m     @     0x564897b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=17676)[0m     @     0x564897b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17676)[0m     @     0x564897abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17676)[0m     @     0x564897b47baf _PyEval_EvalCodeWithName
[2m[36m(pid=17676)[0m     @     0x564897b48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17676)[0m     @     0x564897abd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17647)[0m     @     0x7f0cd19134f5 at::Tensor::copy_()
[2m[36m(pid=17647)[0m     @     0x7f0cd3de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17647)[0m     @     0x7f0cd19134f5 at::Tensor::copy_()
[2m[36m(pid=17647)[0m     @     0x7f0cd79be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17647)[0m     @     0x55f06b40cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17647)[0m     @     0x55f06b367b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17647)[0m     @     0x55f06b3f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17647)[0m     @     0x55f06b3f3a20 method_vectorcall
[2m[36m(pid=17647)[0m     @     0x55f06b367bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17647)[0m     @     0x55f06b3f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17647)[0m     @     0x55f06b3f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17647)[0m     @     0x55f06b368689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17647)[0m     @     0x55f06b3f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17647)[0m     @     0x55f06b3f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17647)[0m     @     0x55f06b368689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17647)[0m     @     0x55f06b3f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17647)[0m     @     0x55f06b3f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17647)[0m     @     0x55f06b368689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17647)[0m     @     0x55f06b3f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17647)[0m     @     0x55f06b3f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17647)[0m     @     0x55f06b368689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17648)[0m     @     0x7f6e82ce54f5 at::Tensor::copy_()
[2m[36m(pid=17648)[0m     @     0x7f6e851b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17648)[0m     @     0x7f6e82ce54f5 at::Tensor::copy_()
[2m[36m(pid=17648)[0m     @     0x7f6e88d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17648)[0m     @     0x564fd976cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17648)[0m     @     0x564fd96c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17648)[0m     @     0x564fd9752baf _PyEval_EvalCodeWithName
[2m[36m(pid=17648)[0m     @     0x564fd9753a20 method_vectorcall
[2m[36m(pid=17648)[0m     @     0x564fd96c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17648)[0m     @     0x564fd9752baf _PyEval_EvalCodeWithName
[2m[36m(pid=17648)[0m     @     0x564fd9753643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17648)[0m     @     0x564fd96c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17648)[0m     @     0x564fd9752baf _PyEval_EvalCodeWithName
[2m[36m(pid=17648)[0m     @     0x564fd9753643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17648)[0m     @     0x564fd96c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17648)[0m     @     0x564fd9752baf _PyEval_EvalCodeWithName
[2m[36m(pid=17648)[0m     @     0x564fd9753643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17648)[0m     @     0x564fd96c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17648)[0m     @     0x564fd9752baf _PyEval_EvalCodeWithName
[2m[36m(pid=17648)[0m     @     0x564fd9753643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17648)[0m     @     0x564fd96c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17623)[0m     @     0x7f69957604f5 at::Tensor::copy_()
[2m[36m(pid=17623)[0m     @     0x7f6997c338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17623)[0m     @     0x7f69957604f5 at::Tensor::copy_()
[2m[36m(pid=17623)[0m     @     0x7f699b80b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17623)[0m     @     0x56042e088fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17623)[0m     @     0x56042dfe3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17623)[0m     @     0x56042e06ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17623)[0m     @     0x56042e06fa20 method_vectorcall
[2m[36m(pid=17623)[0m     @     0x56042dfe3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17623)[0m     @     0x56042e06ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17623)[0m     @     0x56042e06f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17623)[0m     @     0x56042dfe4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17623)[0m     @     0x56042e06ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17623)[0m     @     0x56042e06f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17623)[0m     @     0x56042dfe4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17623)[0m     @     0x56042e06ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17623)[0m     @     0x56042e06f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17623)[0m     @     0x56042dfe4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17623)[0m     @     0x56042e06ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17623)[0m     @     0x56042e06f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17623)[0m     @     0x56042dfe4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17701)[0m     @     0x7f5b718215a4 at::native::copy_()
[2m[36m(pid=17701)[0m     @     0x7f5b71f0c4f5 at::Tensor::copy_()
[2m[36m(pid=17701)[0m     @     0x7f5b743df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17635)[0m     @     0x7f9bf338c5a4 at::native::copy_()
[2m[36m(pid=17635)[0m     @     0x7f9bf3a774f5 at::Tensor::copy_()
[2m[36m(pid=17705)[0m     @     0x7f3da05d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=17636)[0m     @     0x7fa375f1d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17636)[0m     @     0x7fa373a4a4f5 at::Tensor::copy_()
[2m[36m(pid=17636)[0m     @     0x7fa379af579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17636)[0m     @     0x55bd8a589fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17636)[0m     @     0x55bd8a4e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17636)[0m     @     0x55bd8a56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17636)[0m     @     0x55bd8a570a20 method_vectorcall
[2m[36m(pid=17636)[0m     @     0x55bd8a4e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17636)[0m     @     0x55bd8a56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17636)[0m     @     0x55bd8a570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17636)[0m     @     0x55bd8a4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17636)[0m     @     0x55bd8a56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17636)[0m     @     0x55bd8a570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17636)[0m     @     0x55bd8a4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17636)[0m     @     0x55bd8a56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17636)[0m     @     0x55bd8a570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17636)[0m     @     0x55bd8a4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17636)[0m     @     0x55bd8a56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17636)[0m     @     0x55bd8a570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17636)[0m     @     0x55bd8a4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17627)[0m     @     0x7edf24ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17627)[0m     @     0x7edf24ede388 at::native::copy_impl()
[2m[36m(pid=17627)[0m     @     0x7edf24ee05a4 at::native::copy_()
[2m[36m(pid=17688)[0m     @     0x7f0a8c34dad3 at::TensorIterator::for_each()
[2m[36m(pid=17688)[0m     @     0x7f0a8c34dd91 at::TensorIterator::for_each()
[2m[36m(pid=17685)[0m     @     0x7f43226ff5a4 at::native::copy_()
[2m[36m(pid=17685)[0m     @     0x7f4322dea4f5 at::Tensor::copy_()
[2m[36m(pid=17685)[0m     @     0x7f43252bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17753)[0m     @     0x7f7823a525a4 at::native::copy_()
[2m[36m(pid=17753)[0m     @     0x7f782413d4f5 at::Tensor::copy_()
[2m[36m(pid=17753)[0m     @     0x7f78266108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17713)[0m     @     0x7f8b98abaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17713)[0m     @     0x7f8b98ab8388 at::native::copy_impl()
[2m[36m(pid=17713)[0m     @     0x7f8b98aba5a4 at::native::copy_()
[2m[36m(pid=17644)[0m     @     0x7f7f3527aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17644)[0m     @     0x7f7f35278388 at::native::copy_impl()
[2m[36m(pid=17644)[0m     @     0x7f7f3527a5a4 at::native::copy_()
[2m[36m(pid=17644)[0m     @     0x7f7f359654f5 at::Tensor::copy_()
[2m[36m(pid=17717)[0m     @     0x7f013bfa44f5 at::Tensor::copy_()
[2m[36m(pid=17717)[0m     @     0x7f013e4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17717)[0m     @     0x7f013bfa44f5 at::Tensor::copy_()
[2m[36m(pid=17717)[0m     @     0x7f014204f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17717)[0m     @     0x556715954fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17717)[0m     @     0x5567158afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17717)[0m     @     0x55671593abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17717)[0m     @     0x55671593ba20 method_vectorcall
[2m[36m(pid=17717)[0m     @     0x5567158afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17717)[0m     @     0x55671593abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17717)[0m     @     0x55671593b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17731)[0m     @     0x7f9cb5c8e4f5 at::Tensor::copy_()
[2m[36m(pid=17731)[0m     @     0x7f9cb81618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17731)[0m     @     0x7f9cb5c8e4f5 at::Tensor::copy_()
[2m[36m(pid=17731)[0m     @     0x7f9cbbd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17731)[0m     @     0x5607991aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17731)[0m     @     0x560799109b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17731)[0m     @     0x560799194baf _PyEval_EvalCodeWithName
[2m[36m(pid=17733)[0m     @     0x55edefaf1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17719)[0m     @     0x5640d88a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17719)[0m     @     0x5640d88a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17719)[0m     @     0x5640d8819689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17719)[0m     @     0x5640d88a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17719)[0m     @     0x5640d88a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17719)[0m     @     0x5640d8819689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17719)[0m     @     0x5640d88a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17719)[0m     @     0x5640d88a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17719)[0m     @     0x5640d8819689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17719)[0m     @     0x5640d88a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17719)[0m     @     0x5640d88a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17719)[0m     @     0x5640d8819689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17653)[0m     @     0x7f5925f0c4f5 at::Tensor::copy_()
[2m[36m(pid=17653)[0m     @     0x7f592bfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17653)[0m     @     0x5636dcf00fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17653)[0m     @     0x5636dce5bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17653)[0m     @     0x5636dcee6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17653)[0m     @     0x5636dcee7a20 method_vectorcall
[2m[36m(pid=17653)[0m     @     0x5636dce5bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17653)[0m     @     0x5636dcee6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17653)[0m     @     0x5636dcee7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17653)[0m     @     0x5636dce5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17653)[0m     @     0x5636dcee6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17653)[0m     @     0x5636dcee7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17653)[0m     @     0x5636dce5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17653)[0m     @     0x5636dcee6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17653)[0m     @     0x5636dcee7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17653)[0m     @     0x5636dce5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17653)[0m     @     0x5636dcee6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17653)[0m     @     0x5636dcee7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17653)[0m     @     0x5636dce5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17618)[0m     @     0x7f9decf8d4f5 at::Tensor::copy_()
[2m[36m(pid=17618)[0m     @     0x7f9df303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17618)[0m     @     0x5584733dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17618)[0m     @     0x558473336b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17618)[0m     @     0x5584733c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17618)[0m     @     0x5584733c2a20 method_vectorcall
[2m[36m(pid=17618)[0m     @     0x558473336bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17618)[0m     @     0x5584733c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17618)[0m     @     0x5584733c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17618)[0m     @     0x558473337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17618)[0m     @     0x5584733c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17618)[0m     @     0x5584733c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17618)[0m     @     0x558473337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17618)[0m     @     0x5584733c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17618)[0m     @     0x5584733c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17618)[0m     @     0x558473337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17618)[0m     @     0x5584733c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=17618)[0m     @     0x5584733c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17618)[0m     @     0x558473337689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17632)[0m     @     0x7f6678f8d4f5 at::Tensor::copy_()
[2m[36m(pid=17632)[0m     @     0x7f667f03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17632)[0m     @     0x55acc89fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17632)[0m     @     0x55acc8958b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17632)[0m     @     0x55acc89e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17632)[0m     @     0x55acc89e4a20 method_vectorcall
[2m[36m(pid=17632)[0m     @     0x55acc8958bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17632)[0m     @     0x55acc89e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17632)[0m     @     0x55acc89e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17632)[0m     @     0x55acc8959689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17632)[0m     @     0x55acc89e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17632)[0m     @     0x55acc89e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17632)[0m     @     0x55acc8959689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17632)[0m     @     0x55acc89e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17632)[0m     @     0x55acc89e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17632)[0m     @     0x55acc8959689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17632)[0m     @     0x55acc89e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=17632)[0m     @     0x55acc89e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17632)[0m     @     0x55acc8959689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17704)[0m     @     0x7f12493ba4f5 at::Tensor::copy_()
[2m[36m(pid=17704)[0m     @     0x7f124f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17704)[0m     @     0x557792a43fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17704)[0m     @     0x55779299eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17704)[0m     @     0x557792a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17704)[0m     @     0x557792a2aa20 method_vectorcall
[2m[36m(pid=17704)[0m     @     0x55779299ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17704)[0m     @     0x557792a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17704)[0m     @     0x557792a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17704)[0m     @     0x55779299f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17704)[0m     @     0x557792a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17704)[0m     @     0x557792a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17704)[0m     @     0x55779299f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17704)[0m     @     0x557792a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17704)[0m     @     0x557792a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17704)[0m     @     0x55779299f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17704)[0m     @     0x557792a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=17704)[0m     @     0x557792a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17704)[0m     @     0x55779299f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17698)[0m     @     0x7f67f3ef44f5 at::Tensor::copy_()
[2m[36m(pid=17698)[0m     @     0x7f67f9f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17698)[0m     @     0x56153726ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17698)[0m     @     0x5615371cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17698)[0m     @     0x561537255baf _PyEval_EvalCodeWithName
[2m[36m(pid=17698)[0m     @     0x561537256a20 method_vectorcall
[2m[36m(pid=17698)[0m     @     0x5615371cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17698)[0m     @     0x561537255baf _PyEval_EvalCodeWithName
[2m[36m(pid=17698)[0m     @     0x561537256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17698)[0m     @     0x5615371cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17698)[0m     @     0x561537255baf _PyEval_EvalCodeWithName
[2m[36m(pid=17698)[0m     @     0x561537256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17698)[0m     @     0x5615371cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17698)[0m     @     0x561537255baf _PyEval_EvalCodeWithName
[2m[36m(pid=17698)[0m     @     0x561537256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17698)[0m     @     0x5615371cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17698)[0m     @     0x561537255baf _PyEval_EvalCodeWithName
[2m[36m(pid=17698)[0m     @     0x561537256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17698)[0m     @     0x5615371cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17715)[0m     @     0x7f15b2ad44f5 at::Tensor::copy_()
[2m[36m(pid=17715)[0m     @     0x7f15b8b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17715)[0m     @     0x5599349acfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17715)[0m     @     0x559934907b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17715)[0m     @     0x559934992baf _PyEval_EvalCodeWithName
[2m[36m(pid=17715)[0m     @     0x559934993a20 method_vectorcall
[2m[36m(pid=17715)[0m     @     0x559934907bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17715)[0m     @     0x559934992baf _PyEval_EvalCodeWithName
[2m[36m(pid=17715)[0m     @     0x559934993643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17715)[0m     @     0x559934908689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17715)[0m     @     0x559934992baf _PyEval_EvalCodeWithName
[2m[36m(pid=17715)[0m     @     0x559934993643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17715)[0m     @     0x559934908689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17715)[0m     @     0x559934992baf _PyEval_EvalCodeWithName
[2m[36m(pid=17715)[0m     @     0x559934993643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17715)[0m     @     0x559934908689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17715)[0m     @     0x559934992baf _PyEval_EvalCodeWithName
[2m[36m(pid=17715)[0m     @     0x559934993643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17715)[0m     @     0x559934908689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17617)[0m     @     0x7f9699d544f5 at::Tensor::copy_()
[2m[36m(pid=17617)[0m     @     0x7f969fdff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17617)[0m     @     0x55e82f8f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17617)[0m     @     0x55e82f853b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17617)[0m     @     0x55e82f8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=17617)[0m     @     0x55e82f8dfa20 method_vectorcall
[2m[36m(pid=17617)[0m     @     0x55e82f853bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17617)[0m     @     0x55e82f8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=17617)[0m     @     0x55e82f8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17617)[0m     @     0x55e82f854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17617)[0m     @     0x55e82f8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=17617)[0m     @     0x55e82f8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17617)[0m     @     0x55e82f854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17617)[0m     @     0x55e82f8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=17617)[0m     @     0x55e82f8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17617)[0m     @     0x55e82f854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17617)[0m     @     0x55e82f8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=17617)[0m     @     0x55e82f8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17617)[0m     @     0x55e82f854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17699)[0m     @     0x7f4c18c764f5 at::Tensor::copy_()
[2m[36m(pid=17699)[0m     @     0x7f4c1ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17699)[0m     @     0x56051343bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17699)[0m     @     0x560513396b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17699)[0m     @     0x560513421baf _PyEval_EvalCodeWithName
[2m[36m(pid=17699)[0m     @     0x560513422a20 method_vectorcall
[2m[36m(pid=17699)[0m     @     0x560513396bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17699)[0m     @     0x560513421baf _PyEval_EvalCodeWithName
[2m[36m(pid=17699)[0m     @     0x560513422643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17699)[0m     @     0x560513397689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17699)[0m     @     0x560513421baf _PyEval_EvalCodeWithName
[2m[36m(pid=17699)[0m     @     0x560513422643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17699)[0m     @     0x560513397689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17699)[0m     @     0x560513421baf _PyEval_EvalCodeWithName
[2m[36m(pid=17699)[0m     @     0x560513422643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17699)[0m     @     0x560513397689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17699)[0m     @     0x560513421baf _PyEval_EvalCodeWithName
[2m[36m(pid=17699)[0m     @     0x560513422643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17699)[0m     @     0x560513397689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17630)[0m     @     0x7f7c23a994f5 at::Tensor::copy_()
[2m[36m(pid=17630)[0m     @     0x7f7c29b4479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17630)[0m     @     0x55f1958dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17630)[0m     @     0x55f195837b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17630)[0m     @     0x55f1958c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17630)[0m     @     0x55f1958c3a20 method_vectorcall
[2m[36m(pid=17630)[0m     @     0x55f195837bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17630)[0m     @     0x55f1958c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17630)[0m     @     0x55f1958c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17630)[0m     @     0x55f195838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17630)[0m     @     0x55f1958c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17630)[0m     @     0x55f1958c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17630)[0m     @     0x55f195838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17630)[0m     @     0x55f1958c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17630)[0m     @     0x55f1958c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17630)[0m     @     0x55f195838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17630)[0m     @     0x55f1958c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=17630)[0m     @     0x55f1958c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17630)[0m     @     0x55f195838689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17634)[0m     @     0x55d9e75fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17634)[0m     @     0x55d9e7573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x7f29462dbd91 at::TensorIterator::for_each()
[2m[36m(pid=17638)[0m     @     0x7ee645f6c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17638)[0m     @     0x7ee643a994f5 at::Tensor::copy_()
[2m[36m(pid=17738)[0m     @     0x7eece05404f5 at::Tensor::copy_()
[2m[36m(pid=17738)[0m     @     0x7eece2a138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17670)[0m     @     0x7f1f6be724f5 at::Tensor::copy_()
[2m[36m(pid=17670)[0m     @     0x7f1f6e3458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17670)[0m     @     0x7f1f6be724f5 at::Tensor::copy_()
[2m[36m(pid=17670)[0m     @     0x7f1f71f1d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17670)[0m     @     0x564fa6bb8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17670)[0m     @     0x564fa6b13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17670)[0m     @     0x564fa6b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17670)[0m     @     0x564fa6b9fa20 method_vectorcall
[2m[36m(pid=17670)[0m     @     0x564fa6b13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17670)[0m     @     0x564fa6b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17670)[0m     @     0x564fa6b9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17670)[0m     @     0x564fa6b14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17670)[0m     @     0x564fa6b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17670)[0m     @     0x564fa6b9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17670)[0m     @     0x564fa6b14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17670)[0m     @     0x564fa6b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17670)[0m     @     0x564fa6b9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17670)[0m     @     0x564fa6b14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17670)[0m     @     0x564fa6b9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17642)[0m     @     0x7f6a3afc9388 at::native::copy_impl()
[2m[36m(pid=17642)[0m     @     0x7f6a3afcb5a4 at::native::copy_()
[2m[36m(pid=17659)[0m     @     0x7f12f3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=17659)[0m     @     0x7f12f9c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17659)[0m     @     0x55720f9aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17659)[0m     @     0x55720f909b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17659)[0m     @     0x55720f994baf _PyEval_EvalCodeWithName
[2m[36m(pid=17659)[0m     @     0x55720f995a20 method_vectorcall
[2m[36m(pid=17659)[0m     @     0x55720f909bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17659)[0m     @     0x55720f994baf _PyEval_EvalCodeWithName
[2m[36m(pid=17659)[0m     @     0x55720f995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17659)[0m     @     0x55720f90a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17659)[0m     @     0x55720f994baf _PyEval_EvalCodeWithName
[2m[36m(pid=17659)[0m     @     0x55720f995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17659)[0m     @     0x55720f90a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17659)[0m     @     0x55720f994baf _PyEval_EvalCodeWithName
[2m[36m(pid=17659)[0m     @     0x55720f995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17659)[0m     @     0x55720f90a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17659)[0m     @     0x55720f994baf _PyEval_EvalCodeWithName
[2m[36m(pid=17659)[0m     @     0x55720f995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17659)[0m     @     0x55720f90a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17707)[0m     @     0x7ed27f9cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17707)[0m     @     0x7ed27f9ca388 at::native::copy_impl()
[2m[36m(pid=17707)[0m     @     0x7ed27f9cc5a4 at::native::copy_()
[2m[36m(pid=17621)[0m     @     0x7faa052fa5a4 at::native::copy_()
[2m[36m(pid=17621)[0m     @     0x7faa059e54f5 at::Tensor::copy_()
[2m[36m(pid=17650)[0m     @     0x7fc6bb1098de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17650)[0m     @     0x7fc6b8c364f5 at::Tensor::copy_()
[2m[36m(pid=17650)[0m     @     0x7fc6bece179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17650)[0m     @     0x55f197ab9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17650)[0m     @     0x55f197a14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17650)[0m     @     0x55f197a9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17650)[0m     @     0x55f197aa0a20 method_vectorcall
[2m[36m(pid=17650)[0m     @     0x55f197a14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17650)[0m     @     0x55f197a9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17650)[0m     @     0x55f197aa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17650)[0m     @     0x55f197a15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17650)[0m     @     0x55f197a9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17650)[0m     @     0x55f197aa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17650)[0m     @     0x55f197a15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17650)[0m     @     0x55f197a9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17650)[0m     @     0x55f197aa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17650)[0m     @     0x55f197a15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17650)[0m     @     0x55f197a9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17650)[0m     @     0x55f197aa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17650)[0m     @     0x55f197a15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17723)[0m     @     0x7fb0f76b64f5 at::Tensor::copy_()
[2m[36m(pid=17723)[0m     @     0x7fb0fd76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17723)[0m     @     0x55a5b8b30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17723)[0m     @     0x55a5b8a8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17723)[0m     @     0x55a5b8b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=17723)[0m     @     0x55a5b8b17a20 method_vectorcall
[2m[36m(pid=17723)[0m     @     0x55a5b8a8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17723)[0m     @     0x55a5b8b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=17723)[0m     @     0x55a5b8b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17723)[0m     @     0x55a5b8a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17723)[0m     @     0x55a5b8b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=17723)[0m     @     0x55a5b8b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17723)[0m     @     0x55a5b8a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17723)[0m     @     0x55a5b8b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=17723)[0m     @     0x55a5b8b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17723)[0m     @     0x55a5b8a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17723)[0m     @     0x55a5b8b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=17723)[0m     @     0x55a5b8b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17723)[0m     @     0x55a5b8a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17736)[0m     @     0x7fc01613d4f5 at::Tensor::copy_()
[2m[36m(pid=17736)[0m     @     0x7fc0186108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17736)[0m     @     0x7fc01613d4f5 at::Tensor::copy_()
[2m[36m(pid=17736)[0m     @     0x7fc01c1e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17736)[0m     @     0x55934bf6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17736)[0m     @     0x55934becab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17736)[0m     @     0x55934bf55baf _PyEval_EvalCodeWithName
[2m[36m(pid=17736)[0m     @     0x55934bf56a20 method_vectorcall
[2m[36m(pid=17736)[0m     @     0x55934becabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17736)[0m     @     0x55934bf55baf _PyEval_EvalCodeWithName
[2m[36m(pid=17736)[0m     @     0x55934bf56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17736)[0m     @     0x55934becb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17736)[0m     @     0x55934bf55baf _PyEval_EvalCodeWithName
[2m[36m(pid=17736)[0m     @     0x55934bf56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17736)[0m     @     0x55934becb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17736)[0m     @     0x55934bf55baf _PyEval_EvalCodeWithName
[2m[36m(pid=17736)[0m     @     0x55934bf56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17736)[0m     @     0x55934becb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17736)[0m     @     0x55934bf55baf _PyEval_EvalCodeWithName
[2m[36m(pid=17736)[0m     @     0x55934bf56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17736)[0m     @     0x55934becb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17626)[0m     @     0x559a3993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17626)[0m     @     0x559a399c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17626)[0m     @     0x559a399c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17626)[0m     @     0x559a3993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17626)[0m     @     0x559a399c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17626)[0m     @     0x559a399c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17626)[0m     @     0x559a3993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17626)[0m     @     0x559a399c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=17626)[0m     @     0x559a399c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17626)[0m     @     0x559a3993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17694)[0m     @     0x7ee5e7a774f5 at::Tensor::copy_()
[2m[36m(pid=17694)[0m     @     0x7ee5e9f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17694)[0m     @     0x7ee5e7a774f5 at::Tensor::copy_()
[2m[36m(pid=17702)[0m     @     0x7ed3712b54f5 at::Tensor::copy_()
[2m[36m(pid=17702)[0m     @     0x7ed37736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17702)[0m     @     0x5608d512cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17702)[0m     @     0x5608d5087b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17702)[0m     @     0x5608d5112baf _PyEval_EvalCodeWithName
[2m[36m(pid=17702)[0m     @     0x5608d5113a20 method_vectorcall
[2m[36m(pid=17702)[0m     @     0x5608d5087bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17702)[0m     @     0x5608d5112baf _PyEval_EvalCodeWithName
[2m[36m(pid=17702)[0m     @     0x5608d5113643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17702)[0m     @     0x5608d5088689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17702)[0m     @     0x5608d5112baf _PyEval_EvalCodeWithName
[2m[36m(pid=17702)[0m     @     0x5608d5113643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17702)[0m     @     0x5608d5088689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17702)[0m     @     0x5608d5112baf _PyEval_EvalCodeWithName
[2m[36m(pid=17702)[0m     @     0x5608d5113643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17702)[0m     @     0x5608d5088689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17702)[0m     @     0x5608d5112baf _PyEval_EvalCodeWithName
[2m[36m(pid=17702)[0m     @     0x5608d5113643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17702)[0m     @     0x5608d5088689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17727)[0m     @     0x7f05fdf4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17727)[0m     @     0x7f05fba774f5 at::Tensor::copy_()
[2m[36m(pid=17727)[0m     @     0x7f0601b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17727)[0m     @     0x5640c804ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17727)[0m     @     0x5640c7faab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17727)[0m     @     0x5640c8035baf _PyEval_EvalCodeWithName
[2m[36m(pid=17727)[0m     @     0x5640c8036a20 method_vectorcall
[2m[36m(pid=17727)[0m     @     0x5640c7faabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17727)[0m     @     0x5640c8035baf _PyEval_EvalCodeWithName
[2m[36m(pid=17727)[0m     @     0x5640c8036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17727)[0m     @     0x5640c7fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17727)[0m     @     0x5640c8035baf _PyEval_EvalCodeWithName
[2m[36m(pid=17727)[0m     @     0x5640c8036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17727)[0m     @     0x5640c7fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17727)[0m     @     0x5640c8035baf _PyEval_EvalCodeWithName
[2m[36m(pid=17727)[0m     @     0x5640c8036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17727)[0m     @     0x5640c7fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17727)[0m     @     0x5640c8035baf _PyEval_EvalCodeWithName
[2m[36m(pid=17727)[0m     @     0x5640c8036643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17727)[0m     @     0x5640c7fab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x7fa634540d91 at::TensorIterator::for_each()
[2m[36m(pid=17697)[0m     @     0x7fa634e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17697)[0m     @     0x7fa634e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17629)[0m     @     0x7f19667e08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17629)[0m     @     0x7f196430d4f5 at::Tensor::copy_()
[2m[36m(pid=17629)[0m     @     0x7f196a3b879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17629)[0m     @     0x5626c046ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17629)[0m     @     0x5626c03cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17629)[0m     @     0x5626c0455baf _PyEval_EvalCodeWithName
[2m[36m(pid=17629)[0m     @     0x5626c0456a20 method_vectorcall
[2m[36m(pid=17629)[0m     @     0x5626c03cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17629)[0m     @     0x5626c0455baf _PyEval_EvalCodeWithName
[2m[36m(pid=17629)[0m     @     0x5626c0456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17629)[0m     @     0x5626c03cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17629)[0m     @     0x5626c0455baf _PyEval_EvalCodeWithName
[2m[36m(pid=17629)[0m     @     0x5626c0456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17629)[0m     @     0x5626c03cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17629)[0m     @     0x5626c0455baf _PyEval_EvalCodeWithName
[2m[36m(pid=17629)[0m     @     0x5626c0456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17629)[0m     @     0x5626c03cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17629)[0m     @     0x5626c0455baf _PyEval_EvalCodeWithName
[2m[36m(pid=17629)[0m     @     0x5626c0456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17629)[0m     @     0x5626c03cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17741)[0m     @     0x7ef43d7204f5 at::Tensor::copy_()
[2m[36m(pid=17741)[0m     @     0x7ef43fbf38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17741)[0m     @     0x7ef43d7204f5 at::Tensor::copy_()
[2m[36m(pid=17741)[0m     @     0x7ef4437cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17741)[0m     @     0x562241ee1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17741)[0m     @     0x562241e3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17741)[0m     @     0x562241ec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17741)[0m     @     0x562241ec8a20 method_vectorcall
[2m[36m(pid=17741)[0m     @     0x562241e3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17741)[0m     @     0x562241ec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17741)[0m     @     0x562241ec8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17741)[0m     @     0x562241e3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17741)[0m     @     0x562241ec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17741)[0m     @     0x562241ec8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17741)[0m     @     0x562241e3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17741)[0m     @     0x562241ec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17741)[0m     @     0x562241ec8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17741)[0m     @     0x562241e3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17741)[0m     @     0x562241ec7baf _PyEval_EvalCodeWithName
[2m[36m(pid=17741)[0m     @     0x562241ec8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17741)[0m     @     0x562241e3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17682)[0m     @     0x7fb6d03df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17682)[0m     @     0x7fb6cdf0c4f5 at::Tensor::copy_()
[2m[36m(pid=17682)[0m     @     0x7fb6d3fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17682)[0m     @     0x55d4a0133fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17682)[0m     @     0x55d4a008eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17682)[0m     @     0x55d4a0119baf _PyEval_EvalCodeWithName
[2m[36m(pid=17682)[0m     @     0x55d4a011aa20 method_vectorcall
[2m[36m(pid=17682)[0m     @     0x55d4a008ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17682)[0m     @     0x55d4a0119baf _PyEval_EvalCodeWithName
[2m[36m(pid=17682)[0m     @     0x55d4a011a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17682)[0m     @     0x55d4a008f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17682)[0m     @     0x55d4a0119baf _PyEval_EvalCodeWithName
[2m[36m(pid=17682)[0m     @     0x55d4a011a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17682)[0m     @     0x55d4a008f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17682)[0m     @     0x55d4a0119baf _PyEval_EvalCodeWithName
[2m[36m(pid=17682)[0m     @     0x55d4a011a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17682)[0m     @     0x55d4a008f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17682)[0m     @     0x55d4a0119baf _PyEval_EvalCodeWithName
[2m[36m(pid=17682)[0m     @     0x55d4a011a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17682)[0m     @     0x55d4a008f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17657)[0m     @     0x7f0c3258d4f5 at::Tensor::copy_()
[2m[36m(pid=17657)[0m     @     0x7f0c34a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17657)[0m     @     0x7f0c3258d4f5 at::Tensor::copy_()
[2m[36m(pid=17657)[0m     @     0x7f0c3863879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17657)[0m     @     0x55ed45f62fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17657)[0m     @     0x55ed45ebdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17657)[0m     @     0x55ed45f48baf _PyEval_EvalCodeWithName
[2m[36m(pid=17657)[0m     @     0x55ed45f49a20 method_vectorcall
[2m[36m(pid=17657)[0m     @     0x55ed45ebdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17657)[0m     @     0x55ed45f48baf _PyEval_EvalCodeWithName
[2m[36m(pid=17657)[0m     @     0x55ed45f49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17657)[0m     @     0x55ed45ebe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17657)[0m     @     0x55ed45f48baf _PyEval_EvalCodeWithName
[2m[36m(pid=17657)[0m     @     0x55ed45f49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17657)[0m     @     0x55ed45ebe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17657)[0m     @     0x55ed45f48baf _PyEval_EvalCodeWithName
[2m[36m(pid=17657)[0m     @     0x55ed45f49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17657)[0m     @     0x55ed45ebe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17657)[0m     @     0x55ed45f48baf _PyEval_EvalCodeWithName
[2m[36m(pid=17657)[0m     @     0x55ed45f49643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17657)[0m     @     0x55ed45ebe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17712)[0m     @     0x7f9a935e44f5 at::Tensor::copy_()
[2m[36m(pid=17712)[0m     @     0x7f9a95ab78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17712)[0m     @     0x7f9a935e44f5 at::Tensor::copy_()
[2m[36m(pid=17712)[0m     @     0x7f9a9968f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17712)[0m     @     0x55eb83346fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17712)[0m     @     0x55eb832a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17712)[0m     @     0x55eb8332cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17712)[0m     @     0x55eb8332da20 method_vectorcall
[2m[36m(pid=17712)[0m     @     0x55eb832a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17712)[0m     @     0x55eb8332cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17712)[0m     @     0x55eb8332d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17712)[0m     @     0x55eb832a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17620)[0m     @     0x7f6a456784f5 at::Tensor::copy_()
[2m[36m(pid=17620)[0m     @     0x7f6a47b4b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17620)[0m     @     0x7f6a456784f5 at::Tensor::copy_()
[2m[36m(pid=17620)[0m     @     0x7f6a4b72379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17620)[0m     @     0x5640aece0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17620)[0m     @     0x5640aec3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17620)[0m     @     0x5640aecc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17620)[0m     @     0x5640aecc7a20 method_vectorcall
[2m[36m(pid=17620)[0m     @     0x5640aec3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17620)[0m     @     0x5640aecc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17620)[0m     @     0x5640aecc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17620)[0m     @     0x5640aec3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17620)[0m     @     0x5640aecc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17620)[0m     @     0x5640aecc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17620)[0m     @     0x5640aec3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17620)[0m     @     0x5640aecc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17620)[0m     @     0x5640aecc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17620)[0m     @     0x5640aec3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17620)[0m     @     0x5640aecc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17620)[0m     @     0x5640aecc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17620)[0m     @     0x5640aec3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17706)[0m     @     0x7f92598f84f5 at::Tensor::copy_()
[2m[36m(pid=17706)[0m     @     0x7f925f9a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17706)[0m     @     0x564d96c04fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17706)[0m     @     0x564d96b5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17706)[0m     @     0x564d96beabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17706)[0m     @     0x564d96beba20 method_vectorcall
[2m[36m(pid=17706)[0m     @     0x564d96b5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17706)[0m     @     0x564d96beabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17706)[0m     @     0x564d96beb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17706)[0m     @     0x564d96b60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17706)[0m     @     0x564d96beabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17706)[0m     @     0x564d96beb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17706)[0m     @     0x564d96b60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17706)[0m     @     0x564d96beabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17706)[0m     @     0x564d96beb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17706)[0m     @     0x564d96b60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17706)[0m     @     0x564d96beabaf _PyEval_EvalCodeWithName
[2m[36m(pid=17706)[0m     @     0x564d96beb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17706)[0m     @     0x564d96b60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17633)[0m     @     0x55add17d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17633)[0m     @     0x55add17d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17633)[0m     @     0x55add174b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17633)[0m     @     0x55add17d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17633)[0m     @     0x55add17d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17633)[0m     @     0x55add174b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17633)[0m     @     0x55add17d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17633)[0m     @     0x55add17d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17633)[0m     @     0x55add174b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17633)[0m     @     0x55add17d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17633)[0m     @     0x55add17d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17633)[0m     @     0x55add174b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17672)[0m     @     0x557f18acebaf _PyEval_EvalCodeWithName
[2m[36m(pid=17672)[0m     @     0x557f18acf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17672)[0m     @     0x557f18a44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17624)[0m     @     0x558cef347fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17624)[0m     @     0x558cef2a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17624)[0m     @     0x558cef32dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17624)[0m     @     0x558cef32ea20 method_vectorcall
[2m[36m(pid=17624)[0m     @     0x558cef2a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17624)[0m     @     0x558cef32dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17624)[0m     @     0x558cef32e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17624)[0m     @     0x558cef2a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17624)[0m     @     0x558cef32dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17624)[0m     @     0x558cef32e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17624)[0m     @     0x558cef2a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17624)[0m     @     0x558cef32dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17624)[0m     @     0x558cef32e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17624)[0m     @     0x558cef2a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17624)[0m     @     0x558cef32dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17624)[0m     @     0x558cef32e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17624)[0m     @     0x558cef2a3689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:33:54,847	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=17616)[0m     @     0x560c2d022baf _PyEval_EvalCodeWithName
[2m[36m(pid=17616)[0m     @     0x560c2d023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17616)[0m     @     0x560c2cf98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17619)[0m     @     0x557a3b729baf _PyEval_EvalCodeWithName
[2m[36m(pid=17619)[0m     @     0x557a3b72aa20 method_vectorcall
[2m[36m(pid=17619)[0m     @     0x557a3b69ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17619)[0m     @     0x557a3b729baf _PyEval_EvalCodeWithName
[2m[36m(pid=17619)[0m     @     0x557a3b72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17619)[0m     @     0x557a3b69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17619)[0m     @     0x557a3b729baf _PyEval_EvalCodeWithName
[2m[36m(pid=17619)[0m     @     0x557a3b72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17619)[0m     @     0x557a3b69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17619)[0m     @     0x557a3b729baf _PyEval_EvalCodeWithName
[2m[36m(pid=17619)[0m     @     0x557a3b72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17619)[0m     @     0x557a3b69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17619)[0m     @     0x557a3b729baf _PyEval_EvalCodeWithName
[2m[36m(pid=17619)[0m     @     0x557a3b72a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17619)[0m     @     0x557a3b69f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17701)[0m     @     0x7f5b71f0c4f5 at::Tensor::copy_()
[2m[36m(pid=17701)[0m     @     0x7f5b77fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17701)[0m     @     0x55a0a5274fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17701)[0m     @     0x55a0a51cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17701)[0m     @     0x55a0a525abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17701)[0m     @     0x55a0a525ba20 method_vectorcall
[2m[36m(pid=17701)[0m     @     0x55a0a51cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17701)[0m     @     0x55a0a525abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17701)[0m     @     0x55a0a525b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17701)[0m     @     0x55a0a51d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17701)[0m     @     0x55a0a525abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17701)[0m     @     0x55a0a525b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17701)[0m     @     0x55a0a51d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17701)[0m     @     0x55a0a525abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17701)[0m     @     0x55a0a525b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17701)[0m     @     0x55a0a51d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17701)[0m     @     0x55a0a525abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17701)[0m     @     0x55a0a525b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17701)[0m     @     0x55a0a51d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17635)[0m     @     0x7f9bf5f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17635)[0m     @     0x7f9bf3a774f5 at::Tensor::copy_()
[2m[36m(pid=17635)[0m     @     0x7f9bf9b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17635)[0m     @     0x5587af385fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17635)[0m     @     0x5587af2e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17635)[0m     @     0x5587af36bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17635)[0m     @     0x5587af36ca20 method_vectorcall
[2m[36m(pid=17635)[0m     @     0x5587af2e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17635)[0m     @     0x5587af36bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17635)[0m     @     0x5587af36c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17635)[0m     @     0x5587af2e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17635)[0m     @     0x5587af36bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17635)[0m     @     0x5587af36c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17635)[0m     @     0x5587af2e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17635)[0m     @     0x5587af36bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17635)[0m     @     0x5587af36c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17635)[0m     @     0x5587af2e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17635)[0m     @     0x5587af36bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17635)[0m     @     0x5587af36c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17635)[0m     @     0x5587af2e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17705)[0m     @     0x7f3da05d2d91 at::TensorIterator::for_each()
[2m[36m(pid=17705)[0m     @     0x7f3da0eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17705)[0m     @     0x7f3da0ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17705)[0m     @     0x7f3da037aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17705)[0m     @     0x7f3da0378388 at::native::copy_impl()
[2m[36m(pid=17627)[0m     @     0x7edf255cb4f5 at::Tensor::copy_()
[2m[36m(pid=17627)[0m     @     0x7edf27a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17627)[0m     @     0x7edf255cb4f5 at::Tensor::copy_()
[2m[36m(pid=17627)[0m     @     0x7edf2b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17627)[0m     @     0x560c6c7befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17627)[0m     @     0x560c6c719b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17627)[0m     @     0x560c6c7a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17627)[0m     @     0x560c6c7a5a20 method_vectorcall
[2m[36m(pid=17627)[0m     @     0x560c6c719bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17627)[0m     @     0x560c6c7a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17627)[0m     @     0x560c6c7a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17627)[0m     @     0x560c6c71a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17627)[0m     @     0x560c6c7a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17627)[0m     @     0x560c6c7a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17627)[0m     @     0x560c6c71a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17627)[0m     @     0x560c6c7a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17627)[0m     @     0x560c6c7a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17627)[0m     @     0x560c6c71a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17627)[0m     @     0x560c6c7a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=17627)[0m     @     0x560c6c7a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17627)[0m     @     0x560c6c71a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17688)[0m     @     0x7f0a8cc30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17688)[0m     @     0x7f0a8cc53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17688)[0m     @     0x7f0a8c0f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17688)[0m     @     0x7f0a8c0f3388 at::native::copy_impl()
[2m[36m(pid=17685)[0m     @     0x7f4322dea4f5 at::Tensor::copy_()
[2m[36m(pid=17685)[0m     @     0x7f4328e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17685)[0m     @     0x55c581059fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17685)[0m     @     0x55c580fb4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17685)[0m     @     0x55c58103fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17685)[0m     @     0x55c581040a20 method_vectorcall
[2m[36m(pid=17685)[0m     @     0x55c580fb4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17685)[0m     @     0x55c58103fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17685)[0m     @     0x55c581040643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17685)[0m     @     0x55c580fb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17685)[0m     @     0x55c58103fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17685)[0m     @     0x55c581040643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17685)[0m     @     0x55c580fb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17685)[0m     @     0x55c58103fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17685)[0m     @     0x55c581040643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17685)[0m     @     0x55c580fb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17685)[0m     @     0x55c58103fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17685)[0m     @     0x55c581040643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17685)[0m     @     0x55c580fb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17753)[0m     @     0x7f782413d4f5 at::Tensor::copy_()
[2m[36m(pid=17753)[0m     @     0x7f782a1e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17753)[0m     @     0x5602d3d1efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17753)[0m     @     0x5602d3c79b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17753)[0m     @     0x5602d3d04baf _PyEval_EvalCodeWithName
[2m[36m(pid=17753)[0m     @     0x5602d3d05a20 method_vectorcall
[2m[36m(pid=17753)[0m     @     0x5602d3c79bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17753)[0m     @     0x5602d3d04baf _PyEval_EvalCodeWithName
[2m[36m(pid=17753)[0m     @     0x5602d3d05643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17753)[0m     @     0x5602d3c7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17753)[0m     @     0x5602d3d04baf _PyEval_EvalCodeWithName
[2m[36m(pid=17753)[0m     @     0x5602d3d05643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17753)[0m     @     0x5602d3c7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17753)[0m     @     0x5602d3d04baf _PyEval_EvalCodeWithName
[2m[36m(pid=17753)[0m     @     0x5602d3d05643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17753)[0m     @     0x5602d3c7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17753)[0m     @     0x5602d3d04baf _PyEval_EvalCodeWithName
[2m[36m(pid=17753)[0m     @     0x5602d3d05643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17753)[0m     @     0x5602d3c7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17713)[0m     @     0x7f8b991a54f5 at::Tensor::copy_()
[2m[36m(pid=17644)[0m     @     0x7f7f37e388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17644)[0m     @     0x7f7f359654f5 at::Tensor::copy_()
[2m[36m(pid=17644)[0m     @     0x7f7f3ba1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17644)[0m     @     0x562684baafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17644)[0m     @     0x562684b05b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17644)[0m     @     0x562684b90baf _PyEval_EvalCodeWithName
[2m[36m(pid=17644)[0m     @     0x562684b91a20 method_vectorcall
[2m[36m(pid=17644)[0m     @     0x562684b05bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17644)[0m     @     0x562684b90baf _PyEval_EvalCodeWithName
[2m[36m(pid=17644)[0m     @     0x562684b91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17644)[0m     @     0x562684b06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17644)[0m     @     0x562684b90baf _PyEval_EvalCodeWithName
[2m[36m(pid=17644)[0m     @     0x562684b91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17644)[0m     @     0x562684b06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17644)[0m     @     0x562684b90baf _PyEval_EvalCodeWithName
[2m[36m(pid=17644)[0m     @     0x562684b91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17644)[0m     @     0x562684b06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17644)[0m     @     0x562684b90baf _PyEval_EvalCodeWithName
[2m[36m(pid=17644)[0m     @     0x562684b91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17644)[0m     @     0x562684b06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17717)[0m     @     0x5567158b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17717)[0m     @     0x55671593abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17717)[0m     @     0x55671593b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17717)[0m     @     0x5567158b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17717)[0m     @     0x55671593abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17717)[0m     @     0x55671593b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17717)[0m     @     0x5567158b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17717)[0m     @     0x55671593abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17717)[0m     @     0x55671593b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17717)[0m     @     0x5567158b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17731)[0m     @     0x560799195a20 method_vectorcall
[2m[36m(pid=17731)[0m     @     0x560799109bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17731)[0m     @     0x560799194baf _PyEval_EvalCodeWithName
[2m[36m(pid=17731)[0m     @     0x560799195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17731)[0m     @     0x56079910a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17731)[0m     @     0x560799194baf _PyEval_EvalCodeWithName
[2m[36m(pid=17731)[0m     @     0x560799195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17731)[0m     @     0x56079910a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17731)[0m     @     0x560799194baf _PyEval_EvalCodeWithName
[2m[36m(pid=17731)[0m     @     0x560799195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17731)[0m     @     0x56079910a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17731)[0m     @     0x560799194baf _PyEval_EvalCodeWithName
[2m[36m(pid=17731)[0m     @     0x560799195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17731)[0m     @     0x56079910a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x7f2946bbeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=17674)[0m     @     0x7f2946be1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=17638)[0m     @     0x7ee649b4479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17638)[0m     @     0x564ffe0a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17638)[0m     @     0x564ffdffdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17638)[0m     @     0x564ffe088baf _PyEval_EvalCodeWithName
[2m[36m(pid=17638)[0m     @     0x564ffe089a20 method_vectorcall
[2m[36m(pid=17638)[0m     @     0x564ffdffdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17638)[0m     @     0x564ffe088baf _PyEval_EvalCodeWithName
[2m[36m(pid=17638)[0m     @     0x564ffe089643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17638)[0m     @     0x564ffdffe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17638)[0m     @     0x564ffe088baf _PyEval_EvalCodeWithName
[2m[36m(pid=17638)[0m     @     0x564ffe089643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17638)[0m     @     0x564ffdffe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17638)[0m     @     0x564ffe088baf _PyEval_EvalCodeWithName
[2m[36m(pid=17638)[0m     @     0x564ffe089643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17638)[0m     @     0x564ffdffe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17638)[0m     @     0x564ffe088baf _PyEval_EvalCodeWithName
[2m[36m(pid=17638)[0m     @     0x564ffe089643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17638)[0m     @     0x564ffdffe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17738)[0m     @     0x7eece05404f5 at::Tensor::copy_()
[2m[36m(pid=17738)[0m     @     0x7eece65eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17738)[0m     @     0x5629da1d3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17738)[0m     @     0x5629da12eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17738)[0m     @     0x5629da1b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17738)[0m     @     0x5629da1baa20 method_vectorcall
[2m[36m(pid=17738)[0m     @     0x5629da12ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17738)[0m     @     0x5629da1b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17738)[0m     @     0x5629da1ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17738)[0m     @     0x5629da12f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17738)[0m     @     0x5629da1b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17738)[0m     @     0x5629da1ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17738)[0m     @     0x5629da12f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17738)[0m     @     0x5629da1b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17738)[0m     @     0x5629da1ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17738)[0m     @     0x5629da12f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17738)[0m     @     0x5629da1b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=17738)[0m     @     0x5629da1ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17738)[0m     @     0x5629da12f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17670)[0m     @     0x564fa6b9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17670)[0m     @     0x564fa6b14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17642)[0m     @     0x7f6a3b6b64f5 at::Tensor::copy_()
[2m[36m(pid=17642)[0m     @     0x7f6a3db898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17707)[0m     @     0x7ed2800b74f5 at::Tensor::copy_()
[2m[36m(pid=17707)[0m     @     0x7ed28258a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17707)[0m     @     0x7ed2800b74f5 at::Tensor::copy_()
[2m[36m(pid=17707)[0m     @     0x7ed28616279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17621)[0m     @     0x7faa07eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17621)[0m     @     0x7faa059e54f5 at::Tensor::copy_()
[2m[36m(pid=17621)[0m     @     0x7faa0ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17621)[0m     @     0x55b4cad44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17621)[0m     @     0x55b4cac9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17621)[0m     @     0x55b4cad2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17621)[0m     @     0x55b4cad2ba20 method_vectorcall
[2m[36m(pid=17621)[0m     @     0x55b4cac9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17621)[0m     @     0x55b4cad2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17621)[0m     @     0x55b4cad2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17621)[0m     @     0x55b4caca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17621)[0m     @     0x55b4cad2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17621)[0m     @     0x55b4cad2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17621)[0m     @     0x55b4caca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17621)[0m     @     0x55b4cad2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17621)[0m     @     0x55b4cad2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17621)[0m     @     0x55b4caca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17621)[0m     @     0x55b4cad2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17621)[0m     @     0x55b4cad2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17621)[0m     @     0x55b4caca0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17694)[0m     @     0x7ee5edb2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17694)[0m     @     0x557d687c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17694)[0m     @     0x557d6871bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17694)[0m     @     0x557d687a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17694)[0m     @     0x557d687a7a20 method_vectorcall
[2m[36m(pid=17694)[0m     @     0x557d6871bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17694)[0m     @     0x557d687a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17694)[0m     @     0x557d687a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17694)[0m     @     0x557d6871c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17694)[0m     @     0x557d687a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17694)[0m     @     0x557d687a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17694)[0m     @     0x557d6871c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17694)[0m     @     0x557d687a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17694)[0m     @     0x557d687a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17694)[0m     @     0x557d6871c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17694)[0m     @     0x557d687a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=17694)[0m     @     0x557d687a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17694)[0m     @     0x557d6871c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x7fa6342e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17697)[0m     @     0x7fa6342e6388 at::native::copy_impl()
[2m[36m(pid=17712)[0m     @     0x55eb8332cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17712)[0m     @     0x55eb8332d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17712)[0m     @     0x55eb832a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17712)[0m     @     0x55eb8332cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17712)[0m     @     0x55eb8332d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17712)[0m     @     0x55eb832a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17712)[0m     @     0x55eb8332cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17712)[0m     @     0x55eb8332d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17712)[0m     @     0x55eb832a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17705)[0m     @     0x7f3da037a5a4 at::native::copy_()
[2m[36m(pid=17705)[0m     @     0x7f3da0a654f5 at::Tensor::copy_()
[2m[36m(pid=17688)[0m     @     0x7f0a8c0f55a4 at::native::copy_()
[2m[36m(pid=17688)[0m     @     0x7f0a8c7e04f5 at::Tensor::copy_()
[2m[36m(pid=17713)[0m     @     0x7f8b9b6788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17713)[0m     @     0x7f8b991a54f5 at::Tensor::copy_()
[2m[36m(pid=17713)[0m     @     0x7f8b9f25079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17713)[0m     @     0x562d14534fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17713)[0m     @     0x562d1448fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17713)[0m     @     0x562d1451abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17674)[0m     @     0x7f2946083a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=17674)[0m     @     0x7f2946081388 at::native::copy_impl()
[2m[36m(pid=17642)[0m     @     0x7f6a3b6b64f5 at::Tensor::copy_()
[2m[36m(pid=17642)[0m     @     0x7f6a4176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17642)[0m     @     0x557b8501afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17707)[0m     @     0x56397eab3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17707)[0m     @     0x56397ea0eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17707)[0m     @     0x56397ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17707)[0m     @     0x56397ea9aa20 method_vectorcall
[2m[36m(pid=17707)[0m     @     0x56397ea0ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17707)[0m     @     0x56397ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17707)[0m     @     0x56397ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17707)[0m     @     0x56397ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17707)[0m     @     0x56397ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17707)[0m     @     0x56397ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17707)[0m     @     0x56397ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17707)[0m     @     0x56397ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17707)[0m     @     0x56397ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17707)[0m     @     0x56397ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17707)[0m     @     0x56397ea99baf _PyEval_EvalCodeWithName
[2m[36m(pid=17707)[0m     @     0x56397ea9a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17707)[0m     @     0x56397ea0f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x7fa6342e85a4 at::native::copy_()
[2m[36m(pid=17697)[0m     @     0x7fa6349d34f5 at::Tensor::copy_()
[2m[36m(pid=17697)[0m     @     0x7fa636ea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17705)[0m     @     0x7f3da2f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17705)[0m     @     0x7f3da0a654f5 at::Tensor::copy_()
[2m[36m(pid=17705)[0m     @     0x7f3da6b1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17705)[0m     @     0x5592d29d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17705)[0m     @     0x5592d2934b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17705)[0m     @     0x5592d29bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17705)[0m     @     0x5592d29c0a20 method_vectorcall
[2m[36m(pid=17705)[0m     @     0x5592d2934bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17705)[0m     @     0x5592d29bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17705)[0m     @     0x5592d29c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17705)[0m     @     0x5592d2935689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17705)[0m     @     0x5592d29bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17705)[0m     @     0x5592d29c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17705)[0m     @     0x5592d2935689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17705)[0m     @     0x5592d29bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17705)[0m     @     0x5592d29c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17705)[0m     @     0x5592d2935689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17705)[0m     @     0x5592d29bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17705)[0m     @     0x5592d29c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17705)[0m     @     0x5592d2935689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17688)[0m     @     0x7f0a8ecb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17688)[0m     @     0x7f0a8c7e04f5 at::Tensor::copy_()
[2m[36m(pid=17688)[0m     @     0x7f0a9288b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17688)[0m     @     0x55ebdf5cffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17688)[0m     @     0x55ebdf52ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17688)[0m     @     0x55ebdf5b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17688)[0m     @     0x55ebdf5b6a20 method_vectorcall
[2m[36m(pid=17688)[0m     @     0x55ebdf52abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17688)[0m     @     0x55ebdf5b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17688)[0m     @     0x55ebdf5b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17688)[0m     @     0x55ebdf52b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17688)[0m     @     0x55ebdf5b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17688)[0m     @     0x55ebdf5b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17688)[0m     @     0x55ebdf52b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17688)[0m     @     0x55ebdf5b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17688)[0m     @     0x55ebdf5b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17688)[0m     @     0x55ebdf52b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17688)[0m     @     0x55ebdf5b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=17688)[0m     @     0x55ebdf5b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17688)[0m     @     0x55ebdf52b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17713)[0m     @     0x562d1451ba20 method_vectorcall
[2m[36m(pid=17713)[0m     @     0x562d1448fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17713)[0m     @     0x562d1451abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17713)[0m     @     0x562d1451b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17713)[0m     @     0x562d14490689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17713)[0m     @     0x562d1451abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17713)[0m     @     0x562d1451b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17713)[0m     @     0x562d14490689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17713)[0m     @     0x562d1451abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17713)[0m     @     0x562d1451b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17713)[0m     @     0x562d14490689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17713)[0m     @     0x562d1451abaf _PyEval_EvalCodeWithName
[2m[36m(pid=17713)[0m     @     0x562d1451b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17713)[0m     @     0x562d14490689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x7f29460835a4 at::native::copy_()
[2m[36m(pid=17674)[0m     @     0x7f294676e4f5 at::Tensor::copy_()
[2m[36m(pid=17642)[0m     @     0x557b84f75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17642)[0m     @     0x557b85000baf _PyEval_EvalCodeWithName
[2m[36m(pid=17642)[0m     @     0x557b85001a20 method_vectorcall
[2m[36m(pid=17642)[0m     @     0x557b84f75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17642)[0m     @     0x557b85000baf _PyEval_EvalCodeWithName
[2m[36m(pid=17642)[0m     @     0x557b85001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17642)[0m     @     0x557b84f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17642)[0m     @     0x557b85000baf _PyEval_EvalCodeWithName
[2m[36m(pid=17642)[0m     @     0x557b85001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17642)[0m     @     0x557b84f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17642)[0m     @     0x557b85000baf _PyEval_EvalCodeWithName
[2m[36m(pid=17642)[0m     @     0x557b85001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17642)[0m     @     0x557b84f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17642)[0m     @     0x557b85000baf _PyEval_EvalCodeWithName
[2m[36m(pid=17642)[0m     @     0x557b85001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17642)[0m     @     0x557b84f76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x7fa6349d34f5 at::Tensor::copy_()
[2m[36m(pid=17697)[0m     @     0x7fa63aa7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17697)[0m     @     0x55d98a246fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17697)[0m     @     0x55d98a1a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x55d98a22cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17697)[0m     @     0x55d98a22da20 method_vectorcall
[2m[36m(pid=17697)[0m     @     0x55d98a1a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x55d98a22cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17697)[0m     @     0x55d98a22d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17697)[0m     @     0x55d98a1a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x55d98a22cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17697)[0m     @     0x55d98a22d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17697)[0m     @     0x55d98a1a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x55d98a22cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17697)[0m     @     0x55d98a22d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17697)[0m     @     0x55d98a1a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17697)[0m     @     0x55d98a22cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17697)[0m     @     0x55d98a22d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17697)[0m     @     0x55d98a1a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x7f2948c418de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=17674)[0m     @     0x7f294676e4f5 at::Tensor::copy_()
[2m[36m(pid=17674)[0m     @     0x7f294c81979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=17674)[0m     @     0x561fc0a99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=17674)[0m     @     0x561fc09f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x561fc0a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17674)[0m     @     0x561fc0a80a20 method_vectorcall
[2m[36m(pid=17674)[0m     @     0x561fc09f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x561fc0a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17674)[0m     @     0x561fc0a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17674)[0m     @     0x561fc09f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x561fc0a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17674)[0m     @     0x561fc0a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17674)[0m     @     0x561fc09f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x561fc0a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17674)[0m     @     0x561fc0a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17674)[0m     @     0x561fc09f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=17674)[0m     @     0x561fc0a7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=17674)[0m     @     0x561fc0a80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=17674)[0m     @     0x561fc09f5689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:33:54,969	ERROR trial_runner.py:567 -- Trial PPO_jss_env_632d4_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=17739, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:33:54,975	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:33:54,975	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:33:54,975	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:33:54,975	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
== Status ==
Memory usage on this node: 24.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_632d4_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_632d4_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_632d4_00000_0_2020-11-05_10-33-47/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_632d4_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_632d4_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_632d4_00000_0_2020-11-05_10-33-47/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:33:54,986	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffc2621d1401000000.
2020-11-05 10:33:54,986	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:33:54,986	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_632d4_00000])
