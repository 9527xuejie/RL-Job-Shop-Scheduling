2020-11-05 11:00:40,721	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.47 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_25686_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=14287)[0m 2020-11-05 11:00:43,512	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=14292)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14292)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14292)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14292)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14292)[0m *** SIGSEGV (@0x0) received by PID 14292 (TID 0x7fcf58f71700) from PID 0; stack trace: ***
[2m[36m(pid=14255)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14255)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14255)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14255)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14255)[0m *** SIGSEGV (@0x0) received by PID 14255 (TID 0x7f2da23b1700) from PID 0; stack trace: ***
[2m[36m(pid=14255)[0m     @     0x7f2da1f8a390 (unknown)
[2m[36m(pid=14255)[0m     @     0x7efea409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14255)[0m     @     0x7efea138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14299)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14299)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14299)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14299)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14299)[0m *** SIGSEGV (@0x0) received by PID 14299 (TID 0x7f2115ee8700) from PID 0; stack trace: ***
[2m[36m(pid=14299)[0m     @     0x7f2115ac1390 (unknown)
[2m[36m(pid=14299)[0m     @     0x7ef217c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14299)[0m     @     0x7ef214f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14288)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14288)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14288)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14288)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14288)[0m *** SIGSEGV (@0x0) received by PID 14288 (TID 0x7f95ec501700) from PID 0; stack trace: ***
[2m[36m(pid=14288)[0m     @     0x7f95ec0da390 (unknown)
[2m[36m(pid=14288)[0m     @     0x7f66ee293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14288)[0m     @     0x7f66eb58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14261)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14261)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14261)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14261)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14261)[0m *** SIGSEGV (@0x0) received by PID 14261 (TID 0x7f2e9d4b3700) from PID 0; stack trace: ***
[2m[36m(pid=14261)[0m     @     0x7f2e9d08c390 (unknown)
[2m[36m(pid=14261)[0m     @     0x7eff9f2a8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14261)[0m     @     0x7eff9c59c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14261)[0m     @     0x7eff9c59f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14258)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14258)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14258)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14258)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14258)[0m *** SIGSEGV (@0x0) received by PID 14258 (TID 0x7f801c99a700) from PID 0; stack trace: ***
[2m[36m(pid=14258)[0m     @     0x7f801c573390 (unknown)
[2m[36m(pid=14258)[0m     @     0x7f511e773fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14258)[0m     @     0x7f511ba6764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14275)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14275)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14275)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14275)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14275)[0m *** SIGSEGV (@0x0) received by PID 14275 (TID 0x7ff018410700) from PID 0; stack trace: ***
[2m[36m(pid=14275)[0m     @     0x7ff017fe9390 (unknown)
[2m[36m(pid=14301)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14301)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14301)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14301)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14301)[0m *** SIGSEGV (@0x0) received by PID 14301 (TID 0x7fa6c10de700) from PID 0; stack trace: ***
[2m[36m(pid=14301)[0m     @     0x7fa6c0cb7390 (unknown)
[2m[36m(pid=14301)[0m     @     0x7f77c2e48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14301)[0m     @     0x7f77c013c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14294)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14294)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14294)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14294)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14294)[0m *** SIGSEGV (@0x0) received by PID 14294 (TID 0x7f610d14e700) from PID 0; stack trace: ***
[2m[36m(pid=14294)[0m     @     0x7f610cd27390 (unknown)
[2m[36m(pid=14294)[0m     @     0x7f320ee48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14294)[0m     @     0x7f320c13c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14283)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14283)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14283)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14283)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14283)[0m *** SIGSEGV (@0x0) received by PID 14283 (TID 0x7f41cd2dc700) from PID 0; stack trace: ***
[2m[36m(pid=14283)[0m     @     0x7f41cceb5390 (unknown)
[2m[36m(pid=14283)[0m     @     0x7f12cf0b6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14283)[0m     @     0x7f12cc3aa64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14238)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14238)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14238)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14238)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14238)[0m *** SIGSEGV (@0x0) received by PID 14238 (TID 0x7f445186b700) from PID 0; stack trace: ***
[2m[36m(pid=14238)[0m     @     0x7f4451444390 (unknown)
[2m[36m(pid=14262)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14262)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14262)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14262)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14262)[0m *** SIGSEGV (@0x0) received by PID 14262 (TID 0x7ff28c7f4700) from PID 0; stack trace: ***
[2m[36m(pid=14262)[0m     @     0x7ff28c3cd390 (unknown)
[2m[36m(pid=14262)[0m     @     0x7fc38e5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14262)[0m     @     0x7fc38b89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14268)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14268)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14268)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14268)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14268)[0m *** SIGSEGV (@0x0) received by PID 14268 (TID 0x7f143abd5700) from PID 0; stack trace: ***
[2m[36m(pid=14268)[0m     @     0x7f143a7ae390 (unknown)
[2m[36m(pid=14268)[0m     @     0x7ee53c9c5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14268)[0m     @     0x7ee539cb964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14268)[0m     @     0x7ee539cbc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14290)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14290)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14290)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14290)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14290)[0m *** SIGSEGV (@0x0) received by PID 14290 (TID 0x7fafea07b700) from PID 0; stack trace: ***
[2m[36m(pid=14290)[0m     @     0x7fafe9c54390 (unknown)
[2m[36m(pid=14290)[0m     @     0x7f80ebe88fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14290)[0m     @     0x7f80e917c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14286)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14286)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14286)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14286)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14286)[0m *** SIGSEGV (@0x0) received by PID 14286 (TID 0x7f2bb2d41700) from PID 0; stack trace: ***
[2m[36m(pid=14286)[0m     @     0x7f2bb291a390 (unknown)
[2m[36m(pid=14286)[0m     @     0x7efcb4a32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14286)[0m     @     0x7efcb1d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14286)[0m     @     0x7efcb1d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14178)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14178)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14178)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14178)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14178)[0m *** SIGSEGV (@0x0) received by PID 14178 (TID 0x7fd792586700) from PID 0; stack trace: ***
[2m[36m(pid=14182)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14182)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14182)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14182)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14182)[0m *** SIGSEGV (@0x0) received by PID 14182 (TID 0x7f2af68fb700) from PID 0; stack trace: ***
[2m[36m(pid=14182)[0m     @     0x7f2af64d4390 (unknown)
[2m[36m(pid=14280)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14280)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14280)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14280)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14280)[0m *** SIGSEGV (@0x0) received by PID 14280 (TID 0x7f72903b7700) from PID 0; stack trace: ***
[2m[36m(pid=14280)[0m     @     0x7f728ff90390 (unknown)
[2m[36m(pid=14280)[0m     @     0x7f4392082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14280)[0m     @     0x7f438f37664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14302)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14302)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14302)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14302)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14302)[0m *** SIGSEGV (@0x0) received by PID 14302 (TID 0x7f6a1693f700) from PID 0; stack trace: ***
[2m[36m(pid=14302)[0m     @     0x7f6a16518390 (unknown)
[2m[36m(pid=14302)[0m     @     0x7f3b185dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14302)[0m     @     0x7f3b158d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14296)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14296)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14296)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14296)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14296)[0m *** SIGSEGV (@0x0) received by PID 14296 (TID 0x7fc03c7e7700) from PID 0; stack trace: ***
[2m[36m(pid=14296)[0m     @     0x7fc03c3c0390 (unknown)
[2m[36m(pid=14289)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14289)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14289)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14289)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14289)[0m *** SIGSEGV (@0x0) received by PID 14289 (TID 0x7f8e0e87f700) from PID 0; stack trace: ***
[2m[36m(pid=14289)[0m     @     0x7f8e0e458390 (unknown)
[2m[36m(pid=14289)[0m     @     0x7f5f105dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14289)[0m     @     0x7f5f0d8d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14289)[0m     @     0x7f5f0d8d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14195)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14195)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14195)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14195)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14195)[0m *** SIGSEGV (@0x0) received by PID 14195 (TID 0x7f41f0716700) from PID 0; stack trace: ***
[2m[36m(pid=14244)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14244)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14244)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14244)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14244)[0m *** SIGSEGV (@0x0) received by PID 14244 (TID 0x7f075b202700) from PID 0; stack trace: ***
[2m[36m(pid=14244)[0m     @     0x7f075addb390 (unknown)
[2m[36m(pid=14244)[0m     @     0x7ed85cfd5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14244)[0m     @     0x7ed85a2c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14244)[0m     @     0x7ed85a2cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14265)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14265)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14265)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14265)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14265)[0m *** SIGSEGV (@0x0) received by PID 14265 (TID 0x7f8f1b4cc700) from PID 0; stack trace: ***
[2m[36m(pid=14265)[0m     @     0x7f8f1b0a5390 (unknown)
[2m[36m(pid=14265)[0m     @     0x7f601d2c9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14265)[0m     @     0x7f601a5bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14179)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14179)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14179)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14179)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14179)[0m *** SIGSEGV (@0x0) received by PID 14179 (TID 0x7fea7cdd2700) from PID 0; stack trace: ***
[2m[36m(pid=14179)[0m     @     0x7fea7c9ab390 (unknown)
[2m[36m(pid=14179)[0m     @     0x7fbb7e9b5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14179)[0m     @     0x7fbb7bca964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14274)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14274)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14274)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14274)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14274)[0m *** SIGSEGV (@0x0) received by PID 14274 (TID 0x7f878b073700) from PID 0; stack trace: ***
[2m[36m(pid=14274)[0m     @     0x7f878ac4c390 (unknown)
[2m[36m(pid=14274)[0m     @     0x7f588cc8afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14237)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14237)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14237)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14237)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14237)[0m *** SIGSEGV (@0x0) received by PID 14237 (TID 0x7f395fb00700) from PID 0; stack trace: ***
[2m[36m(pid=14237)[0m     @     0x7f395f6d9390 (unknown)
[2m[36m(pid=14237)[0m     @     0x7f0a61866fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14277)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14277)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14277)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14277)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14277)[0m *** SIGSEGV (@0x0) received by PID 14277 (TID 0x7f88098bf700) from PID 0; stack trace: ***
[2m[36m(pid=14277)[0m     @     0x7f8809498390 (unknown)
[2m[36m(pid=14277)[0m     @     0x7f590b643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14196)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14196)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14196)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14196)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14196)[0m *** SIGSEGV (@0x0) received by PID 14196 (TID 0x7f6c7fffe700) from PID 0; stack trace: ***
[2m[36m(pid=14196)[0m     @     0x7f6c7fbd7390 (unknown)
[2m[36m(pid=14214)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14214)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14214)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14214)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14214)[0m *** SIGSEGV (@0x0) received by PID 14214 (TID 0x7f22ae047700) from PID 0; stack trace: ***
[2m[36m(pid=14214)[0m     @     0x7f22adc20390 (unknown)
[2m[36m(pid=14256)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14256)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14256)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14256)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14256)[0m *** SIGSEGV (@0x0) received by PID 14256 (TID 0x7f4101bf8700) from PID 0; stack trace: ***
[2m[36m(pid=14256)[0m     @     0x7f41017d1390 (unknown)
[2m[36m(pid=14256)[0m     @     0x7f120396bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14256)[0m     @     0x7f1200c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14252)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14252)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14252)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14252)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14252)[0m *** SIGSEGV (@0x0) received by PID 14252 (TID 0x7f0d68f04700) from PID 0; stack trace: ***
[2m[36m(pid=14252)[0m     @     0x7f0d68add390 (unknown)
[2m[36m(pid=14252)[0m     @     0x7ede6ac5ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14252)[0m     @     0x7ede67f5364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14260)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14260)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14260)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14260)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14260)[0m *** SIGSEGV (@0x0) received by PID 14260 (TID 0x7fa3bb897700) from PID 0; stack trace: ***
[2m[36m(pid=14260)[0m     @     0x7fa3bb470390 (unknown)
[2m[36m(pid=14260)[0m     @     0x7f74bd4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14260)[0m     @     0x7f74ba79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14254)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14254)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14254)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14254)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14254)[0m *** SIGSEGV (@0x0) received by PID 14254 (TID 0x7f658373f700) from PID 0; stack trace: ***
[2m[36m(pid=14254)[0m     @     0x7f6583318390 (unknown)
[2m[36m(pid=14282)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14282)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14282)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14282)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14282)[0m *** SIGSEGV (@0x0) received by PID 14282 (TID 0x7f30a8b18700) from PID 0; stack trace: ***
[2m[36m(pid=14282)[0m     @     0x7f30a86f1390 (unknown)
[2m[36m(pid=14282)[0m     @     0x7f01aa86bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14282)[0m     @     0x7f01a7b5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14282)[0m     @     0x7f01a7b62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14211)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14211)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14211)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14211)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14211)[0m *** SIGSEGV (@0x0) received by PID 14211 (TID 0x7fbad3227700) from PID 0; stack trace: ***
[2m[36m(pid=14211)[0m     @     0x7fbad2e00390 (unknown)
[2m[36m(pid=14259)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14259)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14259)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14259)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14259)[0m *** SIGSEGV (@0x0) received by PID 14259 (TID 0x7fc08973b700) from PID 0; stack trace: ***
[2m[36m(pid=14259)[0m     @     0x7fc089314390 (unknown)
[2m[36m(pid=14259)[0m     @     0x7f918b501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14209)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14209)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14209)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14209)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14209)[0m *** SIGSEGV (@0x0) received by PID 14209 (TID 0x7ff15b441700) from PID 0; stack trace: ***
[2m[36m(pid=14209)[0m     @     0x7ff15b01a390 (unknown)
[2m[36m(pid=14209)[0m     @     0x7fc25d226fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14209)[0m     @     0x7fc25a51a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14183)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14183)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14183)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14183)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14183)[0m *** SIGSEGV (@0x0) received by PID 14183 (TID 0x7f9be5dbc700) from PID 0; stack trace: ***
[2m[36m(pid=14183)[0m     @     0x7f9be5995390 (unknown)
[2m[36m(pid=14183)[0m     @     0x7f6ce7a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14183)[0m     @     0x7f6ce4d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14234)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14234)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14234)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14234)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14234)[0m *** SIGSEGV (@0x0) received by PID 14234 (TID 0x7ff3a9735700) from PID 0; stack trace: ***
[2m[36m(pid=14234)[0m     @     0x7ff3a930e390 (unknown)
[2m[36m(pid=14234)[0m     @     0x7fc4ab501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14234)[0m     @     0x7fc4a87f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14203)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14203)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14203)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14203)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14203)[0m *** SIGSEGV (@0x0) received by PID 14203 (TID 0x7fa697243700) from PID 0; stack trace: ***
[2m[36m(pid=14203)[0m     @     0x7fa696e1c390 (unknown)
[2m[36m(pid=14203)[0m     @     0x7f779903afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14181)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14181)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14181)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14181)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14181)[0m *** SIGSEGV (@0x0) received by PID 14181 (TID 0x7f40b320b700) from PID 0; stack trace: ***
[2m[36m(pid=14181)[0m     @     0x7f40b2de4390 (unknown)
[2m[36m(pid=14181)[0m     @     0x7f11b4ffafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14181)[0m     @     0x7f11b22ee64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14267)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14267)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14267)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14267)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14267)[0m *** SIGSEGV (@0x0) received by PID 14267 (TID 0x7fadcadee700) from PID 0; stack trace: ***
[2m[36m(pid=14267)[0m     @     0x7fadca9c7390 (unknown)
[2m[36m(pid=14267)[0m     @     0x7f7ecc981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14267)[0m     @     0x7f7ec9c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14300)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14300)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14300)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14300)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14300)[0m *** SIGSEGV (@0x0) received by PID 14300 (TID 0x7f53e7684700) from PID 0; stack trace: ***
[2m[36m(pid=14300)[0m     @     0x7f53e725d390 (unknown)
[2m[36m(pid=14300)[0m     @     0x7f24e939bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14300)[0m     @     0x7f24e668f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14303)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14303)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14303)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14303)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14303)[0m *** SIGSEGV (@0x0) received by PID 14303 (TID 0x7f5234fb4700) from PID 0; stack trace: ***
[2m[36m(pid=14303)[0m     @     0x7f5234b8d390 (unknown)
[2m[36m(pid=14303)[0m     @     0x7f2336a9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14303)[0m     @     0x7f2333d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14303)[0m     @     0x7f2333d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14191)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14191)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14191)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14191)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14191)[0m *** SIGSEGV (@0x0) received by PID 14191 (TID 0x7f9189c6a700) from PID 0; stack trace: ***
[2m[36m(pid=14191)[0m     @     0x7f9189843390 (unknown)
[2m[36m(pid=14191)[0m     @     0x7f628b96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14191)[0m     @     0x7f6288c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14292)[0m     @     0x7fcf58b4a390 (unknown)
[2m[36m(pid=14292)[0m     @     0x7fa05acadfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14292)[0m     @     0x7fa057fa164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14255)[0m     @     0x7efea1392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14255)[0m     @     0x7efea1392b53 at::TensorIterator::for_each()
[2m[36m(pid=14299)[0m     @     0x7ef214f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14288)[0m     @     0x7f66eb58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14261)[0m     @     0x7eff9c59fb53 at::TensorIterator::for_each()
[2m[36m(pid=14258)[0m     @     0x7f511ba6a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14275)[0m     @     0x7fc11a12dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14275)[0m     @     0x7fc11742164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14275)[0m     @     0x7fc117424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14301)[0m     @     0x7f77c013f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14301)[0m     @     0x7f77c013fb53 at::TensorIterator::for_each()
[2m[36m(pid=14294)[0m     @     0x7f320c13f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14283)[0m     @     0x7f12cc3ad977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14283)[0m     @     0x7f12cc3adb53 at::TensorIterator::for_each()
[2m[36m(pid=14238)[0m     @     0x7f1553661fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14238)[0m     @     0x7f155095564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14238)[0m     @     0x7f1550958977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14262)[0m     @     0x7fc38b8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14262)[0m     @     0x7fc38b8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=14268)[0m     @     0x7ee539cbcb53 at::TensorIterator::for_each()
[2m[36m(pid=14268)[0m     @     0x7ee539cbce11 at::TensorIterator::for_each()
[2m[36m(pid=14268)[0m     @     0x7ee53c9d5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14290)[0m     @     0x7f80e917f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14286)[0m     @     0x7efcb1d29b53 at::TensorIterator::for_each()
[2m[36m(pid=14286)[0m     @     0x7efcb1d29e11 at::TensorIterator::for_each()
[2m[36m(pid=14286)[0m     @     0x7efcb4a42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14286)[0m     @     0x7efcb4a65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14178)[0m     @     0x7fd79215f390 (unknown)
[2m[36m(pid=14178)[0m     @     0x7fa894000fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14178)[0m     @     0x7fa8912f464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14182)[0m     @     0x7efbf85dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14182)[0m     @     0x7efbf58d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14182)[0m     @     0x7efbf58d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14280)[0m     @     0x7f438f379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14280)[0m     @     0x7f438f379b53 at::TensorIterator::for_each()
[2m[36m(pid=14280)[0m     @     0x7f438f379e11 at::TensorIterator::for_each()
[2m[36m(pid=14302)[0m     @     0x7f3b158d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14296)[0m     @     0x7f913e555fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14296)[0m     @     0x7f913b84964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14296)[0m     @     0x7f913b84c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14289)[0m     @     0x7f5f0d8d3b53 at::TensorIterator::for_each()
[2m[36m(pid=14289)[0m     @     0x7f5f0d8d3e11 at::TensorIterator::for_each()
[2m[36m(pid=14289)[0m     @     0x7f5f105ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14195)[0m     @     0x7f41f02ef390 (unknown)
[2m[36m(pid=14195)[0m     @     0x7f12f21a6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14195)[0m     @     0x7f12ef49a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14244)[0m     @     0x7ed85a2ccb53 at::TensorIterator::for_each()
[2m[36m(pid=14244)[0m     @     0x7ed85a2cce11 at::TensorIterator::for_each()
[2m[36m(pid=14244)[0m     @     0x7ed85cfe5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14244)[0m     @     0x7ed85d008cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14265)[0m     @     0x7f601a5c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14265)[0m     @     0x7f601a5c0b53 at::TensorIterator::for_each()
[2m[36m(pid=14179)[0m     @     0x7fbb7bcac977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14179)[0m     @     0x7fbb7bcacb53 at::TensorIterator::for_each()
[2m[36m(pid=14179)[0m     @     0x7fbb7bcace11 at::TensorIterator::for_each()
[2m[36m(pid=14274)[0m     @     0x7f5889f7e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14274)[0m     @     0x7f5889f81977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14237)[0m     @     0x7f0a5eb5a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14237)[0m     @     0x7f0a5eb5d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14277)[0m     @     0x7f590893764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14277)[0m     @     0x7f590893a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14277)[0m     @     0x7f590893ab53 at::TensorIterator::for_each()
[2m[36m(pid=14196)[0m     @     0x7f3d81d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14196)[0m     @     0x7f3d7f06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14196)[0m     @     0x7f3d7f063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14214)[0m     @     0x7ef3afe16fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14214)[0m     @     0x7ef3ad10a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14214)[0m     @     0x7ef3ad10d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14256)[0m     @     0x7f1200c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14256)[0m     @     0x7f1200c62b53 at::TensorIterator::for_each()
[2m[36m(pid=14252)[0m     @     0x7ede67f56977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14260)[0m     @     0x7f74ba797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14260)[0m     @     0x7f74ba797b53 at::TensorIterator::for_each()
[2m[36m(pid=14254)[0m     @     0x7f3685530fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14254)[0m     @     0x7f368282464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14254)[0m     @     0x7f3682827977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14282)[0m     @     0x7f01a7b62b53 at::TensorIterator::for_each()
[2m[36m(pid=14282)[0m     @     0x7f01a7b62e11 at::TensorIterator::for_each()
[2m[36m(pid=14282)[0m     @     0x7f01aa87bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14211)[0m     @     0x7f8bd4dc3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14211)[0m     @     0x7f8bd20b764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14211)[0m     @     0x7f8bd20ba977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14259)[0m     @     0x7f91887f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14259)[0m     @     0x7f91887f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14209)[0m     @     0x7fc25a51d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14209)[0m     @     0x7fc25a51db53 at::TensorIterator::for_each()
[2m[36m(pid=14183)[0m     @     0x7f6ce4d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14183)[0m     @     0x7f6ce4d67b53 at::TensorIterator::for_each()
[2m[36m(pid=14234)[0m     @     0x7fc4a87f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14234)[0m     @     0x7fc4a87f8b53 at::TensorIterator::for_each()
[2m[36m(pid=14203)[0m     @     0x7f779632e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14203)[0m     @     0x7f7796331977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14181)[0m     @     0x7f11b22f1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14267)[0m     @     0x7f7ec9c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14267)[0m     @     0x7f7ec9c78b53 at::TensorIterator::for_each()
[2m[36m(pid=14267)[0m     @     0x7f7ec9c78e11 at::TensorIterator::for_each()
[2m[36m(pid=14300)[0m     @     0x7f24e6692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14300)[0m     @     0x7f24e6692b53 at::TensorIterator::for_each()
[2m[36m(pid=14303)[0m     @     0x7f2333d93b53 at::TensorIterator::for_each()
[2m[36m(pid=14303)[0m     @     0x7f2333d93e11 at::TensorIterator::for_each()
[2m[36m(pid=14303)[0m     @     0x7f2336aacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14191)[0m     @     0x7f6288c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14191)[0m     @     0x7f6288c62b53 at::TensorIterator::for_each()
[2m[36m(pid=14241)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14241)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14241)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14292)[0m     @     0x7fa057fa4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14249)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14249)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14249)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14247)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14247)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14255)[0m     @     0x7efea1392e11 at::TensorIterator::for_each()
[2m[36m(pid=14255)[0m     @     0x7efea40abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14255)[0m     @     0x7efea40cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14299)[0m     @     0x7ef214f78b53 at::TensorIterator::for_each()
[2m[36m(pid=14288)[0m     @     0x7f66eb58ab53 at::TensorIterator::for_each()
[2m[36m(pid=14288)[0m     @     0x7f66eb58ae11 at::TensorIterator::for_each()
[2m[36m(pid=14288)[0m     @     0x7f66ee2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14288)[0m     @     0x7f66ee2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14184)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14184)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14184)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14261)[0m     @     0x7eff9c59fe11 at::TensorIterator::for_each()
[2m[36m(pid=14261)[0m     @     0x7eff9f2b8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14261)[0m     @     0x7eff9f2dbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14261)[0m     @     0x7eff9c319009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14261)[0m     @     0x7eff9c317c3f at::native::copy_impl()
[2m[36m(pid=14258)[0m     @     0x7f511ba6ab53 at::TensorIterator::for_each()
[2m[36m(pid=14258)[0m     @     0x7f511ba6ae11 at::TensorIterator::for_each()
[2m[36m(pid=14258)[0m     @     0x7f511e783c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14258)[0m     @     0x7f511e7a6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14275)[0m     @     0x7fc117424b53 at::TensorIterator::for_each()
[2m[36m(pid=14275)[0m     @     0x7fc117424e11 at::TensorIterator::for_each()
[2m[36m(pid=14301)[0m     @     0x7f77c013fe11 at::TensorIterator::for_each()
[2m[36m(pid=14301)[0m     @     0x7f77c2e58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14301)[0m     @     0x7f77c2e7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14294)[0m     @     0x7f320c13fb53 at::TensorIterator::for_each()
[2m[36m(pid=14283)[0m     @     0x7f12cc3ade11 at::TensorIterator::for_each()
[2m[36m(pid=14283)[0m     @     0x7f12cf0c6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14283)[0m     @     0x7f12cf0e9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14238)[0m     @     0x7f1550958b53 at::TensorIterator::for_each()
[2m[36m(pid=14262)[0m     @     0x7fc38b8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=14268)[0m     @     0x7ee53c9f8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14268)[0m     @     0x7ee539a36009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14268)[0m     @     0x7ee539a34c3f at::native::copy_impl()
[2m[36m(pid=14290)[0m     @     0x7f80e917fb53 at::TensorIterator::for_each()
[2m[36m(pid=14286)[0m     @     0x7efcb1aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14286)[0m     @     0x7efcb1aa1c3f at::native::copy_impl()
[2m[36m(pid=14200)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14200)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14200)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14239)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14239)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14239)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14193)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14193)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14193)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14253)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14253)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14253)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14178)[0m     @     0x7fa8912f7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14177)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14177)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14177)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14182)[0m     @     0x7efbf58d3b53 at::TensorIterator::for_each()
[2m[36m(pid=14182)[0m     @     0x7efbf58d3e11 at::TensorIterator::for_each()
[2m[36m(pid=14280)[0m     @     0x7f4392092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14280)[0m     @     0x7f43920b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14302)[0m     @     0x7f3b158d3b53 at::TensorIterator::for_each()
[2m[36m(pid=14302)[0m     @     0x7f3b158d3e11 at::TensorIterator::for_each()
[2m[36m(pid=14296)[0m     @     0x7f913b84cb53 at::TensorIterator::for_each()
[2m[36m(pid=14289)[0m     @     0x7f5f1060fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14289)[0m     @     0x7f5f0d64d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14289)[0m     @     0x7f5f0d64bc3f at::native::copy_impl()
[2m[36m(pid=14195)[0m     @     0x7f12ef49d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14195)[0m     @     0x7f12ef49db53 at::TensorIterator::for_each()
[2m[36m(pid=14244)[0m     @     0x7ed85a046009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14244)[0m     @     0x7ed85a044c3f at::native::copy_impl()
[2m[36m(pid=14265)[0m     @     0x7f601a5c0e11 at::TensorIterator::for_each()
[2m[36m(pid=14265)[0m     @     0x7f601d2d9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14265)[0m     @     0x7f601d2fccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14179)[0m     @     0x7fbb7e9c5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14179)[0m     @     0x7fbb7e9e8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14274)[0m     @     0x7f5889f81b53 at::TensorIterator::for_each()
[2m[36m(pid=14274)[0m     @     0x7f5889f81e11 at::TensorIterator::for_each()
[2m[36m(pid=14237)[0m     @     0x7f0a5eb5db53 at::TensorIterator::for_each()
[2m[36m(pid=14237)[0m     @     0x7f0a5eb5de11 at::TensorIterator::for_each()
[2m[36m(pid=14277)[0m     @     0x7f590893ae11 at::TensorIterator::for_each()
[2m[36m(pid=14277)[0m     @     0x7f590b653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14277)[0m     @     0x7f590b676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14196)[0m     @     0x7f3d7f063b53 at::TensorIterator::for_each()
[2m[36m(pid=14196)[0m     @     0x7f3d7f063e11 at::TensorIterator::for_each()
[2m[36m(pid=14180)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14180)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14180)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14180)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14180)[0m *** SIGSEGV (@0x0) received by PID 14180 (TID 0x7f13c7764700) from PID 0; stack trace: ***
[2m[36m(pid=14233)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14233)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14233)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14233)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14233)[0m *** SIGSEGV (@0x0) received by PID 14233 (TID 0x7f3744dfe700) from PID 0; stack trace: ***
[2m[36m(pid=14214)[0m     @     0x7ef3ad10db53 at::TensorIterator::for_each()
[2m[36m(pid=14214)[0m     @     0x7ef3ad10de11 at::TensorIterator::for_each()
[2m[36m(pid=14214)[0m     @     0x7ef3afe26c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14256)[0m     @     0x7f1200c62e11 at::TensorIterator::for_each()
[2m[36m(pid=14256)[0m     @     0x7f120397bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14256)[0m     @     0x7f120399ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14252)[0m     @     0x7ede67f56b53 at::TensorIterator::for_each()
[2m[36m(pid=14260)[0m     @     0x7f74ba797e11 at::TensorIterator::for_each()
[2m[36m(pid=14260)[0m     @     0x7f74bd4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14260)[0m     @     0x7f74bd4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14254)[0m     @     0x7f3682827b53 at::TensorIterator::for_each()
[2m[36m(pid=14254)[0m     @     0x7f3682827e11 at::TensorIterator::for_each()
[2m[36m(pid=14254)[0m     @     0x7f3685540c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14282)[0m     @     0x7f01aa89ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14282)[0m     @     0x7f01a78dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14282)[0m     @     0x7f01a78dac3f at::native::copy_impl()
[2m[36m(pid=14211)[0m     @     0x7f8bd20bab53 at::TensorIterator::for_each()
[2m[36m(pid=14259)[0m     @     0x7f91887f8b53 at::TensorIterator::for_each()
[2m[36m(pid=14209)[0m     @     0x7fc25a51de11 at::TensorIterator::for_each()
[2m[36m(pid=14209)[0m     @     0x7fc25d236c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14209)[0m     @     0x7fc25d259cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14209)[0m     @     0x7fc25a297009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14209)[0m     @     0x7fc25a295c3f at::native::copy_impl()
[2m[36m(pid=14183)[0m     @     0x7f6ce4d67e11 at::TensorIterator::for_each()
[2m[36m(pid=14183)[0m     @     0x7f6ce7a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14183)[0m     @     0x7f6ce7aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14234)[0m     @     0x7fc4a87f8e11 at::TensorIterator::for_each()
[2m[36m(pid=14234)[0m     @     0x7fc4ab511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14234)[0m     @     0x7fc4ab534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14234)[0m     @     0x7fc4a8572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14234)[0m     @     0x7fc4a8570c3f at::native::copy_impl()
[2m[36m(pid=14203)[0m     @     0x7f7796331b53 at::TensorIterator::for_each()
[2m[36m(pid=14203)[0m     @     0x7f7796331e11 at::TensorIterator::for_each()
[2m[36m(pid=14203)[0m     @     0x7f779904ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14181)[0m     @     0x7f11b22f1b53 at::TensorIterator::for_each()
[2m[36m(pid=14181)[0m     @     0x7f11b22f1e11 at::TensorIterator::for_each()
[2m[36m(pid=14181)[0m     @     0x7f11b500ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14267)[0m     @     0x7f7ecc991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14267)[0m     @     0x7f7ecc9b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14267)[0m     @     0x7f7ec99f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14267)[0m     @     0x7f7ec99f0c3f at::native::copy_impl()
[2m[36m(pid=14300)[0m     @     0x7f24e6692e11 at::TensorIterator::for_each()
[2m[36m(pid=14300)[0m     @     0x7f24e93abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14300)[0m     @     0x7f24e93cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14303)[0m     @     0x7f2336acfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14303)[0m     @     0x7f2333b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14303)[0m     @     0x7f2333b0bc3f at::native::copy_impl()
[2m[36m(pid=14303)[0m     @     0x7f2333b0ced4 at::native::copy_()
[2m[36m(pid=14191)[0m     @     0x7f6288c62e11 at::TensorIterator::for_each()
[2m[36m(pid=14191)[0m     @     0x7f628b97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14191)[0m     @     0x7f628b99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14191)[0m     @     0x7f62889dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14191)[0m     @     0x7f62889dac3f at::native::copy_impl()
[2m[36m(pid=14217)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14217)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14217)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14217)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14217)[0m *** SIGSEGV (@0x0) received by PID 14217 (TID 0x7fc190617700) from PID 0; stack trace: ***
[2m[36m(pid=14217)[0m     @     0x7fc1901f0390 (unknown)
[2m[36m(pid=14269)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14269)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14269)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14269)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14269)[0m *** SIGSEGV (@0x0) received by PID 14269 (TID 0x7f7bc39cd700) from PID 0; stack trace: ***
[2m[36m(pid=14269)[0m     @     0x7f7bc35a6390 (unknown)
[2m[36m(pid=14205)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14205)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14205)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14205)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14205)[0m *** SIGSEGV (@0x0) received by PID 14205 (TID 0x7ff048544700) from PID 0; stack trace: ***
[2m[36m(pid=14205)[0m     @     0x7ff04811d390 (unknown)
[2m[36m(pid=14186)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14186)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14186)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14186)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14186)[0m *** SIGSEGV (@0x0) received by PID 14186 (TID 0x7fdda63f9700) from PID 0; stack trace: ***
[2m[36m(pid=14186)[0m     @     0x7fdda5fd2390 (unknown)
[2m[36m(pid=14186)[0m     @     0x7faea809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14186)[0m     @     0x7faea538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14308)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14308)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14308)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14308)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14308)[0m *** SIGSEGV (@0x0) received by PID 14308 (TID 0x7f85666a7700) from PID 0; stack trace: ***
[2m[36m(pid=14308)[0m     @     0x7f8566280390 (unknown)
[2m[36m(pid=14308)[0m     @     0x7f56683b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14192)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14192)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14192)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14192)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14192)[0m *** SIGSEGV (@0x0) received by PID 14192 (TID 0x7f4d30b8b700) from PID 0; stack trace: ***
[2m[36m(pid=14192)[0m     @     0x7f4d30764390 (unknown)
[2m[36m(pid=14276)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14276)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14276)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14276)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14276)[0m *** SIGSEGV (@0x0) received by PID 14276 (TID 0x7fc950125700) from PID 0; stack trace: ***
[2m[36m(pid=14276)[0m     @     0x7fc94fcfe390 (unknown)
[2m[36m(pid=14276)[0m     @     0x7f9a51e6efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14276)[0m     @     0x7f9a4f16264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14245)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14245)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14245)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14278)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14278)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14185)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14185)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14185)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14185)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14185)[0m *** SIGSEGV (@0x0) received by PID 14185 (TID 0x7ff641b9a700) from PID 0; stack trace: ***
[2m[36m(pid=14185)[0m     @     0x7ff641773390 (unknown)
[2m[36m(pid=14185)[0m     @     0x7fc74396bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14188)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14188)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14188)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14188)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14188)[0m *** SIGSEGV (@0x0) received by PID 14188 (TID 0x7fc4db711700) from PID 0; stack trace: ***
[2m[36m(pid=14188)[0m     @     0x7fc4db2ea390 (unknown)
[2m[36m(pid=14241)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14241)[0m *** SIGSEGV (@0x0) received by PID 14241 (TID 0x7f9d1f615700) from PID 0; stack trace: ***
[2m[36m(pid=14241)[0m     @     0x7f9d1f1ee390 (unknown)
[2m[36m(pid=14241)[0m     @     0x7f6e2139bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14194)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14194)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14194)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14292)[0m     @     0x7fa057fa4b53 at::TensorIterator::for_each()
[2m[36m(pid=14292)[0m     @     0x7fa057fa4e11 at::TensorIterator::for_each()
[2m[36m(pid=14292)[0m     @     0x7fa05acbdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14204)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14204)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14204)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14197)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14197)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14197)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14197)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14197)[0m *** SIGSEGV (@0x0) received by PID 14197 (TID 0x7f8aa5024700) from PID 0; stack trace: ***
[2m[36m(pid=14197)[0m     @     0x7f8aa4bfd390 (unknown)
[2m[36m(pid=14263)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14263)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14263)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14249)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14249)[0m *** SIGSEGV (@0x0) received by PID 14249 (TID 0x7efc2e8c8700) from PID 0; stack trace: ***
[2m[36m(pid=14249)[0m     @     0x7efc2e4a1390 (unknown)
[2m[36m(pid=14249)[0m     @     0x7ecd305c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14243)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14243)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14243)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14243)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14243)[0m *** SIGSEGV (@0x0) received by PID 14243 (TID 0x7f438a212700) from PID 0; stack trace: ***
[2m[36m(pid=14243)[0m     @     0x7f4389deb390 (unknown)
[2m[36m(pid=14247)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14247)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14273)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14273)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14273)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14190)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14190)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14190)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14190)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14190)[0m *** SIGSEGV (@0x0) received by PID 14190 (TID 0x7fa8a9048700) from PID 0; stack trace: ***
[2m[36m(pid=14190)[0m     @     0x7fa8a8c21390 (unknown)
[2m[36m(pid=14255)[0m     @     0x7efea110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14255)[0m     @     0x7efea110ac3f at::native::copy_impl()
[2m[36m(pid=14255)[0m     @     0x7efea110bed4 at::native::copy_()
[2m[36m(pid=14255)[0m     @     0x7efea184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14299)[0m     @     0x7ef214f78e11 at::TensorIterator::for_each()
[2m[36m(pid=14299)[0m     @     0x7ef217c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14299)[0m     @     0x7ef217cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14299)[0m     @     0x7ef214cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14299)[0m     @     0x7ef214cf0c3f at::native::copy_impl()
[2m[36m(pid=14288)[0m     @     0x7f66eb304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14288)[0m     @     0x7f66eb302c3f at::native::copy_impl()
[2m[36m(pid=14288)[0m     @     0x7f66eb303ed4 at::native::copy_()
[2m[36m(pid=14184)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14184)[0m *** SIGSEGV (@0x0) received by PID 14184 (TID 0x7f12ec3e9700) from PID 0; stack trace: ***
[2m[36m(pid=14184)[0m     @     0x7f12ebfc2390 (unknown)
[2m[36m(pid=14184)[0m     @     0x7ee3ee067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14184)[0m     @     0x7ee3eb35b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14184)[0m     @     0x7ee3eb35e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14261)[0m     @     0x7eff9c318ed4 at::native::copy_()
[2m[36m(pid=14261)[0m     @     0x7eff9ca5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14261)[0m     @     0x7eff9cb63148 at::Tensor::copy_()
[2m[36m(pid=14258)[0m     @     0x7f511b7e4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14258)[0m     @     0x7f511b7e2c3f at::native::copy_impl()
[2m[36m(pid=14258)[0m     @     0x7f511b7e3ed4 at::native::copy_()
[2m[36m(pid=14275)[0m     @     0x7fc11a13dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14275)[0m     @     0x7fc11a160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14275)[0m     @     0x7fc11719e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14275)[0m     @     0x7fc11719cc3f at::native::copy_impl()
[2m[36m(pid=14301)[0m     @     0x7f77bfeb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14301)[0m     @     0x7f77bfeb7c3f at::native::copy_impl()
[2m[36m(pid=14301)[0m     @     0x7f77bfeb8ed4 at::native::copy_()
[2m[36m(pid=14301)[0m     @     0x7f77c05fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14294)[0m     @     0x7f320c13fe11 at::TensorIterator::for_each()
[2m[36m(pid=14294)[0m     @     0x7f320ee58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14294)[0m     @     0x7f320ee7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14294)[0m     @     0x7f320beb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14294)[0m     @     0x7f320beb7c3f at::native::copy_impl()
[2m[36m(pid=14283)[0m     @     0x7f12cc127009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14283)[0m     @     0x7f12cc125c3f at::native::copy_impl()
[2m[36m(pid=14283)[0m     @     0x7f12cc126ed4 at::native::copy_()
[2m[36m(pid=14283)[0m     @     0x7f12cc8695cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14238)[0m     @     0x7f1550958e11 at::TensorIterator::for_each()
[2m[36m(pid=14238)[0m     @     0x7f1553671c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14238)[0m     @     0x7f1553694cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14238)[0m     @     0x7f15506d2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14238)[0m     @     0x7f15506d0c3f at::native::copy_impl()
[2m[36m(pid=14262)[0m     @     0x7fc38e5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14262)[0m     @     0x7fc38e5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14262)[0m     @     0x7fc38b61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14262)[0m     @     0x7fc38b619c3f at::native::copy_impl()
[2m[36m(pid=14268)[0m     @     0x7ee539a35ed4 at::native::copy_()
[2m[36m(pid=14268)[0m     @     0x7ee53a1785cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14290)[0m     @     0x7f80e917fe11 at::TensorIterator::for_each()
[2m[36m(pid=14290)[0m     @     0x7f80ebe98c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14290)[0m     @     0x7f80ebebbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14290)[0m     @     0x7f80e8ef9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14290)[0m     @     0x7f80e8ef7c3f at::native::copy_impl()
[2m[36m(pid=14286)[0m     @     0x7efcb1aa2ed4 at::native::copy_()
[2m[36m(pid=14286)[0m     @     0x7efcb21e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14286)[0m     @     0x7efcb22ed148 at::Tensor::copy_()
[2m[36m(pid=14200)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14200)[0m *** SIGSEGV (@0x0) received by PID 14200 (TID 0x7fd876053700) from PID 0; stack trace: ***
[2m[36m(pid=14200)[0m     @     0x7fd875c2c390 (unknown)
[2m[36m(pid=14200)[0m     @     0x7fa977c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14200)[0m     @     0x7fa974f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14239)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14239)[0m *** SIGSEGV (@0x0) received by PID 14239 (TID 0x7f4896d9b700) from PID 0; stack trace: ***
[2m[36m(pid=14239)[0m     @     0x7f4896974390 (unknown)
[2m[36m(pid=14239)[0m     @     0x7f1998b96fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14239)[0m     @     0x7f1995e8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14210)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14210)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14210)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14210)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14210)[0m *** SIGSEGV (@0x0) received by PID 14210 (TID 0x7f9b4fa87700) from PID 0; stack trace: ***
[2m[36m(pid=14210)[0m     @     0x7f9b4f660390 (unknown)
[2m[36m(pid=14210)[0m     @     0x7f6c51869fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14210)[0m     @     0x7f6c4eb5d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14193)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14193)[0m *** SIGSEGV (@0x0) received by PID 14193 (TID 0x7f0db461a700) from PID 0; stack trace: ***
[2m[36m(pid=14193)[0m     @     0x7f0db41f3390 (unknown)
[2m[36m(pid=14193)[0m     @     0x7edeb6293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14193)[0m     @     0x7edeb358764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14193)[0m     @     0x7edeb358a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14253)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14253)[0m *** SIGSEGV (@0x0) received by PID 14253 (TID 0x7fe00c91c700) from PID 0; stack trace: ***
[2m[36m(pid=14253)[0m     @     0x7fe00c4f5390 (unknown)
[2m[36m(pid=14253)[0m     @     0x7fb10e5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14253)[0m     @     0x7fb10b89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14253)[0m     @     0x7fb10b8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14178)[0m     @     0x7fa8912f7b53 at::TensorIterator::for_each()
[2m[36m(pid=14178)[0m     @     0x7fa8912f7e11 at::TensorIterator::for_each()
[2m[36m(pid=14178)[0m     @     0x7fa894010c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14178)[0m     @     0x7fa894033cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14177)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14177)[0m *** SIGSEGV (@0x0) received by PID 14177 (TID 0x7f23d4296700) from PID 0; stack trace: ***
[2m[36m(pid=14177)[0m     @     0x7f23d3e6f390 (unknown)
[2m[36m(pid=14177)[0m     @     0x7ef4d6055fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14177)[0m     @     0x7ef4d334964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14177)[0m     @     0x7ef4d334c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14208)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14208)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14208)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14208)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14208)[0m *** SIGSEGV (@0x0) received by PID 14208 (TID 0x7fe035848700) from PID 0; stack trace: ***
[2m[36m(pid=14208)[0m     @     0x7fe035421390 (unknown)
[2m[36m(pid=14208)[0m     @     0x7fb137616fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14182)[0m     @     0x7efbf85ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14182)[0m     @     0x7efbf860fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14182)[0m     @     0x7efbf564d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14182)[0m     @     0x7efbf564bc3f at::native::copy_impl()
[2m[36m(pid=14182)[0m     @     0x7efbf564ced4 at::native::copy_()
[2m[36m(pid=14213)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14213)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14213)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14213)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14213)[0m *** SIGSEGV (@0x0) received by PID 14213 (TID 0x7f8931a2d700) from PID 0; stack trace: ***
[2m[36m(pid=14257)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=14257)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=14257)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14257)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14280)[0m     @     0x7f438f0f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14280)[0m     @     0x7f438f0f1c3f at::native::copy_impl()
[2m[36m(pid=14280)[0m     @     0x7f438f0f2ed4 at::native::copy_()
[2m[36m(pid=14280)[0m     @     0x7f438f8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14302)[0m     @     0x7f3b185ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14302)[0m     @     0x7f3b1860fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14302)[0m     @     0x7f3b1564d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14302)[0m     @     0x7f3b1564bc3f at::native::copy_impl()
[2m[36m(pid=14302)[0m     @     0x7f3b1564ced4 at::native::copy_()
[2m[36m(pid=14296)[0m     @     0x7f913b84ce11 at::TensorIterator::for_each()
[2m[36m(pid=14296)[0m     @     0x7f913e565c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14296)[0m     @     0x7f913e588cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14296)[0m     @     0x7f913b5c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14296)[0m     @     0x7f913b5c4c3f at::native::copy_impl()
[2m[36m(pid=14289)[0m     @     0x7f5f0d64ced4 at::native::copy_()
[2m[36m(pid=14289)[0m     @     0x7f5f0dd8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14195)[0m     @     0x7f12ef49de11 at::TensorIterator::for_each()
[2m[36m(pid=14195)[0m     @     0x7f12f21b6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14195)[0m     @     0x7f12f21d9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14195)[0m     @     0x7f12ef217009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14195)[0m     @     0x7f12ef215c3f at::native::copy_impl()
[2m[36m(pid=14244)[0m     @     0x7ed85a045ed4 at::native::copy_()
[2m[36m(pid=14244)[0m     @     0x7ed85a7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14244)[0m     @     0x7ed85a890148 at::Tensor::copy_()
[2m[36m(pid=14244)[0m     @     0x7ed85c487989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14265)[0m     @     0x7f601a33a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14265)[0m     @     0x7f601a338c3f at::native::copy_impl()
[2m[36m(pid=14265)[0m     @     0x7f601a339ed4 at::native::copy_()
[2m[36m(pid=14265)[0m     @     0x7f601aa7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14179)[0m     @     0x7fbb7ba26009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14179)[0m     @     0x7fbb7ba24c3f at::native::copy_impl()
[2m[36m(pid=14179)[0m     @     0x7fbb7ba25ed4 at::native::copy_()
[2m[36m(pid=14179)[0m     @     0x7fbb7c1685cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14179)[0m     @     0x7fbb7c270148 at::Tensor::copy_()
[2m[36m(pid=14274)[0m     @     0x7f588cc9ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14274)[0m     @     0x7f588ccbdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14274)[0m     @     0x7f5889cfb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14274)[0m     @     0x7f5889cf9c3f at::native::copy_impl()
[2m[36m(pid=14274)[0m     @     0x7f5889cfaed4 at::native::copy_()
[2m[36m(pid=14237)[0m     @     0x7f0a61876c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14237)[0m     @     0x7f0a61899cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14237)[0m     @     0x7f0a5e8d7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14237)[0m     @     0x7f0a5e8d5c3f at::native::copy_impl()
[2m[36m(pid=14237)[0m     @     0x7f0a5e8d6ed4 at::native::copy_()
[2m[36m(pid=14277)[0m     @     0x7f59086b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14277)[0m     @     0x7f59086b2c3f at::native::copy_impl()
[2m[36m(pid=14277)[0m     @     0x7f59086b3ed4 at::native::copy_()
[2m[36m(pid=14196)[0m     @     0x7f3d81d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14196)[0m     @     0x7f3d81d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14196)[0m     @     0x7f3d7eddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14196)[0m     @     0x7f3d7eddbc3f at::native::copy_impl()
[2m[36m(pid=14196)[0m     @     0x7f3d7eddced4 at::native::copy_()
[2m[36m(pid=14180)[0m     @     0x7f13c733d390 (unknown)
[2m[36m(pid=14180)[0m     @     0x7ee4c94a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14180)[0m     @     0x7ee4c679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14180)[0m     @     0x7ee4c6797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14233)[0m     @     0x7f37449d7390 (unknown)
[2m[36m(pid=14233)[0m     @     0x7f0846b88fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14233)[0m     @     0x7f0843e7c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14233)[0m     @     0x7f0843e7f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14233)[0m     @     0x7f0843e7fb53 at::TensorIterator::for_each()
[2m[36m(pid=14214)[0m     @     0x7ef3afe49cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14214)[0m     @     0x7ef3ace87009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14214)[0m     @     0x7ef3ace85c3f at::native::copy_impl()
[2m[36m(pid=14214)[0m     @     0x7ef3ace86ed4 at::native::copy_()
[2m[36m(pid=14256)[0m     @     0x7f12009dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14256)[0m     @     0x7f12009dac3f at::native::copy_impl()
[2m[36m(pid=14256)[0m     @     0x7f12009dbed4 at::native::copy_()
[2m[36m(pid=14256)[0m     @     0x7f120111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14252)[0m     @     0x7ede67f56e11 at::TensorIterator::for_each()
[2m[36m(pid=14252)[0m     @     0x7ede6ac6fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14252)[0m     @     0x7ede6ac92cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14252)[0m     @     0x7ede67cd0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14252)[0m     @     0x7ede67ccec3f at::native::copy_impl()
[2m[36m(pid=14260)[0m     @     0x7f74ba511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14260)[0m     @     0x7f74ba50fc3f at::native::copy_impl()
[2m[36m(pid=14260)[0m     @     0x7f74ba510ed4 at::native::copy_()
[2m[36m(pid=14260)[0m     @     0x7f74bac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14254)[0m     @     0x7f3685563cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14254)[0m     @     0x7f36825a1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14254)[0m     @     0x7f368259fc3f at::native::copy_impl()
[2m[36m(pid=14254)[0m     @     0x7f36825a0ed4 at::native::copy_()
[2m[36m(pid=14254)[0m     @     0x7f3682ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14282)[0m     @     0x7f01a78dbed4 at::native::copy_()
[2m[36m(pid=14282)[0m     @     0x7f01a801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14282)[0m     @     0x7f01a8126148 at::Tensor::copy_()
[2m[36m(pid=14211)[0m     @     0x7f8bd20bae11 at::TensorIterator::for_each()
[2m[36m(pid=14211)[0m     @     0x7f8bd4dd3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14211)[0m     @     0x7f8bd4df6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14211)[0m     @     0x7f8bd1e34009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14211)[0m     @     0x7f8bd1e32c3f at::native::copy_impl()
[2m[36m(pid=14259)[0m     @     0x7f91887f8e11 at::TensorIterator::for_each()
[2m[36m(pid=14259)[0m     @     0x7f918b511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14259)[0m     @     0x7f918b534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14259)[0m     @     0x7f9188572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14259)[0m     @     0x7f9188570c3f at::native::copy_impl()
[2m[36m(pid=14209)[0m     @     0x7fc25a296ed4 at::native::copy_()
[2m[36m(pid=14209)[0m     @     0x7fc25a9d95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14183)[0m     @     0x7f6ce4ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14183)[0m     @     0x7f6ce4adfc3f at::native::copy_impl()
[2m[36m(pid=14183)[0m     @     0x7f6ce4ae0ed4 at::native::copy_()
[2m[36m(pid=14234)[0m     @     0x7fc4a8571ed4 at::native::copy_()
[2m[36m(pid=14234)[0m     @     0x7fc4a8cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14203)[0m     @     0x7f779906dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14203)[0m     @     0x7f77960ab009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14203)[0m     @     0x7f77960a9c3f at::native::copy_impl()
[2m[36m(pid=14181)[0m     @     0x7f11b502dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14181)[0m     @     0x7f11b206b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14181)[0m     @     0x7f11b2069c3f at::native::copy_impl()
[2m[36m(pid=14181)[0m     @     0x7f11b206aed4 at::native::copy_()
[2m[36m(pid=14267)[0m     @     0x7f7ec99f1ed4 at::native::copy_()
[2m[36m(pid=14267)[0m     @     0x7f7eca1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14300)[0m     @     0x7f24e640c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14300)[0m     @     0x7f24e640ac3f at::native::copy_impl()
[2m[36m(pid=14300)[0m     @     0x7f24e640bed4 at::native::copy_()
[2m[36m(pid=14303)[0m     @     0x7f233424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14303)[0m     @     0x7f2334357148 at::Tensor::copy_()
[2m[36m(pid=14191)[0m     @     0x7f62889dbed4 at::native::copy_()
[2m[36m(pid=14191)[0m     @     0x7f628911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14191)[0m     @     0x7f6289226148 at::Tensor::copy_()
[2m[36m(pid=14217)[0m     @     0x7f9292293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14217)[0m     @     0x7f928f58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14217)[0m     @     0x7f928f58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14269)[0m     @     0x7f4cc56b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14269)[0m     @     0x7f4cc29a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14269)[0m     @     0x7f4cc29a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14205)[0m     @     0x7fc14a293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14205)[0m     @     0x7fc14758764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14205)[0m     @     0x7fc14758a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14186)[0m     @     0x7faea5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14186)[0m     @     0x7faea5392b53 at::TensorIterator::for_each()
[2m[36m(pid=14308)[0m     @     0x7f56656a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14308)[0m     @     0x7f56656a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14308)[0m     @     0x7f56656a8b53 at::TensorIterator::for_each()
[2m[36m(pid=14192)[0m     @     0x7f1e3277efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14192)[0m     @     0x7f1e2fa7264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14192)[0m     @     0x7f1e2fa75977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14276)[0m     @     0x7f9a4f165977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14276)[0m     @     0x7f9a4f165b53 at::TensorIterator::for_each()
[2m[36m(pid=14245)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14245)[0m *** SIGSEGV (@0x0) received by PID 14245 (TID 0x7f903ff1f700) from PID 0; stack trace: ***
[2m[36m(pid=14245)[0m     @     0x7f903faf8390 (unknown)
[2m[36m(pid=14245)[0m     @     0x7f6141cfffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14245)[0m     @     0x7f613eff364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14278)[0m *** Aborted at 1604574049 (unix time) try "date -d @1604574049" if you are using GNU date ***
[2m[36m(pid=14278)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14278)[0m *** SIGSEGV (@0x0) received by PID 14278 (TID 0x7f65d64ed700) from PID 0; stack trace: ***
[2m[36m(pid=14278)[0m     @     0x7f65d60c6390 (unknown)
[2m[36m(pid=14278)[0m     @     0x7f36d8000fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14278)[0m     @     0x7f36d52f464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14185)[0m     @     0x7fc740c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14185)[0m     @     0x7fc740c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14185)[0m     @     0x7fc740c62b53 at::TensorIterator::for_each()
[2m[36m(pid=14188)[0m     @     0x7f95dd39bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14188)[0m     @     0x7f95da68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14188)[0m     @     0x7f95da692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14188)[0m     @     0x7f95da692b53 at::TensorIterator::for_each()
[2m[36m(pid=14241)[0m     @     0x7f6e1e68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14241)[0m     @     0x7f6e1e692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14241)[0m     @     0x7f6e1e692b53 at::TensorIterator::for_each()
[2m[36m(pid=14194)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14194)[0m *** SIGSEGV (@0x0) received by PID 14194 (TID 0x7f74e551c700) from PID 0; stack trace: ***
[2m[36m(pid=14194)[0m     @     0x7f74e50f5390 (unknown)
[2m[36m(pid=14194)[0m     @     0x7f45e72fffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14292)[0m     @     0x7fa05ace0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14292)[0m     @     0x7fa057d1e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14292)[0m     @     0x7fa057d1cc3f at::native::copy_impl()
[2m[36m(pid=14292)[0m     @     0x7fa057d1ded4 at::native::copy_()
[2m[36m(pid=14204)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14204)[0m *** SIGSEGV (@0x0) received by PID 14204 (TID 0x7f52a1e48700) from PID 0; stack trace: ***
[2m[36m(pid=14204)[0m     @     0x7f52a1a21390 (unknown)
[2m[36m(pid=14204)[0m     @     0x7f23a3a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14204)[0m     @     0x7f23a0d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14204)[0m     @     0x7f23a0d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14197)[0m     @     0x7f5ba6db2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14197)[0m     @     0x7f5ba40a664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14197)[0m     @     0x7f5ba40a9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14197)[0m     @     0x7f5ba40a9b53 at::TensorIterator::for_each()
[2m[36m(pid=14263)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14263)[0m *** SIGSEGV (@0x0) received by PID 14263 (TID 0x7f758e41b700) from PID 0; stack trace: ***
[2m[36m(pid=14263)[0m     @     0x7f758dff4390 (unknown)
[2m[36m(pid=14263)[0m     @     0x7f469009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14263)[0m     @     0x7f468d38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14263)[0m     @     0x7f468d392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14249)[0m     @     0x7ecd2d8b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14249)[0m     @     0x7ecd2d8b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14249)[0m     @     0x7ecd2d8b9b53 at::TensorIterator::for_each()
[2m[36m(pid=14249)[0m     @     0x7ecd2d8b9e11 at::TensorIterator::for_each()
[2m[36m(pid=14243)[0m     @     0x7f148bfeefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14243)[0m     @     0x7f14892e264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14243)[0m     @     0x7f14892e5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14243)[0m     @     0x7f14892e5b53 at::TensorIterator::for_each()
[2m[36m(pid=14247)[0m *** SIGSEGV (@0x0) received by PID 14247 (TID 0x7f98ae54b700) from PID 0; stack trace: ***
[2m[36m(pid=14247)[0m     @     0x7f98ae124390 (unknown)
[2m[36m(pid=14247)[0m     @     0x7f69b0344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14247)[0m     @     0x7f69ad63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14273)[0m PC: @                0x0 (unknown)
[2m[36m(pid=14273)[0m *** SIGSEGV (@0x0) received by PID 14273 (TID 0x7f2aec7e4700) from PID 0; stack trace: ***
[2m[36m(pid=14273)[0m     @     0x7f2aec3bd390 (unknown)
[2m[36m(pid=14273)[0m     @     0x7efbee5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14273)[0m     @     0x7efbeb89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14190)[0m     @     0x7f79aae29fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14190)[0m     @     0x7f79a811d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14190)[0m     @     0x7f79a8120977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14190)[0m     @     0x7f79a8120b53 at::TensorIterator::for_each()
[2m[36m(pid=14255)[0m     @     0x7efea1956148 at::Tensor::copy_()
[2m[36m(pid=14255)[0m     @     0x7efea354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14255)[0m     @     0x7efea184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14299)[0m     @     0x7ef214cf1ed4 at::native::copy_()
[2m[36m(pid=14299)[0m     @     0x7ef2154345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14288)[0m     @     0x7f66eba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14288)[0m     @     0x7f66ebb4e148 at::Tensor::copy_()
[2m[36m(pid=14288)[0m     @     0x7f66ed745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14184)[0m     @     0x7ee3eb35eb53 at::TensorIterator::for_each()
[2m[36m(pid=14184)[0m     @     0x7ee3eb35ee11 at::TensorIterator::for_each()
[2m[36m(pid=14184)[0m     @     0x7ee3ee077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14261)[0m     @     0x7eff9e75a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14261)[0m     @     0x7eff9ca5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14261)[0m     @     0x7eff9cb63148 at::Tensor::copy_()
[2m[36m(pid=14258)[0m     @     0x7f511bf265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14258)[0m     @     0x7f511c02e148 at::Tensor::copy_()
[2m[36m(pid=14258)[0m     @     0x7f511dc25989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14275)[0m     @     0x7fc11719ded4 at::native::copy_()
[2m[36m(pid=14275)[0m     @     0x7fc1178e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14275)[0m     @     0x7fc1179e8148 at::Tensor::copy_()
[2m[36m(pid=14301)[0m     @     0x7f77c0703148 at::Tensor::copy_()
[2m[36m(pid=14301)[0m     @     0x7f77c22fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14294)[0m     @     0x7f320beb8ed4 at::native::copy_()
[2m[36m(pid=14294)[0m     @     0x7f320c5fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14294)[0m     @     0x7f320c703148 at::Tensor::copy_()
[2m[36m(pid=14283)[0m     @     0x7f12cc971148 at::Tensor::copy_()
[2m[36m(pid=14283)[0m     @     0x7f12ce568989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14283)[0m     @     0x7f12cc8695cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14238)[0m     @     0x7f15506d1ed4 at::native::copy_()
[2m[36m(pid=14238)[0m     @     0x7f1550e145cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14262)[0m     @     0x7fc38b61aed4 at::native::copy_()
[2m[36m(pid=14262)[0m     @     0x7fc38bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14262)[0m     @     0x7fc38be65148 at::Tensor::copy_()
[2m[36m(pid=14268)[0m     @     0x7ee53a280148 at::Tensor::copy_()
[2m[36m(pid=14268)[0m     @     0x7ee53be77989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14268)[0m     @     0x7ee53a1785cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14290)[0m     @     0x7f80e8ef8ed4 at::native::copy_()
[2m[36m(pid=14290)[0m     @     0x7f80e963b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14286)[0m     @     0x7efcb3ee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14286)[0m     @     0x7efcb21e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14200)[0m     @     0x7fa974f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14200)[0m     @     0x7fa974f78b53 at::TensorIterator::for_each()
[2m[36m(pid=14239)[0m     @     0x7f1995e8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14239)[0m     @     0x7f1995e8db53 at::TensorIterator::for_each()
[2m[36m(pid=14210)[0m     @     0x7f6c4eb60977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14210)[0m     @     0x7f6c4eb60b53 at::TensorIterator::for_each()
[2m[36m(pid=14193)[0m     @     0x7edeb358ab53 at::TensorIterator::for_each()
[2m[36m(pid=14193)[0m     @     0x7edeb358ae11 at::TensorIterator::for_each()
[2m[36m(pid=14253)[0m     @     0x7fb10b8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=14253)[0m     @     0x7fb10b8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=14253)[0m     @     0x7fb10e5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
2020-11-05 11:00:49,430	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=14178)[0m     @     0x7fa891071009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14178)[0m     @     0x7fa89106fc3f at::native::copy_impl()
[2m[36m(pid=14178)[0m     @     0x7fa891070ed4 at::native::copy_()
[2m[36m(pid=14177)[0m     @     0x7ef4d334cb53 at::TensorIterator::for_each()
[2m[36m(pid=14177)[0m     @     0x7ef4d334ce11 at::TensorIterator::for_each()
[2m[36m(pid=14177)[0m     @     0x7ef4d6065c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14208)[0m     @     0x7fb13490a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14208)[0m     @     0x7fb13490d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14182)[0m     @     0x7efbf5d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14182)[0m     @     0x7efbf5e97148 at::Tensor::copy_()
[2m[36m(pid=14182)[0m     @     0x7efbf7a8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14213)[0m     @     0x7f8931606390 (unknown)
[2m[36m(pid=14213)[0m     @     0x7f5a3381bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14213)[0m     @     0x7f5a30b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14257)[0m *** SIGSEGV (@0x0) received by PID 14257 (TID 0x7fb2f5f1f700) from PID 0; stack trace: ***
[2m[36m(pid=14257)[0m     @     0x7fb2f5af8390 (unknown)
[2m[36m(pid=14257)[0m     @     0x7f83f7c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=14257)[0m     @     0x7f83f4f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14280)[0m     @     0x7f438f93d148 at::Tensor::copy_()
[2m[36m(pid=14280)[0m     @     0x7f4391534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14280)[0m     @     0x7f438f8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14302)[0m     @     0x7f3b15d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14302)[0m     @     0x7f3b15e97148 at::Tensor::copy_()
[2m[36m(pid=14296)[0m     @     0x7f913b5c5ed4 at::native::copy_()
[2m[36m(pid=14296)[0m     @     0x7f913bd085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14296)[0m     @     0x7f913be10148 at::Tensor::copy_()
[2m[36m(pid=14289)[0m     @     0x7f5f0de97148 at::Tensor::copy_()
[2m[36m(pid=14289)[0m     @     0x7f5f0fa8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14289)[0m     @     0x7f5f0dd8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14289)[0m     @     0x7f5f0de97148 at::Tensor::copy_()
[2m[36m(pid=14289)[0m     @     0x7f5f1414dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14289)[0m     @     0x56353394afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14289)[0m     @     0x5635338a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14289)[0m     @     0x563533930baf _PyEval_EvalCodeWithName
[2m[36m(pid=14289)[0m     @     0x563533931a20 method_vectorcall
[2m[36m(pid=14289)[0m     @     0x5635338a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14289)[0m     @     0x563533930baf _PyEval_EvalCodeWithName
[2m[36m(pid=14289)[0m     @     0x563533931643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14289)[0m     @     0x5635338a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14289)[0m     @     0x563533930baf _PyEval_EvalCodeWithName
[2m[36m(pid=14289)[0m     @     0x563533931643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14195)[0m     @     0x7f12ef216ed4 at::native::copy_()
[2m[36m(pid=14195)[0m     @     0x7f12ef9595cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14195)[0m     @     0x7f12efa61148 at::Tensor::copy_()
[2m[36m(pid=14244)[0m     @     0x7ed85a7885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14244)[0m     @     0x7ed85a890148 at::Tensor::copy_()
[2m[36m(pid=14244)[0m     @     0x7ed860b46bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14244)[0m     @     0x5582a1701fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14244)[0m     @     0x5582a165cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14244)[0m     @     0x5582a16e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=14244)[0m     @     0x5582a16e8a20 method_vectorcall
[2m[36m(pid=14244)[0m     @     0x5582a165cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14244)[0m     @     0x5582a16e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=14244)[0m     @     0x5582a16e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14244)[0m     @     0x5582a165d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14244)[0m     @     0x5582a16e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=14244)[0m     @     0x5582a16e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14244)[0m     @     0x5582a165d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14244)[0m     @     0x5582a16e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=14244)[0m     @     0x5582a16e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14244)[0m     @     0x5582a165d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14244)[0m     @     0x5582a16e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=14265)[0m     @     0x7f601ab84148 at::Tensor::copy_()
[2m[36m(pid=14265)[0m     @     0x7f601c77b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14265)[0m     @     0x7f601aa7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14265)[0m     @     0x7f601ab84148 at::Tensor::copy_()
[2m[36m(pid=14179)[0m     @     0x7fbb7de67989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14179)[0m     @     0x7fbb7c1685cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14179)[0m     @     0x7fbb7c270148 at::Tensor::copy_()
[2m[36m(pid=14179)[0m     @     0x7fbb8231ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14179)[0m     @     0x55a68ca39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14179)[0m     @     0x55a68c994b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14179)[0m     @     0x55a68ca1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14179)[0m     @     0x55a68ca20a20 method_vectorcall
[2m[36m(pid=14179)[0m     @     0x55a68c994bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14179)[0m     @     0x55a68ca1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14179)[0m     @     0x55a68ca20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14179)[0m     @     0x55a68c995689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14179)[0m     @     0x55a68ca1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14179)[0m     @     0x55a68ca20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14179)[0m     @     0x55a68c995689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14179)[0m     @     0x55a68ca1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14179)[0m     @     0x55a68ca20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14179)[0m     @     0x55a68c995689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14179)[0m     @     0x55a68ca1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14274)[0m     @     0x7f588a43d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14274)[0m     @     0x7f588a545148 at::Tensor::copy_()
[2m[36m(pid=14274)[0m     @     0x7f588c13c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14274)[0m     @     0x7f588a43d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14237)[0m     @     0x7f0a5f0195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14237)[0m     @     0x7f0a5f121148 at::Tensor::copy_()
[2m[36m(pid=14237)[0m     @     0x7f0a60d18989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14237)[0m     @     0x7f0a5f0195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14277)[0m     @     0x7f5908df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14277)[0m     @     0x7f5908efe148 at::Tensor::copy_()
[2m[36m(pid=14277)[0m     @     0x7f590aaf5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14277)[0m     @     0x7f5908df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14196)[0m     @     0x7f3d7f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14196)[0m     @     0x7f3d7f627148 at::Tensor::copy_()
[2m[36m(pid=14196)[0m     @     0x7f3d8121e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14180)[0m     @     0x7ee4c6797b53 at::TensorIterator::for_each()
[2m[36m(pid=14180)[0m     @     0x7ee4c6797e11 at::TensorIterator::for_each()
[2m[36m(pid=14180)[0m     @     0x7ee4c94b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14180)[0m     @     0x7ee4c94d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14180)[0m     @     0x7ee4c6511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14180)[0m     @     0x7ee4c650fc3f at::native::copy_impl()
[2m[36m(pid=14233)[0m     @     0x7f0843e7fe11 at::TensorIterator::for_each()
[2m[36m(pid=14233)[0m     @     0x7f0846b98c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14233)[0m     @     0x7f0846bbbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14233)[0m     @     0x7f0843bf9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14233)[0m     @     0x7f0843bf7c3f at::native::copy_impl()
[2m[36m(pid=14214)[0m     @     0x7ef3ad5c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14214)[0m     @     0x7ef3ad6d1148 at::Tensor::copy_()
[2m[36m(pid=14214)[0m     @     0x7ef3af2c8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14214)[0m     @     0x7ef3ad5c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14256)[0m     @     0x7f1201226148 at::Tensor::copy_()
[2m[36m(pid=14256)[0m     @     0x7f1202e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14256)[0m     @     0x7f120111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14256)[0m     @     0x7f1201226148 at::Tensor::copy_()
[2m[36m(pid=14252)[0m     @     0x7ede67ccfed4 at::native::copy_()
[2m[36m(pid=14252)[0m     @     0x7ede684125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14252)[0m     @     0x7ede6851a148 at::Tensor::copy_()
[2m[36m(pid=14260)[0m     @     0x7f74bad5b148 at::Tensor::copy_()
[2m[36m(pid=14260)[0m     @     0x7f74bc952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14260)[0m     @     0x7f74bac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14254)[0m     @     0x7f3682deb148 at::Tensor::copy_()
[2m[36m(pid=14254)[0m     @     0x7f36849e2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14254)[0m     @     0x7f3682ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14282)[0m     @     0x7f01a9d1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14282)[0m     @     0x7f01a801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14282)[0m     @     0x7f01a8126148 at::Tensor::copy_()
[2m[36m(pid=14282)[0m     @     0x7f01ae3dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14282)[0m     @     0x55fd49ff0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14282)[0m     @     0x55fd49f4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14282)[0m     @     0x55fd49fd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14282)[0m     @     0x55fd49fd7a20 method_vectorcall
[2m[36m(pid=14282)[0m     @     0x55fd49f4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14282)[0m     @     0x55fd49fd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14282)[0m     @     0x55fd49fd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14282)[0m     @     0x55fd49f4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14282)[0m     @     0x55fd49fd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14282)[0m     @     0x55fd49fd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14282)[0m     @     0x55fd49f4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14282)[0m     @     0x55fd49fd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14282)[0m     @     0x55fd49fd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14282)[0m     @     0x55fd49f4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14282)[0m     @     0x55fd49fd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14211)[0m     @     0x7f8bd1e33ed4 at::native::copy_()
[2m[36m(pid=14211)[0m     @     0x7f8bd25765cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14211)[0m     @     0x7f8bd267e148 at::Tensor::copy_()
[2m[36m(pid=14211)[0m     @     0x7f8bd4275989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14259)[0m     @     0x7f9188571ed4 at::native::copy_()
[2m[36m(pid=14259)[0m     @     0x7f9188cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14259)[0m     @     0x7f9188dbc148 at::Tensor::copy_()
[2m[36m(pid=14259)[0m     @     0x7f918a9b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14209)[0m     @     0x7fc25aae1148 at::Tensor::copy_()
[2m[36m(pid=14209)[0m     @     0x7fc25c6d8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14209)[0m     @     0x7fc25a9d95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14209)[0m     @     0x7fc25aae1148 at::Tensor::copy_()
[2m[36m(pid=14183)[0m     @     0x7f6ce52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14183)[0m     @     0x7f6ce532b148 at::Tensor::copy_()
[2m[36m(pid=14183)[0m     @     0x7f6ce6f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14183)[0m     @     0x7f6ce52235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14234)[0m     @     0x7fc4a8dbc148 at::Tensor::copy_()
[2m[36m(pid=14234)[0m     @     0x7fc4aa9b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14234)[0m     @     0x7fc4a8cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14234)[0m     @     0x7fc4a8dbc148 at::Tensor::copy_()
[2m[36m(pid=14234)[0m     @     0x7fc4af072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14203)[0m     @     0x7f77960aaed4 at::native::copy_()
[2m[36m(pid=14203)[0m     @     0x7f77967ed5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14203)[0m     @     0x7f77968f5148 at::Tensor::copy_()
[2m[36m(pid=14203)[0m     @     0x7f77984ec989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14181)[0m     @     0x7f11b27ad5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14181)[0m     @     0x7f11b28b5148 at::Tensor::copy_()
[2m[36m(pid=14181)[0m     @     0x7f11b44ac989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14267)[0m     @     0x7f7eca23c148 at::Tensor::copy_()
[2m[36m(pid=14267)[0m     @     0x7f7ecbe33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14267)[0m     @     0x7f7eca1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14267)[0m     @     0x7f7eca23c148 at::Tensor::copy_()
[2m[36m(pid=14267)[0m     @     0x7f7ed04f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14267)[0m     @     0x560081d08fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14267)[0m     @     0x560081c63b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14267)[0m     @     0x560081ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14267)[0m     @     0x560081cefa20 method_vectorcall
[2m[36m(pid=14267)[0m     @     0x560081c63bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14267)[0m     @     0x560081ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14300)[0m     @     0x7f24e6b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14300)[0m     @     0x7f24e6c56148 at::Tensor::copy_()
[2m[36m(pid=14300)[0m     @     0x7f24e884d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14303)[0m     @     0x7f2335f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14303)[0m     @     0x7f233424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14303)[0m     @     0x7f2334357148 at::Tensor::copy_()
[2m[36m(pid=14303)[0m     @     0x7f233a60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14303)[0m     @     0x55efac165fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14303)[0m     @     0x55efac0c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14303)[0m     @     0x55efac14bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14303)[0m     @     0x55efac14ca20 method_vectorcall
[2m[36m(pid=14303)[0m     @     0x55efac0c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14303)[0m     @     0x55efac14bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14303)[0m     @     0x55efac14c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14303)[0m     @     0x55efac0c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14303)[0m     @     0x55efac14bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14303)[0m     @     0x55efac14c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14303)[0m     @     0x55efac0c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14303)[0m     @     0x55efac14bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14303)[0m     @     0x55efac14c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14303)[0m     @     0x55efac0c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14303)[0m     @     0x55efac14bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14191)[0m     @     0x7f628ae1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14191)[0m     @     0x7f628911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14191)[0m     @     0x7f6289226148 at::Tensor::copy_()
[2m[36m(pid=14191)[0m     @     0x7f628f4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14191)[0m     @     0x5623960a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14191)[0m     @     0x562395fffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14191)[0m     @     0x56239608abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14191)[0m     @     0x56239608ba20 method_vectorcall
[2m[36m(pid=14191)[0m     @     0x562395fffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14191)[0m     @     0x56239608abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14191)[0m     @     0x56239608b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14191)[0m     @     0x562396000689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14191)[0m     @     0x56239608abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14191)[0m     @     0x56239608b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14191)[0m     @     0x562396000689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14217)[0m     @     0x7f928f58ab53 at::TensorIterator::for_each()
[2m[36m(pid=14217)[0m     @     0x7f928f58ae11 at::TensorIterator::for_each()
[2m[36m(pid=14217)[0m     @     0x7f92922a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14217)[0m     @     0x7f92922c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14217)[0m     @     0x7f928f304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14217)[0m     @     0x7f928f302c3f at::native::copy_impl()
[2m[36m(pid=14269)[0m     @     0x7f4cc29a8b53 at::TensorIterator::for_each()
[2m[36m(pid=14269)[0m     @     0x7f4cc29a8e11 at::TensorIterator::for_each()
[2m[36m(pid=14269)[0m     @     0x7f4cc56c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14269)[0m     @     0x7f4cc56e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14269)[0m     @     0x7f4cc2722009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14205)[0m     @     0x7fc14758ab53 at::TensorIterator::for_each()
[2m[36m(pid=14205)[0m     @     0x7fc14758ae11 at::TensorIterator::for_each()
[2m[36m(pid=14205)[0m     @     0x7fc14a2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14205)[0m     @     0x7fc14a2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14205)[0m     @     0x7fc147304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14186)[0m     @     0x7faea5392e11 at::TensorIterator::for_each()
[2m[36m(pid=14186)[0m     @     0x7faea80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14186)[0m     @     0x7faea80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14186)[0m     @     0x7faea510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14186)[0m     @     0x7faea510ac3f at::native::copy_impl()
[2m[36m(pid=14308)[0m     @     0x7f56656a8e11 at::TensorIterator::for_each()
[2m[36m(pid=14308)[0m     @     0x7f56683c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14308)[0m     @     0x7f56683e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14308)[0m     @     0x7f5665422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14308)[0m     @     0x7f5665420c3f at::native::copy_impl()
[2m[36m(pid=14192)[0m     @     0x7f1e2fa75b53 at::TensorIterator::for_each()
[2m[36m(pid=14192)[0m     @     0x7f1e2fa75e11 at::TensorIterator::for_each()
[2m[36m(pid=14192)[0m     @     0x7f1e3278ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14192)[0m     @     0x7f1e327b1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14192)[0m     @     0x7f1e2f7ef009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14276)[0m     @     0x7f9a4f165e11 at::TensorIterator::for_each()
[2m[36m(pid=14276)[0m     @     0x7f9a51e7ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14276)[0m     @     0x7f9a51ea1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14276)[0m     @     0x7f9a4eedf009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14276)[0m     @     0x7f9a4eeddc3f at::native::copy_impl()
[2m[36m(pid=14245)[0m     @     0x7f613eff6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14245)[0m     @     0x7f613eff6b53 at::TensorIterator::for_each()
[2m[36m(pid=14245)[0m     @     0x7f613eff6e11 at::TensorIterator::for_each()
[2m[36m(pid=14278)[0m     @     0x7f36d52f7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14278)[0m     @     0x7f36d52f7b53 at::TensorIterator::for_each()
[2m[36m(pid=14278)[0m     @     0x7f36d52f7e11 at::TensorIterator::for_each()
[2m[36m(pid=14185)[0m     @     0x7fc740c62e11 at::TensorIterator::for_each()
[2m[36m(pid=14185)[0m     @     0x7fc74397bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14185)[0m     @     0x7fc74399ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14185)[0m     @     0x7fc7409dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14185)[0m     @     0x7fc7409dac3f at::native::copy_impl()
[2m[36m(pid=14188)[0m     @     0x7f95da692e11 at::TensorIterator::for_each()
[2m[36m(pid=14188)[0m     @     0x7f95dd3abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14188)[0m     @     0x7f95dd3cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14188)[0m     @     0x7f95da40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14188)[0m     @     0x7f95da40ac3f at::native::copy_impl()
[2m[36m(pid=14241)[0m     @     0x7f6e1e692e11 at::TensorIterator::for_each()
[2m[36m(pid=14241)[0m     @     0x7f6e213abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14241)[0m     @     0x7f6e213cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14241)[0m     @     0x7f6e1e40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14241)[0m     @     0x7f6e1e40ac3f at::native::copy_impl()
[2m[36m(pid=14194)[0m     @     0x7f45e45f364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=14194)[0m     @     0x7f45e45f6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14292)[0m     @     0x7fa0584605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14292)[0m     @     0x7fa058568148 at::Tensor::copy_()
[2m[36m(pid=14292)[0m     @     0x7fa05a15f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14292)[0m     @     0x7fa0584605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14204)[0m     @     0x7f23a0d67b53 at::TensorIterator::for_each()
[2m[36m(pid=14204)[0m     @     0x7f23a0d67e11 at::TensorIterator::for_each()
[2m[36m(pid=14204)[0m     @     0x7f23a3a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14204)[0m     @     0x7f23a3aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14197)[0m     @     0x7f5ba40a9e11 at::TensorIterator::for_each()
[2m[36m(pid=14197)[0m     @     0x7f5ba6dc2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14197)[0m     @     0x7f5ba6de5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14197)[0m     @     0x7f5ba3e23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14197)[0m     @     0x7f5ba3e21c3f at::native::copy_impl()
[2m[36m(pid=14197)[0m     @     0x7f5ba3e22ed4 at::native::copy_()
[2m[36m(pid=14263)[0m     @     0x7f468d392b53 at::TensorIterator::for_each()
[2m[36m(pid=14263)[0m     @     0x7f468d392e11 at::TensorIterator::for_each()
[2m[36m(pid=14263)[0m     @     0x7f46900abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14263)[0m     @     0x7f46900cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14249)[0m     @     0x7ecd305d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14249)[0m     @     0x7ecd305f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14249)[0m     @     0x7ecd2d633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14249)[0m     @     0x7ecd2d631c3f at::native::copy_impl()
[2m[36m(pid=14249)[0m     @     0x7ecd2d632ed4 at::native::copy_()
[2m[36m(pid=14243)[0m     @     0x7f14892e5e11 at::TensorIterator::for_each()
[2m[36m(pid=14243)[0m     @     0x7f148bffec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14243)[0m     @     0x7f148c021cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14243)[0m     @     0x7f148905f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14243)[0m     @     0x7f148905dc3f at::native::copy_impl()
[2m[36m(pid=14243)[0m     @     0x7f148905eed4 at::native::copy_()
[2m[36m(pid=14247)[0m     @     0x7f69ad63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14247)[0m     @     0x7f69ad63bb53 at::TensorIterator::for_each()
[2m[36m(pid=14273)[0m     @     0x7efbeb8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14273)[0m     @     0x7efbeb8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=14273)[0m     @     0x7efbeb8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=14273)[0m     @     0x7efbee5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14190)[0m     @     0x7f79a8120e11 at::TensorIterator::for_each()
[2m[36m(pid=14190)[0m     @     0x7f79aae39c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14190)[0m     @     0x7f79aae5ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14190)[0m     @     0x7f79a7e9a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14190)[0m     @     0x7f79a7e98c3f at::native::copy_impl()
[2m[36m(pid=14190)[0m     @     0x7f79a7e99ed4 at::native::copy_()
[2m[36m(pid=14255)[0m     @     0x7efea1956148 at::Tensor::copy_()
[2m[36m(pid=14255)[0m     @     0x7efea7c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14255)[0m     @     0x559579284fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14255)[0m     @     0x5595791dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14255)[0m     @     0x55957926abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14255)[0m     @     0x55957926ba20 method_vectorcall
[2m[36m(pid=14255)[0m     @     0x5595791dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14255)[0m     @     0x55957926abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14255)[0m     @     0x55957926b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14255)[0m     @     0x5595791e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14255)[0m     @     0x55957926abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14255)[0m     @     0x55957926b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14255)[0m     @     0x5595791e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14255)[0m     @     0x55957926abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14255)[0m     @     0x55957926b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14255)[0m     @     0x5595791e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14255)[0m     @     0x55957926abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14299)[0m     @     0x7ef21553c148 at::Tensor::copy_()
[2m[36m(pid=14299)[0m     @     0x7ef217133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14299)[0m     @     0x7ef2154345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14299)[0m     @     0x7ef21553c148 at::Tensor::copy_()
[2m[36m(pid=14299)[0m     @     0x7ef21b7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14299)[0m     @     0x55df5f775fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14299)[0m     @     0x55df5f6d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14299)[0m     @     0x55df5f75bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14299)[0m     @     0x55df5f75ca20 method_vectorcall
[2m[36m(pid=14299)[0m     @     0x55df5f6d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14299)[0m     @     0x55df5f75bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14299)[0m     @     0x55df5f75c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14299)[0m     @     0x55df5f6d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14299)[0m     @     0x55df5f75bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14299)[0m     @     0x55df5f75c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14299)[0m     @     0x55df5f6d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14299)[0m     @     0x55df5f75bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14299)[0m     @     0x55df5f75c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14299)[0m     @     0x55df5f6d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14299)[0m     @     0x55df5f75bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14288)[0m     @     0x7f66eba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14288)[0m     @     0x7f66ebb4e148 at::Tensor::copy_()
[2m[36m(pid=14288)[0m     @     0x7f66f1e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14288)[0m     @     0x55c58b087fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14288)[0m     @     0x55c58afe2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14288)[0m     @     0x55c58b06dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14288)[0m     @     0x55c58b06ea20 method_vectorcall
[2m[36m(pid=14288)[0m     @     0x55c58afe2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14288)[0m     @     0x55c58b06dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14288)[0m     @     0x55c58b06e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14288)[0m     @     0x55c58afe3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14288)[0m     @     0x55c58b06dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14288)[0m     @     0x55c58b06e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14288)[0m     @     0x55c58afe3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14288)[0m     @     0x55c58b06dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14288)[0m     @     0x55c58b06e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14288)[0m     @     0x55c58afe3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14288)[0m     @     0x55c58b06dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14184)[0m     @     0x7ee3ee09acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14184)[0m     @     0x7ee3eb0d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14184)[0m     @     0x7ee3eb0d6c3f at::native::copy_impl()
[2m[36m(pid=14184)[0m     @     0x7ee3eb0d7ed4 at::native::copy_()
[2m[36m(pid=14184)[0m     @     0x7ee3eb81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14261)[0m     @     0x7effa2e19bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14261)[0m     @     0x56471bdd5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14261)[0m     @     0x56471bd30b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14261)[0m     @     0x56471bdbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14261)[0m     @     0x56471bdbca20 method_vectorcall
[2m[36m(pid=14261)[0m     @     0x56471bd30bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14261)[0m     @     0x56471bdbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14261)[0m     @     0x56471bdbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14261)[0m     @     0x56471bd31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14261)[0m     @     0x56471bdbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14261)[0m     @     0x56471bdbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14261)[0m     @     0x56471bd31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14261)[0m     @     0x56471bdbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14261)[0m     @     0x56471bdbc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14261)[0m     @     0x56471bd31689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14261)[0m     @     0x56471bdbbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14258)[0m     @     0x7f511bf265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14258)[0m     @     0x7f511c02e148 at::Tensor::copy_()
[2m[36m(pid=14258)[0m     @     0x7f51222e4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14258)[0m     @     0x55b9656d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14258)[0m     @     0x55b965634b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14258)[0m     @     0x55b9656bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14258)[0m     @     0x55b9656c0a20 method_vectorcall
[2m[36m(pid=14258)[0m     @     0x55b965634bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14258)[0m     @     0x55b9656bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14258)[0m     @     0x55b9656c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14258)[0m     @     0x55b965635689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14258)[0m     @     0x55b9656bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14258)[0m     @     0x55b9656c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14258)[0m     @     0x55b965635689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14258)[0m     @     0x55b9656bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14258)[0m     @     0x55b9656c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14258)[0m     @     0x55b965635689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14258)[0m     @     0x55b9656bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14275)[0m     @     0x7fc1195df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14275)[0m     @     0x7fc1178e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14275)[0m     @     0x7fc1179e8148 at::Tensor::copy_()
[2m[36m(pid=14275)[0m     @     0x7fc11dc9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14301)[0m     @     0x7f77c05fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14301)[0m     @     0x7f77c0703148 at::Tensor::copy_()
[2m[36m(pid=14301)[0m     @     0x7f77c69b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14301)[0m     @     0x55e91f02efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14301)[0m     @     0x55e91ef89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14301)[0m     @     0x55e91f014baf _PyEval_EvalCodeWithName
[2m[36m(pid=14301)[0m     @     0x55e91f015a20 method_vectorcall
[2m[36m(pid=14301)[0m     @     0x55e91ef89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14301)[0m     @     0x55e91f014baf _PyEval_EvalCodeWithName
[2m[36m(pid=14301)[0m     @     0x55e91f015643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14301)[0m     @     0x55e91ef8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14301)[0m     @     0x55e91f014baf _PyEval_EvalCodeWithName
[2m[36m(pid=14301)[0m     @     0x55e91f015643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14301)[0m     @     0x55e91ef8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14301)[0m     @     0x55e91f014baf _PyEval_EvalCodeWithName
[2m[36m(pid=14301)[0m     @     0x55e91f015643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14301)[0m     @     0x55e91ef8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14301)[0m     @     0x55e91f014baf _PyEval_EvalCodeWithName
[2m[36m(pid=14294)[0m     @     0x7f320e2fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14294)[0m     @     0x7f320c5fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14294)[0m     @     0x7f320c703148 at::Tensor::copy_()
[2m[36m(pid=14294)[0m     @     0x7f32129b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14294)[0m     @     0x55dcdeddefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14294)[0m     @     0x55dcded39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14294)[0m     @     0x55dcdedc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14294)[0m     @     0x55dcdedc5a20 method_vectorcall
[2m[36m(pid=14294)[0m     @     0x55dcded39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14294)[0m     @     0x55dcdedc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14294)[0m     @     0x55dcdedc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14294)[0m     @     0x55dcded3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14294)[0m     @     0x55dcdedc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14294)[0m     @     0x55dcdedc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14294)[0m     @     0x55dcded3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14294)[0m     @     0x55dcdedc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14294)[0m     @     0x55dcdedc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14294)[0m     @     0x55dcded3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14294)[0m     @     0x55dcdedc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14283)[0m     @     0x7f12cc971148 at::Tensor::copy_()
[2m[36m(pid=14283)[0m     @     0x7f12d2c27bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14283)[0m     @     0x55c48d6cffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14283)[0m     @     0x55c48d62ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14283)[0m     @     0x55c48d6b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14283)[0m     @     0x55c48d6b6a20 method_vectorcall
[2m[36m(pid=14283)[0m     @     0x55c48d62abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14283)[0m     @     0x55c48d6b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14283)[0m     @     0x55c48d6b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14283)[0m     @     0x55c48d62b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14283)[0m     @     0x55c48d6b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14283)[0m     @     0x55c48d6b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14283)[0m     @     0x55c48d62b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14283)[0m     @     0x55c48d6b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14283)[0m     @     0x55c48d6b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14283)[0m     @     0x55c48d62b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14283)[0m     @     0x55c48d6b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14238)[0m     @     0x7f1550f1c148 at::Tensor::copy_()
[2m[36m(pid=14238)[0m     @     0x7f1552b13989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14238)[0m     @     0x7f1550e145cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14238)[0m     @     0x7f1550f1c148 at::Tensor::copy_()
[2m[36m(pid=14238)[0m     @     0x7f15571d2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14238)[0m     @     0x55dfb936efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14238)[0m     @     0x55dfb92c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14238)[0m     @     0x55dfb9354baf _PyEval_EvalCodeWithName
[2m[36m(pid=14262)[0m     @     0x7fc38da5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14262)[0m     @     0x7fc38bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14262)[0m     @     0x7fc38be65148 at::Tensor::copy_()
[2m[36m(pid=14262)[0m     @     0x7fc39211bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14262)[0m     @     0x563b639b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14262)[0m     @     0x563b6390fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14262)[0m     @     0x563b6399abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14262)[0m     @     0x563b6399ba20 method_vectorcall
[2m[36m(pid=14262)[0m     @     0x563b6390fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14262)[0m     @     0x563b6399abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14262)[0m     @     0x563b6399b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14262)[0m     @     0x563b63910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14262)[0m     @     0x563b6399abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14262)[0m     @     0x563b6399b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14262)[0m     @     0x563b63910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14262)[0m     @     0x563b6399abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14262)[0m     @     0x563b6399b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14262)[0m     @     0x563b63910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14262)[0m     @     0x563b6399abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14268)[0m     @     0x7ee53a280148 at::Tensor::copy_()
[2m[36m(pid=14268)[0m     @     0x7ee540536bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14268)[0m     @     0x55f9286fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14268)[0m     @     0x55f92865ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14268)[0m     @     0x55f9286e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14268)[0m     @     0x55f9286e6a20 method_vectorcall
[2m[36m(pid=14268)[0m     @     0x55f92865abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14268)[0m     @     0x55f9286e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14268)[0m     @     0x55f9286e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14268)[0m     @     0x55f92865b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14268)[0m     @     0x55f9286e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14268)[0m     @     0x55f9286e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14268)[0m     @     0x55f92865b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14268)[0m     @     0x55f9286e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14268)[0m     @     0x55f9286e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14268)[0m     @     0x55f92865b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14268)[0m     @     0x55f9286e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=14290)[0m     @     0x7f80e9743148 at::Tensor::copy_()
[2m[36m(pid=14290)[0m     @     0x7f80eb33a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14290)[0m     @     0x7f80e963b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14290)[0m     @     0x7f80e9743148 at::Tensor::copy_()
[2m[36m(pid=14290)[0m     @     0x7f80ef9f9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14290)[0m     @     0x5559bbddbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14290)[0m     @     0x5559bbd36b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14290)[0m     @     0x5559bbdc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14290)[0m     @     0x5559bbdc2a20 method_vectorcall
[2m[36m(pid=14290)[0m     @     0x5559bbd36bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14290)[0m     @     0x5559bbdc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14290)[0m     @     0x5559bbdc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14290)[0m     @     0x5559bbd37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14290)[0m     @     0x5559bbdc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14290)[0m     @     0x5559bbdc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14290)[0m     @     0x5559bbd37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14290)[0m     @     0x5559bbdc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14290)[0m     @     0x5559bbdc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14286)[0m     @     0x7efcb22ed148 at::Tensor::copy_()
[2m[36m(pid=14286)[0m     @     0x7efcb85a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14286)[0m     @     0x561b3e1befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14286)[0m     @     0x561b3e119b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14286)[0m     @     0x561b3e1a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14286)[0m     @     0x561b3e1a5a20 method_vectorcall
[2m[36m(pid=14286)[0m     @     0x561b3e119bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14286)[0m     @     0x561b3e1a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14286)[0m     @     0x561b3e1a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14286)[0m     @     0x561b3e11a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14286)[0m     @     0x561b3e1a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14286)[0m     @     0x561b3e1a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14286)[0m     @     0x561b3e11a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14286)[0m     @     0x561b3e1a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14286)[0m     @     0x561b3e1a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14286)[0m     @     0x561b3e11a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14286)[0m     @     0x561b3e1a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14200)[0m     @     0x7fa974f78e11 at::TensorIterator::for_each()
[2m[36m(pid=14200)[0m     @     0x7fa977c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14200)[0m     @     0x7fa977cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14200)[0m     @     0x7fa974cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14200)[0m     @     0x7fa974cf0c3f at::native::copy_impl()
[2m[36m(pid=14239)[0m     @     0x7f1995e8de11 at::TensorIterator::for_each()
[2m[36m(pid=14239)[0m     @     0x7f1998ba6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14239)[0m     @     0x7f1998bc9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14239)[0m     @     0x7f1995c07009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14239)[0m     @     0x7f1995c05c3f at::native::copy_impl()
[2m[36m(pid=14239)[0m     @     0x7f1995c06ed4 at::native::copy_()
[2m[36m(pid=14210)[0m     @     0x7f6c4eb60e11 at::TensorIterator::for_each()
[2m[36m(pid=14210)[0m     @     0x7f6c51879c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14210)[0m     @     0x7f6c5189ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14210)[0m     @     0x7f6c4e8da009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14210)[0m     @     0x7f6c4e8d8c3f at::native::copy_impl()
[2m[36m(pid=14210)[0m     @     0x7f6c4e8d9ed4 at::native::copy_()
[2m[36m(pid=14193)[0m     @     0x7edeb62a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14193)[0m     @     0x7edeb62c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14193)[0m     @     0x7edeb3304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14193)[0m     @     0x7edeb3302c3f at::native::copy_impl()
[2m[36m(pid=14193)[0m     @     0x7edeb3303ed4 at::native::copy_()
[2m[36m(pid=14253)[0m     @     0x7fb10e5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14253)[0m     @     0x7fb10b61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14253)[0m     @     0x7fb10b619c3f at::native::copy_impl()
[2m[36m(pid=14253)[0m     @     0x7fb10b61aed4 at::native::copy_()
[2m[36m(pid=14253)[0m     @     0x7fb10bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14178)[0m     @     0x7fa8917b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14178)[0m     @     0x7fa8918bb148 at::Tensor::copy_()
[2m[36m(pid=14178)[0m     @     0x7fa8934b2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14178)[0m     @     0x7fa8917b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14177)[0m     @     0x7ef4d6088cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14177)[0m     @     0x7ef4d30c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14177)[0m     @     0x7ef4d30c4c3f at::native::copy_impl()
[2m[36m(pid=14177)[0m     @     0x7ef4d30c5ed4 at::native::copy_()
[2m[36m(pid=14177)[0m     @     0x7ef4d38085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14208)[0m     @     0x7fb13490db53 at::TensorIterator::for_each()
[2m[36m(pid=14208)[0m     @     0x7fb13490de11 at::TensorIterator::for_each()
[2m[36m(pid=14208)[0m     @     0x7fb137626c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14208)[0m     @     0x7fb137649cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14182)[0m     @     0x7efbf5d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14182)[0m     @     0x7efbf5e97148 at::Tensor::copy_()
[2m[36m(pid=14182)[0m     @     0x7efbfc14dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14182)[0m     @     0x55f9f711ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14182)[0m     @     0x55f9f707ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14182)[0m     @     0x55f9f7105baf _PyEval_EvalCodeWithName
[2m[36m(pid=14182)[0m     @     0x55f9f7106a20 method_vectorcall
[2m[36m(pid=14182)[0m     @     0x55f9f707abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14182)[0m     @     0x55f9f7105baf _PyEval_EvalCodeWithName
[2m[36m(pid=14182)[0m     @     0x55f9f7106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14182)[0m     @     0x55f9f707b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14182)[0m     @     0x55f9f7105baf _PyEval_EvalCodeWithName
[2m[36m(pid=14182)[0m     @     0x55f9f7106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14182)[0m     @     0x55f9f707b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14182)[0m     @     0x55f9f7105baf _PyEval_EvalCodeWithName
[2m[36m(pid=14182)[0m     @     0x55f9f7106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14182)[0m     @     0x55f9f707b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14182)[0m     @     0x55f9f7105baf _PyEval_EvalCodeWithName
[2m[36m(pid=14213)[0m     @     0x7f5a30b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14213)[0m     @     0x7f5a30b12b53 at::TensorIterator::for_each()
[2m[36m(pid=14213)[0m     @     0x7f5a30b12e11 at::TensorIterator::for_each()
[2m[36m(pid=14213)[0m     @     0x7f5a3382bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14213)[0m     @     0x7f5a3384ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14257)[0m     @     0x7f83f4f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=14257)[0m     @     0x7f83f4f78b53 at::TensorIterator::for_each()
[2m[36m(pid=14257)[0m     @     0x7f83f4f78e11 at::TensorIterator::for_each()
[2m[36m(pid=14257)[0m     @     0x7f83f7c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14257)[0m     @     0x7f83f7cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14280)[0m     @     0x7f438f93d148 at::Tensor::copy_()
[2m[36m(pid=14280)[0m     @     0x7f4395bf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14280)[0m     @     0x55d5660f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14280)[0m     @     0x55d56604bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14280)[0m     @     0x55d5660d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14280)[0m     @     0x55d5660d7a20 method_vectorcall
[2m[36m(pid=14280)[0m     @     0x55d56604bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14280)[0m     @     0x55d5660d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14280)[0m     @     0x55d5660d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14280)[0m     @     0x55d56604c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14280)[0m     @     0x55d5660d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14280)[0m     @     0x55d5660d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14280)[0m     @     0x55d56604c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14280)[0m     @     0x55d5660d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14280)[0m     @     0x55d5660d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14280)[0m     @     0x55d56604c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14280)[0m     @     0x55d5660d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14302)[0m     @     0x7f3b17a8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14302)[0m     @     0x7f3b15d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14302)[0m     @     0x7f3b15e97148 at::Tensor::copy_()
[2m[36m(pid=14302)[0m     @     0x7f3b1c14dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14302)[0m     @     0x56148cb7ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14302)[0m     @     0x56148cadab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14302)[0m     @     0x56148cb65baf _PyEval_EvalCodeWithName
[2m[36m(pid=14302)[0m     @     0x56148cb66a20 method_vectorcall
[2m[36m(pid=14302)[0m     @     0x56148cadabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14302)[0m     @     0x56148cb65baf _PyEval_EvalCodeWithName
[2m[36m(pid=14302)[0m     @     0x56148cb66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14302)[0m     @     0x56148cadb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14302)[0m     @     0x56148cb65baf _PyEval_EvalCodeWithName
[2m[36m(pid=14302)[0m     @     0x56148cb66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14302)[0m     @     0x56148cadb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14302)[0m     @     0x56148cb65baf _PyEval_EvalCodeWithName
[2m[36m(pid=14302)[0m     @     0x56148cb66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14302)[0m     @     0x56148cadb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14302)[0m     @     0x56148cb65baf _PyEval_EvalCodeWithName
[2m[36m(pid=14296)[0m     @     0x7f913da07989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14296)[0m     @     0x7f913bd085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14296)[0m     @     0x7f913be10148 at::Tensor::copy_()
[2m[36m(pid=14296)[0m     @     0x7f91420c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14296)[0m     @     0x55f09cb4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14296)[0m     @     0x55f09caaab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14296)[0m     @     0x55f09cb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=14296)[0m     @     0x55f09cb36a20 method_vectorcall
[2m[36m(pid=14296)[0m     @     0x55f09caaabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14289)[0m     @     0x5635338a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14289)[0m     @     0x563533930baf _PyEval_EvalCodeWithName
[2m[36m(pid=14289)[0m     @     0x563533931643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14289)[0m     @     0x5635338a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14289)[0m     @     0x563533930baf _PyEval_EvalCodeWithName
[2m[36m(pid=14195)[0m     @     0x7f12f1658989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14195)[0m     @     0x7f12ef9595cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14195)[0m     @     0x7f12efa61148 at::Tensor::copy_()
[2m[36m(pid=14265)[0m     @     0x7f6020e3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14265)[0m     @     0x55e532093fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14265)[0m     @     0x55e531feeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14265)[0m     @     0x55e532079baf _PyEval_EvalCodeWithName
[2m[36m(pid=14265)[0m     @     0x55e53207aa20 method_vectorcall
[2m[36m(pid=14265)[0m     @     0x55e531feebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14265)[0m     @     0x55e532079baf _PyEval_EvalCodeWithName
[2m[36m(pid=14265)[0m     @     0x55e53207a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14265)[0m     @     0x55e531fef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14265)[0m     @     0x55e532079baf _PyEval_EvalCodeWithName
[2m[36m(pid=14265)[0m     @     0x55e53207a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14265)[0m     @     0x55e531fef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14265)[0m     @     0x55e532079baf _PyEval_EvalCodeWithName
[2m[36m(pid=14265)[0m     @     0x55e53207a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14265)[0m     @     0x55e531fef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14265)[0m     @     0x55e532079baf _PyEval_EvalCodeWithName
[2m[36m(pid=14274)[0m     @     0x7f588a545148 at::Tensor::copy_()
[2m[36m(pid=14274)[0m     @     0x7f58905f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14274)[0m     @     0x55aca2786fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14274)[0m     @     0x55aca26e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14274)[0m     @     0x55aca276cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14274)[0m     @     0x55aca276da20 method_vectorcall
[2m[36m(pid=14274)[0m     @     0x55aca26e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14274)[0m     @     0x55aca276cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14274)[0m     @     0x55aca276d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14274)[0m     @     0x55aca26e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14274)[0m     @     0x55aca276cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14274)[0m     @     0x55aca276d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14274)[0m     @     0x55aca26e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14274)[0m     @     0x55aca276cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14274)[0m     @     0x55aca276d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14274)[0m     @     0x55aca26e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14274)[0m     @     0x55aca276cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14237)[0m     @     0x7f0a5f121148 at::Tensor::copy_()
[2m[36m(pid=14237)[0m     @     0x7f0a653d7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14237)[0m     @     0x5583bde90fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14237)[0m     @     0x5583bddebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14237)[0m     @     0x5583bde76baf _PyEval_EvalCodeWithName
[2m[36m(pid=14237)[0m     @     0x5583bde77a20 method_vectorcall
[2m[36m(pid=14237)[0m     @     0x5583bddebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14237)[0m     @     0x5583bde76baf _PyEval_EvalCodeWithName
[2m[36m(pid=14237)[0m     @     0x5583bde77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14237)[0m     @     0x5583bddec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14237)[0m     @     0x5583bde76baf _PyEval_EvalCodeWithName
[2m[36m(pid=14237)[0m     @     0x5583bde77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14237)[0m     @     0x5583bddec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14237)[0m     @     0x5583bde76baf _PyEval_EvalCodeWithName
[2m[36m(pid=14237)[0m     @     0x5583bde77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14237)[0m     @     0x5583bddec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14237)[0m     @     0x5583bde76baf _PyEval_EvalCodeWithName
[2m[36m(pid=14277)[0m     @     0x7f5908efe148 at::Tensor::copy_()
[2m[36m(pid=14277)[0m     @     0x7f590f1b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14277)[0m     @     0x55d2dd74dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14277)[0m     @     0x55d2dd6a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14277)[0m     @     0x55d2dd733baf _PyEval_EvalCodeWithName
[2m[36m(pid=14277)[0m     @     0x55d2dd734a20 method_vectorcall
[2m[36m(pid=14277)[0m     @     0x55d2dd6a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14277)[0m     @     0x55d2dd733baf _PyEval_EvalCodeWithName
[2m[36m(pid=14277)[0m     @     0x55d2dd734643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14277)[0m     @     0x55d2dd6a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14277)[0m     @     0x55d2dd733baf _PyEval_EvalCodeWithName
[2m[36m(pid=14277)[0m     @     0x55d2dd734643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14277)[0m     @     0x55d2dd6a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14277)[0m     @     0x55d2dd733baf _PyEval_EvalCodeWithName
[2m[36m(pid=14277)[0m     @     0x55d2dd734643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14277)[0m     @     0x55d2dd6a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14277)[0m     @     0x55d2dd733baf _PyEval_EvalCodeWithName
[2m[36m(pid=14196)[0m     @     0x7f3d7f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14196)[0m     @     0x7f3d7f627148 at::Tensor::copy_()
[2m[36m(pid=14196)[0m     @     0x7f3d858ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14196)[0m     @     0x564ed5396fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14196)[0m     @     0x564ed52f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14196)[0m     @     0x564ed537cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14196)[0m     @     0x564ed537da20 method_vectorcall
[2m[36m(pid=14196)[0m     @     0x564ed52f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14196)[0m     @     0x564ed537cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14196)[0m     @     0x564ed537d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14196)[0m     @     0x564ed52f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14196)[0m     @     0x564ed537cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14196)[0m     @     0x564ed537d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14196)[0m     @     0x564ed52f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14196)[0m     @     0x564ed537cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14196)[0m     @     0x564ed537d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14196)[0m     @     0x564ed52f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14196)[0m     @     0x564ed537cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14180)[0m     @     0x7ee4c6510ed4 at::native::copy_()
[2m[36m(pid=14180)[0m     @     0x7ee4c6c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14233)[0m     @     0x7f0843bf8ed4 at::native::copy_()
[2m[36m(pid=14233)[0m     @     0x7f084433b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14214)[0m     @     0x7ef3ad6d1148 at::Tensor::copy_()
[2m[36m(pid=14214)[0m     @     0x7ef3b3987bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14214)[0m     @     0x56216b043fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14214)[0m     @     0x56216af9eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14214)[0m     @     0x56216b029baf _PyEval_EvalCodeWithName
[2m[36m(pid=14214)[0m     @     0x56216b02aa20 method_vectorcall
[2m[36m(pid=14214)[0m     @     0x56216af9ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14214)[0m     @     0x56216b029baf _PyEval_EvalCodeWithName
[2m[36m(pid=14214)[0m     @     0x56216b02a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14214)[0m     @     0x56216af9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14214)[0m     @     0x56216b029baf _PyEval_EvalCodeWithName
[2m[36m(pid=14214)[0m     @     0x56216b02a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14214)[0m     @     0x56216af9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14214)[0m     @     0x56216b029baf _PyEval_EvalCodeWithName
[2m[36m(pid=14214)[0m     @     0x56216b02a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14214)[0m     @     0x56216af9f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14214)[0m     @     0x56216b029baf _PyEval_EvalCodeWithName
[2m[36m(pid=14256)[0m     @     0x7f12074dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14256)[0m     @     0x55b80efa3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14256)[0m     @     0x55b80eefeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14256)[0m     @     0x55b80ef89baf _PyEval_EvalCodeWithName
[2m[36m(pid=14256)[0m     @     0x55b80ef8aa20 method_vectorcall
[2m[36m(pid=14256)[0m     @     0x55b80eefebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14256)[0m     @     0x55b80ef89baf _PyEval_EvalCodeWithName
[2m[36m(pid=14256)[0m     @     0x55b80ef8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14256)[0m     @     0x55b80eeff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14256)[0m     @     0x55b80ef89baf _PyEval_EvalCodeWithName
[2m[36m(pid=14256)[0m     @     0x55b80ef8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14256)[0m     @     0x55b80eeff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14256)[0m     @     0x55b80ef89baf _PyEval_EvalCodeWithName
[2m[36m(pid=14256)[0m     @     0x55b80ef8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14256)[0m     @     0x55b80eeff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14256)[0m     @     0x55b80ef89baf _PyEval_EvalCodeWithName
[2m[36m(pid=14252)[0m     @     0x7ede6a111989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14252)[0m     @     0x7ede684125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14252)[0m     @     0x7ede6851a148 at::Tensor::copy_()
[2m[36m(pid=14252)[0m     @     0x7ede6e7d0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14252)[0m     @     0x55a3f6a43fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14252)[0m     @     0x55a3f699eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14260)[0m     @     0x7f74bad5b148 at::Tensor::copy_()
[2m[36m(pid=14260)[0m     @     0x7f74c1011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14260)[0m     @     0x55e88cffbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14260)[0m     @     0x55e88cf56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14260)[0m     @     0x55e88cfe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14260)[0m     @     0x55e88cfe2a20 method_vectorcall
[2m[36m(pid=14260)[0m     @     0x55e88cf56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14254)[0m     @     0x7f3682deb148 at::Tensor::copy_()
[2m[36m(pid=14254)[0m     @     0x7f36890a1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14254)[0m     @     0x562729539fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14254)[0m     @     0x562729494b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14254)[0m     @     0x56272951fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14254)[0m     @     0x562729520a20 method_vectorcall
[2m[36m(pid=14254)[0m     @     0x562729494bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14254)[0m     @     0x56272951fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14254)[0m     @     0x562729520643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14254)[0m     @     0x562729495689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14254)[0m     @     0x56272951fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14254)[0m     @     0x562729520643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14254)[0m     @     0x562729495689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14254)[0m     @     0x56272951fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14254)[0m     @     0x562729520643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14254)[0m     @     0x562729495689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14254)[0m     @     0x56272951fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14211)[0m     @     0x7f8bd25765cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14211)[0m     @     0x7f8bd267e148 at::Tensor::copy_()
[2m[36m(pid=14211)[0m     @     0x7f8bd8934bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14211)[0m     @     0x564be4640fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14211)[0m     @     0x564be459bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14211)[0m     @     0x564be4626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14211)[0m     @     0x564be4627a20 method_vectorcall
[2m[36m(pid=14211)[0m     @     0x564be459bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14211)[0m     @     0x564be4626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14211)[0m     @     0x564be4627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14211)[0m     @     0x564be459c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14211)[0m     @     0x564be4626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14211)[0m     @     0x564be4627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14211)[0m     @     0x564be459c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14211)[0m     @     0x564be4626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14211)[0m     @     0x564be4627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14211)[0m     @     0x564be459c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14211)[0m     @     0x564be4626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14259)[0m     @     0x7f9188cb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14259)[0m     @     0x7f9188dbc148 at::Tensor::copy_()
[2m[36m(pid=14259)[0m     @     0x7f918f072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14259)[0m     @     0x565513479fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14259)[0m     @     0x5655133d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14259)[0m     @     0x56551345fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14259)[0m     @     0x565513460a20 method_vectorcall
[2m[36m(pid=14259)[0m     @     0x5655133d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14259)[0m     @     0x56551345fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14259)[0m     @     0x565513460643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14259)[0m     @     0x5655133d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14259)[0m     @     0x56551345fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14259)[0m     @     0x565513460643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14259)[0m     @     0x5655133d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14259)[0m     @     0x56551345fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14259)[0m     @     0x565513460643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14259)[0m     @     0x5655133d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14259)[0m     @     0x56551345fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14209)[0m     @     0x7fc260d97bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14209)[0m     @     0x55ab27da2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14209)[0m     @     0x55ab27cfdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14209)[0m     @     0x55ab27d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14209)[0m     @     0x55ab27d89a20 method_vectorcall
[2m[36m(pid=14209)[0m     @     0x55ab27cfdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14209)[0m     @     0x55ab27d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14209)[0m     @     0x55ab27d89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14209)[0m     @     0x55ab27cfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14209)[0m     @     0x55ab27d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14209)[0m     @     0x55ab27d89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14209)[0m     @     0x55ab27cfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14209)[0m     @     0x55ab27d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14209)[0m     @     0x55ab27d89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14209)[0m     @     0x55ab27cfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14209)[0m     @     0x55ab27d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14183)[0m     @     0x7f6ce532b148 at::Tensor::copy_()
[2m[36m(pid=14183)[0m     @     0x7f6ceb5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14183)[0m     @     0x564e678cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14183)[0m     @     0x564e67825b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14183)[0m     @     0x564e678b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14183)[0m     @     0x564e678b1a20 method_vectorcall
[2m[36m(pid=14183)[0m     @     0x564e67825bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14183)[0m     @     0x564e678b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14183)[0m     @     0x564e678b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14183)[0m     @     0x564e67826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14183)[0m     @     0x564e678b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14183)[0m     @     0x564e678b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14183)[0m     @     0x564e67826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14183)[0m     @     0x564e678b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14183)[0m     @     0x564e678b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14183)[0m     @     0x564e67826689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14183)[0m     @     0x564e678b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14234)[0m     @     0x557f01062fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14234)[0m     @     0x557f00fbdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14234)[0m     @     0x557f01048baf _PyEval_EvalCodeWithName
[2m[36m(pid=14234)[0m     @     0x557f01049a20 method_vectorcall
[2m[36m(pid=14234)[0m     @     0x557f00fbdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14234)[0m     @     0x557f01048baf _PyEval_EvalCodeWithName
[2m[36m(pid=14234)[0m     @     0x557f01049643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14234)[0m     @     0x557f00fbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14234)[0m     @     0x557f01048baf _PyEval_EvalCodeWithName
[2m[36m(pid=14234)[0m     @     0x557f01049643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14234)[0m     @     0x557f00fbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14234)[0m     @     0x557f01048baf _PyEval_EvalCodeWithName
[2m[36m(pid=14234)[0m     @     0x557f01049643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14234)[0m     @     0x557f00fbe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14234)[0m     @     0x557f01048baf _PyEval_EvalCodeWithName
[2m[36m(pid=14203)[0m     @     0x7f77967ed5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14203)[0m     @     0x7f77968f5148 at::Tensor::copy_()
[2m[36m(pid=14203)[0m     @     0x7f779cbabbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14203)[0m     @     0x557ef2f61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14203)[0m     @     0x557ef2ebcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14203)[0m     @     0x557ef2f47baf _PyEval_EvalCodeWithName
[2m[36m(pid=14203)[0m     @     0x557ef2f48a20 method_vectorcall
[2m[36m(pid=14203)[0m     @     0x557ef2ebcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14203)[0m     @     0x557ef2f47baf _PyEval_EvalCodeWithName
[2m[36m(pid=14203)[0m     @     0x557ef2f48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14203)[0m     @     0x557ef2ebd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14203)[0m     @     0x557ef2f47baf _PyEval_EvalCodeWithName
[2m[36m(pid=14203)[0m     @     0x557ef2f48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14203)[0m     @     0x557ef2ebd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14203)[0m     @     0x557ef2f47baf _PyEval_EvalCodeWithName
[2m[36m(pid=14203)[0m     @     0x557ef2f48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14203)[0m     @     0x557ef2ebd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14203)[0m     @     0x557ef2f47baf _PyEval_EvalCodeWithName
[2m[36m(pid=14181)[0m     @     0x7f11b27ad5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14181)[0m     @     0x7f11b28b5148 at::Tensor::copy_()
[2m[36m(pid=14181)[0m     @     0x7f11b8b6bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14181)[0m     @     0x55a2bcfb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14181)[0m     @     0x55a2bcf14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14181)[0m     @     0x55a2bcf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14181)[0m     @     0x55a2bcfa0a20 method_vectorcall
[2m[36m(pid=14181)[0m     @     0x55a2bcf14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14181)[0m     @     0x55a2bcf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14181)[0m     @     0x55a2bcfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14181)[0m     @     0x55a2bcf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14181)[0m     @     0x55a2bcf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14181)[0m     @     0x55a2bcfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14181)[0m     @     0x55a2bcf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14181)[0m     @     0x55a2bcf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14181)[0m     @     0x55a2bcfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14181)[0m     @     0x55a2bcf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14181)[0m     @     0x55a2bcf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14267)[0m     @     0x560081cef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14267)[0m     @     0x560081c64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14267)[0m     @     0x560081ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14267)[0m     @     0x560081cef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14267)[0m     @     0x560081c64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14267)[0m     @     0x560081ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14267)[0m     @     0x560081cef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14267)[0m     @     0x560081c64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14267)[0m     @     0x560081ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14300)[0m     @     0x7f24e6b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14300)[0m     @     0x7f24e6c56148 at::Tensor::copy_()
[2m[36m(pid=14300)[0m     @     0x7f24ecf0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14300)[0m     @     0x55c2489abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14300)[0m     @     0x55c248906b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14300)[0m     @     0x55c248991baf _PyEval_EvalCodeWithName
[2m[36m(pid=14300)[0m     @     0x55c248992a20 method_vectorcall
[2m[36m(pid=14300)[0m     @     0x55c248906bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14300)[0m     @     0x55c248991baf _PyEval_EvalCodeWithName
[2m[36m(pid=14300)[0m     @     0x55c248992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14300)[0m     @     0x55c248907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14300)[0m     @     0x55c248991baf _PyEval_EvalCodeWithName
[2m[36m(pid=14300)[0m     @     0x55c248992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14300)[0m     @     0x55c248907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14300)[0m     @     0x55c248991baf _PyEval_EvalCodeWithName
[2m[36m(pid=14300)[0m     @     0x55c248992643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14300)[0m     @     0x55c248907689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14300)[0m     @     0x55c248991baf _PyEval_EvalCodeWithName
[2m[36m(pid=14191)[0m     @     0x56239608abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14191)[0m     @     0x56239608b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14191)[0m     @     0x562396000689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14191)[0m     @     0x56239608abaf _PyEval_EvalCodeWithName
2020-11-05 11:00:49,475	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=14217)[0m     @     0x7f928f303ed4 at::native::copy_()
[2m[36m(pid=14217)[0m     @     0x7f928fa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14217)[0m     @     0x7f928fb4e148 at::Tensor::copy_()
[2m[36m(pid=14269)[0m     @     0x7f4cc2720c3f at::native::copy_impl()
[2m[36m(pid=14269)[0m     @     0x7f4cc2721ed4 at::native::copy_()
[2m[36m(pid=14269)[0m     @     0x7f4cc2e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14205)[0m     @     0x7fc147302c3f at::native::copy_impl()
[2m[36m(pid=14205)[0m     @     0x7fc147303ed4 at::native::copy_()
[2m[36m(pid=14205)[0m     @     0x7fc147a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14186)[0m     @     0x7faea510bed4 at::native::copy_()
[2m[36m(pid=14186)[0m     @     0x7faea584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14186)[0m     @     0x7faea5956148 at::Tensor::copy_()
[2m[36m(pid=14308)[0m     @     0x7f5665421ed4 at::native::copy_()
[2m[36m(pid=14308)[0m     @     0x7f5665b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14308)[0m     @     0x7f5665c6c148 at::Tensor::copy_()
[2m[36m(pid=14192)[0m     @     0x7f1e2f7edc3f at::native::copy_impl()
[2m[36m(pid=14192)[0m     @     0x7f1e2f7eeed4 at::native::copy_()
[2m[36m(pid=14192)[0m     @     0x7f1e2ff315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14192)[0m     @     0x7f1e30039148 at::Tensor::copy_()
[2m[36m(pid=14192)[0m     @     0x7f1e31c30989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14276)[0m     @     0x7f9a4eedeed4 at::native::copy_()
[2m[36m(pid=14276)[0m     @     0x7f9a4f6215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14276)[0m     @     0x7f9a4f729148 at::Tensor::copy_()
[2m[36m(pid=14276)[0m     @     0x7f9a51320989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14245)[0m     @     0x7f6141d0fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14245)[0m     @     0x7f6141d32cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14245)[0m     @     0x7f613ed70009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14245)[0m     @     0x7f613ed6ec3f at::native::copy_impl()
[2m[36m(pid=14245)[0m     @     0x7f613ed6fed4 at::native::copy_()
[2m[36m(pid=14245)[0m     @     0x7f613f4b25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14278)[0m     @     0x7f36d8010c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14278)[0m     @     0x7f36d8033cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14278)[0m     @     0x7f36d5071009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14278)[0m     @     0x7f36d506fc3f at::native::copy_impl()
[2m[36m(pid=14278)[0m     @     0x7f36d5070ed4 at::native::copy_()
[2m[36m(pid=14278)[0m     @     0x7f36d57b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14185)[0m     @     0x7fc7409dbed4 at::native::copy_()
[2m[36m(pid=14185)[0m     @     0x7fc74111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14185)[0m     @     0x7fc741226148 at::Tensor::copy_()
[2m[36m(pid=14185)[0m     @     0x7fc742e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14188)[0m     @     0x7f95da40bed4 at::native::copy_()
[2m[36m(pid=14188)[0m     @     0x7f95dab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14188)[0m     @     0x7f95dac56148 at::Tensor::copy_()
[2m[36m(pid=14188)[0m     @     0x7f95dc84d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14241)[0m     @     0x7f6e1e40bed4 at::native::copy_()
[2m[36m(pid=14241)[0m     @     0x7f6e1eb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14241)[0m     @     0x7f6e1ec56148 at::Tensor::copy_()
[2m[36m(pid=14241)[0m     @     0x7f6e2084d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14194)[0m     @     0x7f45e45f6b53 at::TensorIterator::for_each()
[2m[36m(pid=14194)[0m     @     0x7f45e45f6e11 at::TensorIterator::for_each()
[2m[36m(pid=14194)[0m     @     0x7f45e730fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14194)[0m     @     0x7f45e7332cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14194)[0m     @     0x7f45e4370009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14194)[0m     @     0x7f45e436ec3f at::native::copy_impl()
[2m[36m(pid=14292)[0m     @     0x7fa058568148 at::Tensor::copy_()
[2m[36m(pid=14292)[0m     @     0x7fa05e81ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14292)[0m     @     0x55de4e6e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14292)[0m     @     0x55de4e63bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14292)[0m     @     0x55de4e6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14292)[0m     @     0x55de4e6c7a20 method_vectorcall
[2m[36m(pid=14292)[0m     @     0x55de4e63bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14292)[0m     @     0x55de4e6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14292)[0m     @     0x55de4e6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14292)[0m     @     0x55de4e63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14292)[0m     @     0x55de4e6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14292)[0m     @     0x55de4e6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14292)[0m     @     0x55de4e63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14292)[0m     @     0x55de4e6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14292)[0m     @     0x55de4e6c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14292)[0m     @     0x55de4e63c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14292)[0m     @     0x55de4e6c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14204)[0m     @     0x7f23a0ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14204)[0m     @     0x7f23a0adfc3f at::native::copy_impl()
[2m[36m(pid=14204)[0m     @     0x7f23a0ae0ed4 at::native::copy_()
[2m[36m(pid=14204)[0m     @     0x7f23a12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14197)[0m     @     0x7f5ba45655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14197)[0m     @     0x7f5ba466d148 at::Tensor::copy_()
[2m[36m(pid=14197)[0m     @     0x7f5ba6264989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14263)[0m     @     0x7f468d10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14263)[0m     @     0x7f468d10ac3f at::native::copy_impl()
[2m[36m(pid=14263)[0m     @     0x7f468d10bed4 at::native::copy_()
[2m[36m(pid=14249)[0m     @     0x7ecd2dd755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14249)[0m     @     0x7ecd2de7d148 at::Tensor::copy_()
[2m[36m(pid=14249)[0m     @     0x7ecd2fa74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14243)[0m     @     0x7f14897a15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14243)[0m     @     0x7f14898a9148 at::Tensor::copy_()
[2m[36m(pid=14243)[0m     @     0x7f148b4a0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14247)[0m     @     0x7f69ad63be11 at::TensorIterator::for_each()
[2m[36m(pid=14247)[0m     @     0x7f69b0354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=14247)[0m     @     0x7f69b0377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14273)[0m     @     0x7efbee5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=14273)[0m     @     0x7efbeb61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14273)[0m     @     0x7efbeb619c3f at::native::copy_impl()
[2m[36m(pid=14190)[0m     @     0x7f79a85dc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14190)[0m     @     0x7f79a86e4148 at::Tensor::copy_()
[2m[36m(pid=14190)[0m     @     0x7f79aa2db989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14184)[0m     @     0x7ee3eb922148 at::Tensor::copy_()
[2m[36m(pid=14184)[0m     @     0x7ee3ed519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14275)[0m     @     0x560c96207fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14275)[0m     @     0x560c96162b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14275)[0m     @     0x560c961edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14275)[0m     @     0x560c961eea20 method_vectorcall
[2m[36m(pid=14275)[0m     @     0x560c96162bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14275)[0m     @     0x560c961edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14275)[0m     @     0x560c961ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14275)[0m     @     0x560c96163689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14275)[0m     @     0x560c961edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14275)[0m     @     0x560c961ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14275)[0m     @     0x560c96163689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14275)[0m     @     0x560c961edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14275)[0m     @     0x560c961ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14275)[0m     @     0x560c96163689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14275)[0m     @     0x560c961edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14238)[0m     @     0x55dfb9355a20 method_vectorcall
[2m[36m(pid=14238)[0m     @     0x55dfb92c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14238)[0m     @     0x55dfb9354baf _PyEval_EvalCodeWithName
[2m[36m(pid=14238)[0m     @     0x55dfb9355643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14238)[0m     @     0x55dfb92ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14238)[0m     @     0x55dfb9354baf _PyEval_EvalCodeWithName
[2m[36m(pid=14238)[0m     @     0x55dfb9355643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14238)[0m     @     0x55dfb92ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14238)[0m     @     0x55dfb9354baf _PyEval_EvalCodeWithName
[2m[36m(pid=14238)[0m     @     0x55dfb9355643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14238)[0m     @     0x55dfb92ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14238)[0m     @     0x55dfb9354baf _PyEval_EvalCodeWithName
[2m[36m(pid=14290)[0m     @     0x5559bbd37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14290)[0m     @     0x5559bbdc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14200)[0m     @     0x7fa974cf1ed4 at::native::copy_()
[2m[36m(pid=14200)[0m     @     0x7fa9754345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14200)[0m     @     0x7fa97553c148 at::Tensor::copy_()
[2m[36m(pid=14200)[0m     @     0x7fa977133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14239)[0m     @     0x7f19963495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14239)[0m     @     0x7f1996451148 at::Tensor::copy_()
[2m[36m(pid=14239)[0m     @     0x7f1998048989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14239)[0m     @     0x7f19963495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14210)[0m     @     0x7f6c4f01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14210)[0m     @     0x7f6c4f124148 at::Tensor::copy_()
[2m[36m(pid=14210)[0m     @     0x7f6c50d1b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14193)[0m     @     0x7edeb3a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14193)[0m     @     0x7edeb3b4e148 at::Tensor::copy_()
[2m[36m(pid=14193)[0m     @     0x7edeb5745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14193)[0m     @     0x7edeb3a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14253)[0m     @     0x7fb10be65148 at::Tensor::copy_()
[2m[36m(pid=14253)[0m     @     0x7fb10da5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14253)[0m     @     0x7fb10bd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14253)[0m     @     0x7fb10be65148 at::Tensor::copy_()
[2m[36m(pid=14178)[0m     @     0x7fa8918bb148 at::Tensor::copy_()
[2m[36m(pid=14178)[0m     @     0x7fa897b71bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14178)[0m     @     0x55eef2f69fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14178)[0m     @     0x55eef2ec4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14178)[0m     @     0x55eef2f4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14178)[0m     @     0x55eef2f50a20 method_vectorcall
[2m[36m(pid=14178)[0m     @     0x55eef2ec4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14178)[0m     @     0x55eef2f4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14178)[0m     @     0x55eef2f50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14178)[0m     @     0x55eef2ec5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14178)[0m     @     0x55eef2f4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14178)[0m     @     0x55eef2f50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14178)[0m     @     0x55eef2ec5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14178)[0m     @     0x55eef2f4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14178)[0m     @     0x55eef2f50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14178)[0m     @     0x55eef2ec5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14178)[0m     @     0x55eef2f4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14177)[0m     @     0x7ef4d3910148 at::Tensor::copy_()
[2m[36m(pid=14177)[0m     @     0x7ef4d5507989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14177)[0m     @     0x7ef4d38085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14177)[0m     @     0x7ef4d3910148 at::Tensor::copy_()
[2m[36m(pid=14177)[0m     @     0x7ef4d9bc6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14177)[0m     @     0x5584b4d10fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14177)[0m     @     0x5584b4c6bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14177)[0m     @     0x5584b4cf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14177)[0m     @     0x5584b4cf7a20 method_vectorcall
[2m[36m(pid=14177)[0m     @     0x5584b4c6bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14177)[0m     @     0x5584b4cf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14177)[0m     @     0x5584b4cf7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14177)[0m     @     0x5584b4c6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14177)[0m     @     0x5584b4cf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14177)[0m     @     0x5584b4cf7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14177)[0m     @     0x5584b4c6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14177)[0m     @     0x5584b4cf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14177)[0m     @     0x5584b4cf7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14177)[0m     @     0x5584b4c6c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14177)[0m     @     0x5584b4cf6baf _PyEval_EvalCodeWithName
[2m[36m(pid=14208)[0m     @     0x7fb134687009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14208)[0m     @     0x7fb134685c3f at::native::copy_impl()
[2m[36m(pid=14208)[0m     @     0x7fb134686ed4 at::native::copy_()
[2m[36m(pid=14208)[0m     @     0x7fb134dc95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14213)[0m     @     0x7f5a3088c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14213)[0m     @     0x7f5a3088ac3f at::native::copy_impl()
[2m[36m(pid=14213)[0m     @     0x7f5a3088bed4 at::native::copy_()
[2m[36m(pid=14213)[0m     @     0x7f5a30fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14257)[0m     @     0x7f83f4cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14257)[0m     @     0x7f83f4cf0c3f at::native::copy_impl()
[2m[36m(pid=14257)[0m     @     0x7f83f4cf1ed4 at::native::copy_()
[2m[36m(pid=14257)[0m     @     0x7f83f54345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14296)[0m     @     0x55f09cb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=14296)[0m     @     0x55f09cb36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14296)[0m     @     0x55f09caab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14296)[0m     @     0x55f09cb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=14296)[0m     @     0x55f09cb36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14296)[0m     @     0x55f09caab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14296)[0m     @     0x55f09cb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=14296)[0m     @     0x55f09cb36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14296)[0m     @     0x55f09caab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14296)[0m     @     0x55f09cb35baf _PyEval_EvalCodeWithName
[2m[36m(pid=14195)[0m     @     0x7f12f5d17bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14195)[0m     @     0x5558aaaa9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14195)[0m     @     0x5558aaa04b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14195)[0m     @     0x5558aaa8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14195)[0m     @     0x5558aaa90a20 method_vectorcall
[2m[36m(pid=14195)[0m     @     0x5558aaa04bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14195)[0m     @     0x5558aaa8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14195)[0m     @     0x5558aaa90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14195)[0m     @     0x5558aaa05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14195)[0m     @     0x5558aaa8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14195)[0m     @     0x5558aaa90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14195)[0m     @     0x5558aaa05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14195)[0m     @     0x5558aaa8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14195)[0m     @     0x5558aaa90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14195)[0m     @     0x5558aaa05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14195)[0m     @     0x5558aaa8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14180)[0m     @     0x7ee4c6d5b148 at::Tensor::copy_()
[2m[36m(pid=14180)[0m     @     0x7ee4c8952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14180)[0m     @     0x7ee4c6c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14233)[0m     @     0x7f0844443148 at::Tensor::copy_()
[2m[36m(pid=14233)[0m     @     0x7f084603a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14233)[0m     @     0x7f084433b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14252)[0m     @     0x55a3f6a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=14252)[0m     @     0x55a3f6a2aa20 method_vectorcall
[2m[36m(pid=14252)[0m     @     0x55a3f699ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14252)[0m     @     0x55a3f6a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=14252)[0m     @     0x55a3f6a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14252)[0m     @     0x55a3f699f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14252)[0m     @     0x55a3f6a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=14252)[0m     @     0x55a3f6a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14252)[0m     @     0x55a3f699f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14252)[0m     @     0x55a3f6a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=14252)[0m     @     0x55a3f6a2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14252)[0m     @     0x55a3f699f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14252)[0m     @     0x55a3f6a29baf _PyEval_EvalCodeWithName
[2m[36m(pid=14260)[0m     @     0x55e88cfe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14260)[0m     @     0x55e88cfe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14260)[0m     @     0x55e88cf57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14260)[0m     @     0x55e88cfe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14260)[0m     @     0x55e88cfe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14260)[0m     @     0x55e88cf57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14260)[0m     @     0x55e88cfe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14260)[0m     @     0x55e88cfe2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14260)[0m     @     0x55e88cf57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14260)[0m     @     0x55e88cfe1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14217)[0m     @     0x7f9291745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14269)[0m     @     0x7f4cc2f6c148 at::Tensor::copy_()
[2m[36m(pid=14269)[0m     @     0x7f4cc4b63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14269)[0m     @     0x7f4cc2e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14205)[0m     @     0x7fc147b4e148 at::Tensor::copy_()
[2m[36m(pid=14205)[0m     @     0x7fc149745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14205)[0m     @     0x7fc147a465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14186)[0m     @     0x7faea754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14186)[0m     @     0x7faea584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14186)[0m     @     0x7faea5956148 at::Tensor::copy_()
[2m[36m(pid=14186)[0m     @     0x7faeabc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14186)[0m     @     0x558b2c6a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14186)[0m     @     0x558b2c601b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14186)[0m     @     0x558b2c68cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14186)[0m     @     0x558b2c68da20 method_vectorcall
[2m[36m(pid=14186)[0m     @     0x558b2c601bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14186)[0m     @     0x558b2c68cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14186)[0m     @     0x558b2c68d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14186)[0m     @     0x558b2c602689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14186)[0m     @     0x558b2c68cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14186)[0m     @     0x558b2c68d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14186)[0m     @     0x558b2c602689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14186)[0m     @     0x558b2c68cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14186)[0m     @     0x558b2c68d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14186)[0m     @     0x558b2c602689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14308)[0m     @     0x7f5667863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14308)[0m     @     0x7f5665b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14308)[0m     @     0x7f5665c6c148 at::Tensor::copy_()
[2m[36m(pid=14308)[0m     @     0x7f566bf22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14308)[0m     @     0x55b72fe19fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14308)[0m     @     0x55b72fd74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14308)[0m     @     0x55b72fdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14308)[0m     @     0x55b72fe00a20 method_vectorcall
[2m[36m(pid=14308)[0m     @     0x55b72fd74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14308)[0m     @     0x55b72fdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14308)[0m     @     0x55b72fe00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14308)[0m     @     0x55b72fd75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14308)[0m     @     0x55b72fdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14308)[0m     @     0x55b72fe00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14308)[0m     @     0x55b72fd75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14308)[0m     @     0x55b72fdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14308)[0m     @     0x55b72fe00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14192)[0m     @     0x7f1e2ff315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14192)[0m     @     0x7f1e30039148 at::Tensor::copy_()
[2m[36m(pid=14192)[0m     @     0x7f1e362efbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14192)[0m     @     0x562c66b41fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14192)[0m     @     0x562c66a9cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14192)[0m     @     0x562c66b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=14192)[0m     @     0x562c66b28a20 method_vectorcall
[2m[36m(pid=14192)[0m     @     0x562c66a9cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14192)[0m     @     0x562c66b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=14192)[0m     @     0x562c66b28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14192)[0m     @     0x562c66a9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14192)[0m     @     0x562c66b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=14192)[0m     @     0x562c66b28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14192)[0m     @     0x562c66a9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14192)[0m     @     0x562c66b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=14192)[0m     @     0x562c66b28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14192)[0m     @     0x562c66a9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14276)[0m     @     0x7f9a4f6215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14276)[0m     @     0x7f9a4f729148 at::Tensor::copy_()
[2m[36m(pid=14276)[0m     @     0x7f9a559dfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14276)[0m     @     0x55aa1adbcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14276)[0m     @     0x55aa1ad17b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14276)[0m     @     0x55aa1ada2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14276)[0m     @     0x55aa1ada3a20 method_vectorcall
[2m[36m(pid=14276)[0m     @     0x55aa1ad17bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14276)[0m     @     0x55aa1ada2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14276)[0m     @     0x55aa1ada3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14276)[0m     @     0x55aa1ad18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14276)[0m     @     0x55aa1ada2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14276)[0m     @     0x55aa1ada3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14276)[0m     @     0x55aa1ad18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14276)[0m     @     0x55aa1ada2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14276)[0m     @     0x55aa1ada3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14276)[0m     @     0x55aa1ad18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14276)[0m     @     0x55aa1ada2baf _PyEval_EvalCodeWithName
[2m[36m(pid=14245)[0m     @     0x7f613f5ba148 at::Tensor::copy_()
[2m[36m(pid=14245)[0m     @     0x7f61411b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14278)[0m     @     0x7f36d58bb148 at::Tensor::copy_()
[2m[36m(pid=14278)[0m     @     0x7f36d74b2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14185)[0m     @     0x7fc74111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14185)[0m     @     0x7fc741226148 at::Tensor::copy_()
[2m[36m(pid=14185)[0m     @     0x7fc7474dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14185)[0m     @     0x5563d2b9ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14185)[0m     @     0x5563d2afab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14185)[0m     @     0x5563d2b85baf _PyEval_EvalCodeWithName
[2m[36m(pid=14185)[0m     @     0x5563d2b86a20 method_vectorcall
[2m[36m(pid=14185)[0m     @     0x5563d2afabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14185)[0m     @     0x5563d2b85baf _PyEval_EvalCodeWithName
[2m[36m(pid=14185)[0m     @     0x5563d2b86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14185)[0m     @     0x5563d2afb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14185)[0m     @     0x5563d2b85baf _PyEval_EvalCodeWithName
[2m[36m(pid=14185)[0m     @     0x5563d2b86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14185)[0m     @     0x5563d2afb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14188)[0m     @     0x7f95dab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14188)[0m     @     0x7f95dac56148 at::Tensor::copy_()
[2m[36m(pid=14188)[0m     @     0x7f95e0f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14188)[0m     @     0x55f1dfa83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14188)[0m     @     0x55f1df9deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14188)[0m     @     0x55f1dfa69baf _PyEval_EvalCodeWithName
[2m[36m(pid=14188)[0m     @     0x55f1dfa6aa20 method_vectorcall
[2m[36m(pid=14188)[0m     @     0x55f1df9debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14188)[0m     @     0x55f1dfa69baf _PyEval_EvalCodeWithName
[2m[36m(pid=14188)[0m     @     0x55f1dfa6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14188)[0m     @     0x55f1df9df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14241)[0m     @     0x7f6e1eb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14241)[0m     @     0x7f6e1ec56148 at::Tensor::copy_()
[2m[36m(pid=14241)[0m     @     0x7f6e24f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14241)[0m     @     0x55cdd181ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14241)[0m     @     0x55cdd177ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14241)[0m     @     0x55cdd1805baf _PyEval_EvalCodeWithName
[2m[36m(pid=14241)[0m     @     0x55cdd1806a20 method_vectorcall
[2m[36m(pid=14241)[0m     @     0x55cdd177abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14241)[0m     @     0x55cdd1805baf _PyEval_EvalCodeWithName
[2m[36m(pid=14241)[0m     @     0x55cdd1806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14241)[0m     @     0x55cdd177b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14241)[0m     @     0x55cdd1805baf _PyEval_EvalCodeWithName
[2m[36m(pid=14241)[0m     @     0x55cdd1806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14241)[0m     @     0x55cdd177b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14241)[0m     @     0x55cdd1805baf _PyEval_EvalCodeWithName
[2m[36m(pid=14241)[0m     @     0x55cdd1806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14241)[0m     @     0x55cdd177b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14241)[0m     @     0x55cdd1805baf _PyEval_EvalCodeWithName
[2m[36m(pid=14194)[0m     @     0x7f45e436fed4 at::native::copy_()
[2m[36m(pid=14194)[0m     @     0x7f45e4ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14194)[0m     @     0x7f45e4bba148 at::Tensor::copy_()
[2m[36m(pid=14204)[0m     @     0x7f23a132b148 at::Tensor::copy_()
[2m[36m(pid=14204)[0m     @     0x7f23a2f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14204)[0m     @     0x7f23a12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14197)[0m     @     0x7f5ba45655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14197)[0m     @     0x7f5ba466d148 at::Tensor::copy_()
[2m[36m(pid=14197)[0m     @     0x7f5baa923bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14197)[0m     @     0x5612efc8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14197)[0m     @     0x5612efbe5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14197)[0m     @     0x5612efc70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14197)[0m     @     0x5612efc71a20 method_vectorcall
[2m[36m(pid=14197)[0m     @     0x5612efbe5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14197)[0m     @     0x5612efc70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14197)[0m     @     0x5612efc71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14197)[0m     @     0x5612efbe6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14197)[0m     @     0x5612efc70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14197)[0m     @     0x5612efc71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14197)[0m     @     0x5612efbe6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14197)[0m     @     0x5612efc70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14197)[0m     @     0x5612efc71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14197)[0m     @     0x5612efbe6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14197)[0m     @     0x5612efc70baf _PyEval_EvalCodeWithName
[2m[36m(pid=14263)[0m     @     0x7f468d84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14263)[0m     @     0x7f468d956148 at::Tensor::copy_()
[2m[36m(pid=14263)[0m     @     0x7f468f54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14263)[0m     @     0x7f468d84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14249)[0m     @     0x7ecd2dd755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14249)[0m     @     0x7ecd2de7d148 at::Tensor::copy_()
[2m[36m(pid=14249)[0m     @     0x7ecd34133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14249)[0m     @     0x556555f1efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14249)[0m     @     0x556555e79b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14249)[0m     @     0x556555f04baf _PyEval_EvalCodeWithName
[2m[36m(pid=14249)[0m     @     0x556555f05a20 method_vectorcall
[2m[36m(pid=14249)[0m     @     0x556555e79bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14249)[0m     @     0x556555f04baf _PyEval_EvalCodeWithName
[2m[36m(pid=14249)[0m     @     0x556555f05643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14249)[0m     @     0x556555e7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14249)[0m     @     0x556555f04baf _PyEval_EvalCodeWithName
[2m[36m(pid=14249)[0m     @     0x556555f05643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14249)[0m     @     0x556555e7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14249)[0m     @     0x556555f04baf _PyEval_EvalCodeWithName
[2m[36m(pid=14249)[0m     @     0x556555f05643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14249)[0m     @     0x556555e7a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14249)[0m     @     0x556555f04baf _PyEval_EvalCodeWithName
[2m[36m(pid=14243)[0m     @     0x7f14897a15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14243)[0m     @     0x7f14898a9148 at::Tensor::copy_()
[2m[36m(pid=14243)[0m     @     0x7f148fb5fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14243)[0m     @     0x555a573a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14243)[0m     @     0x555a572ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14243)[0m     @     0x555a5738abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14243)[0m     @     0x555a5738ba20 method_vectorcall
[2m[36m(pid=14243)[0m     @     0x555a572ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14243)[0m     @     0x555a5738abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14243)[0m     @     0x555a5738b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14243)[0m     @     0x555a57300689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14243)[0m     @     0x555a5738abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14243)[0m     @     0x555a5738b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14243)[0m     @     0x555a57300689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14243)[0m     @     0x555a5738abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14243)[0m     @     0x555a5738b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14243)[0m     @     0x555a57300689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14243)[0m     @     0x555a5738abaf _PyEval_EvalCodeWithName
[2m[36m(pid=14247)[0m     @     0x7f69ad3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=14247)[0m     @     0x7f69ad3b3c3f at::native::copy_impl()
[2m[36m(pid=14247)[0m     @     0x7f69ad3b4ed4 at::native::copy_()
[2m[36m(pid=14247)[0m     @     0x7f69adaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14273)[0m     @     0x7efbeb61aed4 at::native::copy_()
[2m[36m(pid=14273)[0m     @     0x7efbebd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14190)[0m     @     0x7f79a85dc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14190)[0m     @     0x7f79a86e4148 at::Tensor::copy_()
[2m[36m(pid=14190)[0m     @     0x7f79ae99abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14190)[0m     @     0x5645d1f7dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14190)[0m     @     0x5645d1ed8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14190)[0m     @     0x5645d1f63baf _PyEval_EvalCodeWithName
[2m[36m(pid=14190)[0m     @     0x5645d1f64a20 method_vectorcall
[2m[36m(pid=14190)[0m     @     0x5645d1ed8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14190)[0m     @     0x5645d1f63baf _PyEval_EvalCodeWithName
[2m[36m(pid=14190)[0m     @     0x5645d1f64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14190)[0m     @     0x5645d1ed9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14190)[0m     @     0x5645d1f63baf _PyEval_EvalCodeWithName
[2m[36m(pid=14190)[0m     @     0x5645d1f64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14190)[0m     @     0x5645d1ed9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14190)[0m     @     0x5645d1f63baf _PyEval_EvalCodeWithName
[2m[36m(pid=14190)[0m     @     0x5645d1f64643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14190)[0m     @     0x5645d1ed9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14190)[0m     @     0x5645d1f63baf _PyEval_EvalCodeWithName
[2m[36m(pid=14184)[0m     @     0x7ee3eb81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14184)[0m     @     0x7ee3eb922148 at::Tensor::copy_()
[2m[36m(pid=14184)[0m     @     0x7ee3f1bd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14184)[0m     @     0x55c38e771fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14184)[0m     @     0x55c38e6ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14184)[0m     @     0x55c38e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=14184)[0m     @     0x55c38e758a20 method_vectorcall
[2m[36m(pid=14184)[0m     @     0x55c38e6ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14184)[0m     @     0x55c38e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=14184)[0m     @     0x55c38e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14184)[0m     @     0x55c38e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14184)[0m     @     0x55c38e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=14184)[0m     @     0x55c38e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14184)[0m     @     0x55c38e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14184)[0m     @     0x55c38e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=14184)[0m     @     0x55c38e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14184)[0m     @     0x55c38e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14184)[0m     @     0x55c38e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=14200)[0m     @     0x7fa9754345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14200)[0m     @     0x7fa97553c148 at::Tensor::copy_()
[2m[36m(pid=14200)[0m     @     0x7fa97b7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14200)[0m     @     0x558754640fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14200)[0m     @     0x55875459bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14200)[0m     @     0x558754626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14200)[0m     @     0x558754627a20 method_vectorcall
[2m[36m(pid=14200)[0m     @     0x55875459bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14200)[0m     @     0x558754626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14200)[0m     @     0x558754627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14200)[0m     @     0x55875459c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14200)[0m     @     0x558754626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14200)[0m     @     0x558754627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14200)[0m     @     0x55875459c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14200)[0m     @     0x558754626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14200)[0m     @     0x558754627643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14200)[0m     @     0x55875459c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14200)[0m     @     0x558754626baf _PyEval_EvalCodeWithName
[2m[36m(pid=14239)[0m     @     0x7f1996451148 at::Tensor::copy_()
[2m[36m(pid=14239)[0m     @     0x7f199c707bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14239)[0m     @     0x5640c9e76fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14239)[0m     @     0x5640c9dd1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14239)[0m     @     0x5640c9e5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14239)[0m     @     0x5640c9e5da20 method_vectorcall
[2m[36m(pid=14239)[0m     @     0x5640c9dd1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14239)[0m     @     0x5640c9e5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14239)[0m     @     0x5640c9e5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14239)[0m     @     0x5640c9dd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14239)[0m     @     0x5640c9e5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14239)[0m     @     0x5640c9e5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14239)[0m     @     0x5640c9dd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14239)[0m     @     0x5640c9e5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14239)[0m     @     0x5640c9e5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14239)[0m     @     0x5640c9dd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14239)[0m     @     0x5640c9e5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14210)[0m     @     0x7f6c4f01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14210)[0m     @     0x7f6c4f124148 at::Tensor::copy_()
[2m[36m(pid=14210)[0m     @     0x7f6c553dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14210)[0m     @     0x55b6e6a0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14210)[0m     @     0x55b6e6966b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14210)[0m     @     0x55b6e69f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14210)[0m     @     0x55b6e69f2a20 method_vectorcall
[2m[36m(pid=14210)[0m     @     0x55b6e6966bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14210)[0m     @     0x55b6e69f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14210)[0m     @     0x55b6e69f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14210)[0m     @     0x55b6e6967689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14210)[0m     @     0x55b6e69f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14210)[0m     @     0x55b6e69f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14210)[0m     @     0x55b6e6967689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14210)[0m     @     0x55b6e69f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14210)[0m     @     0x55b6e69f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14210)[0m     @     0x55b6e6967689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14210)[0m     @     0x55b6e69f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=14193)[0m     @     0x7edeb3b4e148 at::Tensor::copy_()
[2m[36m(pid=14193)[0m     @     0x7edeb9e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14193)[0m     @     0x559b127f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14193)[0m     @     0x559b12754b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14193)[0m     @     0x559b127dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14193)[0m     @     0x559b127e0a20 method_vectorcall
[2m[36m(pid=14193)[0m     @     0x559b12754bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14193)[0m     @     0x559b127dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14193)[0m     @     0x559b127e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14193)[0m     @     0x559b12755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14193)[0m     @     0x559b127dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14193)[0m     @     0x559b127e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14193)[0m     @     0x559b12755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14193)[0m     @     0x559b127dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14193)[0m     @     0x559b127e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14193)[0m     @     0x559b12755689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14193)[0m     @     0x559b127dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14253)[0m     @     0x7fb11211bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14253)[0m     @     0x5559d3d07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14253)[0m     @     0x5559d3c62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14253)[0m     @     0x5559d3cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14253)[0m     @     0x5559d3ceea20 method_vectorcall
[2m[36m(pid=14253)[0m     @     0x5559d3c62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14253)[0m     @     0x5559d3cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14253)[0m     @     0x5559d3cee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14253)[0m     @     0x5559d3c63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14253)[0m     @     0x5559d3cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14253)[0m     @     0x5559d3cee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14253)[0m     @     0x5559d3c63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14253)[0m     @     0x5559d3cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14253)[0m     @     0x5559d3cee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14253)[0m     @     0x5559d3c63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14253)[0m     @     0x5559d3cedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14208)[0m     @     0x7fb134ed1148 at::Tensor::copy_()
[2m[36m(pid=14208)[0m     @     0x7fb136ac8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14208)[0m     @     0x7fb134dc95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14213)[0m     @     0x7f5a310d6148 at::Tensor::copy_()
[2m[36m(pid=14213)[0m     @     0x7f5a32ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14257)[0m     @     0x7f83f553c148 at::Tensor::copy_()
[2m[36m(pid=14257)[0m     @     0x7f83f7133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14180)[0m     @     0x7ee4c6d5b148 at::Tensor::copy_()
[2m[36m(pid=14180)[0m     @     0x7ee4cd011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14180)[0m     @     0x559529dfdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14180)[0m     @     0x559529d58b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14180)[0m     @     0x559529de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14180)[0m     @     0x559529de4a20 method_vectorcall
[2m[36m(pid=14180)[0m     @     0x559529d58bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14180)[0m     @     0x559529de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14180)[0m     @     0x559529de4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14180)[0m     @     0x559529d59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14180)[0m     @     0x559529de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14180)[0m     @     0x559529de4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14180)[0m     @     0x559529d59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14180)[0m     @     0x559529de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14180)[0m     @     0x559529de4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14180)[0m     @     0x559529d59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14180)[0m     @     0x559529de3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14233)[0m     @     0x7f0844443148 at::Tensor::copy_()
[2m[36m(pid=14233)[0m     @     0x7f084a6f9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14233)[0m     @     0x55fb6ffaffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14233)[0m     @     0x55fb6ff0ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14233)[0m     @     0x55fb6ff95baf _PyEval_EvalCodeWithName
[2m[36m(pid=14233)[0m     @     0x55fb6ff96a20 method_vectorcall
[2m[36m(pid=14233)[0m     @     0x55fb6ff0abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14233)[0m     @     0x55fb6ff95baf _PyEval_EvalCodeWithName
[2m[36m(pid=14233)[0m     @     0x55fb6ff96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14233)[0m     @     0x55fb6ff0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14233)[0m     @     0x55fb6ff95baf _PyEval_EvalCodeWithName
[2m[36m(pid=14233)[0m     @     0x55fb6ff96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14233)[0m     @     0x55fb6ff0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14233)[0m     @     0x55fb6ff95baf _PyEval_EvalCodeWithName
[2m[36m(pid=14233)[0m     @     0x55fb6ff96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14233)[0m     @     0x55fb6ff0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14233)[0m     @     0x55fb6ff95baf _PyEval_EvalCodeWithName
[2m[36m(pid=14217)[0m     @     0x7f928fa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14217)[0m     @     0x7f928fb4e148 at::Tensor::copy_()
[2m[36m(pid=14269)[0m     @     0x7f4cc2f6c148 at::Tensor::copy_()
[2m[36m(pid=14269)[0m     @     0x7f4cc9222bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14269)[0m     @     0x557e9eb17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14269)[0m     @     0x557e9ea72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14269)[0m     @     0x557e9eafdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14269)[0m     @     0x557e9eafea20 method_vectorcall
[2m[36m(pid=14269)[0m     @     0x557e9ea72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14269)[0m     @     0x557e9eafdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14269)[0m     @     0x557e9eafe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14269)[0m     @     0x557e9ea73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14269)[0m     @     0x557e9eafdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14269)[0m     @     0x557e9eafe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14269)[0m     @     0x557e9ea73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14269)[0m     @     0x557e9eafdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14269)[0m     @     0x557e9eafe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14269)[0m     @     0x557e9ea73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14269)[0m     @     0x557e9eafdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14205)[0m     @     0x7fc147b4e148 at::Tensor::copy_()
[2m[36m(pid=14205)[0m     @     0x7fc14de04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14205)[0m     @     0x559b0b41efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14205)[0m     @     0x559b0b379b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14205)[0m     @     0x559b0b404baf _PyEval_EvalCodeWithName
[2m[36m(pid=14205)[0m     @     0x559b0b405a20 method_vectorcall
[2m[36m(pid=14205)[0m     @     0x559b0b379bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14205)[0m     @     0x559b0b404baf _PyEval_EvalCodeWithName
[2m[36m(pid=14205)[0m     @     0x559b0b405643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14205)[0m     @     0x559b0b37a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14205)[0m     @     0x559b0b404baf _PyEval_EvalCodeWithName
[2m[36m(pid=14205)[0m     @     0x559b0b405643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14205)[0m     @     0x559b0b37a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14205)[0m     @     0x559b0b404baf _PyEval_EvalCodeWithName
[2m[36m(pid=14205)[0m     @     0x559b0b405643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14205)[0m     @     0x559b0b37a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14205)[0m     @     0x559b0b404baf _PyEval_EvalCodeWithName
[2m[36m(pid=14186)[0m     @     0x558b2c68cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14308)[0m     @     0x55b72fd75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14308)[0m     @     0x55b72fdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14192)[0m     @     0x562c66b27baf _PyEval_EvalCodeWithName
[2m[36m(pid=14245)[0m     @     0x7f613f4b25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14245)[0m     @     0x7f613f5ba148 at::Tensor::copy_()
[2m[36m(pid=14245)[0m     @     0x7f6145870bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14245)[0m     @     0x5606b390dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14245)[0m     @     0x5606b3868b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14245)[0m     @     0x5606b38f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14245)[0m     @     0x5606b38f4a20 method_vectorcall
[2m[36m(pid=14245)[0m     @     0x5606b3868bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14245)[0m     @     0x5606b38f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14245)[0m     @     0x5606b38f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14245)[0m     @     0x5606b3869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14245)[0m     @     0x5606b38f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14245)[0m     @     0x5606b38f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14245)[0m     @     0x5606b3869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14245)[0m     @     0x5606b38f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14245)[0m     @     0x5606b38f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14245)[0m     @     0x5606b3869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14245)[0m     @     0x5606b38f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14278)[0m     @     0x7f36d57b35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14278)[0m     @     0x7f36d58bb148 at::Tensor::copy_()
[2m[36m(pid=14278)[0m     @     0x7f36dbb71bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14278)[0m     @     0x55b6ca0fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14278)[0m     @     0x55b6ca055b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14278)[0m     @     0x55b6ca0e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14278)[0m     @     0x55b6ca0e1a20 method_vectorcall
[2m[36m(pid=14278)[0m     @     0x55b6ca055bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14278)[0m     @     0x55b6ca0e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14278)[0m     @     0x55b6ca0e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14278)[0m     @     0x55b6ca056689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14278)[0m     @     0x55b6ca0e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14278)[0m     @     0x55b6ca0e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14278)[0m     @     0x55b6ca056689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14278)[0m     @     0x55b6ca0e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14278)[0m     @     0x55b6ca0e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14278)[0m     @     0x55b6ca056689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14278)[0m     @     0x55b6ca0e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=14185)[0m     @     0x5563d2b85baf _PyEval_EvalCodeWithName
[2m[36m(pid=14185)[0m     @     0x5563d2b86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14185)[0m     @     0x5563d2afb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14185)[0m     @     0x5563d2b85baf _PyEval_EvalCodeWithName
[2m[36m(pid=14188)[0m     @     0x55f1dfa69baf _PyEval_EvalCodeWithName
[2m[36m(pid=14188)[0m     @     0x55f1dfa6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14188)[0m     @     0x55f1df9df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14188)[0m     @     0x55f1dfa69baf _PyEval_EvalCodeWithName
[2m[36m(pid=14188)[0m     @     0x55f1dfa6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14188)[0m     @     0x55f1df9df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14188)[0m     @     0x55f1dfa69baf _PyEval_EvalCodeWithName
[2m[36m(pid=14194)[0m     @     0x7f45e67b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14194)[0m     @     0x7f45e4ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14204)[0m     @     0x7f23a132b148 at::Tensor::copy_()
[2m[36m(pid=14204)[0m     @     0x7f23a75e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14204)[0m     @     0x55f2ecb2dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14204)[0m     @     0x55f2eca88b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14204)[0m     @     0x55f2ecb13baf _PyEval_EvalCodeWithName
[2m[36m(pid=14204)[0m     @     0x55f2ecb14a20 method_vectorcall
[2m[36m(pid=14204)[0m     @     0x55f2eca88bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14204)[0m     @     0x55f2ecb13baf _PyEval_EvalCodeWithName
[2m[36m(pid=14204)[0m     @     0x55f2ecb14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14204)[0m     @     0x55f2eca89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14204)[0m     @     0x55f2ecb13baf _PyEval_EvalCodeWithName
[2m[36m(pid=14204)[0m     @     0x55f2ecb14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14204)[0m     @     0x55f2eca89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14204)[0m     @     0x55f2ecb13baf _PyEval_EvalCodeWithName
[2m[36m(pid=14204)[0m     @     0x55f2ecb14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14204)[0m     @     0x55f2eca89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14204)[0m     @     0x55f2ecb13baf _PyEval_EvalCodeWithName
[2m[36m(pid=14263)[0m     @     0x7f468d956148 at::Tensor::copy_()
[2m[36m(pid=14263)[0m     @     0x7f4693c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14263)[0m     @     0x558f2dcbdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14263)[0m     @     0x558f2dc18b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14263)[0m     @     0x558f2dca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14263)[0m     @     0x558f2dca4a20 method_vectorcall
[2m[36m(pid=14263)[0m     @     0x558f2dc18bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14263)[0m     @     0x558f2dca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14263)[0m     @     0x558f2dca4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14263)[0m     @     0x558f2dc19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14263)[0m     @     0x558f2dca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14263)[0m     @     0x558f2dca4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14263)[0m     @     0x558f2dc19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14263)[0m     @     0x558f2dca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14263)[0m     @     0x558f2dca4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14263)[0m     @     0x558f2dc19689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14263)[0m     @     0x558f2dca3baf _PyEval_EvalCodeWithName
[2m[36m(pid=14247)[0m     @     0x7f69adbff148 at::Tensor::copy_()
[2m[36m(pid=14273)[0m     @     0x7efbebe65148 at::Tensor::copy_()
[2m[36m(pid=14273)[0m     @     0x7efbeda5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14208)[0m     @     0x7fb134ed1148 at::Tensor::copy_()
[2m[36m(pid=14208)[0m     @     0x7fb13b187bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14208)[0m     @     0x55ebb1d6dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14208)[0m     @     0x55ebb1cc8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14208)[0m     @     0x55ebb1d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=14208)[0m     @     0x55ebb1d54a20 method_vectorcall
[2m[36m(pid=14208)[0m     @     0x55ebb1cc8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14208)[0m     @     0x55ebb1d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=14208)[0m     @     0x55ebb1d54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14208)[0m     @     0x55ebb1cc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14208)[0m     @     0x55ebb1d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=14208)[0m     @     0x55ebb1d54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14208)[0m     @     0x55ebb1cc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14208)[0m     @     0x55ebb1d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=14208)[0m     @     0x55ebb1d54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14208)[0m     @     0x55ebb1cc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14208)[0m     @     0x55ebb1d53baf _PyEval_EvalCodeWithName
[2m[36m(pid=14213)[0m     @     0x7f5a30fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14213)[0m     @     0x7f5a310d6148 at::Tensor::copy_()
[2m[36m(pid=14213)[0m     @     0x7f5a3738cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14213)[0m     @     0x55e405416fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14213)[0m     @     0x55e405371b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14213)[0m     @     0x55e4053fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14213)[0m     @     0x55e4053fda20 method_vectorcall
[2m[36m(pid=14213)[0m     @     0x55e405371bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14213)[0m     @     0x55e4053fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14213)[0m     @     0x55e4053fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14213)[0m     @     0x55e405372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14213)[0m     @     0x55e4053fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14213)[0m     @     0x55e4053fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14213)[0m     @     0x55e405372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14213)[0m     @     0x55e4053fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14213)[0m     @     0x55e4053fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14213)[0m     @     0x55e405372689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14213)[0m     @     0x55e4053fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14257)[0m     @     0x7f83f54345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14257)[0m     @     0x7f83f553c148 at::Tensor::copy_()
[2m[36m(pid=14257)[0m     @     0x7f83fb7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14257)[0m     @     0x560d30151fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14257)[0m     @     0x560d300acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14257)[0m     @     0x560d30137baf _PyEval_EvalCodeWithName
[2m[36m(pid=14257)[0m     @     0x560d30138a20 method_vectorcall
[2m[36m(pid=14257)[0m     @     0x560d300acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14257)[0m     @     0x560d30137baf _PyEval_EvalCodeWithName
[2m[36m(pid=14257)[0m     @     0x560d30138643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14257)[0m     @     0x560d300ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14257)[0m     @     0x560d30137baf _PyEval_EvalCodeWithName
[2m[36m(pid=14257)[0m     @     0x560d30138643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14257)[0m     @     0x560d300ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14257)[0m     @     0x560d30137baf _PyEval_EvalCodeWithName
[2m[36m(pid=14257)[0m     @     0x560d30138643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14257)[0m     @     0x560d300ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14257)[0m     @     0x560d30137baf _PyEval_EvalCodeWithName
[2m[36m(pid=14217)[0m     @     0x7f9295e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14217)[0m     @     0x55d726aeefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14217)[0m     @     0x55d726a49b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14217)[0m     @     0x55d726ad4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14217)[0m     @     0x55d726ad5a20 method_vectorcall
[2m[36m(pid=14217)[0m     @     0x55d726a49bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14217)[0m     @     0x55d726ad4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14217)[0m     @     0x55d726ad5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14217)[0m     @     0x55d726a4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14217)[0m     @     0x55d726ad4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14217)[0m     @     0x55d726ad5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14217)[0m     @     0x55d726a4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14217)[0m     @     0x55d726ad4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14217)[0m     @     0x55d726ad5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14217)[0m     @     0x55d726a4a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14217)[0m     @     0x55d726ad4baf _PyEval_EvalCodeWithName
[2m[36m(pid=14194)[0m     @     0x7f45e4bba148 at::Tensor::copy_()
[2m[36m(pid=14194)[0m     @     0x7f45eae70bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14194)[0m     @     0x55cedbfa2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14194)[0m     @     0x55cedbefdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14194)[0m     @     0x55cedbf88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14194)[0m     @     0x55cedbf89a20 method_vectorcall
[2m[36m(pid=14194)[0m     @     0x55cedbefdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14194)[0m     @     0x55cedbf88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14194)[0m     @     0x55cedbf89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14194)[0m     @     0x55cedbefe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14194)[0m     @     0x55cedbf88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14194)[0m     @     0x55cedbf89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14194)[0m     @     0x55cedbefe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14194)[0m     @     0x55cedbf88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14194)[0m     @     0x55cedbf89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14194)[0m     @     0x55cedbefe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14194)[0m     @     0x55cedbf88baf _PyEval_EvalCodeWithName
[2m[36m(pid=14247)[0m     @     0x7f69af7f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=14247)[0m     @     0x7f69adaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14247)[0m     @     0x7f69adbff148 at::Tensor::copy_()
[2m[36m(pid=14273)[0m     @     0x7efbebd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=14273)[0m     @     0x7efbebe65148 at::Tensor::copy_()
2020-11-05 11:00:49,638	ERROR trial_runner.py:567 -- Trial PPO_jss_env_25686_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=14287, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 11:00:49,640	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
[2m[36m(pid=14247)[0m     @     0x7f69b3eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14247)[0m     @     0x55be6ea28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14247)[0m     @     0x55be6e983b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14247)[0m     @     0x55be6ea0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14247)[0m     @     0x55be6ea0fa20 method_vectorcall
[2m[36m(pid=14247)[0m     @     0x55be6e983bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14247)[0m     @     0x55be6ea0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14247)[0m     @     0x55be6ea0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14247)[0m     @     0x55be6e984689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14247)[0m     @     0x55be6ea0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14247)[0m     @     0x55be6ea0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14247)[0m     @     0x55be6e984689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14247)[0m     @     0x55be6ea0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14247)[0m     @     0x55be6ea0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14247)[0m     @     0x55be6e984689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14247)[0m     @     0x55be6ea0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=14273)[0m     @     0x7efbf211bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=14273)[0m     @     0x55ac3ff99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=14273)[0m     @     0x55ac3fef4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14273)[0m     @     0x55ac3ff7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14273)[0m     @     0x55ac3ff80a20 method_vectorcall
[2m[36m(pid=14273)[0m     @     0x55ac3fef4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14273)[0m     @     0x55ac3ff7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14273)[0m     @     0x55ac3ff80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14273)[0m     @     0x55ac3fef5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14273)[0m     @     0x55ac3ff7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14273)[0m     @     0x55ac3ff80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14273)[0m     @     0x55ac3fef5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14273)[0m     @     0x55ac3ff7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14273)[0m     @     0x55ac3ff80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=14273)[0m     @     0x55ac3fef5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=14273)[0m     @     0x55ac3ff7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=14287)[0m E1105 11:00:49.631265 14287 15440 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=14287)[0m E1105 11:00:49.631458 14287 15440 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 11:00:49,661	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
[2m[36m(pid=14287)[0m E1105 11:00:49.647682 14287 15440 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=10a4a4113c6c36ea43fb47bd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=14287)[0m E1105 11:00:49.652459 14287 15440 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=14287)[0m E1105 11:00:49.652621 14287 15440 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=14287)[0m E1105 11:00:49.652688 14287 15440 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=37f711ca0d66f5bd4100f4fd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 11:00:49,675	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 11:00:49,676	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
== Status ==
Memory usage on this node: 24.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.47 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_25686_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_25686_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_25686_00000_0_2020-11-05_11-00-42/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.47 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_25686_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_25686_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_25686_00000_0_2020-11-05_11-00-42/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_25686_00000])
2020-11-05 11:00:49,686	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8edbbd3001000000.
