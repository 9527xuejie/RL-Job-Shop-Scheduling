2020-11-05 10:37:45,745	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_f1ddf_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=31747)[0m 2020-11-05 10:37:48,490	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=31747)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=31747)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=31747)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=31747)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=31747)[0m 
[2m[36m(pid=31747)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=31748)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31748)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31748)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31748)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31748)[0m *** SIGSEGV (@0x0) received by PID 31748 (TID 0x7f44045cd700) from PID 0; stack trace: ***
[2m[36m(pid=31748)[0m     @     0x7f44041a6390 (unknown)
[2m[36m(pid=31748)[0m     @     0x7f150401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31748)[0m     @     0x7f15037477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31748)[0m     @     0x7f150374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31668)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31668)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31668)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31668)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31668)[0m *** SIGSEGV (@0x0) received by PID 31668 (TID 0x7fd7217f3700) from PID 0; stack trace: ***
[2m[36m(pid=31668)[0m     @     0x7fd7213cc390 (unknown)
[2m[36m(pid=31668)[0m     @     0x7fa82135ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31668)[0m     @     0x7fa820a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31668)[0m     @     0x7fa820a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31687)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31687)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31687)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31687)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31687)[0m *** SIGSEGV (@0x0) received by PID 31687 (TID 0x7f41e27d2700) from PID 0; stack trace: ***
[2m[36m(pid=31687)[0m     @     0x7f41e23ab390 (unknown)
[2m[36m(pid=31687)[0m     @     0x7f12e234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31687)[0m     @     0x7f12e1a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31703)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31703)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31703)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31703)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31703)[0m *** SIGSEGV (@0x0) received by PID 31703 (TID 0x7f6130930700) from PID 0; stack trace: ***
[2m[36m(pid=31703)[0m     @     0x7f6130509390 (unknown)
[2m[36m(pid=31703)[0m     @     0x7f3230333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31703)[0m     @     0x7f322fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31699)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31699)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31699)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31699)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31699)[0m *** SIGSEGV (@0x0) received by PID 31699 (TID 0x7f71b3bd3700) from PID 0; stack trace: ***
[2m[36m(pid=31699)[0m     @     0x7f71b37ac390 (unknown)
[2m[36m(pid=31699)[0m     @     0x7f42b361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31699)[0m     @     0x7f42b2d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31699)[0m     @     0x7f42b2d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31699)[0m     @     0x7f42b2d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=31693)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31693)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31693)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31693)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31693)[0m *** SIGSEGV (@0x0) received by PID 31693 (TID 0x7f719c89d700) from PID 0; stack trace: ***
[2m[36m(pid=31693)[0m     @     0x7f719c476390 (unknown)
[2m[36m(pid=31693)[0m     @     0x7f429c3e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31693)[0m     @     0x7f429bb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31693)[0m     @     0x7f429bb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31693)[0m     @     0x7f429bb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=31720)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31720)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31720)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31720)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31720)[0m *** SIGSEGV (@0x0) received by PID 31720 (TID 0x7fa62e18b700) from PID 0; stack trace: ***
[2m[36m(pid=31720)[0m     @     0x7fa62dd64390 (unknown)
[2m[36m(pid=31720)[0m     @     0x7f772dd12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31720)[0m     @     0x7f772d43d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31720)[0m     @     0x7f772d4408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31720)[0m     @     0x7f772d440ad3 at::TensorIterator::for_each()
[2m[36m(pid=31720)[0m     @     0x7f772d440d91 at::TensorIterator::for_each()
[2m[36m(pid=31720)[0m     @     0x7f772dd23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31719)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31719)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31719)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31719)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31719)[0m *** SIGSEGV (@0x0) received by PID 31719 (TID 0x7f0ce9999700) from PID 0; stack trace: ***
[2m[36m(pid=31719)[0m     @     0x7f0ce9572390 (unknown)
[2m[36m(pid=31719)[0m     @     0x7edde94e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31719)[0m     @     0x7edde8c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31719)[0m     @     0x7edde8c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31719)[0m     @     0x7edde8c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=31719)[0m     @     0x7edde8c11d91 at::TensorIterator::for_each()
[2m[36m(pid=31646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31646)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31646)[0m *** SIGSEGV (@0x0) received by PID 31646 (TID 0x7fd73ef6f700) from PID 0; stack trace: ***
[2m[36m(pid=31646)[0m     @     0x7fd73eb48390 (unknown)
[2m[36m(pid=31646)[0m     @     0x7fa83ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31646)[0m     @     0x7fa83e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31646)[0m     @     0x7fa83e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31646)[0m     @     0x7fa83e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=31646)[0m     @     0x7fa83e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=31686)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31686)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31686)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31686)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31686)[0m *** SIGSEGV (@0x0) received by PID 31686 (TID 0x7fa6b6358700) from PID 0; stack trace: ***
[2m[36m(pid=31686)[0m     @     0x7fa6b5f31390 (unknown)
[2m[36m(pid=31686)[0m     @     0x7f77b5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31686)[0m     @     0x7f77b554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31686)[0m     @     0x7f77b55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31686)[0m     @     0x7f77b5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=31723)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31723)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31723)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31723)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31723)[0m *** SIGSEGV (@0x0) received by PID 31723 (TID 0x7f4e4a2ab700) from PID 0; stack trace: ***
[2m[36m(pid=31723)[0m     @     0x7f4e49e84390 (unknown)
[2m[36m(pid=31723)[0m     @     0x7f1f49df7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31723)[0m     @     0x7f1f495227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31723)[0m     @     0x7f1f495258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31723)[0m     @     0x7f1f49525ad3 at::TensorIterator::for_each()
[2m[36m(pid=31726)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31726)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31726)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31726)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31726)[0m *** SIGSEGV (@0x0) received by PID 31726 (TID 0x7f1a4760c700) from PID 0; stack trace: ***
[2m[36m(pid=31726)[0m     @     0x7f1a471e5390 (unknown)
[2m[36m(pid=31726)[0m     @     0x7eeb47124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31726)[0m     @     0x7eeb4684f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31726)[0m     @     0x7eeb468528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31726)[0m     @     0x7eeb46852ad3 at::TensorIterator::for_each()
[2m[36m(pid=31666)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31666)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31666)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31666)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31666)[0m *** SIGSEGV (@0x0) received by PID 31666 (TID 0x7fd9ce041700) from PID 0; stack trace: ***
[2m[36m(pid=31666)[0m     @     0x7fd9cdc1a390 (unknown)
[2m[36m(pid=31666)[0m     @     0x7faacdb9ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31666)[0m     @     0x7faacd2ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31666)[0m     @     0x7faacd2cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31666)[0m     @     0x7faacd2cdad3 at::TensorIterator::for_each()
[2m[36m(pid=31731)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31731)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31731)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31736)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31736)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31736)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31736)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31736)[0m *** SIGSEGV (@0x0) received by PID 31736 (TID 0x7f77bc077700) from PID 0; stack trace: ***
[2m[36m(pid=31736)[0m     @     0x7f77bbc50390 (unknown)
[2m[36m(pid=31736)[0m     @     0x7f48bb9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31736)[0m     @     0x7f48bb0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31736)[0m     @     0x7f48bb0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31736)[0m     @     0x7f48bb0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=31729)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31729)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31729)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31729)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31729)[0m *** SIGSEGV (@0x0) received by PID 31729 (TID 0x7f9971463700) from PID 0; stack trace: ***
[2m[36m(pid=31729)[0m     @     0x7f997103c390 (unknown)
[2m[36m(pid=31729)[0m     @     0x7f6a70f4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31729)[0m     @     0x7f6a7067a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31729)[0m     @     0x7f6a7067d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31729)[0m     @     0x7f6a7067dad3 at::TensorIterator::for_each()
[2m[36m(pid=31729)[0m     @     0x7f6a7067dd91 at::TensorIterator::for_each()
[2m[36m(pid=31729)[0m     @     0x7f6a70f60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31724)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31724)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31724)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31724)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31724)[0m *** SIGSEGV (@0x0) received by PID 31724 (TID 0x7faa98f8f700) from PID 0; stack trace: ***
[2m[36m(pid=31724)[0m     @     0x7faa98b68390 (unknown)
[2m[36m(pid=31724)[0m     @     0x7f7b98b15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31724)[0m     @     0x7f7b982407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31724)[0m     @     0x7f7b982438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31724)[0m     @     0x7f7b98243ad3 at::TensorIterator::for_each()
[2m[36m(pid=31625)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31625)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31665)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31665)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31665)[0m *** Aborted at 1604572673 (unix time) try "date -d @1604572673" if you are using GNU date ***
[2m[36m(pid=31665)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31665)[0m *** SIGSEGV (@0x0) received by PID 31665 (TID 0x7f1904594700) from PID 0; stack trace: ***
[2m[36m(pid=31665)[0m     @     0x7f190416d390 (unknown)
[2m[36m(pid=31665)[0m     @     0x7eea0401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31665)[0m     @     0x7eea037477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31665)[0m     @     0x7eea0374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31665)[0m     @     0x7eea0374aad3 at::TensorIterator::for_each()
[2m[36m(pid=31665)[0m     @     0x7eea0374ad91 at::TensorIterator::for_each()
[2m[36m(pid=31660)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31660)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31660)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31677)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31716)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31694)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31638)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31638)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31638)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31638)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31638)[0m *** SIGSEGV (@0x0) received by PID 31638 (TID 0x7f4992e10700) from PID 0; stack trace: ***
[2m[36m(pid=31700)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31700)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31700)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31700)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31700)[0m *** SIGSEGV (@0x0) received by PID 31700 (TID 0x7f7ba75ee700) from PID 0; stack trace: ***
[2m[36m(pid=31616)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31616)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31616)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31612)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31612)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31612)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31620)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31620)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31620)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31620)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31620)[0m *** SIGSEGV (@0x0) received by PID 31620 (TID 0x7faaec7c4700) from PID 0; stack trace: ***
[2m[36m(pid=31619)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31619)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31619)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31619)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31619)[0m *** SIGSEGV (@0x0) received by PID 31619 (TID 0x7feda5247700) from PID 0; stack trace: ***
[2m[36m(pid=31619)[0m     @     0x7feda4e20390 (unknown)
[2m[36m(pid=31619)[0m     @     0x7fbea4da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31618)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31618)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31618)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31618)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31618)[0m *** SIGSEGV (@0x0) received by PID 31618 (TID 0x7faf6098b700) from PID 0; stack trace: ***
[2m[36m(pid=31683)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31683)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31683)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31683)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31683)[0m *** SIGSEGV (@0x0) received by PID 31683 (TID 0x7f127ddd9700) from PID 0; stack trace: ***
[2m[36m(pid=31641)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31641)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31641)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31672)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31672)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31672)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31672)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31672)[0m *** SIGSEGV (@0x0) received by PID 31672 (TID 0x7f624b63d700) from PID 0; stack trace: ***
[2m[36m(pid=31697)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31697)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31697)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31608)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31608)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31608)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31608)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31608)[0m *** SIGSEGV (@0x0) received by PID 31608 (TID 0x7f2beed6b700) from PID 0; stack trace: ***
[2m[36m(pid=31608)[0m     @     0x7f2bee944390 (unknown)
[2m[36m(pid=31624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31624)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31606)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31606)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31606)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31615)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31615)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31615)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31615)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31615)[0m *** SIGSEGV (@0x0) received by PID 31615 (TID 0x7f6ce3b4b700) from PID 0; stack trace: ***
[2m[36m(pid=31615)[0m     @     0x7f6ce3724390 (unknown)
[2m[36m(pid=31695)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31695)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31695)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31695)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31695)[0m *** SIGSEGV (@0x0) received by PID 31695 (TID 0x7f741810a700) from PID 0; stack trace: ***
[2m[36m(pid=31748)[0m     @     0x7f150374aad3 at::TensorIterator::for_each()
[2m[36m(pid=31748)[0m     @     0x7f150374ad91 at::TensorIterator::for_each()
[2m[36m(pid=31748)[0m     @     0x7f150402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31748)[0m     @     0x7f1504050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31748)[0m     @     0x7f15034f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31748)[0m     @     0x7f15034f0388 at::native::copy_impl()
[2m[36m(pid=31748)[0m     @     0x7f15034f25a4 at::native::copy_()
[2m[36m(pid=31614)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31614)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31614)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31614)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31614)[0m *** SIGSEGV (@0x0) received by PID 31614 (TID 0x7f4d72b75700) from PID 0; stack trace: ***
[2m[36m(pid=31614)[0m     @     0x7f4d7274e390 (unknown)
[2m[36m(pid=31614)[0m     @     0x7f1e725a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31668)[0m     @     0x7fa820a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=31668)[0m     @     0x7fa820a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=31668)[0m     @     0x7fa821370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31668)[0m     @     0x7fa821393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31668)[0m     @     0x7fa820835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31668)[0m     @     0x7fa820833388 at::native::copy_impl()
[2m[36m(pid=31668)[0m     @     0x7fa8208355a4 at::native::copy_()
[2m[36m(pid=31687)[0m     @     0x7f12e1a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31687)[0m     @     0x7f12e1a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=31687)[0m     @     0x7f12e1a79d91 at::TensorIterator::for_each()
[2m[36m(pid=31687)[0m     @     0x7f12e235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31687)[0m     @     0x7f12e237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31687)[0m     @     0x7f12e1821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31687)[0m     @     0x7f12e181f388 at::native::copy_impl()
[2m[36m(pid=31703)[0m     @     0x7f322fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31703)[0m     @     0x7f322fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=31703)[0m     @     0x7f322fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=31703)[0m     @     0x7f3230344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31703)[0m     @     0x7f3230367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31703)[0m     @     0x7f322f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31703)[0m     @     0x7f322f807388 at::native::copy_impl()
[2m[36m(pid=31699)[0m     @     0x7f42b2d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=31699)[0m     @     0x7f42b3630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31699)[0m     @     0x7f42b3653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31699)[0m     @     0x7f42b2af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31699)[0m     @     0x7f42b2af3388 at::native::copy_impl()
[2m[36m(pid=31693)[0m     @     0x7f429bb11d91 at::TensorIterator::for_each()
[2m[36m(pid=31693)[0m     @     0x7f429c3f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31693)[0m     @     0x7f429c417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31693)[0m     @     0x7f429b8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31693)[0m     @     0x7f429b8b7388 at::native::copy_impl()
[2m[36m(pid=31720)[0m     @     0x7f772dd46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31720)[0m     @     0x7f772d1e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31720)[0m     @     0x7f772d1e6388 at::native::copy_impl()
[2m[36m(pid=31720)[0m     @     0x7f772d1e85a4 at::native::copy_()
[2m[36m(pid=31720)[0m     @     0x7f772d8d34f5 at::Tensor::copy_()
[2m[36m(pid=31719)[0m     @     0x7edde94f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31719)[0m     @     0x7edde9517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31719)[0m     @     0x7edde89b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31719)[0m     @     0x7edde89b7388 at::native::copy_impl()
[2m[36m(pid=31719)[0m     @     0x7edde89b95a4 at::native::copy_()
[2m[36m(pid=31646)[0m     @     0x7fa83ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31646)[0m     @     0x7fa83ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31646)[0m     @     0x7fa83def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31646)[0m     @     0x7fa83def5388 at::native::copy_impl()
[2m[36m(pid=31646)[0m     @     0x7fa83def75a4 at::native::copy_()
[2m[36m(pid=31686)[0m     @     0x7f77b5552d91 at::TensorIterator::for_each()
[2m[36m(pid=31686)[0m     @     0x7f77b5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31686)[0m     @     0x7f77b5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31686)[0m     @     0x7f77b52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31723)[0m     @     0x7f1f49525d91 at::TensorIterator::for_each()
[2m[36m(pid=31723)[0m     @     0x7f1f49e08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31723)[0m     @     0x7f1f49e2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31723)[0m     @     0x7f1f492cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31723)[0m     @     0x7f1f492cb388 at::native::copy_impl()
[2m[36m(pid=31726)[0m     @     0x7eeb46852d91 at::TensorIterator::for_each()
[2m[36m(pid=31726)[0m     @     0x7eeb47135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31726)[0m     @     0x7eeb47158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31726)[0m     @     0x7eeb465faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31726)[0m     @     0x7eeb465f8388 at::native::copy_impl()
[2m[36m(pid=31726)[0m     @     0x7eeb465fa5a4 at::native::copy_()
[2m[36m(pid=31713)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31713)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31713)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31713)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31713)[0m *** SIGSEGV (@0x0) received by PID 31713 (TID 0x7f1f5c9c4700) from PID 0; stack trace: ***
[2m[36m(pid=31617)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31617)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31617)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31617)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31617)[0m *** SIGSEGV (@0x0) received by PID 31617 (TID 0x7fe771b6b700) from PID 0; stack trace: ***
[2m[36m(pid=31621)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31621)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31621)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31621)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31621)[0m *** SIGSEGV (@0x0) received by PID 31621 (TID 0x7ff95acf5700) from PID 0; stack trace: ***
[2m[36m(pid=31621)[0m     @     0x7ff95a8ce390 (unknown)
[2m[36m(pid=31621)[0m     @     0x7fca5a70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31666)[0m     @     0x7faacd2cdd91 at::TensorIterator::for_each()
[2m[36m(pid=31666)[0m     @     0x7faacdbb0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31666)[0m     @     0x7faacdbd3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31666)[0m     @     0x7faacd075a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31666)[0m     @     0x7faacd073388 at::native::copy_impl()
[2m[36m(pid=31628)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31628)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31628)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31628)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31628)[0m *** SIGSEGV (@0x0) received by PID 31628 (TID 0x7fc345cb5700) from PID 0; stack trace: ***
[2m[36m(pid=31607)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31607)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31607)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31607)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31607)[0m *** SIGSEGV (@0x0) received by PID 31607 (TID 0x7f4f2727c700) from PID 0; stack trace: ***
[2m[36m(pid=31607)[0m     @     0x7f4f26e55390 (unknown)
[2m[36m(pid=31627)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31627)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31627)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31627)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31627)[0m *** SIGSEGV (@0x0) received by PID 31627 (TID 0x7fa2cd300700) from PID 0; stack trace: ***
[2m[36m(pid=31643)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31643)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31643)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31643)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31643)[0m *** SIGSEGV (@0x0) received by PID 31643 (TID 0x7f219473f700) from PID 0; stack trace: ***
[2m[36m(pid=31643)[0m     @     0x7f2194318390 (unknown)
[2m[36m(pid=31643)[0m     @     0x7ef2942b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31643)[0m     @     0x7ef2939dc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31711)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31711)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31711)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31711)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31711)[0m *** SIGSEGV (@0x0) received by PID 31711 (TID 0x7f8438d01700) from PID 0; stack trace: ***
[2m[36m(pid=31731)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31731)[0m *** SIGSEGV (@0x0) received by PID 31731 (TID 0x7f4cc04b8700) from PID 0; stack trace: ***
[2m[36m(pid=31731)[0m     @     0x7f4cc0091390 (unknown)
[2m[36m(pid=31731)[0m     @     0x7f1dbfd2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31731)[0m     @     0x7f1dbf4577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31736)[0m     @     0x7f48bb0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=31736)[0m     @     0x7f48bb9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31736)[0m     @     0x7f48bb9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31736)[0m     @     0x7f48bae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31736)[0m     @     0x7f48bae99388 at::native::copy_impl()
[2m[36m(pid=31736)[0m     @     0x7f48bae9b5a4 at::native::copy_()
[2m[36m(pid=31729)[0m     @     0x7f6a70f83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31729)[0m     @     0x7f6a70425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31729)[0m     @     0x7f6a70423388 at::native::copy_impl()
[2m[36m(pid=31729)[0m     @     0x7f6a704255a4 at::native::copy_()
[2m[36m(pid=31724)[0m     @     0x7f7b98243d91 at::TensorIterator::for_each()
[2m[36m(pid=31724)[0m     @     0x7f7b98b26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31724)[0m     @     0x7f7b98b49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31724)[0m     @     0x7f7b97feba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31724)[0m     @     0x7f7b97fe9388 at::native::copy_impl()
[2m[36m(pid=31625)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31625)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31625)[0m *** SIGSEGV (@0x0) received by PID 31625 (TID 0x7f2d7b027700) from PID 0; stack trace: ***
[2m[36m(pid=31625)[0m     @     0x7f2d7ac00390 (unknown)
[2m[36m(pid=31625)[0m     @     0x7efe7aad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31665)[0m     @     0x7eea0402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31665)[0m     @     0x7eea04050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31665)[0m     @     0x7eea034f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31665)[0m     @     0x7eea034f0388 at::native::copy_impl()
[2m[36m(pid=31665)[0m     @     0x7eea034f25a4 at::native::copy_()
[2m[36m(pid=31633)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31633)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31633)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31633)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31633)[0m *** SIGSEGV (@0x0) received by PID 31633 (TID 0x7fdb9da58700) from PID 0; stack trace: ***
[2m[36m(pid=31611)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31611)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31611)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31611)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31611)[0m *** SIGSEGV (@0x0) received by PID 31611 (TID 0x7f58c7546700) from PID 0; stack trace: ***
[2m[36m(pid=31660)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31660)[0m *** SIGSEGV (@0x0) received by PID 31660 (TID 0x7f53abd94700) from PID 0; stack trace: ***
[2m[36m(pid=31660)[0m     @     0x7f53ab96d390 (unknown)
[2m[36m(pid=31660)[0m     @     0x7f24ab751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31660)[0m     @     0x7f24aae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31610)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31610)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31610)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31610)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31610)[0m *** SIGSEGV (@0x0) received by PID 31610 (TID 0x7f09a4512700) from PID 0; stack trace: ***
[2m[36m(pid=31610)[0m     @     0x7f09a40eb390 (unknown)
[2m[36m(pid=31610)[0m     @     0x7edaa401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31610)[0m     @     0x7edaa37477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31610)[0m     @     0x7edaa374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31662)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31662)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31662)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31661)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31661)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31661)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31661)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31661)[0m *** SIGSEGV (@0x0) received by PID 31661 (TID 0x7fb03ff58700) from PID 0; stack trace: ***
[2m[36m(pid=31661)[0m     @     0x7fb03fb31390 (unknown)
[2m[36m(pid=31690)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31690)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31690)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31677)[0m *** SIGSEGV (@0x0) received by PID 31677 (TID 0x7f5a70f0f700) from PID 0; stack trace: ***
[2m[36m(pid=31677)[0m     @     0x7f5a70ae8390 (unknown)
[2m[36m(pid=31677)[0m     @     0x7f2b7097ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31677)[0m     @     0x7f2b700aa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31716)[0m *** SIGSEGV (@0x0) received by PID 31716 (TID 0x7fad2b41c700) from PID 0; stack trace: ***
[2m[36m(pid=31716)[0m     @     0x7fad2aff5390 (unknown)
[2m[36m(pid=31716)[0m     @     0x7f7e2af94f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31716)[0m     @     0x7f7e2a6bf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31681)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31681)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31681)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31681)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31681)[0m *** SIGSEGV (@0x0) received by PID 31681 (TID 0x7fc3ef075700) from PID 0; stack trace: ***
[2m[36m(pid=31681)[0m     @     0x7fc3eec4e390 (unknown)
[2m[36m(pid=31626)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31626)[0m *** SIGSEGV (@0x0) received by PID 31626 (TID 0x7fb05fcfa700) from PID 0; stack trace: ***
[2m[36m(pid=31626)[0m     @     0x7fb05f8d3390 (unknown)
[2m[36m(pid=31626)[0m     @     0x7f815f751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31626)[0m     @     0x7f815ee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31679)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31679)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31679)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31679)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31679)[0m *** SIGSEGV (@0x0) received by PID 31679 (TID 0x7f5711f6a700) from PID 0; stack trace: ***
[2m[36m(pid=31679)[0m     @     0x7f5711b43390 (unknown)
[2m[36m(pid=31679)[0m     @     0x7f2811a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31696)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31696)[0m *** SIGSEGV (@0x0) received by PID 31696 (TID 0x7f7cac802700) from PID 0; stack trace: ***
[2m[36m(pid=31696)[0m     @     0x7f7cac3db390 (unknown)
[2m[36m(pid=31709)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31709)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31709)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31709)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31709)[0m *** SIGSEGV (@0x0) received by PID 31709 (TID 0x7f7a63dca700) from PID 0; stack trace: ***
[2m[36m(pid=31709)[0m     @     0x7f7a639a3390 (unknown)
[2m[36m(pid=31680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31680)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31680)[0m *** SIGSEGV (@0x0) received by PID 31680 (TID 0x7fa1fdda3700) from PID 0; stack trace: ***
[2m[36m(pid=31680)[0m     @     0x7fa1fd97c390 (unknown)
[2m[36m(pid=31680)[0m     @     0x7f72fd7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31680)[0m     @     0x7f72fcf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31680)[0m     @     0x7f72fcf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31694)[0m *** SIGSEGV (@0x0) received by PID 31694 (TID 0x7fa7a0b4a700) from PID 0; stack trace: ***
[2m[36m(pid=31694)[0m     @     0x7fa7a0723390 (unknown)
[2m[36m(pid=31694)[0m     @     0x7f78a06a1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31694)[0m     @     0x7f789fdcc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31694)[0m     @     0x7f789fdcf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31640)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31640)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31640)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31640)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31640)[0m *** SIGSEGV (@0x0) received by PID 31640 (TID 0x7ff781d57700) from PID 0; stack trace: ***
[2m[36m(pid=31640)[0m     @     0x7ff781930390 (unknown)
[2m[36m(pid=31640)[0m     @     0x7fc8817f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31640)[0m     @     0x7fc880f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31701)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31701)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31701)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31636)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31636)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31636)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31636)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31636)[0m *** SIGSEGV (@0x0) received by PID 31636 (TID 0x7f132cbe8700) from PID 0; stack trace: ***
[2m[36m(pid=31636)[0m     @     0x7f132c7c1390 (unknown)
[2m[36m(pid=31636)[0m     @     0x7ee42c56af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31636)[0m     @     0x7ee42bc957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31675)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31675)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31675)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31675)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31675)[0m *** SIGSEGV (@0x0) received by PID 31675 (TID 0x7f94ea2b9700) from PID 0; stack trace: ***
[2m[36m(pid=31689)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31689)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31689)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31689)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31689)[0m *** SIGSEGV (@0x0) received by PID 31689 (TID 0x7f1089d2a700) from PID 0; stack trace: ***
[2m[36m(pid=31684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31684)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31684)[0m *** SIGSEGV (@0x0) received by PID 31684 (TID 0x7f4b601c8700) from PID 0; stack trace: ***
[2m[36m(pid=31623)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31623)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31623)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31623)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31623)[0m *** SIGSEGV (@0x0) received by PID 31623 (TID 0x7fc0bf2b9700) from PID 0; stack trace: ***
[2m[36m(pid=31623)[0m     @     0x7fc0bee92390 (unknown)
[2m[36m(pid=31623)[0m     @     0x7f91bee01f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31631)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31631)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31631)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31631)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31631)[0m *** SIGSEGV (@0x0) received by PID 31631 (TID 0x7fe18e751700) from PID 0; stack trace: ***
[2m[36m(pid=31631)[0m     @     0x7fe18e32a390 (unknown)
[2m[36m(pid=31631)[0m     @     0x7fb28e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31631)[0m     @     0x7fb28d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31728)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31728)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31728)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31728)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31728)[0m *** SIGSEGV (@0x0) received by PID 31728 (TID 0x7f605cb6a700) from PID 0; stack trace: ***
[2m[36m(pid=31728)[0m     @     0x7f605c743390 (unknown)
[2m[36m(pid=31728)[0m     @     0x7f315c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31638)[0m     @     0x7f49929e9390 (unknown)
[2m[36m(pid=31638)[0m     @     0x7f1a9295ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31638)[0m     @     0x7f1a9208a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31638)[0m     @     0x7f1a9208d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31700)[0m     @     0x7f7ba71c7390 (unknown)
[2m[36m(pid=31700)[0m     @     0x7f4ca7124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31700)[0m     @     0x7f4ca684f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31700)[0m     @     0x7f4ca68528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31616)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31616)[0m *** SIGSEGV (@0x0) received by PID 31616 (TID 0x7f011461e700) from PID 0; stack trace: ***
[2m[36m(pid=31616)[0m     @     0x7f01141f7390 (unknown)
[2m[36m(pid=31616)[0m     @     0x7ed21401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31616)[0m     @     0x7ed2137477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31612)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31612)[0m *** SIGSEGV (@0x0) received by PID 31612 (TID 0x7fa1f3b88700) from PID 0; stack trace: ***
[2m[36m(pid=31612)[0m     @     0x7fa1f3761390 (unknown)
[2m[36m(pid=31612)[0m     @     0x7f72f36aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31612)[0m     @     0x7f72f2dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31620)[0m     @     0x7faaec39d390 (unknown)
[2m[36m(pid=31620)[0m     @     0x7f7bec336f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31620)[0m     @     0x7f7beba617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31619)[0m     @     0x7fbea44cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31619)[0m     @     0x7fbea44d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31739)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31739)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31739)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31739)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31739)[0m *** SIGSEGV (@0x0) received by PID 31739 (TID 0x7ff23460b700) from PID 0; stack trace: ***
[2m[36m(pid=31739)[0m     @     0x7ff2341e4390 (unknown)
[2m[36m(pid=31739)[0m     @     0x7fc3340cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31618)[0m     @     0x7faf60564390 (unknown)
[2m[36m(pid=31618)[0m     @     0x7f80604fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31618)[0m     @     0x7f805fc277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31618)[0m     @     0x7f805fc2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31618)[0m     @     0x7f805fc2aad3 at::TensorIterator::for_each()
[2m[36m(pid=31683)[0m     @     0x7f127d9b2390 (unknown)
[2m[36m(pid=31683)[0m     @     0x7ee37d8b2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31683)[0m     @     0x7ee37cfdd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31683)[0m     @     0x7ee37cfe08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31683)[0m     @     0x7ee37cfe0ad3 at::TensorIterator::for_each()
[2m[36m(pid=31740)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31740)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31740)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31740)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31740)[0m *** SIGSEGV (@0x0) received by PID 31740 (TID 0x7f1407b0f700) from PID 0; stack trace: ***
[2m[36m(pid=31740)[0m     @     0x7f14076e8390 (unknown)
[2m[36m(pid=31740)[0m     @     0x7ee50761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31740)[0m     @     0x7ee506d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31740)[0m     @     0x7ee506d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31635)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31635)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31635)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31635)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31635)[0m *** SIGSEGV (@0x0) received by PID 31635 (TID 0x7f3ed02c4700) from PID 0; stack trace: ***
[2m[36m(pid=31635)[0m     @     0x7f3ecfe9d390 (unknown)
[2m[36m(pid=31635)[0m     @     0x7f0fcfe36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31635)[0m     @     0x7f0fcf5617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31641)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31641)[0m *** SIGSEGV (@0x0) received by PID 31641 (TID 0x7fa3b2c8b700) from PID 0; stack trace: ***
[2m[36m(pid=31641)[0m     @     0x7fa3b2864390 (unknown)
[2m[36m(pid=31641)[0m     @     0x7f74b27bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31641)[0m     @     0x7f74b1ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31641)[0m     @     0x7f74b1ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31670)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31670)[0m *** SIGSEGV (@0x0) received by PID 31670 (TID 0x7f3c812fe700) from PID 0; stack trace: ***
[2m[36m(pid=31622)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31622)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31622)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31622)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31622)[0m *** SIGSEGV (@0x0) received by PID 31622 (TID 0x7f266a65b700) from PID 0; stack trace: ***
[2m[36m(pid=31622)[0m     @     0x7f266a234390 (unknown)
[2m[36m(pid=31622)[0m     @     0x7ef76a13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31622)[0m     @     0x7ef7698657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31622)[0m     @     0x7ef7698688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31672)[0m     @     0x7f624b216390 (unknown)
[2m[36m(pid=31672)[0m     @     0x7f334b124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31672)[0m     @     0x7f334a84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31672)[0m     @     0x7f334a8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31735)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31735)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31735)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31735)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31735)[0m *** SIGSEGV (@0x0) received by PID 31735 (TID 0x7f69932e0700) from PID 0; stack trace: ***
[2m[36m(pid=31734)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31734)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31734)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31734)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31734)[0m *** SIGSEGV (@0x0) received by PID 31734 (TID 0x7fe8aabc6700) from PID 0; stack trace: ***
[2m[36m(pid=31734)[0m     @     0x7fe8aa79f390 (unknown)
[2m[36m(pid=31734)[0m     @     0x7fb9aa4cbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31734)[0m     @     0x7fb9a9bf67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31734)[0m     @     0x7fb9a9bf98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31697)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31697)[0m *** SIGSEGV (@0x0) received by PID 31697 (TID 0x7f1f02326700) from PID 0; stack trace: ***
[2m[36m(pid=31697)[0m     @     0x7f1f01eff390 (unknown)
[2m[36m(pid=31697)[0m     @     0x7ef001e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31697)[0m     @     0x7ef00154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31697)[0m     @     0x7ef0015528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31697)[0m     @     0x7ef001552ad3 at::TensorIterator::for_each()
[2m[36m(pid=31608)[0m     @     0x7efcee8dff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31608)[0m     @     0x7efcee00a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31608)[0m     @     0x7efcee00d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31608)[0m     @     0x7efcee00dad3 at::TensorIterator::for_each()
[2m[36m(pid=31624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31624)[0m *** SIGSEGV (@0x0) received by PID 31624 (TID 0x7faafd197700) from PID 0; stack trace: ***
[2m[36m(pid=31624)[0m     @     0x7faafcd70390 (unknown)
[2m[36m(pid=31624)[0m     @     0x7f7bfcc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31624)[0m     @     0x7f7bfc39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31624)[0m     @     0x7f7bfc3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31606)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31606)[0m *** SIGSEGV (@0x0) received by PID 31606 (TID 0x7efcc9573700) from PID 0; stack trace: ***
[2m[36m(pid=31606)[0m     @     0x7efcc914c390 (unknown)
[2m[36m(pid=31606)[0m     @     0x7ecdc90b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31606)[0m     @     0x7ecdc87e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31606)[0m     @     0x7ecdc87e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31615)[0m     @     0x7f3de361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31615)[0m     @     0x7f3de2d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31615)[0m     @     0x7f3de2d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31615)[0m     @     0x7f3de2d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=31695)[0m     @     0x7f7417ce3390 (unknown)
[2m[36m(pid=31695)[0m     @     0x7f4517af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31695)[0m     @     0x7f45172207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31695)[0m     @     0x7f45172238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31695)[0m     @     0x7f4517223ad3 at::TensorIterator::for_each()
[2m[36m(pid=31748)[0m     @     0x7f1503bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31748)[0m     @     0x7f15060b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31748)[0m     @     0x7f1503bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31748)[0m     @     0x7f1509c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31748)[0m     @     0x55ef080d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31748)[0m     @     0x55ef08032b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31748)[0m     @     0x55ef080bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31748)[0m     @     0x55ef080bea20 method_vectorcall
[2m[36m(pid=31748)[0m     @     0x55ef08032bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31748)[0m     @     0x55ef080bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31748)[0m     @     0x55ef080be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31748)[0m     @     0x55ef08033689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31748)[0m     @     0x55ef080bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31748)[0m     @     0x55ef080be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31748)[0m     @     0x55ef08033689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31748)[0m     @     0x55ef080bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31748)[0m     @     0x55ef080be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31748)[0m     @     0x55ef08033689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31748)[0m     @     0x55ef080bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31748)[0m     @     0x55ef080be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31748)[0m     @     0x55ef08033689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31614)[0m     @     0x7f1e71ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31614)[0m     @     0x7f1e71cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31614)[0m     @     0x7f1e71cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=31614)[0m     @     0x7f1e71cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=31614)[0m     @     0x7f1e725b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31668)[0m     @     0x7fa820f204f5 at::Tensor::copy_()
[2m[36m(pid=31668)[0m     @     0x7fa8233f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31668)[0m     @     0x7fa820f204f5 at::Tensor::copy_()
[2m[36m(pid=31668)[0m     @     0x7fa826fcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31668)[0m     @     0x55aefd1e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31668)[0m     @     0x55aefd13fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31668)[0m     @     0x55aefd1cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31668)[0m     @     0x55aefd1cba20 method_vectorcall
[2m[36m(pid=31668)[0m     @     0x55aefd13fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31668)[0m     @     0x55aefd1cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31668)[0m     @     0x55aefd1cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31668)[0m     @     0x55aefd140689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31668)[0m     @     0x55aefd1cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31668)[0m     @     0x55aefd1cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31668)[0m     @     0x55aefd140689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31668)[0m     @     0x55aefd1cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31668)[0m     @     0x55aefd1cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31668)[0m     @     0x55aefd140689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31668)[0m     @     0x55aefd1cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31668)[0m     @     0x55aefd1cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31668)[0m     @     0x55aefd140689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31687)[0m     @     0x7f12e18215a4 at::native::copy_()
[2m[36m(pid=31687)[0m     @     0x7f12e1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=31687)[0m     @     0x7f12e43df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31687)[0m     @     0x7f12e1f0c4f5 at::Tensor::copy_()
[2m[36m(pid=31703)[0m     @     0x7f322f8095a4 at::native::copy_()
[2m[36m(pid=31703)[0m     @     0x7f322fef44f5 at::Tensor::copy_()
[2m[36m(pid=31703)[0m     @     0x7f32323c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31703)[0m     @     0x7f322fef44f5 at::Tensor::copy_()
[2m[36m(pid=31703)[0m     @     0x7f3235f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31703)[0m     @     0x55c8ce122fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31703)[0m     @     0x55c8ce07db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31703)[0m     @     0x55c8ce108baf _PyEval_EvalCodeWithName
[2m[36m(pid=31699)[0m     @     0x7f42b2af55a4 at::native::copy_()
[2m[36m(pid=31699)[0m     @     0x7f42b31e04f5 at::Tensor::copy_()
[2m[36m(pid=31699)[0m     @     0x7f42b56b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31693)[0m     @     0x7f429b8b95a4 at::native::copy_()
[2m[36m(pid=31693)[0m     @     0x7f429bfa44f5 at::Tensor::copy_()
[2m[36m(pid=31693)[0m     @     0x7f429e4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31720)[0m     @     0x7f772fda68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31720)[0m     @     0x7f772d8d34f5 at::Tensor::copy_()
[2m[36m(pid=31720)[0m     @     0x7f773397e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31720)[0m     @     0x565506302fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31720)[0m     @     0x56550625db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31720)[0m     @     0x5655062e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31720)[0m     @     0x5655062e9a20 method_vectorcall
[2m[36m(pid=31720)[0m     @     0x56550625dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31720)[0m     @     0x5655062e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31720)[0m     @     0x5655062e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31720)[0m     @     0x56550625e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31720)[0m     @     0x5655062e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31720)[0m     @     0x5655062e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31720)[0m     @     0x56550625e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31720)[0m     @     0x5655062e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31720)[0m     @     0x5655062e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31720)[0m     @     0x56550625e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31720)[0m     @     0x5655062e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31720)[0m     @     0x5655062e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31720)[0m     @     0x56550625e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31719)[0m     @     0x7edde90a44f5 at::Tensor::copy_()
[2m[36m(pid=31719)[0m     @     0x7eddeb5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31719)[0m     @     0x7edde90a44f5 at::Tensor::copy_()
[2m[36m(pid=31719)[0m     @     0x7eddef14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31719)[0m     @     0x56138e8e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31719)[0m     @     0x56138e83cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31719)[0m     @     0x56138e8c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31719)[0m     @     0x56138e8c8a20 method_vectorcall
[2m[36m(pid=31719)[0m     @     0x56138e83cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31719)[0m     @     0x56138e8c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31719)[0m     @     0x56138e8c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31719)[0m     @     0x56138e83d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31719)[0m     @     0x56138e8c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31719)[0m     @     0x56138e8c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31719)[0m     @     0x56138e83d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31719)[0m     @     0x56138e8c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31719)[0m     @     0x56138e8c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31719)[0m     @     0x56138e83d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31719)[0m     @     0x56138e8c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31719)[0m     @     0x56138e8c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31719)[0m     @     0x56138e83d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31646)[0m     @     0x7fa83e5e24f5 at::Tensor::copy_()
[2m[36m(pid=31646)[0m     @     0x7fa840ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31646)[0m     @     0x7fa83e5e24f5 at::Tensor::copy_()
[2m[36m(pid=31646)[0m     @     0x7fa84468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31646)[0m     @     0x56151b181fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31646)[0m     @     0x56151b0dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31646)[0m     @     0x56151b167baf _PyEval_EvalCodeWithName
[2m[36m(pid=31646)[0m     @     0x56151b168a20 method_vectorcall
[2m[36m(pid=31646)[0m     @     0x56151b0dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31646)[0m     @     0x56151b167baf _PyEval_EvalCodeWithName
[2m[36m(pid=31646)[0m     @     0x56151b168643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31646)[0m     @     0x56151b0dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31646)[0m     @     0x56151b167baf _PyEval_EvalCodeWithName
[2m[36m(pid=31646)[0m     @     0x56151b168643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31646)[0m     @     0x56151b0dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31646)[0m     @     0x56151b167baf _PyEval_EvalCodeWithName
[2m[36m(pid=31646)[0m     @     0x56151b168643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31646)[0m     @     0x56151b0dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31646)[0m     @     0x56151b167baf _PyEval_EvalCodeWithName
[2m[36m(pid=31646)[0m     @     0x56151b168643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31646)[0m     @     0x56151b0dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31686)[0m     @     0x7f77b52f8388 at::native::copy_impl()
[2m[36m(pid=31686)[0m     @     0x7f77b52fa5a4 at::native::copy_()
[2m[36m(pid=31686)[0m     @     0x7f77b59e54f5 at::Tensor::copy_()
[2m[36m(pid=31686)[0m     @     0x7f77b7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31723)[0m     @     0x7f1f492cd5a4 at::native::copy_()
[2m[36m(pid=31723)[0m     @     0x7f1f499b84f5 at::Tensor::copy_()
[2m[36m(pid=31723)[0m     @     0x7f1f4be8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31726)[0m     @     0x7eeb46ce54f5 at::Tensor::copy_()
[2m[36m(pid=31726)[0m     @     0x7eeb491b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31726)[0m     @     0x7eeb46ce54f5 at::Tensor::copy_()
[2m[36m(pid=31726)[0m     @     0x7eeb4cd9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31726)[0m     @     0x55d73306cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31726)[0m     @     0x55d732fc7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31726)[0m     @     0x55d733052baf _PyEval_EvalCodeWithName
[2m[36m(pid=31726)[0m     @     0x55d733053a20 method_vectorcall
[2m[36m(pid=31726)[0m     @     0x55d732fc7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31726)[0m     @     0x55d733052baf _PyEval_EvalCodeWithName
[2m[36m(pid=31726)[0m     @     0x55d733053643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31726)[0m     @     0x55d732fc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31726)[0m     @     0x55d733052baf _PyEval_EvalCodeWithName
[2m[36m(pid=31726)[0m     @     0x55d733053643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31726)[0m     @     0x55d732fc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31726)[0m     @     0x55d733052baf _PyEval_EvalCodeWithName
[2m[36m(pid=31726)[0m     @     0x55d733053643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31726)[0m     @     0x55d732fc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31726)[0m     @     0x55d733052baf _PyEval_EvalCodeWithName
[2m[36m(pid=31726)[0m     @     0x55d733053643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31726)[0m     @     0x55d732fc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x7f1f5c59d390 (unknown)
[2m[36m(pid=31713)[0m     @     0x7ef05c136f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31713)[0m     @     0x7ef05b8617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31713)[0m     @     0x7ef05b8648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31713)[0m     @     0x7ef05b864ad3 at::TensorIterator::for_each()
[2m[36m(pid=31617)[0m     @     0x7fe771744390 (unknown)
[2m[36m(pid=31617)[0m     @     0x7fb8716f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31617)[0m     @     0x7fb870e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31617)[0m     @     0x7fb870e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31617)[0m     @     0x7fb870e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=31621)[0m     @     0x7fca59e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31621)[0m     @     0x7fca59e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31621)[0m     @     0x7fca59e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=31666)[0m     @     0x7faacd0755a4 at::native::copy_()
[2m[36m(pid=31666)[0m     @     0x7faacd7604f5 at::Tensor::copy_()
[2m[36m(pid=31666)[0m     @     0x7faacfc338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31666)[0m     @     0x7faacd7604f5 at::Tensor::copy_()
[2m[36m(pid=31628)[0m     @     0x7fc34588e390 (unknown)
[2m[36m(pid=31628)[0m     @     0x7f9445749f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31628)[0m     @     0x7f9444e747db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31628)[0m     @     0x7f9444e778f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31628)[0m     @     0x7f9444e77ad3 at::TensorIterator::for_each()
[2m[36m(pid=31607)[0m     @     0x7f2025940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31607)[0m     @     0x7f202506b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31607)[0m     @     0x7f202506e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31607)[0m     @     0x7f202506ead3 at::TensorIterator::for_each()
[2m[36m(pid=31627)[0m     @     0x7fa2cced9390 (unknown)
[2m[36m(pid=31627)[0m     @     0x7f73cc940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31627)[0m     @     0x7f73cc06b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31627)[0m     @     0x7f73cc06e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31627)[0m     @     0x7f73cc06ead3 at::TensorIterator::for_each()
[2m[36m(pid=31643)[0m     @     0x7ef2939df8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31643)[0m     @     0x7ef2939dfad3 at::TensorIterator::for_each()
[2m[36m(pid=31643)[0m     @     0x7ef2939dfd91 at::TensorIterator::for_each()
[2m[36m(pid=31711)[0m     @     0x7f84388da390 (unknown)
[2m[36m(pid=31711)[0m     @     0x7f5538825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31711)[0m     @     0x7f5537f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31711)[0m     @     0x7f5537f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31711)[0m     @     0x7f5537f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=31731)[0m     @     0x7f1dbf45a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31731)[0m     @     0x7f1dbf45aad3 at::TensorIterator::for_each()
[2m[36m(pid=31731)[0m     @     0x7f1dbf45ad91 at::TensorIterator::for_each()
[2m[36m(pid=31731)[0m     @     0x7f1dbfd3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31736)[0m     @     0x7f48bb5864f5 at::Tensor::copy_()
[2m[36m(pid=31736)[0m     @     0x7f48bda598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31736)[0m     @     0x7f48bb5864f5 at::Tensor::copy_()
[2m[36m(pid=31736)[0m     @     0x7f48c163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31736)[0m     @     0x5649c8fcdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31736)[0m     @     0x5649c8f28b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31736)[0m     @     0x5649c8fb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31736)[0m     @     0x5649c8fb4a20 method_vectorcall
[2m[36m(pid=31736)[0m     @     0x5649c8f28bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31736)[0m     @     0x5649c8fb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31736)[0m     @     0x5649c8fb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31736)[0m     @     0x5649c8f29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31736)[0m     @     0x5649c8fb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31736)[0m     @     0x5649c8fb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31736)[0m     @     0x5649c8f29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31736)[0m     @     0x5649c8fb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31736)[0m     @     0x5649c8fb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31736)[0m     @     0x5649c8f29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31736)[0m     @     0x5649c8fb3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31736)[0m     @     0x5649c8fb4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31736)[0m     @     0x5649c8f29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31729)[0m     @     0x7f6a70b104f5 at::Tensor::copy_()
[2m[36m(pid=31729)[0m     @     0x7f6a72fe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31729)[0m     @     0x7f6a70b104f5 at::Tensor::copy_()
[2m[36m(pid=31729)[0m     @     0x7f6a76bbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31729)[0m     @     0x55bbcc1ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31729)[0m     @     0x55bbcc147b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31729)[0m     @     0x55bbcc1d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31729)[0m     @     0x55bbcc1d3a20 method_vectorcall
[2m[36m(pid=31729)[0m     @     0x55bbcc147bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31729)[0m     @     0x55bbcc1d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31729)[0m     @     0x55bbcc1d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31729)[0m     @     0x55bbcc148689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31729)[0m     @     0x55bbcc1d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31729)[0m     @     0x55bbcc1d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31729)[0m     @     0x55bbcc148689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31729)[0m     @     0x55bbcc1d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31729)[0m     @     0x55bbcc1d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31729)[0m     @     0x55bbcc148689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31729)[0m     @     0x55bbcc1d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31729)[0m     @     0x55bbcc1d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31729)[0m     @     0x55bbcc148689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31724)[0m     @     0x7f7b97feb5a4 at::native::copy_()
[2m[36m(pid=31724)[0m     @     0x7f7b986d64f5 at::Tensor::copy_()
[2m[36m(pid=31724)[0m     @     0x7f7b9aba98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31724)[0m     @     0x7f7b986d64f5 at::Tensor::copy_()
[2m[36m(pid=31724)[0m     @     0x7f7b9e78179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31724)[0m     @     0x5652ffdfcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31724)[0m     @     0x5652ffd57b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31724)[0m     @     0x5652ffde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31724)[0m     @     0x5652ffde3a20 method_vectorcall
[2m[36m(pid=31724)[0m     @     0x5652ffd57bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x7efe7a1fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31625)[0m     @     0x7efe7a1ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31625)[0m     @     0x7efe7a1ffad3 at::TensorIterator::for_each()
[2m[36m(pid=31665)[0m     @     0x7eea03bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31665)[0m     @     0x7eea060b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31665)[0m     @     0x7eea03bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31665)[0m     @     0x7eea09c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31665)[0m     @     0x562d38093fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31665)[0m     @     0x562d37feeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31665)[0m     @     0x562d38079baf _PyEval_EvalCodeWithName
[2m[36m(pid=31665)[0m     @     0x562d3807aa20 method_vectorcall
[2m[36m(pid=31665)[0m     @     0x562d37feebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31665)[0m     @     0x562d38079baf _PyEval_EvalCodeWithName
[2m[36m(pid=31665)[0m     @     0x562d3807a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31665)[0m     @     0x562d37fef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31665)[0m     @     0x562d38079baf _PyEval_EvalCodeWithName
[2m[36m(pid=31665)[0m     @     0x562d3807a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31665)[0m     @     0x562d37fef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31665)[0m     @     0x562d38079baf _PyEval_EvalCodeWithName
[2m[36m(pid=31665)[0m     @     0x562d3807a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31665)[0m     @     0x562d37fef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x7fdb9d631390 (unknown)
[2m[36m(pid=31633)[0m     @     0x7fac9d5e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31633)[0m     @     0x7fac9cd0f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31633)[0m     @     0x7fac9cd128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31633)[0m     @     0x7fac9cd12ad3 at::TensorIterator::for_each()
[2m[36m(pid=31611)[0m     @     0x7f58c711f390 (unknown)
[2m[36m(pid=31611)[0m     @     0x7f29c70b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31611)[0m     @     0x7f29c67e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31611)[0m     @     0x7f29c67e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31611)[0m     @     0x7f29c67e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=31660)[0m     @     0x7f24aae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31660)[0m     @     0x7f24aae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=31660)[0m     @     0x7f24aae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=31610)[0m     @     0x7edaa374aad3 at::TensorIterator::for_each()
[2m[36m(pid=31610)[0m     @     0x7edaa374ad91 at::TensorIterator::for_each()
[2m[36m(pid=31610)[0m     @     0x7edaa402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31610)[0m     @     0x7edaa4050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31662)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31662)[0m *** SIGSEGV (@0x0) received by PID 31662 (TID 0x7f3cdd362700) from PID 0; stack trace: ***
[2m[36m(pid=31662)[0m     @     0x7f3cdcf3b390 (unknown)
[2m[36m(pid=31662)[0m     @     0x7f0ddceacf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31662)[0m     @     0x7f0ddc5d77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31662)[0m     @     0x7f0ddc5da8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31661)[0m     @     0x7f813f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31661)[0m     @     0x7f813f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31661)[0m     @     0x7f813f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31661)[0m     @     0x7f813f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=31692)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31692)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31692)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31692)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31692)[0m *** SIGSEGV (@0x0) received by PID 31692 (TID 0x7fe84651f700) from PID 0; stack trace: ***
[2m[36m(pid=31692)[0m     @     0x7fe8460f8390 (unknown)
[2m[36m(pid=31690)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31690)[0m *** SIGSEGV (@0x0) received by PID 31690 (TID 0x7fb627261700) from PID 0; stack trace: ***
[2m[36m(pid=31690)[0m     @     0x7fb626e3a390 (unknown)
[2m[36m(pid=31690)[0m     @     0x7f8726df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31690)[0m     @     0x7f872651b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31677)[0m     @     0x7f2b700ad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31677)[0m     @     0x7f2b700adad3 at::TensorIterator::for_each()
[2m[36m(pid=31677)[0m     @     0x7f2b700add91 at::TensorIterator::for_each()
[2m[36m(pid=31677)[0m     @     0x7f2b70990b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31716)[0m     @     0x7f7e2a6c28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31716)[0m     @     0x7f7e2a6c2ad3 at::TensorIterator::for_each()
[2m[36m(pid=31716)[0m     @     0x7f7e2a6c2d91 at::TensorIterator::for_each()
[2m[36m(pid=31681)[0m     @     0x7f94eebd0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31681)[0m     @     0x7f94ee2fb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31681)[0m     @     0x7f94ee2fe8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31681)[0m     @     0x7f94ee2fead3 at::TensorIterator::for_each()
[2m[36m(pid=31626)[0m     @     0x7f815ee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31626)[0m     @     0x7f815ee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=31626)[0m     @     0x7f815ee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=31626)[0m     @     0x7f815f762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31626)[0m     @     0x7f815f785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31679)[0m     @     0x7f28111357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31679)[0m     @     0x7f28111388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31679)[0m     @     0x7f2811138ad3 at::TensorIterator::for_each()
[2m[36m(pid=31696)[0m     @     0x7f4dac376f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31696)[0m     @     0x7f4dabaa17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31696)[0m     @     0x7f4dabaa48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31696)[0m     @     0x7f4dabaa4ad3 at::TensorIterator::for_each()
[2m[36m(pid=31709)[0m     @     0x7f4b63751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31709)[0m     @     0x7f4b62e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31709)[0m     @     0x7f4b62e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31709)[0m     @     0x7f4b62e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=31680)[0m     @     0x7f72fcf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=31680)[0m     @     0x7f72fcf27d91 at::TensorIterator::for_each()
[2m[36m(pid=31694)[0m     @     0x7f789fdcfad3 at::TensorIterator::for_each()
[2m[36m(pid=31694)[0m     @     0x7f789fdcfd91 at::TensorIterator::for_each()
[2m[36m(pid=31640)[0m     @     0x7fc880f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31640)[0m     @     0x7fc880f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=31701)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31701)[0m *** SIGSEGV (@0x0) received by PID 31701 (TID 0x7fe5639d2700) from PID 0; stack trace: ***
[2m[36m(pid=31701)[0m     @     0x7fe5635ab390 (unknown)
[2m[36m(pid=31636)[0m     @     0x7ee42bc988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31636)[0m     @     0x7ee42bc98ad3 at::TensorIterator::for_each()
[2m[36m(pid=31706)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31706)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31706)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31706)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31706)[0m *** SIGSEGV (@0x0) received by PID 31706 (TID 0x7fbb497e7700) from PID 0; stack trace: ***
[2m[36m(pid=31706)[0m     @     0x7fbb493c0390 (unknown)
[2m[36m(pid=31706)[0m     @     0x7f8c4936cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31706)[0m     @     0x7f8c48a977db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31675)[0m     @     0x7f94e9e92390 (unknown)
[2m[36m(pid=31675)[0m     @     0x7f65e9c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31675)[0m     @     0x7f65e93387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31689)[0m     @     0x7f1089903390 (unknown)
[2m[36m(pid=31689)[0m     @     0x7ee1897f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31689)[0m     @     0x7ee188f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31689)[0m     @     0x7ee188f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31689)[0m     @     0x7ee188f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=31684)[0m     @     0x7f4b5fda1390 (unknown)
[2m[36m(pid=31684)[0m     @     0x7f1c5fd41f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31684)[0m     @     0x7f1c5f46c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31684)[0m     @     0x7f1c5f46f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31684)[0m     @     0x7f1c5f46fad3 at::TensorIterator::for_each()
[2m[36m(pid=31623)[0m     @     0x7f91be52c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31623)[0m     @     0x7f91be52f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31623)[0m     @     0x7f91be52fad3 at::TensorIterator::for_each()
[2m[36m(pid=31685)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=31685)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=31685)[0m *** Aborted at 1604572674 (unix time) try "date -d @1604572674" if you are using GNU date ***
[2m[36m(pid=31685)[0m PC: @                0x0 (unknown)
[2m[36m(pid=31685)[0m *** SIGSEGV (@0x0) received by PID 31685 (TID 0x7f75b5f5e700) from PID 0; stack trace: ***
[2m[36m(pid=31631)[0m     @     0x7fb28d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31631)[0m     @     0x7fb28d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=31631)[0m     @     0x7fb28d868d91 at::TensorIterator::for_each()
[2m[36m(pid=31728)[0m     @     0x7f315bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31728)[0m     @     0x7f315bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31638)[0m     @     0x7f1a9208dad3 at::TensorIterator::for_each()
[2m[36m(pid=31638)[0m     @     0x7f1a9208dd91 at::TensorIterator::for_each()
[2m[36m(pid=31638)[0m     @     0x7f1a92970b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31638)[0m     @     0x7f1a92993c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31638)[0m     @     0x7f1a91e35a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31700)[0m     @     0x7f4ca6852ad3 at::TensorIterator::for_each()
[2m[36m(pid=31700)[0m     @     0x7f4ca6852d91 at::TensorIterator::for_each()
[2m[36m(pid=31700)[0m     @     0x7f4ca7135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31700)[0m     @     0x7f4ca7158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31616)[0m     @     0x7ed21374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31616)[0m     @     0x7ed21374aad3 at::TensorIterator::for_each()
[2m[36m(pid=31616)[0m     @     0x7ed21374ad91 at::TensorIterator::for_each()
[2m[36m(pid=31616)[0m     @     0x7ed21402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31616)[0m     @     0x7ed214050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31612)[0m     @     0x7f72f2ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31612)[0m     @     0x7f72f2ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=31612)[0m     @     0x7f72f2ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=31612)[0m     @     0x7f72f36bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31612)[0m     @     0x7f72f36e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31620)[0m     @     0x7f7beba648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31620)[0m     @     0x7f7beba64ad3 at::TensorIterator::for_each()
[2m[36m(pid=31620)[0m     @     0x7f7beba64d91 at::TensorIterator::for_each()
[2m[36m(pid=31620)[0m     @     0x7f7bec347b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31620)[0m     @     0x7f7bec36ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31619)[0m     @     0x7fbea44d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=31619)[0m     @     0x7fbea44d2d91 at::TensorIterator::for_each()
[2m[36m(pid=31619)[0m     @     0x7fbea4db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31619)[0m     @     0x7fbea4dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31619)[0m     @     0x7fbea427aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31619)[0m     @     0x7fbea4278388 at::native::copy_impl()
[2m[36m(pid=31739)[0m     @     0x7fc3337f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31739)[0m     @     0x7fc3337fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31739)[0m     @     0x7fc3337fbad3 at::TensorIterator::for_each()
[2m[36m(pid=31618)[0m     @     0x7f805fc2ad91 at::TensorIterator::for_each()
[2m[36m(pid=31618)[0m     @     0x7f806050db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31618)[0m     @     0x7f8060530c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31683)[0m     @     0x7ee37cfe0d91 at::TensorIterator::for_each()
[2m[36m(pid=31683)[0m     @     0x7ee37d8c3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31683)[0m     @     0x7ee37d8e6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31683)[0m     @     0x7ee37cd88a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31740)[0m     @     0x7ee506d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=31740)[0m     @     0x7ee506d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=31635)[0m     @     0x7f0fcf5648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31635)[0m     @     0x7f0fcf564ad3 at::TensorIterator::for_each()
[2m[36m(pid=31641)[0m     @     0x7f74b1ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=31641)[0m     @     0x7f74b1ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=31641)[0m     @     0x7f74b27ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31670)[0m     @     0x7f3c80ed7390 (unknown)
[2m[36m(pid=31670)[0m     @     0x7f0d80e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31670)[0m     @     0x7f0d805a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31622)[0m     @     0x7ef769868ad3 at::TensorIterator::for_each()
[2m[36m(pid=31622)[0m     @     0x7ef769868d91 at::TensorIterator::for_each()
[2m[36m(pid=31622)[0m     @     0x7ef76a14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31672)[0m     @     0x7f334a852ad3 at::TensorIterator::for_each()
[2m[36m(pid=31672)[0m     @     0x7f334a852d91 at::TensorIterator::for_each()
[2m[36m(pid=31672)[0m     @     0x7f334b135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31672)[0m     @     0x7f334b158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31735)[0m     @     0x7f6992eb9390 (unknown)
[2m[36m(pid=31735)[0m     @     0x7f3a92e66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31735)[0m     @     0x7f3a925917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31735)[0m     @     0x7f3a925948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31734)[0m     @     0x7fb9a9bf9ad3 at::TensorIterator::for_each()
[2m[36m(pid=31734)[0m     @     0x7fb9a9bf9d91 at::TensorIterator::for_each()
[2m[36m(pid=31734)[0m     @     0x7fb9aa4dcb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31697)[0m     @     0x7ef001552d91 at::TensorIterator::for_each()
[2m[36m(pid=31697)[0m     @     0x7ef001e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31697)[0m     @     0x7ef001e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31697)[0m     @     0x7ef0012faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31608)[0m     @     0x7efcee00dd91 at::TensorIterator::for_each()
[2m[36m(pid=31608)[0m     @     0x7efcee8f0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31608)[0m     @     0x7efcee913c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31608)[0m     @     0x7efceddb5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31608)[0m     @     0x7efceddb3388 at::native::copy_impl()
[2m[36m(pid=31624)[0m     @     0x7f7bfc3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=31624)[0m     @     0x7f7bfc3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=31624)[0m     @     0x7f7bfcc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31624)[0m     @     0x7f7bfcca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31606)[0m     @     0x7ecdc87e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=31606)[0m     @     0x7ecdc87e3d91 at::TensorIterator::for_each()
[2m[36m(pid=31606)[0m     @     0x7ecdc90c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31606)[0m     @     0x7ecdc90e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31615)[0m     @     0x7f3de2d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=31615)[0m     @     0x7f3de3630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31615)[0m     @     0x7f3de3653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31615)[0m     @     0x7f3de2af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31615)[0m     @     0x7f3de2af3388 at::native::copy_impl()
[2m[36m(pid=31695)[0m     @     0x7f4517223d91 at::TensorIterator::for_each()
[2m[36m(pid=31695)[0m     @     0x7f4517b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31695)[0m     @     0x7f4517b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31695)[0m     @     0x7f4516fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31614)[0m     @     0x7f1e725d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31614)[0m     @     0x7f1e71a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31614)[0m     @     0x7f1e71a78388 at::native::copy_impl()
[2m[36m(pid=31614)[0m     @     0x7f1e71a7a5a4 at::native::copy_()
[2m[36m(pid=31687)[0m     @     0x7f12e7fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31687)[0m     @     0x561bcd525fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31687)[0m     @     0x561bcd480b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31687)[0m     @     0x561bcd50bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31687)[0m     @     0x561bcd50ca20 method_vectorcall
[2m[36m(pid=31687)[0m     @     0x561bcd480bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31687)[0m     @     0x561bcd50bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31687)[0m     @     0x561bcd50c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31687)[0m     @     0x561bcd481689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31687)[0m     @     0x561bcd50bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31687)[0m     @     0x561bcd50c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31687)[0m     @     0x561bcd481689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31687)[0m     @     0x561bcd50bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31687)[0m     @     0x561bcd50c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31687)[0m     @     0x561bcd481689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31687)[0m     @     0x561bcd50bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31687)[0m     @     0x561bcd50c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31687)[0m     @     0x561bcd481689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31703)[0m     @     0x55c8ce109a20 method_vectorcall
[2m[36m(pid=31703)[0m     @     0x55c8ce07dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31703)[0m     @     0x55c8ce108baf _PyEval_EvalCodeWithName
[2m[36m(pid=31703)[0m     @     0x55c8ce109643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31703)[0m     @     0x55c8ce07e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31703)[0m     @     0x55c8ce108baf _PyEval_EvalCodeWithName
[2m[36m(pid=31703)[0m     @     0x55c8ce109643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31703)[0m     @     0x55c8ce07e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31703)[0m     @     0x55c8ce108baf _PyEval_EvalCodeWithName
[2m[36m(pid=31703)[0m     @     0x55c8ce109643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31703)[0m     @     0x55c8ce07e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31703)[0m     @     0x55c8ce108baf _PyEval_EvalCodeWithName
[2m[36m(pid=31703)[0m     @     0x55c8ce109643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31703)[0m     @     0x55c8ce07e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31699)[0m     @     0x7f42b31e04f5 at::Tensor::copy_()
[2m[36m(pid=31699)[0m     @     0x7f42b928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31699)[0m     @     0x55a6d0211fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31699)[0m     @     0x55a6d016cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31699)[0m     @     0x55a6d01f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31699)[0m     @     0x55a6d01f8a20 method_vectorcall
[2m[36m(pid=31699)[0m     @     0x55a6d016cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31699)[0m     @     0x55a6d01f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31699)[0m     @     0x55a6d01f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31699)[0m     @     0x55a6d016d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31699)[0m     @     0x55a6d01f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31699)[0m     @     0x55a6d01f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31699)[0m     @     0x55a6d016d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31699)[0m     @     0x55a6d01f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31699)[0m     @     0x55a6d01f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31699)[0m     @     0x55a6d016d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31699)[0m     @     0x55a6d01f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31699)[0m     @     0x55a6d01f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31699)[0m     @     0x55a6d016d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31693)[0m     @     0x7f429bfa44f5 at::Tensor::copy_()
[2m[36m(pid=31693)[0m     @     0x7f42a204f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31693)[0m     @     0x55b141cd0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31693)[0m     @     0x55b141c2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31693)[0m     @     0x55b141cb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=31693)[0m     @     0x55b141cb7a20 method_vectorcall
[2m[36m(pid=31693)[0m     @     0x55b141c2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31693)[0m     @     0x55b141cb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=31693)[0m     @     0x55b141cb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31693)[0m     @     0x55b141c2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31693)[0m     @     0x55b141cb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=31693)[0m     @     0x55b141cb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31693)[0m     @     0x55b141c2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31693)[0m     @     0x55b141cb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=31693)[0m     @     0x55b141cb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31693)[0m     @     0x55b141c2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31693)[0m     @     0x55b141cb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=31693)[0m     @     0x55b141cb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31693)[0m     @     0x55b141c2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31686)[0m     @     0x7f77b59e54f5 at::Tensor::copy_()
[2m[36m(pid=31686)[0m     @     0x7f77bba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31686)[0m     @     0x55609155cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31686)[0m     @     0x5560914b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31686)[0m     @     0x556091542baf _PyEval_EvalCodeWithName
[2m[36m(pid=31686)[0m     @     0x556091543a20 method_vectorcall
[2m[36m(pid=31686)[0m     @     0x5560914b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31686)[0m     @     0x556091542baf _PyEval_EvalCodeWithName
[2m[36m(pid=31686)[0m     @     0x556091543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31686)[0m     @     0x5560914b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31686)[0m     @     0x556091542baf _PyEval_EvalCodeWithName
[2m[36m(pid=31686)[0m     @     0x556091543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31686)[0m     @     0x5560914b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31686)[0m     @     0x556091542baf _PyEval_EvalCodeWithName
[2m[36m(pid=31686)[0m     @     0x556091543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31686)[0m     @     0x5560914b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31686)[0m     @     0x556091542baf _PyEval_EvalCodeWithName
[2m[36m(pid=31686)[0m     @     0x556091543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31686)[0m     @     0x5560914b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31723)[0m     @     0x7f1f499b84f5 at::Tensor::copy_()
[2m[36m(pid=31723)[0m     @     0x7f1f4fa6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31723)[0m     @     0x555f2172efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31723)[0m     @     0x555f21689b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31723)[0m     @     0x555f21714baf _PyEval_EvalCodeWithName
[2m[36m(pid=31723)[0m     @     0x555f21715a20 method_vectorcall
[2m[36m(pid=31723)[0m     @     0x555f21689bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31723)[0m     @     0x555f21714baf _PyEval_EvalCodeWithName
[2m[36m(pid=31723)[0m     @     0x555f21715643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31723)[0m     @     0x555f2168a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31723)[0m     @     0x555f21714baf _PyEval_EvalCodeWithName
[2m[36m(pid=31723)[0m     @     0x555f21715643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31723)[0m     @     0x555f2168a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31723)[0m     @     0x555f21714baf _PyEval_EvalCodeWithName
[2m[36m(pid=31723)[0m     @     0x555f21715643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31723)[0m     @     0x555f2168a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31723)[0m     @     0x555f21714baf _PyEval_EvalCodeWithName
[2m[36m(pid=31723)[0m     @     0x555f21715643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31723)[0m     @     0x555f2168a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x7ef05b864d91 at::TensorIterator::for_each()
[2m[36m(pid=31713)[0m     @     0x7ef05c147b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31713)[0m     @     0x7ef05c16ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31713)[0m     @     0x7ef05b60ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31617)[0m     @     0x7fb870e22d91 at::TensorIterator::for_each()
[2m[36m(pid=31617)[0m     @     0x7fb871705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31617)[0m     @     0x7fb871728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31621)[0m     @     0x7fca59e38d91 at::TensorIterator::for_each()
[2m[36m(pid=31621)[0m     @     0x7fca5a71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31621)[0m     @     0x7fca5a73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31621)[0m     @     0x7fca59be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31621)[0m     @     0x7fca59bde388 at::native::copy_impl()
[2m[36m(pid=31666)[0m     @     0x7faad380b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31666)[0m     @     0x565153bcefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31666)[0m     @     0x565153b29b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31666)[0m     @     0x565153bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31666)[0m     @     0x565153bb5a20 method_vectorcall
[2m[36m(pid=31666)[0m     @     0x565153b29bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31666)[0m     @     0x565153bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31666)[0m     @     0x565153bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31666)[0m     @     0x565153b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31666)[0m     @     0x565153bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31666)[0m     @     0x565153bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31666)[0m     @     0x565153b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31666)[0m     @     0x565153bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31666)[0m     @     0x565153bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31666)[0m     @     0x565153b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31666)[0m     @     0x565153bb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31666)[0m     @     0x565153bb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31666)[0m     @     0x565153b2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31628)[0m     @     0x7f9444e77d91 at::TensorIterator::for_each()
[2m[36m(pid=31628)[0m     @     0x7f944575ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31628)[0m     @     0x7f944577dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31607)[0m     @     0x7f202506ed91 at::TensorIterator::for_each()
[2m[36m(pid=31607)[0m     @     0x7f2025951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31607)[0m     @     0x7f2025974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31607)[0m     @     0x7f2024e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31607)[0m     @     0x7f2024e14388 at::native::copy_impl()
[2m[36m(pid=31627)[0m     @     0x7f73cc06ed91 at::TensorIterator::for_each()
[2m[36m(pid=31627)[0m     @     0x7f73cc951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31627)[0m     @     0x7f73cc974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31643)[0m     @     0x7ef2942c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31643)[0m     @     0x7ef2942e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31643)[0m     @     0x7ef293787a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31643)[0m     @     0x7ef293785388 at::native::copy_impl()
[2m[36m(pid=31711)[0m     @     0x7f5537f53d91 at::TensorIterator::for_each()
[2m[36m(pid=31711)[0m     @     0x7f5538836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31711)[0m     @     0x7f5538859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31711)[0m     @     0x7f5537cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31731)[0m     @     0x7f1dbfd60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31731)[0m     @     0x7f1dbf202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31731)[0m     @     0x7f1dbf200388 at::native::copy_impl()
[2m[36m(pid=31731)[0m     @     0x7f1dbf2025a4 at::native::copy_()
[2m[36m(pid=31724)[0m     @     0x5652ffde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31724)[0m     @     0x5652ffde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31724)[0m     @     0x5652ffd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31724)[0m     @     0x5652ffde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31724)[0m     @     0x5652ffde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31724)[0m     @     0x5652ffd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31724)[0m     @     0x5652ffde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31724)[0m     @     0x5652ffde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31724)[0m     @     0x5652ffd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31724)[0m     @     0x5652ffde2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31724)[0m     @     0x5652ffde3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31724)[0m     @     0x5652ffd58689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x7efe7a1ffd91 at::TensorIterator::for_each()
[2m[36m(pid=31625)[0m     @     0x7efe7aae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31625)[0m     @     0x7efe7ab05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31625)[0m     @     0x7efe79fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31625)[0m     @     0x7efe79fa5388 at::native::copy_impl()
[2m[36m(pid=31625)[0m     @     0x7efe79fa75a4 at::native::copy_()
[2m[36m(pid=31665)[0m     @     0x562d38079baf _PyEval_EvalCodeWithName
[2m[36m(pid=31665)[0m     @     0x562d3807a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31665)[0m     @     0x562d37fef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x7fac9cd12d91 at::TensorIterator::for_each()
[2m[36m(pid=31633)[0m     @     0x7fac9d5f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31633)[0m     @     0x7fac9d618c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31633)[0m     @     0x7fac9cabaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31633)[0m     @     0x7fac9cab8388 at::native::copy_impl()
[2m[36m(pid=31611)[0m     @     0x7f29c67e5d91 at::TensorIterator::for_each()
[2m[36m(pid=31611)[0m     @     0x7f29c70c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31611)[0m     @     0x7f29c70ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31611)[0m     @     0x7f29c658da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31611)[0m     @     0x7f29c658b388 at::native::copy_impl()
[2m[36m(pid=31660)[0m     @     0x7f24ab762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31660)[0m     @     0x7f24ab785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31660)[0m     @     0x7f24aac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31660)[0m     @     0x7f24aac25388 at::native::copy_impl()
[2m[36m(pid=31660)[0m     @     0x7f24aac275a4 at::native::copy_()
[2m[36m(pid=31610)[0m     @     0x7edaa34f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31610)[0m     @     0x7edaa34f0388 at::native::copy_impl()
[2m[36m(pid=31610)[0m     @     0x7edaa34f25a4 at::native::copy_()
[2m[36m(pid=31610)[0m     @     0x7edaa3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31610)[0m     @     0x7edaa60b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31662)[0m     @     0x7f0ddc5daad3 at::TensorIterator::for_each()
[2m[36m(pid=31662)[0m     @     0x7f0ddc5dad91 at::TensorIterator::for_each()
[2m[36m(pid=31662)[0m     @     0x7f0ddcebdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31662)[0m     @     0x7f0ddcee0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31662)[0m     @     0x7f0ddc382a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31661)[0m     @     0x7f813f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=31661)[0m     @     0x7f813f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31661)[0m     @     0x7f813f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31661)[0m     @     0x7f813ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31661)[0m     @     0x7f813ee99388 at::native::copy_impl()
[2m[36m(pid=31661)[0m     @     0x7f813ee9b5a4 at::native::copy_()
[2m[36m(pid=31692)[0m     @     0x7fb9460a8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31692)[0m     @     0x7fb9457d37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31692)[0m     @     0x7fb9457d68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31690)[0m     @     0x7f872651e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31690)[0m     @     0x7f872651ead3 at::TensorIterator::for_each()
[2m[36m(pid=31690)[0m     @     0x7f872651ed91 at::TensorIterator::for_each()
[2m[36m(pid=31690)[0m     @     0x7f8726e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31690)[0m     @     0x7f8726e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31677)[0m     @     0x7f2b709b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31677)[0m     @     0x7f2b6fe55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31677)[0m     @     0x7f2b6fe53388 at::native::copy_impl()
[2m[36m(pid=31677)[0m     @     0x7f2b6fe555a4 at::native::copy_()
[2m[36m(pid=31677)[0m     @     0x7f2b705404f5 at::Tensor::copy_()
[2m[36m(pid=31716)[0m     @     0x7f7e2afa5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31716)[0m     @     0x7f7e2afc8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31716)[0m     @     0x7f7e2a46aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31716)[0m     @     0x7f7e2a468388 at::native::copy_impl()
[2m[36m(pid=31716)[0m     @     0x7f7e2a46a5a4 at::native::copy_()
[2m[36m(pid=31681)[0m     @     0x7f94ee2fed91 at::TensorIterator::for_each()
[2m[36m(pid=31681)[0m     @     0x7f94eebe1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31681)[0m     @     0x7f94eec04c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31681)[0m     @     0x7f94ee0a6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31681)[0m     @     0x7f94ee0a4388 at::native::copy_impl()
[2m[36m(pid=31681)[0m     @     0x7f94ee0a65a4 at::native::copy_()
[2m[36m(pid=31626)[0m     @     0x7f815ec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31626)[0m     @     0x7f815ec25388 at::native::copy_impl()
[2m[36m(pid=31626)[0m     @     0x7f815ec275a4 at::native::copy_()
[2m[36m(pid=31626)[0m     @     0x7f815f3124f5 at::Tensor::copy_()
[2m[36m(pid=31679)[0m     @     0x7f2811138d91 at::TensorIterator::for_each()
[2m[36m(pid=31679)[0m     @     0x7f2811a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31679)[0m     @     0x7f2811a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31679)[0m     @     0x7f2810ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31679)[0m     @     0x7f2810ede388 at::native::copy_impl()
[2m[36m(pid=31679)[0m     @     0x7f2810ee05a4 at::native::copy_()
[2m[36m(pid=31696)[0m     @     0x7f4dabaa4d91 at::TensorIterator::for_each()
[2m[36m(pid=31696)[0m     @     0x7f4dac387b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31696)[0m     @     0x7f4dac3aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31696)[0m     @     0x7f4dab84ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31696)[0m     @     0x7f4dab84a388 at::native::copy_impl()
[2m[36m(pid=31696)[0m     @     0x7f4dab84c5a4 at::native::copy_()
[2m[36m(pid=31709)[0m     @     0x7f4b62e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=31709)[0m     @     0x7f4b63762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31709)[0m     @     0x7f4b63785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31709)[0m     @     0x7f4b62c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31709)[0m     @     0x7f4b62c25388 at::native::copy_impl()
[2m[36m(pid=31709)[0m     @     0x7f4b62c275a4 at::native::copy_()
[2m[36m(pid=31680)[0m     @     0x7f72fd80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31680)[0m     @     0x7f72fd82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31680)[0m     @     0x7f72fcccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31680)[0m     @     0x7f72fcccd388 at::native::copy_impl()
[2m[36m(pid=31680)[0m     @     0x7f72fcccf5a4 at::native::copy_()
[2m[36m(pid=31694)[0m     @     0x7f78a06b2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31694)[0m     @     0x7f78a06d5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31694)[0m     @     0x7f789fb77a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31694)[0m     @     0x7f789fb75388 at::native::copy_impl()
[2m[36m(pid=31694)[0m     @     0x7f789fb775a4 at::native::copy_()
[2m[36m(pid=31640)[0m     @     0x7fc880f27d91 at::TensorIterator::for_each()
[2m[36m(pid=31640)[0m     @     0x7fc88180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31640)[0m     @     0x7fc88182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31640)[0m     @     0x7fc880ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31640)[0m     @     0x7fc880ccd388 at::native::copy_impl()
[2m[36m(pid=31701)[0m     @     0x7fb66354df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31701)[0m     @     0x7fb662c787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31636)[0m     @     0x7ee42bc98d91 at::TensorIterator::for_each()
[2m[36m(pid=31636)[0m     @     0x7ee42c57bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31636)[0m     @     0x7ee42c59ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31636)[0m     @     0x7ee42ba40a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31636)[0m     @     0x7ee42ba3e388 at::native::copy_impl()
[2m[36m(pid=31636)[0m     @     0x7ee42ba405a4 at::native::copy_()
[2m[36m(pid=31706)[0m     @     0x7f8c48a9a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31675)[0m     @     0x7f65e933b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31675)[0m     @     0x7f65e933bad3 at::TensorIterator::for_each()
[2m[36m(pid=31689)[0m     @     0x7ee188f27d91 at::TensorIterator::for_each()
[2m[36m(pid=31689)[0m     @     0x7ee18980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31689)[0m     @     0x7ee18982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31689)[0m     @     0x7ee188ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31689)[0m     @     0x7ee188ccd388 at::native::copy_impl()
[2m[36m(pid=31684)[0m     @     0x7f1c5f46fd91 at::TensorIterator::for_each()
[2m[36m(pid=31684)[0m     @     0x7f1c5fd52b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31684)[0m     @     0x7f1c5fd75c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31623)[0m     @     0x7f91be52fd91 at::TensorIterator::for_each()
[2m[36m(pid=31623)[0m     @     0x7f91bee12b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31623)[0m     @     0x7f91bee35c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31623)[0m     @     0x7f91be2d7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31623)[0m     @     0x7f91be2d5388 at::native::copy_impl()
[2m[36m(pid=31685)[0m     @     0x7f75b5b37390 (unknown)
[2m[36m(pid=31685)[0m     @     0x7f46b5a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=31685)[0m     @     0x7f46b51357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=31685)[0m     @     0x7f46b51388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31631)[0m     @     0x7fb28e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31631)[0m     @     0x7fb28e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31631)[0m     @     0x7fb28d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31631)[0m     @     0x7fb28d60e388 at::native::copy_impl()
[2m[36m(pid=31728)[0m     @     0x7f315bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=31638)[0m     @     0x7f1a91e33388 at::native::copy_impl()
[2m[36m(pid=31638)[0m     @     0x7f1a91e355a4 at::native::copy_()
[2m[36m(pid=31638)[0m     @     0x7f1a925204f5 at::Tensor::copy_()
[2m[36m(pid=31700)[0m     @     0x7f4ca65faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31700)[0m     @     0x7f4ca65f8388 at::native::copy_impl()
[2m[36m(pid=31700)[0m     @     0x7f4ca65fa5a4 at::native::copy_()
[2m[36m(pid=31616)[0m     @     0x7ed2134f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31616)[0m     @     0x7ed2134f0388 at::native::copy_impl()
[2m[36m(pid=31616)[0m     @     0x7ed2134f25a4 at::native::copy_()
[2m[36m(pid=31612)[0m     @     0x7f72f2b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31612)[0m     @     0x7f72f2b82388 at::native::copy_impl()
[2m[36m(pid=31612)[0m     @     0x7f72f2b845a4 at::native::copy_()
[2m[36m(pid=31620)[0m     @     0x7f7beb80ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31620)[0m     @     0x7f7beb80a388 at::native::copy_impl()
[2m[36m(pid=31620)[0m     @     0x7f7beb80c5a4 at::native::copy_()
[2m[36m(pid=31620)[0m     @     0x7f7bebef74f5 at::Tensor::copy_()
[2m[36m(pid=31620)[0m     @     0x7f7bee3ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31619)[0m     @     0x7fbea427a5a4 at::native::copy_()
[2m[36m(pid=31619)[0m     @     0x7fbea49654f5 at::Tensor::copy_()
[2m[36m(pid=31619)[0m     @     0x7fbea6e388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31739)[0m     @     0x7fc3337fbd91 at::TensorIterator::for_each()
[2m[36m(pid=31739)[0m     @     0x7fc3340deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31739)[0m     @     0x7fc334101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31739)[0m     @     0x7fc3335a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31739)[0m     @     0x7fc3335a1388 at::native::copy_impl()
[2m[36m(pid=31618)[0m     @     0x7f805f9d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31618)[0m     @     0x7f805f9d0388 at::native::copy_impl()
[2m[36m(pid=31618)[0m     @     0x7f805f9d25a4 at::native::copy_()
[2m[36m(pid=31618)[0m     @     0x7f80600bd4f5 at::Tensor::copy_()
[2m[36m(pid=31618)[0m     @     0x7f80625908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31683)[0m     @     0x7ee37cd86388 at::native::copy_impl()
[2m[36m(pid=31683)[0m     @     0x7ee37cd885a4 at::native::copy_()
[2m[36m(pid=31683)[0m     @     0x7ee37d4734f5 at::Tensor::copy_()
[2m[36m(pid=31683)[0m     @     0x7ee37f9468de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31683)[0m     @     0x7ee37d4734f5 at::Tensor::copy_()
[2m[36m(pid=31683)[0m     @     0x7ee38351e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31683)[0m     @     0x55ed67760fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31683)[0m     @     0x55ed676bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31683)[0m     @     0x55ed67746baf _PyEval_EvalCodeWithName
[2m[36m(pid=31683)[0m     @     0x55ed67747a20 method_vectorcall
[2m[36m(pid=31683)[0m     @     0x55ed676bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31683)[0m     @     0x55ed67746baf _PyEval_EvalCodeWithName
[2m[36m(pid=31683)[0m     @     0x55ed67747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31683)[0m     @     0x55ed676bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31683)[0m     @     0x55ed67746baf _PyEval_EvalCodeWithName
[2m[36m(pid=31683)[0m     @     0x55ed67747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31683)[0m     @     0x55ed676bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31683)[0m     @     0x55ed67746baf _PyEval_EvalCodeWithName
[2m[36m(pid=31683)[0m     @     0x55ed67747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31683)[0m     @     0x55ed676bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31683)[0m     @     0x55ed67746baf _PyEval_EvalCodeWithName
[2m[36m(pid=31683)[0m     @     0x55ed67747643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31683)[0m     @     0x55ed676bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x7ee507630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31740)[0m     @     0x7ee507653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31740)[0m     @     0x7ee506af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31740)[0m     @     0x7ee506af3388 at::native::copy_impl()
[2m[36m(pid=31740)[0m     @     0x7ee506af55a4 at::native::copy_()
[2m[36m(pid=31635)[0m     @     0x7f0fcf564d91 at::TensorIterator::for_each()
[2m[36m(pid=31635)[0m     @     0x7f0fcfe47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31635)[0m     @     0x7f0fcfe6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31635)[0m     @     0x7f0fcf30ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31635)[0m     @     0x7f0fcf30a388 at::native::copy_impl()
[2m[36m(pid=31635)[0m     @     0x7f0fcf30c5a4 at::native::copy_()
[2m[36m(pid=31641)[0m     @     0x7f74b27efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31641)[0m     @     0x7f74b1c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31641)[0m     @     0x7f74b1c8f388 at::native::copy_impl()
[2m[36m(pid=31641)[0m     @     0x7f74b1c915a4 at::native::copy_()
[2m[36m(pid=31670)[0m     @     0x7f0d805a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31670)[0m     @     0x7f0d805a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=31670)[0m     @     0x7f0d805a5d91 at::TensorIterator::for_each()
[2m[36m(pid=31670)[0m     @     0x7f0d80e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31670)[0m     @     0x7f0d80eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31622)[0m     @     0x7ef76a16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31622)[0m     @     0x7ef769610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31622)[0m     @     0x7ef76960e388 at::native::copy_impl()
[2m[36m(pid=31622)[0m     @     0x7ef7696105a4 at::native::copy_()
[2m[36m(pid=31622)[0m     @     0x7ef769cfb4f5 at::Tensor::copy_()
[2m[36m(pid=31672)[0m     @     0x7f334a5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31672)[0m     @     0x7f334a5f8388 at::native::copy_impl()
[2m[36m(pid=31672)[0m     @     0x7f334a5fa5a4 at::native::copy_()
[2m[36m(pid=31672)[0m     @     0x7f334ace54f5 at::Tensor::copy_()
[2m[36m(pid=31672)[0m     @     0x7f334d1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31735)[0m     @     0x7f3a92594ad3 at::TensorIterator::for_each()
[2m[36m(pid=31735)[0m     @     0x7f3a92594d91 at::TensorIterator::for_each()
[2m[36m(pid=31735)[0m     @     0x7f3a92e77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31735)[0m     @     0x7f3a92e9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31735)[0m     @     0x7f3a9233ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31734)[0m     @     0x7fb9aa4ffc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31734)[0m     @     0x7fb9a99a1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31734)[0m     @     0x7fb9a999f388 at::native::copy_impl()
[2m[36m(pid=31734)[0m     @     0x7fb9a99a15a4 at::native::copy_()
[2m[36m(pid=31734)[0m     @     0x7fb9aa08c4f5 at::Tensor::copy_()
[2m[36m(pid=31697)[0m     @     0x7ef0012f8388 at::native::copy_impl()
[2m[36m(pid=31697)[0m     @     0x7ef0012fa5a4 at::native::copy_()
[2m[36m(pid=31697)[0m     @     0x7ef0019e54f5 at::Tensor::copy_()
[2m[36m(pid=31697)[0m     @     0x7ef003eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31608)[0m     @     0x7efceddb55a4 at::native::copy_()
[2m[36m(pid=31608)[0m     @     0x7efcee4a04f5 at::Tensor::copy_()
[2m[36m(pid=31608)[0m     @     0x7efcf09738de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31624)[0m     @     0x7f7bfc14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31624)[0m     @     0x7f7bfc148388 at::native::copy_impl()
[2m[36m(pid=31624)[0m     @     0x7f7bfc14a5a4 at::native::copy_()
[2m[36m(pid=31624)[0m     @     0x7f7bfc8354f5 at::Tensor::copy_()
[2m[36m(pid=31606)[0m     @     0x7ecdc858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31606)[0m     @     0x7ecdc8589388 at::native::copy_impl()
[2m[36m(pid=31606)[0m     @     0x7ecdc858b5a4 at::native::copy_()
[2m[36m(pid=31606)[0m     @     0x7ecdc8c764f5 at::Tensor::copy_()
[2m[36m(pid=31606)[0m     @     0x7ecdcb1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31615)[0m     @     0x7f3de2af55a4 at::native::copy_()
[2m[36m(pid=31615)[0m     @     0x7f3de31e04f5 at::Tensor::copy_()
[2m[36m(pid=31615)[0m     @     0x7f3de56b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31615)[0m     @     0x7f3de31e04f5 at::Tensor::copy_()
[2m[36m(pid=31695)[0m     @     0x7f4516fc9388 at::native::copy_impl()
[2m[36m(pid=31695)[0m     @     0x7f4516fcb5a4 at::native::copy_()
[2m[36m(pid=31695)[0m     @     0x7f45176b64f5 at::Tensor::copy_()
[2m[36m(pid=31695)[0m     @     0x7f4519b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31614)[0m     @     0x7f1e721654f5 at::Tensor::copy_()
[2m[36m(pid=31614)[0m     @     0x7f1e746388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31614)[0m     @     0x7f1e721654f5 at::Tensor::copy_()
[2m[36m(pid=31614)[0m     @     0x7f1e7821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31614)[0m     @     0x563f41112fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31614)[0m     @     0x563f4106db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31614)[0m     @     0x563f410f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31614)[0m     @     0x563f410f9a20 method_vectorcall
[2m[36m(pid=31614)[0m     @     0x563f4106dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31614)[0m     @     0x563f410f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31614)[0m     @     0x563f410f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31614)[0m     @     0x563f4106e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31614)[0m     @     0x563f410f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31614)[0m     @     0x563f410f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31614)[0m     @     0x563f4106e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31614)[0m     @     0x563f410f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31614)[0m     @     0x563f410f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31614)[0m     @     0x563f4106e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31614)[0m     @     0x563f410f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=31614)[0m     @     0x563f410f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31614)[0m     @     0x563f4106e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x7ef05b60a388 at::native::copy_impl()
[2m[36m(pid=31713)[0m     @     0x7ef05b60c5a4 at::native::copy_()
[2m[36m(pid=31713)[0m     @     0x7ef05bcf74f5 at::Tensor::copy_()
[2m[36m(pid=31713)[0m     @     0x7ef05e1ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31617)[0m     @     0x7fb870bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31617)[0m     @     0x7fb870bc8388 at::native::copy_impl()
[2m[36m(pid=31617)[0m     @     0x7fb870bca5a4 at::native::copy_()
[2m[36m(pid=31617)[0m     @     0x7fb8712b54f5 at::Tensor::copy_()
[2m[36m(pid=31621)[0m     @     0x7fca59be05a4 at::native::copy_()
[2m[36m(pid=31621)[0m     @     0x7fca5a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=31621)[0m     @     0x7fca5c79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31621)[0m     @     0x7fca5a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=31621)[0m     @     0x7fca6037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31621)[0m     @     0x555754db7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31621)[0m     @     0x555754d12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31621)[0m     @     0x555754d9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31621)[0m     @     0x555754d9ea20 method_vectorcall
[2m[36m(pid=31628)[0m     @     0x7f9444c1fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31628)[0m     @     0x7f9444c1d388 at::native::copy_impl()
[2m[36m(pid=31628)[0m     @     0x7f9444c1f5a4 at::native::copy_()
[2m[36m(pid=31628)[0m     @     0x7f944530a4f5 at::Tensor::copy_()
[2m[36m(pid=31628)[0m     @     0x7f94477dd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31607)[0m     @     0x7f2024e165a4 at::native::copy_()
[2m[36m(pid=31607)[0m     @     0x7f20255014f5 at::Tensor::copy_()
[2m[36m(pid=31607)[0m     @     0x7f20279d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31627)[0m     @     0x7f73cbe16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31627)[0m     @     0x7f73cbe14388 at::native::copy_impl()
[2m[36m(pid=31627)[0m     @     0x7f73cbe165a4 at::native::copy_()
[2m[36m(pid=31627)[0m     @     0x7f73cc5014f5 at::Tensor::copy_()
[2m[36m(pid=31627)[0m     @     0x7f73ce9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31643)[0m     @     0x7ef2937875a4 at::native::copy_()
[2m[36m(pid=31643)[0m     @     0x7ef293e724f5 at::Tensor::copy_()
[2m[36m(pid=31643)[0m     @     0x7ef2963458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31643)[0m     @     0x7ef293e724f5 at::Tensor::copy_()
[2m[36m(pid=31711)[0m     @     0x7f5537cf9388 at::native::copy_impl()
[2m[36m(pid=31711)[0m     @     0x7f5537cfb5a4 at::native::copy_()
[2m[36m(pid=31711)[0m     @     0x7f55383e64f5 at::Tensor::copy_()
[2m[36m(pid=31711)[0m     @     0x7f553a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31731)[0m     @     0x7f1dbf8ed4f5 at::Tensor::copy_()
[2m[36m(pid=31731)[0m     @     0x7f1dc1dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31731)[0m     @     0x7f1dbf8ed4f5 at::Tensor::copy_()
[2m[36m(pid=31731)[0m     @     0x7f1dc599879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31731)[0m     @     0x555fc1a61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31731)[0m     @     0x555fc19bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31731)[0m     @     0x555fc1a47baf _PyEval_EvalCodeWithName
[2m[36m(pid=31731)[0m     @     0x555fc1a48a20 method_vectorcall
[2m[36m(pid=31731)[0m     @     0x555fc19bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31731)[0m     @     0x555fc1a47baf _PyEval_EvalCodeWithName
[2m[36m(pid=31731)[0m     @     0x555fc1a48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31625)[0m     @     0x7efe7a6924f5 at::Tensor::copy_()
[2m[36m(pid=31625)[0m     @     0x7efe7cb658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31633)[0m     @     0x7fac9caba5a4 at::native::copy_()
[2m[36m(pid=31633)[0m     @     0x7fac9d1a54f5 at::Tensor::copy_()
[2m[36m(pid=31633)[0m     @     0x7fac9f6788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31611)[0m     @     0x7f29c658d5a4 at::native::copy_()
[2m[36m(pid=31611)[0m     @     0x7f29c6c784f5 at::Tensor::copy_()
[2m[36m(pid=31611)[0m     @     0x7f29c914b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31660)[0m     @     0x7f24ab3124f5 at::Tensor::copy_()
[2m[36m(pid=31660)[0m     @     0x7f24ad7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31660)[0m     @     0x7f24ab3124f5 at::Tensor::copy_()
[2m[36m(pid=31660)[0m     @     0x7f24b13bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31660)[0m     @     0x561b63e52fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31610)[0m     @     0x7edaa3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31610)[0m     @     0x7edaa9c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31610)[0m     @     0x5587cebfefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31610)[0m     @     0x5587ceb59b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31610)[0m     @     0x5587cebe4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31610)[0m     @     0x5587cebe5a20 method_vectorcall
[2m[36m(pid=31610)[0m     @     0x5587ceb59bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31610)[0m     @     0x5587cebe4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31610)[0m     @     0x5587cebe5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31610)[0m     @     0x5587ceb5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31610)[0m     @     0x5587cebe4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31610)[0m     @     0x5587cebe5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31610)[0m     @     0x5587ceb5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31610)[0m     @     0x5587cebe4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31610)[0m     @     0x5587cebe5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31610)[0m     @     0x5587ceb5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31610)[0m     @     0x5587cebe4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31610)[0m     @     0x5587cebe5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31610)[0m     @     0x5587ceb5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x7f0ddc380388 at::native::copy_impl()
[2m[36m(pid=31662)[0m     @     0x7f0ddc3825a4 at::native::copy_()
[2m[36m(pid=31661)[0m     @     0x7f813f5864f5 at::Tensor::copy_()
[2m[36m(pid=31661)[0m     @     0x7f8141a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31692)[0m     @     0x7fb9457d6ad3 at::TensorIterator::for_each()
[2m[36m(pid=31692)[0m     @     0x7fb9457d6d91 at::TensorIterator::for_each()
[2m[36m(pid=31692)[0m     @     0x7fb9460b9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31692)[0m     @     0x7fb9460dcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31690)[0m     @     0x7f87262c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31690)[0m     @     0x7f87262c4388 at::native::copy_impl()
[2m[36m(pid=31690)[0m     @     0x7f87262c65a4 at::native::copy_()
[2m[36m(pid=31677)[0m     @     0x7f2b72a138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31677)[0m     @     0x7f2b705404f5 at::Tensor::copy_()
[2m[36m(pid=31677)[0m     @     0x7f2b765eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31677)[0m     @     0x561aec1eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31677)[0m     @     0x561aec145b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31677)[0m     @     0x561aec1d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31677)[0m     @     0x561aec1d1a20 method_vectorcall
[2m[36m(pid=31677)[0m     @     0x561aec145bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31677)[0m     @     0x561aec1d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31677)[0m     @     0x561aec1d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31677)[0m     @     0x561aec146689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31677)[0m     @     0x561aec1d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31677)[0m     @     0x561aec1d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31677)[0m     @     0x561aec146689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31677)[0m     @     0x561aec1d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31716)[0m     @     0x7f7e2ab554f5 at::Tensor::copy_()
[2m[36m(pid=31716)[0m     @     0x7f7e2d0288de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31716)[0m     @     0x7f7e2ab554f5 at::Tensor::copy_()
[2m[36m(pid=31681)[0m     @     0x7f94ee7914f5 at::Tensor::copy_()
[2m[36m(pid=31681)[0m     @     0x7f94f0c648de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31681)[0m     @     0x7f94ee7914f5 at::Tensor::copy_()
[2m[36m(pid=31626)[0m     @     0x7f81617e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31626)[0m     @     0x7f815f3124f5 at::Tensor::copy_()
[2m[36m(pid=31626)[0m     @     0x7f81653bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31626)[0m     @     0x5635bf49ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31626)[0m     @     0x5635bf3fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31626)[0m     @     0x5635bf485baf _PyEval_EvalCodeWithName
[2m[36m(pid=31626)[0m     @     0x5635bf486a20 method_vectorcall
[2m[36m(pid=31626)[0m     @     0x5635bf3fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31626)[0m     @     0x5635bf485baf _PyEval_EvalCodeWithName
[2m[36m(pid=31626)[0m     @     0x5635bf486643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31626)[0m     @     0x5635bf3fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31626)[0m     @     0x5635bf485baf _PyEval_EvalCodeWithName
[2m[36m(pid=31626)[0m     @     0x5635bf486643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31626)[0m     @     0x5635bf3fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31626)[0m     @     0x5635bf485baf _PyEval_EvalCodeWithName
[2m[36m(pid=31626)[0m     @     0x5635bf486643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31626)[0m     @     0x5635bf3fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31626)[0m     @     0x5635bf485baf _PyEval_EvalCodeWithName
[2m[36m(pid=31626)[0m     @     0x5635bf486643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31626)[0m     @     0x5635bf3fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31679)[0m     @     0x7f28115cb4f5 at::Tensor::copy_()
[2m[36m(pid=31679)[0m     @     0x7f2813a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31696)[0m     @     0x7f4dabf374f5 at::Tensor::copy_()
[2m[36m(pid=31696)[0m     @     0x7f4dae40a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31709)[0m     @     0x7f4b633124f5 at::Tensor::copy_()
[2m[36m(pid=31709)[0m     @     0x7f4b657e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31709)[0m     @     0x7f4b633124f5 at::Tensor::copy_()
[2m[36m(pid=31680)[0m     @     0x7f72fd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=31680)[0m     @     0x7f72ff88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31680)[0m     @     0x7f72fd3ba4f5 at::Tensor::copy_()
[2m[36m(pid=31680)[0m     @     0x7f730346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31680)[0m     @     0x560f55c3afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31680)[0m     @     0x560f55b95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31694)[0m     @     0x7f78a02624f5 at::Tensor::copy_()
[2m[36m(pid=31694)[0m     @     0x7f78a27358de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31694)[0m     @     0x7f78a02624f5 at::Tensor::copy_()
[2m[36m(pid=31640)[0m     @     0x7fc880ccf5a4 at::native::copy_()
[2m[36m(pid=31640)[0m     @     0x7fc8813ba4f5 at::Tensor::copy_()
[2m[36m(pid=31640)[0m     @     0x7fc88388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31701)[0m     @     0x7fb662c7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=31701)[0m     @     0x7fb662c7bad3 at::TensorIterator::for_each()
[2m[36m(pid=31636)[0m     @     0x7ee42c12b4f5 at::Tensor::copy_()
[2m[36m(pid=31636)[0m     @     0x7ee42e5fe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31636)[0m     @     0x7ee42c12b4f5 at::Tensor::copy_()
[2m[36m(pid=31636)[0m     @     0x7ee4321d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31636)[0m     @     0x55a22426efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31636)[0m     @     0x55a2241c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31636)[0m     @     0x55a224254baf _PyEval_EvalCodeWithName
[2m[36m(pid=31636)[0m     @     0x55a224255a20 method_vectorcall
[2m[36m(pid=31636)[0m     @     0x55a2241c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31636)[0m     @     0x55a224254baf _PyEval_EvalCodeWithName
[2m[36m(pid=31636)[0m     @     0x55a224255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31636)[0m     @     0x55a2241ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31636)[0m     @     0x55a224254baf _PyEval_EvalCodeWithName
[2m[36m(pid=31636)[0m     @     0x55a224255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31636)[0m     @     0x55a2241ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31636)[0m     @     0x55a224254baf _PyEval_EvalCodeWithName
[2m[36m(pid=31636)[0m     @     0x55a224255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31636)[0m     @     0x55a2241ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31636)[0m     @     0x55a224254baf _PyEval_EvalCodeWithName
[2m[36m(pid=31636)[0m     @     0x55a224255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31636)[0m     @     0x55a2241ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31706)[0m     @     0x7f8c48a9aad3 at::TensorIterator::for_each()
[2m[36m(pid=31706)[0m     @     0x7f8c48a9ad91 at::TensorIterator::for_each()
[2m[36m(pid=31706)[0m     @     0x7f8c4937db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31706)[0m     @     0x7f8c493a0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31706)[0m     @     0x7f8c48842a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31675)[0m     @     0x7f65e933bd91 at::TensorIterator::for_each()
[2m[36m(pid=31675)[0m     @     0x7f65e9c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31675)[0m     @     0x7f65e9c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31675)[0m     @     0x7f65e90e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31675)[0m     @     0x7f65e90e1388 at::native::copy_impl()
[2m[36m(pid=31689)[0m     @     0x7ee188ccf5a4 at::native::copy_()
[2m[36m(pid=31689)[0m     @     0x7ee1893ba4f5 at::Tensor::copy_()
[2m[36m(pid=31689)[0m     @     0x7ee18b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31684)[0m     @     0x7f1c5f217a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31684)[0m     @     0x7f1c5f215388 at::native::copy_impl()
[2m[36m(pid=31684)[0m     @     0x7f1c5f2175a4 at::native::copy_()
[2m[36m(pid=31684)[0m     @     0x7f1c5f9024f5 at::Tensor::copy_()
[2m[36m(pid=31623)[0m     @     0x7f91be2d75a4 at::native::copy_()
[2m[36m(pid=31623)[0m     @     0x7f91be9c24f5 at::Tensor::copy_()
[2m[36m(pid=31623)[0m     @     0x7f91c0e958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31685)[0m     @     0x7f46b5138ad3 at::TensorIterator::for_each()
[2m[36m(pid=31685)[0m     @     0x7f46b5138d91 at::TensorIterator::for_each()
[2m[36m(pid=31685)[0m     @     0x7f46b5a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31685)[0m     @     0x7f46b5a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31631)[0m     @     0x7fb28d6105a4 at::native::copy_()
[2m[36m(pid=31631)[0m     @     0x7fb28dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=31631)[0m     @     0x7fb2901ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31631)[0m     @     0x7fb28dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=31728)[0m     @     0x7f315bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=31728)[0m     @     0x7f315c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31638)[0m     @     0x7f1a949f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31638)[0m     @     0x7f1a925204f5 at::Tensor::copy_()
[2m[36m(pid=31638)[0m     @     0x7f1a985cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31638)[0m     @     0x562931791fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31638)[0m     @     0x5629316ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31638)[0m     @     0x562931777baf _PyEval_EvalCodeWithName
[2m[36m(pid=31638)[0m     @     0x562931778a20 method_vectorcall
[2m[36m(pid=31638)[0m     @     0x5629316ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31638)[0m     @     0x562931777baf _PyEval_EvalCodeWithName
[2m[36m(pid=31638)[0m     @     0x562931778643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31638)[0m     @     0x5629316ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31638)[0m     @     0x562931777baf _PyEval_EvalCodeWithName
[2m[36m(pid=31638)[0m     @     0x562931778643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31638)[0m     @     0x5629316ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31638)[0m     @     0x562931777baf _PyEval_EvalCodeWithName
[2m[36m(pid=31638)[0m     @     0x562931778643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31638)[0m     @     0x5629316ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31638)[0m     @     0x562931777baf _PyEval_EvalCodeWithName
[2m[36m(pid=31638)[0m     @     0x562931778643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31638)[0m     @     0x5629316ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31700)[0m     @     0x7f4ca6ce54f5 at::Tensor::copy_()
[2m[36m(pid=31700)[0m     @     0x7f4ca91b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31700)[0m     @     0x7f4ca6ce54f5 at::Tensor::copy_()
[2m[36m(pid=31700)[0m     @     0x7f4cacd9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31700)[0m     @     0x556c73c0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31700)[0m     @     0x556c73b68b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31700)[0m     @     0x556c73bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31700)[0m     @     0x556c73bf4a20 method_vectorcall
[2m[36m(pid=31700)[0m     @     0x556c73b68bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31700)[0m     @     0x556c73bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31700)[0m     @     0x556c73bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31700)[0m     @     0x556c73b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31700)[0m     @     0x556c73bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31700)[0m     @     0x556c73bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31700)[0m     @     0x556c73b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31700)[0m     @     0x556c73bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31700)[0m     @     0x556c73bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31700)[0m     @     0x556c73b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31700)[0m     @     0x556c73bf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=31700)[0m     @     0x556c73bf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31700)[0m     @     0x556c73b69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31616)[0m     @     0x7ed213bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31616)[0m     @     0x7ed2160b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31616)[0m     @     0x7ed213bdd4f5 at::Tensor::copy_()
[2m[36m(pid=31616)[0m     @     0x7ed219c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31616)[0m     @     0x55eae04a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31616)[0m     @     0x55eae0402b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31616)[0m     @     0x55eae048dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31616)[0m     @     0x55eae048ea20 method_vectorcall
[2m[36m(pid=31616)[0m     @     0x55eae0402bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31616)[0m     @     0x55eae048dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31616)[0m     @     0x55eae048e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31616)[0m     @     0x55eae0403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31616)[0m     @     0x55eae048dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31616)[0m     @     0x55eae048e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31616)[0m     @     0x55eae0403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31612)[0m     @     0x7f72f326f4f5 at::Tensor::copy_()
[2m[36m(pid=31612)[0m     @     0x7f72f57428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31612)[0m     @     0x7f72f326f4f5 at::Tensor::copy_()
[2m[36m(pid=31612)[0m     @     0x7f72f931a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31612)[0m     @     0x555637fc9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31612)[0m     @     0x555637f24b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31612)[0m     @     0x555637fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31612)[0m     @     0x555637fb0a20 method_vectorcall
[2m[36m(pid=31612)[0m     @     0x555637f24bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31612)[0m     @     0x555637fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31612)[0m     @     0x555637fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31612)[0m     @     0x555637f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31612)[0m     @     0x555637fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31612)[0m     @     0x555637fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31612)[0m     @     0x555637f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31620)[0m     @     0x7f7bebef74f5 at::Tensor::copy_()
[2m[36m(pid=31620)[0m     @     0x7f7bf1fa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31620)[0m     @     0x559facd08fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31620)[0m     @     0x559facc63b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31620)[0m     @     0x559facceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31620)[0m     @     0x559faccefa20 method_vectorcall
[2m[36m(pid=31620)[0m     @     0x559facc63bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31620)[0m     @     0x559facceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31620)[0m     @     0x559faccef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31620)[0m     @     0x559facc64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31620)[0m     @     0x559facceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31620)[0m     @     0x559faccef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31620)[0m     @     0x559facc64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31620)[0m     @     0x559facceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31620)[0m     @     0x559faccef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31620)[0m     @     0x559facc64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31620)[0m     @     0x559facceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31620)[0m     @     0x559faccef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31620)[0m     @     0x559facc64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31619)[0m     @     0x7fbea49654f5 at::Tensor::copy_()
[2m[36m(pid=31619)[0m     @     0x7fbeaaa1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31619)[0m     @     0x56447e03cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31619)[0m     @     0x56447df97b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31619)[0m     @     0x56447e022baf _PyEval_EvalCodeWithName
[2m[36m(pid=31619)[0m     @     0x56447e023a20 method_vectorcall
[2m[36m(pid=31619)[0m     @     0x56447df97bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31619)[0m     @     0x56447e022baf _PyEval_EvalCodeWithName
[2m[36m(pid=31619)[0m     @     0x56447e023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31619)[0m     @     0x56447df98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31619)[0m     @     0x56447e022baf _PyEval_EvalCodeWithName
[2m[36m(pid=31619)[0m     @     0x56447e023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31619)[0m     @     0x56447df98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31619)[0m     @     0x56447e022baf _PyEval_EvalCodeWithName
[2m[36m(pid=31619)[0m     @     0x56447e023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31619)[0m     @     0x56447df98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31619)[0m     @     0x56447e022baf _PyEval_EvalCodeWithName
[2m[36m(pid=31619)[0m     @     0x56447e023643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31619)[0m     @     0x56447df98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31739)[0m     @     0x7fc3335a35a4 at::native::copy_()
[2m[36m(pid=31739)[0m     @     0x7fc333c8e4f5 at::Tensor::copy_()
[2m[36m(pid=31739)[0m     @     0x7fc3361618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31618)[0m     @     0x7f80600bd4f5 at::Tensor::copy_()
[2m[36m(pid=31618)[0m     @     0x7f806616879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31618)[0m     @     0x56127f60bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31618)[0m     @     0x56127f566b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31618)[0m     @     0x56127f5f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=31618)[0m     @     0x56127f5f2a20 method_vectorcall
[2m[36m(pid=31618)[0m     @     0x56127f566bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31618)[0m     @     0x56127f5f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=31618)[0m     @     0x56127f5f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31618)[0m     @     0x56127f567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31618)[0m     @     0x56127f5f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=31618)[0m     @     0x56127f5f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31618)[0m     @     0x56127f567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31618)[0m     @     0x56127f5f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=31618)[0m     @     0x56127f5f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31618)[0m     @     0x56127f567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31618)[0m     @     0x56127f5f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=31618)[0m     @     0x56127f5f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31618)[0m     @     0x56127f567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x7ee5071e04f5 at::Tensor::copy_()
[2m[36m(pid=31740)[0m     @     0x7ee5096b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31740)[0m     @     0x7ee5071e04f5 at::Tensor::copy_()
[2m[36m(pid=31740)[0m     @     0x7ee50d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31635)[0m     @     0x7f0fcf9f74f5 at::Tensor::copy_()
[2m[36m(pid=31635)[0m     @     0x7f0fd1eca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31641)[0m     @     0x7f74b237c4f5 at::Tensor::copy_()
[2m[36m(pid=31641)[0m     @     0x7f74b484f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31641)[0m     @     0x7f74b237c4f5 at::Tensor::copy_()
[2m[36m(pid=31670)[0m     @     0x7f0d8034da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31670)[0m     @     0x7f0d8034b388 at::native::copy_impl()
[2m[36m(pid=31670)[0m     @     0x7f0d8034d5a4 at::native::copy_()
[2m[36m(pid=31622)[0m     @     0x7ef76c1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31622)[0m     @     0x7ef769cfb4f5 at::Tensor::copy_()
[2m[36m(pid=31622)[0m     @     0x7ef76fda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31622)[0m     @     0x55ef3a620fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31622)[0m     @     0x55ef3a57bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31622)[0m     @     0x55ef3a606baf _PyEval_EvalCodeWithName
[2m[36m(pid=31622)[0m     @     0x55ef3a607a20 method_vectorcall
[2m[36m(pid=31622)[0m     @     0x55ef3a57bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31622)[0m     @     0x55ef3a606baf _PyEval_EvalCodeWithName
[2m[36m(pid=31622)[0m     @     0x55ef3a607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31622)[0m     @     0x55ef3a57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31672)[0m     @     0x7f334ace54f5 at::Tensor::copy_()
[2m[36m(pid=31672)[0m     @     0x7f3350d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31672)[0m     @     0x55ac2dc03fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31672)[0m     @     0x55ac2db5eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31672)[0m     @     0x55ac2dbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31672)[0m     @     0x55ac2dbeaa20 method_vectorcall
[2m[36m(pid=31672)[0m     @     0x55ac2db5ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31672)[0m     @     0x55ac2dbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31672)[0m     @     0x55ac2dbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31672)[0m     @     0x55ac2db5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31672)[0m     @     0x55ac2dbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31672)[0m     @     0x55ac2dbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31672)[0m     @     0x55ac2db5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31672)[0m     @     0x55ac2dbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31672)[0m     @     0x55ac2dbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31672)[0m     @     0x55ac2db5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31672)[0m     @     0x55ac2dbe9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31672)[0m     @     0x55ac2dbea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31672)[0m     @     0x55ac2db5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x7f3a9233a388 at::native::copy_impl()
[2m[36m(pid=31735)[0m     @     0x7f3a9233c5a4 at::native::copy_()
[2m[36m(pid=31734)[0m     @     0x7fb9ac55f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31734)[0m     @     0x7fb9aa08c4f5 at::Tensor::copy_()
[2m[36m(pid=31734)[0m     @     0x7fb9b013779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31734)[0m     @     0x55e441da2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31734)[0m     @     0x55e441cfdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31734)[0m     @     0x55e441d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=31734)[0m     @     0x55e441d89a20 method_vectorcall
[2m[36m(pid=31734)[0m     @     0x55e441cfdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31734)[0m     @     0x55e441d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=31734)[0m     @     0x55e441d89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31734)[0m     @     0x55e441cfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31734)[0m     @     0x55e441d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=31734)[0m     @     0x55e441d89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31734)[0m     @     0x55e441cfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31697)[0m     @     0x7ef0019e54f5 at::Tensor::copy_()
[2m[36m(pid=31697)[0m     @     0x7ef007a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31697)[0m     @     0x55e9d4f36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31697)[0m     @     0x55e9d4e91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31697)[0m     @     0x55e9d4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31697)[0m     @     0x55e9d4f1da20 method_vectorcall
[2m[36m(pid=31697)[0m     @     0x55e9d4e91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31697)[0m     @     0x55e9d4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31697)[0m     @     0x55e9d4f1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31697)[0m     @     0x55e9d4e92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31697)[0m     @     0x55e9d4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31697)[0m     @     0x55e9d4f1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31697)[0m     @     0x55e9d4e92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31697)[0m     @     0x55e9d4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31697)[0m     @     0x55e9d4f1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31697)[0m     @     0x55e9d4e92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31697)[0m     @     0x55e9d4f1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31697)[0m     @     0x55e9d4f1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31697)[0m     @     0x55e9d4e92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31608)[0m     @     0x7efcee4a04f5 at::Tensor::copy_()
[2m[36m(pid=31608)[0m     @     0x7efcf454b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31608)[0m     @     0x556f42208fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31608)[0m     @     0x556f42163b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31608)[0m     @     0x556f421eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31608)[0m     @     0x556f421efa20 method_vectorcall
[2m[36m(pid=31608)[0m     @     0x556f42163bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31608)[0m     @     0x556f421eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31608)[0m     @     0x556f421ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31608)[0m     @     0x556f42164689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31608)[0m     @     0x556f421eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31608)[0m     @     0x556f421ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31608)[0m     @     0x556f42164689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31608)[0m     @     0x556f421eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31608)[0m     @     0x556f421ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31608)[0m     @     0x556f42164689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31608)[0m     @     0x556f421eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31608)[0m     @     0x556f421ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31608)[0m     @     0x556f42164689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31624)[0m     @     0x7f7bfed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31624)[0m     @     0x7f7bfc8354f5 at::Tensor::copy_()
[2m[36m(pid=31624)[0m     @     0x7f7c028e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31624)[0m     @     0x561f5e9b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31624)[0m     @     0x561f5e90eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31624)[0m     @     0x561f5e999baf _PyEval_EvalCodeWithName
[2m[36m(pid=31624)[0m     @     0x561f5e99aa20 method_vectorcall
[2m[36m(pid=31624)[0m     @     0x561f5e90ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31624)[0m     @     0x561f5e999baf _PyEval_EvalCodeWithName
[2m[36m(pid=31624)[0m     @     0x561f5e99a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31624)[0m     @     0x561f5e90f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31624)[0m     @     0x561f5e999baf _PyEval_EvalCodeWithName
[2m[36m(pid=31624)[0m     @     0x561f5e99a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31624)[0m     @     0x561f5e90f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31624)[0m     @     0x561f5e999baf _PyEval_EvalCodeWithName
[2m[36m(pid=31624)[0m     @     0x561f5e99a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31624)[0m     @     0x561f5e90f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31624)[0m     @     0x561f5e999baf _PyEval_EvalCodeWithName
[2m[36m(pid=31606)[0m     @     0x7ecdc8c764f5 at::Tensor::copy_()
[2m[36m(pid=31606)[0m     @     0x7ecdced2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31606)[0m     @     0x55aa1ef14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31606)[0m     @     0x55aa1ee6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31606)[0m     @     0x55aa1eefabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31606)[0m     @     0x55aa1eefba20 method_vectorcall
[2m[36m(pid=31606)[0m     @     0x55aa1ee6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31606)[0m     @     0x55aa1eefabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31606)[0m     @     0x55aa1eefb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31606)[0m     @     0x55aa1ee70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31606)[0m     @     0x55aa1eefabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31606)[0m     @     0x55aa1eefb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31606)[0m     @     0x55aa1ee70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31606)[0m     @     0x55aa1eefabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31606)[0m     @     0x55aa1eefb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31606)[0m     @     0x55aa1ee70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31606)[0m     @     0x55aa1eefabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31606)[0m     @     0x55aa1eefb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31606)[0m     @     0x55aa1ee70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31615)[0m     @     0x7f3de928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31615)[0m     @     0x55b7d942ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31615)[0m     @     0x55b7d938ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31615)[0m     @     0x55b7d9415baf _PyEval_EvalCodeWithName
[2m[36m(pid=31615)[0m     @     0x55b7d9416a20 method_vectorcall
[2m[36m(pid=31615)[0m     @     0x55b7d938abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31615)[0m     @     0x55b7d9415baf _PyEval_EvalCodeWithName
[2m[36m(pid=31615)[0m     @     0x55b7d9416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31615)[0m     @     0x55b7d938b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31615)[0m     @     0x55b7d9415baf _PyEval_EvalCodeWithName
[2m[36m(pid=31615)[0m     @     0x55b7d9416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31615)[0m     @     0x55b7d938b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31615)[0m     @     0x55b7d9415baf _PyEval_EvalCodeWithName
[2m[36m(pid=31615)[0m     @     0x55b7d9416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31615)[0m     @     0x55b7d938b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31615)[0m     @     0x55b7d9415baf _PyEval_EvalCodeWithName
[2m[36m(pid=31615)[0m     @     0x55b7d9416643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31615)[0m     @     0x55b7d938b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31695)[0m     @     0x7f45176b64f5 at::Tensor::copy_()
[2m[36m(pid=31695)[0m     @     0x7f451d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31695)[0m     @     0x5556faeb6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31695)[0m     @     0x5556fae11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31695)[0m     @     0x5556fae9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31695)[0m     @     0x5556fae9da20 method_vectorcall
[2m[36m(pid=31695)[0m     @     0x5556fae11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31695)[0m     @     0x5556fae9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31695)[0m     @     0x5556fae9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31695)[0m     @     0x5556fae12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31695)[0m     @     0x5556fae9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31695)[0m     @     0x5556fae9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31695)[0m     @     0x5556fae12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31695)[0m     @     0x5556fae9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31695)[0m     @     0x5556fae9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31695)[0m     @     0x5556fae12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31695)[0m     @     0x5556fae9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31695)[0m     @     0x5556fae9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31695)[0m     @     0x5556fae12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x7ef05bcf74f5 at::Tensor::copy_()
[2m[36m(pid=31713)[0m     @     0x7ef061da279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31713)[0m     @     0x563f3db5ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31713)[0m     @     0x563f3dabab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x563f3db45baf _PyEval_EvalCodeWithName
[2m[36m(pid=31713)[0m     @     0x563f3db46a20 method_vectorcall
[2m[36m(pid=31713)[0m     @     0x563f3dababfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x563f3db45baf _PyEval_EvalCodeWithName
[2m[36m(pid=31713)[0m     @     0x563f3db46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31713)[0m     @     0x563f3dabb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x563f3db45baf _PyEval_EvalCodeWithName
[2m[36m(pid=31713)[0m     @     0x563f3db46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31713)[0m     @     0x563f3dabb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x563f3db45baf _PyEval_EvalCodeWithName
[2m[36m(pid=31713)[0m     @     0x563f3db46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31713)[0m     @     0x563f3dabb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31713)[0m     @     0x563f3db45baf _PyEval_EvalCodeWithName
[2m[36m(pid=31713)[0m     @     0x563f3db46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31713)[0m     @     0x563f3dabb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31617)[0m     @     0x7fb8737888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31617)[0m     @     0x7fb8712b54f5 at::Tensor::copy_()
[2m[36m(pid=31617)[0m     @     0x7fb87736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31617)[0m     @     0x564c3adb5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31617)[0m     @     0x564c3ad10b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31617)[0m     @     0x564c3ad9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31617)[0m     @     0x564c3ad9ca20 method_vectorcall
[2m[36m(pid=31617)[0m     @     0x564c3ad10bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31617)[0m     @     0x564c3ad9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31617)[0m     @     0x564c3ad9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31617)[0m     @     0x564c3ad11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31617)[0m     @     0x564c3ad9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31617)[0m     @     0x564c3ad9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31617)[0m     @     0x564c3ad11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31617)[0m     @     0x564c3ad9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31617)[0m     @     0x564c3ad9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31617)[0m     @     0x564c3ad11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31617)[0m     @     0x564c3ad9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31617)[0m     @     0x564c3ad9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31617)[0m     @     0x564c3ad11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31621)[0m     @     0x555754d12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31621)[0m     @     0x555754d9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31621)[0m     @     0x555754d9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31621)[0m     @     0x555754d13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31621)[0m     @     0x555754d9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31621)[0m     @     0x555754d9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31621)[0m     @     0x555754d13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31621)[0m     @     0x555754d9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31621)[0m     @     0x555754d9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31621)[0m     @     0x555754d13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31621)[0m     @     0x555754d9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31621)[0m     @     0x555754d9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31621)[0m     @     0x555754d13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31607)[0m     @     0x7f20255014f5 at::Tensor::copy_()
[2m[36m(pid=31607)[0m     @     0x7f4ef064279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31607)[0m     @     0x556e2a944fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31607)[0m     @     0x556e2a89fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31607)[0m     @     0x556e2a92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=31607)[0m     @     0x556e2a92ba20 method_vectorcall
[2m[36m(pid=31607)[0m     @     0x556e2a89fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31607)[0m     @     0x556e2a92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=31607)[0m     @     0x556e2a92b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31607)[0m     @     0x556e2a8a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31607)[0m     @     0x556e2a92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=31607)[0m     @     0x556e2a92b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31607)[0m     @     0x556e2a8a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31607)[0m     @     0x556e2a92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=31607)[0m     @     0x556e2a92b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31607)[0m     @     0x556e2a8a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31607)[0m     @     0x556e2a92abaf _PyEval_EvalCodeWithName
[2m[36m(pid=31607)[0m     @     0x556e2a92b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31607)[0m     @     0x556e2a8a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31627)[0m     @     0x7f73cc5014f5 at::Tensor::copy_()
[2m[36m(pid=31627)[0m     @     0x7f73d21a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31627)[0m     @     0x564a02591fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31627)[0m     @     0x564a024ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31627)[0m     @     0x564a02577baf _PyEval_EvalCodeWithName
[2m[36m(pid=31627)[0m     @     0x564a02578a20 method_vectorcall
[2m[36m(pid=31627)[0m     @     0x564a024ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31627)[0m     @     0x564a02577baf _PyEval_EvalCodeWithName
[2m[36m(pid=31627)[0m     @     0x564a02578643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31627)[0m     @     0x564a024ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31627)[0m     @     0x564a02577baf _PyEval_EvalCodeWithName
[2m[36m(pid=31627)[0m     @     0x564a02578643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31627)[0m     @     0x564a024ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31627)[0m     @     0x564a02577baf _PyEval_EvalCodeWithName
[2m[36m(pid=31627)[0m     @     0x564a02578643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31627)[0m     @     0x564a024ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31627)[0m     @     0x564a02577baf _PyEval_EvalCodeWithName
[2m[36m(pid=31627)[0m     @     0x564a02578643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31627)[0m     @     0x564a024ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31643)[0m     @     0x7ef299f1d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31643)[0m     @     0x55d45a80cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31643)[0m     @     0x55d45a767b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31643)[0m     @     0x55d45a7f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31643)[0m     @     0x55d45a7f3a20 method_vectorcall
[2m[36m(pid=31643)[0m     @     0x55d45a767bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31643)[0m     @     0x55d45a7f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31643)[0m     @     0x55d45a7f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31643)[0m     @     0x55d45a768689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31643)[0m     @     0x55d45a7f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31643)[0m     @     0x55d45a7f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31643)[0m     @     0x55d45a768689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31643)[0m     @     0x55d45a7f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31643)[0m     @     0x55d45a7f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31643)[0m     @     0x55d45a768689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31643)[0m     @     0x55d45a7f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=31643)[0m     @     0x55d45a7f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31643)[0m     @     0x55d45a768689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31711)[0m     @     0x7f55383e64f5 at::Tensor::copy_()
[2m[36m(pid=31711)[0m     @     0x7f553e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31711)[0m     @     0x55ca58dd1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31711)[0m     @     0x55ca58d2cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31711)[0m     @     0x55ca58db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31711)[0m     @     0x55ca58db8a20 method_vectorcall
[2m[36m(pid=31711)[0m     @     0x55ca58d2cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31711)[0m     @     0x55ca58db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31711)[0m     @     0x55ca58db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31711)[0m     @     0x55ca58d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31711)[0m     @     0x55ca58db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31711)[0m     @     0x55ca58db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31711)[0m     @     0x55ca58d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31711)[0m     @     0x55ca58db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31711)[0m     @     0x55ca58db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31711)[0m     @     0x55ca58d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31711)[0m     @     0x55ca58db7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31711)[0m     @     0x55ca58db8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31711)[0m     @     0x55ca58d2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31731)[0m     @     0x555fc19bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31731)[0m     @     0x555fc1a47baf _PyEval_EvalCodeWithName
[2m[36m(pid=31731)[0m     @     0x555fc1a48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31731)[0m     @     0x555fc19bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31731)[0m     @     0x555fc1a47baf _PyEval_EvalCodeWithName
[2m[36m(pid=31731)[0m     @     0x555fc1a48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31731)[0m     @     0x555fc19bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31731)[0m     @     0x555fc1a47baf _PyEval_EvalCodeWithName
[2m[36m(pid=31731)[0m     @     0x555fc1a48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31731)[0m     @     0x555fc19bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x7efe7a6924f5 at::Tensor::copy_()
[2m[36m(pid=31625)[0m     @     0x7efe8073d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31625)[0m     @     0x559a2cc69fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31625)[0m     @     0x559a2cbc4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x559a2cc4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31625)[0m     @     0x559a2cc50a20 method_vectorcall
[2m[36m(pid=31625)[0m     @     0x559a2cbc4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x559a2cc4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31625)[0m     @     0x559a2cc50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31625)[0m     @     0x559a2cbc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x559a2cc4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31625)[0m     @     0x559a2cc50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31625)[0m     @     0x559a2cbc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x559a2cc4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31625)[0m     @     0x559a2cc50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31625)[0m     @     0x559a2cbc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31625)[0m     @     0x559a2cc4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31625)[0m     @     0x559a2cc50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31625)[0m     @     0x559a2cbc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x7fac9d1a54f5 at::Tensor::copy_()
[2m[36m(pid=31633)[0m     @     0x7faca325079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31633)[0m     @     0x55c6191d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31633)[0m     @     0x55c619132b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x55c6191bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31633)[0m     @     0x55c6191bea20 method_vectorcall
[2m[36m(pid=31633)[0m     @     0x55c619132bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x55c6191bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31633)[0m     @     0x55c6191be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31633)[0m     @     0x55c619133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x55c6191bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31633)[0m     @     0x55c6191be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31633)[0m     @     0x55c619133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x55c6191bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31633)[0m     @     0x55c6191be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31633)[0m     @     0x55c619133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31633)[0m     @     0x55c6191bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31633)[0m     @     0x55c6191be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31633)[0m     @     0x55c619133689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31611)[0m     @     0x7f29c6c784f5 at::Tensor::copy_()
[2m[36m(pid=31611)[0m     @     0x7f29ccd2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31611)[0m     @     0x5581ad148fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31611)[0m     @     0x5581ad0a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31611)[0m     @     0x5581ad12ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31611)[0m     @     0x5581ad12fa20 method_vectorcall
[2m[36m(pid=31611)[0m     @     0x5581ad0a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31660)[0m     @     0x561b63dadb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31660)[0m     @     0x561b63e38baf _PyEval_EvalCodeWithName
[2m[36m(pid=31660)[0m     @     0x561b63e39a20 method_vectorcall
[2m[36m(pid=31660)[0m     @     0x561b63dadbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31660)[0m     @     0x561b63e38baf _PyEval_EvalCodeWithName
[2m[36m(pid=31660)[0m     @     0x561b63e39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31660)[0m     @     0x561b63dae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31660)[0m     @     0x561b63e38baf _PyEval_EvalCodeWithName
[2m[36m(pid=31660)[0m     @     0x561b63e39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31660)[0m     @     0x561b63dae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31660)[0m     @     0x561b63e38baf _PyEval_EvalCodeWithName
[2m[36m(pid=31660)[0m     @     0x561b63e39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31660)[0m     @     0x561b63dae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31660)[0m     @     0x561b63e38baf _PyEval_EvalCodeWithName
[2m[36m(pid=31660)[0m     @     0x561b63e39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31660)[0m     @     0x561b63dae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x7f0ddca6d4f5 at::Tensor::copy_()
[2m[36m(pid=31662)[0m     @     0x7f0ddef408de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31662)[0m     @     0x7f0ddca6d4f5 at::Tensor::copy_()
[2m[36m(pid=31662)[0m     @     0x7f0de2b1879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31662)[0m     @     0x55a016c99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31662)[0m     @     0x55a016bf4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x55a016c7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31662)[0m     @     0x55a016c80a20 method_vectorcall
[2m[36m(pid=31662)[0m     @     0x55a016bf4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x55a016c7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31661)[0m     @     0x7f813f5864f5 at::Tensor::copy_()
[2m[36m(pid=31661)[0m     @     0x7f814563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31661)[0m     @     0x5654f9e65fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31661)[0m     @     0x5654f9dc0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31661)[0m     @     0x5654f9e4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31661)[0m     @     0x5654f9e4ca20 method_vectorcall
[2m[36m(pid=31661)[0m     @     0x5654f9dc0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31661)[0m     @     0x5654f9e4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31661)[0m     @     0x5654f9e4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31661)[0m     @     0x5654f9dc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31661)[0m     @     0x5654f9e4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31661)[0m     @     0x5654f9e4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31661)[0m     @     0x5654f9dc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31661)[0m     @     0x5654f9e4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31661)[0m     @     0x5654f9e4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31661)[0m     @     0x5654f9dc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31661)[0m     @     0x5654f9e4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31661)[0m     @     0x5654f9e4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31661)[0m     @     0x5654f9dc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x7fb94557ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31692)[0m     @     0x7fb94557c388 at::native::copy_impl()
[2m[36m(pid=31692)[0m     @     0x7fb94557e5a4 at::native::copy_()
[2m[36m(pid=31690)[0m     @     0x7f87269b14f5 at::Tensor::copy_()
[2m[36m(pid=31690)[0m     @     0x7f8728e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31677)[0m     @     0x561aec1d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31677)[0m     @     0x561aec146689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31677)[0m     @     0x561aec1d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31677)[0m     @     0x561aec1d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31677)[0m     @     0x561aec146689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31716)[0m     @     0x7f7e30c0079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31716)[0m     @     0x5566242dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31716)[0m     @     0x55662423ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31716)[0m     @     0x5566242c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=31716)[0m     @     0x5566242c6a20 method_vectorcall
[2m[36m(pid=31716)[0m     @     0x55662423abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31716)[0m     @     0x5566242c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=31716)[0m     @     0x5566242c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31716)[0m     @     0x55662423b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31716)[0m     @     0x5566242c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=31716)[0m     @     0x5566242c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31716)[0m     @     0x55662423b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31716)[0m     @     0x5566242c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=31716)[0m     @     0x5566242c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31716)[0m     @     0x55662423b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31716)[0m     @     0x5566242c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=31716)[0m     @     0x5566242c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31716)[0m     @     0x55662423b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31681)[0m     @     0x7f94f483c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31681)[0m     @     0x55825dd80fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31681)[0m     @     0x55825dcdbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31681)[0m     @     0x55825dd66baf _PyEval_EvalCodeWithName
[2m[36m(pid=31681)[0m     @     0x55825dd67a20 method_vectorcall
[2m[36m(pid=31681)[0m     @     0x55825dcdbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31681)[0m     @     0x55825dd66baf _PyEval_EvalCodeWithName
[2m[36m(pid=31681)[0m     @     0x55825dd67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31681)[0m     @     0x55825dcdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31681)[0m     @     0x55825dd66baf _PyEval_EvalCodeWithName
[2m[36m(pid=31681)[0m     @     0x55825dd67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31681)[0m     @     0x55825dcdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31681)[0m     @     0x55825dd66baf _PyEval_EvalCodeWithName
[2m[36m(pid=31681)[0m     @     0x55825dd67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31681)[0m     @     0x55825dcdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31681)[0m     @     0x55825dd66baf _PyEval_EvalCodeWithName
[2m[36m(pid=31681)[0m     @     0x55825dd67643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31681)[0m     @     0x55825dcdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31679)[0m     @     0x7f28115cb4f5 at::Tensor::copy_()
[2m[36m(pid=31679)[0m     @     0x7f281767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31679)[0m     @     0x559eddc7ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31679)[0m     @     0x559eddbdab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31679)[0m     @     0x559eddc65baf _PyEval_EvalCodeWithName
[2m[36m(pid=31679)[0m     @     0x559eddc66a20 method_vectorcall
[2m[36m(pid=31679)[0m     @     0x559eddbdabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31679)[0m     @     0x559eddc65baf _PyEval_EvalCodeWithName
[2m[36m(pid=31679)[0m     @     0x559eddc66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31679)[0m     @     0x559eddbdb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31679)[0m     @     0x559eddc65baf _PyEval_EvalCodeWithName
[2m[36m(pid=31679)[0m     @     0x559eddc66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31679)[0m     @     0x559eddbdb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31679)[0m     @     0x559eddc65baf _PyEval_EvalCodeWithName
[2m[36m(pid=31679)[0m     @     0x559eddc66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31679)[0m     @     0x559eddbdb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31679)[0m     @     0x559eddc65baf _PyEval_EvalCodeWithName
[2m[36m(pid=31679)[0m     @     0x559eddc66643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31679)[0m     @     0x559eddbdb689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:37:54,199	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=31696)[0m     @     0x7f4dabf374f5 at::Tensor::copy_()
[2m[36m(pid=31696)[0m     @     0x7f4db1fe279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31696)[0m     @     0x561d61fd9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31696)[0m     @     0x561d61f34b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31696)[0m     @     0x561d61fbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31696)[0m     @     0x561d61fc0a20 method_vectorcall
[2m[36m(pid=31696)[0m     @     0x561d61f34bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31696)[0m     @     0x561d61fbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31696)[0m     @     0x561d61fc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31696)[0m     @     0x561d61f35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31696)[0m     @     0x561d61fbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31696)[0m     @     0x561d61fc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31696)[0m     @     0x561d61f35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31696)[0m     @     0x561d61fbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31696)[0m     @     0x561d61fc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31696)[0m     @     0x561d61f35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31696)[0m     @     0x561d61fbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31696)[0m     @     0x561d61fc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31696)[0m     @     0x561d61f35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31709)[0m     @     0x7f4b693bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31709)[0m     @     0x559c737cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31709)[0m     @     0x559c73729b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31709)[0m     @     0x559c737b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31709)[0m     @     0x559c737b5a20 method_vectorcall
[2m[36m(pid=31709)[0m     @     0x559c73729bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31709)[0m     @     0x559c737b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31709)[0m     @     0x559c737b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31709)[0m     @     0x559c7372a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31709)[0m     @     0x559c737b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31709)[0m     @     0x559c737b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31709)[0m     @     0x559c7372a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31709)[0m     @     0x559c737b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31709)[0m     @     0x559c737b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31709)[0m     @     0x559c7372a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31709)[0m     @     0x559c737b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=31709)[0m     @     0x559c737b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31709)[0m     @     0x559c7372a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31680)[0m     @     0x560f55c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=31680)[0m     @     0x560f55c21a20 method_vectorcall
[2m[36m(pid=31680)[0m     @     0x560f55b95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31680)[0m     @     0x560f55c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=31680)[0m     @     0x560f55c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31680)[0m     @     0x560f55b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31680)[0m     @     0x560f55c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=31680)[0m     @     0x560f55c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31680)[0m     @     0x560f55b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31680)[0m     @     0x560f55c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=31680)[0m     @     0x560f55c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31680)[0m     @     0x560f55b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31680)[0m     @     0x560f55c20baf _PyEval_EvalCodeWithName
[2m[36m(pid=31680)[0m     @     0x560f55c21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31680)[0m     @     0x560f55b96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31694)[0m     @     0x7f78a630d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31694)[0m     @     0x55be00e09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31694)[0m     @     0x55be00d64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31694)[0m     @     0x55be00defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31694)[0m     @     0x55be00df0a20 method_vectorcall
[2m[36m(pid=31694)[0m     @     0x55be00d64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31694)[0m     @     0x55be00defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31694)[0m     @     0x55be00df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31694)[0m     @     0x55be00d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31694)[0m     @     0x55be00defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31694)[0m     @     0x55be00df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31694)[0m     @     0x55be00d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31694)[0m     @     0x55be00defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31694)[0m     @     0x55be00df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31694)[0m     @     0x55be00d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31694)[0m     @     0x55be00defbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31694)[0m     @     0x55be00df0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31694)[0m     @     0x55be00d65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31640)[0m     @     0x7fc8813ba4f5 at::Tensor::copy_()
[2m[36m(pid=31640)[0m     @     0x7fc88746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31640)[0m     @     0x55bb0abf3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31640)[0m     @     0x55bb0ab4eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31640)[0m     @     0x55bb0abd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31640)[0m     @     0x55bb0abdaa20 method_vectorcall
[2m[36m(pid=31640)[0m     @     0x55bb0ab4ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31640)[0m     @     0x55bb0abd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31640)[0m     @     0x55bb0abda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31640)[0m     @     0x55bb0ab4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31640)[0m     @     0x55bb0abd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31640)[0m     @     0x55bb0abda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31640)[0m     @     0x55bb0ab4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31640)[0m     @     0x55bb0abd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31640)[0m     @     0x55bb0abda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31640)[0m     @     0x55bb0ab4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31640)[0m     @     0x55bb0abd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31640)[0m     @     0x55bb0abda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31640)[0m     @     0x55bb0ab4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31701)[0m     @     0x7fb662c7bd91 at::TensorIterator::for_each()
[2m[36m(pid=31701)[0m     @     0x7fb66355eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=31701)[0m     @     0x7fb663581c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31706)[0m     @     0x7f8c48840388 at::native::copy_impl()
[2m[36m(pid=31706)[0m     @     0x7f8c488425a4 at::native::copy_()
[2m[36m(pid=31675)[0m     @     0x7f65e90e35a4 at::native::copy_()
[2m[36m(pid=31675)[0m     @     0x7f65e97ce4f5 at::Tensor::copy_()
[2m[36m(pid=31689)[0m     @     0x7ee1893ba4f5 at::Tensor::copy_()
[2m[36m(pid=31689)[0m     @     0x7ee18f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31689)[0m     @     0x560941ec5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31689)[0m     @     0x560941e20b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31689)[0m     @     0x560941eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31689)[0m     @     0x560941eaca20 method_vectorcall
[2m[36m(pid=31689)[0m     @     0x560941e20bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31689)[0m     @     0x560941eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31689)[0m     @     0x560941eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31689)[0m     @     0x560941e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31689)[0m     @     0x560941eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31689)[0m     @     0x560941eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31689)[0m     @     0x560941e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31689)[0m     @     0x560941eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31689)[0m     @     0x560941eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31689)[0m     @     0x560941e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31689)[0m     @     0x560941eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31689)[0m     @     0x560941eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31689)[0m     @     0x560941e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31684)[0m     @     0x7f1c61dd58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31684)[0m     @     0x7f1c5f9024f5 at::Tensor::copy_()
[2m[36m(pid=31623)[0m     @     0x7f91be9c24f5 at::Tensor::copy_()
[2m[36m(pid=31623)[0m     @     0x7f91c4a6d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31623)[0m     @     0x558ee5613fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31623)[0m     @     0x558ee556eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31623)[0m     @     0x558ee55f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31623)[0m     @     0x558ee55faa20 method_vectorcall
[2m[36m(pid=31623)[0m     @     0x558ee556ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31623)[0m     @     0x558ee55f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31623)[0m     @     0x558ee55fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31623)[0m     @     0x558ee556f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31623)[0m     @     0x558ee55f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31623)[0m     @     0x558ee55fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31623)[0m     @     0x558ee556f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31623)[0m     @     0x558ee55f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31623)[0m     @     0x558ee55fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31623)[0m     @     0x558ee556f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31623)[0m     @     0x558ee55f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=31623)[0m     @     0x558ee55fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31623)[0m     @     0x558ee556f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x7f46b4ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31685)[0m     @     0x7f46b4ede388 at::native::copy_impl()
[2m[36m(pid=31631)[0m     @     0x7fb293da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31631)[0m     @     0x55b0543adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31631)[0m     @     0x55b054308b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31631)[0m     @     0x55b054393baf _PyEval_EvalCodeWithName
[2m[36m(pid=31631)[0m     @     0x55b054394a20 method_vectorcall
[2m[36m(pid=31631)[0m     @     0x55b054308bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31631)[0m     @     0x55b054393baf _PyEval_EvalCodeWithName
[2m[36m(pid=31631)[0m     @     0x55b054394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31631)[0m     @     0x55b054309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31631)[0m     @     0x55b054393baf _PyEval_EvalCodeWithName
[2m[36m(pid=31631)[0m     @     0x55b054394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31631)[0m     @     0x55b054309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31631)[0m     @     0x55b054393baf _PyEval_EvalCodeWithName
[2m[36m(pid=31631)[0m     @     0x55b054394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31631)[0m     @     0x55b054309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31631)[0m     @     0x55b054393baf _PyEval_EvalCodeWithName
[2m[36m(pid=31631)[0m     @     0x55b054394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31631)[0m     @     0x55b054309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x7f315c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=31616)[0m     @     0x55eae048dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31616)[0m     @     0x55eae048e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31616)[0m     @     0x55eae0403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31616)[0m     @     0x55eae048dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31616)[0m     @     0x55eae048e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31616)[0m     @     0x55eae0403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31612)[0m     @     0x555637fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31612)[0m     @     0x555637fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31612)[0m     @     0x555637f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31612)[0m     @     0x555637fafbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31612)[0m     @     0x555637fb0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31612)[0m     @     0x555637f25689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31739)[0m     @     0x7fc333c8e4f5 at::Tensor::copy_()
[2m[36m(pid=31739)[0m     @     0x7fc339d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31739)[0m     @     0x55aede3f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31739)[0m     @     0x55aede34fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31739)[0m     @     0x55aede3dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31739)[0m     @     0x55aede3dba20 method_vectorcall
[2m[36m(pid=31739)[0m     @     0x55aede34fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31739)[0m     @     0x55aede3dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31739)[0m     @     0x55aede3db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31739)[0m     @     0x55aede350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31739)[0m     @     0x55aede3dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31739)[0m     @     0x55aede3db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31739)[0m     @     0x55aede350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31739)[0m     @     0x55aede3dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31739)[0m     @     0x55aede3db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31739)[0m     @     0x55aede350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31739)[0m     @     0x55aede3dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=31739)[0m     @     0x55aede3db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31739)[0m     @     0x55aede350689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x557cfd938fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31740)[0m     @     0x557cfd893b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x557cfd91ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31740)[0m     @     0x557cfd91fa20 method_vectorcall
[2m[36m(pid=31740)[0m     @     0x557cfd893bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x557cfd91ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31740)[0m     @     0x557cfd91f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31740)[0m     @     0x557cfd894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x557cfd91ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31740)[0m     @     0x557cfd91f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31740)[0m     @     0x557cfd894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x557cfd91ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31740)[0m     @     0x557cfd91f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31740)[0m     @     0x557cfd894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31740)[0m     @     0x557cfd91ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31740)[0m     @     0x557cfd91f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31740)[0m     @     0x557cfd894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31635)[0m     @     0x7f0fcf9f74f5 at::Tensor::copy_()
[2m[36m(pid=31635)[0m     @     0x7f0fd5aa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31635)[0m     @     0x55af44758fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31635)[0m     @     0x55af446b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31635)[0m     @     0x55af4473ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31635)[0m     @     0x55af4473fa20 method_vectorcall
[2m[36m(pid=31635)[0m     @     0x55af446b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31635)[0m     @     0x55af4473ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31635)[0m     @     0x55af4473f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31635)[0m     @     0x55af446b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31635)[0m     @     0x55af4473ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31635)[0m     @     0x55af4473f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31635)[0m     @     0x55af446b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31635)[0m     @     0x55af4473ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31635)[0m     @     0x55af4473f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31635)[0m     @     0x55af446b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31635)[0m     @     0x55af4473ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31635)[0m     @     0x55af4473f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31635)[0m     @     0x55af446b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31641)[0m     @     0x7f74b842779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31641)[0m     @     0x555b32ef6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31641)[0m     @     0x555b32e51b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31641)[0m     @     0x555b32edcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31641)[0m     @     0x555b32edda20 method_vectorcall
[2m[36m(pid=31641)[0m     @     0x555b32e51bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31641)[0m     @     0x555b32edcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31641)[0m     @     0x555b32edd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31641)[0m     @     0x555b32e52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31641)[0m     @     0x555b32edcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31641)[0m     @     0x555b32edd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31641)[0m     @     0x555b32e52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31641)[0m     @     0x555b32edcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31641)[0m     @     0x555b32edd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31641)[0m     @     0x555b32e52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31641)[0m     @     0x555b32edcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31641)[0m     @     0x555b32edd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31641)[0m     @     0x555b32e52689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31670)[0m     @     0x7f0d80a384f5 at::Tensor::copy_()
[2m[36m(pid=31670)[0m     @     0x7f0d82f0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31622)[0m     @     0x55ef3a606baf _PyEval_EvalCodeWithName
[2m[36m(pid=31622)[0m     @     0x55ef3a607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31622)[0m     @     0x55ef3a57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31622)[0m     @     0x55ef3a606baf _PyEval_EvalCodeWithName
[2m[36m(pid=31622)[0m     @     0x55ef3a607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31622)[0m     @     0x55ef3a57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31622)[0m     @     0x55ef3a606baf _PyEval_EvalCodeWithName
[2m[36m(pid=31622)[0m     @     0x55ef3a607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31622)[0m     @     0x55ef3a57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x7f3a92a274f5 at::Tensor::copy_()
[2m[36m(pid=31735)[0m     @     0x7f3a94efa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31735)[0m     @     0x7f3a92a274f5 at::Tensor::copy_()
[2m[36m(pid=31735)[0m     @     0x7f3a98ad279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31735)[0m     @     0x5622692a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31735)[0m     @     0x562269202b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x56226928dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31735)[0m     @     0x56226928ea20 method_vectorcall
[2m[36m(pid=31735)[0m     @     0x562269202bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x56226928dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31735)[0m     @     0x56226928e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31734)[0m     @     0x55e441d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=31734)[0m     @     0x55e441d89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31734)[0m     @     0x55e441cfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31734)[0m     @     0x55e441d88baf _PyEval_EvalCodeWithName
[2m[36m(pid=31734)[0m     @     0x55e441d89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31734)[0m     @     0x55e441cfe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31624)[0m     @     0x561f5e99a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31624)[0m     @     0x561f5e90f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31628)[0m     @     0x7f944530a4f5 at::Tensor::copy_()
[2m[36m(pid=31628)[0m     @     0x7f944b3b579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31628)[0m     @     0x5570c42a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31628)[0m     @     0x5570c4200b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31628)[0m     @     0x5570c428bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31628)[0m     @     0x5570c428ca20 method_vectorcall
[2m[36m(pid=31628)[0m     @     0x5570c4200bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31628)[0m     @     0x5570c428bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31628)[0m     @     0x5570c428c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31628)[0m     @     0x5570c4201689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31628)[0m     @     0x5570c428bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31628)[0m     @     0x5570c428c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31628)[0m     @     0x5570c4201689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31628)[0m     @     0x5570c428bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31628)[0m     @     0x5570c428c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31628)[0m     @     0x5570c4201689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31628)[0m     @     0x5570c428bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31628)[0m     @     0x5570c428c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31628)[0m     @     0x5570c4201689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31611)[0m     @     0x5581ad12ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31611)[0m     @     0x5581ad12f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31611)[0m     @     0x5581ad0a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31611)[0m     @     0x5581ad12ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31611)[0m     @     0x5581ad12f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31611)[0m     @     0x5581ad0a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31611)[0m     @     0x5581ad12ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31611)[0m     @     0x5581ad12f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31611)[0m     @     0x5581ad0a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31611)[0m     @     0x5581ad12ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31611)[0m     @     0x5581ad12f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31611)[0m     @     0x5581ad0a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x55a016c80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31662)[0m     @     0x55a016bf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x55a016c7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31662)[0m     @     0x55a016c80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31662)[0m     @     0x55a016bf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x55a016c7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31662)[0m     @     0x55a016c80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31662)[0m     @     0x55a016bf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31662)[0m     @     0x55a016c7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31662)[0m     @     0x55a016c80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31662)[0m     @     0x55a016bf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x7fb945c694f5 at::Tensor::copy_()
[2m[36m(pid=31692)[0m     @     0x7fb94813c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31690)[0m     @     0x7f87269b14f5 at::Tensor::copy_()
[2m[36m(pid=31690)[0m     @     0x7f872ca5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31690)[0m     @     0x563d3e250fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31690)[0m     @     0x563d3e1abb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31690)[0m     @     0x563d3e236baf _PyEval_EvalCodeWithName
[2m[36m(pid=31690)[0m     @     0x563d3e237a20 method_vectorcall
[2m[36m(pid=31690)[0m     @     0x563d3e1abbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31690)[0m     @     0x563d3e236baf _PyEval_EvalCodeWithName
[2m[36m(pid=31690)[0m     @     0x563d3e237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31690)[0m     @     0x563d3e1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31690)[0m     @     0x563d3e236baf _PyEval_EvalCodeWithName
[2m[36m(pid=31690)[0m     @     0x563d3e237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31690)[0m     @     0x563d3e1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31690)[0m     @     0x563d3e236baf _PyEval_EvalCodeWithName
[2m[36m(pid=31690)[0m     @     0x563d3e237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31690)[0m     @     0x563d3e1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31690)[0m     @     0x563d3e236baf _PyEval_EvalCodeWithName
[2m[36m(pid=31690)[0m     @     0x563d3e237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31690)[0m     @     0x563d3e1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31701)[0m     @     0x7fb662a23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31701)[0m     @     0x7fb662a21388 at::native::copy_impl()
[2m[36m(pid=31706)[0m     @     0x7f8c48f2d4f5 at::Tensor::copy_()
[2m[36m(pid=31706)[0m     @     0x7f8c4b4008de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31675)[0m     @     0x7f65ebca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31675)[0m     @     0x7f65e97ce4f5 at::Tensor::copy_()
[2m[36m(pid=31675)[0m     @     0x7f65ef87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31675)[0m     @     0x556b48ae1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31675)[0m     @     0x556b48a3cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31675)[0m     @     0x556b48ac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31675)[0m     @     0x556b48ac8a20 method_vectorcall
[2m[36m(pid=31675)[0m     @     0x556b48a3cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31675)[0m     @     0x556b48ac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31675)[0m     @     0x556b48ac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31675)[0m     @     0x556b48a3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31675)[0m     @     0x556b48ac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31675)[0m     @     0x556b48ac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31675)[0m     @     0x556b48a3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31675)[0m     @     0x556b48ac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31675)[0m     @     0x556b48ac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31675)[0m     @     0x556b48a3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31675)[0m     @     0x556b48ac7baf _PyEval_EvalCodeWithName
[2m[36m(pid=31675)[0m     @     0x556b48ac8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31675)[0m     @     0x556b48a3d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31684)[0m     @     0x7f1c659ad79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31684)[0m     @     0x5596b5ebafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31684)[0m     @     0x5596b5e15b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31684)[0m     @     0x5596b5ea0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31684)[0m     @     0x5596b5ea1a20 method_vectorcall
[2m[36m(pid=31684)[0m     @     0x5596b5e15bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31684)[0m     @     0x5596b5ea0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31684)[0m     @     0x5596b5ea1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31684)[0m     @     0x5596b5e16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31684)[0m     @     0x5596b5ea0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31684)[0m     @     0x5596b5ea1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31684)[0m     @     0x5596b5e16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31684)[0m     @     0x5596b5ea0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31684)[0m     @     0x5596b5ea1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31684)[0m     @     0x5596b5e16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31684)[0m     @     0x5596b5ea0baf _PyEval_EvalCodeWithName
[2m[36m(pid=31684)[0m     @     0x5596b5ea1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31684)[0m     @     0x5596b5e16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x7f46b4ee05a4 at::native::copy_()
[2m[36m(pid=31685)[0m     @     0x7f46b55cb4f5 at::Tensor::copy_()
[2m[36m(pid=31728)[0m     @     0x7f315ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=31728)[0m     @     0x7f315ba37388 at::native::copy_impl()
[2m[36m(pid=31728)[0m     @     0x7f315ba395a4 at::native::copy_()
[2m[36m(pid=31670)[0m     @     0x7f0d80a384f5 at::Tensor::copy_()
[2m[36m(pid=31670)[0m     @     0x7f0d86ae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31670)[0m     @     0x558db2291fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31670)[0m     @     0x558db21ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31670)[0m     @     0x558db2277baf _PyEval_EvalCodeWithName
[2m[36m(pid=31670)[0m     @     0x558db2278a20 method_vectorcall
[2m[36m(pid=31670)[0m     @     0x558db21ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31670)[0m     @     0x558db2277baf _PyEval_EvalCodeWithName
[2m[36m(pid=31670)[0m     @     0x558db2278643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31670)[0m     @     0x558db21ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31670)[0m     @     0x558db2277baf _PyEval_EvalCodeWithName
[2m[36m(pid=31670)[0m     @     0x558db2278643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31670)[0m     @     0x558db21ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31670)[0m     @     0x558db2277baf _PyEval_EvalCodeWithName
[2m[36m(pid=31670)[0m     @     0x558db2278643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31670)[0m     @     0x558db21ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31670)[0m     @     0x558db2277baf _PyEval_EvalCodeWithName
[2m[36m(pid=31670)[0m     @     0x558db2278643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31670)[0m     @     0x558db21ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x562269203689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x56226928dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31735)[0m     @     0x56226928e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31735)[0m     @     0x562269203689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x56226928dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31735)[0m     @     0x56226928e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31735)[0m     @     0x562269203689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31735)[0m     @     0x56226928dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31735)[0m     @     0x56226928e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31735)[0m     @     0x562269203689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x7fb945c694f5 at::Tensor::copy_()
[2m[36m(pid=31692)[0m     @     0x7fb94bd1479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31692)[0m     @     0x55ef5ee47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31692)[0m     @     0x55ef5eda2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x55ef5ee2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31692)[0m     @     0x55ef5ee2ea20 method_vectorcall
[2m[36m(pid=31692)[0m     @     0x55ef5eda2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x55ef5ee2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31692)[0m     @     0x55ef5ee2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31692)[0m     @     0x55ef5eda3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x55ef5ee2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31692)[0m     @     0x55ef5ee2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31692)[0m     @     0x55ef5eda3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x55ef5ee2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31692)[0m     @     0x55ef5ee2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31692)[0m     @     0x55ef5eda3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31692)[0m     @     0x55ef5ee2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31692)[0m     @     0x55ef5ee2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31692)[0m     @     0x55ef5eda3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31701)[0m     @     0x7fb662a235a4 at::native::copy_()
[2m[36m(pid=31706)[0m     @     0x7f8c48f2d4f5 at::Tensor::copy_()
[2m[36m(pid=31706)[0m     @     0x7f8c4efd879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31706)[0m     @     0x5625d8891fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31706)[0m     @     0x5625d87ecb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31706)[0m     @     0x5625d8877baf _PyEval_EvalCodeWithName
[2m[36m(pid=31706)[0m     @     0x5625d8878a20 method_vectorcall
[2m[36m(pid=31706)[0m     @     0x5625d87ecbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31706)[0m     @     0x5625d8877baf _PyEval_EvalCodeWithName
[2m[36m(pid=31706)[0m     @     0x5625d8878643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31706)[0m     @     0x5625d87ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31706)[0m     @     0x5625d8877baf _PyEval_EvalCodeWithName
[2m[36m(pid=31706)[0m     @     0x5625d8878643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31706)[0m     @     0x5625d87ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31706)[0m     @     0x5625d8877baf _PyEval_EvalCodeWithName
[2m[36m(pid=31706)[0m     @     0x5625d8878643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31706)[0m     @     0x5625d87ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31706)[0m     @     0x5625d8877baf _PyEval_EvalCodeWithName
[2m[36m(pid=31706)[0m     @     0x5625d8878643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31706)[0m     @     0x5625d87ed689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x7f46b7a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31685)[0m     @     0x7f46b55cb4f5 at::Tensor::copy_()
[2m[36m(pid=31685)[0m     @     0x7f46bb67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31685)[0m     @     0x559ab4398fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31685)[0m     @     0x559ab42f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x559ab437ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31685)[0m     @     0x559ab437fa20 method_vectorcall
[2m[36m(pid=31685)[0m     @     0x559ab42f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x559ab437ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31685)[0m     @     0x559ab437f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31685)[0m     @     0x559ab42f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x559ab437ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31685)[0m     @     0x559ab437f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31685)[0m     @     0x559ab42f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x559ab437ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31685)[0m     @     0x559ab437f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31685)[0m     @     0x559ab42f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31685)[0m     @     0x559ab437ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31685)[0m     @     0x559ab437f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31685)[0m     @     0x559ab42f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x7f315c1244f5 at::Tensor::copy_()
[2m[36m(pid=31728)[0m     @     0x7f315e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31701)[0m     @     0x7fb66310e4f5 at::Tensor::copy_()
[2m[36m(pid=31701)[0m     @     0x7fb6655e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=31701)[0m     @     0x7fb66310e4f5 at::Tensor::copy_()
[2m[36m(pid=31701)[0m     @     0x7fb6691b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31701)[0m     @     0x5574baa49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31701)[0m     @     0x5574ba9a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31701)[0m     @     0x5574baa2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31701)[0m     @     0x5574baa30a20 method_vectorcall
[2m[36m(pid=31701)[0m     @     0x5574ba9a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31701)[0m     @     0x5574baa2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31701)[0m     @     0x5574baa30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31701)[0m     @     0x5574ba9a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x7f315c1244f5 at::Tensor::copy_()
[2m[36m(pid=31728)[0m     @     0x7f31621cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=31728)[0m     @     0x55b27f188fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=31728)[0m     @     0x55b27f0e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x55b27f16ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31728)[0m     @     0x55b27f16fa20 method_vectorcall
[2m[36m(pid=31728)[0m     @     0x55b27f0e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x55b27f16ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31728)[0m     @     0x55b27f16f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31728)[0m     @     0x55b27f0e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x55b27f16ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31728)[0m     @     0x55b27f16f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31728)[0m     @     0x55b27f0e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x55b27f16ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31728)[0m     @     0x55b27f16f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31728)[0m     @     0x55b27f0e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31728)[0m     @     0x55b27f16ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=31728)[0m     @     0x55b27f16f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31728)[0m     @     0x55b27f0e4689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:37:54,325	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:37:54,325	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:37:54,326	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:37:54,326	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:37:54,327	ERROR trial_runner.py:567 -- Trial PPO_jss_env_f1ddf_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=31747, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=31701)[0m     @     0x5574baa2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31701)[0m     @     0x5574baa30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31701)[0m     @     0x5574ba9a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31701)[0m     @     0x5574baa2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31701)[0m     @     0x5574baa30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31701)[0m     @     0x5574ba9a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31701)[0m     @     0x5574baa2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=31701)[0m     @     0x5574baa30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=31701)[0m     @     0x5574ba9a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=31747)[0m E1105 10:37:54.317782 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=d984ee9d41b92c534100f4fd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=31747)[0m E1105 10:37:54.317981 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=6c41da4ee8b0b4d04100f4fd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4100f4fd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=31747)[0m E1105 10:37:54.319360 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=31747)[0m E1105 10:37:54.319542 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=31747)[0m E1105 10:37:54.319799 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=31747)[0m E1105 10:37:54.319897 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=31747)[0m E1105 10:37:54.320022 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=170fdfd5d34985a7e0497dac01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=31747)[0m E1105 10:37:54.320120 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=89f63fee54d6858ee0497dac01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=31747)[0m E1105 10:37:54.322675 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=31747)[0m E1105 10:37:54.322839 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=31747)[0m E1105 10:37:54.325350 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=31747)[0m E1105 10:37:54.325451 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=31747)[0m E1105 10:37:54.325567 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=31747)[0m E1105 10:37:54.325649 31747 32925 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
2020-11-05 10:37:54,337	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
== Status ==
Memory usage on this node: 24.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_f1ddf_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_f1ddf_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_f1ddf_00000_0_2020-11-05_10-37-47/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:37:54,340	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
== Status ==
Memory usage on this node: 24.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.11 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_f1ddf_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_f1ddf_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_f1ddf_00000_0_2020-11-05_10-37-47/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:37:54,340	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:37:54,340	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:37:54,341	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:37:54,341	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:37:54,341	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:37:54,341	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:37:54,341	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_f1ddf_00000])
