2020-11-05 10:45:01,961	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_f5dfb_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=47456)[0m 2020-11-05 10:45:04,774	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=47456)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=47456)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=47456)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=47456)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=47456)[0m 
[2m[36m(pid=47456)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=47457)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47457)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47457)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47423)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47423)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47423)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47418)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47418)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47418)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47476)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47476)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47476)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47407)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47407)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47407)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47461)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47461)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47461)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47461)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47461)[0m *** SIGSEGV (@0x0) received by PID 47461 (TID 0x7febc95ef700) from PID 0; stack trace: ***
[2m[36m(pid=47453)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47453)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47453)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47453)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47453)[0m *** SIGSEGV (@0x0) received by PID 47453 (TID 0x7f69274f7700) from PID 0; stack trace: ***
[2m[36m(pid=47433)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47433)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47433)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47414)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47414)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47414)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47420)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47420)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47420)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47420)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47420)[0m *** SIGSEGV (@0x0) received by PID 47420 (TID 0x7f649da1a700) from PID 0; stack trace: ***
[2m[36m(pid=47429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47429)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47429)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47429)[0m *** SIGSEGV (@0x0) received by PID 47429 (TID 0x7f4b1fd29700) from PID 0; stack trace: ***
[2m[36m(pid=47441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47441)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47441)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47441)[0m *** SIGSEGV (@0x0) received by PID 47441 (TID 0x7f1c36c0e700) from PID 0; stack trace: ***
[2m[36m(pid=47452)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47452)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47452)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47452)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47452)[0m *** SIGSEGV (@0x0) received by PID 47452 (TID 0x7f446b088700) from PID 0; stack trace: ***
[2m[36m(pid=47459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47459)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47459)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47459)[0m *** SIGSEGV (@0x0) received by PID 47459 (TID 0x7f165a49c700) from PID 0; stack trace: ***
[2m[36m(pid=47459)[0m     @     0x7f165a075390 (unknown)
[2m[36m(pid=47459)[0m     @     0x7ee759e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47459)[0m     @     0x7ee75954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47426)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47426)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47426)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47426)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47426)[0m *** SIGSEGV (@0x0) received by PID 47426 (TID 0x7f77b5436700) from PID 0; stack trace: ***
[2m[36m(pid=47426)[0m     @     0x7f77b500f390 (unknown)
[2m[36m(pid=47416)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47416)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47416)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47416)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47416)[0m *** SIGSEGV (@0x0) received by PID 47416 (TID 0x7ff758e2e700) from PID 0; stack trace: ***
[2m[36m(pid=47473)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47473)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47473)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47473)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47473)[0m *** SIGSEGV (@0x0) received by PID 47473 (TID 0x7f7cff678700) from PID 0; stack trace: ***
[2m[36m(pid=47473)[0m     @     0x7f7cff251390 (unknown)
[2m[36m(pid=47473)[0m     @     0x7f4dff124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47473)[0m     @     0x7f4dfe84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47455)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47455)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47455)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47455)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47455)[0m *** SIGSEGV (@0x0) received by PID 47455 (TID 0x7fb69b45c700) from PID 0; stack trace: ***
[2m[36m(pid=47455)[0m     @     0x7fb69b035390 (unknown)
[2m[36m(pid=47413)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47413)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47413)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47413)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47413)[0m *** SIGSEGV (@0x0) received by PID 47413 (TID 0x7f322cfbf700) from PID 0; stack trace: ***
[2m[36m(pid=47413)[0m     @     0x7f322cb98390 (unknown)
[2m[36m(pid=47457)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47457)[0m *** SIGSEGV (@0x0) received by PID 47457 (TID 0x7fe2580ce700) from PID 0; stack trace: ***
[2m[36m(pid=47457)[0m     @     0x7fe257ca7390 (unknown)
[2m[36m(pid=47457)[0m     @     0x7fb357af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47457)[0m     @     0x7fb3572207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47423)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47423)[0m *** SIGSEGV (@0x0) received by PID 47423 (TID 0x7f25297ea700) from PID 0; stack trace: ***
[2m[36m(pid=47423)[0m     @     0x7f25293c3390 (unknown)
[2m[36m(pid=47423)[0m     @     0x7ef62935ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47423)[0m     @     0x7ef628a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47418)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47418)[0m *** SIGSEGV (@0x0) received by PID 47418 (TID 0x7fedc6e59700) from PID 0; stack trace: ***
[2m[36m(pid=47418)[0m     @     0x7fedc6a32390 (unknown)
[2m[36m(pid=47418)[0m     @     0x7fbec69ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47418)[0m     @     0x7fbec60f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47476)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47476)[0m *** SIGSEGV (@0x0) received by PID 47476 (TID 0x7f1dd211e700) from PID 0; stack trace: ***
[2m[36m(pid=47476)[0m     @     0x7f1dd1cf7390 (unknown)
[2m[36m(pid=47476)[0m     @     0x7eeed1c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47476)[0m     @     0x7eeed13387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47407)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47407)[0m *** SIGSEGV (@0x0) received by PID 47407 (TID 0x7f940c49d700) from PID 0; stack trace: ***
[2m[36m(pid=47407)[0m     @     0x7f940c076390 (unknown)
[2m[36m(pid=47407)[0m     @     0x7f650c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47461)[0m     @     0x7febc91c8390 (unknown)
[2m[36m(pid=47461)[0m     @     0x7fbcc90b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47461)[0m     @     0x7fbcc87e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47453)[0m     @     0x7f69270d0390 (unknown)
[2m[36m(pid=47453)[0m     @     0x7f3a27077f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47453)[0m     @     0x7f3a267a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47433)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47433)[0m *** SIGSEGV (@0x0) received by PID 47433 (TID 0x7f5ab3678700) from PID 0; stack trace: ***
[2m[36m(pid=47433)[0m     @     0x7f5ab3251390 (unknown)
[2m[36m(pid=47433)[0m     @     0x7f2bb3124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47433)[0m     @     0x7f2bb284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47414)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47414)[0m *** SIGSEGV (@0x0) received by PID 47414 (TID 0x7f809ccba700) from PID 0; stack trace: ***
[2m[36m(pid=47414)[0m     @     0x7f809c893390 (unknown)
[2m[36m(pid=47414)[0m     @     0x7f519c825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47414)[0m     @     0x7f519bf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47420)[0m     @     0x7f649d5f3390 (unknown)
[2m[36m(pid=47420)[0m     @     0x7f359d57ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47420)[0m     @     0x7f359ccaa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47429)[0m     @     0x7f4b1f902390 (unknown)
[2m[36m(pid=47429)[0m     @     0x7f1c1f89ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47429)[0m     @     0x7f1c1efc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47441)[0m     @     0x7f1c367e7390 (unknown)
[2m[36m(pid=47441)[0m     @     0x7eed364f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47441)[0m     @     0x7eed35c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47452)[0m     @     0x7f446ac61390 (unknown)
[2m[36m(pid=47452)[0m     @     0x7f156aad1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47459)[0m     @     0x7ee7595528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47426)[0m     @     0x7f48b4ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47426)[0m     @     0x7f48b45cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47416)[0m     @     0x7ff758a07390 (unknown)
[2m[36m(pid=47416)[0m     @     0x7fc858825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47416)[0m     @     0x7fc857f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47473)[0m     @     0x7f4dfe8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47455)[0m     @     0x7f879afd4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47455)[0m     @     0x7f879a6ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47413)[0m     @     0x7f032cb3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47413)[0m     @     0x7f032c2667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47457)[0m     @     0x7fb3572238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47423)[0m     @     0x7ef628a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47418)[0m     @     0x7fbec60fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47476)[0m     @     0x7eeed133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47476)[0m     @     0x7eeed133bad3 at::TensorIterator::for_each()
[2m[36m(pid=47407)[0m     @     0x7f650b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47461)[0m     @     0x7fbcc87e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47453)[0m     @     0x7f3a267a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47453)[0m     @     0x7f3a267a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=47433)[0m     @     0x7f2bb28528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47414)[0m     @     0x7f519bf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47420)[0m     @     0x7f359ccad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47420)[0m     @     0x7f359ccadad3 at::TensorIterator::for_each()
[2m[36m(pid=47429)[0m     @     0x7f1c1efcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47429)[0m     @     0x7f1c1efccad3 at::TensorIterator::for_each()
[2m[36m(pid=47441)[0m     @     0x7eed35c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47364)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47364)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47452)[0m     @     0x7f156a1fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47452)[0m     @     0x7f156a1ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47459)[0m     @     0x7ee759552ad3 at::TensorIterator::for_each()
[2m[36m(pid=47459)[0m     @     0x7ee759552d91 at::TensorIterator::for_each()
[2m[36m(pid=47426)[0m     @     0x7f48b45d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47426)[0m     @     0x7f48b45d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=47416)[0m     @     0x7fc857f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47473)[0m     @     0x7f4dfe852ad3 at::TensorIterator::for_each()
[2m[36m(pid=47473)[0m     @     0x7f4dfe852d91 at::TensorIterator::for_each()
[2m[36m(pid=47455)[0m     @     0x7f879a7028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47413)[0m     @     0x7f032c2698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47413)[0m     @     0x7f032c269ad3 at::TensorIterator::for_each()
[2m[36m(pid=47457)[0m     @     0x7fb357223ad3 at::TensorIterator::for_each()
[2m[36m(pid=47457)[0m     @     0x7fb357223d91 at::TensorIterator::for_each()
[2m[36m(pid=47423)[0m     @     0x7ef628a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=47423)[0m     @     0x7ef628a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=47423)[0m     @     0x7ef629370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47418)[0m     @     0x7fbec60faad3 at::TensorIterator::for_each()
[2m[36m(pid=47425)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47425)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47422)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47422)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47422)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47476)[0m     @     0x7eeed133bd91 at::TensorIterator::for_each()
[2m[36m(pid=47476)[0m     @     0x7eeed1c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47407)[0m     @     0x7f650b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47461)[0m     @     0x7fbcc87e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=47453)[0m     @     0x7f3a267a5d91 at::TensorIterator::for_each()
[2m[36m(pid=47453)[0m     @     0x7f3a27088b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47453)[0m     @     0x7f3a270abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47433)[0m     @     0x7f2bb2852ad3 at::TensorIterator::for_each()
[2m[36m(pid=47433)[0m     @     0x7f2bb2852d91 at::TensorIterator::for_each()
[2m[36m(pid=47414)[0m     @     0x7f519bf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=47420)[0m     @     0x7f359ccadd91 at::TensorIterator::for_each()
[2m[36m(pid=47420)[0m     @     0x7f359d590b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47420)[0m     @     0x7f359d5b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47361)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47361)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47361)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47429)[0m     @     0x7f1c1efccd91 at::TensorIterator::for_each()
[2m[36m(pid=47429)[0m     @     0x7f1c1f8afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47429)[0m     @     0x7f1c1f8d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47350)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47350)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47350)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47427)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47427)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47427)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47427)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47427)[0m *** SIGSEGV (@0x0) received by PID 47427 (TID 0x7f16f8d9c700) from PID 0; stack trace: ***
[2m[36m(pid=47335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47335)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47441)[0m     @     0x7eed35c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=47441)[0m     @     0x7eed35c27d91 at::TensorIterator::for_each()
[2m[36m(pid=47441)[0m     @     0x7eed3650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47352)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47375)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47375)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47375)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47417)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47400)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47400)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47400)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47363)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47363)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47363)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47337)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47337)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47337)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47348)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47348)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47348)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47364)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47364)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47364)[0m *** SIGSEGV (@0x0) received by PID 47364 (TID 0x7f7cbd8a8700) from PID 0; stack trace: ***
[2m[36m(pid=47452)[0m     @     0x7f156a1ffad3 at::TensorIterator::for_each()
[2m[36m(pid=47347)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47347)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47347)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47343)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47343)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47343)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47459)[0m     @     0x7ee759e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47459)[0m     @     0x7ee759e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47459)[0m     @     0x7ee7592faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47459)[0m     @     0x7ee7592f8388 at::native::copy_impl()
[2m[36m(pid=47426)[0m     @     0x7f48b45d2d91 at::TensorIterator::for_each()
[2m[36m(pid=47426)[0m     @     0x7f48b4eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47426)[0m     @     0x7f48b4ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47398)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47398)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47398)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47398)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47398)[0m *** SIGSEGV (@0x0) received by PID 47398 (TID 0x7ff1155d0700) from PID 0; stack trace: ***
[2m[36m(pid=47430)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47430)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47430)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47405)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47405)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47405)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47405)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47405)[0m *** SIGSEGV (@0x0) received by PID 47405 (TID 0x7f16470eb700) from PID 0; stack trace: ***
[2m[36m(pid=47409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47409)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47409)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47409)[0m *** SIGSEGV (@0x0) received by PID 47409 (TID 0x7f419a710700) from PID 0; stack trace: ***
[2m[36m(pid=47409)[0m     @     0x7f419a2e9390 (unknown)
[2m[36m(pid=47409)[0m     @     0x7f129a279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47409)[0m     @     0x7f12999a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47416)[0m     @     0x7fc857f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=47416)[0m     @     0x7fc857f53d91 at::TensorIterator::for_each()
[2m[36m(pid=47416)[0m     @     0x7fc858836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47473)[0m     @     0x7f4dff135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47473)[0m     @     0x7f4dff158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47473)[0m     @     0x7f4dfe5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47473)[0m     @     0x7f4dfe5f8388 at::native::copy_impl()
[2m[36m(pid=47473)[0m     @     0x7f4dfe5fa5a4 at::native::copy_()
[2m[36m(pid=47336)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47336)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47336)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47336)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47336)[0m *** SIGSEGV (@0x0) received by PID 47336 (TID 0x7f253e268700) from PID 0; stack trace: ***
[2m[36m(pid=47336)[0m     @     0x7f253de41390 (unknown)
[2m[36m(pid=47455)[0m     @     0x7f879a702ad3 at::TensorIterator::for_each()
[2m[36m(pid=47455)[0m     @     0x7f879a702d91 at::TensorIterator::for_each()
[2m[36m(pid=47455)[0m     @     0x7f879afe5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47455)[0m     @     0x7f879b008c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47413)[0m     @     0x7f032c269d91 at::TensorIterator::for_each()
[2m[36m(pid=47413)[0m     @     0x7f032cb4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47413)[0m     @     0x7f032cb6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47413)[0m     @     0x7f032c011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47413)[0m     @     0x7f032c00f388 at::native::copy_impl()
[2m[36m(pid=47411)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47411)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47411)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47353)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47353)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47353)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47353)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47353)[0m *** SIGSEGV (@0x0) received by PID 47353 (TID 0x7f099c7f4700) from PID 0; stack trace: ***
[2m[36m(pid=47410)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47410)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47410)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47442)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47442)[0m *** SIGSEGV (@0x0) received by PID 47442 (TID 0x7f33b625a700) from PID 0; stack trace: ***
[2m[36m(pid=47373)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47373)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47373)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47341)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47341)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47341)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47341)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47341)[0m *** SIGSEGV (@0x0) received by PID 47341 (TID 0x7f1a43f92700) from PID 0; stack trace: ***
[2m[36m(pid=47339)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47339)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47339)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47339)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47339)[0m *** SIGSEGV (@0x0) received by PID 47339 (TID 0x7f73154ba700) from PID 0; stack trace: ***
[2m[36m(pid=47339)[0m     @     0x7f7315093390 (unknown)
[2m[36m(pid=47377)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47377)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47377)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47377)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47395)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47395)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47395)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47395)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47395)[0m *** SIGSEGV (@0x0) received by PID 47395 (TID 0x7efe8b45a700) from PID 0; stack trace: ***
[2m[36m(pid=47444)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47444)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47444)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47444)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47444)[0m *** SIGSEGV (@0x0) received by PID 47444 (TID 0x7fdd6bb90700) from PID 0; stack trace: ***
[2m[36m(pid=47444)[0m     @     0x7fdd6b769390 (unknown)
[2m[36m(pid=47403)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47403)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47403)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47403)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47403)[0m *** SIGSEGV (@0x0) received by PID 47403 (TID 0x7f2a0a78b700) from PID 0; stack trace: ***
[2m[36m(pid=47359)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47359)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47359)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47359)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47359)[0m *** SIGSEGV (@0x0) received by PID 47359 (TID 0x7f8a90c0b700) from PID 0; stack trace: ***
[2m[36m(pid=47397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47397)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47397)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47397)[0m *** SIGSEGV (@0x0) received by PID 47397 (TID 0x7f885fb4c700) from PID 0; stack trace: ***
[2m[36m(pid=47468)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47468)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47468)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47468)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47468)[0m *** SIGSEGV (@0x0) received by PID 47468 (TID 0x7fd050e62700) from PID 0; stack trace: ***
[2m[36m(pid=47468)[0m     @     0x7fd050a3b390 (unknown)
[2m[36m(pid=47468)[0m     @     0x7fa150825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47468)[0m     @     0x7fa14ff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47368)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47368)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47368)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47368)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47368)[0m *** SIGSEGV (@0x0) received by PID 47368 (TID 0x7f35f213d700) from PID 0; stack trace: ***
[2m[36m(pid=47340)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47340)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47340)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47340)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47340)[0m *** SIGSEGV (@0x0) received by PID 47340 (TID 0x7fdd803a2700) from PID 0; stack trace: ***
[2m[36m(pid=47349)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47349)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47349)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47349)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47349)[0m *** SIGSEGV (@0x0) received by PID 47349 (TID 0x7fbef2a66700) from PID 0; stack trace: ***
[2m[36m(pid=47349)[0m     @     0x7fbef263f390 (unknown)
[2m[36m(pid=47349)[0m     @     0x7f8ff24f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47457)[0m     @     0x7fb357b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47457)[0m     @     0x7fb357b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47457)[0m     @     0x7fb356fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47457)[0m     @     0x7fb356fc9388 at::native::copy_impl()
[2m[36m(pid=47457)[0m     @     0x7fb356fcb5a4 at::native::copy_()
[2m[36m(pid=47423)[0m     @     0x7ef629393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47423)[0m     @     0x7ef628835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47423)[0m     @     0x7ef628833388 at::native::copy_impl()
[2m[36m(pid=47423)[0m     @     0x7ef6288355a4 at::native::copy_()
[2m[36m(pid=47418)[0m     @     0x7fbec60fad91 at::TensorIterator::for_each()
[2m[36m(pid=47418)[0m     @     0x7fbec69ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47418)[0m     @     0x7fbec6a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47418)[0m     @     0x7fbec5ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47418)[0m     @     0x7fbec5ea0388 at::native::copy_impl()
[2m[36m(pid=47425)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47425)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47425)[0m *** SIGSEGV (@0x0) received by PID 47425 (TID 0x7f12d9965700) from PID 0; stack trace: ***
[2m[36m(pid=47425)[0m     @     0x7f12d953e390 (unknown)
[2m[36m(pid=47425)[0m     @     0x7ee3d94e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47425)[0m     @     0x7ee3d8c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47435)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47435)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47435)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47435)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47435)[0m *** SIGSEGV (@0x0) received by PID 47435 (TID 0x7fb9fa2ed700) from PID 0; stack trace: ***
[2m[36m(pid=47435)[0m     @     0x7fb9f9ec6390 (unknown)
[2m[36m(pid=47435)[0m     @     0x7f8af9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47435)[0m     @     0x7f8af954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47342)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47342)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47342)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47342)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47342)[0m *** SIGSEGV (@0x0) received by PID 47342 (TID 0x7efe58252700) from PID 0; stack trace: ***
[2m[36m(pid=47342)[0m     @     0x7efe57e2b390 (unknown)
[2m[36m(pid=47342)[0m     @     0x7ecf57ddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47342)[0m     @     0x7ecf575097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47342)[0m     @     0x7ecf5750c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47351)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47351)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47351)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47351)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47351)[0m *** SIGSEGV (@0x0) received by PID 47351 (TID 0x7fad3f105700) from PID 0; stack trace: ***
[2m[36m(pid=47351)[0m     @     0x7fad3ecde390 (unknown)
[2m[36m(pid=47351)[0m     @     0x7f7e3ec8ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47351)[0m     @     0x7f7e3e3ba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47351)[0m     @     0x7f7e3e3bd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47422)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47422)[0m *** SIGSEGV (@0x0) received by PID 47422 (TID 0x7f24cba07700) from PID 0; stack trace: ***
[2m[36m(pid=47422)[0m     @     0x7f24cb5e0390 (unknown)
[2m[36m(pid=47422)[0m     @     0x7ef5cb58df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47422)[0m     @     0x7ef5cacb87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47476)[0m     @     0x7eeed1c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47476)[0m     @     0x7eeed10e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47476)[0m     @     0x7eeed10e1388 at::native::copy_impl()
[2m[36m(pid=47476)[0m     @     0x7eeed10e35a4 at::native::copy_()
[2m[36m(pid=47476)[0m     @     0x7eeed17ce4f5 at::Tensor::copy_()
[2m[36m(pid=47476)[0m     @     0x7eeed3ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47407)[0m     @     0x7f650b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=47407)[0m     @     0x7f650b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=47407)[0m     @     0x7f650c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47407)[0m     @     0x7f650c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47407)[0m     @     0x7f650b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47407)[0m     @     0x7f650b4f0388 at::native::copy_impl()
[2m[36m(pid=47461)[0m     @     0x7fbcc87e3d91 at::TensorIterator::for_each()
[2m[36m(pid=47461)[0m     @     0x7fbcc90c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47461)[0m     @     0x7fbcc90e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47461)[0m     @     0x7fbcc858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47461)[0m     @     0x7fbcc8589388 at::native::copy_impl()
[2m[36m(pid=47453)[0m     @     0x7f3a2654da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47453)[0m     @     0x7f3a2654b388 at::native::copy_impl()
[2m[36m(pid=47453)[0m     @     0x7f3a2654d5a4 at::native::copy_()
[2m[36m(pid=47453)[0m     @     0x7f3a26c384f5 at::Tensor::copy_()
[2m[36m(pid=47453)[0m     @     0x7f3a2910b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47433)[0m     @     0x7f2bb3135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47433)[0m     @     0x7f2bb3158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47433)[0m     @     0x7f2bb25faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47433)[0m     @     0x7f2bb25f8388 at::native::copy_impl()
[2m[36m(pid=47433)[0m     @     0x7f2bb25fa5a4 at::native::copy_()
[2m[36m(pid=47414)[0m     @     0x7f519bf53d91 at::TensorIterator::for_each()
[2m[36m(pid=47414)[0m     @     0x7f519c836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47414)[0m     @     0x7f519c859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47414)[0m     @     0x7f519bcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47414)[0m     @     0x7f519bcf9388 at::native::copy_impl()
[2m[36m(pid=47420)[0m     @     0x7f359ca55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47420)[0m     @     0x7f359ca53388 at::native::copy_impl()
[2m[36m(pid=47420)[0m     @     0x7f359ca555a4 at::native::copy_()
[2m[36m(pid=47420)[0m     @     0x7f359d1404f5 at::Tensor::copy_()
[2m[36m(pid=47420)[0m     @     0x7f359f6138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47361)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47361)[0m *** SIGSEGV (@0x0) received by PID 47361 (TID 0x7f93e3691700) from PID 0; stack trace: ***
[2m[36m(pid=47361)[0m     @     0x7f93e326a390 (unknown)
[2m[36m(pid=47361)[0m     @     0x7f64e3124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47361)[0m     @     0x7f64e284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47361)[0m     @     0x7f64e28528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47429)[0m     @     0x7f1c1ed74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47429)[0m     @     0x7f1c1ed72388 at::native::copy_impl()
[2m[36m(pid=47429)[0m     @     0x7f1c1ed745a4 at::native::copy_()
[2m[36m(pid=47429)[0m     @     0x7f1c1f45f4f5 at::Tensor::copy_()
[2m[36m(pid=47429)[0m     @     0x7f1c219328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47350)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47350)[0m *** SIGSEGV (@0x0) received by PID 47350 (TID 0x7f28f790a700) from PID 0; stack trace: ***
[2m[36m(pid=47350)[0m     @     0x7f28f74e3390 (unknown)
[2m[36m(pid=47350)[0m     @     0x7ef9f748ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47350)[0m     @     0x7ef9f6bba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47350)[0m     @     0x7ef9f6bbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47427)[0m     @     0x7f16f8975390 (unknown)
[2m[36m(pid=47427)[0m     @     0x7ee7f8911f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47427)[0m     @     0x7ee7f803c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47427)[0m     @     0x7ee7f803f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47427)[0m     @     0x7ee7f803fad3 at::TensorIterator::for_each()
[2m[36m(pid=47427)[0m     @     0x7ee7f803fd91 at::TensorIterator::for_each()
[2m[36m(pid=47396)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47396)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47396)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47396)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47396)[0m *** SIGSEGV (@0x0) received by PID 47396 (TID 0x7f3fbf593700) from PID 0; stack trace: ***
[2m[36m(pid=47396)[0m     @     0x7f3fbf16c390 (unknown)
[2m[36m(pid=47334)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47334)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47334)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47334)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47334)[0m *** SIGSEGV (@0x0) received by PID 47334 (TID 0x7f4510ae7700) from PID 0; stack trace: ***
[2m[36m(pid=47334)[0m     @     0x7f45106c0390 (unknown)
[2m[36m(pid=47334)[0m     @     0x7f161067af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47334)[0m     @     0x7f160fda57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47374)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47374)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47374)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47374)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47374)[0m *** SIGSEGV (@0x0) received by PID 47374 (TID 0x7f9f24e6f700) from PID 0; stack trace: ***
[2m[36m(pid=47374)[0m     @     0x7f9f24a48390 (unknown)
[2m[36m(pid=47374)[0m     @     0x7f7024774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47408)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47408)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47408)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47408)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47408)[0m *** SIGSEGV (@0x0) received by PID 47408 (TID 0x7fa5032e5700) from PID 0; stack trace: ***
[2m[36m(pid=47408)[0m     @     0x7fa502ebe390 (unknown)
[2m[36m(pid=47408)[0m     @     0x7f7602e66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47408)[0m     @     0x7f76025917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47367)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47367)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47367)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47367)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47367)[0m *** SIGSEGV (@0x0) received by PID 47367 (TID 0x7f055cb8c700) from PID 0; stack trace: ***
[2m[36m(pid=47437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47437)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47437)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47437)[0m *** SIGSEGV (@0x0) received by PID 47437 (TID 0x7f54161bf700) from PID 0; stack trace: ***
[2m[36m(pid=47437)[0m     @     0x7f5415d98390 (unknown)
[2m[36m(pid=47443)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47443)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47443)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47443)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47443)[0m *** SIGSEGV (@0x0) received by PID 47443 (TID 0x7f07362fb700) from PID 0; stack trace: ***
[2m[36m(pid=47443)[0m     @     0x7f0735ed4390 (unknown)
[2m[36m(pid=47443)[0m     @     0x7ed835e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47443)[0m     @     0x7ed83554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47443)[0m     @     0x7ed8355528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47392)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47392)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47392)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47335)[0m *** SIGSEGV (@0x0) received by PID 47335 (TID 0x7f98506ba700) from PID 0; stack trace: ***
[2m[36m(pid=47335)[0m     @     0x7f9850293390 (unknown)
[2m[36m(pid=47335)[0m     @     0x7f6950231f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47335)[0m     @     0x7f694f95c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47335)[0m     @     0x7f694f95f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47441)[0m     @     0x7eed3652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47441)[0m     @     0x7eed359cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47441)[0m     @     0x7eed359cd388 at::native::copy_impl()
[2m[36m(pid=47441)[0m     @     0x7eed359cf5a4 at::native::copy_()
[2m[36m(pid=47441)[0m     @     0x7eed360ba4f5 at::Tensor::copy_()
[2m[36m(pid=47441)[0m     @     0x7eed3858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47352)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47352)[0m *** SIGSEGV (@0x0) received by PID 47352 (TID 0x7fc11b121700) from PID 0; stack trace: ***
[2m[36m(pid=47352)[0m     @     0x7fc11acfa390 (unknown)
[2m[36m(pid=47352)[0m     @     0x7f921ac8ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47352)[0m     @     0x7f921a3ba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47352)[0m     @     0x7f921a3bd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47375)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47375)[0m *** SIGSEGV (@0x0) received by PID 47375 (TID 0x7f177f3a2700) from PID 0; stack trace: ***
[2m[36m(pid=47375)[0m     @     0x7f177ef7b390 (unknown)
[2m[36m(pid=47375)[0m     @     0x7ee87ef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47375)[0m     @     0x7ee87e63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47375)[0m     @     0x7ee87e6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47417)[0m *** SIGSEGV (@0x0) received by PID 47417 (TID 0x7f56fe3b8700) from PID 0; stack trace: ***
[2m[36m(pid=47417)[0m     @     0x7f56fdf91390 (unknown)
[2m[36m(pid=47417)[0m     @     0x7f27fde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47417)[0m     @     0x7f27fd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47417)[0m     @     0x7f27fd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47400)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47400)[0m *** SIGSEGV (@0x0) received by PID 47400 (TID 0x7f0c685f1700) from PID 0; stack trace: ***
[2m[36m(pid=47400)[0m     @     0x7f0c681ca390 (unknown)
[2m[36m(pid=47400)[0m     @     0x7edd6801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47400)[0m     @     0x7edd677477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47400)[0m     @     0x7edd6774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47363)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47363)[0m *** SIGSEGV (@0x0) received by PID 47363 (TID 0x7f3b8bc5e700) from PID 0; stack trace: ***
[2m[36m(pid=47363)[0m     @     0x7f3b8b837390 (unknown)
[2m[36m(pid=47363)[0m     @     0x7f0c8b7cef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47363)[0m     @     0x7f0c8aef97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47363)[0m     @     0x7f0c8aefc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47337)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47337)[0m *** SIGSEGV (@0x0) received by PID 47337 (TID 0x7f74efc35700) from PID 0; stack trace: ***
[2m[36m(pid=47337)[0m     @     0x7f74ef80e390 (unknown)
[2m[36m(pid=47337)[0m     @     0x7f45ed940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47337)[0m     @     0x7f45ed06b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47337)[0m     @     0x7f45ed06e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47337)[0m     @     0x7f45ed06ead3 at::TensorIterator::for_each()
[2m[36m(pid=47337)[0m     @     0x7f45ed06ed91 at::TensorIterator::for_each()
[2m[36m(pid=47348)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47348)[0m *** SIGSEGV (@0x0) received by PID 47348 (TID 0x7f5ca9ddb700) from PID 0; stack trace: ***
[2m[36m(pid=47348)[0m     @     0x7f5ca99b4390 (unknown)
[2m[36m(pid=47348)[0m     @     0x7f2da97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47348)[0m     @     0x7f2da8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47348)[0m     @     0x7f2da8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47364)[0m     @     0x7f7cbd481390 (unknown)
[2m[36m(pid=47364)[0m     @     0x7f4dbd40ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47364)[0m     @     0x7f4dbcb3a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47364)[0m     @     0x7f4dbcb3d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47364)[0m     @     0x7f4dbcb3dad3 at::TensorIterator::for_each()
[2m[36m(pid=47452)[0m     @     0x7f156a1ffd91 at::TensorIterator::for_each()
[2m[36m(pid=47452)[0m     @     0x7f156aae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47452)[0m     @     0x7f156ab05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47452)[0m     @     0x7f1569fa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47452)[0m     @     0x7f1569fa5388 at::native::copy_impl()
[2m[36m(pid=47452)[0m     @     0x7f1569fa75a4 at::native::copy_()
[2m[36m(pid=47347)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47347)[0m *** SIGSEGV (@0x0) received by PID 47347 (TID 0x7fef8949d700) from PID 0; stack trace: ***
[2m[36m(pid=47347)[0m     @     0x7fef89076390 (unknown)
[2m[36m(pid=47347)[0m     @     0x7fc088fe3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47347)[0m     @     0x7fc08870e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47347)[0m     @     0x7fc0887118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47347)[0m     @     0x7fc088711ad3 at::TensorIterator::for_each()
[2m[36m(pid=47343)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47343)[0m *** SIGSEGV (@0x0) received by PID 47343 (TID 0x7f3215298700) from PID 0; stack trace: ***
[2m[36m(pid=47343)[0m     @     0x7f3214e71390 (unknown)
[2m[36m(pid=47343)[0m     @     0x7f0314e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47343)[0m     @     0x7f031453d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47343)[0m     @     0x7f03145408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47343)[0m     @     0x7f0314540ad3 at::TensorIterator::for_each()
[2m[36m(pid=47459)[0m     @     0x7ee7592fa5a4 at::native::copy_()
[2m[36m(pid=47459)[0m     @     0x7ee7599e54f5 at::Tensor::copy_()
[2m[36m(pid=47459)[0m     @     0x7ee75beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47426)[0m     @     0x7f48b437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47426)[0m     @     0x7f48b4378388 at::native::copy_impl()
[2m[36m(pid=47426)[0m     @     0x7f48b437a5a4 at::native::copy_()
[2m[36m(pid=47426)[0m     @     0x7f48b4a654f5 at::Tensor::copy_()
[2m[36m(pid=47426)[0m     @     0x7f48b6f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47398)[0m     @     0x7ff1151a9390 (unknown)
[2m[36m(pid=47398)[0m     @     0x7fc2150b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47398)[0m     @     0x7fc2147e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47398)[0m     @     0x7fc2147e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47398)[0m     @     0x7fc2147e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=47430)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47430)[0m *** SIGSEGV (@0x0) received by PID 47430 (TID 0x7f3517aac700) from PID 0; stack trace: ***
[2m[36m(pid=47430)[0m     @     0x7f3517685390 (unknown)
[2m[36m(pid=47430)[0m     @     0x7f061761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47430)[0m     @     0x7f0616d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47430)[0m     @     0x7f0616d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47405)[0m     @     0x7f1646cc4390 (unknown)
[2m[36m(pid=47405)[0m     @     0x7ee746c4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47405)[0m     @     0x7ee74637a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47405)[0m     @     0x7ee74637d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47409)[0m     @     0x7f12999a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47409)[0m     @     0x7f12999a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=47416)[0m     @     0x7fc858859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47416)[0m     @     0x7fc857cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47416)[0m     @     0x7fc857cf9388 at::native::copy_impl()
[2m[36m(pid=47416)[0m     @     0x7fc857cfb5a4 at::native::copy_()
[2m[36m(pid=47473)[0m     @     0x7f4dfece54f5 at::Tensor::copy_()
[2m[36m(pid=47473)[0m     @     0x7f4e011b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47336)[0m     @     0x7ef63dde4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47336)[0m     @     0x7ef63d50f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47336)[0m     @     0x7ef63d5128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47336)[0m     @     0x7ef63d512ad3 at::TensorIterator::for_each()
[2m[36m(pid=47455)[0m     @     0x7f879a4aaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47455)[0m     @     0x7f879a4a8388 at::native::copy_impl()
[2m[36m(pid=47455)[0m     @     0x7f879a4aa5a4 at::native::copy_()
[2m[36m(pid=47413)[0m     @     0x7f032c0115a4 at::native::copy_()
[2m[36m(pid=47413)[0m     @     0x7f032c6fc4f5 at::Tensor::copy_()
[2m[36m(pid=47411)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47411)[0m *** SIGSEGV (@0x0) received by PID 47411 (TID 0x7f2ec44b4700) from PID 0; stack trace: ***
[2m[36m(pid=47353)[0m     @     0x7f099c3cd390 (unknown)
[2m[36m(pid=47353)[0m     @     0x7eda9c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47353)[0m     @     0x7eda9ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47353)[0m     @     0x7eda9ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47410)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47410)[0m *** SIGSEGV (@0x0) received by PID 47410 (TID 0x7fe7d35d5700) from PID 0; stack trace: ***
[2m[36m(pid=47410)[0m     @     0x7fe7d31ae390 (unknown)
[2m[36m(pid=47410)[0m     @     0x7fb8d3124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47410)[0m     @     0x7fb8d284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47442)[0m     @     0x7f33b5e33390 (unknown)
[2m[36m(pid=47442)[0m     @     0x7f04b5de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47442)[0m     @     0x7f04b550f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47442)[0m     @     0x7f04b55128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47373)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47373)[0m *** SIGSEGV (@0x0) received by PID 47373 (TID 0x7fd63b86b700) from PID 0; stack trace: ***
[2m[36m(pid=47373)[0m     @     0x7fd63b444390 (unknown)
[2m[36m(pid=47373)[0m     @     0x7fa73b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47373)[0m     @     0x7fa73a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47341)[0m     @     0x7f1a43b6b390 (unknown)
[2m[36m(pid=47341)[0m     @     0x7eeb43af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47341)[0m     @     0x7eeb432207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47341)[0m     @     0x7eeb432238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47346)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47346)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47346)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47346)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47346)[0m *** SIGSEGV (@0x0) received by PID 47346 (TID 0x7fea4c70b700) from PID 0; stack trace: ***
[2m[36m(pid=47346)[0m     @     0x7fea4c2e4390 (unknown)
[2m[36m(pid=47346)[0m     @     0x7fbb4c286f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47354)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47471)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47471)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47471)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47471)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47471)[0m *** SIGSEGV (@0x0) received by PID 47471 (TID 0x7f7676ad8700) from PID 0; stack trace: ***
[2m[36m(pid=47471)[0m     @     0x7f76766b1390 (unknown)
[2m[36m(pid=47471)[0m     @     0x7f4776646f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47471)[0m     @     0x7f4775d717db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47412)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47412)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47412)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47440)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47440)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47440)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47440)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47440)[0m *** SIGSEGV (@0x0) received by PID 47440 (TID 0x7f71ef338700) from PID 0; stack trace: ***
[2m[36m(pid=47440)[0m     @     0x7f71eef11390 (unknown)
[2m[36m(pid=47440)[0m     @     0x7f42eee93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47440)[0m     @     0x7f42ee5be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47366)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47366)[0m *** SIGSEGV (@0x0) received by PID 47366 (TID 0x7f53e8d67700) from PID 0; stack trace: ***
[2m[36m(pid=47344)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47344)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47344)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47344)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47344)[0m *** SIGSEGV (@0x0) received by PID 47344 (TID 0x7fa6ea480700) from PID 0; stack trace: ***
[2m[36m(pid=47344)[0m     @     0x7fa6ea059390 (unknown)
[2m[36m(pid=47344)[0m     @     0x7f77ea005f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47419)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47419)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47419)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47419)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47419)[0m *** SIGSEGV (@0x0) received by PID 47419 (TID 0x7f2de2645700) from PID 0; stack trace: ***
[2m[36m(pid=47419)[0m     @     0x7f2de221e390 (unknown)
[2m[36m(pid=47419)[0m     @     0x7efee213af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47419)[0m     @     0x7efee18657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47402)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47402)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47402)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47402)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47402)[0m *** SIGSEGV (@0x0) received by PID 47402 (TID 0x7f0c59ed1700) from PID 0; stack trace: ***
[2m[36m(pid=47339)[0m     @     0x7f4414f57f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47339)[0m     @     0x7f44146827db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47339)[0m     @     0x7f44146858f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47339)[0m     @     0x7f4414685ad3 at::TensorIterator::for_each()
[2m[36m(pid=47377)[0m *** SIGSEGV (@0x0) received by PID 47377 (TID 0x7fa34ba11700) from PID 0; stack trace: ***
[2m[36m(pid=47377)[0m     @     0x7fa34b5ea390 (unknown)
[2m[36m(pid=47377)[0m     @     0x7f744b58ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47377)[0m     @     0x7f744acba7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47377)[0m     @     0x7f744acbd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47395)[0m     @     0x7efe8b033390 (unknown)
[2m[36m(pid=47395)[0m     @     0x7ecf8afd4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47395)[0m     @     0x7ecf8a6ff7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47395)[0m     @     0x7ecf8a7028f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47395)[0m     @     0x7ecf8a702ad3 at::TensorIterator::for_each()
[2m[36m(pid=47444)[0m     @     0x7fae6b61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47444)[0m     @     0x7fae6ad4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47444)[0m     @     0x7fae6ad4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47444)[0m     @     0x7fae6ad4dad3 at::TensorIterator::for_each()
[2m[36m(pid=47403)[0m     @     0x7f2a0a364390 (unknown)
[2m[36m(pid=47403)[0m     @     0x7efb0a30bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47403)[0m     @     0x7efb09a367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47403)[0m     @     0x7efb09a398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47403)[0m     @     0x7efb09a39ad3 at::TensorIterator::for_each()
[2m[36m(pid=47464)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47464)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47464)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47464)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47464)[0m *** SIGSEGV (@0x0) received by PID 47464 (TID 0x7fdb8bd69700) from PID 0; stack trace: ***
[2m[36m(pid=47464)[0m     @     0x7fdb8b942390 (unknown)
[2m[36m(pid=47464)[0m     @     0x7fac8b751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47464)[0m     @     0x7fac8ae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47464)[0m     @     0x7fac8ae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47415)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=47415)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=47415)[0m *** Aborted at 1604573110 (unix time) try "date -d @1604573110" if you are using GNU date ***
[2m[36m(pid=47415)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47415)[0m *** SIGSEGV (@0x0) received by PID 47415 (TID 0x7f7c3808c700) from PID 0; stack trace: ***
[2m[36m(pid=47415)[0m     @     0x7f7c37c65390 (unknown)
[2m[36m(pid=47359)[0m     @     0x7f8a907e4390 (unknown)
[2m[36m(pid=47359)[0m     @     0x7f5b9060ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47359)[0m     @     0x7f5b8fd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47359)[0m     @     0x7f5b8fd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47359)[0m     @     0x7f5b8fd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=47397)[0m     @     0x7f885f725390 (unknown)
[2m[36m(pid=47397)[0m     @     0x7f595f61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47397)[0m     @     0x7f595ed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47397)[0m     @     0x7f595ed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47397)[0m     @     0x7f595ed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=47468)[0m     @     0x7fa14ff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47468)[0m     @     0x7fa14ff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=47468)[0m     @     0x7fa14ff53d91 at::TensorIterator::for_each()
[2m[36m(pid=47468)[0m     @     0x7fa150836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47368)[0m     @     0x7f35f1d16390 (unknown)
[2m[36m(pid=47368)[0m     @     0x7f06f1c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47368)[0m     @     0x7f06f13387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47368)[0m     @     0x7f06f133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47368)[0m     @     0x7f06f133bad3 at::TensorIterator::for_each()
[2m[36m(pid=47340)[0m     @     0x7fdd7ff7b390 (unknown)
[2m[36m(pid=47340)[0m     @     0x7fae7fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47340)[0m     @     0x7fae7f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47340)[0m     @     0x7fae7f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47340)[0m     @     0x7fae7f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=47349)[0m     @     0x7f8ff1c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47349)[0m     @     0x7f8ff1c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47349)[0m     @     0x7f8ff1c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=47349)[0m     @     0x7f8ff1c27d91 at::TensorIterator::for_each()
[2m[36m(pid=47457)[0m     @     0x7fb3576b64f5 at::Tensor::copy_()
[2m[36m(pid=47457)[0m     @     0x7fb359b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47457)[0m     @     0x7fb3576b64f5 at::Tensor::copy_()
[2m[36m(pid=47457)[0m     @     0x7fb35d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47457)[0m     @     0x55f56e75afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47457)[0m     @     0x55f56e6b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47457)[0m     @     0x55f56e740baf _PyEval_EvalCodeWithName
[2m[36m(pid=47457)[0m     @     0x55f56e741a20 method_vectorcall
[2m[36m(pid=47457)[0m     @     0x55f56e6b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47457)[0m     @     0x55f56e740baf _PyEval_EvalCodeWithName
[2m[36m(pid=47457)[0m     @     0x55f56e741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47457)[0m     @     0x55f56e6b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47457)[0m     @     0x55f56e740baf _PyEval_EvalCodeWithName
[2m[36m(pid=47457)[0m     @     0x55f56e741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47457)[0m     @     0x55f56e6b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47457)[0m     @     0x55f56e740baf _PyEval_EvalCodeWithName
[2m[36m(pid=47423)[0m     @     0x7ef628f204f5 at::Tensor::copy_()
[2m[36m(pid=47423)[0m     @     0x7ef62b3f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47423)[0m     @     0x7ef628f204f5 at::Tensor::copy_()
[2m[36m(pid=47423)[0m     @     0x7ef62efcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47423)[0m     @     0x55da16f0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47423)[0m     @     0x55da16e68b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47423)[0m     @     0x55da16ef3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47423)[0m     @     0x55da16ef4a20 method_vectorcall
[2m[36m(pid=47423)[0m     @     0x55da16e68bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47423)[0m     @     0x55da16ef3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47418)[0m     @     0x7fbec5ea25a4 at::native::copy_()
[2m[36m(pid=47418)[0m     @     0x7fbec658d4f5 at::Tensor::copy_()
[2m[36m(pid=47418)[0m     @     0x7fbec8a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47425)[0m     @     0x7ee3d8c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47425)[0m     @     0x7ee3d8c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=47425)[0m     @     0x7ee3d8c11d91 at::TensorIterator::for_each()
[2m[36m(pid=47425)[0m     @     0x7ee3d94f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47435)[0m     @     0x7f8af95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47435)[0m     @     0x7f8af9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=47342)[0m     @     0x7ecf5750cad3 at::TensorIterator::for_each()
[2m[36m(pid=47342)[0m     @     0x7ecf5750cd91 at::TensorIterator::for_each()
[2m[36m(pid=47342)[0m     @     0x7ecf57defb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47342)[0m     @     0x7ecf57e12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47351)[0m     @     0x7f7e3e3bdad3 at::TensorIterator::for_each()
[2m[36m(pid=47351)[0m     @     0x7f7e3e3bdd91 at::TensorIterator::for_each()
[2m[36m(pid=47422)[0m     @     0x7ef5cacbb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47422)[0m     @     0x7ef5cacbbad3 at::TensorIterator::for_each()
[2m[36m(pid=47422)[0m     @     0x7ef5cacbbd91 at::TensorIterator::for_each()
[2m[36m(pid=47476)[0m     @     0x7eeed17ce4f5 at::Tensor::copy_()
[2m[36m(pid=47476)[0m     @     0x7eeed787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47476)[0m     @     0x562a1e92efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47476)[0m     @     0x562a1e889b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47476)[0m     @     0x562a1e914baf _PyEval_EvalCodeWithName
[2m[36m(pid=47476)[0m     @     0x562a1e915a20 method_vectorcall
[2m[36m(pid=47476)[0m     @     0x562a1e889bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47476)[0m     @     0x562a1e914baf _PyEval_EvalCodeWithName
[2m[36m(pid=47476)[0m     @     0x562a1e915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47476)[0m     @     0x562a1e88a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47476)[0m     @     0x562a1e914baf _PyEval_EvalCodeWithName
[2m[36m(pid=47476)[0m     @     0x562a1e915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47476)[0m     @     0x562a1e88a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47476)[0m     @     0x562a1e914baf _PyEval_EvalCodeWithName
[2m[36m(pid=47476)[0m     @     0x562a1e915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47476)[0m     @     0x562a1e88a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47476)[0m     @     0x562a1e914baf _PyEval_EvalCodeWithName
[2m[36m(pid=47476)[0m     @     0x562a1e915643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47476)[0m     @     0x562a1e88a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47407)[0m     @     0x7f650b4f25a4 at::native::copy_()
[2m[36m(pid=47407)[0m     @     0x7f650bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=47461)[0m     @     0x7fbcc858b5a4 at::native::copy_()
[2m[36m(pid=47461)[0m     @     0x7fbcc8c764f5 at::Tensor::copy_()
[2m[36m(pid=47461)[0m     @     0x7fbccb1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47453)[0m     @     0x7f3a26c384f5 at::Tensor::copy_()
[2m[36m(pid=47453)[0m     @     0x7f3a2cce379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47453)[0m     @     0x5642443bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47453)[0m     @     0x564244315b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47453)[0m     @     0x5642443a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47453)[0m     @     0x5642443a1a20 method_vectorcall
[2m[36m(pid=47453)[0m     @     0x564244315bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47453)[0m     @     0x5642443a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47453)[0m     @     0x5642443a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47453)[0m     @     0x564244316689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47453)[0m     @     0x5642443a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47453)[0m     @     0x5642443a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47453)[0m     @     0x564244316689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47453)[0m     @     0x5642443a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47453)[0m     @     0x5642443a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47453)[0m     @     0x564244316689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47453)[0m     @     0x5642443a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47453)[0m     @     0x5642443a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47453)[0m     @     0x564244316689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47433)[0m     @     0x7f2bb2ce54f5 at::Tensor::copy_()
[2m[36m(pid=47433)[0m     @     0x7f2bb51b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47433)[0m     @     0x7f2bb2ce54f5 at::Tensor::copy_()
[2m[36m(pid=47433)[0m     @     0x7f2bb8d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47433)[0m     @     0x5578e21d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47433)[0m     @     0x5578e212bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47433)[0m     @     0x5578e21b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47433)[0m     @     0x5578e21b7a20 method_vectorcall
[2m[36m(pid=47433)[0m     @     0x5578e212bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47433)[0m     @     0x5578e21b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47433)[0m     @     0x5578e21b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47433)[0m     @     0x5578e212c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47433)[0m     @     0x5578e21b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47433)[0m     @     0x5578e21b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47433)[0m     @     0x5578e212c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47433)[0m     @     0x5578e21b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47433)[0m     @     0x5578e21b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47433)[0m     @     0x5578e212c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47433)[0m     @     0x5578e21b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47433)[0m     @     0x5578e21b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47433)[0m     @     0x5578e212c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47414)[0m     @     0x7f519bcfb5a4 at::native::copy_()
[2m[36m(pid=47414)[0m     @     0x7f519c3e64f5 at::Tensor::copy_()
[2m[36m(pid=47414)[0m     @     0x7f519e8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47420)[0m     @     0x7f359d1404f5 at::Tensor::copy_()
[2m[36m(pid=47420)[0m     @     0x7f35a31eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47420)[0m     @     0x563ce87cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47420)[0m     @     0x563ce8729b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47420)[0m     @     0x563ce87b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47420)[0m     @     0x563ce87b5a20 method_vectorcall
[2m[36m(pid=47420)[0m     @     0x563ce8729bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47420)[0m     @     0x563ce87b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47420)[0m     @     0x563ce87b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47420)[0m     @     0x563ce872a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47420)[0m     @     0x563ce87b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47420)[0m     @     0x563ce87b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47420)[0m     @     0x563ce872a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47420)[0m     @     0x563ce87b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47420)[0m     @     0x563ce87b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47420)[0m     @     0x563ce872a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47420)[0m     @     0x563ce87b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47420)[0m     @     0x563ce87b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47420)[0m     @     0x563ce872a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x7f64e2852ad3 at::TensorIterator::for_each()
[2m[36m(pid=47361)[0m     @     0x7f64e2852d91 at::TensorIterator::for_each()
[2m[36m(pid=47361)[0m     @     0x7f64e3135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47429)[0m     @     0x7f1c1f45f4f5 at::Tensor::copy_()
[2m[36m(pid=47429)[0m     @     0x7f1c2550a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47429)[0m     @     0x562f6b2effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47429)[0m     @     0x562f6b24ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47429)[0m     @     0x562f6b2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47429)[0m     @     0x562f6b2d6a20 method_vectorcall
[2m[36m(pid=47429)[0m     @     0x562f6b24abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47429)[0m     @     0x562f6b2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47429)[0m     @     0x562f6b2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47429)[0m     @     0x562f6b24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47429)[0m     @     0x562f6b2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47429)[0m     @     0x562f6b2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47429)[0m     @     0x562f6b24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47429)[0m     @     0x562f6b2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47429)[0m     @     0x562f6b2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47429)[0m     @     0x562f6b24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47429)[0m     @     0x562f6b2d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47429)[0m     @     0x562f6b2d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47429)[0m     @     0x562f6b24b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47350)[0m     @     0x7ef9f6bbdad3 at::TensorIterator::for_each()
[2m[36m(pid=47350)[0m     @     0x7ef9f6bbdd91 at::TensorIterator::for_each()
[2m[36m(pid=47350)[0m     @     0x7ef9f74a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47350)[0m     @     0x7ef9f74c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47427)[0m     @     0x7ee7f8922b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47427)[0m     @     0x7ee7f8945c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47427)[0m     @     0x7ee7f7de7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47427)[0m     @     0x7ee7f7de5388 at::native::copy_impl()
[2m[36m(pid=47396)[0m     @     0x7f10bf0f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47396)[0m     @     0x7f10be8227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47396)[0m     @     0x7f10be8258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47334)[0m     @     0x7f160fda88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47334)[0m     @     0x7f160fda8ad3 at::TensorIterator::for_each()
[2m[36m(pid=47374)[0m     @     0x7f7023e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47374)[0m     @     0x7f7023ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47374)[0m     @     0x7f7023ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=47408)[0m     @     0x7f76025948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47408)[0m     @     0x7f7602594ad3 at::TensorIterator::for_each()
[2m[36m(pid=47367)[0m     @     0x7f055c765390 (unknown)
[2m[36m(pid=47367)[0m     @     0x7ed65c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47367)[0m     @     0x7ed65bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
2020-11-05 10:45:10,618	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=47437)[0m     @     0x7f2515d37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47437)[0m     @     0x7f25154627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47437)[0m     @     0x7f25154658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47437)[0m     @     0x7f2515465ad3 at::TensorIterator::for_each()
[2m[36m(pid=47443)[0m     @     0x7ed835552ad3 at::TensorIterator::for_each()
[2m[36m(pid=47443)[0m     @     0x7ed835552d91 at::TensorIterator::for_each()
[2m[36m(pid=47443)[0m     @     0x7ed835e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47443)[0m     @     0x7ed835e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47392)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47392)[0m *** SIGSEGV (@0x0) received by PID 47392 (TID 0x7ff5912ec700) from PID 0; stack trace: ***
[2m[36m(pid=47392)[0m     @     0x7ff590ec5390 (unknown)
[2m[36m(pid=47392)[0m     @     0x7fc690e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47335)[0m     @     0x7f694f95fad3 at::TensorIterator::for_each()
[2m[36m(pid=47335)[0m     @     0x7f694f95fd91 at::TensorIterator::for_each()
[2m[36m(pid=47335)[0m     @     0x7f6950242b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47335)[0m     @     0x7f6950265c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47335)[0m     @     0x7f694f707a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47441)[0m     @     0x7eed360ba4f5 at::Tensor::copy_()
[2m[36m(pid=47441)[0m     @     0x7eed3c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47441)[0m     @     0x564ce3459fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47441)[0m     @     0x564ce33b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47441)[0m     @     0x564ce343fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47441)[0m     @     0x564ce3440a20 method_vectorcall
[2m[36m(pid=47441)[0m     @     0x564ce33b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47441)[0m     @     0x564ce343fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47441)[0m     @     0x564ce3440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47441)[0m     @     0x564ce33b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47441)[0m     @     0x564ce343fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47441)[0m     @     0x564ce3440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47441)[0m     @     0x564ce33b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47441)[0m     @     0x564ce343fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47441)[0m     @     0x564ce3440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47441)[0m     @     0x564ce33b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47441)[0m     @     0x564ce343fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47441)[0m     @     0x564ce3440643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47441)[0m     @     0x564ce33b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47352)[0m     @     0x7f921a3bdad3 at::TensorIterator::for_each()
[2m[36m(pid=47352)[0m     @     0x7f921a3bdd91 at::TensorIterator::for_each()
[2m[36m(pid=47352)[0m     @     0x7f921aca0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47352)[0m     @     0x7f921acc3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47375)[0m     @     0x7ee87e641ad3 at::TensorIterator::for_each()
[2m[36m(pid=47375)[0m     @     0x7ee87e641d91 at::TensorIterator::for_each()
[2m[36m(pid=47375)[0m     @     0x7ee87ef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47375)[0m     @     0x7ee87ef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47417)[0m     @     0x7f27fd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=47417)[0m     @     0x7f27fd552d91 at::TensorIterator::for_each()
[2m[36m(pid=47417)[0m     @     0x7f27fde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47417)[0m     @     0x7f27fde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47400)[0m     @     0x7edd6774aad3 at::TensorIterator::for_each()
[2m[36m(pid=47400)[0m     @     0x7edd6774ad91 at::TensorIterator::for_each()
[2m[36m(pid=47400)[0m     @     0x7edd6802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47400)[0m     @     0x7edd68050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47363)[0m     @     0x7f0c8aefcad3 at::TensorIterator::for_each()
[2m[36m(pid=47363)[0m     @     0x7f0c8aefcd91 at::TensorIterator::for_each()
[2m[36m(pid=47363)[0m     @     0x7f0c8b7dfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47363)[0m     @     0x7f0c8b802c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47337)[0m     @     0x7f45ed951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47337)[0m     @     0x7f45ed974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47337)[0m     @     0x7f45ece16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47337)[0m     @     0x7f45ece14388 at::native::copy_impl()
[2m[36m(pid=47337)[0m     @     0x7f45ece165a4 at::native::copy_()
[2m[36m(pid=47348)[0m     @     0x7f2da8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=47348)[0m     @     0x7f2da8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=47348)[0m     @     0x7f2da980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47348)[0m     @     0x7f2da982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47348)[0m     @     0x7f2da8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47364)[0m     @     0x7f4dbcb3dd91 at::TensorIterator::for_each()
[2m[36m(pid=47364)[0m     @     0x7f4dbd420b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47364)[0m     @     0x7f4dbd443c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47364)[0m     @     0x7f4dbc8e5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47364)[0m     @     0x7f4dbc8e3388 at::native::copy_impl()
[2m[36m(pid=47452)[0m     @     0x7f156a6924f5 at::Tensor::copy_()
[2m[36m(pid=47452)[0m     @     0x7f156cb658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47452)[0m     @     0x7f156a6924f5 at::Tensor::copy_()
[2m[36m(pid=47452)[0m     @     0x7f157073d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47452)[0m     @     0x559f1306dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47452)[0m     @     0x559f12fc8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47452)[0m     @     0x559f13053baf _PyEval_EvalCodeWithName
[2m[36m(pid=47347)[0m     @     0x7fc088711d91 at::TensorIterator::for_each()
[2m[36m(pid=47347)[0m     @     0x7fc088ff4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47347)[0m     @     0x7fc089017c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47347)[0m     @     0x7fc0884b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47347)[0m     @     0x7fc0884b7388 at::native::copy_impl()
[2m[36m(pid=47343)[0m     @     0x7f0314540d91 at::TensorIterator::for_each()
[2m[36m(pid=47343)[0m     @     0x7f0314e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47343)[0m     @     0x7f0314e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47343)[0m     @     0x7f03142e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47343)[0m     @     0x7f03142e6388 at::native::copy_impl()
[2m[36m(pid=47459)[0m     @     0x7ee7599e54f5 at::Tensor::copy_()
[2m[36m(pid=47459)[0m     @     0x7ee75fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47459)[0m     @     0x5558ffe88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47459)[0m     @     0x5558ffde3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47459)[0m     @     0x5558ffe6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47459)[0m     @     0x5558ffe6fa20 method_vectorcall
[2m[36m(pid=47459)[0m     @     0x5558ffde3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47459)[0m     @     0x5558ffe6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47459)[0m     @     0x5558ffe6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47459)[0m     @     0x5558ffde4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47459)[0m     @     0x5558ffe6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47459)[0m     @     0x5558ffe6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47459)[0m     @     0x5558ffde4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47459)[0m     @     0x5558ffe6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47459)[0m     @     0x5558ffe6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47459)[0m     @     0x5558ffde4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47459)[0m     @     0x5558ffe6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47459)[0m     @     0x5558ffe6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47459)[0m     @     0x5558ffde4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47426)[0m     @     0x7f48b4a654f5 at::Tensor::copy_()
[2m[36m(pid=47426)[0m     @     0x7f48bab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47426)[0m     @     0x56001a75dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47426)[0m     @     0x56001a6b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47426)[0m     @     0x56001a743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47426)[0m     @     0x56001a744a20 method_vectorcall
[2m[36m(pid=47426)[0m     @     0x56001a6b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47426)[0m     @     0x56001a743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47426)[0m     @     0x56001a744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47426)[0m     @     0x56001a6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47426)[0m     @     0x56001a743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47426)[0m     @     0x56001a744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47426)[0m     @     0x56001a6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47426)[0m     @     0x56001a743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47426)[0m     @     0x56001a744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47426)[0m     @     0x56001a6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47426)[0m     @     0x56001a743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47426)[0m     @     0x56001a744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47426)[0m     @     0x56001a6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47398)[0m     @     0x7fc2147e3d91 at::TensorIterator::for_each()
[2m[36m(pid=47398)[0m     @     0x7fc2150c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47398)[0m     @     0x7fc2150e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47398)[0m     @     0x7fc21458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47398)[0m     @     0x7fc214589388 at::native::copy_impl()
[2m[36m(pid=47430)[0m     @     0x7f0616d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=47430)[0m     @     0x7f0616d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=47430)[0m     @     0x7f0617630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47430)[0m     @     0x7f0617653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47430)[0m     @     0x7f0616af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47405)[0m     @     0x7ee74637dad3 at::TensorIterator::for_each()
[2m[36m(pid=47405)[0m     @     0x7ee74637dd91 at::TensorIterator::for_each()
[2m[36m(pid=47405)[0m     @     0x7ee746c60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47405)[0m     @     0x7ee746c83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47405)[0m     @     0x7ee746125a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47409)[0m     @     0x7f12999a7d91 at::TensorIterator::for_each()
[2m[36m(pid=47409)[0m     @     0x7f129a28ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47409)[0m     @     0x7f129a2adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47409)[0m     @     0x7f129974fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47409)[0m     @     0x7f129974d388 at::native::copy_impl()
[2m[36m(pid=47416)[0m     @     0x7fc8583e64f5 at::Tensor::copy_()
[2m[36m(pid=47416)[0m     @     0x7fc85a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47416)[0m     @     0x7fc8583e64f5 at::Tensor::copy_()
[2m[36m(pid=47416)[0m     @     0x7fc85e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47416)[0m     @     0x5570be15cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47416)[0m     @     0x5570be0b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47416)[0m     @     0x5570be142baf _PyEval_EvalCodeWithName
[2m[36m(pid=47416)[0m     @     0x5570be143a20 method_vectorcall
[2m[36m(pid=47416)[0m     @     0x5570be0b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47416)[0m     @     0x5570be142baf _PyEval_EvalCodeWithName
[2m[36m(pid=47416)[0m     @     0x5570be143643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47416)[0m     @     0x5570be0b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47416)[0m     @     0x5570be142baf _PyEval_EvalCodeWithName
[2m[36m(pid=47416)[0m     @     0x5570be143643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47473)[0m     @     0x7f4dfece54f5 at::Tensor::copy_()
[2m[36m(pid=47473)[0m     @     0x7f4e04d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47473)[0m     @     0x563dd4ed7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47473)[0m     @     0x563dd4e32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47473)[0m     @     0x563dd4ebdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47473)[0m     @     0x563dd4ebea20 method_vectorcall
[2m[36m(pid=47473)[0m     @     0x563dd4e32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47473)[0m     @     0x563dd4ebdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47473)[0m     @     0x563dd4ebe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47473)[0m     @     0x563dd4e33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47473)[0m     @     0x563dd4ebdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47473)[0m     @     0x563dd4ebe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47473)[0m     @     0x563dd4e33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47473)[0m     @     0x563dd4ebdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47473)[0m     @     0x563dd4ebe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47473)[0m     @     0x563dd4e33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47473)[0m     @     0x563dd4ebdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47473)[0m     @     0x563dd4ebe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47473)[0m     @     0x563dd4e33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x7ef63d512d91 at::TensorIterator::for_each()
[2m[36m(pid=47336)[0m     @     0x7ef63ddf5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47336)[0m     @     0x7ef63de18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47336)[0m     @     0x7ef63d2baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47336)[0m     @     0x7ef63d2b8388 at::native::copy_impl()
[2m[36m(pid=47455)[0m     @     0x7f879ab954f5 at::Tensor::copy_()
[2m[36m(pid=47455)[0m     @     0x7f879d0688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47455)[0m     @     0x7f879ab954f5 at::Tensor::copy_()
[2m[36m(pid=47455)[0m     @     0x7f87a0c4079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47455)[0m     @     0x55a8e31fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47455)[0m     @     0x55a8e3155b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47455)[0m     @     0x55a8e31e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47455)[0m     @     0x55a8e31e1a20 method_vectorcall
[2m[36m(pid=47455)[0m     @     0x55a8e3155bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47455)[0m     @     0x55a8e31e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47455)[0m     @     0x55a8e31e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47455)[0m     @     0x55a8e3156689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47455)[0m     @     0x55a8e31e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47455)[0m     @     0x55a8e31e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47455)[0m     @     0x55a8e3156689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47455)[0m     @     0x55a8e31e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47455)[0m     @     0x55a8e31e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47455)[0m     @     0x55a8e3156689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47455)[0m     @     0x55a8e31e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47455)[0m     @     0x55a8e31e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47455)[0m     @     0x55a8e3156689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47413)[0m     @     0x7f032ebcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47413)[0m     @     0x7f032c6fc4f5 at::Tensor::copy_()
[2m[36m(pid=47413)[0m     @     0x7f03327a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47413)[0m     @     0x556411539fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47413)[0m     @     0x556411494b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47413)[0m     @     0x55641151fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47413)[0m     @     0x556411520a20 method_vectorcall
[2m[36m(pid=47413)[0m     @     0x556411494bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47413)[0m     @     0x55641151fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47413)[0m     @     0x556411520643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47413)[0m     @     0x556411495689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47413)[0m     @     0x55641151fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47413)[0m     @     0x556411520643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47413)[0m     @     0x556411495689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47413)[0m     @     0x55641151fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47413)[0m     @     0x556411520643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47413)[0m     @     0x556411495689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47413)[0m     @     0x55641151fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47413)[0m     @     0x556411520643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47413)[0m     @     0x556411495689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47411)[0m     @     0x7f2ec408d390 (unknown)
[2m[36m(pid=47411)[0m     @     0x7effc401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47411)[0m     @     0x7effc37477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47411)[0m     @     0x7effc374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47411)[0m     @     0x7effc374aad3 at::TensorIterator::for_each()
[2m[36m(pid=47353)[0m     @     0x7eda9ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=47353)[0m     @     0x7eda9ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=47353)[0m     @     0x7eda9c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47353)[0m     @     0x7eda9c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47353)[0m     @     0x7eda9b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47353)[0m     @     0x7eda9b807388 at::native::copy_impl()
[2m[36m(pid=47410)[0m     @     0x7fb8d28528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47410)[0m     @     0x7fb8d2852ad3 at::TensorIterator::for_each()
[2m[36m(pid=47410)[0m     @     0x7fb8d2852d91 at::TensorIterator::for_each()
[2m[36m(pid=47410)[0m     @     0x7fb8d3135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47442)[0m     @     0x7f04b5512ad3 at::TensorIterator::for_each()
[2m[36m(pid=47442)[0m     @     0x7f04b5512d91 at::TensorIterator::for_each()
[2m[36m(pid=47442)[0m     @     0x7f04b5df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47442)[0m     @     0x7f04b5e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47373)[0m     @     0x7fa73a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47373)[0m     @     0x7fa73a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=47373)[0m     @     0x7fa73a957d91 at::TensorIterator::for_each()
[2m[36m(pid=47373)[0m     @     0x7fa73b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47373)[0m     @     0x7fa73b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47341)[0m     @     0x7eeb43223ad3 at::TensorIterator::for_each()
[2m[36m(pid=47341)[0m     @     0x7eeb43223d91 at::TensorIterator::for_each()
[2m[36m(pid=47341)[0m     @     0x7eeb43b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47341)[0m     @     0x7eeb43b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47346)[0m     @     0x7fbb4b9b17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47346)[0m     @     0x7fbb4b9b48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47354)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47354)[0m *** SIGSEGV (@0x0) received by PID 47354 (TID 0x7f12c5b84700) from PID 0; stack trace: ***
[2m[36m(pid=47354)[0m     @     0x7f12c575d390 (unknown)
[2m[36m(pid=47354)[0m     @     0x7ee3c56f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47354)[0m     @     0x7ee3c4e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47354)[0m     @     0x7ee3c4e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47471)[0m     @     0x7f4775d748f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47471)[0m     @     0x7f4775d74ad3 at::TensorIterator::for_each()
[2m[36m(pid=47412)[0m PC: @                0x0 (unknown)
[2m[36m(pid=47412)[0m *** SIGSEGV (@0x0) received by PID 47412 (TID 0x7ff814fad700) from PID 0; stack trace: ***
[2m[36m(pid=47412)[0m     @     0x7ff814b86390 (unknown)
[2m[36m(pid=47412)[0m     @     0x7fc914825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47412)[0m     @     0x7fc913f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47440)[0m     @     0x7f42ee5c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47440)[0m     @     0x7f42ee5c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=47366)[0m     @     0x7f53e8940390 (unknown)
[2m[36m(pid=47366)[0m     @     0x7f24e8774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47366)[0m     @     0x7f24e7e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47366)[0m     @     0x7f24e7ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47366)[0m     @     0x7f24e7ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=47344)[0m     @     0x7f77e97307db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47344)[0m     @     0x7f77e97338f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47419)[0m     @     0x7efee18688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47419)[0m     @     0x7efee1868ad3 at::TensorIterator::for_each()
[2m[36m(pid=47402)[0m     @     0x7f0c59aaa390 (unknown)
[2m[36m(pid=47402)[0m     @     0x7edd59a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47402)[0m     @     0x7edd591357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47339)[0m     @     0x7f4414685d91 at::TensorIterator::for_each()
[2m[36m(pid=47339)[0m     @     0x7f4414f68b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47339)[0m     @     0x7f4414f8bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47339)[0m     @     0x7f441442da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47377)[0m     @     0x7f744acbdad3 at::TensorIterator::for_each()
[2m[36m(pid=47377)[0m     @     0x7f744acbdd91 at::TensorIterator::for_each()
[2m[36m(pid=47377)[0m     @     0x7f744b5a0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47377)[0m     @     0x7f744b5c3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47395)[0m     @     0x7ecf8a702d91 at::TensorIterator::for_each()
[2m[36m(pid=47395)[0m     @     0x7ecf8afe5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47395)[0m     @     0x7ecf8b008c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47395)[0m     @     0x7ecf8a4aaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47444)[0m     @     0x7fae6ad4dd91 at::TensorIterator::for_each()
[2m[36m(pid=47444)[0m     @     0x7fae6b630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47444)[0m     @     0x7fae6b653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47444)[0m     @     0x7fae6aaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47444)[0m     @     0x7fae6aaf3388 at::native::copy_impl()
[2m[36m(pid=47403)[0m     @     0x7efb09a39d91 at::TensorIterator::for_each()
[2m[36m(pid=47403)[0m     @     0x7efb0a31cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47403)[0m     @     0x7efb0a33fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47464)[0m     @     0x7fac8ae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=47464)[0m     @     0x7fac8ae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=47464)[0m     @     0x7fac8b762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47464)[0m     @     0x7fac8b785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47415)[0m     @     0x7f4d37af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=47415)[0m     @     0x7f4d372207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47415)[0m     @     0x7f4d372238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47415)[0m     @     0x7f4d37223ad3 at::TensorIterator::for_each()
[2m[36m(pid=47359)[0m     @     0x7f5b8fd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=47359)[0m     @     0x7f5b9061fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47359)[0m     @     0x7f5b90642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47359)[0m     @     0x7f5b8fae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47359)[0m     @     0x7f5b8fae2388 at::native::copy_impl()
[2m[36m(pid=47397)[0m     @     0x7f595ed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=47397)[0m     @     0x7f595f630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47397)[0m     @     0x7f595f653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47397)[0m     @     0x7f595eaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47397)[0m     @     0x7f595eaf3388 at::native::copy_impl()
[2m[36m(pid=47468)[0m     @     0x7fa150859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47468)[0m     @     0x7fa14fcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47468)[0m     @     0x7fa14fcf9388 at::native::copy_impl()
[2m[36m(pid=47468)[0m     @     0x7fa14fcfb5a4 at::native::copy_()
[2m[36m(pid=47368)[0m     @     0x7f06f133bd91 at::TensorIterator::for_each()
[2m[36m(pid=47368)[0m     @     0x7f06f1c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47368)[0m     @     0x7f06f1c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47368)[0m     @     0x7f06f10e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47368)[0m     @     0x7f06f10e1388 at::native::copy_impl()
[2m[36m(pid=47368)[0m     @     0x7f06f10e35a4 at::native::copy_()
[2m[36m(pid=47340)[0m     @     0x7fae7f539d91 at::TensorIterator::for_each()
[2m[36m(pid=47340)[0m     @     0x7fae7fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47340)[0m     @     0x7fae7fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47340)[0m     @     0x7fae7f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47340)[0m     @     0x7fae7f2df388 at::native::copy_impl()
[2m[36m(pid=47349)[0m     @     0x7f8ff250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47349)[0m     @     0x7f8ff252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47349)[0m     @     0x7f8ff19cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47349)[0m     @     0x7f8ff19cd388 at::native::copy_impl()
[2m[36m(pid=47349)[0m     @     0x7f8ff19cf5a4 at::native::copy_()
[2m[36m(pid=47457)[0m     @     0x55f56e741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47457)[0m     @     0x55f56e6b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47457)[0m     @     0x55f56e740baf _PyEval_EvalCodeWithName
[2m[36m(pid=47457)[0m     @     0x55f56e741643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47457)[0m     @     0x55f56e6b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47423)[0m     @     0x55da16ef4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47423)[0m     @     0x55da16e69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47423)[0m     @     0x55da16ef3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47423)[0m     @     0x55da16ef4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47423)[0m     @     0x55da16e69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47423)[0m     @     0x55da16ef3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47423)[0m     @     0x55da16ef4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47423)[0m     @     0x55da16e69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47423)[0m     @     0x55da16ef3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47423)[0m     @     0x55da16ef4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47423)[0m     @     0x55da16e69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47418)[0m     @     0x7fbec658d4f5 at::Tensor::copy_()
[2m[36m(pid=47418)[0m     @     0x7fbecc63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47418)[0m     @     0x5587d0044fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47418)[0m     @     0x5587cff9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47418)[0m     @     0x5587d002abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47418)[0m     @     0x5587d002ba20 method_vectorcall
[2m[36m(pid=47418)[0m     @     0x5587cff9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47418)[0m     @     0x5587d002abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47418)[0m     @     0x5587d002b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47418)[0m     @     0x5587cffa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47418)[0m     @     0x5587d002abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47418)[0m     @     0x5587d002b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47418)[0m     @     0x5587cffa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47418)[0m     @     0x5587d002abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47418)[0m     @     0x5587d002b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47418)[0m     @     0x5587cffa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47418)[0m     @     0x5587d002abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47418)[0m     @     0x5587d002b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47418)[0m     @     0x5587cffa0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47425)[0m     @     0x7ee3d9517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47425)[0m     @     0x7ee3d89b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47425)[0m     @     0x7ee3d89b7388 at::native::copy_impl()
[2m[36m(pid=47425)[0m     @     0x7ee3d89b95a4 at::native::copy_()
[2m[36m(pid=47435)[0m     @     0x7f8af9552d91 at::TensorIterator::for_each()
[2m[36m(pid=47435)[0m     @     0x7f8af9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47435)[0m     @     0x7f8af9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47435)[0m     @     0x7f8af92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47435)[0m     @     0x7f8af92f8388 at::native::copy_impl()
[2m[36m(pid=47342)[0m     @     0x7ecf572b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47342)[0m     @     0x7ecf572b2388 at::native::copy_impl()
[2m[36m(pid=47342)[0m     @     0x7ecf572b45a4 at::native::copy_()
[2m[36m(pid=47342)[0m     @     0x7ecf5799f4f5 at::Tensor::copy_()
[2m[36m(pid=47351)[0m     @     0x7f7e3eca0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47351)[0m     @     0x7f7e3ecc3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47351)[0m     @     0x7f7e3e165a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47351)[0m     @     0x7f7e3e163388 at::native::copy_impl()
[2m[36m(pid=47351)[0m     @     0x7f7e3e1655a4 at::native::copy_()
[2m[36m(pid=47422)[0m     @     0x7ef5cb59eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47422)[0m     @     0x7ef5cb5c1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47422)[0m     @     0x7ef5caa63a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47422)[0m     @     0x7ef5caa61388 at::native::copy_impl()
[2m[36m(pid=47422)[0m     @     0x7ef5caa635a4 at::native::copy_()
[2m[36m(pid=47407)[0m     @     0x7f650e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47407)[0m     @     0x7f650bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=47407)[0m     @     0x7f6511c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47407)[0m     @     0x55ecb3442fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47407)[0m     @     0x55ecb339db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47407)[0m     @     0x55ecb3428baf _PyEval_EvalCodeWithName
[2m[36m(pid=47407)[0m     @     0x55ecb3429a20 method_vectorcall
[2m[36m(pid=47407)[0m     @     0x55ecb339dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47407)[0m     @     0x55ecb3428baf _PyEval_EvalCodeWithName
[2m[36m(pid=47407)[0m     @     0x55ecb3429643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47407)[0m     @     0x55ecb339e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47407)[0m     @     0x55ecb3428baf _PyEval_EvalCodeWithName
[2m[36m(pid=47407)[0m     @     0x55ecb3429643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47407)[0m     @     0x55ecb339e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47407)[0m     @     0x55ecb3428baf _PyEval_EvalCodeWithName
[2m[36m(pid=47407)[0m     @     0x55ecb3429643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47407)[0m     @     0x55ecb339e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47407)[0m     @     0x55ecb3428baf _PyEval_EvalCodeWithName
[2m[36m(pid=47407)[0m     @     0x55ecb3429643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47407)[0m     @     0x55ecb339e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47461)[0m     @     0x7fbcc8c764f5 at::Tensor::copy_()
[2m[36m(pid=47461)[0m     @     0x7fbcced2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47461)[0m     @     0x560876c40fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47461)[0m     @     0x560876b9bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47461)[0m     @     0x560876c26baf _PyEval_EvalCodeWithName
[2m[36m(pid=47461)[0m     @     0x560876c27a20 method_vectorcall
[2m[36m(pid=47461)[0m     @     0x560876b9bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47461)[0m     @     0x560876c26baf _PyEval_EvalCodeWithName
[2m[36m(pid=47461)[0m     @     0x560876c27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47461)[0m     @     0x560876b9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47461)[0m     @     0x560876c26baf _PyEval_EvalCodeWithName
[2m[36m(pid=47461)[0m     @     0x560876c27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47461)[0m     @     0x560876b9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47461)[0m     @     0x560876c26baf _PyEval_EvalCodeWithName
[2m[36m(pid=47461)[0m     @     0x560876c27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47461)[0m     @     0x560876b9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47461)[0m     @     0x560876c26baf _PyEval_EvalCodeWithName
[2m[36m(pid=47461)[0m     @     0x560876c27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47461)[0m     @     0x560876b9c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47414)[0m     @     0x7f519c3e64f5 at::Tensor::copy_()
[2m[36m(pid=47414)[0m     @     0x7f51a249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47414)[0m     @     0x55e91110dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47414)[0m     @     0x55e911068b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47414)[0m     @     0x55e9110f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47414)[0m     @     0x55e9110f4a20 method_vectorcall
[2m[36m(pid=47414)[0m     @     0x55e911068bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47414)[0m     @     0x55e9110f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47414)[0m     @     0x55e9110f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47414)[0m     @     0x55e911069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47414)[0m     @     0x55e9110f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47414)[0m     @     0x55e9110f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47414)[0m     @     0x55e911069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47414)[0m     @     0x55e9110f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47414)[0m     @     0x55e9110f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47414)[0m     @     0x55e911069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47414)[0m     @     0x55e9110f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=47414)[0m     @     0x55e9110f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47414)[0m     @     0x55e911069689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x7f64e3158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47361)[0m     @     0x7f64e25faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47361)[0m     @     0x7f64e25f8388 at::native::copy_impl()
[2m[36m(pid=47361)[0m     @     0x7f64e25fa5a4 at::native::copy_()
[2m[36m(pid=47350)[0m     @     0x7ef9f6965a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47350)[0m     @     0x7ef9f6963388 at::native::copy_impl()
[2m[36m(pid=47350)[0m     @     0x7ef9f69655a4 at::native::copy_()
[2m[36m(pid=47350)[0m     @     0x7ef9f70504f5 at::Tensor::copy_()
[2m[36m(pid=47427)[0m     @     0x7ee7f7de75a4 at::native::copy_()
[2m[36m(pid=47427)[0m     @     0x7ee7f84d24f5 at::Tensor::copy_()
[2m[36m(pid=47427)[0m     @     0x7ee7fa9a58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47396)[0m     @     0x7f10be825ad3 at::TensorIterator::for_each()
[2m[36m(pid=47396)[0m     @     0x7f10be825d91 at::TensorIterator::for_each()
[2m[36m(pid=47396)[0m     @     0x7f10bf108b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47396)[0m     @     0x7f10bf12bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47334)[0m     @     0x7f160fda8d91 at::TensorIterator::for_each()
[2m[36m(pid=47334)[0m     @     0x7f161068bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47334)[0m     @     0x7f16106aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47334)[0m     @     0x7f160fb50a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47334)[0m     @     0x7f160fb4e388 at::native::copy_impl()
[2m[36m(pid=47374)[0m     @     0x7f7023ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=47374)[0m     @     0x7f7024785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47374)[0m     @     0x7f70247a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47374)[0m     @     0x7f7023c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47374)[0m     @     0x7f7023c48388 at::native::copy_impl()
[2m[36m(pid=47408)[0m     @     0x7f7602594d91 at::TensorIterator::for_each()
[2m[36m(pid=47408)[0m     @     0x7f7602e77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47408)[0m     @     0x7f7602e9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47408)[0m     @     0x7f760233ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47408)[0m     @     0x7f760233a388 at::native::copy_impl()
[2m[36m(pid=47408)[0m     @     0x7f760233c5a4 at::native::copy_()
[2m[36m(pid=47367)[0m     @     0x7ed65bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47367)[0m     @     0x7ed65bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=47367)[0m     @     0x7ed65bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=47367)[0m     @     0x7ed65c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47367)[0m     @     0x7ed65c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47437)[0m     @     0x7f2515465d91 at::TensorIterator::for_each()
[2m[36m(pid=47437)[0m     @     0x7f2515d48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47437)[0m     @     0x7f2515d6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47437)[0m     @     0x7f251520da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47437)[0m     @     0x7f251520b388 at::native::copy_impl()
[2m[36m(pid=47443)[0m     @     0x7ed8352faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47443)[0m     @     0x7ed8352f8388 at::native::copy_impl()
[2m[36m(pid=47443)[0m     @     0x7ed8352fa5a4 at::native::copy_()
[2m[36m(pid=47392)[0m     @     0x7fc6905a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=47392)[0m     @     0x7fc6905a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47335)[0m     @     0x7f694f705388 at::native::copy_impl()
[2m[36m(pid=47335)[0m     @     0x7f694f7075a4 at::native::copy_()
[2m[36m(pid=47335)[0m     @     0x7f694fdf24f5 at::Tensor::copy_()
[2m[36m(pid=47352)[0m     @     0x7f921a165a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47352)[0m     @     0x7f921a163388 at::native::copy_impl()
[2m[36m(pid=47352)[0m     @     0x7f921a1655a4 at::native::copy_()
[2m[36m(pid=47375)[0m     @     0x7ee87e3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47375)[0m     @     0x7ee87e3e7388 at::native::copy_impl()
[2m[36m(pid=47375)[0m     @     0x7ee87e3e95a4 at::native::copy_()
[2m[36m(pid=47417)[0m     @     0x7f27fd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47417)[0m     @     0x7f27fd2f8388 at::native::copy_impl()
[2m[36m(pid=47400)[0m     @     0x7edd674f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47400)[0m     @     0x7edd674f0388 at::native::copy_impl()
[2m[36m(pid=47400)[0m     @     0x7edd674f25a4 at::native::copy_()
[2m[36m(pid=47363)[0m     @     0x7f0c8aca4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47363)[0m     @     0x7f0c8aca2388 at::native::copy_impl()
[2m[36m(pid=47363)[0m     @     0x7f0c8aca45a4 at::native::copy_()
[2m[36m(pid=47337)[0m     @     0x7f45ed5014f5 at::Tensor::copy_()
[2m[36m(pid=47337)[0m     @     0x7f45ef9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47337)[0m     @     0x7f45ed5014f5 at::Tensor::copy_()
[2m[36m(pid=47348)[0m     @     0x7f2da8ccd388 at::native::copy_impl()
[2m[36m(pid=47348)[0m     @     0x7f2da8ccf5a4 at::native::copy_()
[2m[36m(pid=47348)[0m     @     0x7f2da93ba4f5 at::Tensor::copy_()
[2m[36m(pid=47364)[0m     @     0x7f4dbc8e55a4 at::native::copy_()
[2m[36m(pid=47364)[0m     @     0x7f4dbcfd04f5 at::Tensor::copy_()
[2m[36m(pid=47452)[0m     @     0x559f13054a20 method_vectorcall
[2m[36m(pid=47452)[0m     @     0x559f12fc8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47452)[0m     @     0x559f13053baf _PyEval_EvalCodeWithName
[2m[36m(pid=47452)[0m     @     0x559f13054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47452)[0m     @     0x559f12fc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47452)[0m     @     0x559f13053baf _PyEval_EvalCodeWithName
[2m[36m(pid=47452)[0m     @     0x559f13054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47452)[0m     @     0x559f12fc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47452)[0m     @     0x559f13053baf _PyEval_EvalCodeWithName
[2m[36m(pid=47452)[0m     @     0x559f13054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47452)[0m     @     0x559f12fc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47452)[0m     @     0x559f13053baf _PyEval_EvalCodeWithName
[2m[36m(pid=47452)[0m     @     0x559f13054643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47452)[0m     @     0x559f12fc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47347)[0m     @     0x7fc0884b95a4 at::native::copy_()
[2m[36m(pid=47347)[0m     @     0x7fc088ba44f5 at::Tensor::copy_()
[2m[36m(pid=47343)[0m     @     0x7f03142e85a4 at::native::copy_()
[2m[36m(pid=47343)[0m     @     0x7f03149d34f5 at::Tensor::copy_()
[2m[36m(pid=47343)[0m     @     0x7f0316ea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47398)[0m     @     0x7fc21458b5a4 at::native::copy_()
[2m[36m(pid=47398)[0m     @     0x7fc214c764f5 at::Tensor::copy_()
[2m[36m(pid=47398)[0m     @     0x7fc2171498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47430)[0m     @     0x7f0616af3388 at::native::copy_impl()
[2m[36m(pid=47405)[0m     @     0x7ee746123388 at::native::copy_impl()
[2m[36m(pid=47405)[0m     @     0x7ee7461255a4 at::native::copy_()
[2m[36m(pid=47409)[0m     @     0x7f129974f5a4 at::native::copy_()
[2m[36m(pid=47409)[0m     @     0x7f1299e3a4f5 at::Tensor::copy_()
[2m[36m(pid=47409)[0m     @     0x7f129c30d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47416)[0m     @     0x5570be0b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47416)[0m     @     0x5570be142baf _PyEval_EvalCodeWithName
[2m[36m(pid=47416)[0m     @     0x5570be143643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47416)[0m     @     0x5570be0b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47416)[0m     @     0x5570be142baf _PyEval_EvalCodeWithName
[2m[36m(pid=47416)[0m     @     0x5570be143643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47416)[0m     @     0x5570be0b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x7ef63d2ba5a4 at::native::copy_()
[2m[36m(pid=47336)[0m     @     0x7ef63d9a54f5 at::Tensor::copy_()
[2m[36m(pid=47411)[0m     @     0x7effc374ad91 at::TensorIterator::for_each()
[2m[36m(pid=47411)[0m     @     0x7effc402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47411)[0m     @     0x7effc4050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47353)[0m     @     0x7eda9b8095a4 at::native::copy_()
[2m[36m(pid=47353)[0m     @     0x7eda9bef44f5 at::Tensor::copy_()
[2m[36m(pid=47410)[0m     @     0x7fb8d3158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47410)[0m     @     0x7fb8d25faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47410)[0m     @     0x7fb8d25f8388 at::native::copy_impl()
[2m[36m(pid=47410)[0m     @     0x7fb8d25fa5a4 at::native::copy_()
[2m[36m(pid=47442)[0m     @     0x7f04b52baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47442)[0m     @     0x7f04b52b8388 at::native::copy_impl()
[2m[36m(pid=47442)[0m     @     0x7f04b52ba5a4 at::native::copy_()
[2m[36m(pid=47442)[0m     @     0x7f04b59a54f5 at::Tensor::copy_()
[2m[36m(pid=47373)[0m     @     0x7fa73a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47373)[0m     @     0x7fa73a6fd388 at::native::copy_impl()
[2m[36m(pid=47373)[0m     @     0x7fa73a6ff5a4 at::native::copy_()
[2m[36m(pid=47373)[0m     @     0x7fa73adea4f5 at::Tensor::copy_()
[2m[36m(pid=47341)[0m     @     0x7eeb42fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47341)[0m     @     0x7eeb42fc9388 at::native::copy_impl()
[2m[36m(pid=47341)[0m     @     0x7eeb42fcb5a4 at::native::copy_()
[2m[36m(pid=47341)[0m     @     0x7eeb436b64f5 at::Tensor::copy_()
[2m[36m(pid=47346)[0m     @     0x7fbb4b9b4ad3 at::TensorIterator::for_each()
[2m[36m(pid=47346)[0m     @     0x7fbb4b9b4d91 at::TensorIterator::for_each()
[2m[36m(pid=47346)[0m     @     0x7fbb4c297b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47346)[0m     @     0x7fbb4c2bac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47354)[0m     @     0x7ee3c4e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=47354)[0m     @     0x7ee3c4e22d91 at::TensorIterator::for_each()
[2m[36m(pid=47354)[0m     @     0x7ee3c5705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47354)[0m     @     0x7ee3c5728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47354)[0m     @     0x7ee3c4bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47354)[0m     @     0x7ee3c4bc8388 at::native::copy_impl()
[2m[36m(pid=47471)[0m     @     0x7f4775d74d91 at::TensorIterator::for_each()
[2m[36m(pid=47471)[0m     @     0x7f4776657b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47471)[0m     @     0x7f477667ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47471)[0m     @     0x7f4775b1ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47471)[0m     @     0x7f4775b1a388 at::native::copy_impl()
[2m[36m(pid=47440)[0m     @     0x7f42ee5c1d91 at::TensorIterator::for_each()
[2m[36m(pid=47440)[0m     @     0x7f42eeea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47440)[0m     @     0x7f42eeec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47440)[0m     @     0x7f42ee369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47440)[0m     @     0x7f42ee367388 at::native::copy_impl()
[2m[36m(pid=47366)[0m     @     0x7f24e7ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=47366)[0m     @     0x7f24e8785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47366)[0m     @     0x7f24e87a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47366)[0m     @     0x7f24e7c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47366)[0m     @     0x7f24e7c48388 at::native::copy_impl()
[2m[36m(pid=47344)[0m     @     0x7f77e9733ad3 at::TensorIterator::for_each()
[2m[36m(pid=47344)[0m     @     0x7f77e9733d91 at::TensorIterator::for_each()
[2m[36m(pid=47344)[0m     @     0x7f77ea016b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47344)[0m     @     0x7f77ea039c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47344)[0m     @     0x7f77e94dba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47344)[0m     @     0x7f77e94d9388 at::native::copy_impl()
[2m[36m(pid=47419)[0m     @     0x7efee1868d91 at::TensorIterator::for_each()
[2m[36m(pid=47419)[0m     @     0x7efee214bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47419)[0m     @     0x7efee216ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47419)[0m     @     0x7efee1610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47419)[0m     @     0x7efee160e388 at::native::copy_impl()
[2m[36m(pid=47402)[0m     @     0x7edd591388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47402)[0m     @     0x7edd59138ad3 at::TensorIterator::for_each()
[2m[36m(pid=47402)[0m     @     0x7edd59138d91 at::TensorIterator::for_each()
[2m[36m(pid=47402)[0m     @     0x7edd59a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47402)[0m     @     0x7edd59a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47339)[0m     @     0x7f441442b388 at::native::copy_impl()
[2m[36m(pid=47339)[0m     @     0x7f441442d5a4 at::native::copy_()
[2m[36m(pid=47339)[0m     @     0x7f4414b184f5 at::Tensor::copy_()
[2m[36m(pid=47339)[0m     @     0x7f4416feb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47377)[0m     @     0x7f744aa65a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47377)[0m     @     0x7f744aa63388 at::native::copy_impl()
[2m[36m(pid=47377)[0m     @     0x7f744aa655a4 at::native::copy_()
[2m[36m(pid=47395)[0m     @     0x7ecf8a4a8388 at::native::copy_impl()
[2m[36m(pid=47395)[0m     @     0x7ecf8a4aa5a4 at::native::copy_()
[2m[36m(pid=47395)[0m     @     0x7ecf8ab954f5 at::Tensor::copy_()
[2m[36m(pid=47395)[0m     @     0x7ecf8d0688de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47444)[0m     @     0x7fae6aaf55a4 at::native::copy_()
[2m[36m(pid=47444)[0m     @     0x7fae6b1e04f5 at::Tensor::copy_()
[2m[36m(pid=47444)[0m     @     0x7fae6d6b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47403)[0m     @     0x7efb097e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47403)[0m     @     0x7efb097df388 at::native::copy_impl()
[2m[36m(pid=47403)[0m     @     0x7efb097e15a4 at::native::copy_()
[2m[36m(pid=47403)[0m     @     0x7efb09ecc4f5 at::Tensor::copy_()
[2m[36m(pid=47464)[0m     @     0x7fac8ac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47464)[0m     @     0x7fac8ac25388 at::native::copy_impl()
[2m[36m(pid=47464)[0m     @     0x7fac8ac275a4 at::native::copy_()
[2m[36m(pid=47415)[0m     @     0x7f4d37223d91 at::TensorIterator::for_each()
[2m[36m(pid=47415)[0m     @     0x7f4d37b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47415)[0m     @     0x7f4d37b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47359)[0m     @     0x7f5b8fae45a4 at::native::copy_()
[2m[36m(pid=47359)[0m     @     0x7f5b901cf4f5 at::Tensor::copy_()
[2m[36m(pid=47359)[0m     @     0x7f5b926a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47397)[0m     @     0x7f595eaf55a4 at::native::copy_()
[2m[36m(pid=47397)[0m     @     0x7f595f1e04f5 at::Tensor::copy_()
[2m[36m(pid=47397)[0m     @     0x7f59616b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47468)[0m     @     0x7fa1503e64f5 at::Tensor::copy_()
[2m[36m(pid=47468)[0m     @     0x7fa1528b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47468)[0m     @     0x7fa1503e64f5 at::Tensor::copy_()
[2m[36m(pid=47468)[0m     @     0x7fa15649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47468)[0m     @     0x557295965fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47468)[0m     @     0x5572958c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47468)[0m     @     0x55729594bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47468)[0m     @     0x55729594ca20 method_vectorcall
[2m[36m(pid=47468)[0m     @     0x5572958c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47468)[0m     @     0x55729594bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47468)[0m     @     0x55729594c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47468)[0m     @     0x5572958c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47468)[0m     @     0x55729594bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47468)[0m     @     0x55729594c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47468)[0m     @     0x5572958c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47368)[0m     @     0x7f06f17ce4f5 at::Tensor::copy_()
[2m[36m(pid=47368)[0m     @     0x7f06f3ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47340)[0m     @     0x7fae7f2e15a4 at::native::copy_()
[2m[36m(pid=47340)[0m     @     0x7fae7f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=47340)[0m     @     0x7fae81e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47349)[0m     @     0x7f8ff20ba4f5 at::Tensor::copy_()
[2m[36m(pid=47349)[0m     @     0x7f8ff458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47425)[0m     @     0x7ee3d90a44f5 at::Tensor::copy_()
[2m[36m(pid=47425)[0m     @     0x7ee3db5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47425)[0m     @     0x7ee3d90a44f5 at::Tensor::copy_()
[2m[36m(pid=47425)[0m     @     0x7ee3df14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47425)[0m     @     0x55975af02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47425)[0m     @     0x55975ae5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47425)[0m     @     0x55975aee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=47425)[0m     @     0x55975aee9a20 method_vectorcall
[2m[36m(pid=47425)[0m     @     0x55975ae5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47425)[0m     @     0x55975aee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=47425)[0m     @     0x55975aee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47425)[0m     @     0x55975ae5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47425)[0m     @     0x55975aee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=47425)[0m     @     0x55975aee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47425)[0m     @     0x55975ae5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47425)[0m     @     0x55975aee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=47425)[0m     @     0x55975aee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47425)[0m     @     0x55975ae5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47425)[0m     @     0x55975aee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=47435)[0m     @     0x7f8af92fa5a4 at::native::copy_()
[2m[36m(pid=47435)[0m     @     0x7f8af99e54f5 at::Tensor::copy_()
[2m[36m(pid=47435)[0m     @     0x7f8afbeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47342)[0m     @     0x7ecf59e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47342)[0m     @     0x7ecf5799f4f5 at::Tensor::copy_()
[2m[36m(pid=47342)[0m     @     0x7ecf5da4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47342)[0m     @     0x55ef910a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47342)[0m     @     0x55ef91000b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47342)[0m     @     0x55ef9108bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47342)[0m     @     0x55ef9108ca20 method_vectorcall
[2m[36m(pid=47342)[0m     @     0x55ef91000bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47342)[0m     @     0x55ef9108bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47342)[0m     @     0x55ef9108c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47342)[0m     @     0x55ef91001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47342)[0m     @     0x55ef9108bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47342)[0m     @     0x55ef9108c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47342)[0m     @     0x55ef91001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47342)[0m     @     0x55ef9108bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47342)[0m     @     0x55ef9108c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47342)[0m     @     0x55ef91001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47342)[0m     @     0x55ef9108bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47342)[0m     @     0x55ef9108c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47342)[0m     @     0x55ef91001689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47351)[0m     @     0x7f7e3e8504f5 at::Tensor::copy_()
[2m[36m(pid=47351)[0m     @     0x7f7e40d238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47422)[0m     @     0x7ef5cb14e4f5 at::Tensor::copy_()
[2m[36m(pid=47422)[0m     @     0x7ef5cd6218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47422)[0m     @     0x7ef5cb14e4f5 at::Tensor::copy_()
[2m[36m(pid=47422)[0m     @     0x7ef5d11f979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47422)[0m     @     0x56544a4fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47422)[0m     @     0x56544a455b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47422)[0m     @     0x56544a4e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47422)[0m     @     0x56544a4e1a20 method_vectorcall
[2m[36m(pid=47422)[0m     @     0x56544a455bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47422)[0m     @     0x56544a4e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47422)[0m     @     0x56544a4e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47422)[0m     @     0x56544a456689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x7f64e2ce54f5 at::Tensor::copy_()
[2m[36m(pid=47361)[0m     @     0x7f64e51b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47361)[0m     @     0x7f64e2ce54f5 at::Tensor::copy_()
[2m[36m(pid=47361)[0m     @     0x7f64e8d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47361)[0m     @     0x55fe555ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47361)[0m     @     0x55fe55546b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x55fe555d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=47361)[0m     @     0x55fe555d2a20 method_vectorcall
[2m[36m(pid=47361)[0m     @     0x55fe55546bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x55fe555d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=47361)[0m     @     0x55fe555d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47361)[0m     @     0x55fe55547689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x55fe555d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=47361)[0m     @     0x55fe555d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47361)[0m     @     0x55fe55547689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x55fe555d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=47361)[0m     @     0x55fe555d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47361)[0m     @     0x55fe55547689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47361)[0m     @     0x55fe555d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=47361)[0m     @     0x55fe555d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47361)[0m     @     0x55fe55547689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47350)[0m     @     0x7ef9f95238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47350)[0m     @     0x7ef9f70504f5 at::Tensor::copy_()
[2m[36m(pid=47350)[0m     @     0x7ef9fd0fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47350)[0m     @     0x564b3b8b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47350)[0m     @     0x564b3b812b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47350)[0m     @     0x564b3b89dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47350)[0m     @     0x564b3b89ea20 method_vectorcall
[2m[36m(pid=47350)[0m     @     0x564b3b812bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47350)[0m     @     0x564b3b89dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47350)[0m     @     0x564b3b89e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47350)[0m     @     0x564b3b813689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47350)[0m     @     0x564b3b89dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47350)[0m     @     0x564b3b89e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47350)[0m     @     0x564b3b813689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47350)[0m     @     0x564b3b89dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47350)[0m     @     0x564b3b89e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47350)[0m     @     0x564b3b813689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47350)[0m     @     0x564b3b89dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47350)[0m     @     0x564b3b89e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47350)[0m     @     0x564b3b813689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47427)[0m     @     0x7ee7f84d24f5 at::Tensor::copy_()
[2m[36m(pid=47427)[0m     @     0x7ee7fe57d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47427)[0m     @     0x563974b17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47427)[0m     @     0x563974a72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47427)[0m     @     0x563974afdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47427)[0m     @     0x563974afea20 method_vectorcall
[2m[36m(pid=47427)[0m     @     0x563974a72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47427)[0m     @     0x563974afdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47427)[0m     @     0x563974afe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47427)[0m     @     0x563974a73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47427)[0m     @     0x563974afdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47427)[0m     @     0x563974afe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47427)[0m     @     0x563974a73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47427)[0m     @     0x563974afdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47427)[0m     @     0x563974afe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47427)[0m     @     0x563974a73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47427)[0m     @     0x563974afdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47427)[0m     @     0x563974afe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47427)[0m     @     0x563974a73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47396)[0m     @     0x7f10be5cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47396)[0m     @     0x7f10be5cb388 at::native::copy_impl()
[2m[36m(pid=47396)[0m     @     0x7f10be5cd5a4 at::native::copy_()
[2m[36m(pid=47396)[0m     @     0x7f10becb84f5 at::Tensor::copy_()
[2m[36m(pid=47334)[0m     @     0x7f160fb505a4 at::native::copy_()
[2m[36m(pid=47334)[0m     @     0x7f161023b4f5 at::Tensor::copy_()
[2m[36m(pid=47334)[0m     @     0x7f161270e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47374)[0m     @     0x7f7023c4a5a4 at::native::copy_()
[2m[36m(pid=47374)[0m     @     0x7f70243354f5 at::Tensor::copy_()
[2m[36m(pid=47374)[0m     @     0x7f70268088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47408)[0m     @     0x7f7602a274f5 at::Tensor::copy_()
[2m[36m(pid=47408)[0m     @     0x7f7604efa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47408)[0m     @     0x7f7602a274f5 at::Tensor::copy_()
[2m[36m(pid=47408)[0m     @     0x7f7608ad279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47408)[0m     @     0x55bfaa858fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47408)[0m     @     0x55bfaa7b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47408)[0m     @     0x55bfaa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47408)[0m     @     0x55bfaa83fa20 method_vectorcall
[2m[36m(pid=47408)[0m     @     0x55bfaa7b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47408)[0m     @     0x55bfaa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47408)[0m     @     0x55bfaa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47408)[0m     @     0x55bfaa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47408)[0m     @     0x55bfaa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47408)[0m     @     0x55bfaa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47408)[0m     @     0x55bfaa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47408)[0m     @     0x55bfaa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47408)[0m     @     0x55bfaa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47408)[0m     @     0x55bfaa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47408)[0m     @     0x55bfaa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47408)[0m     @     0x55bfaa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47408)[0m     @     0x55bfaa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47367)[0m     @     0x7ed65ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47367)[0m     @     0x7ed65ba37388 at::native::copy_impl()
[2m[36m(pid=47367)[0m     @     0x7ed65ba395a4 at::native::copy_()
[2m[36m(pid=47367)[0m     @     0x7ed65c1244f5 at::Tensor::copy_()
[2m[36m(pid=47437)[0m     @     0x7f251520d5a4 at::native::copy_()
[2m[36m(pid=47437)[0m     @     0x7f25158f84f5 at::Tensor::copy_()
[2m[36m(pid=47437)[0m     @     0x7f2517dcb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47437)[0m     @     0x7f25158f84f5 at::Tensor::copy_()
[2m[36m(pid=47443)[0m     @     0x7ed8359e54f5 at::Tensor::copy_()
[2m[36m(pid=47443)[0m     @     0x7ed837eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47443)[0m     @     0x7ed8359e54f5 at::Tensor::copy_()
[2m[36m(pid=47443)[0m     @     0x7ed83ba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47443)[0m     @     0x55e0ec477fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47443)[0m     @     0x55e0ec3d2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47443)[0m     @     0x55e0ec45dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47443)[0m     @     0x55e0ec45ea20 method_vectorcall
[2m[36m(pid=47443)[0m     @     0x55e0ec3d2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47443)[0m     @     0x55e0ec45dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47443)[0m     @     0x55e0ec45e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47443)[0m     @     0x55e0ec3d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47443)[0m     @     0x55e0ec45dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47443)[0m     @     0x55e0ec45e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47443)[0m     @     0x55e0ec3d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47443)[0m     @     0x55e0ec45dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47443)[0m     @     0x55e0ec45e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47443)[0m     @     0x55e0ec3d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47443)[0m     @     0x55e0ec45dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47443)[0m     @     0x55e0ec45e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47443)[0m     @     0x55e0ec3d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x7fc6905a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=47392)[0m     @     0x7fc6905a5d91 at::TensorIterator::for_each()
[2m[36m(pid=47392)[0m     @     0x7fc690e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47392)[0m     @     0x7fc690eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47335)[0m     @     0x7f69522c58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47335)[0m     @     0x7f694fdf24f5 at::Tensor::copy_()
[2m[36m(pid=47335)[0m     @     0x7f6955e9d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47335)[0m     @     0x55ff3bbbcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47335)[0m     @     0x55ff3bb17b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47335)[0m     @     0x55ff3bba2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47335)[0m     @     0x55ff3bba3a20 method_vectorcall
[2m[36m(pid=47335)[0m     @     0x55ff3bb17bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47335)[0m     @     0x55ff3bba2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47335)[0m     @     0x55ff3bba3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47335)[0m     @     0x55ff3bb18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47335)[0m     @     0x55ff3bba2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47335)[0m     @     0x55ff3bba3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47335)[0m     @     0x55ff3bb18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47335)[0m     @     0x55ff3bba2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47335)[0m     @     0x55ff3bba3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47335)[0m     @     0x55ff3bb18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47335)[0m     @     0x55ff3bba2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47335)[0m     @     0x55ff3bba3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47335)[0m     @     0x55ff3bb18689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47352)[0m     @     0x7f921a8504f5 at::Tensor::copy_()
[2m[36m(pid=47352)[0m     @     0x7f921cd238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47352)[0m     @     0x7f921a8504f5 at::Tensor::copy_()
[2m[36m(pid=47352)[0m     @     0x7f92208fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47352)[0m     @     0x55a57c2c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47352)[0m     @     0x55a57c21cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47352)[0m     @     0x55a57c2a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47352)[0m     @     0x55a57c2a8a20 method_vectorcall
[2m[36m(pid=47352)[0m     @     0x55a57c21cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47352)[0m     @     0x55a57c2a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47352)[0m     @     0x55a57c2a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47352)[0m     @     0x55a57c21d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47352)[0m     @     0x55a57c2a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47352)[0m     @     0x55a57c2a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47352)[0m     @     0x55a57c21d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47352)[0m     @     0x55a57c2a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47352)[0m     @     0x55a57c2a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47352)[0m     @     0x55a57c21d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47352)[0m     @     0x55a57c2a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47352)[0m     @     0x55a57c2a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47375)[0m     @     0x7ee87ead44f5 at::Tensor::copy_()
[2m[36m(pid=47375)[0m     @     0x7ee880fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47375)[0m     @     0x7ee87ead44f5 at::Tensor::copy_()
[2m[36m(pid=47375)[0m     @     0x7ee884b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47375)[0m     @     0x56008979ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47375)[0m     @     0x5600896fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47375)[0m     @     0x560089785baf _PyEval_EvalCodeWithName
[2m[36m(pid=47375)[0m     @     0x560089786a20 method_vectorcall
[2m[36m(pid=47375)[0m     @     0x5600896fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47375)[0m     @     0x560089785baf _PyEval_EvalCodeWithName
[2m[36m(pid=47375)[0m     @     0x560089786643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47375)[0m     @     0x5600896fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47375)[0m     @     0x560089785baf _PyEval_EvalCodeWithName
[2m[36m(pid=47375)[0m     @     0x560089786643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47375)[0m     @     0x5600896fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47375)[0m     @     0x560089785baf _PyEval_EvalCodeWithName
[2m[36m(pid=47375)[0m     @     0x560089786643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47375)[0m     @     0x5600896fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47375)[0m     @     0x560089785baf _PyEval_EvalCodeWithName
[2m[36m(pid=47375)[0m     @     0x560089786643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47375)[0m     @     0x5600896fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47417)[0m     @     0x7f27fd2fa5a4 at::native::copy_()
[2m[36m(pid=47417)[0m     @     0x7f27fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=47400)[0m     @     0x7edd67bdd4f5 at::Tensor::copy_()
[2m[36m(pid=47400)[0m     @     0x7edd6a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47400)[0m     @     0x7edd67bdd4f5 at::Tensor::copy_()
[2m[36m(pid=47400)[0m     @     0x7edd6dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47400)[0m     @     0x556585e3cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47400)[0m     @     0x556585d97b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47400)[0m     @     0x556585e22baf _PyEval_EvalCodeWithName
[2m[36m(pid=47400)[0m     @     0x556585e23a20 method_vectorcall
[2m[36m(pid=47400)[0m     @     0x556585d97bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47400)[0m     @     0x556585e22baf _PyEval_EvalCodeWithName
[2m[36m(pid=47400)[0m     @     0x556585e23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47400)[0m     @     0x556585d98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47400)[0m     @     0x556585e22baf _PyEval_EvalCodeWithName
[2m[36m(pid=47400)[0m     @     0x556585e23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47400)[0m     @     0x556585d98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47400)[0m     @     0x556585e22baf _PyEval_EvalCodeWithName
[2m[36m(pid=47400)[0m     @     0x556585e23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47400)[0m     @     0x556585d98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47400)[0m     @     0x556585e22baf _PyEval_EvalCodeWithName
[2m[36m(pid=47400)[0m     @     0x556585e23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47400)[0m     @     0x556585d98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47363)[0m     @     0x7f0c8b38f4f5 at::Tensor::copy_()
[2m[36m(pid=47363)[0m     @     0x7f0c8d8628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47363)[0m     @     0x7f0c8b38f4f5 at::Tensor::copy_()
[2m[36m(pid=47363)[0m     @     0x7f0c9143a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47363)[0m     @     0x55b11fdacfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47363)[0m     @     0x55b11fd07b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47363)[0m     @     0x55b11fd92baf _PyEval_EvalCodeWithName
[2m[36m(pid=47363)[0m     @     0x55b11fd93a20 method_vectorcall
[2m[36m(pid=47363)[0m     @     0x55b11fd07bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47363)[0m     @     0x55b11fd92baf _PyEval_EvalCodeWithName
[2m[36m(pid=47363)[0m     @     0x55b11fd93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47363)[0m     @     0x55b11fd08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47363)[0m     @     0x55b11fd92baf _PyEval_EvalCodeWithName
[2m[36m(pid=47363)[0m     @     0x55b11fd93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47363)[0m     @     0x55b11fd08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47363)[0m     @     0x55b11fd92baf _PyEval_EvalCodeWithName
[2m[36m(pid=47363)[0m     @     0x55b11fd93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47363)[0m     @     0x55b11fd08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47363)[0m     @     0x55b11fd92baf _PyEval_EvalCodeWithName
[2m[36m(pid=47363)[0m     @     0x55b11fd93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47363)[0m     @     0x55b11fd08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47337)[0m     @     0x7f461a2ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47337)[0m     @     0x55e3bb1fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47337)[0m     @     0x55e3bb157b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47337)[0m     @     0x55e3bb1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47337)[0m     @     0x55e3bb1e3a20 method_vectorcall
[2m[36m(pid=47337)[0m     @     0x55e3bb157bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47337)[0m     @     0x55e3bb1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47337)[0m     @     0x55e3bb1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47337)[0m     @     0x55e3bb158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47337)[0m     @     0x55e3bb1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47337)[0m     @     0x55e3bb1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47337)[0m     @     0x55e3bb158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47337)[0m     @     0x55e3bb1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47337)[0m     @     0x55e3bb1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47337)[0m     @     0x55e3bb158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47337)[0m     @     0x55e3bb1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=47337)[0m     @     0x55e3bb1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47337)[0m     @     0x55e3bb158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47348)[0m     @     0x7f2dab88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47348)[0m     @     0x7f2da93ba4f5 at::Tensor::copy_()
[2m[36m(pid=47348)[0m     @     0x7f2daf46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47348)[0m     @     0x55894a36efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47348)[0m     @     0x55894a2c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47348)[0m     @     0x55894a354baf _PyEval_EvalCodeWithName
[2m[36m(pid=47348)[0m     @     0x55894a355a20 method_vectorcall
[2m[36m(pid=47348)[0m     @     0x55894a2c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47348)[0m     @     0x55894a354baf _PyEval_EvalCodeWithName
[2m[36m(pid=47348)[0m     @     0x55894a355643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47348)[0m     @     0x55894a2ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47348)[0m     @     0x55894a354baf _PyEval_EvalCodeWithName
[2m[36m(pid=47348)[0m     @     0x55894a355643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47348)[0m     @     0x55894a2ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47348)[0m     @     0x55894a354baf _PyEval_EvalCodeWithName
[2m[36m(pid=47348)[0m     @     0x55894a355643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47348)[0m     @     0x55894a2ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47348)[0m     @     0x55894a354baf _PyEval_EvalCodeWithName
[2m[36m(pid=47348)[0m     @     0x55894a355643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47348)[0m     @     0x55894a2ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47364)[0m     @     0x7f4dbf4a38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47364)[0m     @     0x7f4dbcfd04f5 at::Tensor::copy_()
[2m[36m(pid=47364)[0m     @     0x7f4dc307b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47364)[0m     @     0x560dc37b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47364)[0m     @     0x560dc3714b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47364)[0m     @     0x560dc379fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47364)[0m     @     0x560dc37a0a20 method_vectorcall
[2m[36m(pid=47364)[0m     @     0x560dc3714bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47364)[0m     @     0x560dc379fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47364)[0m     @     0x560dc37a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47364)[0m     @     0x560dc3715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47364)[0m     @     0x560dc379fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47364)[0m     @     0x560dc37a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47364)[0m     @     0x560dc3715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47364)[0m     @     0x560dc379fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47364)[0m     @     0x560dc37a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47364)[0m     @     0x560dc3715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47364)[0m     @     0x560dc379fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47364)[0m     @     0x560dc37a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47364)[0m     @     0x560dc3715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47347)[0m     @     0x7fc08b0778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47347)[0m     @     0x7fc088ba44f5 at::Tensor::copy_()
[2m[36m(pid=47347)[0m     @     0x7fc08ec4f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47347)[0m     @     0x55ce82769fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47347)[0m     @     0x55ce826c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47347)[0m     @     0x55ce8274fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47347)[0m     @     0x55ce82750a20 method_vectorcall
[2m[36m(pid=47347)[0m     @     0x55ce826c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47347)[0m     @     0x55ce8274fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47347)[0m     @     0x55ce82750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47347)[0m     @     0x55ce826c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47347)[0m     @     0x55ce8274fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47347)[0m     @     0x55ce82750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47347)[0m     @     0x55ce826c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47347)[0m     @     0x55ce8274fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47347)[0m     @     0x55ce82750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47347)[0m     @     0x55ce826c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47347)[0m     @     0x55ce8274fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47347)[0m     @     0x55ce82750643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47347)[0m     @     0x55ce826c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47343)[0m     @     0x7f03149d34f5 at::Tensor::copy_()
[2m[36m(pid=47343)[0m     @     0x7f031aa7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47343)[0m     @     0x5618f735ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47343)[0m     @     0x5618f72bab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47343)[0m     @     0x5618f7345baf _PyEval_EvalCodeWithName
[2m[36m(pid=47343)[0m     @     0x5618f7346a20 method_vectorcall
[2m[36m(pid=47343)[0m     @     0x5618f72babfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47343)[0m     @     0x5618f7345baf _PyEval_EvalCodeWithName
[2m[36m(pid=47343)[0m     @     0x5618f7346643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47343)[0m     @     0x5618f72bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47343)[0m     @     0x5618f7345baf _PyEval_EvalCodeWithName
[2m[36m(pid=47343)[0m     @     0x5618f7346643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47343)[0m     @     0x5618f72bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47343)[0m     @     0x5618f7345baf _PyEval_EvalCodeWithName
[2m[36m(pid=47343)[0m     @     0x5618f7346643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47343)[0m     @     0x5618f72bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47343)[0m     @     0x5618f7345baf _PyEval_EvalCodeWithName
[2m[36m(pid=47343)[0m     @     0x5618f7346643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47343)[0m     @     0x5618f72bb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47398)[0m     @     0x7fc214c764f5 at::Tensor::copy_()
[2m[36m(pid=47398)[0m     @     0x7fc21ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47398)[0m     @     0x564032533fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47398)[0m     @     0x56403248eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47398)[0m     @     0x564032519baf _PyEval_EvalCodeWithName
[2m[36m(pid=47398)[0m     @     0x56403251aa20 method_vectorcall
[2m[36m(pid=47398)[0m     @     0x56403248ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47398)[0m     @     0x564032519baf _PyEval_EvalCodeWithName
[2m[36m(pid=47398)[0m     @     0x56403251a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47398)[0m     @     0x56403248f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47398)[0m     @     0x564032519baf _PyEval_EvalCodeWithName
[2m[36m(pid=47398)[0m     @     0x56403251a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47398)[0m     @     0x56403248f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47398)[0m     @     0x564032519baf _PyEval_EvalCodeWithName
[2m[36m(pid=47398)[0m     @     0x56403251a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47398)[0m     @     0x56403248f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47398)[0m     @     0x564032519baf _PyEval_EvalCodeWithName
[2m[36m(pid=47398)[0m     @     0x56403251a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47398)[0m     @     0x56403248f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x7f0616af55a4 at::native::copy_()
[2m[36m(pid=47430)[0m     @     0x7f06171e04f5 at::Tensor::copy_()
[2m[36m(pid=47430)[0m     @     0x7f06196b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47405)[0m     @     0x7ee7468104f5 at::Tensor::copy_()
[2m[36m(pid=47405)[0m     @     0x7ee748ce38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47405)[0m     @     0x7ee7468104f5 at::Tensor::copy_()
[2m[36m(pid=47405)[0m     @     0x7ee74c8bb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47405)[0m     @     0x55c6d3318fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47405)[0m     @     0x55c6d3273b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47405)[0m     @     0x55c6d32febaf _PyEval_EvalCodeWithName
[2m[36m(pid=47405)[0m     @     0x55c6d32ffa20 method_vectorcall
[2m[36m(pid=47405)[0m     @     0x55c6d3273bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47405)[0m     @     0x55c6d32febaf _PyEval_EvalCodeWithName
[2m[36m(pid=47405)[0m     @     0x55c6d32ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47405)[0m     @     0x55c6d3274689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47405)[0m     @     0x55c6d32febaf _PyEval_EvalCodeWithName
[2m[36m(pid=47405)[0m     @     0x55c6d32ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47405)[0m     @     0x55c6d3274689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47405)[0m     @     0x55c6d32febaf _PyEval_EvalCodeWithName
[2m[36m(pid=47405)[0m     @     0x55c6d32ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47405)[0m     @     0x55c6d3274689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47405)[0m     @     0x55c6d32febaf _PyEval_EvalCodeWithName
[2m[36m(pid=47405)[0m     @     0x55c6d32ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47405)[0m     @     0x55c6d3274689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47409)[0m     @     0x7f1299e3a4f5 at::Tensor::copy_()
[2m[36m(pid=47409)[0m     @     0x7f129fee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47409)[0m     @     0x55ee7298afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47409)[0m     @     0x55ee728e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47409)[0m     @     0x55ee72970baf _PyEval_EvalCodeWithName
[2m[36m(pid=47409)[0m     @     0x55ee72971a20 method_vectorcall
[2m[36m(pid=47409)[0m     @     0x55ee728e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47409)[0m     @     0x55ee72970baf _PyEval_EvalCodeWithName
[2m[36m(pid=47409)[0m     @     0x55ee72971643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47409)[0m     @     0x55ee728e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47409)[0m     @     0x55ee72970baf _PyEval_EvalCodeWithName
[2m[36m(pid=47409)[0m     @     0x55ee72971643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47409)[0m     @     0x55ee728e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47409)[0m     @     0x55ee72970baf _PyEval_EvalCodeWithName
[2m[36m(pid=47409)[0m     @     0x55ee72971643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47409)[0m     @     0x55ee728e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47409)[0m     @     0x55ee72970baf _PyEval_EvalCodeWithName
[2m[36m(pid=47409)[0m     @     0x55ee72971643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47409)[0m     @     0x55ee728e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x7ef63fe788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47336)[0m     @     0x7ef63d9a54f5 at::Tensor::copy_()
[2m[36m(pid=47336)[0m     @     0x7ef643a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47336)[0m     @     0x563952d90fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47336)[0m     @     0x563952cebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x563952d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=47336)[0m     @     0x563952d77a20 method_vectorcall
[2m[36m(pid=47336)[0m     @     0x563952cebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x563952d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=47336)[0m     @     0x563952d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47336)[0m     @     0x563952cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x563952d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=47336)[0m     @     0x563952d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47336)[0m     @     0x563952cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x563952d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=47336)[0m     @     0x563952d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47336)[0m     @     0x563952cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47336)[0m     @     0x563952d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=47336)[0m     @     0x563952d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47336)[0m     @     0x563952cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47411)[0m     @     0x7effc34f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47411)[0m     @     0x7effc34f0388 at::native::copy_impl()
[2m[36m(pid=47411)[0m     @     0x7effc34f25a4 at::native::copy_()
[2m[36m(pid=47411)[0m     @     0x7effc3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=47353)[0m     @     0x7eda9e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47353)[0m     @     0x7eda9bef44f5 at::Tensor::copy_()
[2m[36m(pid=47353)[0m     @     0x7edaa1f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47353)[0m     @     0x55d489d31fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47353)[0m     @     0x55d489c8cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47353)[0m     @     0x55d489d17baf _PyEval_EvalCodeWithName
[2m[36m(pid=47353)[0m     @     0x55d489d18a20 method_vectorcall
[2m[36m(pid=47353)[0m     @     0x55d489c8cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47353)[0m     @     0x55d489d17baf _PyEval_EvalCodeWithName
[2m[36m(pid=47353)[0m     @     0x55d489d18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47353)[0m     @     0x55d489c8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47353)[0m     @     0x55d489d17baf _PyEval_EvalCodeWithName
[2m[36m(pid=47353)[0m     @     0x55d489d18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47353)[0m     @     0x55d489c8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47353)[0m     @     0x55d489d17baf _PyEval_EvalCodeWithName
[2m[36m(pid=47353)[0m     @     0x55d489d18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47353)[0m     @     0x55d489c8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47353)[0m     @     0x55d489d17baf _PyEval_EvalCodeWithName
[2m[36m(pid=47353)[0m     @     0x55d489d18643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47353)[0m     @     0x55d489c8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47410)[0m     @     0x7fb8d2ce54f5 at::Tensor::copy_()
[2m[36m(pid=47410)[0m     @     0x7fb8d51b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47410)[0m     @     0x7fb8d2ce54f5 at::Tensor::copy_()
[2m[36m(pid=47410)[0m     @     0x7fb8d8d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47442)[0m     @     0x7f04b7e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47442)[0m     @     0x7f04b59a54f5 at::Tensor::copy_()
[2m[36m(pid=47442)[0m     @     0x7f04bba5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47442)[0m     @     0x55e9ff664fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47442)[0m     @     0x55e9ff5bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47442)[0m     @     0x55e9ff64abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47442)[0m     @     0x55e9ff64ba20 method_vectorcall
[2m[36m(pid=47442)[0m     @     0x55e9ff5bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47442)[0m     @     0x55e9ff64abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47442)[0m     @     0x55e9ff64b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47442)[0m     @     0x55e9ff5c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47442)[0m     @     0x55e9ff64abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47442)[0m     @     0x55e9ff64b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47442)[0m     @     0x55e9ff5c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47442)[0m     @     0x55e9ff64abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47442)[0m     @     0x55e9ff64b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47442)[0m     @     0x55e9ff5c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47442)[0m     @     0x55e9ff64abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47442)[0m     @     0x55e9ff64b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47442)[0m     @     0x55e9ff5c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47373)[0m     @     0x7fa73d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47373)[0m     @     0x7fa73adea4f5 at::Tensor::copy_()
[2m[36m(pid=47373)[0m     @     0x7fa740e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47373)[0m     @     0x556c9e66cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47373)[0m     @     0x556c9e5c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47373)[0m     @     0x556c9e652baf _PyEval_EvalCodeWithName
[2m[36m(pid=47373)[0m     @     0x556c9e653a20 method_vectorcall
[2m[36m(pid=47373)[0m     @     0x556c9e5c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47373)[0m     @     0x556c9e652baf _PyEval_EvalCodeWithName
[2m[36m(pid=47373)[0m     @     0x556c9e653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47373)[0m     @     0x556c9e5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47373)[0m     @     0x556c9e652baf _PyEval_EvalCodeWithName
[2m[36m(pid=47341)[0m     @     0x7eeb45b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47341)[0m     @     0x7eeb436b64f5 at::Tensor::copy_()
[2m[36m(pid=47341)[0m     @     0x7eeb4976179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47341)[0m     @     0x55892265afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47341)[0m     @     0x5589225b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47341)[0m     @     0x558922640baf _PyEval_EvalCodeWithName
[2m[36m(pid=47341)[0m     @     0x558922641a20 method_vectorcall
[2m[36m(pid=47341)[0m     @     0x5589225b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47341)[0m     @     0x558922640baf _PyEval_EvalCodeWithName
[2m[36m(pid=47341)[0m     @     0x558922641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47341)[0m     @     0x5589225b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47341)[0m     @     0x558922640baf _PyEval_EvalCodeWithName
[2m[36m(pid=47341)[0m     @     0x558922641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47341)[0m     @     0x5589225b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47341)[0m     @     0x558922640baf _PyEval_EvalCodeWithName
[2m[36m(pid=47341)[0m     @     0x558922641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47341)[0m     @     0x5589225b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47341)[0m     @     0x558922640baf _PyEval_EvalCodeWithName
[2m[36m(pid=47341)[0m     @     0x558922641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47341)[0m     @     0x5589225b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47346)[0m     @     0x7fbb4b75ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47346)[0m     @     0x7fbb4b75a388 at::native::copy_impl()
[2m[36m(pid=47346)[0m     @     0x7fbb4b75c5a4 at::native::copy_()
[2m[36m(pid=47354)[0m     @     0x7ee3c4bca5a4 at::native::copy_()
[2m[36m(pid=47354)[0m     @     0x7ee3c52b54f5 at::Tensor::copy_()
[2m[36m(pid=47354)[0m     @     0x7ee3c77888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47471)[0m     @     0x7f4775b1c5a4 at::native::copy_()
[2m[36m(pid=47471)[0m     @     0x7f47762074f5 at::Tensor::copy_()
[2m[36m(pid=47412)[0m     @     0x7fc913f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=47412)[0m     @     0x7fc913f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=47440)[0m     @     0x7f42ee3695a4 at::native::copy_()
[2m[36m(pid=47440)[0m     @     0x7f42eea544f5 at::Tensor::copy_()
[2m[36m(pid=47440)[0m     @     0x7f42f0f278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47366)[0m     @     0x7f24e7c4a5a4 at::native::copy_()
[2m[36m(pid=47366)[0m     @     0x7f24e83354f5 at::Tensor::copy_()
[2m[36m(pid=47344)[0m     @     0x7f77e94db5a4 at::native::copy_()
[2m[36m(pid=47344)[0m     @     0x7f77e9bc64f5 at::Tensor::copy_()
[2m[36m(pid=47419)[0m     @     0x7efee16105a4 at::native::copy_()
[2m[36m(pid=47419)[0m     @     0x7efee1cfb4f5 at::Tensor::copy_()
[2m[36m(pid=47419)[0m     @     0x7efee41ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47402)[0m     @     0x7edd58ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47402)[0m     @     0x7edd58ede388 at::native::copy_impl()
[2m[36m(pid=47402)[0m     @     0x7edd58ee05a4 at::native::copy_()
[2m[36m(pid=47402)[0m     @     0x7edd595cb4f5 at::Tensor::copy_()
[2m[36m(pid=47339)[0m     @     0x7f4414b184f5 at::Tensor::copy_()
[2m[36m(pid=47339)[0m     @     0x7f441abc379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47339)[0m     @     0x55ec398abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47339)[0m     @     0x55ec39806b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47339)[0m     @     0x55ec39891baf _PyEval_EvalCodeWithName
[2m[36m(pid=47339)[0m     @     0x55ec39892a20 method_vectorcall
[2m[36m(pid=47339)[0m     @     0x55ec39806bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47339)[0m     @     0x55ec39891baf _PyEval_EvalCodeWithName
[2m[36m(pid=47339)[0m     @     0x55ec39892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47339)[0m     @     0x55ec39807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47339)[0m     @     0x55ec39891baf _PyEval_EvalCodeWithName
[2m[36m(pid=47339)[0m     @     0x55ec39892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47339)[0m     @     0x55ec39807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47339)[0m     @     0x55ec39891baf _PyEval_EvalCodeWithName
[2m[36m(pid=47339)[0m     @     0x55ec39892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47339)[0m     @     0x55ec39807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47339)[0m     @     0x55ec39891baf _PyEval_EvalCodeWithName
[2m[36m(pid=47339)[0m     @     0x55ec39892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47339)[0m     @     0x55ec39807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47377)[0m     @     0x7f744b1504f5 at::Tensor::copy_()
[2m[36m(pid=47377)[0m     @     0x7f744d6238de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47377)[0m     @     0x7f744b1504f5 at::Tensor::copy_()
[2m[36m(pid=47377)[0m     @     0x7f74511fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47377)[0m     @     0x562bee61cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47377)[0m     @     0x562bee577b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47377)[0m     @     0x562bee602baf _PyEval_EvalCodeWithName
[2m[36m(pid=47377)[0m     @     0x562bee603a20 method_vectorcall
[2m[36m(pid=47377)[0m     @     0x562bee577bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47377)[0m     @     0x562bee602baf _PyEval_EvalCodeWithName
[2m[36m(pid=47377)[0m     @     0x562bee603643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47377)[0m     @     0x562bee578689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47377)[0m     @     0x562bee602baf _PyEval_EvalCodeWithName
[2m[36m(pid=47377)[0m     @     0x562bee603643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47377)[0m     @     0x562bee578689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47377)[0m     @     0x562bee602baf _PyEval_EvalCodeWithName
[2m[36m(pid=47377)[0m     @     0x562bee603643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47377)[0m     @     0x562bee578689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47377)[0m     @     0x562bee602baf _PyEval_EvalCodeWithName
[2m[36m(pid=47377)[0m     @     0x562bee603643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47377)[0m     @     0x562bee578689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47395)[0m     @     0x7ecf8ab954f5 at::Tensor::copy_()
[2m[36m(pid=47395)[0m     @     0x7ecf90c4079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47395)[0m     @     0x55cf36217fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47395)[0m     @     0x55cf36172b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47395)[0m     @     0x55cf361fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47395)[0m     @     0x55cf361fea20 method_vectorcall
[2m[36m(pid=47395)[0m     @     0x55cf36172bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47395)[0m     @     0x55cf361fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47395)[0m     @     0x55cf361fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47395)[0m     @     0x55cf36173689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47395)[0m     @     0x55cf361fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47395)[0m     @     0x55cf361fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47395)[0m     @     0x55cf36173689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47395)[0m     @     0x55cf361fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47395)[0m     @     0x55cf361fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47395)[0m     @     0x55cf36173689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47395)[0m     @     0x55cf361fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47395)[0m     @     0x55cf361fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47395)[0m     @     0x55cf36173689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47444)[0m     @     0x7fae6b1e04f5 at::Tensor::copy_()
[2m[36m(pid=47444)[0m     @     0x7fae7128b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47444)[0m     @     0x5638f18e6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47444)[0m     @     0x5638f1841b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47444)[0m     @     0x5638f18ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47444)[0m     @     0x5638f18cda20 method_vectorcall
[2m[36m(pid=47444)[0m     @     0x5638f1841bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47444)[0m     @     0x5638f18ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47444)[0m     @     0x5638f18cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47444)[0m     @     0x5638f1842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47444)[0m     @     0x5638f18ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47444)[0m     @     0x5638f18cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47444)[0m     @     0x5638f1842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47444)[0m     @     0x5638f18ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47444)[0m     @     0x5638f18cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47444)[0m     @     0x5638f1842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47444)[0m     @     0x5638f18ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47444)[0m     @     0x5638f18cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47444)[0m     @     0x5638f1842689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47403)[0m     @     0x7efb0c39f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47403)[0m     @     0x7efb09ecc4f5 at::Tensor::copy_()
[2m[36m(pid=47403)[0m     @     0x7efb0ff7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47403)[0m     @     0x55fa401a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47403)[0m     @     0x55fa400ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47403)[0m     @     0x55fa4018abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47403)[0m     @     0x55fa4018ba20 method_vectorcall
[2m[36m(pid=47403)[0m     @     0x55fa400ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47403)[0m     @     0x55fa4018abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47403)[0m     @     0x55fa4018b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47403)[0m     @     0x55fa40100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47403)[0m     @     0x55fa4018abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47403)[0m     @     0x55fa4018b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47403)[0m     @     0x55fa40100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47403)[0m     @     0x55fa4018abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47403)[0m     @     0x55fa4018b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47403)[0m     @     0x55fa40100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47403)[0m     @     0x55fa4018abaf _PyEval_EvalCodeWithName
[2m[36m(pid=47403)[0m     @     0x55fa4018b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47403)[0m     @     0x55fa40100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47464)[0m     @     0x7fac8b3124f5 at::Tensor::copy_()
[2m[36m(pid=47464)[0m     @     0x7fac8d7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47464)[0m     @     0x7fac8b3124f5 at::Tensor::copy_()
[2m[36m(pid=47464)[0m     @     0x7fac913bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47464)[0m     @     0x564ba93dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47464)[0m     @     0x564ba9335b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47464)[0m     @     0x564ba93c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47464)[0m     @     0x564ba93c1a20 method_vectorcall
[2m[36m(pid=47464)[0m     @     0x564ba9335bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47464)[0m     @     0x564ba93c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47464)[0m     @     0x564ba93c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47464)[0m     @     0x564ba9336689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47464)[0m     @     0x564ba93c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47464)[0m     @     0x564ba93c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47464)[0m     @     0x564ba9336689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47464)[0m     @     0x564ba93c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47464)[0m     @     0x564ba93c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47464)[0m     @     0x564ba9336689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47464)[0m     @     0x564ba93c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47464)[0m     @     0x564ba93c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47464)[0m     @     0x564ba9336689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47415)[0m     @     0x7f4d36fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47415)[0m     @     0x7f4d36fc9388 at::native::copy_impl()
[2m[36m(pid=47415)[0m     @     0x7f4d36fcb5a4 at::native::copy_()
[2m[36m(pid=47415)[0m     @     0x7f4d376b64f5 at::Tensor::copy_()
[2m[36m(pid=47415)[0m     @     0x7f4d39b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47359)[0m     @     0x7f5b901cf4f5 at::Tensor::copy_()
[2m[36m(pid=47359)[0m     @     0x7f5b9627a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47359)[0m     @     0x5558127a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47359)[0m     @     0x5558126feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47359)[0m     @     0x555812789baf _PyEval_EvalCodeWithName
[2m[36m(pid=47359)[0m     @     0x55581278aa20 method_vectorcall
[2m[36m(pid=47359)[0m     @     0x5558126febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47359)[0m     @     0x555812789baf _PyEval_EvalCodeWithName
[2m[36m(pid=47359)[0m     @     0x55581278a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47359)[0m     @     0x5558126ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47359)[0m     @     0x555812789baf _PyEval_EvalCodeWithName
[2m[36m(pid=47359)[0m     @     0x55581278a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47359)[0m     @     0x5558126ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47359)[0m     @     0x555812789baf _PyEval_EvalCodeWithName
[2m[36m(pid=47359)[0m     @     0x55581278a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47359)[0m     @     0x5558126ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47359)[0m     @     0x555812789baf _PyEval_EvalCodeWithName
[2m[36m(pid=47359)[0m     @     0x55581278a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47359)[0m     @     0x5558126ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47397)[0m     @     0x7f595f1e04f5 at::Tensor::copy_()
[2m[36m(pid=47397)[0m     @     0x7f596528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47397)[0m     @     0x55ca86b85fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47397)[0m     @     0x55ca86ae0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47397)[0m     @     0x55ca86b6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47397)[0m     @     0x55ca86b6ca20 method_vectorcall
[2m[36m(pid=47397)[0m     @     0x55ca86ae0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47397)[0m     @     0x55ca86b6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47397)[0m     @     0x55ca86b6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47397)[0m     @     0x55ca86ae1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47397)[0m     @     0x55ca86b6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47397)[0m     @     0x55ca86b6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47397)[0m     @     0x55ca86ae1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47397)[0m     @     0x55ca86b6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47397)[0m     @     0x55ca86b6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47397)[0m     @     0x55ca86ae1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47397)[0m     @     0x55ca86b6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47397)[0m     @     0x55ca86b6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47397)[0m     @     0x55ca86ae1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47468)[0m     @     0x55729594bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47468)[0m     @     0x55729594c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47468)[0m     @     0x5572958c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47468)[0m     @     0x55729594bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47468)[0m     @     0x55729594c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47468)[0m     @     0x5572958c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47368)[0m     @     0x7f06f17ce4f5 at::Tensor::copy_()
[2m[36m(pid=47368)[0m     @     0x7f06f787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47368)[0m     @     0x561b03951fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47368)[0m     @     0x561b038acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47368)[0m     @     0x561b03937baf _PyEval_EvalCodeWithName
[2m[36m(pid=47368)[0m     @     0x561b03938a20 method_vectorcall
[2m[36m(pid=47368)[0m     @     0x561b038acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47368)[0m     @     0x561b03937baf _PyEval_EvalCodeWithName
[2m[36m(pid=47368)[0m     @     0x561b03938643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47368)[0m     @     0x561b038ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47368)[0m     @     0x561b03937baf _PyEval_EvalCodeWithName
[2m[36m(pid=47368)[0m     @     0x561b03938643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47368)[0m     @     0x561b038ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47368)[0m     @     0x561b03937baf _PyEval_EvalCodeWithName
[2m[36m(pid=47368)[0m     @     0x561b03938643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47368)[0m     @     0x561b038ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47368)[0m     @     0x561b03937baf _PyEval_EvalCodeWithName
[2m[36m(pid=47368)[0m     @     0x561b03938643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47368)[0m     @     0x561b038ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47340)[0m     @     0x7fae7f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=47340)[0m     @     0x7fae85a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47340)[0m     @     0x55f8be055fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47340)[0m     @     0x55f8bdfb0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47340)[0m     @     0x55f8be03bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47340)[0m     @     0x55f8be03ca20 method_vectorcall
[2m[36m(pid=47340)[0m     @     0x55f8bdfb0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47340)[0m     @     0x55f8be03bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47340)[0m     @     0x55f8be03c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47340)[0m     @     0x55f8bdfb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47340)[0m     @     0x55f8be03bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47340)[0m     @     0x55f8be03c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47340)[0m     @     0x55f8bdfb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47340)[0m     @     0x55f8be03bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47340)[0m     @     0x55f8be03c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47340)[0m     @     0x55f8bdfb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47340)[0m     @     0x55f8be03bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47340)[0m     @     0x55f8be03c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47340)[0m     @     0x55f8bdfb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47349)[0m     @     0x7f8ff20ba4f5 at::Tensor::copy_()
[2m[36m(pid=47349)[0m     @     0x7f8ff816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47349)[0m     @     0x55da7752bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47349)[0m     @     0x55da77486b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47349)[0m     @     0x55da77511baf _PyEval_EvalCodeWithName
[2m[36m(pid=47349)[0m     @     0x55da77512a20 method_vectorcall
[2m[36m(pid=47349)[0m     @     0x55da77486bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47349)[0m     @     0x55da77511baf _PyEval_EvalCodeWithName
[2m[36m(pid=47349)[0m     @     0x55da77512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47349)[0m     @     0x55da77487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47349)[0m     @     0x55da77511baf _PyEval_EvalCodeWithName
[2m[36m(pid=47349)[0m     @     0x55da77512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47349)[0m     @     0x55da77487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47349)[0m     @     0x55da77511baf _PyEval_EvalCodeWithName
[2m[36m(pid=47349)[0m     @     0x55da77512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47349)[0m     @     0x55da77487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47349)[0m     @     0x55da77511baf _PyEval_EvalCodeWithName
[2m[36m(pid=47349)[0m     @     0x55da77512643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47349)[0m     @     0x55da77487689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47425)[0m     @     0x55975aee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47425)[0m     @     0x55975ae5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47435)[0m     @     0x7f8af99e54f5 at::Tensor::copy_()
[2m[36m(pid=47435)[0m     @     0x7f8affa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47435)[0m     @     0x55fef5ccffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47435)[0m     @     0x55fef5c2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47435)[0m     @     0x55fef5cb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47435)[0m     @     0x55fef5cb6a20 method_vectorcall
[2m[36m(pid=47435)[0m     @     0x55fef5c2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47435)[0m     @     0x55fef5cb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47435)[0m     @     0x55fef5cb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47435)[0m     @     0x55fef5c2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47435)[0m     @     0x55fef5cb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47435)[0m     @     0x55fef5cb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47435)[0m     @     0x55fef5c2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47435)[0m     @     0x55fef5cb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47435)[0m     @     0x55fef5cb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47435)[0m     @     0x55fef5c2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47435)[0m     @     0x55fef5cb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47435)[0m     @     0x55fef5cb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47435)[0m     @     0x55fef5c2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47351)[0m     @     0x7f7e3e8504f5 at::Tensor::copy_()
[2m[36m(pid=47351)[0m     @     0x7f7e448fb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47351)[0m     @     0x559017c56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47351)[0m     @     0x559017bb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47351)[0m     @     0x559017c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47351)[0m     @     0x559017c3da20 method_vectorcall
[2m[36m(pid=47351)[0m     @     0x559017bb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47351)[0m     @     0x559017c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47351)[0m     @     0x559017c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47351)[0m     @     0x559017bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47351)[0m     @     0x559017c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47351)[0m     @     0x559017c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47351)[0m     @     0x559017bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47351)[0m     @     0x559017c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47351)[0m     @     0x559017c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47351)[0m     @     0x559017bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47351)[0m     @     0x559017c3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47351)[0m     @     0x559017c3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47351)[0m     @     0x559017bb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47422)[0m     @     0x56544a4e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47422)[0m     @     0x56544a4e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47422)[0m     @     0x56544a456689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47422)[0m     @     0x56544a4e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47422)[0m     @     0x56544a4e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47422)[0m     @     0x56544a456689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47422)[0m     @     0x56544a4e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=47422)[0m     @     0x56544a4e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47422)[0m     @     0x56544a456689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47396)[0m     @     0x7f10c118b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47396)[0m     @     0x7f10becb84f5 at::Tensor::copy_()
[2m[36m(pid=47396)[0m     @     0x7f10c4d6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47396)[0m     @     0x558fafc6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47396)[0m     @     0x558fafbc5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47396)[0m     @     0x558fafc50baf _PyEval_EvalCodeWithName
[2m[36m(pid=47396)[0m     @     0x558fafc51a20 method_vectorcall
[2m[36m(pid=47396)[0m     @     0x558fafbc5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47396)[0m     @     0x558fafc50baf _PyEval_EvalCodeWithName
[2m[36m(pid=47396)[0m     @     0x558fafc51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47396)[0m     @     0x558fafbc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47396)[0m     @     0x558fafc50baf _PyEval_EvalCodeWithName
[2m[36m(pid=47396)[0m     @     0x558fafc51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47396)[0m     @     0x558fafbc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47396)[0m     @     0x558fafc50baf _PyEval_EvalCodeWithName
[2m[36m(pid=47396)[0m     @     0x558fafc51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47396)[0m     @     0x558fafbc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47396)[0m     @     0x558fafc50baf _PyEval_EvalCodeWithName
[2m[36m(pid=47396)[0m     @     0x558fafc51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47396)[0m     @     0x558fafbc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47334)[0m     @     0x7f161023b4f5 at::Tensor::copy_()
[2m[36m(pid=47334)[0m     @     0x7f16162e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47334)[0m     @     0x564339ac0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47334)[0m     @     0x564339a1bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47334)[0m     @     0x564339aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47334)[0m     @     0x564339aa7a20 method_vectorcall
[2m[36m(pid=47334)[0m     @     0x564339a1bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47334)[0m     @     0x564339aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47334)[0m     @     0x564339aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47334)[0m     @     0x564339a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47334)[0m     @     0x564339aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47334)[0m     @     0x564339aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47334)[0m     @     0x564339a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47334)[0m     @     0x564339aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47334)[0m     @     0x564339aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47334)[0m     @     0x564339a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47334)[0m     @     0x564339aa6baf _PyEval_EvalCodeWithName
[2m[36m(pid=47334)[0m     @     0x564339aa7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47334)[0m     @     0x564339a1c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47374)[0m     @     0x7f70243354f5 at::Tensor::copy_()
[2m[36m(pid=47374)[0m     @     0x7f702a3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47374)[0m     @     0x564bc5826fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47374)[0m     @     0x564bc5781b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47374)[0m     @     0x564bc580cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47374)[0m     @     0x564bc580da20 method_vectorcall
[2m[36m(pid=47374)[0m     @     0x564bc5781bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47374)[0m     @     0x564bc580cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47374)[0m     @     0x564bc580d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47374)[0m     @     0x564bc5782689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47374)[0m     @     0x564bc580cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47374)[0m     @     0x564bc580d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47374)[0m     @     0x564bc5782689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47374)[0m     @     0x564bc580cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47374)[0m     @     0x564bc580d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47374)[0m     @     0x564bc5782689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47374)[0m     @     0x564bc580cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47374)[0m     @     0x564bc580d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47374)[0m     @     0x564bc5782689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47367)[0m     @     0x7ed65e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47367)[0m     @     0x7ed65c1244f5 at::Tensor::copy_()
[2m[36m(pid=47367)[0m     @     0x7ed6621cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47367)[0m     @     0x557bf2b11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47367)[0m     @     0x557bf2a6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47367)[0m     @     0x557bf2af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47367)[0m     @     0x557bf2af8a20 method_vectorcall
[2m[36m(pid=47367)[0m     @     0x557bf2a6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47367)[0m     @     0x557bf2af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47367)[0m     @     0x557bf2af8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47367)[0m     @     0x557bf2a6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47367)[0m     @     0x557bf2af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47367)[0m     @     0x557bf2af8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47367)[0m     @     0x557bf2a6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47367)[0m     @     0x557bf2af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47367)[0m     @     0x557bf2af8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47367)[0m     @     0x557bf2a6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47367)[0m     @     0x557bf2af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47367)[0m     @     0x557bf2af8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47367)[0m     @     0x557bf2a6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47437)[0m     @     0x7f251b9a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47437)[0m     @     0x558c972c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47437)[0m     @     0x558c97220b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47437)[0m     @     0x558c972abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47437)[0m     @     0x558c972aca20 method_vectorcall
[2m[36m(pid=47437)[0m     @     0x558c97220bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47437)[0m     @     0x558c972abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47437)[0m     @     0x558c972ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47437)[0m     @     0x558c97221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47437)[0m     @     0x558c972abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47437)[0m     @     0x558c972ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47437)[0m     @     0x558c97221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47437)[0m     @     0x558c972abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47437)[0m     @     0x558c972ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47437)[0m     @     0x558c97221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47437)[0m     @     0x558c972abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47437)[0m     @     0x558c972ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47437)[0m     @     0x558c97221689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x7fc69034da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47392)[0m     @     0x7fc69034b388 at::native::copy_impl()
[2m[36m(pid=47392)[0m     @     0x7fc69034d5a4 at::native::copy_()
[2m[36m(pid=47352)[0m     @     0x55a57c21d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47417)[0m     @     0x7f27ffeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47417)[0m     @     0x7f27fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=47417)[0m     @     0x7f2803a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47417)[0m     @     0x55b5f11c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47417)[0m     @     0x55b5f111fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47417)[0m     @     0x55b5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=47417)[0m     @     0x55b5f11aba20 method_vectorcall
[2m[36m(pid=47417)[0m     @     0x55b5f111fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47417)[0m     @     0x55b5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=47417)[0m     @     0x55b5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47417)[0m     @     0x55b5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47417)[0m     @     0x55b5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=47417)[0m     @     0x55b5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47417)[0m     @     0x55b5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47417)[0m     @     0x55b5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=47417)[0m     @     0x55b5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47417)[0m     @     0x55b5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47417)[0m     @     0x55b5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=47417)[0m     @     0x55b5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47417)[0m     @     0x55b5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x7f06171e04f5 at::Tensor::copy_()
[2m[36m(pid=47411)[0m     @     0x7effc60b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47411)[0m     @     0x7effc3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=47411)[0m     @     0x7effc9c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47411)[0m     @     0x55add4fa3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47411)[0m     @     0x55add4efeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47411)[0m     @     0x55add4f89baf _PyEval_EvalCodeWithName
[2m[36m(pid=47411)[0m     @     0x55add4f8aa20 method_vectorcall
[2m[36m(pid=47411)[0m     @     0x55add4efebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47411)[0m     @     0x55add4f89baf _PyEval_EvalCodeWithName
[2m[36m(pid=47411)[0m     @     0x55add4f8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47411)[0m     @     0x55add4eff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47411)[0m     @     0x55add4f89baf _PyEval_EvalCodeWithName
[2m[36m(pid=47411)[0m     @     0x55add4f8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47411)[0m     @     0x55add4eff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47411)[0m     @     0x55add4f89baf _PyEval_EvalCodeWithName
[2m[36m(pid=47411)[0m     @     0x55add4f8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47411)[0m     @     0x55add4eff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47411)[0m     @     0x55add4f89baf _PyEval_EvalCodeWithName
[2m[36m(pid=47411)[0m     @     0x55add4f8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47411)[0m     @     0x55add4eff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47410)[0m     @     0x5580e59f5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47410)[0m     @     0x5580e5950b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47410)[0m     @     0x5580e59dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47410)[0m     @     0x5580e59dca20 method_vectorcall
[2m[36m(pid=47410)[0m     @     0x5580e5950bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47410)[0m     @     0x5580e59dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47410)[0m     @     0x5580e59dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47410)[0m     @     0x5580e5951689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47410)[0m     @     0x5580e59dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47410)[0m     @     0x5580e59dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47410)[0m     @     0x5580e5951689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47410)[0m     @     0x5580e59dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47410)[0m     @     0x5580e59dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47410)[0m     @     0x5580e5951689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47410)[0m     @     0x5580e59dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47410)[0m     @     0x5580e59dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47410)[0m     @     0x5580e5951689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47373)[0m     @     0x556c9e653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47373)[0m     @     0x556c9e5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47373)[0m     @     0x556c9e652baf _PyEval_EvalCodeWithName
[2m[36m(pid=47373)[0m     @     0x556c9e653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47373)[0m     @     0x556c9e5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47373)[0m     @     0x556c9e652baf _PyEval_EvalCodeWithName
[2m[36m(pid=47373)[0m     @     0x556c9e653643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47373)[0m     @     0x556c9e5c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47346)[0m     @     0x7fbb4be474f5 at::Tensor::copy_()
[2m[36m(pid=47346)[0m     @     0x7fbb4e31a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47346)[0m     @     0x7fbb4be474f5 at::Tensor::copy_()
[2m[36m(pid=47346)[0m     @     0x7fbb51ef279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47346)[0m     @     0x55585d77dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47346)[0m     @     0x55585d6d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47346)[0m     @     0x55585d763baf _PyEval_EvalCodeWithName
[2m[36m(pid=47346)[0m     @     0x55585d764a20 method_vectorcall
[2m[36m(pid=47346)[0m     @     0x55585d6d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47346)[0m     @     0x55585d763baf _PyEval_EvalCodeWithName
[2m[36m(pid=47346)[0m     @     0x55585d764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47346)[0m     @     0x55585d6d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47346)[0m     @     0x55585d763baf _PyEval_EvalCodeWithName
[2m[36m(pid=47346)[0m     @     0x55585d764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47346)[0m     @     0x55585d6d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47346)[0m     @     0x55585d763baf _PyEval_EvalCodeWithName
[2m[36m(pid=47346)[0m     @     0x55585d764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47346)[0m     @     0x55585d6d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47346)[0m     @     0x55585d763baf _PyEval_EvalCodeWithName
[2m[36m(pid=47346)[0m     @     0x55585d764643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47346)[0m     @     0x55585d6d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47354)[0m     @     0x7ee3c52b54f5 at::Tensor::copy_()
[2m[36m(pid=47354)[0m     @     0x7ee3cb36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47354)[0m     @     0x55fb7b33ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47354)[0m     @     0x55fb7b29ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47354)[0m     @     0x55fb7b325baf _PyEval_EvalCodeWithName
[2m[36m(pid=47354)[0m     @     0x55fb7b326a20 method_vectorcall
[2m[36m(pid=47354)[0m     @     0x55fb7b29abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47354)[0m     @     0x55fb7b325baf _PyEval_EvalCodeWithName
[2m[36m(pid=47354)[0m     @     0x55fb7b326643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47354)[0m     @     0x55fb7b29b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47354)[0m     @     0x55fb7b325baf _PyEval_EvalCodeWithName
[2m[36m(pid=47354)[0m     @     0x55fb7b326643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47354)[0m     @     0x55fb7b29b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47354)[0m     @     0x55fb7b325baf _PyEval_EvalCodeWithName
[2m[36m(pid=47354)[0m     @     0x55fb7b326643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47354)[0m     @     0x55fb7b29b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47354)[0m     @     0x55fb7b325baf _PyEval_EvalCodeWithName
[2m[36m(pid=47354)[0m     @     0x55fb7b326643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47354)[0m     @     0x55fb7b29b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47471)[0m     @     0x7f47786da8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47471)[0m     @     0x7f47762074f5 at::Tensor::copy_()
[2m[36m(pid=47471)[0m     @     0x7f477c2b279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47471)[0m     @     0x55b85e75dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47471)[0m     @     0x55b85e6b8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47471)[0m     @     0x55b85e743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47471)[0m     @     0x55b85e744a20 method_vectorcall
[2m[36m(pid=47471)[0m     @     0x55b85e6b8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47471)[0m     @     0x55b85e743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47471)[0m     @     0x55b85e744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47471)[0m     @     0x55b85e6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47471)[0m     @     0x55b85e743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47471)[0m     @     0x55b85e744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47471)[0m     @     0x55b85e6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47471)[0m     @     0x55b85e743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47471)[0m     @     0x55b85e744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47471)[0m     @     0x55b85e6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47471)[0m     @     0x55b85e743baf _PyEval_EvalCodeWithName
[2m[36m(pid=47471)[0m     @     0x55b85e744643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47471)[0m     @     0x55b85e6b9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x7fc913f53d91 at::TensorIterator::for_each()
[2m[36m(pid=47412)[0m     @     0x7fc914836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=47412)[0m     @     0x7fc914859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=47412)[0m     @     0x7fc913cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=47412)[0m     @     0x7fc913cf9388 at::native::copy_impl()
[2m[36m(pid=47440)[0m     @     0x7f42eea544f5 at::Tensor::copy_()
[2m[36m(pid=47440)[0m     @     0x7f42f4aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47440)[0m     @     0x55b47cddffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47440)[0m     @     0x55b47cd3ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47440)[0m     @     0x55b47cdc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47440)[0m     @     0x55b47cdc6a20 method_vectorcall
[2m[36m(pid=47440)[0m     @     0x55b47cd3abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47440)[0m     @     0x55b47cdc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47440)[0m     @     0x55b47cdc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47440)[0m     @     0x55b47cd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47440)[0m     @     0x55b47cdc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47440)[0m     @     0x55b47cdc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47440)[0m     @     0x55b47cd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47440)[0m     @     0x55b47cdc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47440)[0m     @     0x55b47cdc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47440)[0m     @     0x55b47cd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47440)[0m     @     0x55b47cdc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=47440)[0m     @     0x55b47cdc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47440)[0m     @     0x55b47cd3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47366)[0m     @     0x7f24ea8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47366)[0m     @     0x7f24e83354f5 at::Tensor::copy_()
[2m[36m(pid=47366)[0m     @     0x7f24ee3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47366)[0m     @     0x560718ca8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47366)[0m     @     0x560718c03b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47366)[0m     @     0x560718c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47366)[0m     @     0x560718c8fa20 method_vectorcall
[2m[36m(pid=47366)[0m     @     0x560718c03bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47366)[0m     @     0x560718c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47366)[0m     @     0x560718c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47366)[0m     @     0x560718c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47366)[0m     @     0x560718c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47366)[0m     @     0x560718c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47366)[0m     @     0x560718c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47366)[0m     @     0x560718c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47366)[0m     @     0x560718c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47366)[0m     @     0x560718c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47366)[0m     @     0x560718c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=47366)[0m     @     0x560718c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47366)[0m     @     0x560718c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47344)[0m     @     0x7f77ec0998de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47344)[0m     @     0x7f77e9bc64f5 at::Tensor::copy_()
[2m[36m(pid=47344)[0m     @     0x7f77efc7179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47344)[0m     @     0x5624b96b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47344)[0m     @     0x5624b9614b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47344)[0m     @     0x5624b969fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47344)[0m     @     0x5624b96a0a20 method_vectorcall
[2m[36m(pid=47344)[0m     @     0x5624b9614bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47344)[0m     @     0x5624b969fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47344)[0m     @     0x5624b96a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47344)[0m     @     0x5624b9615689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47344)[0m     @     0x5624b969fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47344)[0m     @     0x5624b96a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47344)[0m     @     0x5624b9615689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47344)[0m     @     0x5624b969fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47344)[0m     @     0x5624b96a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47344)[0m     @     0x5624b9615689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47344)[0m     @     0x5624b969fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=47344)[0m     @     0x5624b96a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47344)[0m     @     0x5624b9615689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47419)[0m     @     0x7efee1cfb4f5 at::Tensor::copy_()
[2m[36m(pid=47419)[0m     @     0x7efee7da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47419)[0m     @     0x56279876bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47419)[0m     @     0x5627986c6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47419)[0m     @     0x562798751baf _PyEval_EvalCodeWithName
[2m[36m(pid=47419)[0m     @     0x562798752a20 method_vectorcall
[2m[36m(pid=47419)[0m     @     0x5627986c6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47419)[0m     @     0x562798751baf _PyEval_EvalCodeWithName
[2m[36m(pid=47419)[0m     @     0x562798752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47419)[0m     @     0x5627986c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47419)[0m     @     0x562798751baf _PyEval_EvalCodeWithName
[2m[36m(pid=47419)[0m     @     0x562798752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47419)[0m     @     0x5627986c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47419)[0m     @     0x562798751baf _PyEval_EvalCodeWithName
[2m[36m(pid=47419)[0m     @     0x562798752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47419)[0m     @     0x5627986c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47419)[0m     @     0x562798751baf _PyEval_EvalCodeWithName
[2m[36m(pid=47419)[0m     @     0x562798752643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47419)[0m     @     0x5627986c7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47402)[0m     @     0x7edd5ba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47402)[0m     @     0x7edd595cb4f5 at::Tensor::copy_()
[2m[36m(pid=47402)[0m     @     0x7edd5f67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47402)[0m     @     0x55c5444fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47402)[0m     @     0x55c544459b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47402)[0m     @     0x55c5444e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47402)[0m     @     0x55c5444e5a20 method_vectorcall
[2m[36m(pid=47402)[0m     @     0x55c544459bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47402)[0m     @     0x55c5444e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47402)[0m     @     0x55c5444e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47402)[0m     @     0x55c54445a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47402)[0m     @     0x55c5444e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47402)[0m     @     0x55c5444e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47402)[0m     @     0x55c54445a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47402)[0m     @     0x55c5444e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47402)[0m     @     0x55c5444e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47415)[0m     @     0x7f4d376b64f5 at::Tensor::copy_()
[2m[36m(pid=47415)[0m     @     0x7f4d3d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47415)[0m     @     0x556b149befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47415)[0m     @     0x556b14919b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47415)[0m     @     0x556b149a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47415)[0m     @     0x556b149a5a20 method_vectorcall
[2m[36m(pid=47415)[0m     @     0x556b14919bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47415)[0m     @     0x556b149a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47415)[0m     @     0x556b149a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47415)[0m     @     0x556b1491a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47415)[0m     @     0x556b149a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47415)[0m     @     0x556b149a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47415)[0m     @     0x556b1491a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47415)[0m     @     0x556b149a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47415)[0m     @     0x556b149a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47415)[0m     @     0x556b1491a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47415)[0m     @     0x556b149a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47415)[0m     @     0x556b149a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47415)[0m     @     0x556b1491a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x7fc690a384f5 at::Tensor::copy_()
[2m[36m(pid=47392)[0m     @     0x7fc692f0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47392)[0m     @     0x7fc690a384f5 at::Tensor::copy_()
[2m[36m(pid=47392)[0m     @     0x7fc696ae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47392)[0m     @     0x55fa9b8f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47392)[0m     @     0x55fa9b853b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x55fa9b8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=47392)[0m     @     0x55fa9b8dfa20 method_vectorcall
[2m[36m(pid=47392)[0m     @     0x55fa9b853bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x55fa9b8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=47392)[0m     @     0x55fa9b8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47392)[0m     @     0x55fa9b854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x55fa9b8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=47392)[0m     @     0x55fa9b8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47392)[0m     @     0x55fa9b854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x55fa9b8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=47392)[0m     @     0x55fa9b8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47392)[0m     @     0x55fa9b854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47392)[0m     @     0x55fa9b8debaf _PyEval_EvalCodeWithName
[2m[36m(pid=47392)[0m     @     0x55fa9b8df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47392)[0m     @     0x55fa9b854689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x7f061d28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47430)[0m     @     0x561c1a323fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47430)[0m     @     0x561c1a27eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x561c1a309baf _PyEval_EvalCodeWithName
[2m[36m(pid=47430)[0m     @     0x561c1a30aa20 method_vectorcall
[2m[36m(pid=47430)[0m     @     0x561c1a27ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x561c1a309baf _PyEval_EvalCodeWithName
[2m[36m(pid=47430)[0m     @     0x561c1a30a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47430)[0m     @     0x561c1a27f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x561c1a309baf _PyEval_EvalCodeWithName
[2m[36m(pid=47430)[0m     @     0x561c1a30a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47430)[0m     @     0x561c1a27f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x561c1a309baf _PyEval_EvalCodeWithName
[2m[36m(pid=47430)[0m     @     0x561c1a30a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47430)[0m     @     0x561c1a27f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47430)[0m     @     0x561c1a309baf _PyEval_EvalCodeWithName
[2m[36m(pid=47430)[0m     @     0x561c1a30a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47430)[0m     @     0x561c1a27f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x7fc913cfb5a4 at::native::copy_()
[2m[36m(pid=47412)[0m     @     0x7fc9143e64f5 at::Tensor::copy_()
[2m[36m(pid=47402)[0m     @     0x55c54445a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47402)[0m     @     0x55c5444e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=47402)[0m     @     0x55c5444e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47402)[0m     @     0x55c54445a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x7fc9168b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=47412)[0m     @     0x7fc9143e64f5 at::Tensor::copy_()
[2m[36m(pid=47412)[0m     @     0x7fc91a49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=47412)[0m     @     0x562602311fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=47412)[0m     @     0x56260226cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x5626022f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47412)[0m     @     0x5626022f8a20 method_vectorcall
[2m[36m(pid=47412)[0m     @     0x56260226cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x5626022f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47412)[0m     @     0x5626022f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47412)[0m     @     0x56260226d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x5626022f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47412)[0m     @     0x5626022f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47412)[0m     @     0x56260226d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x5626022f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47412)[0m     @     0x5626022f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47412)[0m     @     0x56260226d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=47412)[0m     @     0x5626022f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=47412)[0m     @     0x5626022f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=47412)[0m     @     0x56260226d689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:45:10,816	ERROR trial_runner.py:567 -- Trial PPO_jss_env_f5dfb_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=47456, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:45:10,821	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
== Status ==
Memory usage on this node: 24.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_f5dfb_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_f5dfb_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_f5dfb_00000_0_2020-11-05_10-45-03/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:45:10,832	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:45:10,832	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:45:10,833	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:45:10,833	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:45:10,833	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
== Status ==
Memory usage on this node: 24.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.06 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_f5dfb_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_f5dfb_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_f5dfb_00000_0_2020-11-05_10-45-03/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
2020-11-05 10:45:10,843	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
2020-11-05 10:45:10,844	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_f5dfb_00000])
2020-11-05 10:45:10,845	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
[2m[36m(pid=47456)[0m E1105 10:45:10.808271 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=47456)[0m E1105 10:45:10.808470 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=47456)[0m E1105 10:45:10.827312 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=47456)[0m E1105 10:45:10.827476 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=47456)[0m E1105 10:45:10.827653 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=47456)[0m E1105 10:45:10.827729 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=47456)[0m E1105 10:45:10.827852 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=efaf5dbfabc208739f3cc57a01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=47456)[0m E1105 10:45:10.827939 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=b3b45bae970c41729f3cc57a01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=47456)[0m E1105 10:45:10.828045 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=fde3d5eda9f525d7a97540c201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=47456)[0m E1105 10:45:10.828135 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=d16c21eef3935840a97540c201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=47456)[0m E1105 10:45:10.828249 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=47456)[0m E1105 10:45:10.828346 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=47456)[0m E1105 10:45:10.829402 47456 48576 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=457f03c785986c89252160a301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=47456)[0m E1105 10:45:10.830314 47456 48576 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=ad47e6e6a1a1660b0314ce3001000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=47456)[0m E1105 10:45:10.830524 47456 48576 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=47456)[0m E1105 10:45:10.831881 47456 48576 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d88ec84d5baca957a97540c201000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=a97540c201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=47456)[0m E1105 10:45:10.832114 47456 48576 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d7b1ed864d13e17f31c3fed901000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=47456)[0m E1105 10:45:10.832310 47456 48576 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=4f22c19b5f703db99f3cc57a01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=9f3cc57a01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=47456)[0m E1105 10:45:10.837471 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=9e78156cc0f1c18db2413f7201000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=47456)[0m E1105 10:45:10.837592 47456 48576 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=99a573b913884b0db2413f7201000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=b2413f7201000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=47456)[0m 