2020-10-14 20:52:21,304	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 11.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_28509_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=2060)[0m 2020-10-14 20:52:24,749	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1998)[0m 2020-10-14 20:52:26,797	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2023)[0m 2020-10-14 20:52:26,835	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2054)[0m 2020-10-14 20:52:26,846	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2059)[0m 2020-10-14 20:52:26,879	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2067)[0m 2020-10-14 20:52:26,910	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1961)[0m 2020-10-14 20:52:26,920	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2055)[0m 2020-10-14 20:52:26,924	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2000)[0m 2020-10-14 20:52:26,931	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2050)[0m 2020-10-14 20:52:26,945	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2044)[0m 2020-10-14 20:52:26,945	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2058)[0m 2020-10-14 20:52:26,955	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2021)[0m 2020-10-14 20:52:26,954	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2015)[0m 2020-10-14 20:52:26,951	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2048)[0m 2020-10-14 20:52:26,974	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2010)[0m 2020-10-14 20:52:26,977	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2038)[0m 2020-10-14 20:52:26,979	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2012)[0m 2020-10-14 20:52:27,008	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2031)[0m 2020-10-14 20:52:27,012	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2018)[0m 2020-10-14 20:52:27,001	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2041)[0m 2020-10-14 20:52:27,054	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1958)[0m 2020-10-14 20:52:27,076	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2022)[0m 2020-10-14 20:52:27,077	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2004)[0m 2020-10-14 20:52:27,084	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1955)[0m 2020-10-14 20:52:27,079	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2071)[0m 2020-10-14 20:52:27,085	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1941)[0m 2020-10-14 20:52:27,165	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1972)[0m 2020-10-14 20:52:27,153	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1956)[0m 2020-10-14 20:52:27,233	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2016)[0m 2020-10-14 20:52:27,186	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1944)[0m 2020-10-14 20:52:27,238	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1934)[0m 2020-10-14 20:52:27,221	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1935)[0m 2020-10-14 20:52:27,227	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1957)[0m 2020-10-14 20:52:27,210	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1954)[0m 2020-10-14 20:52:27,238	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2014)[0m 2020-10-14 20:52:27,214	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2026)[0m 2020-10-14 20:52:27,249	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2033)[0m 2020-10-14 20:52:27,256	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1970)[0m 2020-10-14 20:52:27,258	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2029)[0m 2020-10-14 20:52:27,264	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1936)[0m 2020-10-14 20:52:27,261	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2065)[0m 2020-10-14 20:52:27,261	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1948)[0m 2020-10-14 20:52:27,281	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2005)[0m 2020-10-14 20:52:27,278	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1940)[0m 2020-10-14 20:52:27,302	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1967)[0m 2020-10-14 20:52:27,340	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1947)[0m 2020-10-14 20:52:27,320	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2020)[0m 2020-10-14 20:52:27,313	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2045)[0m 2020-10-14 20:52:27,327	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2047)[0m 2020-10-14 20:52:27,295	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1950)[0m 2020-10-14 20:52:27,342	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1953)[0m 2020-10-14 20:52:27,327	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1973)[0m 2020-10-14 20:52:27,314	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1937)[0m 2020-10-14 20:52:27,354	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1994)[0m 2020-10-14 20:52:27,367	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1939)[0m 2020-10-14 20:52:27,381	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1952)[0m 2020-10-14 20:52:27,388	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2027)[0m 2020-10-14 20:52:27,419	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2069)[0m 2020-10-14 20:52:27,421	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2011)[0m 2020-10-14 20:52:27,410	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1964)[0m 2020-10-14 20:52:27,449	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1969)[0m 2020-10-14 20:52:27,445	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2013)[0m 2020-10-14 20:52:27,447	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1938)[0m 2020-10-14 20:52:27,466	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1946)[0m 2020-10-14 20:52:27,470	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2024)[0m 2020-10-14 20:52:27,497	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2056)[0m 2020-10-14 20:52:27,491	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1949)[0m 2020-10-14 20:52:27,485	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2019)[0m 2020-10-14 20:52:27,492	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1942)[0m 2020-10-14 20:52:27,503	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2036)[0m 2020-10-14 20:52:27,508	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1996)[0m 2020-10-14 20:52:27,509	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2039)[0m 2020-10-14 20:52:27,511	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2002)[0m 2020-10-14 20:52:27,522	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2025)[0m 2020-10-14 20:52:27,525	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2034)[0m 2020-10-14 20:52:27,522	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=1945)[0m 2020-10-14 20:52:27,525	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2043)[0m 2020-10-14 20:52:27,544	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2017)[0m 2020-10-14 20:52:27,552	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2046)[0m 2020-10-14 20:52:27,610	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=2060)[0m 2020-10-14 20:52:29,220	INFO rollout_worker.py:1012 -- Built policy map: {'default_policy': <ray.rllib.policy.torch_policy_template.PPOTorchPolicy object at 0x7f13be6d86d0>}
[2m[36m(pid=2060)[0m 2020-10-14 20:52:29,221	INFO rollout_worker.py:1013 -- Built preprocessor map: {'default_policy': <ray.rllib.models.preprocessors.DictFlatteningPreprocessor object at 0x7f13be6d8460>}
[2m[36m(pid=2060)[0m 2020-10-14 20:52:29,221	INFO rollout_worker.py:457 -- Built filter map: {'default_policy': <ray.rllib.utils.filter.NoFilter object at 0x7f13be6d8430>}
[2m[36m(pid=1998)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1998)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2023)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2023)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2054)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2054)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2059)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2059)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2067)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2067)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2055)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2055)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2000)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2000)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2044)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2044)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2048)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2048)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2058)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2058)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2010)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2010)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2021)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2021)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2015)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2015)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2038)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2038)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2012)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2012)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2018)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2018)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2056)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2056)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1949)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1949)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2002)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2002)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2025)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2025)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2034)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2034)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2019)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2019)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1952)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1952)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2046)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2046)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1948)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1948)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2005)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2005)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1938)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1938)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1946)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1946)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1996)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1996)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2039)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2039)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2026)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2026)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2033)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2033)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1970)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1970)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2029)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2029)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1939)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1939)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1936)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1936)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2065)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2065)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1956)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1956)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2016)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2016)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1944)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1944)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1934)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1934)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1935)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1935)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1957)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1957)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2014)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2014)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1998)[0m 2020-10-14 20:52:29,346	INFO rollout_worker.py:576 -- Generating sample batch of size 2048
[2m[36m(pid=1998)[0m 2020-10-14 20:52:29,349	INFO sampler.py:552 -- Raw obs from env: { 0: { 'agent0': { 'action_mask': np.ndarray((51,), dtype=bool, min=0.0, max=1.0, mean=0.98),
[2m[36m(pid=1998)[0m                    'real_obs': np.ndarray((350,), dtype=float64, min=0.0, max=0.0, mean=0.0)}},
[2m[36m(pid=1998)[0m   1: { 'agent0': { 'action_mask': np.ndarray((51,), dtype=bool, min=0.0, max=1.0, mean=0.98),
[2m[36m(pid=1998)[0m                    'real_obs': np.ndarray((350,), dtype=float64, min=0.0, max=0.0, mean=0.0)}}}
[2m[36m(pid=1998)[0m 2020-10-14 20:52:29,349	INFO sampler.py:554 -- Info return from env: {0: {'agent0': None}, 1: {'agent0': None}}
[2m[36m(pid=1998)[0m 2020-10-14 20:52:29,350	INFO sampler.py:800 -- Preprocessed obs: np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125)
[2m[36m(pid=1998)[0m 2020-10-14 20:52:29,351	INFO sampler.py:805 -- Filtered obs: np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125)
[2m[36m(pid=2027)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2027)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2069)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2069)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2011)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2011)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1964)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1964)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1969)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1969)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2013)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2013)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1961)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1961)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2050)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2050)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1937)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1937)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1994)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1994)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1941)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1941)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1972)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1972)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1942)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1942)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2036)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2036)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2031)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2031)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2004)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2004)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1955)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1955)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2071)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2071)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2022)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2022)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1967)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1967)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1947)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1947)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2020)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2020)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2045)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2045)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2047)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2047)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1950)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1950)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1973)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=1973)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=2017)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=2017)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=1998)[0m 2020-10-14 20:52:29,361	INFO sampler.py:1222 -- Inputs to compute_actions():
[2m[36m(pid=1998)[0m 
[2m[36m(pid=1998)[0m { 'default_policy': [ { 'data': { 'agent_id': 'agent0',
[2m[36m(pid=1998)[0m                                   'env_id': 0,
[2m[36m(pid=1998)[0m                                   'info': None,
[2m[36m(pid=1998)[0m                                   'obs': np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125),
[2m[36m(pid=1998)[0m                                   'prev_action': np.ndarray((), dtype=int64, min=0.0, max=0.0, mean=0.0),
[2m[36m(pid=1998)[0m                                   'prev_reward': 0.0,
[2m[36m(pid=1998)[0m                                   'rnn_state': []},
[2m[36m(pid=1998)[0m                         'type': 'PolicyEvalData'},
[2m[36m(pid=1998)[0m                       { 'data': { 'agent_id': 'agent0',
[2m[36m(pid=1998)[0m                                   'env_id': 1,
[2m[36m(pid=1998)[0m                                   'info': None,
[2m[36m(pid=1998)[0m                                   'obs': np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125),
[2m[36m(pid=1998)[0m                                   'prev_action': np.ndarray((), dtype=int64, min=0.0, max=0.0, mean=0.0),
[2m[36m(pid=1998)[0m                                   'prev_reward': 0.0,
[2m[36m(pid=1998)[0m                                   'rnn_state': []},
[2m[36m(pid=1998)[0m                         'type': 'PolicyEvalData'}]}
[2m[36m(pid=1998)[0m 
[2m[36m(pid=1998)[0m 2020-10-14 20:52:29,373	INFO sampler.py:1268 -- Outputs of compute_actions():
[2m[36m(pid=1998)[0m 
[2m[36m(pid=1998)[0m { 'default_policy': ( np.ndarray((2,), dtype=int64, min=7.0, max=20.0, mean=13.5),
[2m[36m(pid=1998)[0m                       [],
[2m[36m(pid=1998)[0m                       { 'action_dist_inputs': np.ndarray((2, 51), dtype=float32, min=-10000000000.0, max=0.0, mean=-196078432.0),
[2m[36m(pid=1998)[0m                         'action_logp': np.ndarray((2,), dtype=float32, min=-3.912, max=-3.912, mean=-3.912),
[2m[36m(pid=1998)[0m                         'action_prob': np.ndarray((2,), dtype=float32, min=0.02, max=0.02, mean=0.02),
[2m[36m(pid=1998)[0m                         'vf_preds': np.ndarray((2,), dtype=float32, min=0.0, max=0.0, mean=0.0)})}
[2m[36m(pid=1998)[0m 
2020-10-14 20:52:33,787	ERROR trial_runner.py:567 -- Trial PPO_jss_env_28509_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ValueError): [36mray::PPO.train()[39m (pid=2060, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 471, in base_iterator
    yield ray.get(futures, timeout=timeout)
ray.exceptions.RayTaskError(ValueError): [36mray::RolloutWorker.par_iter_next()[39m (pid=2031, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1152, in par_iter_next
    return next(self.local_it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py", line 288, in gen_rollouts
    yield self.sample()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py", line 579, in sample
    batches = [self.input_reader.next()]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 93, in next
    batches = [self.get_data()]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 209, in get_data
    item = next(self.rollout_provider)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 585, in _env_runner
    active_envs, to_eval, outputs = _process_observations(
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 797, in _process_observations
    prep_obs: EnvObsType = _get_or_raise(preprocessors,
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py", line 233, in transform
    self.check_shape(observation)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py", line 61, in check_shape
    raise ValueError(
ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([0.00000000e+00, 2.92929293e-01, 7.33333333e-01, 6.03773585e-01,
       8.48484848e-01, 1.88679245e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 7.33333333e-01, 4.85600794e-01, 8.48484848e-01,
       1.13207547e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       6.00000000e-01, 4.81628600e-01, 8.08080808e-02, 1.46971202e-03,
       0.00000000e+00, 0.00000000e+00, 1.21212121e-01, 8.66666667e-01,
       6.26613704e-01, 8.08080808e-02, 9.79145978e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 6.47467726e-01,
       1.00000000e+00, 5.22343595e-03, 0.00000000e+00, 0.00000000e+00,
       1.91919192e-01, 5.33333333e-01, 4.66732870e-01, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       1.00000000e+00, 8.23237339e-01, 1.00000000e+00, 7.24925521e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,
       7.33862959e-01, 5.25252525e-01, 1.21151936e-03, 0.00000000e+00,
       0.00000000e+00, 2.72727273e-01, 6.66666667e-01, 5.35253227e-01,
       6.46464646e-01, 3.89275074e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 8.00000000e-01, 5.67030785e-01, 8.28282828e-01,
       1.25124131e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       6.66666667e-01, 5.38232373e-01, 8.58585859e-01, 1.31082423e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,
       6.44488580e-01, 8.58585859e-01, 8.56007944e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 4.65739821e-01,
       2.82828283e-01, 1.78748759e-04, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 7.33333333e-01, 5.53128103e-01, 6.86868687e-01,
       4.46871897e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       8.66666667e-01, 6.86196624e-01, 2.12121212e-01, 3.85302880e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,
       9.30486594e-01, 1.00000000e+00, 1.24131082e-02, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 7.54716981e-01,
       1.00000000e+00, 3.53525323e-03, 0.00000000e+00, 0.00000000e+00,
       2.82828283e-01, 5.33333333e-01, 3.35650447e-01, 6.06060606e-01,
       9.25521351e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       3.33333333e-01, 2.60178749e-01, 2.82828283e-01, 5.02482622e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.66666667e-01,
       1.84707051e-01, 2.32323232e-01, 1.19165839e-02, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 4.17080437e-01,
       1.71717172e-01, 3.37636544e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 1.00000000e+00, 9.12611718e-01, 1.00000000e+00,
       1.76762661e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       1.00000000e+00, 7.87487587e-01, 1.00000000e+00, 1.70009930e-02,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,
       5.23336643e-01, 3.93939394e-01, 3.97219464e-04, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 3.83316783e-01,
       3.93939394e-01, 7.16981132e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 7.33333333e-01, 6.37537239e-01, 1.11111111e-01,
       5.99801390e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       1.00000000e+00, 7.15988083e-01, 1.00000000e+00, 1.05461768e-02,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.00000000e-01,
       4.29990070e-01, 5.15151515e-01, 7.88480636e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 8.66666667e-01, 7.54716981e-01,
       1.41414141e-01, 5.77954320e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 8.00000000e-01, 5.56107249e-01, 0.00000000e+00,
       1.33068520e-03, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,
       9.33333333e-01, 7.54716981e-01, 0.00000000e+00, 8.73882820e-04,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,
       4.46871897e-01, 6.56565657e-01, 8.16285998e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 2.66666667e-01, 1.85700099e-01,
       3.43434343e-01, 1.80734856e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 9.33333333e-01, 4.37934459e-01, 2.22222222e-01,
       6.19662363e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       6.66666667e-01, 4.71698113e-01, 0.00000000e+00, 1.42999007e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,
       6.94141013e-01, 1.00000000e+00, 1.29096326e-03, 0.00000000e+00,
       0.00000000e+00, 1.91919192e-01, 4.66666667e-01, 4.15094340e-01,
       5.65656566e-01, 1.15193644e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 1.00000000e+00, 7.84508441e-01, 1.00000000e+00,
       5.58093347e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       4.66666667e-01, 2.94935452e-01, 3.23232323e-01, 6.39523337e-03,
       0.00000000e+00, 0.00000000e+00, 1.21212121e-01, 7.33333333e-01,
       5.79940417e-01, 3.03030303e-02, 5.38232373e-03, 0.00000000e+00,
       0.00000000e+00, 1.41414141e-01, 8.66666667e-01, 6.40516385e-01,
       6.06060606e-02, 1.44985104e-03, 0.00000000e+00, 1.00000000e+00,
       0.00000000e+00, 7.33333333e-01, 5.49155909e-01, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       8.00000000e-01, 5.91857001e-01, 3.33333333e-01, 2.42303873e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,
       6.40516385e-01, 7.07070707e-01, 8.26216485e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 1.00000000e+00,
       1.00000000e+00, 2.08540218e-03, 0.00000000e+00, 0.00000000e+00,
       1.81818182e-01, 8.00000000e-01, 7.40814300e-01, 4.74747475e-01,
       2.85998014e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       1.00000000e+00, 7.48758689e-01, 1.00000000e+00, 1.23932473e-02,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.66666667e-01,
       5.34260179e-01, 3.23232323e-01, 1.76762661e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 8.00000000e-01, 7.62661370e-01,
       3.43434343e-01, 6.17676266e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 1.00000000e+00, 8.57994042e-01, 1.00000000e+00,
       3.31678252e-03, 0.00000000e+00]), 'action_mask': array([False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False, False, False,
       False, False, False,  True, False, False, False, False, False,
       False, False, False, False, False,  True, False, False, False,
       False, False, False, False, False, False])})
[2m[36m(pid=2060)[0m 2020-10-14 20:52:33,774	INFO trainer.py:512 -- Worker crashed during call to train(). To attempt to continue training without the failed worker, set `'ignore_worker_failures': True`.
== Status ==
Memory usage on this node: 24.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_28509_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_28509_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_28509_00000_0_2020-10-14_20-52-22/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[33m(pid=raylet)[0m E1014 20:52:33.824972  1893  1893 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 2: HandleServiceClosed
== Status ==
Memory usage on this node: 24.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_28509_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_28509_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_28509_00000_0_2020-10-14_20-52-22/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_28509_00000])
