2020-11-05 10:19:39,631	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 15.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6a7bb_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=15997)[0m 2020-11-05 10:19:42,520	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=15954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15954)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15976)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15976)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15976)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15976)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15976)[0m *** SIGSEGV (@0x0) received by PID 15976 (TID 0x7f600196c700) from PID 0; stack trace: ***
[2m[36m(pid=15976)[0m     @     0x7f6001545390 (unknown)
[2m[36m(pid=15976)[0m     @     0x7f31014e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15976)[0m     @     0x7f3100c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15998)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15998)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15998)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15998)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15998)[0m *** SIGSEGV (@0x0) received by PID 15998 (TID 0x7f397c65e700) from PID 0; stack trace: ***
[2m[36m(pid=15998)[0m     @     0x7f397c237390 (unknown)
[2m[36m(pid=15998)[0m     @     0x7f0a7c0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15998)[0m     @     0x7f0a7b7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15998)[0m     @     0x7f0a7b7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=16006)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=16006)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=16006)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=16006)[0m PC: @                0x0 (unknown)
[2m[36m(pid=16006)[0m *** SIGSEGV (@0x0) received by PID 16006 (TID 0x7f26b3642700) from PID 0; stack trace: ***
[2m[36m(pid=16006)[0m     @     0x7f26b321b390 (unknown)
[2m[36m(pid=16006)[0m     @     0x7ef7b3124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=16006)[0m     @     0x7ef7b284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=16006)[0m     @     0x7ef7b28528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15947)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15947)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15947)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15947)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15947)[0m *** SIGSEGV (@0x0) received by PID 15947 (TID 0x7f7feb37f700) from PID 0; stack trace: ***
[2m[36m(pid=15947)[0m     @     0x7f7feaf58390 (unknown)
[2m[36m(pid=15947)[0m     @     0x7f50eaed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15947)[0m     @     0x7f50ea5fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15988)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15988)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15988)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15988)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15988)[0m *** SIGSEGV (@0x0) received by PID 15988 (TID 0x7fadc38cd700) from PID 0; stack trace: ***
[2m[36m(pid=15988)[0m     @     0x7fadc34a6390 (unknown)
[2m[36m(pid=15988)[0m     @     0x7f7ec343af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15980)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15980)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15980)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15980)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15980)[0m *** SIGSEGV (@0x0) received by PID 15980 (TID 0x7f8fd1b92700) from PID 0; stack trace: ***
[2m[36m(pid=15980)[0m     @     0x7f8fd176b390 (unknown)
[2m[36m(pid=15980)[0m     @     0x7f60d16f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15937)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15937)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15937)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15937)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15937)[0m *** SIGSEGV (@0x0) received by PID 15937 (TID 0x7f757c979700) from PID 0; stack trace: ***
[2m[36m(pid=15937)[0m     @     0x7f757c552390 (unknown)
[2m[36m(pid=15937)[0m     @     0x7f467c339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15937)[0m     @     0x7f467ba647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15999)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15999)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15999)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15999)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15999)[0m *** SIGSEGV (@0x0) received by PID 15999 (TID 0x7f40e0b1a700) from PID 0; stack trace: ***
[2m[36m(pid=15999)[0m     @     0x7f40e06f3390 (unknown)
[2m[36m(pid=15999)[0m     @     0x7f11e05f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15999)[0m     @     0x7f11dfd1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15961)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15961)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15961)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15961)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15961)[0m *** SIGSEGV (@0x0) received by PID 15961 (TID 0x7f90290a4700) from PID 0; stack trace: ***
[2m[36m(pid=15961)[0m     @     0x7f9028c7d390 (unknown)
[2m[36m(pid=15961)[0m     @     0x7f6128b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15961)[0m     @     0x7f61282667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15961)[0m     @     0x7f61282698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15993)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15993)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15993)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15993)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15993)[0m *** SIGSEGV (@0x0) received by PID 15993 (TID 0x7f96d8e86700) from PID 0; stack trace: ***
[2m[36m(pid=15993)[0m     @     0x7f96d8a5f390 (unknown)
[2m[36m(pid=15993)[0m     @     0x7f67d8774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15993)[0m     @     0x7f67d7e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15953)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15953)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15953)[0m *** SIGSEGV (@0x0) received by PID 15953 (TID 0x7fa9bd505700) from PID 0; stack trace: ***
[2m[36m(pid=15953)[0m     @     0x7fa9bd0de390 (unknown)
[2m[36m(pid=15953)[0m     @     0x7f7abd088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15953)[0m     @     0x7f7abc7b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15970)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15970)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15970)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15970)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15970)[0m *** SIGSEGV (@0x0) received by PID 15970 (TID 0x7fba0b06c700) from PID 0; stack trace: ***
[2m[36m(pid=15970)[0m     @     0x7fba0ac45390 (unknown)
[2m[36m(pid=15970)[0m     @     0x7f8b0abd0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15970)[0m     @     0x7f8b0a2fb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15946)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15946)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15946)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15946)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15946)[0m *** SIGSEGV (@0x0) received by PID 15946 (TID 0x7fec064b8700) from PID 0; stack trace: ***
[2m[36m(pid=15946)[0m     @     0x7fec06091390 (unknown)
[2m[36m(pid=15946)[0m     @     0x7fbd06028f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15946)[0m     @     0x7fbd057537db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15940)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15940)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15940)[0m *** SIGSEGV (@0x0) received by PID 15940 (TID 0x7fe4bc121700) from PID 0; stack trace: ***
[2m[36m(pid=15940)[0m     @     0x7fe4bbcfa390 (unknown)
[2m[36m(pid=15940)[0m     @     0x7fb5bbaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15940)[0m     @     0x7fb5bb2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15979)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15979)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15979)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15979)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15979)[0m *** SIGSEGV (@0x0) received by PID 15979 (TID 0x7f76d554f700) from PID 0; stack trace: ***
[2m[36m(pid=15979)[0m     @     0x7f76d5128390 (unknown)
[2m[36m(pid=15979)[0m     @     0x7f47d50b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15979)[0m     @     0x7f47d47e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15973)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15973)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15973)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15973)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15973)[0m *** SIGSEGV (@0x0) received by PID 15973 (TID 0x7fc9ff177700) from PID 0; stack trace: ***
[2m[36m(pid=15973)[0m     @     0x7fc9fed50390 (unknown)
[2m[36m(pid=15973)[0m     @     0x7f9afecfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15973)[0m     @     0x7f9afe4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15929)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15929)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15929)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15929)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15929)[0m *** SIGSEGV (@0x0) received by PID 15929 (TID 0x7f3784fed700) from PID 0; stack trace: ***
[2m[36m(pid=15929)[0m     @     0x7f3784bc6390 (unknown)
[2m[36m(pid=15929)[0m     @     0x7f0884b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15929)[0m     @     0x7f08842667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15954)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15954)[0m *** SIGSEGV (@0x0) received by PID 15954 (TID 0x7ff45a8c7700) from PID 0; stack trace: ***
[2m[36m(pid=15954)[0m     @     0x7ff45a4a0390 (unknown)
[2m[36m(pid=15954)[0m     @     0x7fc55a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15954)[0m     @     0x7fc559a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15976)[0m     @     0x7f3100c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15998)[0m     @     0x7f0a7b7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=16006)[0m     @     0x7ef7b2852ad3 at::TensorIterator::for_each()
[2m[36m(pid=15947)[0m     @     0x7f50ea6018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15988)[0m     @     0x7f7ec2b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15980)[0m     @     0x7f60d0e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15937)[0m     @     0x7f467ba678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15999)[0m     @     0x7f11dfd228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15999)[0m     @     0x7f11dfd22ad3 at::TensorIterator::for_each()
[2m[36m(pid=15961)[0m     @     0x7f6128269ad3 at::TensorIterator::for_each()
[2m[36m(pid=15993)[0m     @     0x7f67d7ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15953)[0m     @     0x7f7abc7b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15953)[0m     @     0x7f7abc7b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=15970)[0m     @     0x7f8b0a2fe8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15946)[0m     @     0x7fbd057568f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15940)[0m     @     0x7fb5bb2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15870)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15870)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15870)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15879)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15879)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15879)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15926)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15926)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15926)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15875)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15875)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15875)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=16009)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=16009)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=16009)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15882)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15882)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15885)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15885)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15979)[0m     @     0x7f47d47e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15979)[0m     @     0x7f47d47e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=15931)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15931)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15931)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15973)[0m     @     0x7f9afe42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15973)[0m     @     0x7f9afe42aad3 at::TensorIterator::for_each()
[2m[36m(pid=15973)[0m     @     0x7f9afe42ad91 at::TensorIterator::for_each()
[2m[36m(pid=15943)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15943)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15943)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15951)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15951)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15951)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15968)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15968)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15968)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15898)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15898)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15898)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15929)[0m     @     0x7f08842698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15929)[0m     @     0x7f0884269ad3 at::TensorIterator::for_each()
[2m[36m(pid=15923)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15923)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15923)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15954)[0m     @     0x7fc559a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15954)[0m     @     0x7fc559a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=15995)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15995)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15995)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15869)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15869)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15869)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15983)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15983)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15983)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15900)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15900)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15900)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15884)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15884)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15884)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15896)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15896)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15896)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15902)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15902)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15902)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15976)[0m     @     0x7f3100c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=15976)[0m     @     0x7f3100c11d91 at::TensorIterator::for_each()
[2m[36m(pid=15976)[0m     @     0x7f31014f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15976)[0m     @     0x7f3101517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15998)[0m     @     0x7f0a7b7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=15998)[0m     @     0x7f0a7c0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15998)[0m     @     0x7f0a7c101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=16006)[0m     @     0x7ef7b2852d91 at::TensorIterator::for_each()
[2m[36m(pid=16006)[0m     @     0x7ef7b3135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=16006)[0m     @     0x7ef7b3158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=16006)[0m     @     0x7ef7b25faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15947)[0m     @     0x7f50ea601ad3 at::TensorIterator::for_each()
[2m[36m(pid=15947)[0m     @     0x7f50ea601d91 at::TensorIterator::for_each()
[2m[36m(pid=15947)[0m     @     0x7f50eaee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15947)[0m     @     0x7f50eaf07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15934)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15934)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15934)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15934)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15934)[0m *** SIGSEGV (@0x0) received by PID 15934 (TID 0x7f1b032d9700) from PID 0; stack trace: ***
[2m[36m(pid=15934)[0m     @     0x7f1b02eb2390 (unknown)
[2m[36m(pid=15988)[0m     @     0x7f7ec2b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15988)[0m     @     0x7f7ec2b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=15980)[0m     @     0x7f60d0e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15980)[0m     @     0x7f60d0e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=15901)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15901)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15901)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15952)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15952)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15952)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15952)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15945)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15945)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15945)[0m *** SIGSEGV (@0x0) received by PID 15945 (TID 0x7f55a447d700) from PID 0; stack trace: ***
[2m[36m(pid=15883)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15883)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15883)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15883)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15883)[0m *** SIGSEGV (@0x0) received by PID 15883 (TID 0x7f94129b3700) from PID 0; stack trace: ***
[2m[36m(pid=15883)[0m     @     0x7f941258c390 (unknown)
[2m[36m(pid=15959)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15959)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15959)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15975)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15975)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15975)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15874)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15874)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15874)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15889)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15889)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15889)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15888)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15888)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15888)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15986)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15986)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15986)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15937)[0m     @     0x7f467ba67ad3 at::TensorIterator::for_each()
[2m[36m(pid=15937)[0m     @     0x7f467ba67d91 at::TensorIterator::for_each()
[2m[36m(pid=15937)[0m     @     0x7f467c34ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15937)[0m     @     0x7f467c36dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15999)[0m     @     0x7f11dfd22d91 at::TensorIterator::for_each()
[2m[36m(pid=15999)[0m     @     0x7f11e0605b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15999)[0m     @     0x7f11e0628c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15961)[0m     @     0x7f6128269d91 at::TensorIterator::for_each()
[2m[36m(pid=15961)[0m     @     0x7f6128b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15961)[0m     @     0x7f6128b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15961)[0m     @     0x7f6128011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15993)[0m     @     0x7f67d7ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=15953)[0m     @     0x7f7abc7b6d91 at::TensorIterator::for_each()
[2m[36m(pid=15953)[0m     @     0x7f7abd099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15953)[0m     @     0x7f7abd0bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15953)[0m     @     0x7f7abc55ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15925)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15925)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15925)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15925)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15925)[0m *** SIGSEGV (@0x0) received by PID 15925 (TID 0x7fc6c537b700) from PID 0; stack trace: ***
[2m[36m(pid=15925)[0m     @     0x7fc6c4f54390 (unknown)
[2m[36m(pid=15925)[0m     @     0x7f97c4eacf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15970)[0m     @     0x7f8b0a2fead3 at::TensorIterator::for_each()
[2m[36m(pid=15946)[0m     @     0x7fbd05756ad3 at::TensorIterator::for_each()
[2m[36m(pid=15946)[0m     @     0x7fbd05756d91 at::TensorIterator::for_each()
[2m[36m(pid=15946)[0m     @     0x7fbd06039b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15940)[0m     @     0x7fb5bb223ad3 at::TensorIterator::for_each()
[2m[36m(pid=15940)[0m     @     0x7fb5bb223d91 at::TensorIterator::for_each()
[2m[36m(pid=15940)[0m     @     0x7fb5bbb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15940)[0m     @     0x7fb5bbb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=16004)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=16004)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=16004)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=16004)[0m PC: @                0x0 (unknown)
[2m[36m(pid=16004)[0m *** SIGSEGV (@0x0) received by PID 16004 (TID 0x7fae268c7700) from PID 0; stack trace: ***
[2m[36m(pid=16004)[0m     @     0x7fae264a0390 (unknown)
[2m[36m(pid=15870)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15870)[0m *** SIGSEGV (@0x0) received by PID 15870 (TID 0x7f15d6b4e700) from PID 0; stack trace: ***
[2m[36m(pid=15870)[0m     @     0x7f15d6727390 (unknown)
[2m[36m(pid=15870)[0m     @     0x7ee6d64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15870)[0m     @     0x7ee6d5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15879)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15879)[0m *** SIGSEGV (@0x0) received by PID 15879 (TID 0x7f647c858700) from PID 0; stack trace: ***
[2m[36m(pid=15879)[0m     @     0x7f647c431390 (unknown)
[2m[36m(pid=15879)[0m     @     0x7f357c3e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15879)[0m     @     0x7f357bb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15879)[0m     @     0x7f357bb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15926)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15926)[0m *** SIGSEGV (@0x0) received by PID 15926 (TID 0x7fac942fa700) from PID 0; stack trace: ***
[2m[36m(pid=15926)[0m     @     0x7fac93ed3390 (unknown)
[2m[36m(pid=15926)[0m     @     0x7f7d93e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15926)[0m     @     0x7f7d935367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15875)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15875)[0m *** SIGSEGV (@0x0) received by PID 15875 (TID 0x7fdc9465a700) from PID 0; stack trace: ***
[2m[36m(pid=15875)[0m     @     0x7fdc94233390 (unknown)
[2m[36m(pid=15875)[0m     @     0x7fad9401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15875)[0m     @     0x7fad937477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=16009)[0m PC: @                0x0 (unknown)
[2m[36m(pid=16009)[0m *** SIGSEGV (@0x0) received by PID 16009 (TID 0x7f7ad49b2700) from PID 0; stack trace: ***
[2m[36m(pid=16009)[0m     @     0x7f7ad458b390 (unknown)
[2m[36m(pid=16009)[0m     @     0x7f4bd44f6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=16009)[0m     @     0x7f4bd3c217db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15882)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15882)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15882)[0m *** SIGSEGV (@0x0) received by PID 15882 (TID 0x7fcd45663700) from PID 0; stack trace: ***
[2m[36m(pid=15882)[0m     @     0x7fcd4523c390 (unknown)
[2m[36m(pid=15882)[0m     @     0x7f9e450b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15882)[0m     @     0x7f9e447e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15882)[0m     @     0x7f9e447e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15885)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15885)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15885)[0m *** SIGSEGV (@0x0) received by PID 15885 (TID 0x7f29eccef700) from PID 0; stack trace: ***
[2m[36m(pid=15885)[0m     @     0x7f29ec8c8390 (unknown)
[2m[36m(pid=15885)[0m     @     0x7efaec870f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15885)[0m     @     0x7efaebf9b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15960)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15960)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15960)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15960)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15960)[0m *** SIGSEGV (@0x0) received by PID 15960 (TID 0x7f93c9e44700) from PID 0; stack trace: ***
[2m[36m(pid=15960)[0m     @     0x7f93c9a1d390 (unknown)
[2m[36m(pid=15960)[0m     @     0x7f64c97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15960)[0m     @     0x7f64c8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15979)[0m     @     0x7f47d47e3d91 at::TensorIterator::for_each()
[2m[36m(pid=15979)[0m     @     0x7f47d50c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15979)[0m     @     0x7f47d50e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15979)[0m     @     0x7f47d458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15979)[0m     @     0x7f47d4589388 at::native::copy_impl()
[2m[36m(pid=15931)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15931)[0m *** SIGSEGV (@0x0) received by PID 15931 (TID 0x7fd3c6ced700) from PID 0; stack trace: ***
[2m[36m(pid=15931)[0m     @     0x7fd3c68c6390 (unknown)
[2m[36m(pid=15931)[0m     @     0x7fa4c67bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15931)[0m     @     0x7fa4c5ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15973)[0m     @     0x7f9afed0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15973)[0m     @     0x7f9afed30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15973)[0m     @     0x7f9afe1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15973)[0m     @     0x7f9afe1d0388 at::native::copy_impl()
[2m[36m(pid=15973)[0m     @     0x7f9afe1d25a4 at::native::copy_()
[2m[36m(pid=15943)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15943)[0m *** SIGSEGV (@0x0) received by PID 15943 (TID 0x7f35d1171700) from PID 0; stack trace: ***
[2m[36m(pid=15943)[0m     @     0x7f35d0d4a390 (unknown)
[2m[36m(pid=15943)[0m     @     0x7f06d0c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15943)[0m     @     0x7f06d039f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15951)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15951)[0m *** SIGSEGV (@0x0) received by PID 15951 (TID 0x7fc8dae04700) from PID 0; stack trace: ***
[2m[36m(pid=15951)[0m     @     0x7fc8da9dd390 (unknown)
[2m[36m(pid=15951)[0m     @     0x7f99da70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15951)[0m     @     0x7f99d9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15951)[0m     @     0x7f99d9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15991)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15991)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15991)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15991)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15991)[0m *** SIGSEGV (@0x0) received by PID 15991 (TID 0x7f12b1838700) from PID 0; stack trace: ***
[2m[36m(pid=15991)[0m     @     0x7f12b1411390 (unknown)
[2m[36m(pid=15991)[0m     @     0x7ee3b139ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15968)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15968)[0m *** SIGSEGV (@0x0) received by PID 15968 (TID 0x7f75c10e4700) from PID 0; stack trace: ***
[2m[36m(pid=15968)[0m     @     0x7f75c0cbd390 (unknown)
[2m[36m(pid=15968)[0m     @     0x7f46c0c1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15968)[0m     @     0x7f46c034a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15878)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15878)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15878)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15878)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15878)[0m *** SIGSEGV (@0x0) received by PID 15878 (TID 0x7fd65079d700) from PID 0; stack trace: ***
[2m[36m(pid=15878)[0m     @     0x7fd650376390 (unknown)
[2m[36m(pid=15878)[0m     @     0x7fa7500c0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15878)[0m     @     0x7fa74f7eb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15898)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15898)[0m *** SIGSEGV (@0x0) received by PID 15898 (TID 0x7f3eaf36e700) from PID 0; stack trace: ***
[2m[36m(pid=15898)[0m     @     0x7f3eaef47390 (unknown)
[2m[36m(pid=15898)[0m     @     0x7f0faeed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15898)[0m     @     0x7f0fae5fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15898)[0m     @     0x7f0fae6018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15929)[0m     @     0x7f0884269d91 at::TensorIterator::for_each()
[2m[36m(pid=15929)[0m     @     0x7f0884b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15929)[0m     @     0x7f0884b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15929)[0m     @     0x7f0884011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15929)[0m     @     0x7f088400f388 at::native::copy_impl()
[2m[36m(pid=15923)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15923)[0m *** SIGSEGV (@0x0) received by PID 15923 (TID 0x7f2740885700) from PID 0; stack trace: ***
[2m[36m(pid=15923)[0m     @     0x7f274045e390 (unknown)
[2m[36m(pid=15923)[0m     @     0x7ef8403e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15923)[0m     @     0x7ef83fb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15923)[0m     @     0x7ef83fb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15948)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15948)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15948)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15948)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15948)[0m *** SIGSEGV (@0x0) received by PID 15948 (TID 0x7f0ef1664700) from PID 0; stack trace: ***
[2m[36m(pid=15948)[0m     @     0x7f0ef123d390 (unknown)
[2m[36m(pid=15948)[0m     @     0x7edff1166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15954)[0m     @     0x7fc559a79d91 at::TensorIterator::for_each()
[2m[36m(pid=15954)[0m     @     0x7fc55a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15954)[0m     @     0x7fc55a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15954)[0m     @     0x7fc559821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15954)[0m     @     0x7fc55981f388 at::native::copy_impl()
[2m[36m(pid=15950)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15950)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15950)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15950)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15950)[0m *** SIGSEGV (@0x0) received by PID 15950 (TID 0x7eff9b2b2700) from PID 0; stack trace: ***
[2m[36m(pid=15950)[0m     @     0x7eff9ae8b390 (unknown)
[2m[36m(pid=15950)[0m     @     0x7ed09ae26f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15950)[0m     @     0x7ed09a5517db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15891)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15891)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15891)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15891)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15891)[0m *** SIGSEGV (@0x0) received by PID 15891 (TID 0x7f8a86dc5700) from PID 0; stack trace: ***
[2m[36m(pid=15891)[0m     @     0x7f8a8699e390 (unknown)
[2m[36m(pid=15891)[0m     @     0x7f5b867bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15891)[0m     @     0x7f5b85ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15956)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15956)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15956)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15956)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15956)[0m *** SIGSEGV (@0x0) received by PID 15956 (TID 0x7f9eb9d71700) from PID 0; stack trace: ***
[2m[36m(pid=15956)[0m     @     0x7f9eb994a390 (unknown)
[2m[36m(pid=15880)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15880)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15880)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15880)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15880)[0m *** SIGSEGV (@0x0) received by PID 15880 (TID 0x7fd388ca7700) from PID 0; stack trace: ***
[2m[36m(pid=15880)[0m     @     0x7fd388880390 (unknown)
[2m[36m(pid=15880)[0m     @     0x7fa48867df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15880)[0m     @     0x7fa487da87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15967)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15967)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15967)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15967)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15967)[0m *** SIGSEGV (@0x0) received by PID 15967 (TID 0x7f242f204700) from PID 0; stack trace: ***
[2m[36m(pid=15967)[0m     @     0x7f242eddd390 (unknown)
[2m[36m(pid=15967)[0m     @     0x7ef52ed83f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15967)[0m     @     0x7ef52e4ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15893)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15893)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15893)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15893)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15893)[0m *** SIGSEGV (@0x0) received by PID 15893 (TID 0x7f96b3e0a700) from PID 0; stack trace: ***
[2m[36m(pid=15893)[0m     @     0x7f96b39e3390 (unknown)
[2m[36m(pid=15893)[0m     @     0x7f67b38def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15893)[0m     @     0x7f67b30097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15872)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15872)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15872)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15872)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15872)[0m *** SIGSEGV (@0x0) received by PID 15872 (TID 0x7f77788a3700) from PID 0; stack trace: ***
[2m[36m(pid=15872)[0m     @     0x7f777847c390 (unknown)
[2m[36m(pid=15872)[0m     @     0x7f4878333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15872)[0m     @     0x7f4877a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15871)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15871)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15871)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15871)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15871)[0m *** SIGSEGV (@0x0) received by PID 15871 (TID 0x7fc0efc0c700) from PID 0; stack trace: ***
[2m[36m(pid=15871)[0m     @     0x7fc0ef7e5390 (unknown)
[2m[36m(pid=15871)[0m     @     0x7f91ef61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15871)[0m     @     0x7f91eed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15871)[0m     @     0x7f91eed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15897)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15897)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15897)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15897)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15897)[0m *** SIGSEGV (@0x0) received by PID 15897 (TID 0x7f434fc55700) from PID 0; stack trace: ***
[2m[36m(pid=15897)[0m     @     0x7f434f82e390 (unknown)
[2m[36m(pid=15890)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15890)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15890)[0m *** Aborted at 1604571587 (unix time) try "date -d @1604571587" if you are using GNU date ***
[2m[36m(pid=15890)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15890)[0m *** SIGSEGV (@0x0) received by PID 15890 (TID 0x7fdfcb10d700) from PID 0; stack trace: ***
[2m[36m(pid=15890)[0m     @     0x7fdfcace6390 (unknown)
[2m[36m(pid=15890)[0m     @     0x7fb0cac6af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15890)[0m     @     0x7fb0ca3957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15873)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15873)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15873)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15873)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15873)[0m *** SIGSEGV (@0x0) received by PID 15873 (TID 0x7fa65c9fb700) from PID 0; stack trace: ***
[2m[36m(pid=15966)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15966)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15966)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15966)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15966)[0m *** SIGSEGV (@0x0) received by PID 15966 (TID 0x7f1791924700) from PID 0; stack trace: ***
[2m[36m(pid=15966)[0m     @     0x7f17914fd390 (unknown)
[2m[36m(pid=15966)[0m     @     0x7ee8912daf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15966)[0m     @     0x7ee890a057db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15887)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15887)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15887)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15887)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15887)[0m *** SIGSEGV (@0x0) received by PID 15887 (TID 0x7f7d62406700) from PID 0; stack trace: ***
[2m[36m(pid=15886)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15886)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15886)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15886)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15886)[0m *** SIGSEGV (@0x0) received by PID 15886 (TID 0x7f4a507f8700) from PID 0; stack trace: ***
[2m[36m(pid=15886)[0m     @     0x7f4a503d1390 (unknown)
[2m[36m(pid=15886)[0m     @     0x7f1b50333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15927)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15927)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15927)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15927)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15927)[0m *** SIGSEGV (@0x0) received by PID 15927 (TID 0x7f51b6237700) from PID 0; stack trace: ***
[2m[36m(pid=15927)[0m     @     0x7f51b5e10390 (unknown)
[2m[36m(pid=15927)[0m     @     0x7f22b5da4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15927)[0m     @     0x7f22b54cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15877)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15877)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15877)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15877)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15877)[0m *** SIGSEGV (@0x0) received by PID 15877 (TID 0x7f943b74d700) from PID 0; stack trace: ***
[2m[36m(pid=15877)[0m     @     0x7f943b326390 (unknown)
[2m[36m(pid=15941)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15941)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15941)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15941)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15941)[0m *** SIGSEGV (@0x0) received by PID 15941 (TID 0x7fa316b41700) from PID 0; stack trace: ***
[2m[36m(pid=15941)[0m     @     0x7fa31671a390 (unknown)
[2m[36m(pid=15941)[0m     @     0x7f741657cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15941)[0m     @     0x7f7415ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15899)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15899)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15899)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15899)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15899)[0m *** SIGSEGV (@0x0) received by PID 15899 (TID 0x7fe2c39da700) from PID 0; stack trace: ***
[2m[36m(pid=15899)[0m     @     0x7fe2c35b3390 (unknown)
[2m[36m(pid=15899)[0m     @     0x7fb3c354df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15899)[0m     @     0x7fb3c2c787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15995)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15995)[0m *** SIGSEGV (@0x0) received by PID 15995 (TID 0x7efe1ad28700) from PID 0; stack trace: ***
[2m[36m(pid=15995)[0m     @     0x7efe1a901390 (unknown)
[2m[36m(pid=15995)[0m     @     0x7ecf1a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15995)[0m     @     0x7ecf19ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15995)[0m     @     0x7ecf19ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15869)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15869)[0m *** SIGSEGV (@0x0) received by PID 15869 (TID 0x7efd5c64a700) from PID 0; stack trace: ***
[2m[36m(pid=15869)[0m     @     0x7efd5c223390 (unknown)
[2m[36m(pid=15869)[0m     @     0x7ece5c0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15869)[0m     @     0x7ece5b7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15869)[0m     @     0x7ece5b7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15983)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15983)[0m *** SIGSEGV (@0x0) received by PID 15983 (TID 0x7f69166d0700) from PID 0; stack trace: ***
[2m[36m(pid=15983)[0m     @     0x7f69162a9390 (unknown)
[2m[36m(pid=15983)[0m     @     0x7f3a16239f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15983)[0m     @     0x7f3a159647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15983)[0m     @     0x7f3a159678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15900)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15900)[0m *** SIGSEGV (@0x0) received by PID 15900 (TID 0x7fa339c4f700) from PID 0; stack trace: ***
[2m[36m(pid=15900)[0m     @     0x7fa339828390 (unknown)
[2m[36m(pid=15900)[0m     @     0x7f74396f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15900)[0m     @     0x7f7438e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15900)[0m     @     0x7f7438e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15939)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15939)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15939)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15884)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15884)[0m *** SIGSEGV (@0x0) received by PID 15884 (TID 0x7f912125e700) from PID 0; stack trace: ***
[2m[36m(pid=15884)[0m     @     0x7f9120e37390 (unknown)
[2m[36m(pid=15884)[0m     @     0x7f6220dc9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15884)[0m     @     0x7f62204f47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15884)[0m     @     0x7f62204f78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15884)[0m     @     0x7f62204f7ad3 at::TensorIterator::for_each()
[2m[36m(pid=15896)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15896)[0m *** SIGSEGV (@0x0) received by PID 15896 (TID 0x7f06c37cd700) from PID 0; stack trace: ***
[2m[36m(pid=15896)[0m     @     0x7f06c33a6390 (unknown)
[2m[36m(pid=15896)[0m     @     0x7ed7c334df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15896)[0m     @     0x7ed7c2a787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15896)[0m     @     0x7ed7c2a7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15902)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15902)[0m *** SIGSEGV (@0x0) received by PID 15902 (TID 0x7f5e9305e700) from PID 0; stack trace: ***
[2m[36m(pid=15902)[0m     @     0x7f5e92c37390 (unknown)
[2m[36m(pid=15902)[0m     @     0x7f2f92bd0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15902)[0m     @     0x7f2f922fb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15902)[0m     @     0x7f2f922fe8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15932)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15932)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15932)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15932)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15932)[0m *** SIGSEGV (@0x0) received by PID 15932 (TID 0x7f29b48c1700) from PID 0; stack trace: ***
[2m[36m(pid=15932)[0m     @     0x7f29b449a390 (unknown)
[2m[36m(pid=15932)[0m     @     0x7efab4136f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15932)[0m     @     0x7efab38617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15932)[0m     @     0x7efab38648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15976)[0m     @     0x7f31009b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15976)[0m     @     0x7f31009b7388 at::native::copy_impl()
[2m[36m(pid=15976)[0m     @     0x7f31009b95a4 at::native::copy_()
[2m[36m(pid=15976)[0m     @     0x7f31010a44f5 at::Tensor::copy_()
[2m[36m(pid=15976)[0m     @     0x7f31035778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15976)[0m     @     0x7f31010a44f5 at::Tensor::copy_()
[2m[36m(pid=15976)[0m     @     0x7f310714f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15976)[0m     @     0x5653f352ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15976)[0m     @     0x5653f348ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15976)[0m     @     0x5653f3515baf _PyEval_EvalCodeWithName
[2m[36m(pid=15976)[0m     @     0x5653f3516a20 method_vectorcall
[2m[36m(pid=15976)[0m     @     0x5653f348abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15976)[0m     @     0x5653f3515baf _PyEval_EvalCodeWithName
[2m[36m(pid=15976)[0m     @     0x5653f3516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15976)[0m     @     0x5653f348b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15976)[0m     @     0x5653f3515baf _PyEval_EvalCodeWithName
[2m[36m(pid=15976)[0m     @     0x5653f3516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15976)[0m     @     0x5653f348b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15976)[0m     @     0x5653f3515baf _PyEval_EvalCodeWithName
[2m[36m(pid=15976)[0m     @     0x5653f3516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15976)[0m     @     0x5653f348b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15976)[0m     @     0x5653f3515baf _PyEval_EvalCodeWithName
[2m[36m(pid=15976)[0m     @     0x5653f3516643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15976)[0m     @     0x5653f348b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15998)[0m     @     0x7f0a7b5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15998)[0m     @     0x7f0a7b5a1388 at::native::copy_impl()
[2m[36m(pid=15998)[0m     @     0x7f0a7b5a35a4 at::native::copy_()
[2m[36m(pid=15998)[0m     @     0x7f0a7bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=15998)[0m     @     0x7f0a7e1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=16006)[0m     @     0x7ef7b25f8388 at::native::copy_impl()
[2m[36m(pid=16006)[0m     @     0x7ef7b25fa5a4 at::native::copy_()
[2m[36m(pid=16006)[0m     @     0x7ef7b2ce54f5 at::Tensor::copy_()
[2m[36m(pid=16006)[0m     @     0x7ef7b51b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15947)[0m     @     0x7f50ea3a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15947)[0m     @     0x7f50ea3a7388 at::native::copy_impl()
[2m[36m(pid=15947)[0m     @     0x7f50ea3a95a4 at::native::copy_()
[2m[36m(pid=15947)[0m     @     0x7f50eaa944f5 at::Tensor::copy_()
[2m[36m(pid=15947)[0m     @     0x7f50ecf678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15934)[0m     @     0x7eec02e66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15934)[0m     @     0x7eec025917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15934)[0m     @     0x7eec025948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15934)[0m     @     0x7eec02594ad3 at::TensorIterator::for_each()
[2m[36m(pid=15934)[0m     @     0x7eec02594d91 at::TensorIterator::for_each()
[2m[36m(pid=15988)[0m     @     0x7f7ec2b68d91 at::TensorIterator::for_each()
[2m[36m(pid=15988)[0m     @     0x7f7ec344bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15988)[0m     @     0x7f7ec346ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15988)[0m     @     0x7f7ec2910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15988)[0m     @     0x7f7ec290e388 at::native::copy_impl()
[2m[36m(pid=15988)[0m     @     0x7f7ec29105a4 at::native::copy_()
[2m[36m(pid=15980)[0m     @     0x7f60d0e22d91 at::TensorIterator::for_each()
[2m[36m(pid=15980)[0m     @     0x7f60d1705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15980)[0m     @     0x7f60d1728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15980)[0m     @     0x7f60d0bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15980)[0m     @     0x7f60d0bc8388 at::native::copy_impl()
[2m[36m(pid=15980)[0m     @     0x7f60d0bca5a4 at::native::copy_()
[2m[36m(pid=15901)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15901)[0m *** SIGSEGV (@0x0) received by PID 15901 (TID 0x7f55546db700) from PID 0; stack trace: ***
[2m[36m(pid=15901)[0m     @     0x7f55542b4390 (unknown)
[2m[36m(pid=15901)[0m     @     0x7f2654250f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15901)[0m     @     0x7f265397b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15901)[0m     @     0x7f265397e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15901)[0m     @     0x7f265397ead3 at::TensorIterator::for_each()
[2m[36m(pid=15952)[0m *** SIGSEGV (@0x0) received by PID 15952 (TID 0x7f7ab52c4700) from PID 0; stack trace: ***
[2m[36m(pid=15952)[0m     @     0x7f7ab4e9d390 (unknown)
[2m[36m(pid=15952)[0m     @     0x7f4bb4e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15952)[0m     @     0x7f4bb45627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15952)[0m     @     0x7f4bb45658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15952)[0m     @     0x7f4bb4565ad3 at::TensorIterator::for_each()
[2m[36m(pid=15945)[0m     @     0x7f55a4056390 (unknown)
[2m[36m(pid=15945)[0m     @     0x7f26a3ffbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15945)[0m     @     0x7f26a37267db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15945)[0m     @     0x7f26a37298f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15945)[0m     @     0x7f26a3729ad3 at::TensorIterator::for_each()
[2m[36m(pid=15883)[0m     @     0x7f65124f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15883)[0m     @     0x7f6511c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15883)[0m     @     0x7f6511c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15883)[0m     @     0x7f6511c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=15883)[0m     @     0x7f6511c27d91 at::TensorIterator::for_each()
[2m[36m(pid=15949)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15949)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15949)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15949)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15949)[0m *** SIGSEGV (@0x0) received by PID 15949 (TID 0x7f5dee0d8700) from PID 0; stack trace: ***
[2m[36m(pid=15949)[0m     @     0x7f5dedcb1390 (unknown)
[2m[36m(pid=15949)[0m     @     0x7f2eedc51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15949)[0m     @     0x7f2eed37c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15959)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15959)[0m *** SIGSEGV (@0x0) received by PID 15959 (TID 0x7fc0301c6700) from PID 0; stack trace: ***
[2m[36m(pid=15959)[0m     @     0x7fc02fd9f390 (unknown)
[2m[36m(pid=15959)[0m     @     0x7f912fd39f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15959)[0m     @     0x7f912f4647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15959)[0m     @     0x7f912f4678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15959)[0m     @     0x7f912f467ad3 at::TensorIterator::for_each()
[2m[36m(pid=15975)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15975)[0m *** SIGSEGV (@0x0) received by PID 15975 (TID 0x7fc179d5b700) from PID 0; stack trace: ***
[2m[36m(pid=15975)[0m     @     0x7fc179934390 (unknown)
[2m[36m(pid=15975)[0m     @     0x7f92797f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15975)[0m     @     0x7f9278f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15975)[0m     @     0x7f9278f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15975)[0m     @     0x7f9278f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=15874)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15874)[0m *** SIGSEGV (@0x0) received by PID 15874 (TID 0x7fcecd240700) from PID 0; stack trace: ***
[2m[36m(pid=15874)[0m     @     0x7fcecce19390 (unknown)
[2m[36m(pid=15874)[0m     @     0x7f9fccc1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15874)[0m     @     0x7f9fcc34a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15874)[0m     @     0x7f9fcc34d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15874)[0m     @     0x7f9fcc34dad3 at::TensorIterator::for_each()
[2m[36m(pid=15889)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15889)[0m *** SIGSEGV (@0x0) received by PID 15889 (TID 0x7f80bde8c700) from PID 0; stack trace: ***
[2m[36m(pid=15889)[0m     @     0x7f80bda65390 (unknown)
[2m[36m(pid=15889)[0m     @     0x7f51bd701f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15889)[0m     @     0x7f51bce2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15889)[0m     @     0x7f51bce2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15889)[0m     @     0x7f51bce2fad3 at::TensorIterator::for_each()
[2m[36m(pid=15888)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15888)[0m *** SIGSEGV (@0x0) received by PID 15888 (TID 0x7fa180b64700) from PID 0; stack trace: ***
[2m[36m(pid=15888)[0m     @     0x7fa18073d390 (unknown)
[2m[36m(pid=15888)[0m     @     0x7f728060ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15888)[0m     @     0x7f727fd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15888)[0m     @     0x7f727fd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15888)[0m     @     0x7f727fd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=15963)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15963)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15963)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15963)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15963)[0m *** SIGSEGV (@0x0) received by PID 15963 (TID 0x7f74fd524700) from PID 0; stack trace: ***
[2m[36m(pid=15963)[0m     @     0x7f74fd0fd390 (unknown)
[2m[36m(pid=15963)[0m     @     0x7f45fd088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15963)[0m     @     0x7f45fc7b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15963)[0m     @     0x7f45fc7b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15957)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15957)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15957)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15957)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15957)[0m *** SIGSEGV (@0x0) received by PID 15957 (TID 0x7fbd0eeff700) from PID 0; stack trace: ***
[2m[36m(pid=15957)[0m     @     0x7fbd0ead8390 (unknown)
[2m[36m(pid=15957)[0m     @     0x7f8e0ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15957)[0m     @     0x7f8e0e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15957)[0m     @     0x7f8e0e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=15868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=15868)[0m *** Aborted at 1604571588 (unix time) try "date -d @1604571588" if you are using GNU date ***
[2m[36m(pid=15868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15868)[0m *** SIGSEGV (@0x0) received by PID 15868 (TID 0x7fea30ec0700) from PID 0; stack trace: ***
[2m[36m(pid=15868)[0m     @     0x7fea30a99390 (unknown)
[2m[36m(pid=15868)[0m     @     0x7fbb30940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15986)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15986)[0m *** SIGSEGV (@0x0) received by PID 15986 (TID 0x7f1199d97700) from PID 0; stack trace: ***
[2m[36m(pid=15986)[0m     @     0x7f1199970390 (unknown)
[2m[36m(pid=15986)[0m     @     0x7ee2997f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15986)[0m     @     0x7ee298f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15986)[0m     @     0x7ee298f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15986)[0m     @     0x7ee298f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=15937)[0m     @     0x7f467b80fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15937)[0m     @     0x7f467b80d388 at::native::copy_impl()
[2m[36m(pid=15937)[0m     @     0x7f467b80f5a4 at::native::copy_()
[2m[36m(pid=15937)[0m     @     0x7f467befa4f5 at::Tensor::copy_()
[2m[36m(pid=15937)[0m     @     0x7f467e3cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15937)[0m     @     0x7f467befa4f5 at::Tensor::copy_()
[2m[36m(pid=15937)[0m     @     0x7f4681fa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15937)[0m     @     0x55a76ab9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15937)[0m     @     0x55a76aaf6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15937)[0m     @     0x55a76ab81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15937)[0m     @     0x55a76ab82a20 method_vectorcall
[2m[36m(pid=15937)[0m     @     0x55a76aaf6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15937)[0m     @     0x55a76ab81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15937)[0m     @     0x55a76ab82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15937)[0m     @     0x55a76aaf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15937)[0m     @     0x55a76ab81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15937)[0m     @     0x55a76ab82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15999)[0m     @     0x7f11dfacaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15999)[0m     @     0x7f11dfac8388 at::native::copy_impl()
[2m[36m(pid=15999)[0m     @     0x7f11dfaca5a4 at::native::copy_()
[2m[36m(pid=15999)[0m     @     0x7f11e01b54f5 at::Tensor::copy_()
[2m[36m(pid=15999)[0m     @     0x7f11e26888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15999)[0m     @     0x7f11e01b54f5 at::Tensor::copy_()
[2m[36m(pid=15999)[0m     @     0x7f11e626079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15999)[0m     @     0x55923d635fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15999)[0m     @     0x55923d590b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15999)[0m     @     0x55923d61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15999)[0m     @     0x55923d61ca20 method_vectorcall
[2m[36m(pid=15999)[0m     @     0x55923d590bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15999)[0m     @     0x55923d61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15999)[0m     @     0x55923d61c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15999)[0m     @     0x55923d591689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15999)[0m     @     0x55923d61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15961)[0m     @     0x7f612800f388 at::native::copy_impl()
[2m[36m(pid=15961)[0m     @     0x7f61280115a4 at::native::copy_()
[2m[36m(pid=15961)[0m     @     0x7f61286fc4f5 at::Tensor::copy_()
[2m[36m(pid=15961)[0m     @     0x7f612abcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15961)[0m     @     0x7f61286fc4f5 at::Tensor::copy_()
[2m[36m(pid=15961)[0m     @     0x7f612e7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15961)[0m     @     0x55d99280efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15961)[0m     @     0x55d992769b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15961)[0m     @     0x55d9927f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15961)[0m     @     0x55d9927f5a20 method_vectorcall
[2m[36m(pid=15961)[0m     @     0x55d992769bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15961)[0m     @     0x55d9927f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15961)[0m     @     0x55d9927f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15961)[0m     @     0x55d99276a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15961)[0m     @     0x55d9927f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15961)[0m     @     0x55d9927f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15961)[0m     @     0x55d99276a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15961)[0m     @     0x55d9927f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15961)[0m     @     0x55d9927f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15961)[0m     @     0x55d99276a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15961)[0m     @     0x55d9927f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15961)[0m     @     0x55d9927f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15961)[0m     @     0x55d99276a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15993)[0m     @     0x7f67d7ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=15993)[0m     @     0x7f67d8785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15993)[0m     @     0x7f67d87a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15993)[0m     @     0x7f67d7c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15993)[0m     @     0x7f67d7c48388 at::native::copy_impl()
[2m[36m(pid=15993)[0m     @     0x7f67d7c4a5a4 at::native::copy_()
[2m[36m(pid=15993)[0m     @     0x7f67d83354f5 at::Tensor::copy_()
[2m[36m(pid=15993)[0m     @     0x7f67da8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15953)[0m     @     0x7f7abc55c388 at::native::copy_impl()
[2m[36m(pid=15953)[0m     @     0x7f7abc55e5a4 at::native::copy_()
[2m[36m(pid=15953)[0m     @     0x7f7abcc494f5 at::Tensor::copy_()
[2m[36m(pid=15953)[0m     @     0x7f7abf11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15953)[0m     @     0x7f7abcc494f5 at::Tensor::copy_()
[2m[36m(pid=15953)[0m     @     0x7f7ac2cf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15953)[0m     @     0x5556fb01afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15953)[0m     @     0x5556faf75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15953)[0m     @     0x5556fb000baf _PyEval_EvalCodeWithName
[2m[36m(pid=15953)[0m     @     0x5556fb001a20 method_vectorcall
[2m[36m(pid=15953)[0m     @     0x5556faf75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15953)[0m     @     0x5556fb000baf _PyEval_EvalCodeWithName
[2m[36m(pid=15953)[0m     @     0x5556fb001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15953)[0m     @     0x5556faf76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15953)[0m     @     0x5556fb000baf _PyEval_EvalCodeWithName
[2m[36m(pid=15953)[0m     @     0x5556fb001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15953)[0m     @     0x5556faf76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15953)[0m     @     0x5556fb000baf _PyEval_EvalCodeWithName
[2m[36m(pid=15953)[0m     @     0x5556fb001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15953)[0m     @     0x5556faf76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15953)[0m     @     0x5556fb000baf _PyEval_EvalCodeWithName
[2m[36m(pid=15953)[0m     @     0x5556fb001643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15953)[0m     @     0x5556faf76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15925)[0m     @     0x7f97c45d77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15925)[0m     @     0x7f97c45da8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15925)[0m     @     0x7f97c45daad3 at::TensorIterator::for_each()
[2m[36m(pid=15925)[0m     @     0x7f97c45dad91 at::TensorIterator::for_each()
[2m[36m(pid=15925)[0m     @     0x7f97c4ebdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15925)[0m     @     0x7f97c4ee0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15970)[0m     @     0x7f8b0a2fed91 at::TensorIterator::for_each()
[2m[36m(pid=15970)[0m     @     0x7f8b0abe1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15970)[0m     @     0x7f8b0ac04c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15970)[0m     @     0x7f8b0a0a6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15970)[0m     @     0x7f8b0a0a4388 at::native::copy_impl()
[2m[36m(pid=15970)[0m     @     0x7f8b0a0a65a4 at::native::copy_()
[2m[36m(pid=15970)[0m     @     0x7f8b0a7914f5 at::Tensor::copy_()
[2m[36m(pid=15970)[0m     @     0x7f8b0cc648de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15946)[0m     @     0x7fbd0605cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15946)[0m     @     0x7fbd054fea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15946)[0m     @     0x7fbd054fc388 at::native::copy_impl()
[2m[36m(pid=15946)[0m     @     0x7fbd054fe5a4 at::native::copy_()
[2m[36m(pid=15946)[0m     @     0x7fbd05be94f5 at::Tensor::copy_()
[2m[36m(pid=15946)[0m     @     0x7fbd080bc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15940)[0m     @     0x7fb5bafcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15940)[0m     @     0x7fb5bafc9388 at::native::copy_impl()
[2m[36m(pid=15940)[0m     @     0x7fb5bafcb5a4 at::native::copy_()
[2m[36m(pid=15940)[0m     @     0x7fb5bb6b64f5 at::Tensor::copy_()
[2m[36m(pid=15940)[0m     @     0x7fb5bdb898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15940)[0m     @     0x7fb5bb6b64f5 at::Tensor::copy_()
[2m[36m(pid=15940)[0m     @     0x7fb5c176179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15940)[0m     @     0x55d484d6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15940)[0m     @     0x55d484cc5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15940)[0m     @     0x55d484d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15940)[0m     @     0x55d484d51a20 method_vectorcall
[2m[36m(pid=15940)[0m     @     0x55d484cc5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15940)[0m     @     0x55d484d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15940)[0m     @     0x55d484d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15940)[0m     @     0x55d484cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15940)[0m     @     0x55d484d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15940)[0m     @     0x55d484d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15940)[0m     @     0x55d484cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15940)[0m     @     0x55d484d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15940)[0m     @     0x55d484d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15940)[0m     @     0x55d484cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15940)[0m     @     0x55d484d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15940)[0m     @     0x55d484d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15940)[0m     @     0x55d484cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x7f7f2634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=16004)[0m     @     0x7f7f25a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=16004)[0m     @     0x7f7f25a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=16004)[0m     @     0x7f7f25a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=16004)[0m     @     0x7f7f25a79d91 at::TensorIterator::for_each()
[2m[36m(pid=16004)[0m     @     0x7f7f2635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=16004)[0m     @     0x7f7f2637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15870)[0m     @     0x7ee6d5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15870)[0m     @     0x7ee6d5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=15870)[0m     @     0x7ee6d5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=15870)[0m     @     0x7ee6d650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15870)[0m     @     0x7ee6d652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15879)[0m     @     0x7f357bb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=15879)[0m     @     0x7f357bb11d91 at::TensorIterator::for_each()
[2m[36m(pid=15879)[0m     @     0x7f357c3f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15879)[0m     @     0x7f357c417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15926)[0m     @     0x7f7d935398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15926)[0m     @     0x7f7d93539ad3 at::TensorIterator::for_each()
[2m[36m(pid=15926)[0m     @     0x7f7d93539d91 at::TensorIterator::for_each()
[2m[36m(pid=15926)[0m     @     0x7f7d93e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15926)[0m     @     0x7f7d93e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15875)[0m     @     0x7fad9374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15875)[0m     @     0x7fad9374aad3 at::TensorIterator::for_each()
[2m[36m(pid=15875)[0m     @     0x7fad9374ad91 at::TensorIterator::for_each()
[2m[36m(pid=16009)[0m     @     0x7f4bd3c248f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=16009)[0m     @     0x7f4bd3c24ad3 at::TensorIterator::for_each()
[2m[36m(pid=16009)[0m     @     0x7f4bd3c24d91 at::TensorIterator::for_each()
[2m[36m(pid=16009)[0m     @     0x7f4bd4507b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=16009)[0m     @     0x7f4bd452ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15882)[0m     @     0x7f9e447e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=15882)[0m     @     0x7f9e447e3d91 at::TensorIterator::for_each()
[2m[36m(pid=15882)[0m     @     0x7f9e450c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15882)[0m     @     0x7f9e450e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15885)[0m     @     0x7efaebf9e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15885)[0m     @     0x7efaebf9ead3 at::TensorIterator::for_each()
[2m[36m(pid=15885)[0m     @     0x7efaebf9ed91 at::TensorIterator::for_each()
[2m[36m(pid=15885)[0m     @     0x7efaec881b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15960)[0m     @     0x7f64c8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15960)[0m     @     0x7f64c8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=15960)[0m     @     0x7f64c8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=15960)[0m     @     0x7f64c980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15960)[0m     @     0x7f64c982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15979)[0m     @     0x7f47d458b5a4 at::native::copy_()
[2m[36m(pid=15979)[0m     @     0x7f47d4c764f5 at::Tensor::copy_()
[2m[36m(pid=15979)[0m     @     0x7f47d71498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15979)[0m     @     0x7f47d4c764f5 at::Tensor::copy_()
[2m[36m(pid=15979)[0m     @     0x7f47dad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15979)[0m     @     0x55e67a111fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15979)[0m     @     0x55e67a06cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15979)[0m     @     0x55e67a0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15931)[0m     @     0x7fa4c5ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15931)[0m     @     0x7fa4c5ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=15931)[0m     @     0x7fa4c5ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=15931)[0m     @     0x7fa4c67ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15931)[0m     @     0x7fa4c67efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15973)[0m     @     0x7f9afe8bd4f5 at::Tensor::copy_()
[2m[36m(pid=15973)[0m     @     0x7f9b00d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15973)[0m     @     0x7f9afe8bd4f5 at::Tensor::copy_()
[2m[36m(pid=15973)[0m     @     0x7f9b0496879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15973)[0m     @     0x5652944b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15973)[0m     @     0x565294414b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15973)[0m     @     0x56529449fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15973)[0m     @     0x5652944a0a20 method_vectorcall
[2m[36m(pid=15973)[0m     @     0x565294414bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15973)[0m     @     0x56529449fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15973)[0m     @     0x5652944a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15973)[0m     @     0x565294415689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15973)[0m     @     0x56529449fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15973)[0m     @     0x5652944a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15973)[0m     @     0x565294415689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15973)[0m     @     0x56529449fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15973)[0m     @     0x5652944a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15973)[0m     @     0x565294415689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15973)[0m     @     0x56529449fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15973)[0m     @     0x5652944a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15973)[0m     @     0x565294415689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15943)[0m     @     0x7f06d03a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15943)[0m     @     0x7f06d03a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=15943)[0m     @     0x7f06d03a2d91 at::TensorIterator::for_each()
[2m[36m(pid=15943)[0m     @     0x7f06d0c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15943)[0m     @     0x7f06d0ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15951)[0m     @     0x7f99d9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=15951)[0m     @     0x7f99d9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=15951)[0m     @     0x7f99da71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15951)[0m     @     0x7f99da73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15951)[0m     @     0x7f99d9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15951)[0m     @     0x7f99d9bde388 at::native::copy_impl()
[2m[36m(pid=15991)[0m     @     0x7ee3b0aca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15991)[0m     @     0x7ee3b0acd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15991)[0m     @     0x7ee3b0acdad3 at::TensorIterator::for_each()
[2m[36m(pid=15991)[0m     @     0x7ee3b0acdd91 at::TensorIterator::for_each()
[2m[36m(pid=15968)[0m     @     0x7f46c034d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15968)[0m     @     0x7f46c034dad3 at::TensorIterator::for_each()
[2m[36m(pid=15968)[0m     @     0x7f46c034dd91 at::TensorIterator::for_each()
[2m[36m(pid=15968)[0m     @     0x7f46c0c30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15968)[0m     @     0x7f46c0c53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15878)[0m     @     0x7fa74f7ee8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15878)[0m     @     0x7fa74f7eead3 at::TensorIterator::for_each()
[2m[36m(pid=15878)[0m     @     0x7fa74f7eed91 at::TensorIterator::for_each()
[2m[36m(pid=15898)[0m     @     0x7f0fae601ad3 at::TensorIterator::for_each()
[2m[36m(pid=15898)[0m     @     0x7f0fae601d91 at::TensorIterator::for_each()
[2m[36m(pid=15898)[0m     @     0x7f0faeee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15898)[0m     @     0x7f0faef07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15898)[0m     @     0x7f0fae3a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15929)[0m     @     0x7f08840115a4 at::native::copy_()
[2m[36m(pid=15929)[0m     @     0x7f08846fc4f5 at::Tensor::copy_()
[2m[36m(pid=15929)[0m     @     0x7f0886bcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15929)[0m     @     0x7f08846fc4f5 at::Tensor::copy_()
[2m[36m(pid=15929)[0m     @     0x7f088a7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15929)[0m     @     0x55d157ef0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15929)[0m     @     0x55d157e4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15929)[0m     @     0x55d157ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15929)[0m     @     0x55d157ed7a20 method_vectorcall
[2m[36m(pid=15929)[0m     @     0x55d157e4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15929)[0m     @     0x55d157ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15929)[0m     @     0x55d157ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15929)[0m     @     0x55d157e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15929)[0m     @     0x55d157ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15929)[0m     @     0x55d157ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15929)[0m     @     0x55d157e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15929)[0m     @     0x55d157ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15929)[0m     @     0x55d157ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15923)[0m     @     0x7ef83fb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=15923)[0m     @     0x7ef83fb11d91 at::TensorIterator::for_each()
[2m[36m(pid=15923)[0m     @     0x7ef8403f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15923)[0m     @     0x7ef840417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15948)[0m     @     0x7edff08917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15948)[0m     @     0x7edff08948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15948)[0m     @     0x7edff0894ad3 at::TensorIterator::for_each()
[2m[36m(pid=15948)[0m     @     0x7edff0894d91 at::TensorIterator::for_each()
[2m[36m(pid=15954)[0m     @     0x7fc5598215a4 at::native::copy_()
[2m[36m(pid=15954)[0m     @     0x7fc559f0c4f5 at::Tensor::copy_()
[2m[36m(pid=15954)[0m     @     0x7fc55c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15954)[0m     @     0x7fc559f0c4f5 at::Tensor::copy_()
[2m[36m(pid=15954)[0m     @     0x7fc55ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15954)[0m     @     0x562857395fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15954)[0m     @     0x5628572f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x7ed09a5548f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15950)[0m     @     0x7ed09a554ad3 at::TensorIterator::for_each()
[2m[36m(pid=15950)[0m     @     0x7ed09a554d91 at::TensorIterator::for_each()
[2m[36m(pid=15891)[0m     @     0x7f5b85ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15891)[0m     @     0x7f5b85ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=15891)[0m     @     0x7f5b85ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=15891)[0m     @     0x7f5b867ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15956)[0m     @     0x7f6fb97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15956)[0m     @     0x7f6fb8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15956)[0m     @     0x7f6fb8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15956)[0m     @     0x7f6fb8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=15880)[0m     @     0x7fa487dab8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15880)[0m     @     0x7fa487dabad3 at::TensorIterator::for_each()
[2m[36m(pid=15880)[0m     @     0x7fa487dabd91 at::TensorIterator::for_each()
[2m[36m(pid=15880)[0m     @     0x7fa48868eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15967)[0m     @     0x7ef52e4b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15967)[0m     @     0x7ef52e4b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=15967)[0m     @     0x7ef52e4b1d91 at::TensorIterator::for_each()
[2m[36m(pid=15967)[0m     @     0x7ef52ed94b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15893)[0m     @     0x7f67b300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15893)[0m     @     0x7f67b300cad3 at::TensorIterator::for_each()
[2m[36m(pid=15872)[0m     @     0x7f4877a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15872)[0m     @     0x7f4877a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=15872)[0m     @     0x7f4877a61d91 at::TensorIterator::for_each()
[2m[36m(pid=15871)[0m     @     0x7f91eed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=15871)[0m     @     0x7f91eed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=15871)[0m     @     0x7f91ef630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15871)[0m     @     0x7f91ef653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15897)[0m     @     0x7f144f7a9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15897)[0m     @     0x7f144eed47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15897)[0m     @     0x7f144eed78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15890)[0m     @     0x7fb0ca3988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15890)[0m     @     0x7fb0ca398ad3 at::TensorIterator::for_each()
[2m[36m(pid=15890)[0m     @     0x7fb0ca398d91 at::TensorIterator::for_each()
[2m[36m(pid=15890)[0m     @     0x7fb0cac7bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15873)[0m     @     0x7fa65c5d4390 (unknown)
[2m[36m(pid=15873)[0m     @     0x7f775c536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15873)[0m     @     0x7f775bc617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15873)[0m     @     0x7f775bc648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15873)[0m     @     0x7f775bc64ad3 at::TensorIterator::for_each()
[2m[36m(pid=15966)[0m     @     0x7ee890a088f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15966)[0m     @     0x7ee890a08ad3 at::TensorIterator::for_each()
[2m[36m(pid=15966)[0m     @     0x7ee890a08d91 at::TensorIterator::for_each()
[2m[36m(pid=15966)[0m     @     0x7ee8912ebb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15966)[0m     @     0x7ee89130ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15887)[0m     @     0x7f7d61fdf390 (unknown)
[2m[36m(pid=15887)[0m     @     0x7f4e61e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15887)[0m     @     0x7f4e6154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15886)[0m     @     0x7f1b4fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15886)[0m     @     0x7f1b4fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15886)[0m     @     0x7f1b4fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=15927)[0m     @     0x7f22b54d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15927)[0m     @     0x7f22b54d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=15927)[0m     @     0x7f22b54d2d91 at::TensorIterator::for_each()
[2m[36m(pid=15927)[0m     @     0x7f22b5db5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15877)[0m     @     0x7f653b229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15877)[0m     @     0x7f653a9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15877)[0m     @     0x7f653a9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15877)[0m     @     0x7f653a957ad3 at::TensorIterator::for_each()
[2m[36m(pid=15877)[0m     @     0x7f653a957d91 at::TensorIterator::for_each()
[2m[36m(pid=15941)[0m     @     0x7f7415caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15941)[0m     @     0x7f7415caaad3 at::TensorIterator::for_each()
[2m[36m(pid=15941)[0m     @     0x7f7415caad91 at::TensorIterator::for_each()
[2m[36m(pid=15941)[0m     @     0x7f741658db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15899)[0m     @     0x7fb3c2c7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15995)[0m     @     0x7ecf19ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=15995)[0m     @     0x7ecf19ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=15995)[0m     @     0x7ecf1a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15995)[0m     @     0x7ecf1a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15995)[0m     @     0x7ecf19c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15995)[0m     @     0x7ecf19c8f388 at::native::copy_impl()
[2m[36m(pid=15869)[0m     @     0x7ece5b7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=15869)[0m     @     0x7ece5b7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=15983)[0m     @     0x7f3a15967ad3 at::TensorIterator::for_each()
[2m[36m(pid=15983)[0m     @     0x7f3a15967d91 at::TensorIterator::for_each()
[2m[36m(pid=15983)[0m     @     0x7f3a1624ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15983)[0m     @     0x7f3a1626dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15983)[0m     @     0x7f3a1570fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15983)[0m     @     0x7f3a1570d388 at::native::copy_impl()
[2m[36m(pid=15900)[0m     @     0x7f7438e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=15900)[0m     @     0x7f7438e22d91 at::TensorIterator::for_each()
[2m[36m(pid=15900)[0m     @     0x7f7439705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15900)[0m     @     0x7f7439728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15900)[0m     @     0x7f7438bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15900)[0m     @     0x7f7438bc8388 at::native::copy_impl()
[2m[36m(pid=15939)[0m PC: @                0x0 (unknown)
[2m[36m(pid=15939)[0m *** SIGSEGV (@0x0) received by PID 15939 (TID 0x7f231ba4d700) from PID 0; stack trace: ***
[2m[36m(pid=15939)[0m     @     0x7f231b626390 (unknown)
[2m[36m(pid=15939)[0m     @     0x7ef41b5b2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=15939)[0m     @     0x7ef41acdd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15884)[0m     @     0x7f62204f7d91 at::TensorIterator::for_each()
[2m[36m(pid=15884)[0m     @     0x7f6220ddab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15884)[0m     @     0x7f6220dfdc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15884)[0m     @     0x7f622029fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15896)[0m     @     0x7ed7c2a7bad3 at::TensorIterator::for_each()
[2m[36m(pid=15896)[0m     @     0x7ed7c2a7bd91 at::TensorIterator::for_each()
[2m[36m(pid=15896)[0m     @     0x7ed7c335eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15896)[0m     @     0x7ed7c3381c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15896)[0m     @     0x7ed7c2823a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15896)[0m     @     0x7ed7c2821388 at::native::copy_impl()
[2m[36m(pid=15902)[0m     @     0x7f2f922fead3 at::TensorIterator::for_each()
[2m[36m(pid=15902)[0m     @     0x7f2f922fed91 at::TensorIterator::for_each()
[2m[36m(pid=15902)[0m     @     0x7f2f92be1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15902)[0m     @     0x7f2f92c04c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15902)[0m     @     0x7f2f920a6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15902)[0m     @     0x7f2f920a4388 at::native::copy_impl()
[2m[36m(pid=15932)[0m     @     0x7efab3864ad3 at::TensorIterator::for_each()
[2m[36m(pid=15932)[0m     @     0x7efab3864d91 at::TensorIterator::for_each()
[2m[36m(pid=15932)[0m     @     0x7efab4147b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15932)[0m     @     0x7efab416ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15932)[0m     @     0x7efab360ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15932)[0m     @     0x7efab360a388 at::native::copy_impl()
[2m[36m(pid=15998)[0m     @     0x7f0a7bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=15998)[0m     @     0x7f0a81d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15998)[0m     @     0x557d8f96dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15998)[0m     @     0x557d8f8c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15998)[0m     @     0x557d8f953baf _PyEval_EvalCodeWithName
[2m[36m(pid=15998)[0m     @     0x557d8f954a20 method_vectorcall
[2m[36m(pid=15998)[0m     @     0x557d8f8c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15998)[0m     @     0x557d8f953baf _PyEval_EvalCodeWithName
[2m[36m(pid=15998)[0m     @     0x557d8f954643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15998)[0m     @     0x557d8f8c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15998)[0m     @     0x557d8f953baf _PyEval_EvalCodeWithName
[2m[36m(pid=15998)[0m     @     0x557d8f954643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15998)[0m     @     0x557d8f8c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15998)[0m     @     0x557d8f953baf _PyEval_EvalCodeWithName
[2m[36m(pid=15998)[0m     @     0x557d8f954643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15998)[0m     @     0x557d8f8c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15998)[0m     @     0x557d8f953baf _PyEval_EvalCodeWithName
[2m[36m(pid=15998)[0m     @     0x557d8f954643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15998)[0m     @     0x557d8f8c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16006)[0m     @     0x7ef7b2ce54f5 at::Tensor::copy_()
[2m[36m(pid=16006)[0m     @     0x7ef7b8d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=16006)[0m     @     0x556292007fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=16006)[0m     @     0x556291f62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16006)[0m     @     0x556291fedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16006)[0m     @     0x556291feea20 method_vectorcall
[2m[36m(pid=16006)[0m     @     0x556291f62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16006)[0m     @     0x556291fedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16006)[0m     @     0x556291fee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16006)[0m     @     0x556291f63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16006)[0m     @     0x556291fedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16006)[0m     @     0x556291fee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16006)[0m     @     0x556291f63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16006)[0m     @     0x556291fedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16006)[0m     @     0x556291fee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16006)[0m     @     0x556291f63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16006)[0m     @     0x556291fedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16006)[0m     @     0x556291fee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16006)[0m     @     0x556291f63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15947)[0m     @     0x7f50eaa944f5 at::Tensor::copy_()
[2m[36m(pid=15947)[0m     @     0x7f50f0b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15947)[0m     @     0x55d2c2abffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15947)[0m     @     0x55d2c2a1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15947)[0m     @     0x55d2c2aa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15947)[0m     @     0x55d2c2aa6a20 method_vectorcall
[2m[36m(pid=15947)[0m     @     0x55d2c2a1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15947)[0m     @     0x55d2c2aa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15947)[0m     @     0x55d2c2aa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15947)[0m     @     0x55d2c2a1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15947)[0m     @     0x55d2c2aa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15947)[0m     @     0x55d2c2aa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15947)[0m     @     0x55d2c2a1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15947)[0m     @     0x55d2c2aa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15947)[0m     @     0x55d2c2aa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15947)[0m     @     0x55d2c2a1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15947)[0m     @     0x55d2c2aa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15947)[0m     @     0x55d2c2aa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15947)[0m     @     0x55d2c2a1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15934)[0m     @     0x7eec02e77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15934)[0m     @     0x7eec02e9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15934)[0m     @     0x7eec0233ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15934)[0m     @     0x7eec0233a388 at::native::copy_impl()
[2m[36m(pid=15934)[0m     @     0x7eec0233c5a4 at::native::copy_()
[2m[36m(pid=15988)[0m     @     0x7f7ec2ffb4f5 at::Tensor::copy_()
[2m[36m(pid=15988)[0m     @     0x7f7ec54ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15988)[0m     @     0x7f7ec2ffb4f5 at::Tensor::copy_()
[2m[36m(pid=15988)[0m     @     0x7f7ec90a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15988)[0m     @     0x559a506a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15988)[0m     @     0x559a505feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15988)[0m     @     0x559a50689baf _PyEval_EvalCodeWithName
[2m[36m(pid=15988)[0m     @     0x559a5068aa20 method_vectorcall
[2m[36m(pid=15988)[0m     @     0x559a505febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15988)[0m     @     0x559a50689baf _PyEval_EvalCodeWithName
[2m[36m(pid=15988)[0m     @     0x559a5068a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15988)[0m     @     0x559a505ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15988)[0m     @     0x559a50689baf _PyEval_EvalCodeWithName
[2m[36m(pid=15988)[0m     @     0x559a5068a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15988)[0m     @     0x559a505ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15988)[0m     @     0x559a50689baf _PyEval_EvalCodeWithName
[2m[36m(pid=15988)[0m     @     0x559a5068a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15988)[0m     @     0x559a505ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15988)[0m     @     0x559a50689baf _PyEval_EvalCodeWithName
[2m[36m(pid=15988)[0m     @     0x559a5068a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15988)[0m     @     0x559a505ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15980)[0m     @     0x7f60d12b54f5 at::Tensor::copy_()
[2m[36m(pid=15980)[0m     @     0x7f60d37888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15980)[0m     @     0x7f60d12b54f5 at::Tensor::copy_()
[2m[36m(pid=15980)[0m     @     0x7f60d736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15980)[0m     @     0x5652b8832fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15980)[0m     @     0x5652b878db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15980)[0m     @     0x5652b8818baf _PyEval_EvalCodeWithName
[2m[36m(pid=15980)[0m     @     0x5652b8819a20 method_vectorcall
[2m[36m(pid=15980)[0m     @     0x5652b878dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15980)[0m     @     0x5652b8818baf _PyEval_EvalCodeWithName
[2m[36m(pid=15980)[0m     @     0x5652b8819643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15980)[0m     @     0x5652b878e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15980)[0m     @     0x5652b8818baf _PyEval_EvalCodeWithName
[2m[36m(pid=15980)[0m     @     0x5652b8819643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15980)[0m     @     0x5652b878e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15980)[0m     @     0x5652b8818baf _PyEval_EvalCodeWithName
[2m[36m(pid=15980)[0m     @     0x5652b8819643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15980)[0m     @     0x5652b878e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15980)[0m     @     0x5652b8818baf _PyEval_EvalCodeWithName
[2m[36m(pid=15980)[0m     @     0x5652b8819643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15980)[0m     @     0x5652b878e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x7f265397ed91 at::TensorIterator::for_each()
[2m[36m(pid=15901)[0m     @     0x7f2654261b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15901)[0m     @     0x7f2654284c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15901)[0m     @     0x7f2653726a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15901)[0m     @     0x7f2653724388 at::native::copy_impl()
[2m[36m(pid=15952)[0m     @     0x7f4bb4565d91 at::TensorIterator::for_each()
[2m[36m(pid=15952)[0m     @     0x7f4bb4e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15952)[0m     @     0x7f4bb4e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15952)[0m     @     0x7f4bb430da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15952)[0m     @     0x7f4bb430b388 at::native::copy_impl()
[2m[36m(pid=15945)[0m     @     0x7f26a3729d91 at::TensorIterator::for_each()
[2m[36m(pid=15945)[0m     @     0x7f26a400cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15945)[0m     @     0x7f26a402fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15945)[0m     @     0x7f26a34d1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15945)[0m     @     0x7f26a34cf388 at::native::copy_impl()
[2m[36m(pid=15945)[0m     @     0x7f26a34d15a4 at::native::copy_()
[2m[36m(pid=15883)[0m     @     0x7f651250ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15883)[0m     @     0x7f651252dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15883)[0m     @     0x7f65119cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15883)[0m     @     0x7f65119cd388 at::native::copy_impl()
[2m[36m(pid=15883)[0m     @     0x7f65119cf5a4 at::native::copy_()
[2m[36m(pid=15883)[0m     @     0x7f65120ba4f5 at::Tensor::copy_()
[2m[36m(pid=15949)[0m     @     0x7f2eed37f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15949)[0m     @     0x7f2eed37fad3 at::TensorIterator::for_each()
[2m[36m(pid=15959)[0m     @     0x7f912f467d91 at::TensorIterator::for_each()
[2m[36m(pid=15959)[0m     @     0x7f912fd4ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15959)[0m     @     0x7f912fd6dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15959)[0m     @     0x7f912f20fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15959)[0m     @     0x7f912f20d388 at::native::copy_impl()
[2m[36m(pid=15975)[0m     @     0x7f9278f27d91 at::TensorIterator::for_each()
[2m[36m(pid=15975)[0m     @     0x7f927980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15975)[0m     @     0x7f927982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15975)[0m     @     0x7f9278ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15975)[0m     @     0x7f9278ccd388 at::native::copy_impl()
[2m[36m(pid=15874)[0m     @     0x7f9fcc34dd91 at::TensorIterator::for_each()
[2m[36m(pid=15874)[0m     @     0x7f9fccc30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15874)[0m     @     0x7f9fccc53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15874)[0m     @     0x7f9fcc0f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15874)[0m     @     0x7f9fcc0f3388 at::native::copy_impl()
[2m[36m(pid=15889)[0m     @     0x7f51bce2fd91 at::TensorIterator::for_each()
[2m[36m(pid=15889)[0m     @     0x7f51bd712b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15889)[0m     @     0x7f51bd735c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15889)[0m     @     0x7f51bcbd7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15889)[0m     @     0x7f51bcbd5388 at::native::copy_impl()
[2m[36m(pid=15888)[0m     @     0x7f727fd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=15888)[0m     @     0x7f728061fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15888)[0m     @     0x7f7280642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15888)[0m     @     0x7f727fae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15888)[0m     @     0x7f727fae2388 at::native::copy_impl()
[2m[36m(pid=15963)[0m     @     0x7f45fc7b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=15963)[0m     @     0x7f45fc7b6d91 at::TensorIterator::for_each()
[2m[36m(pid=15963)[0m     @     0x7f45fd099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15963)[0m     @     0x7f45fd0bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15957)[0m     @     0x7f8e0e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=15957)[0m     @     0x7f8e0e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=15957)[0m     @     0x7f8e0ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15957)[0m     @     0x7f8e0ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15868)[0m     @     0x7fbb3006b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=15986)[0m     @     0x7ee298f27d91 at::TensorIterator::for_each()
[2m[36m(pid=15986)[0m     @     0x7ee29980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15986)[0m     @     0x7ee29982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15986)[0m     @     0x7ee298ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15986)[0m     @     0x7ee298ccd388 at::native::copy_impl()
[2m[36m(pid=15937)[0m     @     0x55a76aaf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15937)[0m     @     0x55a76ab81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15937)[0m     @     0x55a76ab82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15937)[0m     @     0x55a76aaf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15937)[0m     @     0x55a76ab81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15937)[0m     @     0x55a76ab82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15937)[0m     @     0x55a76aaf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15999)[0m     @     0x55923d61c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15999)[0m     @     0x55923d591689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15999)[0m     @     0x55923d61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15999)[0m     @     0x55923d61c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15999)[0m     @     0x55923d591689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15999)[0m     @     0x55923d61bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15999)[0m     @     0x55923d61c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15999)[0m     @     0x55923d591689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15993)[0m     @     0x7f67d83354f5 at::Tensor::copy_()
[2m[36m(pid=15993)[0m     @     0x7f67de3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15993)[0m     @     0x560da5822fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15993)[0m     @     0x560da577db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15993)[0m     @     0x560da5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15993)[0m     @     0x560da5809a20 method_vectorcall
[2m[36m(pid=15993)[0m     @     0x560da577dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15993)[0m     @     0x560da5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15993)[0m     @     0x560da5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15993)[0m     @     0x560da577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15993)[0m     @     0x560da5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15993)[0m     @     0x560da5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15993)[0m     @     0x560da577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15993)[0m     @     0x560da5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15993)[0m     @     0x560da5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15993)[0m     @     0x560da577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15993)[0m     @     0x560da5808baf _PyEval_EvalCodeWithName
[2m[36m(pid=15993)[0m     @     0x560da5809643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15993)[0m     @     0x560da577e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15925)[0m     @     0x7f97c4382a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15925)[0m     @     0x7f97c4380388 at::native::copy_impl()
[2m[36m(pid=15925)[0m     @     0x7f97c43825a4 at::native::copy_()
[2m[36m(pid=15925)[0m     @     0x7f97c4a6d4f5 at::Tensor::copy_()
[2m[36m(pid=15970)[0m     @     0x7f8b0a7914f5 at::Tensor::copy_()
[2m[36m(pid=15970)[0m     @     0x7f8b1083c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15970)[0m     @     0x55e5f9486fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15970)[0m     @     0x55e5f93e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15970)[0m     @     0x55e5f946cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15970)[0m     @     0x55e5f946da20 method_vectorcall
[2m[36m(pid=15970)[0m     @     0x55e5f93e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15970)[0m     @     0x55e5f946cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15970)[0m     @     0x55e5f946d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15970)[0m     @     0x55e5f93e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15970)[0m     @     0x55e5f946cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15970)[0m     @     0x55e5f946d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15970)[0m     @     0x55e5f93e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15970)[0m     @     0x55e5f946cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15970)[0m     @     0x55e5f946d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15970)[0m     @     0x55e5f93e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15970)[0m     @     0x55e5f946cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15970)[0m     @     0x55e5f946d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15970)[0m     @     0x55e5f93e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15946)[0m     @     0x7fbd05be94f5 at::Tensor::copy_()
[2m[36m(pid=15946)[0m     @     0x7fbd0bc9479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15946)[0m     @     0x557469f23fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15946)[0m     @     0x557469e7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15946)[0m     @     0x557469f09baf _PyEval_EvalCodeWithName
[2m[36m(pid=15946)[0m     @     0x557469f0aa20 method_vectorcall
[2m[36m(pid=15946)[0m     @     0x557469e7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15946)[0m     @     0x557469f09baf _PyEval_EvalCodeWithName
[2m[36m(pid=15946)[0m     @     0x557469f0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15946)[0m     @     0x557469e7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15946)[0m     @     0x557469f09baf _PyEval_EvalCodeWithName
[2m[36m(pid=15946)[0m     @     0x557469f0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15946)[0m     @     0x557469e7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15946)[0m     @     0x557469f09baf _PyEval_EvalCodeWithName
[2m[36m(pid=15946)[0m     @     0x557469f0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15946)[0m     @     0x557469e7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15946)[0m     @     0x557469f09baf _PyEval_EvalCodeWithName
[2m[36m(pid=15946)[0m     @     0x557469f0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15946)[0m     @     0x557469e7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x7f7f25821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=16004)[0m     @     0x7f7f2581f388 at::native::copy_impl()
[2m[36m(pid=16004)[0m     @     0x7f7f258215a4 at::native::copy_()
[2m[36m(pid=15870)[0m     @     0x7ee6d59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15870)[0m     @     0x7ee6d59cd388 at::native::copy_impl()
[2m[36m(pid=15870)[0m     @     0x7ee6d59cf5a4 at::native::copy_()
[2m[36m(pid=15879)[0m     @     0x7f357b8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15879)[0m     @     0x7f357b8b7388 at::native::copy_impl()
[2m[36m(pid=15879)[0m     @     0x7f357b8b95a4 at::native::copy_()
[2m[36m(pid=15879)[0m     @     0x7f357bfa44f5 at::Tensor::copy_()
[2m[36m(pid=15926)[0m     @     0x7f7d932e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15926)[0m     @     0x7f7d932df388 at::native::copy_impl()
[2m[36m(pid=15926)[0m     @     0x7f7d932e15a4 at::native::copy_()
[2m[36m(pid=15875)[0m     @     0x7fad9402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15875)[0m     @     0x7fad94050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15875)[0m     @     0x7fad934f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15875)[0m     @     0x7fad934f0388 at::native::copy_impl()
[2m[36m(pid=15875)[0m     @     0x7fad934f25a4 at::native::copy_()
[2m[36m(pid=16009)[0m     @     0x7f4bd39cca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=16009)[0m     @     0x7f4bd39ca388 at::native::copy_impl()
[2m[36m(pid=16009)[0m     @     0x7f4bd39cc5a4 at::native::copy_()
[2m[36m(pid=15882)[0m     @     0x7f9e4458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15882)[0m     @     0x7f9e44589388 at::native::copy_impl()
[2m[36m(pid=15882)[0m     @     0x7f9e4458b5a4 at::native::copy_()
[2m[36m(pid=15882)[0m     @     0x7f9e44c764f5 at::Tensor::copy_()
[2m[36m(pid=15885)[0m     @     0x7efaec8a4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15885)[0m     @     0x7efaebd46a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15885)[0m     @     0x7efaebd44388 at::native::copy_impl()
[2m[36m(pid=15885)[0m     @     0x7efaebd465a4 at::native::copy_()
[2m[36m(pid=15960)[0m     @     0x7f64c8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15960)[0m     @     0x7f64c8ccd388 at::native::copy_impl()
[2m[36m(pid=15960)[0m     @     0x7f64c8ccf5a4 at::native::copy_()
[2m[36m(pid=15960)[0m     @     0x7f64c93ba4f5 at::Tensor::copy_()
[2m[36m(pid=15979)[0m     @     0x55e67a0f8a20 method_vectorcall
[2m[36m(pid=15979)[0m     @     0x55e67a06cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15979)[0m     @     0x55e67a0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15979)[0m     @     0x55e67a0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15979)[0m     @     0x55e67a06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15979)[0m     @     0x55e67a0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15979)[0m     @     0x55e67a0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15979)[0m     @     0x55e67a06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15979)[0m     @     0x55e67a0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15979)[0m     @     0x55e67a0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15979)[0m     @     0x55e67a06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15979)[0m     @     0x55e67a0f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=15979)[0m     @     0x55e67a0f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15979)[0m     @     0x55e67a06d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x7fa4c5c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15931)[0m     @     0x7fa4c5c8f388 at::native::copy_impl()
[2m[36m(pid=15931)[0m     @     0x7fa4c5c915a4 at::native::copy_()
[2m[36m(pid=15943)[0m     @     0x7f06d014aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15943)[0m     @     0x7f06d0148388 at::native::copy_impl()
[2m[36m(pid=15943)[0m     @     0x7f06d014a5a4 at::native::copy_()
[2m[36m(pid=15951)[0m     @     0x7f99d9be05a4 at::native::copy_()
[2m[36m(pid=15951)[0m     @     0x7f99da2cb4f5 at::Tensor::copy_()
[2m[36m(pid=15991)[0m     @     0x7ee3b13b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15991)[0m     @     0x7ee3b13d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15991)[0m     @     0x7ee3b0875a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15991)[0m     @     0x7ee3b0873388 at::native::copy_impl()
[2m[36m(pid=15991)[0m     @     0x7ee3b08755a4 at::native::copy_()
[2m[36m(pid=15968)[0m     @     0x7f46c00f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15968)[0m     @     0x7f46c00f3388 at::native::copy_impl()
[2m[36m(pid=15968)[0m     @     0x7f46c00f55a4 at::native::copy_()
[2m[36m(pid=15878)[0m     @     0x7fa7500d1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15878)[0m     @     0x7fa7500f4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15878)[0m     @     0x7fa74f596a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15878)[0m     @     0x7fa74f594388 at::native::copy_impl()
[2m[36m(pid=15878)[0m     @     0x7fa74f5965a4 at::native::copy_()
[2m[36m(pid=15898)[0m     @     0x7f0fae3a7388 at::native::copy_impl()
[2m[36m(pid=15898)[0m     @     0x7f0fae3a95a4 at::native::copy_()
[2m[36m(pid=15898)[0m     @     0x7f0faea944f5 at::Tensor::copy_()
[2m[36m(pid=15898)[0m     @     0x7f0fb0f678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15929)[0m     @     0x55d157e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15929)[0m     @     0x55d157ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15929)[0m     @     0x55d157ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15929)[0m     @     0x55d157e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15923)[0m     @     0x7ef83f8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15923)[0m     @     0x7ef83f8b7388 at::native::copy_impl()
[2m[36m(pid=15923)[0m     @     0x7ef83f8b95a4 at::native::copy_()
[2m[36m(pid=15923)[0m     @     0x7ef83ffa44f5 at::Tensor::copy_()
[2m[36m(pid=15948)[0m     @     0x7edff1177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15948)[0m     @     0x7edff119ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15948)[0m     @     0x7edff063ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15948)[0m     @     0x7edff063a388 at::native::copy_impl()
[2m[36m(pid=15948)[0m     @     0x7edff063c5a4 at::native::copy_()
[2m[36m(pid=15948)[0m     @     0x7edff0d274f5 at::Tensor::copy_()
[2m[36m(pid=15954)[0m     @     0x56285737bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15954)[0m     @     0x56285737ca20 method_vectorcall
[2m[36m(pid=15954)[0m     @     0x5628572f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15954)[0m     @     0x56285737bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15954)[0m     @     0x56285737c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15954)[0m     @     0x5628572f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15954)[0m     @     0x56285737bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15954)[0m     @     0x56285737c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15954)[0m     @     0x5628572f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15954)[0m     @     0x56285737bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15954)[0m     @     0x56285737c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15954)[0m     @     0x5628572f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15954)[0m     @     0x56285737bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15954)[0m     @     0x56285737c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15954)[0m     @     0x5628572f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x7ed09ae37b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15950)[0m     @     0x7ed09ae5ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15950)[0m     @     0x7ed09a2fca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15950)[0m     @     0x7ed09a2fa388 at::native::copy_impl()
[2m[36m(pid=15950)[0m     @     0x7ed09a2fc5a4 at::native::copy_()
[2m[36m(pid=15891)[0m     @     0x7f5b867efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15891)[0m     @     0x7f5b85c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15891)[0m     @     0x7f5b85c8f388 at::native::copy_impl()
[2m[36m(pid=15891)[0m     @     0x7f5b85c915a4 at::native::copy_()
[2m[36m(pid=15891)[0m     @     0x7f5b8637c4f5 at::Tensor::copy_()
[2m[36m(pid=15956)[0m     @     0x7f6fb8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=15956)[0m     @     0x7f6fb980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15956)[0m     @     0x7f6fb982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15956)[0m     @     0x7f6fb8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15956)[0m     @     0x7f6fb8ccd388 at::native::copy_impl()
[2m[36m(pid=15956)[0m     @     0x7f6fb8ccf5a4 at::native::copy_()
[2m[36m(pid=15880)[0m     @     0x7fa4886b1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15880)[0m     @     0x7fa487b53a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15880)[0m     @     0x7fa487b51388 at::native::copy_impl()
[2m[36m(pid=15880)[0m     @     0x7fa487b535a4 at::native::copy_()
[2m[36m(pid=15880)[0m     @     0x7fa48823e4f5 at::Tensor::copy_()
[2m[36m(pid=15967)[0m     @     0x7ef52edb7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15967)[0m     @     0x7ef52e259a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15967)[0m     @     0x7ef52e257388 at::native::copy_impl()
[2m[36m(pid=15967)[0m     @     0x7ef52e2595a4 at::native::copy_()
[2m[36m(pid=15967)[0m     @     0x7ef52e9444f5 at::Tensor::copy_()
[2m[36m(pid=15872)[0m     @     0x7f4878344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15872)[0m     @     0x7f4878367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15872)[0m     @     0x7f4877809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15872)[0m     @     0x7f4877807388 at::native::copy_impl()
[2m[36m(pid=15872)[0m     @     0x7f48778095a4 at::native::copy_()
[2m[36m(pid=15871)[0m     @     0x7f91eeaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15871)[0m     @     0x7f91eeaf3388 at::native::copy_impl()
[2m[36m(pid=15871)[0m     @     0x7f91eeaf55a4 at::native::copy_()
[2m[36m(pid=15871)[0m     @     0x7f91ef1e04f5 at::Tensor::copy_()
[2m[36m(pid=15897)[0m     @     0x7f144eed7ad3 at::TensorIterator::for_each()
[2m[36m(pid=15897)[0m     @     0x7f144eed7d91 at::TensorIterator::for_each()
[2m[36m(pid=15897)[0m     @     0x7f144f7bab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15897)[0m     @     0x7f144f7ddc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15897)[0m     @     0x7f144ec7fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15897)[0m     @     0x7f144ec7d388 at::native::copy_impl()
[2m[36m(pid=15890)[0m     @     0x7fb0cac9ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15890)[0m     @     0x7fb0ca140a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15890)[0m     @     0x7fb0ca13e388 at::native::copy_impl()
[2m[36m(pid=15890)[0m     @     0x7fb0ca1405a4 at::native::copy_()
[2m[36m(pid=15890)[0m     @     0x7fb0ca82b4f5 at::Tensor::copy_()
[2m[36m(pid=15873)[0m     @     0x7f775bc64d91 at::TensorIterator::for_each()
[2m[36m(pid=15873)[0m     @     0x7f775c547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15873)[0m     @     0x7f775c56ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15873)[0m     @     0x7f775ba0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15873)[0m     @     0x7f775ba0a388 at::native::copy_impl()
[2m[36m(pid=15966)[0m     @     0x7ee8907b0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15966)[0m     @     0x7ee8907ae388 at::native::copy_impl()
[2m[36m(pid=15966)[0m     @     0x7ee8907b05a4 at::native::copy_()
[2m[36m(pid=15887)[0m     @     0x7f4e615528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15886)[0m     @     0x7f1b4fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=15886)[0m     @     0x7f1b50344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15886)[0m     @     0x7f1b50367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15927)[0m     @     0x7f22b5dd8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15927)[0m     @     0x7f22b527aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15927)[0m     @     0x7f22b5278388 at::native::copy_impl()
[2m[36m(pid=15877)[0m     @     0x7f653b23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15877)[0m     @     0x7f653b25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15877)[0m     @     0x7f653a6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15877)[0m     @     0x7f653a6fd388 at::native::copy_impl()
[2m[36m(pid=15941)[0m     @     0x7f74165b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15941)[0m     @     0x7f7415a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15941)[0m     @     0x7f7415a50388 at::native::copy_impl()
[2m[36m(pid=15899)[0m     @     0x7fb3c2c7bad3 at::TensorIterator::for_each()
[2m[36m(pid=15995)[0m     @     0x7ecf19c915a4 at::native::copy_()
[2m[36m(pid=15995)[0m     @     0x7ecf1a37c4f5 at::Tensor::copy_()
[2m[36m(pid=15995)[0m     @     0x7ecf1c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15983)[0m     @     0x7f3a1570f5a4 at::native::copy_()
[2m[36m(pid=15983)[0m     @     0x7f3a15dfa4f5 at::Tensor::copy_()
[2m[36m(pid=15900)[0m     @     0x7f7438bca5a4 at::native::copy_()
[2m[36m(pid=15900)[0m     @     0x7f74392b54f5 at::Tensor::copy_()
[2m[36m(pid=15939)[0m     @     0x7ef41ace08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15884)[0m     @     0x7f622029d388 at::native::copy_impl()
[2m[36m(pid=15884)[0m     @     0x7f622029f5a4 at::native::copy_()
[2m[36m(pid=15896)[0m     @     0x7ed7c28235a4 at::native::copy_()
[2m[36m(pid=15896)[0m     @     0x7ed7c2f0e4f5 at::Tensor::copy_()
[2m[36m(pid=15902)[0m     @     0x7f2f920a65a4 at::native::copy_()
[2m[36m(pid=15902)[0m     @     0x7f2f927914f5 at::Tensor::copy_()
[2m[36m(pid=15932)[0m     @     0x7efab360c5a4 at::native::copy_()
[2m[36m(pid=15932)[0m     @     0x7efab3cf74f5 at::Tensor::copy_()
[2m[36m(pid=15934)[0m     @     0x7eec02a274f5 at::Tensor::copy_()
[2m[36m(pid=15934)[0m     @     0x7eec04efa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15934)[0m     @     0x7eec02a274f5 at::Tensor::copy_()
[2m[36m(pid=15934)[0m     @     0x7eec08ad279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15934)[0m     @     0x55668b1aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15934)[0m     @     0x55668b105b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15934)[0m     @     0x55668b190baf _PyEval_EvalCodeWithName
[2m[36m(pid=15934)[0m     @     0x55668b191a20 method_vectorcall
[2m[36m(pid=15934)[0m     @     0x55668b105bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15934)[0m     @     0x55668b190baf _PyEval_EvalCodeWithName
[2m[36m(pid=15934)[0m     @     0x55668b191643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15934)[0m     @     0x55668b106689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15934)[0m     @     0x55668b190baf _PyEval_EvalCodeWithName
[2m[36m(pid=15934)[0m     @     0x55668b191643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15934)[0m     @     0x55668b106689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15934)[0m     @     0x55668b190baf _PyEval_EvalCodeWithName
[2m[36m(pid=15934)[0m     @     0x55668b191643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15934)[0m     @     0x55668b106689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15934)[0m     @     0x55668b190baf _PyEval_EvalCodeWithName
[2m[36m(pid=15934)[0m     @     0x55668b191643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15934)[0m     @     0x55668b106689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x7f26537265a4 at::native::copy_()
[2m[36m(pid=15901)[0m     @     0x7f2653e114f5 at::Tensor::copy_()
[2m[36m(pid=15901)[0m     @     0x7f26562e48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15901)[0m     @     0x7f2653e114f5 at::Tensor::copy_()
[2m[36m(pid=15952)[0m     @     0x7f4bb430d5a4 at::native::copy_()
[2m[36m(pid=15952)[0m     @     0x7f4bb49f84f5 at::Tensor::copy_()
[2m[36m(pid=15952)[0m     @     0x7f4bb6ecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15952)[0m     @     0x7f4bb49f84f5 at::Tensor::copy_()
[2m[36m(pid=15945)[0m     @     0x7f26a3bbc4f5 at::Tensor::copy_()
[2m[36m(pid=15945)[0m     @     0x7f26a608f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15945)[0m     @     0x7f26a3bbc4f5 at::Tensor::copy_()
[2m[36m(pid=15945)[0m     @     0x7f26a9c6779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15945)[0m     @     0x55dfaff3afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15945)[0m     @     0x55dfafe95b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15945)[0m     @     0x55dfaff20baf _PyEval_EvalCodeWithName
[2m[36m(pid=15945)[0m     @     0x55dfaff21a20 method_vectorcall
[2m[36m(pid=15945)[0m     @     0x55dfafe95bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15945)[0m     @     0x55dfaff20baf _PyEval_EvalCodeWithName
[2m[36m(pid=15945)[0m     @     0x55dfaff21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15945)[0m     @     0x55dfafe96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15945)[0m     @     0x55dfaff20baf _PyEval_EvalCodeWithName
[2m[36m(pid=15945)[0m     @     0x55dfaff21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15945)[0m     @     0x55dfafe96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15945)[0m     @     0x55dfaff20baf _PyEval_EvalCodeWithName
[2m[36m(pid=15945)[0m     @     0x55dfaff21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15945)[0m     @     0x55dfafe96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15945)[0m     @     0x55dfaff20baf _PyEval_EvalCodeWithName
[2m[36m(pid=15945)[0m     @     0x55dfaff21643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15945)[0m     @     0x55dfafe96689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15883)[0m     @     0x7f651458d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15883)[0m     @     0x7f65120ba4f5 at::Tensor::copy_()
[2m[36m(pid=15883)[0m     @     0x7f651816579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15883)[0m     @     0x55a056d33fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15883)[0m     @     0x55a056c8eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15883)[0m     @     0x55a056d19baf _PyEval_EvalCodeWithName
[2m[36m(pid=15883)[0m     @     0x55a056d1aa20 method_vectorcall
[2m[36m(pid=15883)[0m     @     0x55a056c8ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15883)[0m     @     0x55a056d19baf _PyEval_EvalCodeWithName
[2m[36m(pid=15883)[0m     @     0x55a056d1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15883)[0m     @     0x55a056c8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15883)[0m     @     0x55a056d19baf _PyEval_EvalCodeWithName
[2m[36m(pid=15883)[0m     @     0x55a056d1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15883)[0m     @     0x55a056c8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15883)[0m     @     0x55a056d19baf _PyEval_EvalCodeWithName
[2m[36m(pid=15883)[0m     @     0x55a056d1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15883)[0m     @     0x55a056c8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15883)[0m     @     0x55a056d19baf _PyEval_EvalCodeWithName
[2m[36m(pid=15883)[0m     @     0x55a056d1a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15883)[0m     @     0x55a056c8f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15949)[0m     @     0x7f2eed37fd91 at::TensorIterator::for_each()
[2m[36m(pid=15949)[0m     @     0x7f2eedc62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15949)[0m     @     0x7f2eedc85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15949)[0m     @     0x7f2eed127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15949)[0m     @     0x7f2eed125388 at::native::copy_impl()
[2m[36m(pid=15959)[0m     @     0x7f912f20f5a4 at::native::copy_()
[2m[36m(pid=15959)[0m     @     0x7f912f8fa4f5 at::Tensor::copy_()
[2m[36m(pid=15959)[0m     @     0x7f9131dcd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15975)[0m     @     0x7f9278ccf5a4 at::native::copy_()
[2m[36m(pid=15975)[0m     @     0x7f92793ba4f5 at::Tensor::copy_()
[2m[36m(pid=15975)[0m     @     0x7f927b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15874)[0m     @     0x7f9fcc0f55a4 at::native::copy_()
[2m[36m(pid=15874)[0m     @     0x7f9fcc7e04f5 at::Tensor::copy_()
[2m[36m(pid=15874)[0m     @     0x7f9fcecb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15874)[0m     @     0x7f9fcc7e04f5 at::Tensor::copy_()
[2m[36m(pid=15889)[0m     @     0x7f51bcbd75a4 at::native::copy_()
[2m[36m(pid=15889)[0m     @     0x7f51bd2c24f5 at::Tensor::copy_()
[2m[36m(pid=15889)[0m     @     0x7f51bf7958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15888)[0m     @     0x7f727fae45a4 at::native::copy_()
[2m[36m(pid=15888)[0m     @     0x7f72801cf4f5 at::Tensor::copy_()
[2m[36m(pid=15888)[0m     @     0x7f72826a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15963)[0m     @     0x7f45fc55ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15963)[0m     @     0x7f45fc55c388 at::native::copy_impl()
[2m[36m(pid=15963)[0m     @     0x7f45fc55e5a4 at::native::copy_()
[2m[36m(pid=15963)[0m     @     0x7f45fcc494f5 at::Tensor::copy_()
[2m[36m(pid=15963)[0m     @     0x7f45ff11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15957)[0m     @     0x7f8e0def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15957)[0m     @     0x7f8e0def5388 at::native::copy_impl()
[2m[36m(pid=15957)[0m     @     0x7f8e0def75a4 at::native::copy_()
[2m[36m(pid=15868)[0m     @     0x7fbb3006e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=15868)[0m     @     0x7fbb3006ead3 at::TensorIterator::for_each()
[2m[36m(pid=15986)[0m     @     0x7ee298ccf5a4 at::native::copy_()
[2m[36m(pid=15986)[0m     @     0x7ee2993ba4f5 at::Tensor::copy_()
[2m[36m(pid=15986)[0m     @     0x7ee29b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15925)[0m     @     0x7f97c6f408de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15925)[0m     @     0x7f97c4a6d4f5 at::Tensor::copy_()
[2m[36m(pid=15925)[0m     @     0x7f97cab1879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15925)[0m     @     0x55d8bc639fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15925)[0m     @     0x55d8bc594b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15925)[0m     @     0x55d8bc61fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15925)[0m     @     0x55d8bc620a20 method_vectorcall
[2m[36m(pid=15925)[0m     @     0x55d8bc594bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15925)[0m     @     0x55d8bc61fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15925)[0m     @     0x55d8bc620643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15925)[0m     @     0x55d8bc595689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15925)[0m     @     0x55d8bc61fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15925)[0m     @     0x55d8bc620643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15925)[0m     @     0x55d8bc595689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15925)[0m     @     0x55d8bc61fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15925)[0m     @     0x55d8bc620643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15925)[0m     @     0x55d8bc595689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15925)[0m     @     0x55d8bc61fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15925)[0m     @     0x55d8bc620643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15925)[0m     @     0x55d8bc595689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x7f7f25f0c4f5 at::Tensor::copy_()
[2m[36m(pid=16004)[0m     @     0x7f7f283df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=16004)[0m     @     0x7f7f25f0c4f5 at::Tensor::copy_()
[2m[36m(pid=16004)[0m     @     0x7f7f2bfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=16004)[0m     @     0x556436775fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=16004)[0m     @     0x5564366d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x55643675bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16004)[0m     @     0x55643675ca20 method_vectorcall
[2m[36m(pid=16004)[0m     @     0x5564366d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x55643675bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16004)[0m     @     0x55643675c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16004)[0m     @     0x5564366d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x55643675bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16004)[0m     @     0x55643675c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16004)[0m     @     0x5564366d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x55643675bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16004)[0m     @     0x55643675c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16004)[0m     @     0x5564366d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16004)[0m     @     0x55643675bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=16004)[0m     @     0x55643675c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16004)[0m     @     0x5564366d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15870)[0m     @     0x7ee6d60ba4f5 at::Tensor::copy_()
[2m[36m(pid=15870)[0m     @     0x7ee6d858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15870)[0m     @     0x7ee6d60ba4f5 at::Tensor::copy_()
[2m[36m(pid=15870)[0m     @     0x7ee6dc16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15870)[0m     @     0x55c782c02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15870)[0m     @     0x55c782b5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15870)[0m     @     0x55c782be8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15870)[0m     @     0x55c782be9a20 method_vectorcall
[2m[36m(pid=15870)[0m     @     0x55c782b5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15870)[0m     @     0x55c782be8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15870)[0m     @     0x55c782be9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15870)[0m     @     0x55c782b5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15870)[0m     @     0x55c782be8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15870)[0m     @     0x55c782be9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15870)[0m     @     0x55c782b5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15870)[0m     @     0x55c782be8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15870)[0m     @     0x55c782be9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15870)[0m     @     0x55c782b5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15870)[0m     @     0x55c782be8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15870)[0m     @     0x55c782be9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15870)[0m     @     0x55c782b5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15879)[0m     @     0x7f357e4778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15879)[0m     @     0x7f357bfa44f5 at::Tensor::copy_()
[2m[36m(pid=15879)[0m     @     0x7f358204f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15879)[0m     @     0x558b8ce14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15879)[0m     @     0x558b8cd6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15879)[0m     @     0x558b8cdfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15879)[0m     @     0x558b8cdfba20 method_vectorcall
[2m[36m(pid=15879)[0m     @     0x558b8cd6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15879)[0m     @     0x558b8cdfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15879)[0m     @     0x558b8cdfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15879)[0m     @     0x558b8cd70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15879)[0m     @     0x558b8cdfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15879)[0m     @     0x558b8cdfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15879)[0m     @     0x558b8cd70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15879)[0m     @     0x558b8cdfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15879)[0m     @     0x558b8cdfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15879)[0m     @     0x558b8cd70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15879)[0m     @     0x558b8cdfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15879)[0m     @     0x558b8cdfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15879)[0m     @     0x558b8cd70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15926)[0m     @     0x7f7d939cc4f5 at::Tensor::copy_()
[2m[36m(pid=15926)[0m     @     0x7f7d95e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15926)[0m     @     0x7f7d939cc4f5 at::Tensor::copy_()
[2m[36m(pid=15926)[0m     @     0x7f7d99a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15926)[0m     @     0x55e69639bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15926)[0m     @     0x55e6962f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15926)[0m     @     0x55e696381baf _PyEval_EvalCodeWithName
[2m[36m(pid=15926)[0m     @     0x55e696382a20 method_vectorcall
[2m[36m(pid=15926)[0m     @     0x55e6962f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15926)[0m     @     0x55e696381baf _PyEval_EvalCodeWithName
[2m[36m(pid=15926)[0m     @     0x55e696382643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15926)[0m     @     0x55e6962f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15926)[0m     @     0x55e696381baf _PyEval_EvalCodeWithName
[2m[36m(pid=15926)[0m     @     0x55e696382643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15926)[0m     @     0x55e6962f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15926)[0m     @     0x55e696381baf _PyEval_EvalCodeWithName
[2m[36m(pid=15926)[0m     @     0x55e696382643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15926)[0m     @     0x55e6962f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15926)[0m     @     0x55e696381baf _PyEval_EvalCodeWithName
[2m[36m(pid=15926)[0m     @     0x55e696382643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15926)[0m     @     0x55e6962f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15875)[0m     @     0x7fad93bdd4f5 at::Tensor::copy_()
[2m[36m(pid=15875)[0m     @     0x7fad960b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15875)[0m     @     0x7fad93bdd4f5 at::Tensor::copy_()
[2m[36m(pid=15875)[0m     @     0x7fad99c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15875)[0m     @     0x55d9e94fffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15875)[0m     @     0x55d9e945ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15875)[0m     @     0x55d9e94e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15875)[0m     @     0x55d9e94e6a20 method_vectorcall
[2m[36m(pid=15875)[0m     @     0x55d9e945abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15875)[0m     @     0x55d9e94e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15875)[0m     @     0x55d9e94e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15875)[0m     @     0x55d9e945b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16009)[0m     @     0x7f4bd40b74f5 at::Tensor::copy_()
[2m[36m(pid=16009)[0m     @     0x7f4bd658a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=16009)[0m     @     0x7f4bd40b74f5 at::Tensor::copy_()
[2m[36m(pid=16009)[0m     @     0x7f4bda16279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=16009)[0m     @     0x555662b00fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=16009)[0m     @     0x555662a5bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16009)[0m     @     0x555662ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=16009)[0m     @     0x555662ae7a20 method_vectorcall
[2m[36m(pid=16009)[0m     @     0x555662a5bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16009)[0m     @     0x555662ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=16009)[0m     @     0x555662ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16009)[0m     @     0x555662a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16009)[0m     @     0x555662ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=16009)[0m     @     0x555662ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16009)[0m     @     0x555662a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16009)[0m     @     0x555662ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=16009)[0m     @     0x555662ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16009)[0m     @     0x555662a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=16009)[0m     @     0x555662ae6baf _PyEval_EvalCodeWithName
[2m[36m(pid=16009)[0m     @     0x555662ae7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=16009)[0m     @     0x555662a5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15882)[0m     @     0x7f9e471498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15882)[0m     @     0x7f9e44c764f5 at::Tensor::copy_()
[2m[36m(pid=15882)[0m     @     0x7f9e4ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15882)[0m     @     0x55937317dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15882)[0m     @     0x5593730d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15882)[0m     @     0x559373163baf _PyEval_EvalCodeWithName
[2m[36m(pid=15882)[0m     @     0x559373164a20 method_vectorcall
[2m[36m(pid=15882)[0m     @     0x5593730d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15882)[0m     @     0x559373163baf _PyEval_EvalCodeWithName
[2m[36m(pid=15882)[0m     @     0x559373164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15882)[0m     @     0x5593730d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15882)[0m     @     0x559373163baf _PyEval_EvalCodeWithName
[2m[36m(pid=15882)[0m     @     0x559373164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15882)[0m     @     0x5593730d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15882)[0m     @     0x559373163baf _PyEval_EvalCodeWithName
[2m[36m(pid=15882)[0m     @     0x559373164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15882)[0m     @     0x5593730d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15882)[0m     @     0x559373163baf _PyEval_EvalCodeWithName
[2m[36m(pid=15882)[0m     @     0x559373164643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15882)[0m     @     0x5593730d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15885)[0m     @     0x7efaec4314f5 at::Tensor::copy_()
[2m[36m(pid=15885)[0m     @     0x7efaee9048de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15960)[0m     @     0x7f64cb88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15960)[0m     @     0x7f64c93ba4f5 at::Tensor::copy_()
[2m[36m(pid=15960)[0m     @     0x7f64cf46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15960)[0m     @     0x55cc072e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15960)[0m     @     0x55cc07242b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15960)[0m     @     0x55cc072cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15960)[0m     @     0x55cc072cea20 method_vectorcall
[2m[36m(pid=15960)[0m     @     0x55cc07242bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15960)[0m     @     0x55cc072cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15960)[0m     @     0x55cc072ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15960)[0m     @     0x55cc07243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15960)[0m     @     0x55cc072cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15960)[0m     @     0x55cc072ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15960)[0m     @     0x55cc07243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15960)[0m     @     0x55cc072cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15960)[0m     @     0x55cc072ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15960)[0m     @     0x55cc07243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15960)[0m     @     0x55cc072cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15960)[0m     @     0x55cc072ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15960)[0m     @     0x55cc07243689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x7fa4c637c4f5 at::Tensor::copy_()
[2m[36m(pid=15931)[0m     @     0x7fa4c884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15931)[0m     @     0x7fa4c637c4f5 at::Tensor::copy_()
[2m[36m(pid=15943)[0m     @     0x7f06d08354f5 at::Tensor::copy_()
[2m[36m(pid=15943)[0m     @     0x7f06d2d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15943)[0m     @     0x7f06d08354f5 at::Tensor::copy_()
[2m[36m(pid=15943)[0m     @     0x7f06d68e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15943)[0m     @     0x55b6ec25bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15943)[0m     @     0x55b6ec1b6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15943)[0m     @     0x55b6ec241baf _PyEval_EvalCodeWithName
[2m[36m(pid=15943)[0m     @     0x55b6ec242a20 method_vectorcall
[2m[36m(pid=15943)[0m     @     0x55b6ec1b6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15943)[0m     @     0x55b6ec241baf _PyEval_EvalCodeWithName
[2m[36m(pid=15943)[0m     @     0x55b6ec242643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15943)[0m     @     0x55b6ec1b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15943)[0m     @     0x55b6ec241baf _PyEval_EvalCodeWithName
[2m[36m(pid=15943)[0m     @     0x55b6ec242643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15943)[0m     @     0x55b6ec1b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15943)[0m     @     0x55b6ec241baf _PyEval_EvalCodeWithName
[2m[36m(pid=15943)[0m     @     0x55b6ec242643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15943)[0m     @     0x55b6ec1b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15943)[0m     @     0x55b6ec241baf _PyEval_EvalCodeWithName
[2m[36m(pid=15943)[0m     @     0x55b6ec242643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15951)[0m     @     0x7f99dc79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15951)[0m     @     0x7f99da2cb4f5 at::Tensor::copy_()
[2m[36m(pid=15951)[0m     @     0x7f99e037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15951)[0m     @     0x559ee6065fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15951)[0m     @     0x559ee5fc0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15951)[0m     @     0x559ee604bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15951)[0m     @     0x559ee604ca20 method_vectorcall
[2m[36m(pid=15951)[0m     @     0x559ee5fc0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15951)[0m     @     0x559ee604bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15951)[0m     @     0x559ee604c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15951)[0m     @     0x559ee5fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15951)[0m     @     0x559ee604bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15951)[0m     @     0x559ee604c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15951)[0m     @     0x559ee5fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15951)[0m     @     0x559ee604bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15951)[0m     @     0x559ee604c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15951)[0m     @     0x559ee5fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15951)[0m     @     0x559ee604bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15951)[0m     @     0x559ee604c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15951)[0m     @     0x559ee5fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15991)[0m     @     0x7ee3b0f604f5 at::Tensor::copy_()
[2m[36m(pid=15991)[0m     @     0x7ee3b34338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15968)[0m     @     0x7f46c07e04f5 at::Tensor::copy_()
[2m[36m(pid=15968)[0m     @     0x7f46c2cb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15968)[0m     @     0x7f46c07e04f5 at::Tensor::copy_()
[2m[36m(pid=15968)[0m     @     0x7f46c688b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15968)[0m     @     0x555c23917fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15968)[0m     @     0x555c23872b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15968)[0m     @     0x555c238fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15968)[0m     @     0x555c238fea20 method_vectorcall
[2m[36m(pid=15968)[0m     @     0x555c23872bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15968)[0m     @     0x555c238fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15968)[0m     @     0x555c238fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15968)[0m     @     0x555c23873689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15968)[0m     @     0x555c238fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15968)[0m     @     0x555c238fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15968)[0m     @     0x555c23873689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15968)[0m     @     0x555c238fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15968)[0m     @     0x555c238fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15968)[0m     @     0x555c23873689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15968)[0m     @     0x555c238fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15968)[0m     @     0x555c238fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15968)[0m     @     0x555c23873689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15878)[0m     @     0x7fa74fc814f5 at::Tensor::copy_()
[2m[36m(pid=15878)[0m     @     0x7fa7521548de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15878)[0m     @     0x7fa74fc814f5 at::Tensor::copy_()
[2m[36m(pid=15878)[0m     @     0x7fa755d2c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15878)[0m     @     0x559e7a58ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15878)[0m     @     0x559e7a4eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15878)[0m     @     0x559e7a575baf _PyEval_EvalCodeWithName
[2m[36m(pid=15878)[0m     @     0x559e7a576a20 method_vectorcall
[2m[36m(pid=15878)[0m     @     0x559e7a4eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15878)[0m     @     0x559e7a575baf _PyEval_EvalCodeWithName
[2m[36m(pid=15878)[0m     @     0x559e7a576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15878)[0m     @     0x559e7a4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15878)[0m     @     0x559e7a575baf _PyEval_EvalCodeWithName
[2m[36m(pid=15878)[0m     @     0x559e7a576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15898)[0m     @     0x7f0faea944f5 at::Tensor::copy_()
[2m[36m(pid=15898)[0m     @     0x7f0fb4b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15898)[0m     @     0x5610ea5e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15898)[0m     @     0x5610ea542b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15898)[0m     @     0x5610ea5cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15898)[0m     @     0x5610ea5cea20 method_vectorcall
[2m[36m(pid=15898)[0m     @     0x5610ea542bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15898)[0m     @     0x5610ea5cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15898)[0m     @     0x5610ea5ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15898)[0m     @     0x5610ea543689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15898)[0m     @     0x5610ea5cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15898)[0m     @     0x5610ea5ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15898)[0m     @     0x5610ea543689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15898)[0m     @     0x5610ea5cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15898)[0m     @     0x5610ea5ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15898)[0m     @     0x5610ea543689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15898)[0m     @     0x5610ea5cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15898)[0m     @     0x5610ea5ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15898)[0m     @     0x5610ea543689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15923)[0m     @     0x7ef8424778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15923)[0m     @     0x7ef83ffa44f5 at::Tensor::copy_()
[2m[36m(pid=15923)[0m     @     0x7ef84604f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15923)[0m     @     0x55a8a41b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15923)[0m     @     0x55a8a4111b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15923)[0m     @     0x55a8a419cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15923)[0m     @     0x55a8a419da20 method_vectorcall
[2m[36m(pid=15923)[0m     @     0x55a8a4111bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15923)[0m     @     0x55a8a419cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15923)[0m     @     0x55a8a419d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15923)[0m     @     0x55a8a4112689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15923)[0m     @     0x55a8a419cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15923)[0m     @     0x55a8a419d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15923)[0m     @     0x55a8a4112689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15923)[0m     @     0x55a8a419cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15923)[0m     @     0x55a8a419d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15923)[0m     @     0x55a8a4112689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15923)[0m     @     0x55a8a419cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15923)[0m     @     0x55a8a419d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15923)[0m     @     0x55a8a4112689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15948)[0m     @     0x7edff31fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15950)[0m     @     0x7ed09a9e74f5 at::Tensor::copy_()
[2m[36m(pid=15950)[0m     @     0x7ed09ceba8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15891)[0m     @     0x7f5b8884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15891)[0m     @     0x7f5b8637c4f5 at::Tensor::copy_()
[2m[36m(pid=15891)[0m     @     0x7f5b8c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15891)[0m     @     0x56116e57cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15891)[0m     @     0x56116e4d7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15891)[0m     @     0x56116e562baf _PyEval_EvalCodeWithName
[2m[36m(pid=15956)[0m     @     0x7f6fb93ba4f5 at::Tensor::copy_()
[2m[36m(pid=15956)[0m     @     0x7f6fbb88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15956)[0m     @     0x7f6fb93ba4f5 at::Tensor::copy_()
[2m[36m(pid=15956)[0m     @     0x7f6fbf46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15956)[0m     @     0x562ce0d6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15880)[0m     @     0x7fa48a7118de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15880)[0m     @     0x7fa48823e4f5 at::Tensor::copy_()
[2m[36m(pid=15880)[0m     @     0x7fa48e0e179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15880)[0m     @     0x556b0fbb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15880)[0m     @     0x556b0fb12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15880)[0m     @     0x556b0fb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15880)[0m     @     0x556b0fb9ea20 method_vectorcall
[2m[36m(pid=15880)[0m     @     0x556b0fb12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15880)[0m     @     0x556b0fb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15880)[0m     @     0x556b0fb9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15880)[0m     @     0x556b0fb13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15880)[0m     @     0x556b0fb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15880)[0m     @     0x556b0fb9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15880)[0m     @     0x556b0fb13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15880)[0m     @     0x556b0fb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15880)[0m     @     0x556b0fb9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15967)[0m     @     0x7ef530e178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15967)[0m     @     0x7ef52e9444f5 at::Tensor::copy_()
[2m[36m(pid=15967)[0m     @     0x7ef5349ef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15967)[0m     @     0x558786f07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15967)[0m     @     0x558786e62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15967)[0m     @     0x558786eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15967)[0m     @     0x558786eeea20 method_vectorcall
[2m[36m(pid=15967)[0m     @     0x558786e62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15967)[0m     @     0x558786eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15967)[0m     @     0x558786eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15967)[0m     @     0x558786e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15967)[0m     @     0x558786eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15967)[0m     @     0x558786eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15967)[0m     @     0x558786e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15967)[0m     @     0x558786eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15967)[0m     @     0x558786eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15967)[0m     @     0x558786e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15967)[0m     @     0x558786eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15967)[0m     @     0x558786eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15967)[0m     @     0x558786e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15893)[0m     @     0x7f67b300cd91 at::TensorIterator::for_each()
[2m[36m(pid=15893)[0m     @     0x7f67b38efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15893)[0m     @     0x7f67b3912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15872)[0m     @     0x7f4877ef44f5 at::Tensor::copy_()
[2m[36m(pid=15872)[0m     @     0x7f487a3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15872)[0m     @     0x7f4877ef44f5 at::Tensor::copy_()
[2m[36m(pid=15872)[0m     @     0x7f487df9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15872)[0m     @     0x55b7a8fd0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15872)[0m     @     0x55b7a8f2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15872)[0m     @     0x55b7a8fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15872)[0m     @     0x55b7a8fb7a20 method_vectorcall
[2m[36m(pid=15872)[0m     @     0x55b7a8f2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15872)[0m     @     0x55b7a8fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15872)[0m     @     0x55b7a8fb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15872)[0m     @     0x55b7a8f2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15872)[0m     @     0x55b7a8fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15872)[0m     @     0x55b7a8fb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15872)[0m     @     0x55b7a8f2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15872)[0m     @     0x55b7a8fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15872)[0m     @     0x55b7a8fb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15872)[0m     @     0x55b7a8f2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15872)[0m     @     0x55b7a8fb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15872)[0m     @     0x55b7a8fb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15872)[0m     @     0x55b7a8f2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15871)[0m     @     0x7f91f16b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15871)[0m     @     0x7f91ef1e04f5 at::Tensor::copy_()
[2m[36m(pid=15871)[0m     @     0x7f91f528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15871)[0m     @     0x558999764fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15871)[0m     @     0x5589996bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15871)[0m     @     0x55899974abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15871)[0m     @     0x55899974ba20 method_vectorcall
[2m[36m(pid=15871)[0m     @     0x5589996bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15871)[0m     @     0x55899974abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15871)[0m     @     0x55899974b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15871)[0m     @     0x5589996c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15871)[0m     @     0x55899974abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15871)[0m     @     0x55899974b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15871)[0m     @     0x5589996c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15871)[0m     @     0x55899974abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15871)[0m     @     0x55899974b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15871)[0m     @     0x5589996c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15871)[0m     @     0x55899974abaf _PyEval_EvalCodeWithName
[2m[36m(pid=15871)[0m     @     0x55899974b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15871)[0m     @     0x5589996c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15897)[0m     @     0x7f144ec7f5a4 at::native::copy_()
[2m[36m(pid=15897)[0m     @     0x7f144f36a4f5 at::Tensor::copy_()
[2m[36m(pid=15897)[0m     @     0x7f145183d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15890)[0m     @     0x7fb0cccfe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15890)[0m     @     0x7fb0ca82b4f5 at::Tensor::copy_()
[2m[36m(pid=15890)[0m     @     0x7fb0d08d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15890)[0m     @     0x55696800cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15890)[0m     @     0x556967f67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15890)[0m     @     0x556967ff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15890)[0m     @     0x556967ff3a20 method_vectorcall
[2m[36m(pid=15890)[0m     @     0x556967f67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15890)[0m     @     0x556967ff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15890)[0m     @     0x556967ff3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15890)[0m     @     0x556967f68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15890)[0m     @     0x556967ff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15890)[0m     @     0x556967ff3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15890)[0m     @     0x556967f68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15890)[0m     @     0x556967ff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15890)[0m     @     0x556967ff3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15890)[0m     @     0x556967f68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15890)[0m     @     0x556967ff2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15890)[0m     @     0x556967ff3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15890)[0m     @     0x556967f68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x7f775ba0c5a4 at::native::copy_()
[2m[36m(pid=15873)[0m     @     0x7f775c0f74f5 at::Tensor::copy_()
[2m[36m(pid=15873)[0m     @     0x7f775e5ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15966)[0m     @     0x7ee890e9b4f5 at::Tensor::copy_()
[2m[36m(pid=15966)[0m     @     0x7ee89336e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15966)[0m     @     0x7ee890e9b4f5 at::Tensor::copy_()
[2m[36m(pid=15966)[0m     @     0x7ee896f4679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15966)[0m     @     0x557fd7dcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15966)[0m     @     0x557fd7d25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x7f4e61552ad3 at::TensorIterator::for_each()
[2m[36m(pid=15887)[0m     @     0x7f4e61552d91 at::TensorIterator::for_each()
[2m[36m(pid=15887)[0m     @     0x7f4e61e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15887)[0m     @     0x7f4e61e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15886)[0m     @     0x7f1b4f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15886)[0m     @     0x7f1b4f807388 at::native::copy_impl()
[2m[36m(pid=15886)[0m     @     0x7f1b4f8095a4 at::native::copy_()
[2m[36m(pid=15927)[0m     @     0x7f22b527a5a4 at::native::copy_()
[2m[36m(pid=15927)[0m     @     0x7f22b59654f5 at::Tensor::copy_()
[2m[36m(pid=15927)[0m     @     0x7f22b7e388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15877)[0m     @     0x7f653a6ff5a4 at::native::copy_()
[2m[36m(pid=15877)[0m     @     0x7f653adea4f5 at::Tensor::copy_()
[2m[36m(pid=15877)[0m     @     0x7f653d2bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15941)[0m     @     0x7f7415a525a4 at::native::copy_()
[2m[36m(pid=15941)[0m     @     0x7f741613d4f5 at::Tensor::copy_()
[2m[36m(pid=15941)[0m     @     0x7f74186108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15899)[0m     @     0x7fb3c2c7bd91 at::TensorIterator::for_each()
[2m[36m(pid=15899)[0m     @     0x7fb3c355eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15899)[0m     @     0x7fb3c3581c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15995)[0m     @     0x7ecf1a37c4f5 at::Tensor::copy_()
[2m[36m(pid=15995)[0m     @     0x7ecf2042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15995)[0m     @     0x55fc125defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15995)[0m     @     0x55fc12539b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15995)[0m     @     0x55fc125c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15995)[0m     @     0x55fc125c5a20 method_vectorcall
[2m[36m(pid=15995)[0m     @     0x55fc12539bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15995)[0m     @     0x55fc125c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15995)[0m     @     0x55fc125c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15995)[0m     @     0x55fc1253a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15995)[0m     @     0x55fc125c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15995)[0m     @     0x55fc125c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15995)[0m     @     0x55fc1253a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15995)[0m     @     0x55fc125c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15995)[0m     @     0x55fc125c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15995)[0m     @     0x55fc1253a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15995)[0m     @     0x55fc125c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=15995)[0m     @     0x55fc125c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15995)[0m     @     0x55fc1253a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15869)[0m     @     0x7ece5c0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15869)[0m     @     0x7ece5c101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15869)[0m     @     0x7ece5b5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15983)[0m     @     0x7f3a182cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15983)[0m     @     0x7f3a15dfa4f5 at::Tensor::copy_()
[2m[36m(pid=15983)[0m     @     0x7f3a1bea579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15983)[0m     @     0x56393ed9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15983)[0m     @     0x56393ecf6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15983)[0m     @     0x56393ed81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15983)[0m     @     0x56393ed82a20 method_vectorcall
[2m[36m(pid=15983)[0m     @     0x56393ecf6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15983)[0m     @     0x56393ed81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15983)[0m     @     0x56393ed82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15983)[0m     @     0x56393ecf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15983)[0m     @     0x56393ed81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15983)[0m     @     0x56393ed82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15983)[0m     @     0x56393ecf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15983)[0m     @     0x56393ed81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15983)[0m     @     0x56393ed82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15983)[0m     @     0x56393ecf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15983)[0m     @     0x56393ed81baf _PyEval_EvalCodeWithName
[2m[36m(pid=15983)[0m     @     0x56393ed82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15983)[0m     @     0x56393ecf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15900)[0m     @     0x7f743b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15900)[0m     @     0x7f74392b54f5 at::Tensor::copy_()
[2m[36m(pid=15900)[0m     @     0x7f743f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15900)[0m     @     0x55b1b92a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15900)[0m     @     0x55b1b9203b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15900)[0m     @     0x55b1b928ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15900)[0m     @     0x55b1b928fa20 method_vectorcall
[2m[36m(pid=15900)[0m     @     0x55b1b9203bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15900)[0m     @     0x55b1b928ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15900)[0m     @     0x55b1b928f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15900)[0m     @     0x55b1b9204689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15900)[0m     @     0x55b1b928ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15900)[0m     @     0x55b1b928f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15900)[0m     @     0x55b1b9204689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15900)[0m     @     0x55b1b928ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15900)[0m     @     0x55b1b928f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15900)[0m     @     0x55b1b9204689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15900)[0m     @     0x55b1b928ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15900)[0m     @     0x55b1b928f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15900)[0m     @     0x55b1b9204689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x7ef41ace0ad3 at::TensorIterator::for_each()
[2m[36m(pid=15939)[0m     @     0x7ef41ace0d91 at::TensorIterator::for_each()
[2m[36m(pid=15939)[0m     @     0x7ef41b5c3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15884)[0m     @     0x7f622098a4f5 at::Tensor::copy_()
[2m[36m(pid=15884)[0m     @     0x7f6222e5d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15884)[0m     @     0x7f622098a4f5 at::Tensor::copy_()
[2m[36m(pid=15884)[0m     @     0x7f6226a3579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15884)[0m     @     0x560bffe9cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15884)[0m     @     0x560bffdf7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15884)[0m     @     0x560bffe82baf _PyEval_EvalCodeWithName
[2m[36m(pid=15884)[0m     @     0x560bffe83a20 method_vectorcall
[2m[36m(pid=15884)[0m     @     0x560bffdf7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15884)[0m     @     0x560bffe82baf _PyEval_EvalCodeWithName
[2m[36m(pid=15884)[0m     @     0x560bffe83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15884)[0m     @     0x560bffdf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15884)[0m     @     0x560bffe82baf _PyEval_EvalCodeWithName
[2m[36m(pid=15884)[0m     @     0x560bffe83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15884)[0m     @     0x560bffdf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15884)[0m     @     0x560bffe82baf _PyEval_EvalCodeWithName
[2m[36m(pid=15884)[0m     @     0x560bffe83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15884)[0m     @     0x560bffdf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15884)[0m     @     0x560bffe82baf _PyEval_EvalCodeWithName
[2m[36m(pid=15884)[0m     @     0x560bffe83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15884)[0m     @     0x560bffdf8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15896)[0m     @     0x7ed7c53e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15896)[0m     @     0x7ed7c2f0e4f5 at::Tensor::copy_()
[2m[36m(pid=15896)[0m     @     0x7ed7c8fb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15896)[0m     @     0x561be6bdafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15896)[0m     @     0x561be6b35b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15896)[0m     @     0x561be6bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15896)[0m     @     0x561be6bc1a20 method_vectorcall
[2m[36m(pid=15896)[0m     @     0x561be6b35bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15896)[0m     @     0x561be6bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15896)[0m     @     0x561be6bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15896)[0m     @     0x561be6b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15896)[0m     @     0x561be6bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15896)[0m     @     0x561be6bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15896)[0m     @     0x561be6b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15896)[0m     @     0x561be6bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15896)[0m     @     0x561be6bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15896)[0m     @     0x561be6b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15896)[0m     @     0x561be6bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15896)[0m     @     0x561be6bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15896)[0m     @     0x561be6b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15902)[0m     @     0x7f2f94c648de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15902)[0m     @     0x7f2f927914f5 at::Tensor::copy_()
[2m[36m(pid=15902)[0m     @     0x7f2f9883c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15902)[0m     @     0x555ba9ad0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15902)[0m     @     0x555ba9a2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15902)[0m     @     0x555ba9ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15902)[0m     @     0x555ba9ab7a20 method_vectorcall
[2m[36m(pid=15902)[0m     @     0x555ba9a2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15902)[0m     @     0x555ba9ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15902)[0m     @     0x555ba9ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15902)[0m     @     0x555ba9a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15902)[0m     @     0x555ba9ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15902)[0m     @     0x555ba9ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15902)[0m     @     0x555ba9a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15902)[0m     @     0x555ba9ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15902)[0m     @     0x555ba9ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15902)[0m     @     0x555ba9a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15902)[0m     @     0x555ba9ab6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15902)[0m     @     0x555ba9ab7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15902)[0m     @     0x555ba9a2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15932)[0m     @     0x7efab61ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15932)[0m     @     0x7efab3cf74f5 at::Tensor::copy_()
[2m[36m(pid=15932)[0m     @     0x7efab9da279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15932)[0m     @     0x5609feb57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15932)[0m     @     0x5609feab2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15932)[0m     @     0x5609feb3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15932)[0m     @     0x5609feb3ea20 method_vectorcall
[2m[36m(pid=15932)[0m     @     0x5609feab2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15932)[0m     @     0x5609feb3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15932)[0m     @     0x5609feb3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15932)[0m     @     0x5609feab3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15932)[0m     @     0x5609feb3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15932)[0m     @     0x5609feb3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15932)[0m     @     0x5609feab3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15932)[0m     @     0x5609feb3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15932)[0m     @     0x5609feb3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15932)[0m     @     0x5609feab3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15932)[0m     @     0x5609feb3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15932)[0m     @     0x5609feb3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15932)[0m     @     0x5609feab3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x7f2659ebc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15901)[0m     @     0x55deec32ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15901)[0m     @     0x55deec28ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x55deec315baf _PyEval_EvalCodeWithName
[2m[36m(pid=15901)[0m     @     0x55deec316a20 method_vectorcall
[2m[36m(pid=15901)[0m     @     0x55deec28abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x55deec315baf _PyEval_EvalCodeWithName
[2m[36m(pid=15901)[0m     @     0x55deec316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15901)[0m     @     0x55deec28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x55deec315baf _PyEval_EvalCodeWithName
[2m[36m(pid=15901)[0m     @     0x55deec316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15901)[0m     @     0x55deec28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x55deec315baf _PyEval_EvalCodeWithName
[2m[36m(pid=15901)[0m     @     0x55deec316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15901)[0m     @     0x55deec28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15901)[0m     @     0x55deec315baf _PyEval_EvalCodeWithName
[2m[36m(pid=15901)[0m     @     0x55deec316643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15901)[0m     @     0x55deec28b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15952)[0m     @     0x7f4bbaaa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15952)[0m     @     0x55e7728c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15952)[0m     @     0x55e77281bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15952)[0m     @     0x55e7728a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15952)[0m     @     0x55e7728a7a20 method_vectorcall
[2m[36m(pid=15952)[0m     @     0x55e77281bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15952)[0m     @     0x55e7728a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15952)[0m     @     0x55e7728a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15952)[0m     @     0x55e77281c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15952)[0m     @     0x55e7728a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15952)[0m     @     0x55e7728a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15952)[0m     @     0x55e77281c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15952)[0m     @     0x55e7728a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15952)[0m     @     0x55e7728a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15952)[0m     @     0x55e77281c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15952)[0m     @     0x55e7728a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=15952)[0m     @     0x55e7728a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15952)[0m     @     0x55e77281c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15949)[0m     @     0x7f2eed1275a4 at::native::copy_()
[2m[36m(pid=15949)[0m     @     0x7f2eed8124f5 at::Tensor::copy_()
[2m[36m(pid=15959)[0m     @     0x7f912f8fa4f5 at::Tensor::copy_()
[2m[36m(pid=15959)[0m     @     0x7f91359a579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15959)[0m     @     0x55db92fcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15959)[0m     @     0x55db92f25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15959)[0m     @     0x55db92fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15959)[0m     @     0x55db92fb1a20 method_vectorcall
[2m[36m(pid=15959)[0m     @     0x55db92f25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15959)[0m     @     0x55db92fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15959)[0m     @     0x55db92fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15959)[0m     @     0x55db92f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15959)[0m     @     0x55db92fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15959)[0m     @     0x55db92fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15959)[0m     @     0x55db92f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15959)[0m     @     0x55db92fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15959)[0m     @     0x55db92fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15959)[0m     @     0x55db92f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15959)[0m     @     0x55db92fb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15959)[0m     @     0x55db92fb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15959)[0m     @     0x55db92f26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15975)[0m     @     0x7f92793ba4f5 at::Tensor::copy_()
[2m[36m(pid=15975)[0m     @     0x7f927f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15975)[0m     @     0x55a4e633afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15975)[0m     @     0x55a4e6295b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15975)[0m     @     0x55a4e6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=15975)[0m     @     0x55a4e6321a20 method_vectorcall
[2m[36m(pid=15975)[0m     @     0x55a4e6295bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15975)[0m     @     0x55a4e6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=15975)[0m     @     0x55a4e6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15975)[0m     @     0x55a4e6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15975)[0m     @     0x55a4e6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=15975)[0m     @     0x55a4e6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15975)[0m     @     0x55a4e6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15975)[0m     @     0x55a4e6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=15975)[0m     @     0x55a4e6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15975)[0m     @     0x55a4e6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15975)[0m     @     0x55a4e6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=15975)[0m     @     0x55a4e6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15975)[0m     @     0x55a4e6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15874)[0m     @     0x7f9fd288b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15874)[0m     @     0x564a2dd21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15874)[0m     @     0x564a2dc7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15874)[0m     @     0x564a2dd07baf _PyEval_EvalCodeWithName
[2m[36m(pid=15874)[0m     @     0x564a2dd08a20 method_vectorcall
[2m[36m(pid=15874)[0m     @     0x564a2dc7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15874)[0m     @     0x564a2dd07baf _PyEval_EvalCodeWithName
[2m[36m(pid=15874)[0m     @     0x564a2dd08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15874)[0m     @     0x564a2dc7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15874)[0m     @     0x564a2dd07baf _PyEval_EvalCodeWithName
[2m[36m(pid=15874)[0m     @     0x564a2dd08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15874)[0m     @     0x564a2dc7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15874)[0m     @     0x564a2dd07baf _PyEval_EvalCodeWithName
[2m[36m(pid=15874)[0m     @     0x564a2dd08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15874)[0m     @     0x564a2dc7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15874)[0m     @     0x564a2dd07baf _PyEval_EvalCodeWithName
[2m[36m(pid=15874)[0m     @     0x564a2dd08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15874)[0m     @     0x564a2dc7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15889)[0m     @     0x7f51bd2c24f5 at::Tensor::copy_()
[2m[36m(pid=15889)[0m     @     0x7f51c336d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15889)[0m     @     0x560636c58fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15889)[0m     @     0x560636bb3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15889)[0m     @     0x560636c3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15889)[0m     @     0x560636c3fa20 method_vectorcall
[2m[36m(pid=15889)[0m     @     0x560636bb3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15889)[0m     @     0x560636c3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15889)[0m     @     0x560636c3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15889)[0m     @     0x560636bb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15889)[0m     @     0x560636c3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15889)[0m     @     0x560636c3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15889)[0m     @     0x560636bb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15889)[0m     @     0x560636c3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15889)[0m     @     0x560636c3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15889)[0m     @     0x560636bb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15889)[0m     @     0x560636c3ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15889)[0m     @     0x560636c3f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15889)[0m     @     0x560636bb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15888)[0m     @     0x7f72801cf4f5 at::Tensor::copy_()
[2m[36m(pid=15888)[0m     @     0x7f728627a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15888)[0m     @     0x55b2ff078fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15888)[0m     @     0x55b2fefd3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15888)[0m     @     0x55b2ff05ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15888)[0m     @     0x55b2ff05fa20 method_vectorcall
[2m[36m(pid=15888)[0m     @     0x55b2fefd3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15888)[0m     @     0x55b2ff05ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15888)[0m     @     0x55b2ff05f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15888)[0m     @     0x55b2fefd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15888)[0m     @     0x55b2ff05ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15888)[0m     @     0x55b2ff05f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15888)[0m     @     0x55b2fefd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15888)[0m     @     0x55b2ff05ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15888)[0m     @     0x55b2ff05f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15888)[0m     @     0x55b2fefd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15888)[0m     @     0x55b2ff05ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15888)[0m     @     0x55b2ff05f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15888)[0m     @     0x55b2fefd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15963)[0m     @     0x7f45fcc494f5 at::Tensor::copy_()
[2m[36m(pid=15963)[0m     @     0x7f4602cf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15963)[0m     @     0x564d4e7ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15963)[0m     @     0x564d4e747b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15963)[0m     @     0x564d4e7d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15963)[0m     @     0x564d4e7d3a20 method_vectorcall
[2m[36m(pid=15963)[0m     @     0x564d4e747bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15963)[0m     @     0x564d4e7d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15963)[0m     @     0x564d4e7d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15963)[0m     @     0x564d4e748689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15963)[0m     @     0x564d4e7d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15963)[0m     @     0x564d4e7d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15963)[0m     @     0x564d4e748689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15963)[0m     @     0x564d4e7d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15963)[0m     @     0x564d4e7d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15963)[0m     @     0x564d4e748689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15963)[0m     @     0x564d4e7d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15963)[0m     @     0x564d4e7d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15963)[0m     @     0x564d4e748689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15957)[0m     @     0x7f8e0e5e24f5 at::Tensor::copy_()
[2m[36m(pid=15957)[0m     @     0x7f8e10ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15957)[0m     @     0x7f8e0e5e24f5 at::Tensor::copy_()
[2m[36m(pid=15868)[0m     @     0x7fbb3006ed91 at::TensorIterator::for_each()
[2m[36m(pid=15868)[0m     @     0x7fbb30951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=15986)[0m     @     0x7ee2993ba4f5 at::Tensor::copy_()
[2m[36m(pid=15986)[0m     @     0x7ee29f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15986)[0m     @     0x56435e29afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15986)[0m     @     0x56435e1f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15986)[0m     @     0x56435e280baf _PyEval_EvalCodeWithName
[2m[36m(pid=15986)[0m     @     0x56435e281a20 method_vectorcall
[2m[36m(pid=15986)[0m     @     0x56435e1f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15986)[0m     @     0x56435e280baf _PyEval_EvalCodeWithName
[2m[36m(pid=15986)[0m     @     0x56435e281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15986)[0m     @     0x56435e1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15986)[0m     @     0x56435e280baf _PyEval_EvalCodeWithName
[2m[36m(pid=15986)[0m     @     0x56435e281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15986)[0m     @     0x56435e1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15986)[0m     @     0x56435e280baf _PyEval_EvalCodeWithName
[2m[36m(pid=15986)[0m     @     0x56435e281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15986)[0m     @     0x56435e1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15986)[0m     @     0x56435e280baf _PyEval_EvalCodeWithName
[2m[36m(pid=15986)[0m     @     0x56435e281643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15986)[0m     @     0x56435e1f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15875)[0m     @     0x55d9e94e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15875)[0m     @     0x55d9e94e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15875)[0m     @     0x55d9e945b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15875)[0m     @     0x55d9e94e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15875)[0m     @     0x55d9e94e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15875)[0m     @     0x55d9e945b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15875)[0m     @     0x55d9e94e5baf _PyEval_EvalCodeWithName
[2m[36m(pid=15875)[0m     @     0x55d9e94e6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15875)[0m     @     0x55d9e945b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15885)[0m     @     0x7efaec4314f5 at::Tensor::copy_()
[2m[36m(pid=15885)[0m     @     0x7efaf24dc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15885)[0m     @     0x55f82fb36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15885)[0m     @     0x55f82fa91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15885)[0m     @     0x55f82fb1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15885)[0m     @     0x55f82fb1da20 method_vectorcall
[2m[36m(pid=15885)[0m     @     0x55f82fa91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15885)[0m     @     0x55f82fb1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15885)[0m     @     0x55f82fb1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15885)[0m     @     0x55f82fa92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15885)[0m     @     0x55f82fb1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15885)[0m     @     0x55f82fb1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15885)[0m     @     0x55f82fa92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15885)[0m     @     0x55f82fb1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15885)[0m     @     0x55f82fb1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15885)[0m     @     0x55f82fa92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15885)[0m     @     0x55f82fb1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15885)[0m     @     0x55f82fb1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15885)[0m     @     0x55f82fa92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x7fa4cc42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15931)[0m     @     0x55ff04ee4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15931)[0m     @     0x55ff04e3fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x55ff04ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15931)[0m     @     0x55ff04ecba20 method_vectorcall
[2m[36m(pid=15931)[0m     @     0x55ff04e3fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x55ff04ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15931)[0m     @     0x55ff04ecb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15931)[0m     @     0x55ff04e40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x55ff04ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15931)[0m     @     0x55ff04ecb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15931)[0m     @     0x55ff04e40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x55ff04ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15931)[0m     @     0x55ff04ecb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15931)[0m     @     0x55ff04e40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15931)[0m     @     0x55ff04ecabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15931)[0m     @     0x55ff04ecb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15931)[0m     @     0x55ff04e40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15943)[0m     @     0x55b6ec1b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15991)[0m     @     0x7ee3b0f604f5 at::Tensor::copy_()
[2m[36m(pid=15991)[0m     @     0x7ee3b700b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15991)[0m     @     0x5626c9704fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15991)[0m     @     0x5626c965fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15991)[0m     @     0x5626c96eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15991)[0m     @     0x5626c96eba20 method_vectorcall
[2m[36m(pid=15991)[0m     @     0x5626c965fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15991)[0m     @     0x5626c96eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15991)[0m     @     0x5626c96eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15991)[0m     @     0x5626c9660689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15991)[0m     @     0x5626c96eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15991)[0m     @     0x5626c96eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15991)[0m     @     0x5626c9660689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15991)[0m     @     0x5626c96eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15991)[0m     @     0x5626c96eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15991)[0m     @     0x5626c9660689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15991)[0m     @     0x5626c96eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=15991)[0m     @     0x5626c96eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15991)[0m     @     0x5626c9660689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15878)[0m     @     0x559e7a4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15878)[0m     @     0x559e7a575baf _PyEval_EvalCodeWithName
[2m[36m(pid=15878)[0m     @     0x559e7a576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15878)[0m     @     0x559e7a4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15878)[0m     @     0x559e7a575baf _PyEval_EvalCodeWithName
[2m[36m(pid=15878)[0m     @     0x559e7a576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15878)[0m     @     0x559e7a4eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15948)[0m     @     0x7edff0d274f5 at::Tensor::copy_()
[2m[36m(pid=15948)[0m     @     0x7edff6dd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15948)[0m     @     0x55d2f6c30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15948)[0m     @     0x55d2f6b8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15948)[0m     @     0x55d2f6c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=15948)[0m     @     0x55d2f6c17a20 method_vectorcall
[2m[36m(pid=15948)[0m     @     0x55d2f6b8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15948)[0m     @     0x55d2f6c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=15948)[0m     @     0x55d2f6c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15948)[0m     @     0x55d2f6b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15948)[0m     @     0x55d2f6c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=15948)[0m     @     0x55d2f6c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15948)[0m     @     0x55d2f6b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15948)[0m     @     0x55d2f6c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=15948)[0m     @     0x55d2f6c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15948)[0m     @     0x55d2f6b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15948)[0m     @     0x55d2f6c16baf _PyEval_EvalCodeWithName
[2m[36m(pid=15948)[0m     @     0x55d2f6c17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15948)[0m     @     0x55d2f6b8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x7ed09a9e74f5 at::Tensor::copy_()
[2m[36m(pid=15950)[0m     @     0x7ed0a0a9279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15950)[0m     @     0x5555c19b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15950)[0m     @     0x5555c190db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x5555c1998baf _PyEval_EvalCodeWithName
[2m[36m(pid=15950)[0m     @     0x5555c1999a20 method_vectorcall
[2m[36m(pid=15950)[0m     @     0x5555c190dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x5555c1998baf _PyEval_EvalCodeWithName
[2m[36m(pid=15950)[0m     @     0x5555c1999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15950)[0m     @     0x5555c190e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x5555c1998baf _PyEval_EvalCodeWithName
[2m[36m(pid=15950)[0m     @     0x5555c1999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15950)[0m     @     0x5555c190e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x5555c1998baf _PyEval_EvalCodeWithName
[2m[36m(pid=15950)[0m     @     0x5555c1999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15950)[0m     @     0x5555c190e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15950)[0m     @     0x5555c1998baf _PyEval_EvalCodeWithName
[2m[36m(pid=15950)[0m     @     0x5555c1999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15950)[0m     @     0x5555c190e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15891)[0m     @     0x56116e563a20 method_vectorcall
[2m[36m(pid=15891)[0m     @     0x56116e4d7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15891)[0m     @     0x56116e562baf _PyEval_EvalCodeWithName
[2m[36m(pid=15891)[0m     @     0x56116e563643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15891)[0m     @     0x56116e4d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15891)[0m     @     0x56116e562baf _PyEval_EvalCodeWithName
[2m[36m(pid=15891)[0m     @     0x56116e563643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15891)[0m     @     0x56116e4d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15891)[0m     @     0x56116e562baf _PyEval_EvalCodeWithName
[2m[36m(pid=15891)[0m     @     0x56116e563643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15891)[0m     @     0x56116e4d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15891)[0m     @     0x56116e562baf _PyEval_EvalCodeWithName
[2m[36m(pid=15891)[0m     @     0x56116e563643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15891)[0m     @     0x56116e4d8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15956)[0m     @     0x562ce0cc5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15956)[0m     @     0x562ce0d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15956)[0m     @     0x562ce0d51a20 method_vectorcall
[2m[36m(pid=15956)[0m     @     0x562ce0cc5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15956)[0m     @     0x562ce0d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15956)[0m     @     0x562ce0d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15956)[0m     @     0x562ce0cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15956)[0m     @     0x562ce0d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15956)[0m     @     0x562ce0d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15956)[0m     @     0x562ce0cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15956)[0m     @     0x562ce0d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15956)[0m     @     0x562ce0d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15956)[0m     @     0x562ce0cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15956)[0m     @     0x562ce0d50baf _PyEval_EvalCodeWithName
[2m[36m(pid=15956)[0m     @     0x562ce0d51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15956)[0m     @     0x562ce0cc6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15880)[0m     @     0x556b0fb13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15880)[0m     @     0x556b0fb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15880)[0m     @     0x556b0fb9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15880)[0m     @     0x556b0fb13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15893)[0m     @     0x7f67b2db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15893)[0m     @     0x7f67b2db2388 at::native::copy_impl()
[2m[36m(pid=15897)[0m     @     0x7f144f36a4f5 at::Tensor::copy_()
[2m[36m(pid=15897)[0m     @     0x7f145541579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15897)[0m     @     0x557e64b89fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15897)[0m     @     0x557e64ae4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15897)[0m     @     0x557e64b6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15897)[0m     @     0x557e64b70a20 method_vectorcall
[2m[36m(pid=15897)[0m     @     0x557e64ae4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15897)[0m     @     0x557e64b6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15897)[0m     @     0x557e64b70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15897)[0m     @     0x557e64ae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15897)[0m     @     0x557e64b6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15897)[0m     @     0x557e64b70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15897)[0m     @     0x557e64ae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15897)[0m     @     0x557e64b6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15897)[0m     @     0x557e64b70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15897)[0m     @     0x557e64ae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15897)[0m     @     0x557e64b6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15897)[0m     @     0x557e64b70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15897)[0m     @     0x557e64ae5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x7f775c0f74f5 at::Tensor::copy_()
[2m[36m(pid=15873)[0m     @     0x7f77621a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15873)[0m     @     0x5582ebb13fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15873)[0m     @     0x5582eba6eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x5582ebaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x5582ebafaa20 method_vectorcall
[2m[36m(pid=15873)[0m     @     0x5582eba6ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x5582ebaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x5582ebafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15873)[0m     @     0x5582eba6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x5582ebaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x5582ebafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15873)[0m     @     0x5582eba6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x5582ebaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x5582ebafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15873)[0m     @     0x5582eba6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15873)[0m     @     0x5582ebaf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=15873)[0m     @     0x5582ebafa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15873)[0m     @     0x5582eba6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15966)[0m     @     0x557fd7db0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15966)[0m     @     0x557fd7db1a20 method_vectorcall
[2m[36m(pid=15966)[0m     @     0x557fd7d25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15966)[0m     @     0x557fd7db0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15966)[0m     @     0x557fd7db1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15966)[0m     @     0x557fd7d26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15966)[0m     @     0x557fd7db0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15966)[0m     @     0x557fd7db1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15966)[0m     @     0x557fd7d26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15966)[0m     @     0x557fd7db0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15966)[0m     @     0x557fd7db1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15966)[0m     @     0x557fd7d26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15966)[0m     @     0x557fd7db0baf _PyEval_EvalCodeWithName
[2m[36m(pid=15966)[0m     @     0x557fd7db1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15966)[0m     @     0x557fd7d26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x7f4e612faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15887)[0m     @     0x7f4e612f8388 at::native::copy_impl()
[2m[36m(pid=15886)[0m     @     0x7f1b4fef44f5 at::Tensor::copy_()
[2m[36m(pid=15886)[0m     @     0x7f1b523c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15927)[0m     @     0x7f22b59654f5 at::Tensor::copy_()
[2m[36m(pid=15927)[0m     @     0x7f22bba1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15927)[0m     @     0x56019f67afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15927)[0m     @     0x56019f5d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15927)[0m     @     0x56019f660baf _PyEval_EvalCodeWithName
[2m[36m(pid=15927)[0m     @     0x56019f661a20 method_vectorcall
[2m[36m(pid=15927)[0m     @     0x56019f5d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15927)[0m     @     0x56019f660baf _PyEval_EvalCodeWithName
[2m[36m(pid=15927)[0m     @     0x56019f661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15927)[0m     @     0x56019f5d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15927)[0m     @     0x56019f660baf _PyEval_EvalCodeWithName
[2m[36m(pid=15927)[0m     @     0x56019f661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15927)[0m     @     0x56019f5d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15927)[0m     @     0x56019f660baf _PyEval_EvalCodeWithName
[2m[36m(pid=15927)[0m     @     0x56019f661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15927)[0m     @     0x56019f5d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15927)[0m     @     0x56019f660baf _PyEval_EvalCodeWithName
[2m[36m(pid=15927)[0m     @     0x56019f661643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15927)[0m     @     0x56019f5d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15877)[0m     @     0x7f653adea4f5 at::Tensor::copy_()
[2m[36m(pid=15877)[0m     @     0x7f6540e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15877)[0m     @     0x55692b56efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15877)[0m     @     0x55692b4c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15877)[0m     @     0x55692b554baf _PyEval_EvalCodeWithName
[2m[36m(pid=15877)[0m     @     0x55692b555a20 method_vectorcall
[2m[36m(pid=15877)[0m     @     0x55692b4c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15877)[0m     @     0x55692b554baf _PyEval_EvalCodeWithName
[2m[36m(pid=15877)[0m     @     0x55692b555643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15877)[0m     @     0x55692b4ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15877)[0m     @     0x55692b554baf _PyEval_EvalCodeWithName
[2m[36m(pid=15877)[0m     @     0x55692b555643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15877)[0m     @     0x55692b4ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15877)[0m     @     0x55692b554baf _PyEval_EvalCodeWithName
[2m[36m(pid=15877)[0m     @     0x55692b555643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15877)[0m     @     0x55692b4ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15877)[0m     @     0x55692b554baf _PyEval_EvalCodeWithName
[2m[36m(pid=15877)[0m     @     0x55692b555643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15877)[0m     @     0x55692b4ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15941)[0m     @     0x7f741613d4f5 at::Tensor::copy_()
[2m[36m(pid=15941)[0m     @     0x7f741c1e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15941)[0m     @     0x55dc5190cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15941)[0m     @     0x55dc51867b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15941)[0m     @     0x55dc518f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15941)[0m     @     0x55dc518f3a20 method_vectorcall
[2m[36m(pid=15941)[0m     @     0x55dc51867bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15941)[0m     @     0x55dc518f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15941)[0m     @     0x55dc518f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15941)[0m     @     0x55dc51868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15941)[0m     @     0x55dc518f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15941)[0m     @     0x55dc518f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15941)[0m     @     0x55dc51868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15941)[0m     @     0x55dc518f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15941)[0m     @     0x55dc518f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15941)[0m     @     0x55dc51868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15941)[0m     @     0x55dc518f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=15941)[0m     @     0x55dc518f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15941)[0m     @     0x55dc51868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x7fb3c2a23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15899)[0m     @     0x7fb3c2a21388 at::native::copy_impl()
[2m[36m(pid=15869)[0m     @     0x7ece5b5a1388 at::native::copy_impl()
[2m[36m(pid=15869)[0m     @     0x7ece5b5a35a4 at::native::copy_()
[2m[36m(pid=15869)[0m     @     0x7ece5bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=15869)[0m     @     0x7ece5e1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15939)[0m     @     0x7ef41b5e6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15939)[0m     @     0x7ef41aa88a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15949)[0m     @     0x7f2eefce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15949)[0m     @     0x7f2eed8124f5 at::Tensor::copy_()
[2m[36m(pid=15949)[0m     @     0x7f2ef38bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15949)[0m     @     0x558393828fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15949)[0m     @     0x558393783b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15949)[0m     @     0x55839380ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15949)[0m     @     0x55839380fa20 method_vectorcall
[2m[36m(pid=15949)[0m     @     0x558393783bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15949)[0m     @     0x55839380ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15949)[0m     @     0x55839380f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15949)[0m     @     0x558393784689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15949)[0m     @     0x55839380ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15949)[0m     @     0x55839380f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15949)[0m     @     0x558393784689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15949)[0m     @     0x55839380ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15949)[0m     @     0x55839380f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15949)[0m     @     0x558393784689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15949)[0m     @     0x55839380ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=15949)[0m     @     0x55839380f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15949)[0m     @     0x558393784689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15957)[0m     @     0x7f8e1468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15957)[0m     @     0x5598f7719fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15957)[0m     @     0x5598f7674b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15957)[0m     @     0x5598f76ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15957)[0m     @     0x5598f7700a20 method_vectorcall
[2m[36m(pid=15957)[0m     @     0x5598f7674bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15957)[0m     @     0x5598f76ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15957)[0m     @     0x5598f7700643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15957)[0m     @     0x5598f7675689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15957)[0m     @     0x5598f76ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15957)[0m     @     0x5598f7700643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15957)[0m     @     0x5598f7675689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15957)[0m     @     0x5598f76ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15957)[0m     @     0x5598f7700643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15957)[0m     @     0x5598f7675689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15957)[0m     @     0x5598f76ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15957)[0m     @     0x5598f7700643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15957)[0m     @     0x5598f7675689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x7fbb30974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=15868)[0m     @     0x7fbb2fe16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=15868)[0m     @     0x7fbb2fe14388 at::native::copy_impl()
[2m[36m(pid=15893)[0m     @     0x7f67b2db45a4 at::native::copy_()
[2m[36m(pid=15893)[0m     @     0x7f67b349f4f5 at::Tensor::copy_()
[2m[36m(pid=15893)[0m     @     0x7f67b59728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15887)[0m     @     0x7f4e612fa5a4 at::native::copy_()
[2m[36m(pid=15887)[0m     @     0x7f4e619e54f5 at::Tensor::copy_()
[2m[36m(pid=15887)[0m     @     0x7f4e63eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15886)[0m     @     0x7f1b4fef44f5 at::Tensor::copy_()
[2m[36m(pid=15886)[0m     @     0x7f1b55f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15886)[0m     @     0x555e3d35afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15886)[0m     @     0x555e3d2b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15886)[0m     @     0x555e3d340baf _PyEval_EvalCodeWithName
[2m[36m(pid=15886)[0m     @     0x555e3d341a20 method_vectorcall
[2m[36m(pid=15886)[0m     @     0x555e3d2b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15886)[0m     @     0x555e3d340baf _PyEval_EvalCodeWithName
[2m[36m(pid=15886)[0m     @     0x555e3d341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15886)[0m     @     0x555e3d2b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15886)[0m     @     0x555e3d340baf _PyEval_EvalCodeWithName
[2m[36m(pid=15886)[0m     @     0x555e3d341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15886)[0m     @     0x555e3d2b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15886)[0m     @     0x555e3d340baf _PyEval_EvalCodeWithName
[2m[36m(pid=15886)[0m     @     0x555e3d341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15886)[0m     @     0x555e3d2b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15886)[0m     @     0x555e3d340baf _PyEval_EvalCodeWithName
[2m[36m(pid=15886)[0m     @     0x555e3d341643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15886)[0m     @     0x555e3d2b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x7fb3c2a235a4 at::native::copy_()
[2m[36m(pid=15869)[0m     @     0x7ece5bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=15869)[0m     @     0x7ece61d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15869)[0m     @     0x55e83073dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15869)[0m     @     0x55e830698b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15869)[0m     @     0x55e830723baf _PyEval_EvalCodeWithName
[2m[36m(pid=15869)[0m     @     0x55e830724a20 method_vectorcall
[2m[36m(pid=15869)[0m     @     0x55e830698bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15869)[0m     @     0x55e830723baf _PyEval_EvalCodeWithName
[2m[36m(pid=15869)[0m     @     0x55e830724643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15869)[0m     @     0x55e830699689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15869)[0m     @     0x55e830723baf _PyEval_EvalCodeWithName
[2m[36m(pid=15869)[0m     @     0x55e830724643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15869)[0m     @     0x55e830699689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15869)[0m     @     0x55e830723baf _PyEval_EvalCodeWithName
[2m[36m(pid=15869)[0m     @     0x55e830724643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15869)[0m     @     0x55e830699689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15869)[0m     @     0x55e830723baf _PyEval_EvalCodeWithName
[2m[36m(pid=15869)[0m     @     0x55e830724643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15869)[0m     @     0x55e830699689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x7ef41aa86388 at::native::copy_impl()
[2m[36m(pid=15939)[0m     @     0x7ef41aa885a4 at::native::copy_()
[2m[36m(pid=15868)[0m     @     0x7fbb2fe165a4 at::native::copy_()
[2m[36m(pid=15868)[0m     @     0x7fbb305014f5 at::Tensor::copy_()
[2m[36m(pid=15868)[0m     @     0x7fbb329d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15893)[0m     @     0x7f67b349f4f5 at::Tensor::copy_()
[2m[36m(pid=15893)[0m     @     0x7f67b954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15893)[0m     @     0x55ac796bdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15893)[0m     @     0x55ac79618b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15893)[0m     @     0x55ac796a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15893)[0m     @     0x55ac796a4a20 method_vectorcall
[2m[36m(pid=15893)[0m     @     0x55ac79618bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15893)[0m     @     0x55ac796a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15893)[0m     @     0x55ac796a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15893)[0m     @     0x55ac79619689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15893)[0m     @     0x55ac796a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15893)[0m     @     0x55ac796a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15893)[0m     @     0x55ac79619689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15893)[0m     @     0x55ac796a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15893)[0m     @     0x55ac796a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15893)[0m     @     0x55ac79619689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15893)[0m     @     0x55ac796a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15893)[0m     @     0x55ac796a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15893)[0m     @     0x55ac79619689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x7f4e619e54f5 at::Tensor::copy_()
[2m[36m(pid=15887)[0m     @     0x7f4e67a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15887)[0m     @     0x55f1dd050fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15887)[0m     @     0x55f1dcfabb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x55f1dd036baf _PyEval_EvalCodeWithName
[2m[36m(pid=15887)[0m     @     0x55f1dd037a20 method_vectorcall
[2m[36m(pid=15887)[0m     @     0x55f1dcfabbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x55f1dd036baf _PyEval_EvalCodeWithName
[2m[36m(pid=15887)[0m     @     0x55f1dd037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15887)[0m     @     0x55f1dcfac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x55f1dd036baf _PyEval_EvalCodeWithName
[2m[36m(pid=15887)[0m     @     0x55f1dd037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15887)[0m     @     0x55f1dcfac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x55f1dd036baf _PyEval_EvalCodeWithName
[2m[36m(pid=15887)[0m     @     0x55f1dd037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15887)[0m     @     0x55f1dcfac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15887)[0m     @     0x55f1dd036baf _PyEval_EvalCodeWithName
[2m[36m(pid=15887)[0m     @     0x55f1dd037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15887)[0m     @     0x55f1dcfac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x7fb3c310e4f5 at::Tensor::copy_()
[2m[36m(pid=15899)[0m     @     0x7fb3c55e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15899)[0m     @     0x7fb3c310e4f5 at::Tensor::copy_()
[2m[36m(pid=15899)[0m     @     0x7fb3c91b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15899)[0m     @     0x564a218ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15939)[0m     @     0x7ef41b1734f5 at::Tensor::copy_()
[2m[36m(pid=15939)[0m     @     0x7ef41d6468de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=15868)[0m     @     0x7fbb305014f5 at::Tensor::copy_()
[2m[36m(pid=15868)[0m     @     0x7fbb361a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15868)[0m     @     0x559aa29e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15868)[0m     @     0x559aa293db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x559aa29c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x559aa29c9a20 method_vectorcall
[2m[36m(pid=15868)[0m     @     0x559aa293dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x559aa29c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x559aa29c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15868)[0m     @     0x559aa293e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x564a21838b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x564a218c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15899)[0m     @     0x564a218c4a20 method_vectorcall
[2m[36m(pid=15899)[0m     @     0x564a21838bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x564a218c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15899)[0m     @     0x564a218c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15899)[0m     @     0x564a21839689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x564a218c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15899)[0m     @     0x564a218c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15899)[0m     @     0x564a21839689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x564a218c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15899)[0m     @     0x564a218c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15899)[0m     @     0x564a21839689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15899)[0m     @     0x564a218c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=15899)[0m     @     0x564a218c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15899)[0m     @     0x564a21839689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x7ef41b1734f5 at::Tensor::copy_()
[2m[36m(pid=15939)[0m     @     0x7ef42121e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=15939)[0m     @     0x560445a86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=15939)[0m     @     0x5604459e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x560445a6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15939)[0m     @     0x560445a6da20 method_vectorcall
[2m[36m(pid=15939)[0m     @     0x5604459e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x560445a6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15939)[0m     @     0x560445a6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15939)[0m     @     0x5604459e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x560445a6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15939)[0m     @     0x560445a6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15939)[0m     @     0x5604459e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x560445a6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15939)[0m     @     0x560445a6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15939)[0m     @     0x5604459e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15939)[0m     @     0x560445a6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=15939)[0m     @     0x560445a6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15939)[0m     @     0x5604459e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x559aa29c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x559aa29c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15868)[0m     @     0x559aa293e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x559aa29c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x559aa29c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15868)[0m     @     0x559aa293e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=15868)[0m     @     0x559aa29c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=15868)[0m     @     0x559aa29c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=15868)[0m     @     0x559aa293e689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:19:48,283	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:19:48,283	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff56c9ec1501000000.
2020-11-05 10:19:48,284	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:19:48,286	ERROR trial_runner.py:567 -- Trial PPO_jss_env_6a7bb_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=15997, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 27.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6a7bb_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_6a7bb_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6a7bb_00000_0_2020-11-05_10-19-40/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:19:48,294	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:19:48,295	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:19:48,295	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
== Status ==
Memory usage on this node: 26.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6a7bb_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_6a7bb_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6a7bb_00000_0_2020-11-05_10-19-40/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_6a7bb_00000])
