2020-11-05 10:50:26,400	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b73e4_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=63040)[0m 2020-11-05 10:50:29,245	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=63040)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=63040)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=63040)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=63040)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=63040)[0m 
[2m[36m(pid=63040)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=63000)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63000)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63000)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63000)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63000)[0m *** SIGSEGV (@0x0) received by PID 63000 (TID 0x7fae74ed8700) from PID 0; stack trace: ***
[2m[36m(pid=63000)[0m     @     0x7fae74ab1390 (unknown)
[2m[36m(pid=63000)[0m     @     0x7f7f749e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63000)[0m     @     0x7f7f741137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63000)[0m     @     0x7f7f741168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63000)[0m     @     0x7f7f74116ad3 at::TensorIterator::for_each()
[2m[36m(pid=63003)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63003)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63003)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63023)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63023)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63023)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63023)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63023)[0m *** SIGSEGV (@0x0) received by PID 63023 (TID 0x7f3b1783a700) from PID 0; stack trace: ***
[2m[36m(pid=63023)[0m     @     0x7f3b17413390 (unknown)
[2m[36m(pid=63023)[0m     @     0x7f0c17326f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63023)[0m     @     0x7f0c16a517db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63023)[0m     @     0x7f0c16a548f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63023)[0m     @     0x7f0c16a54ad3 at::TensorIterator::for_each()
[2m[36m(pid=63023)[0m     @     0x7f0c16a54d91 at::TensorIterator::for_each()
[2m[36m(pid=63020)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63020)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63020)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63020)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63020)[0m *** SIGSEGV (@0x0) received by PID 63020 (TID 0x7f18603e0700) from PID 0; stack trace: ***
[2m[36m(pid=63020)[0m     @     0x7f185ffb9390 (unknown)
[2m[36m(pid=63020)[0m     @     0x7ee95fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63020)[0m     @     0x7ee95f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63020)[0m     @     0x7ee95f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63020)[0m     @     0x7ee95f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=63020)[0m     @     0x7ee95f539d91 at::TensorIterator::for_each()
[2m[36m(pid=63056)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63056)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63056)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63056)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63056)[0m *** SIGSEGV (@0x0) received by PID 63056 (TID 0x7f8d15001700) from PID 0; stack trace: ***
[2m[36m(pid=63056)[0m     @     0x7f8d14bda390 (unknown)
[2m[36m(pid=63056)[0m     @     0x7f5e14a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63056)[0m     @     0x7f5e141b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63056)[0m     @     0x7f5e141b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63056)[0m     @     0x7f5e141b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=63050)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63050)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63050)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63050)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63050)[0m *** SIGSEGV (@0x0) received by PID 63050 (TID 0x7fcb2f0c3700) from PID 0; stack trace: ***
[2m[36m(pid=63050)[0m     @     0x7fcb2ec9c390 (unknown)
[2m[36m(pid=63050)[0m     @     0x7f9c2ebcef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63050)[0m     @     0x7f9c2e2f97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63050)[0m     @     0x7f9c2e2fc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63050)[0m     @     0x7f9c2e2fcad3 at::TensorIterator::for_each()
[2m[36m(pid=63054)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63054)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63054)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63054)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63054)[0m *** SIGSEGV (@0x0) received by PID 63054 (TID 0x7fda899df700) from PID 0; stack trace: ***
[2m[36m(pid=63054)[0m     @     0x7fda895b8390 (unknown)
[2m[36m(pid=63054)[0m     @     0x7fab894e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63054)[0m     @     0x7fab88c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63054)[0m     @     0x7fab88c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63054)[0m     @     0x7fab88c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=63014)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63014)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63014)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63014)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63014)[0m *** SIGSEGV (@0x0) received by PID 63014 (TID 0x7f53b5be5700) from PID 0; stack trace: ***
[2m[36m(pid=63014)[0m     @     0x7f53b57be390 (unknown)
[2m[36m(pid=63014)[0m     @     0x7f24b56f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63014)[0m     @     0x7f24b4e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63014)[0m     @     0x7f24b4e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63014)[0m     @     0x7f24b4e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=63014)[0m     @     0x7f24b4e22d91 at::TensorIterator::for_each()
[2m[36m(pid=63059)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63059)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63059)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63059)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63059)[0m *** SIGSEGV (@0x0) received by PID 63059 (TID 0x7fe5a0f2b700) from PID 0; stack trace: ***
[2m[36m(pid=63059)[0m     @     0x7fe5a0b04390 (unknown)
[2m[36m(pid=63059)[0m     @     0x7fb6a09e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63059)[0m     @     0x7fb6a01137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63059)[0m     @     0x7fb6a01168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63059)[0m     @     0x7fb6a0116ad3 at::TensorIterator::for_each()
[2m[36m(pid=63059)[0m     @     0x7fb6a0116d91 at::TensorIterator::for_each()
[2m[36m(pid=63059)[0m     @     0x7fb6a09f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63059)[0m     @     0x7fb6a0a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63059)[0m     @     0x7fb69febea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63059)[0m     @     0x7fb69febc388 at::native::copy_impl()
[2m[36m(pid=63045)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63045)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63045)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63045)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63045)[0m *** SIGSEGV (@0x0) received by PID 63045 (TID 0x7f939c219700) from PID 0; stack trace: ***
[2m[36m(pid=63045)[0m     @     0x7f939bdf2390 (unknown)
[2m[36m(pid=63045)[0m     @     0x7f649bd79f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63045)[0m     @     0x7f649b4a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63045)[0m     @     0x7f649b4a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63045)[0m     @     0x7f649b4a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=63045)[0m     @     0x7f649b4a7d91 at::TensorIterator::for_each()
[2m[36m(pid=63045)[0m     @     0x7f649bd8ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63045)[0m     @     0x7f649bdadc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63045)[0m     @     0x7f649b24fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63045)[0m     @     0x7f649b24d388 at::native::copy_impl()
[2m[36m(pid=63021)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63021)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63021)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63021)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63021)[0m *** SIGSEGV (@0x0) received by PID 63021 (TID 0x7fb688457700) from PID 0; stack trace: ***
[2m[36m(pid=63021)[0m     @     0x7fb688030390 (unknown)
[2m[36m(pid=63021)[0m     @     0x7f8787faff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63021)[0m     @     0x7f87876da7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63021)[0m     @     0x7f87876dd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63021)[0m     @     0x7f87876ddad3 at::TensorIterator::for_each()
[2m[36m(pid=63021)[0m     @     0x7f87876ddd91 at::TensorIterator::for_each()
[2m[36m(pid=63021)[0m     @     0x7f8787fc0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63021)[0m     @     0x7f8787fe3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63039)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63039)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63039)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63039)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63039)[0m *** SIGSEGV (@0x0) received by PID 63039 (TID 0x7f78535ad700) from PID 0; stack trace: ***
[2m[36m(pid=63039)[0m     @     0x7f7853186390 (unknown)
[2m[36m(pid=63039)[0m     @     0x7f4953124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63039)[0m     @     0x7f495284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63039)[0m     @     0x7f49528528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63039)[0m     @     0x7f4952852ad3 at::TensorIterator::for_each()
[2m[36m(pid=63039)[0m     @     0x7f4952852d91 at::TensorIterator::for_each()
[2m[36m(pid=63039)[0m     @     0x7f4953135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63039)[0m     @     0x7f4953158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63039)[0m     @     0x7f49525faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63039)[0m     @     0x7f49525f8388 at::native::copy_impl()
[2m[36m(pid=63008)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63008)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63008)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63008)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63008)[0m *** SIGSEGV (@0x0) received by PID 63008 (TID 0x7f41225b0700) from PID 0; stack trace: ***
[2m[36m(pid=63008)[0m     @     0x7f4122189390 (unknown)
[2m[36m(pid=63008)[0m     @     0x7f122213af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63008)[0m     @     0x7f12218657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63008)[0m     @     0x7f12218688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63008)[0m     @     0x7f1221868ad3 at::TensorIterator::for_each()
[2m[36m(pid=63008)[0m     @     0x7f1221868d91 at::TensorIterator::for_each()
[2m[36m(pid=63008)[0m     @     0x7f122214bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63008)[0m     @     0x7f122216ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63005)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63005)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63005)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63005)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63005)[0m *** SIGSEGV (@0x0) received by PID 63005 (TID 0x7ff446ec4700) from PID 0; stack trace: ***
[2m[36m(pid=63005)[0m     @     0x7ff446a9d390 (unknown)
[2m[36m(pid=63005)[0m     @     0x7fc5469ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63005)[0m     @     0x7fc5460f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63005)[0m     @     0x7fc5460fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63005)[0m     @     0x7fc5460faad3 at::TensorIterator::for_each()
[2m[36m(pid=63005)[0m     @     0x7fc5460fad91 at::TensorIterator::for_each()
[2m[36m(pid=63005)[0m     @     0x7fc5469ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63005)[0m     @     0x7fc546a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63049)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63049)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63049)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63049)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63049)[0m *** SIGSEGV (@0x0) received by PID 63049 (TID 0x7fd765907700) from PID 0; stack trace: ***
[2m[36m(pid=63049)[0m     @     0x7fd7654e0390 (unknown)
[2m[36m(pid=63049)[0m     @     0x7fa8654a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63049)[0m     @     0x7fa864bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63049)[0m     @     0x7fa864bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63049)[0m     @     0x7fa864bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=63049)[0m     @     0x7fa864bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=63049)[0m     @     0x7fa8654b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63049)[0m     @     0x7fa8654d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62951)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62951)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62993)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62993)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62993)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63009)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63009)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63009)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63034)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63034)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63034)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63034)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63034)[0m *** SIGSEGV (@0x0) received by PID 63034 (TID 0x7f1d8f679700) from PID 0; stack trace: ***
[2m[36m(pid=63034)[0m     @     0x7f1d8f252390 (unknown)
[2m[36m(pid=63034)[0m     @     0x7eee8f124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63034)[0m     @     0x7eee8e84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63034)[0m     @     0x7eee8e8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63034)[0m     @     0x7eee8e852ad3 at::TensorIterator::for_each()
[2m[36m(pid=63034)[0m     @     0x7eee8e852d91 at::TensorIterator::for_each()
[2m[36m(pid=63034)[0m     @     0x7eee8f135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63034)[0m     @     0x7eee8f158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63034)[0m     @     0x7eee8e5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62950)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62950)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62950)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62999)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62999)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62999)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62999)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62999)[0m *** SIGSEGV (@0x0) received by PID 62999 (TID 0x7fbb156f0700) from PID 0; stack trace: ***
[2m[36m(pid=63041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63041)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63041)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63041)[0m *** SIGSEGV (@0x0) received by PID 63041 (TID 0x7f49cc3c4700) from PID 0; stack trace: ***
[2m[36m(pid=63041)[0m     @     0x7f49cbf9d390 (unknown)
[2m[36m(pid=63041)[0m     @     0x7f1acbdf0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63041)[0m     @     0x7f1acb51b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63041)[0m     @     0x7f1acb51e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63041)[0m     @     0x7f1acb51ead3 at::TensorIterator::for_each()
[2m[36m(pid=63041)[0m     @     0x7f1acb51ed91 at::TensorIterator::for_each()
[2m[36m(pid=63041)[0m     @     0x7f1acbe01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63041)[0m     @     0x7f1acbe24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63041)[0m     @     0x7f1acb2c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63000)[0m     @     0x7f7f74116d91 at::TensorIterator::for_each()
[2m[36m(pid=63000)[0m     @     0x7f7f749f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63000)[0m     @     0x7f7f74a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63003)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63003)[0m *** SIGSEGV (@0x0) received by PID 63003 (TID 0x7f1492736700) from PID 0; stack trace: ***
[2m[36m(pid=63023)[0m     @     0x7f0c17337b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63023)[0m     @     0x7f0c1735ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63023)[0m     @     0x7f0c167fca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63023)[0m     @     0x7f0c167fa388 at::native::copy_impl()
[2m[36m(pid=63020)[0m     @     0x7ee95fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63020)[0m     @     0x7ee95fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63020)[0m     @     0x7ee95f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63015)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63015)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63015)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62958)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63056)[0m     @     0x7f5e141b9d91 at::TensorIterator::for_each()
[2m[36m(pid=63056)[0m     @     0x7f5e14a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63056)[0m     @     0x7f5e14abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63019)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63019)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63019)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63019)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63019)[0m *** SIGSEGV (@0x0) received by PID 63019 (TID 0x7f60461ff700) from PID 0; stack trace: ***
[2m[36m(pid=62992)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62992)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62992)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63027)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63027)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63027)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63027)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62962)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62962)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62962)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63007)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63007)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63007)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63011)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63011)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63011)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62943)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62943)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63050)[0m     @     0x7f9c2e2fcd91 at::TensorIterator::for_each()
[2m[36m(pid=63050)[0m     @     0x7f9c2ebdfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63050)[0m     @     0x7f9c2ec02c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62961)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62961)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62961)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63017)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63017)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63017)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63054)[0m     @     0x7fab88c11d91 at::TensorIterator::for_each()
[2m[36m(pid=63054)[0m     @     0x7fab894f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63054)[0m     @     0x7fab89517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62940)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63053)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63016)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63016)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63016)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63016)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63016)[0m *** SIGSEGV (@0x0) received by PID 63016 (TID 0x7fed38003700) from PID 0; stack trace: ***
[2m[36m(pid=63014)[0m     @     0x7f24b5705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63014)[0m     @     0x7f24b5728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63014)[0m     @     0x7f24b4bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62938)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62938)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62938)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62937)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62937)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62937)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62941)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62941)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62941)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62941)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62941)[0m *** SIGSEGV (@0x0) received by PID 62941 (TID 0x7f08085c4700) from PID 0; stack trace: ***
[2m[36m(pid=62936)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62936)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62936)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62936)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62936)[0m *** SIGSEGV (@0x0) received by PID 62936 (TID 0x7ff42928a700) from PID 0; stack trace: ***
[2m[36m(pid=62924)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62924)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62924)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62956)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62956)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62956)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62946)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62946)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62939)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62939)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62939)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63035)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63035)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63035)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63035)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63035)[0m *** SIGSEGV (@0x0) received by PID 63035 (TID 0x7f146c695700) from PID 0; stack trace: ***
[2m[36m(pid=62985)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62985)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62985)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62933)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62933)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62933)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62935)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62935)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62935)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62945)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62945)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62945)[0m *** SIGSEGV (@0x0) received by PID 62945 (TID 0x7fd6bd883700) from PID 0; stack trace: ***
[2m[36m(pid=63060)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63060)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63060)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63060)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62953)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62953)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62953)[0m *** SIGSEGV (@0x0) received by PID 62953 (TID 0x7f63c953d700) from PID 0; stack trace: ***
[2m[36m(pid=62947)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62947)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62947)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63006)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63006)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63006)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63006)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63006)[0m *** SIGSEGV (@0x0) received by PID 63006 (TID 0x7f6636e88700) from PID 0; stack trace: ***
[2m[36m(pid=63006)[0m     @     0x7f6636a61390 (unknown)
[2m[36m(pid=62931)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62931)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62931)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62934)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62934)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62934)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62934)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62934)[0m *** SIGSEGV (@0x0) received by PID 62934 (TID 0x7f78a5713700) from PID 0; stack trace: ***
[2m[36m(pid=63010)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63010)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63010)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63010)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63010)[0m *** SIGSEGV (@0x0) received by PID 63010 (TID 0x7fe2fa1a7700) from PID 0; stack trace: ***
[2m[36m(pid=63010)[0m     @     0x7fe2f9d80390 (unknown)
[2m[36m(pid=62991)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62991)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62991)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62991)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62991)[0m *** SIGSEGV (@0x0) received by PID 62991 (TID 0x7f7d29b98700) from PID 0; stack trace: ***
[2m[36m(pid=62991)[0m     @     0x7f7d29771390 (unknown)
[2m[36m(pid=63042)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63042)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63042)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62948)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62948)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62948)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62948)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62948)[0m *** SIGSEGV (@0x0) received by PID 62948 (TID 0x7fd6bcb85700) from PID 0; stack trace: ***
[2m[36m(pid=62926)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62926)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62926)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62927)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62927)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62927)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62927)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62927)[0m *** SIGSEGV (@0x0) received by PID 62927 (TID 0x7f2ec4486700) from PID 0; stack trace: ***
[2m[36m(pid=62930)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62930)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62930)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63059)[0m     @     0x7fb69febe5a4 at::native::copy_()
[2m[36m(pid=63059)[0m     @     0x7fb6a05a94f5 at::Tensor::copy_()
[2m[36m(pid=63059)[0m     @     0x7fb6a2a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63045)[0m     @     0x7f649b24f5a4 at::native::copy_()
[2m[36m(pid=63045)[0m     @     0x7f649b93a4f5 at::Tensor::copy_()
[2m[36m(pid=63045)[0m     @     0x7f649de0d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63045)[0m     @     0x7f649b93a4f5 at::Tensor::copy_()
[2m[36m(pid=63045)[0m     @     0x7f64a19e579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63045)[0m     @     0x55e29e8f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63045)[0m     @     0x55e29e84bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63045)[0m     @     0x55e29e8d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63045)[0m     @     0x55e29e8d7a20 method_vectorcall
[2m[36m(pid=63045)[0m     @     0x55e29e84bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63045)[0m     @     0x55e29e8d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63045)[0m     @     0x55e29e8d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63045)[0m     @     0x55e29e84c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63045)[0m     @     0x55e29e8d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63045)[0m     @     0x55e29e8d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63045)[0m     @     0x55e29e84c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63045)[0m     @     0x55e29e8d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63045)[0m     @     0x55e29e8d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63045)[0m     @     0x55e29e84c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63045)[0m     @     0x55e29e8d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63045)[0m     @     0x55e29e8d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63045)[0m     @     0x55e29e84c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63021)[0m     @     0x7f8787485a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63021)[0m     @     0x7f8787483388 at::native::copy_impl()
[2m[36m(pid=63021)[0m     @     0x7f87874855a4 at::native::copy_()
[2m[36m(pid=63021)[0m     @     0x7f8787b704f5 at::Tensor::copy_()
[2m[36m(pid=63039)[0m     @     0x7f49525fa5a4 at::native::copy_()
[2m[36m(pid=63039)[0m     @     0x7f4952ce54f5 at::Tensor::copy_()
[2m[36m(pid=63039)[0m     @     0x7f49551b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63008)[0m     @     0x7f1221610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63008)[0m     @     0x7f122160e388 at::native::copy_impl()
[2m[36m(pid=63008)[0m     @     0x7f12216105a4 at::native::copy_()
[2m[36m(pid=63008)[0m     @     0x7f1221cfb4f5 at::Tensor::copy_()
[2m[36m(pid=63008)[0m     @     0x7f12241ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63005)[0m     @     0x7fc545ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63005)[0m     @     0x7fc545ea0388 at::native::copy_impl()
[2m[36m(pid=63005)[0m     @     0x7fc545ea25a4 at::native::copy_()
[2m[36m(pid=63005)[0m     @     0x7fc54658d4f5 at::Tensor::copy_()
[2m[36m(pid=63049)[0m     @     0x7fa864979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63049)[0m     @     0x7fa864977388 at::native::copy_impl()
[2m[36m(pid=63049)[0m     @     0x7fa8649795a4 at::native::copy_()
[2m[36m(pid=63049)[0m     @     0x7fa8650644f5 at::Tensor::copy_()
[2m[36m(pid=62951)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62951)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62951)[0m *** SIGSEGV (@0x0) received by PID 62951 (TID 0x7f8d5751f700) from PID 0; stack trace: ***
[2m[36m(pid=62951)[0m     @     0x7f8d570f8390 (unknown)
[2m[36m(pid=62951)[0m     @     0x7f5e57083f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62951)[0m     @     0x7f5e567ae7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62993)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62993)[0m *** SIGSEGV (@0x0) received by PID 62993 (TID 0x7fb74566a700) from PID 0; stack trace: ***
[2m[36m(pid=62993)[0m     @     0x7fb745243390 (unknown)
[2m[36m(pid=62993)[0m     @     0x7f8845166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62993)[0m     @     0x7f88448917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62993)[0m     @     0x7f88448948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63009)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63009)[0m *** SIGSEGV (@0x0) received by PID 63009 (TID 0x7f87c4261700) from PID 0; stack trace: ***
[2m[36m(pid=63009)[0m     @     0x7f87c3e3a390 (unknown)
[2m[36m(pid=63009)[0m     @     0x7f58c2c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63009)[0m     @     0x7f58c23407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63009)[0m     @     0x7f58c23438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63034)[0m     @     0x7eee8e5f8388 at::native::copy_impl()
[2m[36m(pid=63034)[0m     @     0x7eee8e5fa5a4 at::native::copy_()
[2m[36m(pid=63034)[0m     @     0x7eee8ece54f5 at::Tensor::copy_()
[2m[36m(pid=63034)[0m     @     0x7eee911b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62950)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62950)[0m *** SIGSEGV (@0x0) received by PID 62950 (TID 0x7f242e727700) from PID 0; stack trace: ***
[2m[36m(pid=62950)[0m     @     0x7f242e300390 (unknown)
[2m[36m(pid=62950)[0m     @     0x7ef52e2b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62950)[0m     @     0x7ef52d9e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62950)[0m     @     0x7ef52d9e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62999)[0m     @     0x7fbb152c9390 (unknown)
[2m[36m(pid=62999)[0m     @     0x7f8c1524af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62999)[0m     @     0x7f8c149757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62999)[0m     @     0x7f8c149788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62999)[0m     @     0x7f8c14978ad3 at::TensorIterator::for_each()
[2m[36m(pid=63041)[0m     @     0x7f1acb2c4388 at::native::copy_impl()
[2m[36m(pid=63041)[0m     @     0x7f1acb2c65a4 at::native::copy_()
[2m[36m(pid=63041)[0m     @     0x7f1acb9b14f5 at::Tensor::copy_()
[2m[36m(pid=63041)[0m     @     0x7f1acde848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63000)[0m     @     0x7f7f73ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63000)[0m     @     0x7f7f73ebc388 at::native::copy_impl()
[2m[36m(pid=63000)[0m     @     0x7f7f73ebe5a4 at::native::copy_()
[2m[36m(pid=63003)[0m     @     0x7f149230f390 (unknown)
[2m[36m(pid=63003)[0m     @     0x7ee592291f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63003)[0m     @     0x7ee5919bc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63003)[0m     @     0x7ee5919bf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63023)[0m     @     0x7f0c167fc5a4 at::native::copy_()
[2m[36m(pid=63023)[0m     @     0x7f0c16ee74f5 at::Tensor::copy_()
[2m[36m(pid=63023)[0m     @     0x7f0c193ba8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63023)[0m     @     0x7f0c16ee74f5 at::Tensor::copy_()
[2m[36m(pid=63023)[0m     @     0x7f0c1cf9279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63023)[0m     @     0x55cbc792dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63023)[0m     @     0x55cbc7888b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63023)[0m     @     0x55cbc7913baf _PyEval_EvalCodeWithName
[2m[36m(pid=63023)[0m     @     0x55cbc7914a20 method_vectorcall
[2m[36m(pid=63023)[0m     @     0x55cbc7888bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63023)[0m     @     0x55cbc7913baf _PyEval_EvalCodeWithName
[2m[36m(pid=63023)[0m     @     0x55cbc7914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63023)[0m     @     0x55cbc7889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63020)[0m     @     0x7ee95f2df388 at::native::copy_impl()
[2m[36m(pid=63020)[0m     @     0x7ee95f2e15a4 at::native::copy_()
[2m[36m(pid=63020)[0m     @     0x7ee95f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=63020)[0m     @     0x7ee961e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63015)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63015)[0m *** SIGSEGV (@0x0) received by PID 63015 (TID 0x7f4b9b664700) from PID 0; stack trace: ***
[2m[36m(pid=63015)[0m     @     0x7f4b9b23d390 (unknown)
[2m[36m(pid=63015)[0m     @     0x7f1c9b124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63015)[0m     @     0x7f1c9a84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63015)[0m     @     0x7f1c9a8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62958)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62958)[0m *** SIGSEGV (@0x0) received by PID 62958 (TID 0x7ff682297700) from PID 0; stack trace: ***
[2m[36m(pid=62958)[0m     @     0x7ff681e70390 (unknown)
[2m[36m(pid=62958)[0m     @     0x7fc781c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62958)[0m     @     0x7fc7813387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62958)[0m     @     0x7fc78133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63056)[0m     @     0x7f5e13f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63056)[0m     @     0x7f5e13f5f388 at::native::copy_impl()
[2m[36m(pid=63056)[0m     @     0x7f5e13f615a4 at::native::copy_()
[2m[36m(pid=63056)[0m     @     0x7f5e1464c4f5 at::Tensor::copy_()
[2m[36m(pid=63056)[0m     @     0x7f5e16b1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63002)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63002)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63002)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62954)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62954)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62954)[0m *** SIGSEGV (@0x0) received by PID 62954 (TID 0x7fcf814e0700) from PID 0; stack trace: ***
[2m[36m(pid=62954)[0m     @     0x7fcf810b9390 (unknown)
[2m[36m(pid=62954)[0m     @     0x7fa081048f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62954)[0m     @     0x7fa0807737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62954)[0m     @     0x7fa0807768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63019)[0m     @     0x7f6045dd8390 (unknown)
[2m[36m(pid=63019)[0m     @     0x7f3145d52f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63019)[0m     @     0x7f314547d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63019)[0m     @     0x7f31454808f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63019)[0m     @     0x7f3145480ad3 at::TensorIterator::for_each()
[2m[36m(pid=62992)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62992)[0m *** SIGSEGV (@0x0) received by PID 62992 (TID 0x7f46cf598700) from PID 0; stack trace: ***
[2m[36m(pid=62992)[0m     @     0x7f46cf171390 (unknown)
[2m[36m(pid=62992)[0m     @     0x7f17cf0f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62992)[0m     @     0x7f17ce8227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62992)[0m     @     0x7f17ce8258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63027)[0m *** SIGSEGV (@0x0) received by PID 63027 (TID 0x7f61e1ae8700) from PID 0; stack trace: ***
[2m[36m(pid=63027)[0m     @     0x7f61e16c1390 (unknown)
[2m[36m(pid=63027)[0m     @     0x7f32e1674f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63027)[0m     @     0x7f32e0d9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63027)[0m     @     0x7f32e0da28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62989)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62989)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62989)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62989)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62989)[0m *** SIGSEGV (@0x0) received by PID 62989 (TID 0x7ff543a3b700) from PID 0; stack trace: ***
[2m[36m(pid=62989)[0m     @     0x7ff543614390 (unknown)
[2m[36m(pid=62989)[0m     @     0x7fc6435bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62989)[0m     @     0x7fc642ce67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62962)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62962)[0m *** SIGSEGV (@0x0) received by PID 62962 (TID 0x7f31310bd700) from PID 0; stack trace: ***
[2m[36m(pid=62962)[0m     @     0x7f3130c96390 (unknown)
[2m[36m(pid=62962)[0m     @     0x7f0230b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62962)[0m     @     0x7f02302667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62962)[0m     @     0x7f02302698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63007)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63007)[0m *** SIGSEGV (@0x0) received by PID 63007 (TID 0x7fbece018700) from PID 0; stack trace: ***
[2m[36m(pid=63007)[0m     @     0x7fbecdbf1390 (unknown)
[2m[36m(pid=63007)[0m     @     0x7f8fcdb9ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63007)[0m     @     0x7f8fcd2ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63007)[0m     @     0x7f8fcd2cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63011)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63011)[0m *** SIGSEGV (@0x0) received by PID 63011 (TID 0x7fea4d19a700) from PID 0; stack trace: ***
[2m[36m(pid=63011)[0m     @     0x7fea4cd73390 (unknown)
[2m[36m(pid=63011)[0m     @     0x7fbb4ccf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63011)[0m     @     0x7fbb4c4227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63011)[0m     @     0x7fbb4c4258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62943)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62943)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62943)[0m *** SIGSEGV (@0x0) received by PID 62943 (TID 0x7f4ff6489700) from PID 0; stack trace: ***
[2m[36m(pid=62943)[0m     @     0x7f4ff6062390 (unknown)
[2m[36m(pid=62943)[0m     @     0x7f20f6017f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62943)[0m     @     0x7f20f57427db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63050)[0m     @     0x7f9c2e0a4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63050)[0m     @     0x7f9c2e0a2388 at::native::copy_impl()
[2m[36m(pid=63050)[0m     @     0x7f9c2e0a45a4 at::native::copy_()
[2m[36m(pid=63050)[0m     @     0x7f9c2e78f4f5 at::Tensor::copy_()
[2m[36m(pid=62961)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62961)[0m *** SIGSEGV (@0x0) received by PID 62961 (TID 0x7fefdf8ca700) from PID 0; stack trace: ***
[2m[36m(pid=62961)[0m     @     0x7fefdf4a3390 (unknown)
[2m[36m(pid=62961)[0m     @     0x7fc0df229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62961)[0m     @     0x7fc0de9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62961)[0m     @     0x7fc0de9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63017)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63017)[0m *** SIGSEGV (@0x0) received by PID 63017 (TID 0x7f23bd589700) from PID 0; stack trace: ***
[2m[36m(pid=63017)[0m     @     0x7f23bd162390 (unknown)
[2m[36m(pid=63017)[0m     @     0x7ef4bd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63017)[0m     @     0x7ef4bc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63017)[0m     @     0x7ef4bc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63054)[0m     @     0x7fab889b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63054)[0m     @     0x7fab889b7388 at::native::copy_impl()
[2m[36m(pid=63054)[0m     @     0x7fab889b95a4 at::native::copy_()
[2m[36m(pid=63054)[0m     @     0x7fab890a44f5 at::Tensor::copy_()
[2m[36m(pid=63054)[0m     @     0x7fab8b5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62940)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62940)[0m *** SIGSEGV (@0x0) received by PID 62940 (TID 0x7fd70d9ae700) from PID 0; stack trace: ***
[2m[36m(pid=62940)[0m     @     0x7fd70d587390 (unknown)
[2m[36m(pid=62940)[0m     @     0x7fa80d4e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62940)[0m     @     0x7fa80cc0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62940)[0m     @     0x7fa80cc118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63053)[0m *** SIGSEGV (@0x0) received by PID 63053 (TID 0x7f89a2508700) from PID 0; stack trace: ***
[2m[36m(pid=63053)[0m     @     0x7f89a20e1390 (unknown)
[2m[36m(pid=63053)[0m     @     0x7f5aa208df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63053)[0m     @     0x7f5aa17b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63053)[0m     @     0x7f5aa17bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63016)[0m     @     0x7fed37bdc390 (unknown)
[2m[36m(pid=63016)[0m     @     0x7fbe37af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63016)[0m     @     0x7fbe372207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63016)[0m     @     0x7fbe372238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63016)[0m     @     0x7fbe37223ad3 at::TensorIterator::for_each()
[2m[36m(pid=63043)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63043)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63043)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63043)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63043)[0m *** SIGSEGV (@0x0) received by PID 63043 (TID 0x7ff2ecd0e700) from PID 0; stack trace: ***
[2m[36m(pid=63043)[0m     @     0x7ff2ec8e7390 (unknown)
[2m[36m(pid=63067)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63067)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63067)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63067)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63067)[0m *** SIGSEGV (@0x0) received by PID 63067 (TID 0x7f6fcfffe700) from PID 0; stack trace: ***
[2m[36m(pid=63067)[0m     @     0x7f6fcfbd7390 (unknown)
[2m[36m(pid=63067)[0m     @     0x7f40cf9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63067)[0m     @     0x7f40cf0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63004)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63004)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63004)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63004)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63004)[0m *** SIGSEGV (@0x0) received by PID 63004 (TID 0x7f692e6ff700) from PID 0; stack trace: ***
[2m[36m(pid=63004)[0m     @     0x7f692e2d8390 (unknown)
[2m[36m(pid=63004)[0m     @     0x7f3a2e193f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63037)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63037)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63037)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63063)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63063)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63063)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62959)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62959)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62959)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62959)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62959)[0m *** SIGSEGV (@0x0) received by PID 62959 (TID 0x7fbef0712700) from PID 0; stack trace: ***
[2m[36m(pid=62959)[0m     @     0x7fbef02eb390 (unknown)
[2m[36m(pid=62959)[0m     @     0x7f8ff0101f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62959)[0m     @     0x7f8fef82c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63014)[0m     @     0x7f24b4bc8388 at::native::copy_impl()
[2m[36m(pid=63014)[0m     @     0x7f24b4bca5a4 at::native::copy_()
[2m[36m(pid=63014)[0m     @     0x7f24b52b54f5 at::Tensor::copy_()
[2m[36m(pid=63014)[0m     @     0x7f24b77888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62938)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62938)[0m *** SIGSEGV (@0x0) received by PID 62938 (TID 0x7f28d05c9700) from PID 0; stack trace: ***
[2m[36m(pid=62938)[0m     @     0x7f28d01a2390 (unknown)
[2m[36m(pid=62938)[0m     @     0x7ef9d00cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62938)[0m     @     0x7ef9cf7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62938)[0m     @     0x7ef9cf7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62937)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62937)[0m *** SIGSEGV (@0x0) received by PID 62937 (TID 0x7f317cd2b700) from PID 0; stack trace: ***
[2m[36m(pid=62937)[0m     @     0x7f317c904390 (unknown)
[2m[36m(pid=62937)[0m     @     0x7f027c8b0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62937)[0m     @     0x7f027bfdb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62937)[0m     @     0x7f027bfde8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62937)[0m     @     0x7f027bfdead3 at::TensorIterator::for_each()
[2m[36m(pid=62941)[0m     @     0x7f080819d390 (unknown)
[2m[36m(pid=62941)[0m     @     0x7ed90801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62941)[0m     @     0x7ed9077477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62941)[0m     @     0x7ed90774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62941)[0m     @     0x7ed90774aad3 at::TensorIterator::for_each()
[2m[36m(pid=62936)[0m     @     0x7ff428e63390 (unknown)
[2m[36m(pid=62936)[0m     @     0x7fc528dd2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62936)[0m     @     0x7fc5284fd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62936)[0m     @     0x7fc5285008f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62924)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62924)[0m *** SIGSEGV (@0x0) received by PID 62924 (TID 0x7f1779186700) from PID 0; stack trace: ***
[2m[36m(pid=62924)[0m     @     0x7f1778d5f390 (unknown)
[2m[36m(pid=62924)[0m     @     0x7ee878940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62924)[0m     @     0x7ee87806b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62924)[0m     @     0x7ee87806e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62956)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62956)[0m *** SIGSEGV (@0x0) received by PID 62956 (TID 0x7f4a97390700) from PID 0; stack trace: ***
[2m[36m(pid=62956)[0m     @     0x7f4a96f69390 (unknown)
[2m[36m(pid=62956)[0m     @     0x7f1b96f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62956)[0m     @     0x7f1b9663e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62956)[0m     @     0x7f1b966418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63001)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63001)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63001)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63001)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63001)[0m *** SIGSEGV (@0x0) received by PID 63001 (TID 0x7f36e278e700) from PID 0; stack trace: ***
[2m[36m(pid=63057)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63057)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63057)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63057)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63057)[0m *** SIGSEGV (@0x0) received by PID 63057 (TID 0x7f47b085e700) from PID 0; stack trace: ***
[2m[36m(pid=63057)[0m     @     0x7f47b0437390 (unknown)
[2m[36m(pid=62946)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62946)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62946)[0m *** SIGSEGV (@0x0) received by PID 62946 (TID 0x7f0f67d6e700) from PID 0; stack trace: ***
[2m[36m(pid=62946)[0m     @     0x7f0f67947390 (unknown)
[2m[36m(pid=62946)[0m     @     0x7ee067751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62946)[0m     @     0x7ee066e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62925)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62925)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62925)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62925)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62925)[0m *** SIGSEGV (@0x0) received by PID 62925 (TID 0x7f43ce438700) from PID 0; stack trace: ***
[2m[36m(pid=62925)[0m     @     0x7f43ce011390 (unknown)
[2m[36m(pid=62925)[0m     @     0x7f14cde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62925)[0m     @     0x7f14cd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62939)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62939)[0m *** SIGSEGV (@0x0) received by PID 62939 (TID 0x7fb9a52cb700) from PID 0; stack trace: ***
[2m[36m(pid=62939)[0m     @     0x7fb9a4ea4390 (unknown)
[2m[36m(pid=62939)[0m     @     0x7f8aa4e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62939)[0m     @     0x7f8aa45627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62939)[0m     @     0x7f8aa45658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63035)[0m     @     0x7f146c26e390 (unknown)
[2m[36m(pid=63035)[0m     @     0x7ee56c0cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63035)[0m     @     0x7ee56b7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63035)[0m     @     0x7ee56b7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63035)[0m     @     0x7ee56b7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=62985)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62985)[0m *** SIGSEGV (@0x0) received by PID 62985 (TID 0x7fdf20abc700) from PID 0; stack trace: ***
[2m[36m(pid=62985)[0m     @     0x7fdf20695390 (unknown)
[2m[36m(pid=62985)[0m     @     0x7fb0203e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62985)[0m     @     0x7fb01fb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62985)[0m     @     0x7fb01fb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62985)[0m     @     0x7fb01fb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=62933)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62933)[0m *** SIGSEGV (@0x0) received by PID 62933 (TID 0x7f52eb6d5700) from PID 0; stack trace: ***
[2m[36m(pid=62933)[0m     @     0x7f52eb2ae390 (unknown)
[2m[36m(pid=62933)[0m     @     0x7f23eb266f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62933)[0m     @     0x7f23ea9917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62933)[0m     @     0x7f23ea9948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62933)[0m     @     0x7f23ea994ad3 at::TensorIterator::for_each()
[2m[36m(pid=62935)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62935)[0m *** SIGSEGV (@0x0) received by PID 62935 (TID 0x7f7c2f8a7700) from PID 0; stack trace: ***
[2m[36m(pid=62935)[0m     @     0x7f7c2f480390 (unknown)
[2m[36m(pid=62935)[0m     @     0x7f4d2f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62935)[0m     @     0x7f4d2e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62935)[0m     @     0x7f4d2e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62935)[0m     @     0x7f4d2e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=62945)[0m     @     0x7fd6bd45c390 (unknown)
[2m[36m(pid=62945)[0m     @     0x7fa7bd377f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62945)[0m     @     0x7fa7bcaa27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62945)[0m     @     0x7fa7bcaa58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62945)[0m     @     0x7fa7bcaa5ad3 at::TensorIterator::for_each()
[2m[36m(pid=63060)[0m *** SIGSEGV (@0x0) received by PID 63060 (TID 0x7f99f7afe700) from PID 0; stack trace: ***
[2m[36m(pid=63060)[0m     @     0x7f99f76d7390 (unknown)
[2m[36m(pid=63060)[0m     @     0x7f6af761ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63060)[0m     @     0x7f6af6d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63060)[0m     @     0x7f6af6d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63060)[0m     @     0x7f6af6d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=62953)[0m     @     0x7f63c9116390 (unknown)
[2m[36m(pid=62953)[0m     @     0x7f34c90b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62953)[0m     @     0x7f34c87e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62953)[0m     @     0x7f34c87e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62953)[0m     @     0x7f34c87e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=62953)[0m     @     0x7f34c87e3d91 at::TensorIterator::for_each()
[2m[36m(pid=62947)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62947)[0m *** SIGSEGV (@0x0) received by PID 62947 (TID 0x7fcd5980a700) from PID 0; stack trace: ***
[2m[36m(pid=62947)[0m     @     0x7fcd593e3390 (unknown)
[2m[36m(pid=62947)[0m     @     0x7f9e5935ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62947)[0m     @     0x7f9e58a8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62947)[0m     @     0x7f9e58a8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62947)[0m     @     0x7f9e58a8dad3 at::TensorIterator::for_each()
[2m[36m(pid=63006)[0m     @     0x7f37369ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63006)[0m     @     0x7f37360f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63006)[0m     @     0x7f37360fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63006)[0m     @     0x7f37360faad3 at::TensorIterator::for_each()
[2m[36m(pid=63006)[0m     @     0x7f37360fad91 at::TensorIterator::for_each()
[2m[36m(pid=63006)[0m     @     0x7f37369ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63006)[0m     @     0x7f3736a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62931)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62931)[0m *** SIGSEGV (@0x0) received by PID 62931 (TID 0x7f8b7785c700) from PID 0; stack trace: ***
[2m[36m(pid=62931)[0m     @     0x7f8b77435390 (unknown)
[2m[36m(pid=62931)[0m     @     0x7f5c77229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62931)[0m     @     0x7f5c769547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62931)[0m     @     0x7f5c769578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62931)[0m     @     0x7f5c76957ad3 at::TensorIterator::for_each()
[2m[36m(pid=62934)[0m     @     0x7f78a52ec390 (unknown)
[2m[36m(pid=62934)[0m     @     0x7f49a5166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62934)[0m     @     0x7f49a48917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62934)[0m     @     0x7f49a48948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62934)[0m     @     0x7f49a4894ad3 at::TensorIterator::for_each()
[2m[36m(pid=63010)[0m     @     0x7fb3f9d37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63010)[0m     @     0x7fb3f94627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63010)[0m     @     0x7fb3f94658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63010)[0m     @     0x7fb3f9465ad3 at::TensorIterator::for_each()
[2m[36m(pid=63010)[0m     @     0x7fb3f9465d91 at::TensorIterator::for_each()
[2m[36m(pid=62991)[0m     @     0x7f4e296f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62991)[0m     @     0x7f4e28e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62991)[0m     @     0x7f4e28e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62991)[0m     @     0x7f4e28e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=62991)[0m     @     0x7f4e28e22d91 at::TensorIterator::for_each()
[2m[36m(pid=62991)[0m     @     0x7f4e29705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63042)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63042)[0m *** SIGSEGV (@0x0) received by PID 63042 (TID 0x7f70453f7700) from PID 0; stack trace: ***
[2m[36m(pid=63042)[0m     @     0x7f7044fd0390 (unknown)
[2m[36m(pid=63042)[0m     @     0x7f4144ea4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63042)[0m     @     0x7f41445cf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63042)[0m     @     0x7f41445d28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63042)[0m     @     0x7f41445d2ad3 at::TensorIterator::for_each()
[2m[36m(pid=62948)[0m     @     0x7fd6bc75e390 (unknown)
[2m[36m(pid=62948)[0m     @     0x7fa7bc563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62948)[0m     @     0x7fa7bbc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62948)[0m     @     0x7fa7bbc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62948)[0m     @     0x7fa7bbc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=62948)[0m     @     0x7fa7bbc91d91 at::TensorIterator::for_each()
[2m[36m(pid=62948)[0m     @     0x7fa7bc574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62948)[0m     @     0x7fa7bc597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62926)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62926)[0m *** SIGSEGV (@0x0) received by PID 62926 (TID 0x7f12a398b700) from PID 0; stack trace: ***
[2m[36m(pid=62926)[0m     @     0x7f12a3564390 (unknown)
[2m[36m(pid=62926)[0m     @     0x7ee3a343af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62926)[0m     @     0x7ee3a2b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62926)[0m     @     0x7ee3a2b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62926)[0m     @     0x7ee3a2b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=62927)[0m     @     0x7f2ec405f390 (unknown)
[2m[36m(pid=62927)[0m     @     0x7effc3d2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62927)[0m     @     0x7effc34577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62927)[0m     @     0x7effc345a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62927)[0m     @     0x7effc345aad3 at::TensorIterator::for_each()
[2m[36m(pid=63032)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63032)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63032)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63032)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63032)[0m *** SIGSEGV (@0x0) received by PID 63032 (TID 0x7f8339e58700) from PID 0; stack trace: ***
[2m[36m(pid=63032)[0m     @     0x7f8339a31390 (unknown)
[2m[36m(pid=63032)[0m     @     0x7f54397f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63032)[0m     @     0x7f5438f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63047)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63047)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63047)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63047)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63047)[0m *** SIGSEGV (@0x0) received by PID 63047 (TID 0x7f3f3ee2a700) from PID 0; stack trace: ***
[2m[36m(pid=63047)[0m     @     0x7f3f3ea03390 (unknown)
[2m[36m(pid=63047)[0m     @     0x7f103e99ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63047)[0m     @     0x7f103e0ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63047)[0m     @     0x7f103e0cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62929)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62929)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62929)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62929)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62929)[0m *** SIGSEGV (@0x0) received by PID 62929 (TID 0x7f389476f700) from PID 0; stack trace: ***
[2m[36m(pid=62929)[0m     @     0x7f3894348390 (unknown)
[2m[36m(pid=62998)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=62998)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=62998)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=62998)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62998)[0m *** SIGSEGV (@0x0) received by PID 62998 (TID 0x7f4a5a34b700) from PID 0; stack trace: ***
[2m[36m(pid=62998)[0m     @     0x7f4a59f24390 (unknown)
[2m[36m(pid=62998)[0m     @     0x7f1b59e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62930)[0m PC: @                0x0 (unknown)
[2m[36m(pid=62930)[0m *** SIGSEGV (@0x0) received by PID 62930 (TID 0x7f24a6cd6700) from PID 0; stack trace: ***
[2m[36m(pid=62930)[0m     @     0x7f24a68af390 (unknown)
[2m[36m(pid=62930)[0m     @     0x7ef5a670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62930)[0m     @     0x7ef5a5e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62930)[0m     @     0x7ef5a5e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62930)[0m     @     0x7ef5a5e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=63012)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=63012)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=63012)[0m *** Aborted at 1604573434 (unix time) try "date -d @1604573434" if you are using GNU date ***
[2m[36m(pid=63059)[0m     @     0x7fb6a05a94f5 at::Tensor::copy_()
[2m[36m(pid=63059)[0m     @     0x7fb6a665479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63059)[0m     @     0x55b3a73a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63059)[0m     @     0x55b3a7304b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63059)[0m     @     0x55b3a738fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63059)[0m     @     0x55b3a7390a20 method_vectorcall
[2m[36m(pid=63059)[0m     @     0x55b3a7304bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63059)[0m     @     0x55b3a738fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63059)[0m     @     0x55b3a7390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63059)[0m     @     0x55b3a7305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63059)[0m     @     0x55b3a738fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63059)[0m     @     0x55b3a7390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63059)[0m     @     0x55b3a7305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63059)[0m     @     0x55b3a738fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63059)[0m     @     0x55b3a7390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63059)[0m     @     0x55b3a7305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63059)[0m     @     0x55b3a738fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63059)[0m     @     0x55b3a7390643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63059)[0m     @     0x55b3a7305689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63021)[0m     @     0x7f878a0438de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63021)[0m     @     0x7f8787b704f5 at::Tensor::copy_()
[2m[36m(pid=63021)[0m     @     0x7f878dc1b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63021)[0m     @     0x55c5e74c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63021)[0m     @     0x55c5e7420b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63021)[0m     @     0x55c5e74abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63021)[0m     @     0x55c5e74aca20 method_vectorcall
[2m[36m(pid=63021)[0m     @     0x55c5e7420bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63021)[0m     @     0x55c5e74abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63021)[0m     @     0x55c5e74ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63021)[0m     @     0x55c5e7421689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63021)[0m     @     0x55c5e74abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63021)[0m     @     0x55c5e74ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63021)[0m     @     0x55c5e7421689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63021)[0m     @     0x55c5e74abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63021)[0m     @     0x55c5e74ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63021)[0m     @     0x55c5e7421689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63021)[0m     @     0x55c5e74abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63021)[0m     @     0x55c5e74ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63021)[0m     @     0x55c5e7421689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63039)[0m     @     0x7f4952ce54f5 at::Tensor::copy_()
[2m[36m(pid=63039)[0m     @     0x7f4958d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63039)[0m     @     0x55a6aa8fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63039)[0m     @     0x55a6aa858b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63039)[0m     @     0x55a6aa8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=63039)[0m     @     0x55a6aa8e4a20 method_vectorcall
[2m[36m(pid=63039)[0m     @     0x55a6aa858bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63039)[0m     @     0x55a6aa8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=63039)[0m     @     0x55a6aa8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63039)[0m     @     0x55a6aa859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63039)[0m     @     0x55a6aa8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=63039)[0m     @     0x55a6aa8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63039)[0m     @     0x55a6aa859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63039)[0m     @     0x55a6aa8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=63039)[0m     @     0x55a6aa8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63039)[0m     @     0x55a6aa859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63039)[0m     @     0x55a6aa8e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=63039)[0m     @     0x55a6aa8e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63039)[0m     @     0x55a6aa859689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63008)[0m     @     0x7f1221cfb4f5 at::Tensor::copy_()
[2m[36m(pid=63008)[0m     @     0x7f1227da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63008)[0m     @     0x55dbb633afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63008)[0m     @     0x55dbb6295b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63008)[0m     @     0x55dbb6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=63008)[0m     @     0x55dbb6321a20 method_vectorcall
[2m[36m(pid=63008)[0m     @     0x55dbb6295bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63008)[0m     @     0x55dbb6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=63008)[0m     @     0x55dbb6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63008)[0m     @     0x55dbb6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63008)[0m     @     0x55dbb6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=63008)[0m     @     0x55dbb6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63008)[0m     @     0x55dbb6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63008)[0m     @     0x55dbb6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=63008)[0m     @     0x55dbb6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63008)[0m     @     0x55dbb6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63008)[0m     @     0x55dbb6320baf _PyEval_EvalCodeWithName
[2m[36m(pid=63008)[0m     @     0x55dbb6321643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63008)[0m     @     0x55dbb6296689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63005)[0m     @     0x7fc548a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63005)[0m     @     0x7fc54658d4f5 at::Tensor::copy_()
[2m[36m(pid=63005)[0m     @     0x7fc54c63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63005)[0m     @     0x558a38656fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63005)[0m     @     0x558a385b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63005)[0m     @     0x558a3863cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63005)[0m     @     0x558a3863da20 method_vectorcall
[2m[36m(pid=63005)[0m     @     0x558a385b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63005)[0m     @     0x558a3863cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63005)[0m     @     0x558a3863d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63005)[0m     @     0x558a385b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63005)[0m     @     0x558a3863cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63005)[0m     @     0x558a3863d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63005)[0m     @     0x558a385b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63005)[0m     @     0x558a3863cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63005)[0m     @     0x558a3863d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63005)[0m     @     0x558a385b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63005)[0m     @     0x558a3863cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63005)[0m     @     0x558a3863d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63005)[0m     @     0x558a385b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63049)[0m     @     0x7fa8675378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63049)[0m     @     0x7fa8650644f5 at::Tensor::copy_()
[2m[36m(pid=63049)[0m     @     0x7fa86b10f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63049)[0m     @     0x5654afe3cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63049)[0m     @     0x5654afd97b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63049)[0m     @     0x5654afe22baf _PyEval_EvalCodeWithName
[2m[36m(pid=63049)[0m     @     0x5654afe23a20 method_vectorcall
[2m[36m(pid=63049)[0m     @     0x5654afd97bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63049)[0m     @     0x5654afe22baf _PyEval_EvalCodeWithName
[2m[36m(pid=63049)[0m     @     0x5654afe23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63049)[0m     @     0x5654afd98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63049)[0m     @     0x5654afe22baf _PyEval_EvalCodeWithName
[2m[36m(pid=63049)[0m     @     0x5654afe23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63049)[0m     @     0x5654afd98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63049)[0m     @     0x5654afe22baf _PyEval_EvalCodeWithName
[2m[36m(pid=63049)[0m     @     0x5654afe23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63049)[0m     @     0x5654afd98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63049)[0m     @     0x5654afe22baf _PyEval_EvalCodeWithName
[2m[36m(pid=63049)[0m     @     0x5654afe23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63049)[0m     @     0x5654afd98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62951)[0m     @     0x7f5e567b18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62951)[0m     @     0x7f5e567b1ad3 at::TensorIterator::for_each()
[2m[36m(pid=62951)[0m     @     0x7f5e567b1d91 at::TensorIterator::for_each()
[2m[36m(pid=62993)[0m     @     0x7f8844894ad3 at::TensorIterator::for_each()
[2m[36m(pid=62993)[0m     @     0x7f8844894d91 at::TensorIterator::for_each()
[2m[36m(pid=62993)[0m     @     0x7f8845177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62993)[0m     @     0x7f884519ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63009)[0m     @     0x7f58c2343ad3 at::TensorIterator::for_each()
[2m[36m(pid=63009)[0m     @     0x7f58c2343d91 at::TensorIterator::for_each()
[2m[36m(pid=63009)[0m     @     0x7f58c2c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63009)[0m     @     0x7f58c2c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63034)[0m     @     0x7eee8ece54f5 at::Tensor::copy_()
[2m[36m(pid=63034)[0m     @     0x7eee94d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63034)[0m     @     0x55d8b4b60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63034)[0m     @     0x55d8b4abbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63034)[0m     @     0x55d8b4b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63034)[0m     @     0x55d8b4b47a20 method_vectorcall
[2m[36m(pid=63034)[0m     @     0x55d8b4abbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63034)[0m     @     0x55d8b4b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63034)[0m     @     0x55d8b4b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63034)[0m     @     0x55d8b4abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63034)[0m     @     0x55d8b4b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63034)[0m     @     0x55d8b4b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63034)[0m     @     0x55d8b4abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63034)[0m     @     0x55d8b4b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63034)[0m     @     0x55d8b4b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63034)[0m     @     0x55d8b4abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63034)[0m     @     0x55d8b4b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63034)[0m     @     0x55d8b4b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63034)[0m     @     0x55d8b4abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62950)[0m     @     0x7ef52d9e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=62950)[0m     @     0x7ef52d9e7d91 at::TensorIterator::for_each()
[2m[36m(pid=62950)[0m     @     0x7ef52e2cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62950)[0m     @     0x7ef52e2edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62999)[0m     @     0x7f8c14978d91 at::TensorIterator::for_each()
[2m[36m(pid=62999)[0m     @     0x7f8c1525bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62999)[0m     @     0x7f8c1527ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62999)[0m     @     0x7f8c14720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62999)[0m     @     0x7f8c1471e388 at::native::copy_impl()
[2m[36m(pid=63041)[0m     @     0x7f1acb9b14f5 at::Tensor::copy_()
[2m[36m(pid=63041)[0m     @     0x7f1ad1a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63041)[0m     @     0x559b25938fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63041)[0m     @     0x559b25893b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63041)[0m     @     0x559b2591ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63041)[0m     @     0x559b2591fa20 method_vectorcall
[2m[36m(pid=63041)[0m     @     0x559b25893bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63041)[0m     @     0x559b2591ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63041)[0m     @     0x559b2591f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63041)[0m     @     0x559b25894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63041)[0m     @     0x559b2591ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63041)[0m     @     0x559b2591f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63041)[0m     @     0x559b25894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63041)[0m     @     0x559b2591ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63041)[0m     @     0x559b2591f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63041)[0m     @     0x559b25894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63041)[0m     @     0x559b2591ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63041)[0m     @     0x559b2591f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63041)[0m     @     0x559b25894689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63000)[0m     @     0x7f7f745a94f5 at::Tensor::copy_()
[2m[36m(pid=63000)[0m     @     0x7f7f76a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63000)[0m     @     0x7f7f745a94f5 at::Tensor::copy_()
[2m[36m(pid=63000)[0m     @     0x7f7f7a65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63000)[0m     @     0x56179e9b2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63000)[0m     @     0x56179e90db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63000)[0m     @     0x56179e998baf _PyEval_EvalCodeWithName
[2m[36m(pid=63000)[0m     @     0x56179e999a20 method_vectorcall
[2m[36m(pid=63000)[0m     @     0x56179e90dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63000)[0m     @     0x56179e998baf _PyEval_EvalCodeWithName
[2m[36m(pid=63000)[0m     @     0x56179e999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63000)[0m     @     0x56179e90e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63000)[0m     @     0x56179e998baf _PyEval_EvalCodeWithName
[2m[36m(pid=63000)[0m     @     0x56179e999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63000)[0m     @     0x56179e90e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63000)[0m     @     0x56179e998baf _PyEval_EvalCodeWithName
[2m[36m(pid=63000)[0m     @     0x56179e999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63000)[0m     @     0x56179e90e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63000)[0m     @     0x56179e998baf _PyEval_EvalCodeWithName
[2m[36m(pid=63000)[0m     @     0x56179e999643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63000)[0m     @     0x56179e90e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63003)[0m     @     0x7ee5919bfad3 at::TensorIterator::for_each()
[2m[36m(pid=63003)[0m     @     0x7ee5919bfd91 at::TensorIterator::for_each()
[2m[36m(pid=63003)[0m     @     0x7ee5922a2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63003)[0m     @     0x7ee5922c5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63003)[0m     @     0x7ee591767a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63023)[0m     @     0x55cbc7913baf _PyEval_EvalCodeWithName
[2m[36m(pid=63023)[0m     @     0x55cbc7914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63023)[0m     @     0x55cbc7889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63023)[0m     @     0x55cbc7913baf _PyEval_EvalCodeWithName
[2m[36m(pid=63023)[0m     @     0x55cbc7914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63023)[0m     @     0x55cbc7889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63023)[0m     @     0x55cbc7913baf _PyEval_EvalCodeWithName
[2m[36m(pid=63023)[0m     @     0x55cbc7914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63023)[0m     @     0x55cbc7889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63020)[0m     @     0x7ee95f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=63020)[0m     @     0x7ee965a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63020)[0m     @     0x55f8f7228fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63020)[0m     @     0x55f8f7183b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63020)[0m     @     0x55f8f720ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63020)[0m     @     0x55f8f720fa20 method_vectorcall
[2m[36m(pid=63020)[0m     @     0x55f8f7183bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63020)[0m     @     0x55f8f720ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63020)[0m     @     0x55f8f720f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63020)[0m     @     0x55f8f7184689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63020)[0m     @     0x55f8f720ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63020)[0m     @     0x55f8f720f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63020)[0m     @     0x55f8f7184689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63020)[0m     @     0x55f8f720ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63020)[0m     @     0x55f8f720f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63020)[0m     @     0x55f8f7184689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63020)[0m     @     0x55f8f720ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63020)[0m     @     0x55f8f720f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63020)[0m     @     0x55f8f7184689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63015)[0m     @     0x7f1c9a852ad3 at::TensorIterator::for_each()
[2m[36m(pid=63015)[0m     @     0x7f1c9a852d91 at::TensorIterator::for_each()
[2m[36m(pid=63015)[0m     @     0x7f1c9b135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63015)[0m     @     0x7f1c9b158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62958)[0m     @     0x7fc78133bad3 at::TensorIterator::for_each()
[2m[36m(pid=62958)[0m     @     0x7fc78133bd91 at::TensorIterator::for_each()
[2m[36m(pid=62958)[0m     @     0x7fc781c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62958)[0m     @     0x7fc781c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63056)[0m     @     0x7f5e1464c4f5 at::Tensor::copy_()
[2m[36m(pid=63056)[0m     @     0x7f5e1a6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63056)[0m     @     0x562b17163fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63056)[0m     @     0x562b170beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63056)[0m     @     0x562b17149baf _PyEval_EvalCodeWithName
[2m[36m(pid=63056)[0m     @     0x562b1714aa20 method_vectorcall
[2m[36m(pid=63056)[0m     @     0x562b170bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63056)[0m     @     0x562b17149baf _PyEval_EvalCodeWithName
[2m[36m(pid=63056)[0m     @     0x562b1714a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63056)[0m     @     0x562b170bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63056)[0m     @     0x562b17149baf _PyEval_EvalCodeWithName
[2m[36m(pid=63056)[0m     @     0x562b1714a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63056)[0m     @     0x562b170bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63056)[0m     @     0x562b17149baf _PyEval_EvalCodeWithName
[2m[36m(pid=63056)[0m     @     0x562b1714a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63056)[0m     @     0x562b170bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63056)[0m     @     0x562b17149baf _PyEval_EvalCodeWithName
[2m[36m(pid=63056)[0m     @     0x562b1714a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63056)[0m     @     0x562b170bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63002)[0m *** SIGSEGV (@0x0) received by PID 63002 (TID 0x7fe98b357700) from PID 0; stack trace: ***
[2m[36m(pid=62954)[0m     @     0x7fa080776ad3 at::TensorIterator::for_each()
[2m[36m(pid=62954)[0m     @     0x7fa080776d91 at::TensorIterator::for_each()
[2m[36m(pid=62954)[0m     @     0x7fa081059b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62954)[0m     @     0x7fa08107cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63019)[0m     @     0x7f3145480d91 at::TensorIterator::for_each()
[2m[36m(pid=63019)[0m     @     0x7f3145d63b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63019)[0m     @     0x7f3145d86c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63019)[0m     @     0x7f3145228a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63019)[0m     @     0x7f3145226388 at::native::copy_impl()
[2m[36m(pid=62992)[0m     @     0x7f17ce825ad3 at::TensorIterator::for_each()
[2m[36m(pid=62992)[0m     @     0x7f17ce825d91 at::TensorIterator::for_each()
[2m[36m(pid=62992)[0m     @     0x7f17cf108b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62992)[0m     @     0x7f17cf12bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63027)[0m     @     0x7f32e0da2ad3 at::TensorIterator::for_each()
[2m[36m(pid=63027)[0m     @     0x7f32e0da2d91 at::TensorIterator::for_each()
[2m[36m(pid=63027)[0m     @     0x7f32e1685b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63027)[0m     @     0x7f32e16a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63027)[0m     @     0x7f32e0b4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62989)[0m     @     0x7fc642ce98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62989)[0m     @     0x7fc642ce9ad3 at::TensorIterator::for_each()
[2m[36m(pid=62989)[0m     @     0x7fc642ce9d91 at::TensorIterator::for_each()
[2m[36m(pid=62962)[0m     @     0x7f0230269ad3 at::TensorIterator::for_each()
[2m[36m(pid=62962)[0m     @     0x7f0230269d91 at::TensorIterator::for_each()
[2m[36m(pid=62962)[0m     @     0x7f0230b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62962)[0m     @     0x7f0230b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63007)[0m     @     0x7f8fcd2cdad3 at::TensorIterator::for_each()
[2m[36m(pid=63007)[0m     @     0x7f8fcd2cdd91 at::TensorIterator::for_each()
[2m[36m(pid=63007)[0m     @     0x7f8fcdbb0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63007)[0m     @     0x7f8fcdbd3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63011)[0m     @     0x7fbb4c425ad3 at::TensorIterator::for_each()
[2m[36m(pid=63011)[0m     @     0x7fbb4c425d91 at::TensorIterator::for_each()
[2m[36m(pid=63011)[0m     @     0x7fbb4cd08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62943)[0m     @     0x7f20f57458f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62943)[0m     @     0x7f20f5745ad3 at::TensorIterator::for_each()
[2m[36m(pid=62943)[0m     @     0x7f20f5745d91 at::TensorIterator::for_each()
[2m[36m(pid=63050)[0m     @     0x7f9c30c628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63050)[0m     @     0x7f9c2e78f4f5 at::Tensor::copy_()
[2m[36m(pid=63050)[0m     @     0x7f9c3483a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63050)[0m     @     0x561f6864afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63050)[0m     @     0x561f685a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63050)[0m     @     0x561f68630baf _PyEval_EvalCodeWithName
[2m[36m(pid=63050)[0m     @     0x561f68631a20 method_vectorcall
[2m[36m(pid=63050)[0m     @     0x561f685a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63050)[0m     @     0x561f68630baf _PyEval_EvalCodeWithName
[2m[36m(pid=63050)[0m     @     0x561f68631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63050)[0m     @     0x561f685a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63050)[0m     @     0x561f68630baf _PyEval_EvalCodeWithName
[2m[36m(pid=63050)[0m     @     0x561f68631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63050)[0m     @     0x561f685a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63050)[0m     @     0x561f68630baf _PyEval_EvalCodeWithName
[2m[36m(pid=63050)[0m     @     0x561f68631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63050)[0m     @     0x561f685a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63050)[0m     @     0x561f68630baf _PyEval_EvalCodeWithName
[2m[36m(pid=63050)[0m     @     0x561f68631643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63050)[0m     @     0x561f685a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62961)[0m     @     0x7fc0de957ad3 at::TensorIterator::for_each()
[2m[36m(pid=62961)[0m     @     0x7fc0de957d91 at::TensorIterator::for_each()
[2m[36m(pid=62961)[0m     @     0x7fc0df23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62961)[0m     @     0x7fc0df25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63017)[0m     @     0x7ef4bc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=63017)[0m     @     0x7ef4bc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=63017)[0m     @     0x7ef4bd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63017)[0m     @     0x7ef4bd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63054)[0m     @     0x7fab890a44f5 at::Tensor::copy_()
[2m[36m(pid=63054)[0m     @     0x7fab8f14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63054)[0m     @     0x556fc3c89fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63054)[0m     @     0x556fc3be4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63054)[0m     @     0x556fc3c6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63054)[0m     @     0x556fc3c70a20 method_vectorcall
[2m[36m(pid=63054)[0m     @     0x556fc3be4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63054)[0m     @     0x556fc3c6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63054)[0m     @     0x556fc3c70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63054)[0m     @     0x556fc3be5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63054)[0m     @     0x556fc3c6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63054)[0m     @     0x556fc3c70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63054)[0m     @     0x556fc3be5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63054)[0m     @     0x556fc3c6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63054)[0m     @     0x556fc3c70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63054)[0m     @     0x556fc3be5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63054)[0m     @     0x556fc3c6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63054)[0m     @     0x556fc3c70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63054)[0m     @     0x556fc3be5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x7fa80cc11ad3 at::TensorIterator::for_each()
[2m[36m(pid=62940)[0m     @     0x7fa80cc11d91 at::TensorIterator::for_each()
[2m[36m(pid=62940)[0m     @     0x7fa80d4f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62940)[0m     @     0x7fa80d517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62940)[0m     @     0x7fa80c9b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62940)[0m     @     0x7fa80c9b7388 at::native::copy_impl()
[2m[36m(pid=63053)[0m     @     0x7f5aa17bbad3 at::TensorIterator::for_each()
[2m[36m(pid=63053)[0m     @     0x7f5aa17bbd91 at::TensorIterator::for_each()
[2m[36m(pid=63053)[0m     @     0x7f5aa209eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63053)[0m     @     0x7f5aa20c1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63053)[0m     @     0x7f5aa1563a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63053)[0m     @     0x7f5aa1561388 at::native::copy_impl()
[2m[36m(pid=63016)[0m     @     0x7fbe37223d91 at::TensorIterator::for_each()
[2m[36m(pid=63016)[0m     @     0x7fbe37b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63016)[0m     @     0x7fbe37b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63016)[0m     @     0x7fbe36fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63016)[0m     @     0x7fbe36fc9388 at::native::copy_impl()
[2m[36m(pid=63016)[0m     @     0x7fbe36fcb5a4 at::native::copy_()
[2m[36m(pid=63043)[0m     @     0x7fc3ec774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63043)[0m     @     0x7fc3ebe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63067)[0m     @     0x7f40cf0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63067)[0m     @     0x7f40cf0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=63067)[0m     @     0x7f40cf0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=63067)[0m     @     0x7f40cf9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63067)[0m     @     0x7f40cf9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63004)[0m     @     0x7f3a2d8be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63004)[0m     @     0x7f3a2d8c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63004)[0m     @     0x7f3a2d8c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=63004)[0m     @     0x7f3a2d8c1d91 at::TensorIterator::for_each()
[2m[36m(pid=63004)[0m     @     0x7f3a2e1a4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63037)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63037)[0m *** SIGSEGV (@0x0) received by PID 63037 (TID 0x7f747d7c2700) from PID 0; stack trace: ***
[2m[36m(pid=63037)[0m     @     0x7f747d39b390 (unknown)
[2m[36m(pid=63063)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63063)[0m *** SIGSEGV (@0x0) received by PID 63063 (TID 0x7f44f0acc700) from PID 0; stack trace: ***
[2m[36m(pid=63063)[0m     @     0x7f44f06a5390 (unknown)
[2m[36m(pid=63063)[0m     @     0x7f15f0563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63063)[0m     @     0x7f15efc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62959)[0m     @     0x7f8fef82f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62959)[0m     @     0x7f8fef82fad3 at::TensorIterator::for_each()
[2m[36m(pid=62959)[0m     @     0x7f8fef82fd91 at::TensorIterator::for_each()
[2m[36m(pid=62959)[0m     @     0x7f8ff0112b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62959)[0m     @     0x7f8ff0135c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63014)[0m     @     0x7f24b52b54f5 at::Tensor::copy_()
[2m[36m(pid=63014)[0m     @     0x7f24bb36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63014)[0m     @     0x55c061e4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63014)[0m     @     0x55c061da8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63014)[0m     @     0x55c061e33baf _PyEval_EvalCodeWithName
[2m[36m(pid=63014)[0m     @     0x55c061e34a20 method_vectorcall
[2m[36m(pid=63014)[0m     @     0x55c061da8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63014)[0m     @     0x55c061e33baf _PyEval_EvalCodeWithName
[2m[36m(pid=63014)[0m     @     0x55c061e34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63014)[0m     @     0x55c061da9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63014)[0m     @     0x55c061e33baf _PyEval_EvalCodeWithName
[2m[36m(pid=63014)[0m     @     0x55c061e34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63014)[0m     @     0x55c061da9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63014)[0m     @     0x55c061e33baf _PyEval_EvalCodeWithName
[2m[36m(pid=63014)[0m     @     0x55c061e34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63014)[0m     @     0x55c061da9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63014)[0m     @     0x55c061e33baf _PyEval_EvalCodeWithName
[2m[36m(pid=63014)[0m     @     0x55c061e34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63014)[0m     @     0x55c061da9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62938)[0m     @     0x7ef9cf7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=62938)[0m     @     0x7ef9cf7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=62938)[0m     @     0x7ef9d00deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62938)[0m     @     0x7ef9d0101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62938)[0m     @     0x7ef9cf5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62938)[0m     @     0x7ef9cf5a1388 at::native::copy_impl()
[2m[36m(pid=62937)[0m     @     0x7f027bfded91 at::TensorIterator::for_each()
[2m[36m(pid=62937)[0m     @     0x7f027c8c1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62937)[0m     @     0x7f027c8e4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62937)[0m     @     0x7f027bd86a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62937)[0m     @     0x7f027bd84388 at::native::copy_impl()
[2m[36m(pid=62937)[0m     @     0x7f027bd865a4 at::native::copy_()
[2m[36m(pid=62941)[0m     @     0x7ed90774ad91 at::TensorIterator::for_each()
[2m[36m(pid=62941)[0m     @     0x7ed90802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62941)[0m     @     0x7ed908050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62941)[0m     @     0x7ed9074f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62941)[0m     @     0x7ed9074f0388 at::native::copy_impl()
[2m[36m(pid=62941)[0m     @     0x7ed9074f25a4 at::native::copy_()
[2m[36m(pid=62936)[0m     @     0x7fc528500ad3 at::TensorIterator::for_each()
[2m[36m(pid=62936)[0m     @     0x7fc528500d91 at::TensorIterator::for_each()
[2m[36m(pid=62936)[0m     @     0x7fc528de3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62936)[0m     @     0x7fc528e06c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62936)[0m     @     0x7fc5282a8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62936)[0m     @     0x7fc5282a6388 at::native::copy_impl()
[2m[36m(pid=62924)[0m     @     0x7ee87806ead3 at::TensorIterator::for_each()
[2m[36m(pid=62924)[0m     @     0x7ee87806ed91 at::TensorIterator::for_each()
[2m[36m(pid=62924)[0m     @     0x7ee878951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62924)[0m     @     0x7ee878974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62956)[0m     @     0x7f1b96641ad3 at::TensorIterator::for_each()
[2m[36m(pid=62956)[0m     @     0x7f1b96641d91 at::TensorIterator::for_each()
[2m[36m(pid=62956)[0m     @     0x7f1b96f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62956)[0m     @     0x7f1b96f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62956)[0m     @     0x7f1b963e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62956)[0m     @     0x7f1b963e7388 at::native::copy_impl()
[2m[36m(pid=63001)[0m     @     0x7f36e2367390 (unknown)
[2m[36m(pid=63001)[0m     @     0x7f07e230bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63001)[0m     @     0x7f07e1a367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63001)[0m     @     0x7f07e1a398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63057)[0m     @     0x7f18b02def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63057)[0m     @     0x7f18afa097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63057)[0m     @     0x7f18afa0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63057)[0m     @     0x7f18afa0cad3 at::TensorIterator::for_each()
[2m[36m(pid=62946)[0m     @     0x7ee066e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62946)[0m     @     0x7ee066e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=62946)[0m     @     0x7ee066e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=62946)[0m     @     0x7ee067762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62946)[0m     @     0x7ee067785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62925)[0m     @     0x7f14cd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62925)[0m     @     0x7f14cd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=62925)[0m     @     0x7f14cd552d91 at::TensorIterator::for_each()
[2m[36m(pid=62925)[0m     @     0x7f14cde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62925)[0m     @     0x7f14cde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62939)[0m     @     0x7f8aa4565ad3 at::TensorIterator::for_each()
[2m[36m(pid=62939)[0m     @     0x7f8aa4565d91 at::TensorIterator::for_each()
[2m[36m(pid=62939)[0m     @     0x7f8aa4e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62939)[0m     @     0x7f8aa4e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62939)[0m     @     0x7f8aa430da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63035)[0m     @     0x7ee56b7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=63035)[0m     @     0x7ee56c0deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63035)[0m     @     0x7ee56c101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63035)[0m     @     0x7ee56b5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63035)[0m     @     0x7ee56b5a1388 at::native::copy_impl()
[2m[36m(pid=62985)[0m     @     0x7fb01fb11d91 at::TensorIterator::for_each()
[2m[36m(pid=62985)[0m     @     0x7fb0203f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62985)[0m     @     0x7fb020417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62985)[0m     @     0x7fb01f8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62985)[0m     @     0x7fb01f8b7388 at::native::copy_impl()
[2m[36m(pid=62933)[0m     @     0x7f23ea994d91 at::TensorIterator::for_each()
[2m[36m(pid=62933)[0m     @     0x7f23eb277b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62933)[0m     @     0x7f23eb29ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62933)[0m     @     0x7f23ea73ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62935)[0m     @     0x7f4d2e957d91 at::TensorIterator::for_each()
[2m[36m(pid=62935)[0m     @     0x7f4d2f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62935)[0m     @     0x7f4d2f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62945)[0m     @     0x7fa7bcaa5d91 at::TensorIterator::for_each()
[2m[36m(pid=62945)[0m     @     0x7fa7bd388b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62945)[0m     @     0x7fa7bd3abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62945)[0m     @     0x7fa7bc84da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62945)[0m     @     0x7fa7bc84b388 at::native::copy_impl()
[2m[36m(pid=63060)[0m     @     0x7f6af6d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=63060)[0m     @     0x7f6af7630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63060)[0m     @     0x7f6af7653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63060)[0m     @     0x7f6af6af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63060)[0m     @     0x7f6af6af3388 at::native::copy_impl()
[2m[36m(pid=62953)[0m     @     0x7f34c90c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62953)[0m     @     0x7f34c90e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62953)[0m     @     0x7f34c858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62953)[0m     @     0x7f34c8589388 at::native::copy_impl()
[2m[36m(pid=62947)[0m     @     0x7f9e58a8dd91 at::TensorIterator::for_each()
[2m[36m(pid=62947)[0m     @     0x7f9e59370b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62947)[0m     @     0x7f9e59393c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62947)[0m     @     0x7f9e58835a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62947)[0m     @     0x7f9e58833388 at::native::copy_impl()
[2m[36m(pid=63006)[0m     @     0x7f3735ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63006)[0m     @     0x7f3735ea0388 at::native::copy_impl()
[2m[36m(pid=63006)[0m     @     0x7f3735ea25a4 at::native::copy_()
[2m[36m(pid=62931)[0m     @     0x7f5c76957d91 at::TensorIterator::for_each()
[2m[36m(pid=62931)[0m     @     0x7f5c7723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62931)[0m     @     0x7f5c7725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62931)[0m     @     0x7f5c766ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62931)[0m     @     0x7f5c766fd388 at::native::copy_impl()
[2m[36m(pid=62934)[0m     @     0x7f49a4894d91 at::TensorIterator::for_each()
[2m[36m(pid=62934)[0m     @     0x7f49a5177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62934)[0m     @     0x7f49a519ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62934)[0m     @     0x7f49a463ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62934)[0m     @     0x7f49a463a388 at::native::copy_impl()
[2m[36m(pid=62934)[0m     @     0x7f49a463c5a4 at::native::copy_()
[2m[36m(pid=63010)[0m     @     0x7fb3f9d48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63010)[0m     @     0x7fb3f9d6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63010)[0m     @     0x7fb3f920da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63010)[0m     @     0x7fb3f920b388 at::native::copy_impl()
[2m[36m(pid=63010)[0m     @     0x7fb3f920d5a4 at::native::copy_()
[2m[36m(pid=63010)[0m     @     0x7fb3f98f84f5 at::Tensor::copy_()
[2m[36m(pid=62991)[0m     @     0x7f4e29728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62991)[0m     @     0x7f4e28bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62991)[0m     @     0x7f4e28bc8388 at::native::copy_impl()
[2m[36m(pid=62991)[0m     @     0x7f4e28bca5a4 at::native::copy_()
[2m[36m(pid=62991)[0m     @     0x7f4e292b54f5 at::Tensor::copy_()
[2m[36m(pid=63042)[0m     @     0x7f41445d2d91 at::TensorIterator::for_each()
[2m[36m(pid=63042)[0m     @     0x7f4144eb5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63042)[0m     @     0x7f4144ed8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63042)[0m     @     0x7f414437aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63042)[0m     @     0x7f4144378388 at::native::copy_impl()
[2m[36m(pid=63042)[0m     @     0x7f414437a5a4 at::native::copy_()
[2m[36m(pid=62948)[0m     @     0x7fa7bba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62948)[0m     @     0x7fa7bba37388 at::native::copy_impl()
[2m[36m(pid=62948)[0m     @     0x7fa7bba395a4 at::native::copy_()
[2m[36m(pid=62948)[0m     @     0x7fa7bc1244f5 at::Tensor::copy_()
[2m[36m(pid=62948)[0m     @     0x7fa7be5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62926)[0m     @     0x7ee3a2b68d91 at::TensorIterator::for_each()
[2m[36m(pid=62926)[0m     @     0x7ee3a344bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62926)[0m     @     0x7ee3a346ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62926)[0m     @     0x7ee3a2910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62926)[0m     @     0x7ee3a290e388 at::native::copy_impl()
[2m[36m(pid=62927)[0m     @     0x7effc345ad91 at::TensorIterator::for_each()
[2m[36m(pid=62927)[0m     @     0x7effc3d3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62927)[0m     @     0x7effc3d60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62927)[0m     @     0x7effc3202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62927)[0m     @     0x7effc3200388 at::native::copy_impl()
[2m[36m(pid=62927)[0m     @     0x7effc32025a4 at::native::copy_()
[2m[36m(pid=63032)[0m     @     0x7f5438f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63032)[0m     @     0x7f5438f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=63032)[0m     @     0x7f5438f27d91 at::TensorIterator::for_each()
[2m[36m(pid=63032)[0m     @     0x7f543980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63047)[0m     @     0x7f103e0cdad3 at::TensorIterator::for_each()
[2m[36m(pid=63047)[0m     @     0x7f103e0cdd91 at::TensorIterator::for_each()
[2m[36m(pid=63047)[0m     @     0x7f103e9b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63047)[0m     @     0x7f103e9d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63047)[0m     @     0x7f103de75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62929)[0m     @     0x7f09942def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=62929)[0m     @     0x7f0993a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62998)[0m     @     0x7f1b5954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62998)[0m     @     0x7f1b595528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62998)[0m     @     0x7f1b59552ad3 at::TensorIterator::for_each()
[2m[36m(pid=62930)[0m     @     0x7ef5a5e38d91 at::TensorIterator::for_each()
[2m[36m(pid=62930)[0m     @     0x7ef5a671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62930)[0m     @     0x7ef5a673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62930)[0m     @     0x7ef5a5be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62930)[0m     @     0x7ef5a5bde388 at::native::copy_impl()
[2m[36m(pid=62930)[0m     @     0x7ef5a5be05a4 at::native::copy_()
[2m[36m(pid=63012)[0m PC: @                0x0 (unknown)
[2m[36m(pid=63012)[0m *** SIGSEGV (@0x0) received by PID 63012 (TID 0x7f8728b64700) from PID 0; stack trace: ***
[2m[36m(pid=63012)[0m     @     0x7f872873d390 (unknown)
[2m[36m(pid=63012)[0m     @     0x7f582860ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63012)[0m     @     0x7f5827d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62951)[0m     @     0x7f5e57094b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62951)[0m     @     0x7f5e570b7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62951)[0m     @     0x7f5e56559a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62951)[0m     @     0x7f5e56557388 at::native::copy_impl()
[2m[36m(pid=62993)[0m     @     0x7f884463ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62993)[0m     @     0x7f884463a388 at::native::copy_impl()
[2m[36m(pid=62993)[0m     @     0x7f884463c5a4 at::native::copy_()
[2m[36m(pid=62993)[0m     @     0x7f8844d274f5 at::Tensor::copy_()
[2m[36m(pid=63009)[0m     @     0x7f58c20eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63009)[0m     @     0x7f58c20e9388 at::native::copy_impl()
[2m[36m(pid=63009)[0m     @     0x7f58c20eb5a4 at::native::copy_()
[2m[36m(pid=63009)[0m     @     0x7f58c27d64f5 at::Tensor::copy_()
[2m[36m(pid=63009)[0m     @     0x7f58c4ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62950)[0m     @     0x7ef52d78fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62950)[0m     @     0x7ef52d78d388 at::native::copy_impl()
[2m[36m(pid=62950)[0m     @     0x7ef52d78f5a4 at::native::copy_()
[2m[36m(pid=62950)[0m     @     0x7ef52de7a4f5 at::Tensor::copy_()
[2m[36m(pid=62950)[0m     @     0x7ef53034d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62999)[0m     @     0x7f8c147205a4 at::native::copy_()
[2m[36m(pid=62999)[0m     @     0x7f8c14e0b4f5 at::Tensor::copy_()
[2m[36m(pid=62999)[0m     @     0x7f8c172de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63003)[0m     @     0x7ee591765388 at::native::copy_impl()
[2m[36m(pid=63003)[0m     @     0x7ee5917675a4 at::native::copy_()
[2m[36m(pid=63003)[0m     @     0x7ee591e524f5 at::Tensor::copy_()
[2m[36m(pid=63003)[0m     @     0x7ee5943258de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63015)[0m     @     0x7f1c9a5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63015)[0m     @     0x7f1c9a5f8388 at::native::copy_impl()
[2m[36m(pid=63015)[0m     @     0x7f1c9a5fa5a4 at::native::copy_()
[2m[36m(pid=63015)[0m     @     0x7f1c9ace54f5 at::Tensor::copy_()
[2m[36m(pid=62958)[0m     @     0x7fc7810e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62958)[0m     @     0x7fc7810e1388 at::native::copy_impl()
[2m[36m(pid=62958)[0m     @     0x7fc7810e35a4 at::native::copy_()
[2m[36m(pid=62958)[0m     @     0x7fc7817ce4f5 at::Tensor::copy_()
[2m[36m(pid=62958)[0m     @     0x7fc783ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63002)[0m     @     0x7fe98af30390 (unknown)
[2m[36m(pid=63002)[0m     @     0x7fba8aed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63002)[0m     @     0x7fba8a5fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=62954)[0m     @     0x7fa08051ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62954)[0m     @     0x7fa08051c388 at::native::copy_impl()
[2m[36m(pid=62954)[0m     @     0x7fa08051e5a4 at::native::copy_()
[2m[36m(pid=62954)[0m     @     0x7fa080c094f5 at::Tensor::copy_()
[2m[36m(pid=63019)[0m     @     0x7f31452285a4 at::native::copy_()
[2m[36m(pid=63019)[0m     @     0x7f31459134f5 at::Tensor::copy_()
[2m[36m(pid=63019)[0m     @     0x7f3147de68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63019)[0m     @     0x7f31459134f5 at::Tensor::copy_()
[2m[36m(pid=62992)[0m     @     0x7f17ce5cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62992)[0m     @     0x7f17ce5cb388 at::native::copy_impl()
[2m[36m(pid=62992)[0m     @     0x7f17ce5cd5a4 at::native::copy_()
[2m[36m(pid=62992)[0m     @     0x7f17cecb84f5 at::Tensor::copy_()
[2m[36m(pid=62992)[0m     @     0x7f17d118b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63027)[0m     @     0x7f32e0b48388 at::native::copy_impl()
[2m[36m(pid=63027)[0m     @     0x7f32e0b4a5a4 at::native::copy_()
[2m[36m(pid=63027)[0m     @     0x7f32e12354f5 at::Tensor::copy_()
[2m[36m(pid=63027)[0m     @     0x7f32e37088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62989)[0m     @     0x7fc6435ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62989)[0m     @     0x7fc6435efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62989)[0m     @     0x7fc642a91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62989)[0m     @     0x7fc642a8f388 at::native::copy_impl()
[2m[36m(pid=62989)[0m     @     0x7fc642a915a4 at::native::copy_()
[2m[36m(pid=62962)[0m     @     0x7f0230011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62962)[0m     @     0x7f023000f388 at::native::copy_impl()
[2m[36m(pid=62962)[0m     @     0x7f02300115a4 at::native::copy_()
[2m[36m(pid=62962)[0m     @     0x7f02306fc4f5 at::Tensor::copy_()
[2m[36m(pid=63007)[0m     @     0x7f8fcd075a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63007)[0m     @     0x7f8fcd073388 at::native::copy_impl()
[2m[36m(pid=63007)[0m     @     0x7f8fcd0755a4 at::native::copy_()
[2m[36m(pid=63007)[0m     @     0x7f8fcd7604f5 at::Tensor::copy_()
[2m[36m(pid=63007)[0m     @     0x7f8fcfc338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63011)[0m     @     0x7fbb4cd2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63011)[0m     @     0x7fbb4c1cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63011)[0m     @     0x7fbb4c1cb388 at::native::copy_impl()
[2m[36m(pid=63011)[0m     @     0x7fbb4c1cd5a4 at::native::copy_()
[2m[36m(pid=62943)[0m     @     0x7f20f6028b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62943)[0m     @     0x7f20f604bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62943)[0m     @     0x7f20f54eda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62943)[0m     @     0x7f20f54eb388 at::native::copy_impl()
[2m[36m(pid=62943)[0m     @     0x7f20f54ed5a4 at::native::copy_()
[2m[36m(pid=62961)[0m     @     0x7fc0de6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62961)[0m     @     0x7fc0de6fd388 at::native::copy_impl()
[2m[36m(pid=62961)[0m     @     0x7fc0de6ff5a4 at::native::copy_()
[2m[36m(pid=62961)[0m     @     0x7fc0dedea4f5 at::Tensor::copy_()
[2m[36m(pid=63017)[0m     @     0x7ef4bc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63017)[0m     @     0x7ef4bc589388 at::native::copy_impl()
[2m[36m(pid=63017)[0m     @     0x7ef4bc58b5a4 at::native::copy_()
[2m[36m(pid=63017)[0m     @     0x7ef4bcc764f5 at::Tensor::copy_()
[2m[36m(pid=62940)[0m     @     0x7fa80c9b95a4 at::native::copy_()
[2m[36m(pid=62940)[0m     @     0x7fa80d0a44f5 at::Tensor::copy_()
[2m[36m(pid=63053)[0m     @     0x7f5aa15635a4 at::native::copy_()
[2m[36m(pid=63053)[0m     @     0x7f5aa1c4e4f5 at::Tensor::copy_()
[2m[36m(pid=63053)[0m     @     0x7f5aa41218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63016)[0m     @     0x7fbe376b64f5 at::Tensor::copy_()
[2m[36m(pid=63016)[0m     @     0x7fbe39b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63043)[0m     @     0x7fc3ebea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63043)[0m     @     0x7fc3ebea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=63067)[0m     @     0x7f40cee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63067)[0m     @     0x7f40cee99388 at::native::copy_impl()
[2m[36m(pid=63067)[0m     @     0x7f40cee9b5a4 at::native::copy_()
[2m[36m(pid=63004)[0m     @     0x7f3a2e1c7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63004)[0m     @     0x7f3a2d669a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63004)[0m     @     0x7f3a2d667388 at::native::copy_impl()
[2m[36m(pid=63037)[0m     @     0x7f457d33bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=63037)[0m     @     0x7f457ca667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=63037)[0m     @     0x7f457ca698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=63063)[0m     @     0x7f15efc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62959)[0m     @     0x7f8fef5d7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62959)[0m     @     0x7f8fef5d5388 at::native::copy_impl()
[2m[36m(pid=62959)[0m     @     0x7f8fef5d75a4 at::native::copy_()
[2m[36m(pid=62938)[0m     @     0x7ef9cf5a35a4 at::native::copy_()
[2m[36m(pid=62938)[0m     @     0x7ef9cfc8e4f5 at::Tensor::copy_()
[2m[36m(pid=62937)[0m     @     0x7f027c4714f5 at::Tensor::copy_()
[2m[36m(pid=62937)[0m     @     0x7f027e9448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62941)[0m     @     0x7ed907bdd4f5 at::Tensor::copy_()
[2m[36m(pid=62941)[0m     @     0x7ed90a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62941)[0m     @     0x7ed907bdd4f5 at::Tensor::copy_()
[2m[36m(pid=62941)[0m     @     0x7ed90dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62941)[0m     @     0x562e63e66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62941)[0m     @     0x562e63dc1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62941)[0m     @     0x562e63e4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62941)[0m     @     0x562e63e4da20 method_vectorcall
[2m[36m(pid=62941)[0m     @     0x562e63dc1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62941)[0m     @     0x562e63e4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62941)[0m     @     0x562e63e4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62941)[0m     @     0x562e63dc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62941)[0m     @     0x562e63e4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62941)[0m     @     0x562e63e4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62941)[0m     @     0x562e63dc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62941)[0m     @     0x562e63e4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62941)[0m     @     0x562e63e4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62941)[0m     @     0x562e63dc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62941)[0m     @     0x562e63e4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62941)[0m     @     0x562e63e4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62941)[0m     @     0x562e63dc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62936)[0m     @     0x7fc5282a85a4 at::native::copy_()
[2m[36m(pid=62936)[0m     @     0x7fc5289934f5 at::Tensor::copy_()
[2m[36m(pid=62936)[0m     @     0x7fc52ae668de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62924)[0m     @     0x7ee877e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62924)[0m     @     0x7ee877e14388 at::native::copy_impl()
[2m[36m(pid=62956)[0m     @     0x7f1b963e95a4 at::native::copy_()
[2m[36m(pid=62956)[0m     @     0x7f1b96ad44f5 at::Tensor::copy_()
[2m[36m(pid=62956)[0m     @     0x7f1b98fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63057)[0m     @     0x7f18afa0cd91 at::TensorIterator::for_each()
[2m[36m(pid=63057)[0m     @     0x7f18b02efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63057)[0m     @     0x7f18b0312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63057)[0m     @     0x7f18af7b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63057)[0m     @     0x7f18af7b2388 at::native::copy_impl()
[2m[36m(pid=63057)[0m     @     0x7f18af7b45a4 at::native::copy_()
[2m[36m(pid=62946)[0m     @     0x7ee066c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62946)[0m     @     0x7ee066c25388 at::native::copy_impl()
[2m[36m(pid=62946)[0m     @     0x7ee066c275a4 at::native::copy_()
[2m[36m(pid=62946)[0m     @     0x7ee0673124f5 at::Tensor::copy_()
[2m[36m(pid=62925)[0m     @     0x7f14cd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62925)[0m     @     0x7f14cd2f8388 at::native::copy_impl()
[2m[36m(pid=62925)[0m     @     0x7f14cd2fa5a4 at::native::copy_()
[2m[36m(pid=62925)[0m     @     0x7f14cd9e54f5 at::Tensor::copy_()
[2m[36m(pid=62939)[0m     @     0x7f8aa430b388 at::native::copy_impl()
[2m[36m(pid=62939)[0m     @     0x7f8aa430d5a4 at::native::copy_()
[2m[36m(pid=62939)[0m     @     0x7f8aa49f84f5 at::Tensor::copy_()
[2m[36m(pid=62939)[0m     @     0x7f8aa6ecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63035)[0m     @     0x7ee56b5a35a4 at::native::copy_()
[2m[36m(pid=63035)[0m     @     0x7ee56bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=63035)[0m     @     0x7ee56e1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63035)[0m     @     0x7ee56bc8e4f5 at::Tensor::copy_()
[2m[36m(pid=62985)[0m     @     0x7fb01f8b95a4 at::native::copy_()
[2m[36m(pid=62985)[0m     @     0x7fb01ffa44f5 at::Tensor::copy_()
[2m[36m(pid=62985)[0m     @     0x7fb0224778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62933)[0m     @     0x7f23ea73a388 at::native::copy_impl()
[2m[36m(pid=62933)[0m     @     0x7f23ea73c5a4 at::native::copy_()
[2m[36m(pid=62933)[0m     @     0x7f23eae274f5 at::Tensor::copy_()
[2m[36m(pid=62933)[0m     @     0x7f23ed2fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62935)[0m     @     0x7f4d2e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62935)[0m     @     0x7f4d2e6fd388 at::native::copy_impl()
[2m[36m(pid=62935)[0m     @     0x7f4d2e6ff5a4 at::native::copy_()
[2m[36m(pid=62935)[0m     @     0x7f4d2edea4f5 at::Tensor::copy_()
[2m[36m(pid=62935)[0m     @     0x7f4d312bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62945)[0m     @     0x7fa7bc84d5a4 at::native::copy_()
[2m[36m(pid=62945)[0m     @     0x7fa7bcf384f5 at::Tensor::copy_()
[2m[36m(pid=62945)[0m     @     0x7fa7bf40b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63060)[0m     @     0x7f6af6af55a4 at::native::copy_()
[2m[36m(pid=63060)[0m     @     0x7f6af71e04f5 at::Tensor::copy_()
[2m[36m(pid=63060)[0m     @     0x7f6af96b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62953)[0m     @     0x7f34c858b5a4 at::native::copy_()
[2m[36m(pid=62953)[0m     @     0x7f34c8c764f5 at::Tensor::copy_()
[2m[36m(pid=62953)[0m     @     0x7f34cb1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62953)[0m     @     0x7f34c8c764f5 at::Tensor::copy_()
[2m[36m(pid=62947)[0m     @     0x7f9e588355a4 at::native::copy_()
[2m[36m(pid=62947)[0m     @     0x7f9e58f204f5 at::Tensor::copy_()
[2m[36m(pid=62947)[0m     @     0x7f9e5b3f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63006)[0m     @     0x7f373658d4f5 at::Tensor::copy_()
[2m[36m(pid=63006)[0m     @     0x7f3738a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63006)[0m     @     0x7f373658d4f5 at::Tensor::copy_()
[2m[36m(pid=63006)[0m     @     0x7f373c63879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63006)[0m     @     0x55ee30e85fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63006)[0m     @     0x55ee30de0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63006)[0m     @     0x55ee30e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63006)[0m     @     0x55ee30e6ca20 method_vectorcall
[2m[36m(pid=63006)[0m     @     0x55ee30de0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63006)[0m     @     0x55ee30e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63006)[0m     @     0x55ee30e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63006)[0m     @     0x55ee30de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63006)[0m     @     0x55ee30e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63006)[0m     @     0x55ee30e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63006)[0m     @     0x55ee30de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63006)[0m     @     0x55ee30e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63006)[0m     @     0x55ee30e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63006)[0m     @     0x55ee30de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63006)[0m     @     0x55ee30e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63006)[0m     @     0x55ee30e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63006)[0m     @     0x55ee30de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62931)[0m     @     0x7f5c766ff5a4 at::native::copy_()
[2m[36m(pid=62931)[0m     @     0x7f5c76dea4f5 at::Tensor::copy_()
[2m[36m(pid=62931)[0m     @     0x7f5c792bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62934)[0m     @     0x7f49a4d274f5 at::Tensor::copy_()
[2m[36m(pid=62934)[0m     @     0x7f49a71fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63010)[0m     @     0x7fb3fbdcb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63010)[0m     @     0x7fb3f98f84f5 at::Tensor::copy_()
[2m[36m(pid=63010)[0m     @     0x7fb3ff9a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63010)[0m     @     0x564f3ed13fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63010)[0m     @     0x564f3ec6eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63010)[0m     @     0x564f3ecf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=63010)[0m     @     0x564f3ecfaa20 method_vectorcall
[2m[36m(pid=62991)[0m     @     0x7f4e2b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62991)[0m     @     0x7f4e292b54f5 at::Tensor::copy_()
[2m[36m(pid=62991)[0m     @     0x7f4e2f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62991)[0m     @     0x5580850e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62991)[0m     @     0x558085044b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62991)[0m     @     0x5580850cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62991)[0m     @     0x5580850d0a20 method_vectorcall
[2m[36m(pid=62991)[0m     @     0x558085044bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62991)[0m     @     0x5580850cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62991)[0m     @     0x5580850d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62991)[0m     @     0x558085045689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62991)[0m     @     0x5580850cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62991)[0m     @     0x5580850d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62991)[0m     @     0x558085045689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62991)[0m     @     0x5580850cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62991)[0m     @     0x5580850d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63042)[0m     @     0x7f4144a654f5 at::Tensor::copy_()
[2m[36m(pid=63042)[0m     @     0x7f4146f388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62948)[0m     @     0x7fa7bc1244f5 at::Tensor::copy_()
[2m[36m(pid=62948)[0m     @     0x7fa7c21cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62948)[0m     @     0x55fc4df21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62948)[0m     @     0x55fc4de7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62948)[0m     @     0x55fc4df07baf _PyEval_EvalCodeWithName
[2m[36m(pid=62948)[0m     @     0x55fc4df08a20 method_vectorcall
[2m[36m(pid=62948)[0m     @     0x55fc4de7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62948)[0m     @     0x55fc4df07baf _PyEval_EvalCodeWithName
[2m[36m(pid=62948)[0m     @     0x55fc4df08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62948)[0m     @     0x55fc4de7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62948)[0m     @     0x55fc4df07baf _PyEval_EvalCodeWithName
[2m[36m(pid=62948)[0m     @     0x55fc4df08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62948)[0m     @     0x55fc4de7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62948)[0m     @     0x55fc4df07baf _PyEval_EvalCodeWithName
[2m[36m(pid=62948)[0m     @     0x55fc4df08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62948)[0m     @     0x55fc4de7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62948)[0m     @     0x55fc4df07baf _PyEval_EvalCodeWithName
[2m[36m(pid=62948)[0m     @     0x55fc4df08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62948)[0m     @     0x55fc4de7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62926)[0m     @     0x7ee3a29105a4 at::native::copy_()
[2m[36m(pid=62926)[0m     @     0x7ee3a2ffb4f5 at::Tensor::copy_()
[2m[36m(pid=62926)[0m     @     0x7ee3a54ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62927)[0m     @     0x7effc38ed4f5 at::Tensor::copy_()
[2m[36m(pid=62927)[0m     @     0x7effc5dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63032)[0m     @     0x7f543982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63032)[0m     @     0x7f5438ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63032)[0m     @     0x7f5438ccd388 at::native::copy_impl()
[2m[36m(pid=63047)[0m     @     0x7f103de73388 at::native::copy_impl()
[2m[36m(pid=63047)[0m     @     0x7f103de755a4 at::native::copy_()
[2m[36m(pid=62929)[0m     @     0x7f0993a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62998)[0m     @     0x7f1b59552d91 at::TensorIterator::for_each()
[2m[36m(pid=62998)[0m     @     0x7f1b59e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62998)[0m     @     0x7f1b59e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62998)[0m     @     0x7f1b592faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62930)[0m     @     0x7ef5a62cb4f5 at::Tensor::copy_()
[2m[36m(pid=62930)[0m     @     0x7ef5a879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63012)[0m     @     0x7f5827d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62951)[0m     @     0x7f5e565595a4 at::native::copy_()
[2m[36m(pid=62993)[0m     @     0x7f88471fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62993)[0m     @     0x7f8844d274f5 at::Tensor::copy_()
[2m[36m(pid=62993)[0m     @     0x7f884add279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62993)[0m     @     0x555c5f2f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62993)[0m     @     0x555c5f24cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62993)[0m     @     0x555c5f2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62993)[0m     @     0x555c5f2d8a20 method_vectorcall
[2m[36m(pid=62993)[0m     @     0x555c5f24cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63009)[0m     @     0x7f58c27d64f5 at::Tensor::copy_()
[2m[36m(pid=63009)[0m     @     0x7f58c847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63009)[0m     @     0x5634bbb59fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63009)[0m     @     0x5634bbab4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63009)[0m     @     0x5634bbb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63009)[0m     @     0x5634bbb40a20 method_vectorcall
[2m[36m(pid=63009)[0m     @     0x5634bbab4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63009)[0m     @     0x5634bbb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63009)[0m     @     0x5634bbb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63009)[0m     @     0x5634bbab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63009)[0m     @     0x5634bbb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63009)[0m     @     0x5634bbb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63009)[0m     @     0x5634bbab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63009)[0m     @     0x5634bbb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63009)[0m     @     0x5634bbb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63009)[0m     @     0x5634bbab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63009)[0m     @     0x5634bbb3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63009)[0m     @     0x5634bbb40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63009)[0m     @     0x5634bbab5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62950)[0m     @     0x7ef52de7a4f5 at::Tensor::copy_()
[2m[36m(pid=62950)[0m     @     0x7ef533f2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62950)[0m     @     0x55d915b30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62950)[0m     @     0x55d915a8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62950)[0m     @     0x55d915b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=62950)[0m     @     0x55d915b17a20 method_vectorcall
[2m[36m(pid=62950)[0m     @     0x55d915a8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62950)[0m     @     0x55d915b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=62950)[0m     @     0x55d915b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62950)[0m     @     0x55d915a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62950)[0m     @     0x55d915b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=62950)[0m     @     0x55d915b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62950)[0m     @     0x55d915a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62950)[0m     @     0x55d915b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=62950)[0m     @     0x55d915b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62950)[0m     @     0x55d915a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62950)[0m     @     0x55d915b16baf _PyEval_EvalCodeWithName
[2m[36m(pid=62950)[0m     @     0x55d915b17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62950)[0m     @     0x55d915a8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62999)[0m     @     0x7f8c14e0b4f5 at::Tensor::copy_()
[2m[36m(pid=62999)[0m     @     0x7f8c1aeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62999)[0m     @     0x55a69c0f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62999)[0m     @     0x55a69c04db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62999)[0m     @     0x55a69c0d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=62999)[0m     @     0x55a69c0d9a20 method_vectorcall
[2m[36m(pid=62999)[0m     @     0x55a69c04dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62999)[0m     @     0x55a69c0d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=62999)[0m     @     0x55a69c0d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62999)[0m     @     0x55a69c04e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62999)[0m     @     0x55a69c0d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=62999)[0m     @     0x55a69c0d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62999)[0m     @     0x55a69c04e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62999)[0m     @     0x55a69c0d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=62999)[0m     @     0x55a69c0d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62999)[0m     @     0x55a69c04e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62999)[0m     @     0x55a69c0d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=62999)[0m     @     0x55a69c0d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62999)[0m     @     0x55a69c04e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63003)[0m     @     0x7ee591e524f5 at::Tensor::copy_()
[2m[36m(pid=63003)[0m     @     0x7ee597efd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63003)[0m     @     0x55d9f3820fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63003)[0m     @     0x55d9f377bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63003)[0m     @     0x55d9f3806baf _PyEval_EvalCodeWithName
[2m[36m(pid=63003)[0m     @     0x55d9f3807a20 method_vectorcall
[2m[36m(pid=63003)[0m     @     0x55d9f377bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63003)[0m     @     0x55d9f3806baf _PyEval_EvalCodeWithName
[2m[36m(pid=63003)[0m     @     0x55d9f3807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63003)[0m     @     0x55d9f377c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63003)[0m     @     0x55d9f3806baf _PyEval_EvalCodeWithName
[2m[36m(pid=63003)[0m     @     0x55d9f3807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63003)[0m     @     0x55d9f377c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63003)[0m     @     0x55d9f3806baf _PyEval_EvalCodeWithName
[2m[36m(pid=63003)[0m     @     0x55d9f3807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63003)[0m     @     0x55d9f377c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63003)[0m     @     0x55d9f3806baf _PyEval_EvalCodeWithName
[2m[36m(pid=63003)[0m     @     0x55d9f3807643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63003)[0m     @     0x55d9f377c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63015)[0m     @     0x7f1c9d1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63015)[0m     @     0x7f1c9ace54f5 at::Tensor::copy_()
[2m[36m(pid=63015)[0m     @     0x7f1ca0d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63015)[0m     @     0x562b2b5c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63015)[0m     @     0x562b2b51bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63015)[0m     @     0x562b2b5a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63015)[0m     @     0x562b2b5a7a20 method_vectorcall
[2m[36m(pid=63015)[0m     @     0x562b2b51bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63015)[0m     @     0x562b2b5a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63015)[0m     @     0x562b2b5a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63015)[0m     @     0x562b2b51c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63015)[0m     @     0x562b2b5a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63015)[0m     @     0x562b2b5a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63015)[0m     @     0x562b2b51c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63015)[0m     @     0x562b2b5a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63015)[0m     @     0x562b2b5a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63015)[0m     @     0x562b2b51c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63015)[0m     @     0x562b2b5a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=63015)[0m     @     0x562b2b5a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63015)[0m     @     0x562b2b51c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62958)[0m     @     0x7fc7817ce4f5 at::Tensor::copy_()
[2m[36m(pid=62958)[0m     @     0x7fc78787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62958)[0m     @     0x56492ffb6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62958)[0m     @     0x56492ff11b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62958)[0m     @     0x56492ff9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62958)[0m     @     0x56492ff9da20 method_vectorcall
[2m[36m(pid=62958)[0m     @     0x56492ff11bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62958)[0m     @     0x56492ff9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62958)[0m     @     0x56492ff9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62958)[0m     @     0x56492ff12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62958)[0m     @     0x56492ff9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62958)[0m     @     0x56492ff9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62958)[0m     @     0x56492ff12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62958)[0m     @     0x56492ff9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62958)[0m     @     0x56492ff9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62958)[0m     @     0x56492ff12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62958)[0m     @     0x56492ff9cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62958)[0m     @     0x56492ff9d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62958)[0m     @     0x56492ff12689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x7fba8a6018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=62954)[0m     @     0x7fa0830dc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62954)[0m     @     0x7fa080c094f5 at::Tensor::copy_()
[2m[36m(pid=62954)[0m     @     0x7fa086cb479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62954)[0m     @     0x55753d483fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62954)[0m     @     0x55753d3deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62954)[0m     @     0x55753d469baf _PyEval_EvalCodeWithName
[2m[36m(pid=62954)[0m     @     0x55753d46aa20 method_vectorcall
[2m[36m(pid=62954)[0m     @     0x55753d3debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62954)[0m     @     0x55753d469baf _PyEval_EvalCodeWithName
[2m[36m(pid=62954)[0m     @     0x55753d46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62954)[0m     @     0x55753d3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62954)[0m     @     0x55753d469baf _PyEval_EvalCodeWithName
[2m[36m(pid=62954)[0m     @     0x55753d46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62954)[0m     @     0x55753d3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62954)[0m     @     0x55753d469baf _PyEval_EvalCodeWithName
[2m[36m(pid=62954)[0m     @     0x55753d46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62954)[0m     @     0x55753d3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62954)[0m     @     0x55753d469baf _PyEval_EvalCodeWithName
[2m[36m(pid=62954)[0m     @     0x55753d46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62954)[0m     @     0x55753d3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63019)[0m     @     0x7f314b9be79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63019)[0m     @     0x55fe58a83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63019)[0m     @     0x55fe589deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63019)[0m     @     0x55fe58a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=63019)[0m     @     0x55fe58a6aa20 method_vectorcall
[2m[36m(pid=63019)[0m     @     0x55fe589debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63019)[0m     @     0x55fe58a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=63019)[0m     @     0x55fe58a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63019)[0m     @     0x55fe589df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63019)[0m     @     0x55fe58a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=63019)[0m     @     0x55fe58a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63019)[0m     @     0x55fe589df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63019)[0m     @     0x55fe58a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=63019)[0m     @     0x55fe58a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63019)[0m     @     0x55fe589df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63019)[0m     @     0x55fe58a69baf _PyEval_EvalCodeWithName
[2m[36m(pid=63019)[0m     @     0x55fe58a6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63019)[0m     @     0x55fe589df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62992)[0m     @     0x7f17cecb84f5 at::Tensor::copy_()
[2m[36m(pid=62992)[0m     @     0x7f17d4d6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62992)[0m     @     0x55cfc19fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62992)[0m     @     0x55cfc1956b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62992)[0m     @     0x55cfc19e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62992)[0m     @     0x55cfc19e2a20 method_vectorcall
[2m[36m(pid=62992)[0m     @     0x55cfc1956bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62992)[0m     @     0x55cfc19e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62992)[0m     @     0x55cfc19e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62992)[0m     @     0x55cfc1957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62992)[0m     @     0x55cfc19e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62992)[0m     @     0x55cfc19e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62992)[0m     @     0x55cfc1957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62992)[0m     @     0x55cfc19e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62992)[0m     @     0x55cfc19e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62992)[0m     @     0x55cfc1957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62992)[0m     @     0x55cfc19e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62992)[0m     @     0x55cfc19e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62992)[0m     @     0x55cfc1957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63027)[0m     @     0x7f32e12354f5 at::Tensor::copy_()
[2m[36m(pid=63027)[0m     @     0x7f32e72e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63027)[0m     @     0x55c302bcbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63027)[0m     @     0x55c302b26b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63027)[0m     @     0x55c302bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63027)[0m     @     0x55c302bb2a20 method_vectorcall
[2m[36m(pid=63027)[0m     @     0x55c302b26bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63027)[0m     @     0x55c302bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63027)[0m     @     0x55c302bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63027)[0m     @     0x55c302b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63027)[0m     @     0x55c302bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63027)[0m     @     0x55c302bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63027)[0m     @     0x55c302b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63027)[0m     @     0x55c302bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63027)[0m     @     0x55c302bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63027)[0m     @     0x55c302b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63027)[0m     @     0x55c302bb1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63027)[0m     @     0x55c302bb2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63027)[0m     @     0x55c302b27689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62989)[0m     @     0x7fc64317c4f5 at::Tensor::copy_()
[2m[36m(pid=62989)[0m     @     0x7fc64564f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62989)[0m     @     0x7fc64317c4f5 at::Tensor::copy_()
[2m[36m(pid=62989)[0m     @     0x7fc64922779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62989)[0m     @     0x55f3028a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62989)[0m     @     0x55f302801b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62989)[0m     @     0x55f30288cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62989)[0m     @     0x55f30288da20 method_vectorcall
[2m[36m(pid=62989)[0m     @     0x55f302801bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62989)[0m     @     0x55f30288cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62989)[0m     @     0x55f30288d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62989)[0m     @     0x55f302802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62989)[0m     @     0x55f30288cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62962)[0m     @     0x7f0232bcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62962)[0m     @     0x7f02306fc4f5 at::Tensor::copy_()
[2m[36m(pid=62962)[0m     @     0x7f02367a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62962)[0m     @     0x5647c13befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62962)[0m     @     0x5647c1319b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62962)[0m     @     0x5647c13a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=62962)[0m     @     0x5647c13a5a20 method_vectorcall
[2m[36m(pid=62962)[0m     @     0x5647c1319bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62962)[0m     @     0x5647c13a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=62962)[0m     @     0x5647c13a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62962)[0m     @     0x5647c131a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62962)[0m     @     0x5647c13a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=62962)[0m     @     0x5647c13a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62962)[0m     @     0x5647c131a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62962)[0m     @     0x5647c13a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=62962)[0m     @     0x5647c13a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62962)[0m     @     0x5647c131a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62962)[0m     @     0x5647c13a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=62962)[0m     @     0x5647c13a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62962)[0m     @     0x5647c131a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63007)[0m     @     0x7f8fcd7604f5 at::Tensor::copy_()
[2m[36m(pid=63007)[0m     @     0x7f8fd380b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63007)[0m     @     0x5648c8833fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63007)[0m     @     0x5648c878eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63007)[0m     @     0x5648c8819baf _PyEval_EvalCodeWithName
[2m[36m(pid=63007)[0m     @     0x5648c881aa20 method_vectorcall
[2m[36m(pid=63007)[0m     @     0x5648c878ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63007)[0m     @     0x5648c8819baf _PyEval_EvalCodeWithName
[2m[36m(pid=63007)[0m     @     0x5648c881a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63007)[0m     @     0x5648c878f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63007)[0m     @     0x5648c8819baf _PyEval_EvalCodeWithName
[2m[36m(pid=63007)[0m     @     0x5648c881a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63007)[0m     @     0x5648c878f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63007)[0m     @     0x5648c8819baf _PyEval_EvalCodeWithName
[2m[36m(pid=63007)[0m     @     0x5648c881a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63007)[0m     @     0x5648c878f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63007)[0m     @     0x5648c8819baf _PyEval_EvalCodeWithName
[2m[36m(pid=63007)[0m     @     0x5648c881a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63007)[0m     @     0x5648c878f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63011)[0m     @     0x7fbb4c8b84f5 at::Tensor::copy_()
[2m[36m(pid=63011)[0m     @     0x7fbb4ed8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63011)[0m     @     0x7fbb4c8b84f5 at::Tensor::copy_()
[2m[36m(pid=63011)[0m     @     0x7fbb5296379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63011)[0m     @     0x56221d39dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63011)[0m     @     0x56221d2f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63011)[0m     @     0x56221d383baf _PyEval_EvalCodeWithName
[2m[36m(pid=63011)[0m     @     0x56221d384a20 method_vectorcall
[2m[36m(pid=63011)[0m     @     0x56221d2f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63011)[0m     @     0x56221d383baf _PyEval_EvalCodeWithName
[2m[36m(pid=63011)[0m     @     0x56221d384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63011)[0m     @     0x56221d2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63011)[0m     @     0x56221d383baf _PyEval_EvalCodeWithName
[2m[36m(pid=63011)[0m     @     0x56221d384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63011)[0m     @     0x56221d2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63011)[0m     @     0x56221d383baf _PyEval_EvalCodeWithName
[2m[36m(pid=63011)[0m     @     0x56221d384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63011)[0m     @     0x56221d2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63011)[0m     @     0x56221d383baf _PyEval_EvalCodeWithName
[2m[36m(pid=63011)[0m     @     0x56221d384643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63011)[0m     @     0x56221d2f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62943)[0m     @     0x7f20f5bd84f5 at::Tensor::copy_()
[2m[36m(pid=62943)[0m     @     0x7f20f80ab8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62943)[0m     @     0x7f20f5bd84f5 at::Tensor::copy_()
[2m[36m(pid=62943)[0m     @     0x7f20fbc8379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62943)[0m     @     0x560a26771fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62943)[0m     @     0x560a266ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62943)[0m     @     0x560a26757baf _PyEval_EvalCodeWithName
[2m[36m(pid=62943)[0m     @     0x560a26758a20 method_vectorcall
[2m[36m(pid=62961)[0m     @     0x7fc0e12bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62961)[0m     @     0x7fc0dedea4f5 at::Tensor::copy_()
[2m[36m(pid=62961)[0m     @     0x7fc0e4e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62961)[0m     @     0x56361ccabfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62961)[0m     @     0x56361cc06b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62961)[0m     @     0x56361cc91baf _PyEval_EvalCodeWithName
[2m[36m(pid=62961)[0m     @     0x56361cc92a20 method_vectorcall
[2m[36m(pid=62961)[0m     @     0x56361cc06bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62961)[0m     @     0x56361cc91baf _PyEval_EvalCodeWithName
[2m[36m(pid=62961)[0m     @     0x56361cc92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62961)[0m     @     0x56361cc07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62961)[0m     @     0x56361cc91baf _PyEval_EvalCodeWithName
[2m[36m(pid=62961)[0m     @     0x56361cc92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62961)[0m     @     0x56361cc07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62961)[0m     @     0x56361cc91baf _PyEval_EvalCodeWithName
[2m[36m(pid=62961)[0m     @     0x56361cc92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62961)[0m     @     0x56361cc07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62961)[0m     @     0x56361cc91baf _PyEval_EvalCodeWithName
[2m[36m(pid=62961)[0m     @     0x56361cc92643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62961)[0m     @     0x56361cc07689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63017)[0m     @     0x7ef4bf1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63017)[0m     @     0x7ef4bcc764f5 at::Tensor::copy_()
[2m[36m(pid=63017)[0m     @     0x7ef4c2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63017)[0m     @     0x55b1cacc6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63017)[0m     @     0x55b1cac21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63017)[0m     @     0x55b1cacacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63017)[0m     @     0x55b1cacada20 method_vectorcall
[2m[36m(pid=63017)[0m     @     0x55b1cac21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63017)[0m     @     0x55b1cacacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63017)[0m     @     0x55b1cacad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63017)[0m     @     0x55b1cac22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63017)[0m     @     0x55b1cacacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63017)[0m     @     0x55b1cacad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63017)[0m     @     0x55b1cac22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63017)[0m     @     0x55b1cacacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63017)[0m     @     0x55b1cacad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63017)[0m     @     0x55b1cac22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63017)[0m     @     0x55b1cacacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63017)[0m     @     0x55b1cacad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63017)[0m     @     0x55b1cac22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x7fa80f5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62940)[0m     @     0x7fa80d0a44f5 at::Tensor::copy_()
[2m[36m(pid=63053)[0m     @     0x7f5aa1c4e4f5 at::Tensor::copy_()
[2m[36m(pid=63053)[0m     @     0x7f5aa7cf979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63053)[0m     @     0x55f05d682fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63053)[0m     @     0x55f05d5ddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63053)[0m     @     0x55f05d668baf _PyEval_EvalCodeWithName
[2m[36m(pid=63053)[0m     @     0x55f05d669a20 method_vectorcall
[2m[36m(pid=63053)[0m     @     0x55f05d5ddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63053)[0m     @     0x55f05d668baf _PyEval_EvalCodeWithName
[2m[36m(pid=63053)[0m     @     0x55f05d669643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63053)[0m     @     0x55f05d5de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63053)[0m     @     0x55f05d668baf _PyEval_EvalCodeWithName
[2m[36m(pid=63053)[0m     @     0x55f05d669643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63053)[0m     @     0x55f05d5de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63053)[0m     @     0x55f05d668baf _PyEval_EvalCodeWithName
[2m[36m(pid=63053)[0m     @     0x55f05d669643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63053)[0m     @     0x55f05d5de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63053)[0m     @     0x55f05d668baf _PyEval_EvalCodeWithName
[2m[36m(pid=63053)[0m     @     0x55f05d669643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63053)[0m     @     0x55f05d5de689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63016)[0m     @     0x7fbe376b64f5 at::Tensor::copy_()
[2m[36m(pid=63016)[0m     @     0x7fbe3d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63016)[0m     @     0x55611a8b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63016)[0m     @     0x55611a80eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63016)[0m     @     0x55611a899baf _PyEval_EvalCodeWithName
[2m[36m(pid=63016)[0m     @     0x55611a89aa20 method_vectorcall
[2m[36m(pid=63016)[0m     @     0x55611a80ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63016)[0m     @     0x55611a899baf _PyEval_EvalCodeWithName
[2m[36m(pid=63016)[0m     @     0x55611a89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63016)[0m     @     0x55611a80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63016)[0m     @     0x55611a899baf _PyEval_EvalCodeWithName
[2m[36m(pid=63016)[0m     @     0x55611a89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63016)[0m     @     0x55611a80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63016)[0m     @     0x55611a899baf _PyEval_EvalCodeWithName
[2m[36m(pid=63016)[0m     @     0x55611a89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63016)[0m     @     0x55611a80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63016)[0m     @     0x55611a899baf _PyEval_EvalCodeWithName
[2m[36m(pid=63016)[0m     @     0x55611a89a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63016)[0m     @     0x55611a80f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63043)[0m     @     0x7fc3ebea2d91 at::TensorIterator::for_each()
[2m[36m(pid=63043)[0m     @     0x7fc3ec785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63043)[0m     @     0x7fc3ec7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63067)[0m     @     0x7f40cf5864f5 at::Tensor::copy_()
[2m[36m(pid=63067)[0m     @     0x7f40d1a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63067)[0m     @     0x7f40cf5864f5 at::Tensor::copy_()
[2m[36m(pid=63004)[0m     @     0x7f3a2d6695a4 at::native::copy_()
[2m[36m(pid=63004)[0m     @     0x7f3a2dd544f5 at::Tensor::copy_()
[2m[36m(pid=63037)[0m     @     0x7f457ca69ad3 at::TensorIterator::for_each()
[2m[36m(pid=63037)[0m     @     0x7f457ca69d91 at::TensorIterator::for_each()
[2m[36m(pid=63037)[0m     @     0x7f457d34cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63037)[0m     @     0x7f457d36fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63063)[0m     @     0x7f15efc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=62959)[0m     @     0x7f8fefcc24f5 at::Tensor::copy_()
[2m[36m(pid=62959)[0m     @     0x7f8ff21958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62959)[0m     @     0x7f8fefcc24f5 at::Tensor::copy_()
[2m[36m(pid=62959)[0m     @     0x7f8ff5d6d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62959)[0m     @     0x55c451201fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62959)[0m     @     0x55c45115cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62959)[0m     @     0x55c4511e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62959)[0m     @     0x55c4511e8a20 method_vectorcall
[2m[36m(pid=62959)[0m     @     0x55c45115cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62938)[0m     @     0x7ef9d21618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62938)[0m     @     0x7ef9cfc8e4f5 at::Tensor::copy_()
[2m[36m(pid=62938)[0m     @     0x7ef9d5d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62938)[0m     @     0x563870ebffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62938)[0m     @     0x563870e1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62938)[0m     @     0x563870ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=62938)[0m     @     0x563870ea6a20 method_vectorcall
[2m[36m(pid=62938)[0m     @     0x563870e1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62938)[0m     @     0x563870ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=62938)[0m     @     0x563870ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62938)[0m     @     0x563870e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62938)[0m     @     0x563870ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=62938)[0m     @     0x563870ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62938)[0m     @     0x563870e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62938)[0m     @     0x563870ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=62938)[0m     @     0x563870ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62938)[0m     @     0x563870e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62938)[0m     @     0x563870ea5baf _PyEval_EvalCodeWithName
[2m[36m(pid=62938)[0m     @     0x563870ea6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62938)[0m     @     0x563870e1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62937)[0m     @     0x7f027c4714f5 at::Tensor::copy_()
[2m[36m(pid=62937)[0m     @     0x7f028251c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62937)[0m     @     0x560179de4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62937)[0m     @     0x560179d3fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62937)[0m     @     0x560179dcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62937)[0m     @     0x560179dcba20 method_vectorcall
[2m[36m(pid=62937)[0m     @     0x560179d3fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62937)[0m     @     0x560179dcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62937)[0m     @     0x560179dcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62937)[0m     @     0x560179d40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62937)[0m     @     0x560179dcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62937)[0m     @     0x560179dcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62937)[0m     @     0x560179d40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62937)[0m     @     0x560179dcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62937)[0m     @     0x560179dcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62937)[0m     @     0x560179d40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62937)[0m     @     0x560179dcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62937)[0m     @     0x560179dcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62937)[0m     @     0x560179d40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62936)[0m     @     0x7fc5289934f5 at::Tensor::copy_()
[2m[36m(pid=62936)[0m     @     0x7fc52ea3e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62936)[0m     @     0x55cd6fe4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62936)[0m     @     0x55cd6fdaab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62936)[0m     @     0x55cd6fe35baf _PyEval_EvalCodeWithName
[2m[36m(pid=62936)[0m     @     0x55cd6fe36a20 method_vectorcall
[2m[36m(pid=62936)[0m     @     0x55cd6fdaabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62936)[0m     @     0x55cd6fe35baf _PyEval_EvalCodeWithName
[2m[36m(pid=62936)[0m     @     0x55cd6fe36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62936)[0m     @     0x55cd6fdab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62936)[0m     @     0x55cd6fe35baf _PyEval_EvalCodeWithName
[2m[36m(pid=62936)[0m     @     0x55cd6fe36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62936)[0m     @     0x55cd6fdab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62936)[0m     @     0x55cd6fe35baf _PyEval_EvalCodeWithName
[2m[36m(pid=62936)[0m     @     0x55cd6fe36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62936)[0m     @     0x55cd6fdab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62936)[0m     @     0x55cd6fe35baf _PyEval_EvalCodeWithName
[2m[36m(pid=62936)[0m     @     0x55cd6fe36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62936)[0m     @     0x55cd6fdab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62924)[0m     @     0x7ee877e165a4 at::native::copy_()
[2m[36m(pid=62924)[0m     @     0x7ee8785014f5 at::Tensor::copy_()
[2m[36m(pid=62924)[0m     @     0x7ee87a9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62956)[0m     @     0x7f1b96ad44f5 at::Tensor::copy_()
[2m[36m(pid=62956)[0m     @     0x7f1b9cb7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62956)[0m     @     0x564d789dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62956)[0m     @     0x564d78937b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62956)[0m     @     0x564d789c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=62956)[0m     @     0x564d789c3a20 method_vectorcall
[2m[36m(pid=62956)[0m     @     0x564d78937bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62956)[0m     @     0x564d789c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=62956)[0m     @     0x564d789c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62956)[0m     @     0x564d78938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62956)[0m     @     0x564d789c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=62956)[0m     @     0x564d789c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62956)[0m     @     0x564d78938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62956)[0m     @     0x564d789c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=62956)[0m     @     0x564d789c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62956)[0m     @     0x564d78938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62956)[0m     @     0x564d789c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=62956)[0m     @     0x564d789c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62956)[0m     @     0x564d78938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63001)[0m     @     0x7f07e1a39ad3 at::TensorIterator::for_each()
[2m[36m(pid=63001)[0m     @     0x7f07e1a39d91 at::TensorIterator::for_each()
[2m[36m(pid=63001)[0m     @     0x7f07e231cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63001)[0m     @     0x7f07e233fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63057)[0m     @     0x7f18afe9f4f5 at::Tensor::copy_()
[2m[36m(pid=63057)[0m     @     0x7f18b23728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62946)[0m     @     0x7ee0697e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62946)[0m     @     0x7ee0673124f5 at::Tensor::copy_()
[2m[36m(pid=62946)[0m     @     0x7ee06d3bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62946)[0m     @     0x559cb8a64fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62946)[0m     @     0x559cb89bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62946)[0m     @     0x559cb8a4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=62946)[0m     @     0x559cb8a4ba20 method_vectorcall
[2m[36m(pid=62925)[0m     @     0x7f14cfeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62925)[0m     @     0x7f14cd9e54f5 at::Tensor::copy_()
[2m[36m(pid=62925)[0m     @     0x7f14d3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62925)[0m     @     0x56292c7e6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62925)[0m     @     0x56292c741b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62925)[0m     @     0x56292c7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62925)[0m     @     0x56292c7cda20 method_vectorcall
[2m[36m(pid=62925)[0m     @     0x56292c741bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62925)[0m     @     0x56292c7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62925)[0m     @     0x56292c7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62925)[0m     @     0x56292c742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62925)[0m     @     0x56292c7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62925)[0m     @     0x56292c7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62925)[0m     @     0x56292c742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62925)[0m     @     0x56292c7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62925)[0m     @     0x56292c7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62925)[0m     @     0x56292c742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62925)[0m     @     0x56292c7ccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62925)[0m     @     0x56292c7cd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62925)[0m     @     0x56292c742689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62939)[0m     @     0x7f8aa49f84f5 at::Tensor::copy_()
[2m[36m(pid=62939)[0m     @     0x7f8aaaaa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62939)[0m     @     0x562cff4e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62939)[0m     @     0x562cff442b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62939)[0m     @     0x562cff4cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62939)[0m     @     0x562cff4cea20 method_vectorcall
[2m[36m(pid=62939)[0m     @     0x562cff442bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62939)[0m     @     0x562cff4cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62939)[0m     @     0x562cff4ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62939)[0m     @     0x562cff443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62939)[0m     @     0x562cff4cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62939)[0m     @     0x562cff4ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62939)[0m     @     0x562cff443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62939)[0m     @     0x562cff4cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62939)[0m     @     0x562cff4ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62939)[0m     @     0x562cff443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62939)[0m     @     0x562cff4cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62939)[0m     @     0x562cff4ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62939)[0m     @     0x562cff443689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63035)[0m     @     0x7ee571d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63035)[0m     @     0x5576fa0d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63035)[0m     @     0x5576fa033b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63035)[0m     @     0x5576fa0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63035)[0m     @     0x5576fa0bfa20 method_vectorcall
[2m[36m(pid=63035)[0m     @     0x5576fa033bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63035)[0m     @     0x5576fa0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63035)[0m     @     0x5576fa0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63035)[0m     @     0x5576fa034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63035)[0m     @     0x5576fa0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63035)[0m     @     0x5576fa0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63035)[0m     @     0x5576fa034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63035)[0m     @     0x5576fa0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63035)[0m     @     0x5576fa0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63035)[0m     @     0x5576fa034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63035)[0m     @     0x5576fa0bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63035)[0m     @     0x5576fa0bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63035)[0m     @     0x5576fa034689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62985)[0m     @     0x7fb01ffa44f5 at::Tensor::copy_()
[2m[36m(pid=62985)[0m     @     0x7fb02604f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62985)[0m     @     0x5650a1e1dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62985)[0m     @     0x5650a1d78b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62985)[0m     @     0x5650a1e03baf _PyEval_EvalCodeWithName
[2m[36m(pid=62985)[0m     @     0x5650a1e04a20 method_vectorcall
[2m[36m(pid=62985)[0m     @     0x5650a1d78bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62985)[0m     @     0x5650a1e03baf _PyEval_EvalCodeWithName
[2m[36m(pid=62985)[0m     @     0x5650a1e04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62985)[0m     @     0x5650a1d79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62985)[0m     @     0x5650a1e03baf _PyEval_EvalCodeWithName
[2m[36m(pid=62985)[0m     @     0x5650a1e04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62985)[0m     @     0x5650a1d79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62985)[0m     @     0x5650a1e03baf _PyEval_EvalCodeWithName
[2m[36m(pid=62985)[0m     @     0x5650a1e04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62985)[0m     @     0x5650a1d79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62985)[0m     @     0x5650a1e03baf _PyEval_EvalCodeWithName
[2m[36m(pid=62985)[0m     @     0x5650a1e04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62985)[0m     @     0x5650a1d79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62933)[0m     @     0x7f23eae274f5 at::Tensor::copy_()
[2m[36m(pid=62933)[0m     @     0x7f23f0ed279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62933)[0m     @     0x55cfb926ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62933)[0m     @     0x55cfb91cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62933)[0m     @     0x55cfb9255baf _PyEval_EvalCodeWithName
[2m[36m(pid=62933)[0m     @     0x55cfb9256a20 method_vectorcall
[2m[36m(pid=62933)[0m     @     0x55cfb91cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62933)[0m     @     0x55cfb9255baf _PyEval_EvalCodeWithName
[2m[36m(pid=62933)[0m     @     0x55cfb9256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62933)[0m     @     0x55cfb91cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62933)[0m     @     0x55cfb9255baf _PyEval_EvalCodeWithName
[2m[36m(pid=62933)[0m     @     0x55cfb9256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62933)[0m     @     0x55cfb91cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62933)[0m     @     0x55cfb9255baf _PyEval_EvalCodeWithName
[2m[36m(pid=62933)[0m     @     0x55cfb9256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62933)[0m     @     0x55cfb91cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62933)[0m     @     0x55cfb9255baf _PyEval_EvalCodeWithName
[2m[36m(pid=62933)[0m     @     0x55cfb9256643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62933)[0m     @     0x55cfb91cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62935)[0m     @     0x7f4d2edea4f5 at::Tensor::copy_()
[2m[36m(pid=62935)[0m     @     0x7f4d34e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62935)[0m     @     0x5565c6580fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62935)[0m     @     0x5565c64dbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62935)[0m     @     0x5565c6566baf _PyEval_EvalCodeWithName
[2m[36m(pid=62935)[0m     @     0x5565c6567a20 method_vectorcall
[2m[36m(pid=62935)[0m     @     0x5565c64dbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62935)[0m     @     0x5565c6566baf _PyEval_EvalCodeWithName
[2m[36m(pid=62935)[0m     @     0x5565c6567643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62935)[0m     @     0x5565c64dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62935)[0m     @     0x5565c6566baf _PyEval_EvalCodeWithName
[2m[36m(pid=62935)[0m     @     0x5565c6567643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62935)[0m     @     0x5565c64dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62935)[0m     @     0x5565c6566baf _PyEval_EvalCodeWithName
[2m[36m(pid=62935)[0m     @     0x5565c6567643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62935)[0m     @     0x5565c64dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62935)[0m     @     0x5565c6566baf _PyEval_EvalCodeWithName
[2m[36m(pid=62935)[0m     @     0x5565c6567643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62935)[0m     @     0x5565c64dc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62945)[0m     @     0x7fa7bcf384f5 at::Tensor::copy_()
[2m[36m(pid=62945)[0m     @     0x7fa7c2fe379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62945)[0m     @     0x55a039d9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62945)[0m     @     0x55a039cf9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62945)[0m     @     0x55a039d84baf _PyEval_EvalCodeWithName
[2m[36m(pid=62945)[0m     @     0x55a039d85a20 method_vectorcall
[2m[36m(pid=62945)[0m     @     0x55a039cf9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62945)[0m     @     0x55a039d84baf _PyEval_EvalCodeWithName
[2m[36m(pid=62945)[0m     @     0x55a039d85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62945)[0m     @     0x55a039cfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62945)[0m     @     0x55a039d84baf _PyEval_EvalCodeWithName
[2m[36m(pid=62945)[0m     @     0x55a039d85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62945)[0m     @     0x55a039cfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62945)[0m     @     0x55a039d84baf _PyEval_EvalCodeWithName
[2m[36m(pid=62945)[0m     @     0x55a039d85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62945)[0m     @     0x55a039cfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62945)[0m     @     0x55a039d84baf _PyEval_EvalCodeWithName
[2m[36m(pid=62945)[0m     @     0x55a039d85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62945)[0m     @     0x55a039cfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63060)[0m     @     0x7f6af71e04f5 at::Tensor::copy_()
[2m[36m(pid=63060)[0m     @     0x7f6afd28b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63060)[0m     @     0x562f7a69cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63060)[0m     @     0x562f7a5f7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63060)[0m     @     0x562f7a682baf _PyEval_EvalCodeWithName
[2m[36m(pid=63060)[0m     @     0x562f7a683a20 method_vectorcall
[2m[36m(pid=63060)[0m     @     0x562f7a5f7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63060)[0m     @     0x562f7a682baf _PyEval_EvalCodeWithName
[2m[36m(pid=63060)[0m     @     0x562f7a683643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63060)[0m     @     0x562f7a5f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63060)[0m     @     0x562f7a682baf _PyEval_EvalCodeWithName
[2m[36m(pid=63060)[0m     @     0x562f7a683643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63060)[0m     @     0x562f7a5f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63060)[0m     @     0x562f7a682baf _PyEval_EvalCodeWithName
[2m[36m(pid=63060)[0m     @     0x562f7a683643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63060)[0m     @     0x562f7a5f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63060)[0m     @     0x562f7a682baf _PyEval_EvalCodeWithName
[2m[36m(pid=63060)[0m     @     0x562f7a683643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63060)[0m     @     0x562f7a5f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62953)[0m     @     0x7f34ced2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62953)[0m     @     0x5624a526efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62953)[0m     @     0x5624a51c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62953)[0m     @     0x5624a5254baf _PyEval_EvalCodeWithName
[2m[36m(pid=62953)[0m     @     0x5624a5255a20 method_vectorcall
[2m[36m(pid=62953)[0m     @     0x5624a51c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62953)[0m     @     0x5624a5254baf _PyEval_EvalCodeWithName
[2m[36m(pid=62953)[0m     @     0x5624a5255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62953)[0m     @     0x5624a51ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62953)[0m     @     0x5624a5254baf _PyEval_EvalCodeWithName
[2m[36m(pid=62953)[0m     @     0x5624a5255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62953)[0m     @     0x5624a51ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62953)[0m     @     0x5624a5254baf _PyEval_EvalCodeWithName
[2m[36m(pid=62953)[0m     @     0x5624a5255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62953)[0m     @     0x5624a51ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62953)[0m     @     0x5624a5254baf _PyEval_EvalCodeWithName
[2m[36m(pid=62953)[0m     @     0x5624a5255643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62953)[0m     @     0x5624a51ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62947)[0m     @     0x7f9e58f204f5 at::Tensor::copy_()
[2m[36m(pid=62947)[0m     @     0x7f9e5efcb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62947)[0m     @     0x556468270fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62947)[0m     @     0x5564681cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62947)[0m     @     0x556468256baf _PyEval_EvalCodeWithName
[2m[36m(pid=62947)[0m     @     0x556468257a20 method_vectorcall
[2m[36m(pid=62947)[0m     @     0x5564681cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62947)[0m     @     0x556468256baf _PyEval_EvalCodeWithName
[2m[36m(pid=62947)[0m     @     0x556468257643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62947)[0m     @     0x5564681cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62947)[0m     @     0x556468256baf _PyEval_EvalCodeWithName
[2m[36m(pid=62947)[0m     @     0x556468257643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62947)[0m     @     0x5564681cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62947)[0m     @     0x556468256baf _PyEval_EvalCodeWithName
[2m[36m(pid=62947)[0m     @     0x556468257643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62947)[0m     @     0x5564681cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62947)[0m     @     0x556468256baf _PyEval_EvalCodeWithName
[2m[36m(pid=62947)[0m     @     0x556468257643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62947)[0m     @     0x5564681cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62931)[0m     @     0x7f5c76dea4f5 at::Tensor::copy_()
[2m[36m(pid=62931)[0m     @     0x7f5c7ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62931)[0m     @     0x558de256ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62931)[0m     @     0x558de24cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62931)[0m     @     0x558de2555baf _PyEval_EvalCodeWithName
[2m[36m(pid=62931)[0m     @     0x558de2556a20 method_vectorcall
[2m[36m(pid=62931)[0m     @     0x558de24cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62931)[0m     @     0x558de2555baf _PyEval_EvalCodeWithName
[2m[36m(pid=62931)[0m     @     0x558de2556643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62931)[0m     @     0x558de24cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62931)[0m     @     0x558de2555baf _PyEval_EvalCodeWithName
[2m[36m(pid=62931)[0m     @     0x558de2556643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62931)[0m     @     0x558de24cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62931)[0m     @     0x558de2555baf _PyEval_EvalCodeWithName
[2m[36m(pid=62931)[0m     @     0x558de2556643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62931)[0m     @     0x558de24cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62931)[0m     @     0x558de2555baf _PyEval_EvalCodeWithName
[2m[36m(pid=62931)[0m     @     0x558de2556643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62931)[0m     @     0x558de24cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62934)[0m     @     0x7f49a4d274f5 at::Tensor::copy_()
[2m[36m(pid=62934)[0m     @     0x7f49aadd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62934)[0m     @     0x55744ffc4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62934)[0m     @     0x55744ff1fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62934)[0m     @     0x55744ffaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62934)[0m     @     0x55744ffaba20 method_vectorcall
[2m[36m(pid=62934)[0m     @     0x55744ff1fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62934)[0m     @     0x55744ffaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62934)[0m     @     0x55744ffab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62934)[0m     @     0x55744ff20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62934)[0m     @     0x55744ffaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62934)[0m     @     0x55744ffab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62934)[0m     @     0x55744ff20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62934)[0m     @     0x55744ffaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62934)[0m     @     0x55744ffab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62934)[0m     @     0x55744ff20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62934)[0m     @     0x55744ffaabaf _PyEval_EvalCodeWithName
[2m[36m(pid=62934)[0m     @     0x55744ffab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62934)[0m     @     0x55744ff20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63010)[0m     @     0x564f3ec6ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63010)[0m     @     0x564f3ecf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=63010)[0m     @     0x564f3ecfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63010)[0m     @     0x564f3ec6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63010)[0m     @     0x564f3ecf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=63010)[0m     @     0x564f3ecfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63010)[0m     @     0x564f3ec6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63010)[0m     @     0x564f3ecf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=63010)[0m     @     0x564f3ecfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63010)[0m     @     0x564f3ec6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63010)[0m     @     0x564f3ecf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=63010)[0m     @     0x564f3ecfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63010)[0m     @     0x564f3ec6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62991)[0m     @     0x558085045689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62991)[0m     @     0x5580850cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62991)[0m     @     0x5580850d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62991)[0m     @     0x558085045689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63042)[0m     @     0x7f4144a654f5 at::Tensor::copy_()
[2m[36m(pid=63042)[0m     @     0x7f414ab1079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63042)[0m     @     0x5644977bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63042)[0m     @     0x564497717b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63042)[0m     @     0x5644977a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=63042)[0m     @     0x5644977a3a20 method_vectorcall
[2m[36m(pid=63042)[0m     @     0x564497717bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63042)[0m     @     0x5644977a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=63042)[0m     @     0x5644977a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63042)[0m     @     0x564497718689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63042)[0m     @     0x5644977a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=63042)[0m     @     0x5644977a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63042)[0m     @     0x564497718689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63042)[0m     @     0x5644977a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=63042)[0m     @     0x5644977a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63042)[0m     @     0x564497718689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63042)[0m     @     0x5644977a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=63042)[0m     @     0x5644977a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63042)[0m     @     0x564497718689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62926)[0m     @     0x7ee3a2ffb4f5 at::Tensor::copy_()
[2m[36m(pid=62926)[0m     @     0x7ee3a90a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62926)[0m     @     0x55ec3303bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62926)[0m     @     0x55ec32f96b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62926)[0m     @     0x55ec33021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62926)[0m     @     0x55ec33022a20 method_vectorcall
[2m[36m(pid=62926)[0m     @     0x55ec32f96bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62926)[0m     @     0x55ec33021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62926)[0m     @     0x55ec33022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62926)[0m     @     0x55ec32f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62926)[0m     @     0x55ec33021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62926)[0m     @     0x55ec33022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62926)[0m     @     0x55ec32f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62926)[0m     @     0x55ec33021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62926)[0m     @     0x55ec33022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62926)[0m     @     0x55ec32f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62926)[0m     @     0x55ec33021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62926)[0m     @     0x55ec33022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62926)[0m     @     0x55ec32f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62927)[0m     @     0x7effc38ed4f5 at::Tensor::copy_()
[2m[36m(pid=62927)[0m     @     0x7effc999879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62927)[0m     @     0x55c0bb7a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62927)[0m     @     0x55c0bb703b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62927)[0m     @     0x55c0bb78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62927)[0m     @     0x55c0bb78fa20 method_vectorcall
[2m[36m(pid=62927)[0m     @     0x55c0bb703bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62927)[0m     @     0x55c0bb78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62927)[0m     @     0x55c0bb78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62927)[0m     @     0x55c0bb704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62927)[0m     @     0x55c0bb78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62927)[0m     @     0x55c0bb78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62927)[0m     @     0x55c0bb704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62927)[0m     @     0x55c0bb78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62927)[0m     @     0x55c0bb78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62927)[0m     @     0x55c0bb704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62927)[0m     @     0x55c0bb78ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62927)[0m     @     0x55c0bb78f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62927)[0m     @     0x55c0bb704689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63032)[0m     @     0x7f5438ccf5a4 at::native::copy_()
[2m[36m(pid=63032)[0m     @     0x7f54393ba4f5 at::Tensor::copy_()
[2m[36m(pid=63032)[0m     @     0x7f543b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63032)[0m     @     0x7f54393ba4f5 at::Tensor::copy_()
[2m[36m(pid=63032)[0m     @     0x7f543f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63032)[0m     @     0x560e1e887fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63032)[0m     @     0x560e1e7e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63047)[0m     @     0x7f103e5604f5 at::Tensor::copy_()
[2m[36m(pid=63047)[0m     @     0x7f1040a338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63047)[0m     @     0x7f103e5604f5 at::Tensor::copy_()
[2m[36m(pid=63047)[0m     @     0x7f104460b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63047)[0m     @     0x5567dfc78fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63047)[0m     @     0x5567dfbd3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63047)[0m     @     0x5567dfc5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63047)[0m     @     0x5567dfc5fa20 method_vectorcall
[2m[36m(pid=63047)[0m     @     0x5567dfbd3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63047)[0m     @     0x5567dfc5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63047)[0m     @     0x5567dfc5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63047)[0m     @     0x5567dfbd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63047)[0m     @     0x5567dfc5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63047)[0m     @     0x5567dfc5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63047)[0m     @     0x5567dfbd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63047)[0m     @     0x5567dfc5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63047)[0m     @     0x5567dfc5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63047)[0m     @     0x5567dfbd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63047)[0m     @     0x5567dfc5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63047)[0m     @     0x5567dfc5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63047)[0m     @     0x5567dfbd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x7f0993a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=62929)[0m     @     0x7f0993a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=62929)[0m     @     0x7f09942efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=62929)[0m     @     0x7f0994312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=62929)[0m     @     0x7f09937b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62929)[0m     @     0x7f09937b2388 at::native::copy_impl()
[2m[36m(pid=62998)[0m     @     0x7f1b592f8388 at::native::copy_impl()
[2m[36m(pid=62998)[0m     @     0x7f1b592fa5a4 at::native::copy_()
[2m[36m(pid=62998)[0m     @     0x7f1b599e54f5 at::Tensor::copy_()
[2m[36m(pid=62998)[0m     @     0x7f1b5beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62998)[0m     @     0x7f1b599e54f5 at::Tensor::copy_()
[2m[36m(pid=62930)[0m     @     0x7ef5a62cb4f5 at::Tensor::copy_()
[2m[36m(pid=62930)[0m     @     0x7ef5ac37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62930)[0m     @     0x560431798fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62930)[0m     @     0x5604316f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62930)[0m     @     0x56043177ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62930)[0m     @     0x56043177fa20 method_vectorcall
[2m[36m(pid=62930)[0m     @     0x5604316f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62930)[0m     @     0x56043177ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62930)[0m     @     0x56043177f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62930)[0m     @     0x5604316f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62930)[0m     @     0x56043177ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62930)[0m     @     0x56043177f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62930)[0m     @     0x5604316f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62930)[0m     @     0x56043177ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62930)[0m     @     0x56043177f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62930)[0m     @     0x5604316f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62930)[0m     @     0x56043177ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=62930)[0m     @     0x56043177f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62930)[0m     @     0x5604316f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x7f5827d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=63012)[0m     @     0x7f5827d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=63012)[0m     @     0x7f582861fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63012)[0m     @     0x7f5828642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63012)[0m     @     0x7f5827ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63012)[0m     @     0x7f5827ae2388 at::native::copy_impl()
[2m[36m(pid=62951)[0m     @     0x7f5e56c444f5 at::Tensor::copy_()
[2m[36m(pid=62951)[0m     @     0x7f5e591178de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62951)[0m     @     0x7f5e56c444f5 at::Tensor::copy_()
[2m[36m(pid=62951)[0m     @     0x7f5e5ccef79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62951)[0m     @     0x5587e8289fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62951)[0m     @     0x5587e81e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62951)[0m     @     0x5587e826fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62951)[0m     @     0x5587e8270a20 method_vectorcall
[2m[36m(pid=62951)[0m     @     0x5587e81e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62951)[0m     @     0x5587e826fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62951)[0m     @     0x5587e8270643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62951)[0m     @     0x5587e81e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62951)[0m     @     0x5587e826fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62951)[0m     @     0x5587e8270643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62951)[0m     @     0x5587e81e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62951)[0m     @     0x5587e826fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62951)[0m     @     0x5587e8270643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62951)[0m     @     0x5587e81e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62951)[0m     @     0x5587e826fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62951)[0m     @     0x5587e8270643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62951)[0m     @     0x5587e81e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62993)[0m     @     0x555c5f2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62993)[0m     @     0x555c5f2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62993)[0m     @     0x555c5f24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62993)[0m     @     0x555c5f2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62993)[0m     @     0x555c5f2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62993)[0m     @     0x555c5f24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62993)[0m     @     0x555c5f2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62993)[0m     @     0x555c5f2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62993)[0m     @     0x555c5f24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62993)[0m     @     0x555c5f2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62993)[0m     @     0x555c5f2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62993)[0m     @     0x555c5f24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x7fba8a601ad3 at::TensorIterator::for_each()
[2m[36m(pid=63002)[0m     @     0x7fba8a601d91 at::TensorIterator::for_each()
[2m[36m(pid=63002)[0m     @     0x7fba8aee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63002)[0m     @     0x7fba8af07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63002)[0m     @     0x7fba8a3a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=62989)[0m     @     0x55f30288d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62989)[0m     @     0x55f302802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62989)[0m     @     0x55f30288cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62989)[0m     @     0x55f30288d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62989)[0m     @     0x55f302802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62989)[0m     @     0x55f30288cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=62989)[0m     @     0x55f30288d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62989)[0m     @     0x55f302802689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62943)[0m     @     0x560a266ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62943)[0m     @     0x560a26757baf _PyEval_EvalCodeWithName
[2m[36m(pid=62943)[0m     @     0x560a26758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62943)[0m     @     0x560a266cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62943)[0m     @     0x560a26757baf _PyEval_EvalCodeWithName
[2m[36m(pid=62943)[0m     @     0x560a26758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62943)[0m     @     0x560a266cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62943)[0m     @     0x560a26757baf _PyEval_EvalCodeWithName
[2m[36m(pid=62943)[0m     @     0x560a26758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62943)[0m     @     0x560a266cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62943)[0m     @     0x560a26757baf _PyEval_EvalCodeWithName
[2m[36m(pid=62943)[0m     @     0x560a26758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62943)[0m     @     0x560a266cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x7fa81314f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62940)[0m     @     0x55d4abafbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62940)[0m     @     0x55d4aba56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x55d4abae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62940)[0m     @     0x55d4abae2a20 method_vectorcall
[2m[36m(pid=62940)[0m     @     0x55d4aba56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x55d4abae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62940)[0m     @     0x55d4abae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62940)[0m     @     0x55d4aba57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x55d4abae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62940)[0m     @     0x55d4abae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62940)[0m     @     0x55d4aba57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x55d4abae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62940)[0m     @     0x55d4abae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62940)[0m     @     0x55d4aba57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62940)[0m     @     0x55d4abae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=62940)[0m     @     0x55d4abae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62940)[0m     @     0x55d4aba57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63043)[0m     @     0x7fc3ebc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63043)[0m     @     0x7fc3ebc48388 at::native::copy_impl()
[2m[36m(pid=63043)[0m     @     0x7fc3ebc4a5a4 at::native::copy_()
[2m[36m(pid=63043)[0m     @     0x7fc3ec3354f5 at::Tensor::copy_()
[2m[36m(pid=63043)[0m     @     0x7fc3ee8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63067)[0m     @     0x7f40d563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63067)[0m     @     0x55fcddf2efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63067)[0m     @     0x55fcdde89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63067)[0m     @     0x55fcddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=63067)[0m     @     0x55fcddf15a20 method_vectorcall
[2m[36m(pid=63067)[0m     @     0x55fcdde89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63067)[0m     @     0x55fcddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=63067)[0m     @     0x55fcddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63067)[0m     @     0x55fcdde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63067)[0m     @     0x55fcddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=63067)[0m     @     0x55fcddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63067)[0m     @     0x55fcdde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63067)[0m     @     0x55fcddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=63067)[0m     @     0x55fcddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63067)[0m     @     0x55fcdde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63067)[0m     @     0x55fcddf14baf _PyEval_EvalCodeWithName
[2m[36m(pid=63067)[0m     @     0x55fcddf15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63067)[0m     @     0x55fcdde8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63004)[0m     @     0x7f3a302278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63004)[0m     @     0x7f3a2dd544f5 at::Tensor::copy_()
[2m[36m(pid=63004)[0m     @     0x7f3a33dff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63004)[0m     @     0x562c5119afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63004)[0m     @     0x562c510f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63004)[0m     @     0x562c51180baf _PyEval_EvalCodeWithName
[2m[36m(pid=63004)[0m     @     0x562c51181a20 method_vectorcall
[2m[36m(pid=63004)[0m     @     0x562c510f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63004)[0m     @     0x562c51180baf _PyEval_EvalCodeWithName
[2m[36m(pid=63004)[0m     @     0x562c51181643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63004)[0m     @     0x562c510f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63004)[0m     @     0x562c51180baf _PyEval_EvalCodeWithName
[2m[36m(pid=63004)[0m     @     0x562c51181643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63004)[0m     @     0x562c510f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63004)[0m     @     0x562c51180baf _PyEval_EvalCodeWithName
[2m[36m(pid=63004)[0m     @     0x562c51181643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63004)[0m     @     0x562c510f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63004)[0m     @     0x562c51180baf _PyEval_EvalCodeWithName
[2m[36m(pid=63004)[0m     @     0x562c51181643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63004)[0m     @     0x562c510f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63037)[0m     @     0x7f457c811a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63037)[0m     @     0x7f457c80f388 at::native::copy_impl()
[2m[36m(pid=63037)[0m     @     0x7f457c8115a4 at::native::copy_()
[2m[36m(pid=63037)[0m     @     0x7f457cefc4f5 at::Tensor::copy_()
[2m[36m(pid=63063)[0m     @     0x7f15efc91d91 at::TensorIterator::for_each()
[2m[36m(pid=63063)[0m     @     0x7f15f0574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=63063)[0m     @     0x7f15f0597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=63063)[0m     @     0x7f15efa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63063)[0m     @     0x7f15efa37388 at::native::copy_impl()
[2m[36m(pid=63063)[0m     @     0x7f15efa395a4 at::native::copy_()
[2m[36m(pid=62959)[0m     @     0x55c4511e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62959)[0m     @     0x55c4511e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62959)[0m     @     0x55c45115d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62959)[0m     @     0x55c4511e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62959)[0m     @     0x55c4511e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62959)[0m     @     0x55c45115d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62959)[0m     @     0x55c4511e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62959)[0m     @     0x55c4511e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62959)[0m     @     0x55c45115d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62959)[0m     @     0x55c4511e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=62959)[0m     @     0x55c4511e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62959)[0m     @     0x55c45115d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62924)[0m     @     0x7ee8785014f5 at::Tensor::copy_()
[2m[36m(pid=62924)[0m     @     0x7ee87e1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62924)[0m     @     0x55b85603bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62924)[0m     @     0x55b855f96b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62924)[0m     @     0x55b856021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62924)[0m     @     0x55b856022a20 method_vectorcall
[2m[36m(pid=62924)[0m     @     0x55b855f96bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62924)[0m     @     0x55b856021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62924)[0m     @     0x55b856022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62924)[0m     @     0x55b855f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62924)[0m     @     0x55b856021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62924)[0m     @     0x55b856022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62924)[0m     @     0x55b855f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62924)[0m     @     0x55b856021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62924)[0m     @     0x55b856022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62924)[0m     @     0x55b855f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62924)[0m     @     0x55b856021baf _PyEval_EvalCodeWithName
[2m[36m(pid=62924)[0m     @     0x55b856022643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62924)[0m     @     0x55b855f97689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63001)[0m     @     0x7f07e17e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=63001)[0m     @     0x7f07e17df388 at::native::copy_impl()
[2m[36m(pid=63001)[0m     @     0x7f07e17e15a4 at::native::copy_()
[2m[36m(pid=63001)[0m     @     0x7f07e1ecc4f5 at::Tensor::copy_()
[2m[36m(pid=63001)[0m     @     0x7f07e439f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63057)[0m     @     0x7f18afe9f4f5 at::Tensor::copy_()
[2m[36m(pid=63057)[0m     @     0x7f18b5f4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63057)[0m     @     0x56115a748fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63057)[0m     @     0x56115a6a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63057)[0m     @     0x56115a72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63057)[0m     @     0x56115a72fa20 method_vectorcall
[2m[36m(pid=63057)[0m     @     0x56115a6a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63057)[0m     @     0x56115a72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63057)[0m     @     0x56115a72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63057)[0m     @     0x56115a6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63057)[0m     @     0x56115a72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63057)[0m     @     0x56115a72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63057)[0m     @     0x56115a6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63057)[0m     @     0x56115a72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63057)[0m     @     0x56115a72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63057)[0m     @     0x56115a6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63057)[0m     @     0x56115a72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=63057)[0m     @     0x56115a72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63057)[0m     @     0x56115a6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62946)[0m     @     0x559cb89bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62946)[0m     @     0x559cb8a4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=62946)[0m     @     0x559cb8a4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62946)[0m     @     0x559cb89c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62946)[0m     @     0x559cb8a4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=62946)[0m     @     0x559cb8a4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62946)[0m     @     0x559cb89c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62946)[0m     @     0x559cb8a4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=62946)[0m     @     0x559cb8a4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62946)[0m     @     0x559cb89c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62946)[0m     @     0x559cb8a4abaf _PyEval_EvalCodeWithName
[2m[36m(pid=62946)[0m     @     0x559cb8a4b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62946)[0m     @     0x559cb89c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63032)[0m     @     0x560e1e86dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63032)[0m     @     0x560e1e86ea20 method_vectorcall
[2m[36m(pid=63032)[0m     @     0x560e1e7e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63032)[0m     @     0x560e1e86dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63032)[0m     @     0x560e1e86e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63032)[0m     @     0x560e1e7e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63032)[0m     @     0x560e1e86dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63032)[0m     @     0x560e1e86e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63032)[0m     @     0x560e1e7e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63032)[0m     @     0x560e1e86dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63032)[0m     @     0x560e1e86e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63032)[0m     @     0x560e1e7e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63032)[0m     @     0x560e1e86dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63032)[0m     @     0x560e1e86e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63032)[0m     @     0x560e1e7e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x7f09937b45a4 at::native::copy_()
[2m[36m(pid=62998)[0m     @     0x7f1b5fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62998)[0m     @     0x558b74beafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62998)[0m     @     0x558b74b45b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62998)[0m     @     0x558b74bd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=62998)[0m     @     0x558b74bd1a20 method_vectorcall
[2m[36m(pid=62998)[0m     @     0x558b74b45bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62998)[0m     @     0x558b74bd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=62998)[0m     @     0x558b74bd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62998)[0m     @     0x558b74b46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62998)[0m     @     0x558b74bd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=62998)[0m     @     0x558b74bd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62998)[0m     @     0x558b74b46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62998)[0m     @     0x558b74bd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=62998)[0m     @     0x558b74bd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62998)[0m     @     0x558b74b46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62998)[0m     @     0x558b74bd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=62998)[0m     @     0x558b74bd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62998)[0m     @     0x558b74b46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x7f5827ae45a4 at::native::copy_()
[2m[36m(pid=63012)[0m     @     0x7f58281cf4f5 at::Tensor::copy_()
[2m[36m(pid=63002)[0m     @     0x7fba8a3a7388 at::native::copy_impl()
[2m[36m(pid=63002)[0m     @     0x7fba8a3a95a4 at::native::copy_()
[2m[36m(pid=63002)[0m     @     0x7fba8aa944f5 at::Tensor::copy_()
[2m[36m(pid=63043)[0m     @     0x7fc3ec3354f5 at::Tensor::copy_()
[2m[36m(pid=63043)[0m     @     0x7fc3f23e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63043)[0m     @     0x55d19eea1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63043)[0m     @     0x55d19edfcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63043)[0m     @     0x55d19ee87baf _PyEval_EvalCodeWithName
[2m[36m(pid=63043)[0m     @     0x55d19ee88a20 method_vectorcall
[2m[36m(pid=63043)[0m     @     0x55d19edfcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63043)[0m     @     0x55d19ee87baf _PyEval_EvalCodeWithName
[2m[36m(pid=63043)[0m     @     0x55d19ee88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63043)[0m     @     0x55d19edfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63043)[0m     @     0x55d19ee87baf _PyEval_EvalCodeWithName
[2m[36m(pid=63043)[0m     @     0x55d19ee88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63043)[0m     @     0x55d19edfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63043)[0m     @     0x55d19ee87baf _PyEval_EvalCodeWithName
[2m[36m(pid=63043)[0m     @     0x55d19ee88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63043)[0m     @     0x55d19edfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63043)[0m     @     0x55d19ee87baf _PyEval_EvalCodeWithName
[2m[36m(pid=63043)[0m     @     0x55d19ee88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63043)[0m     @     0x55d19edfd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63037)[0m     @     0x7f457f3cf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63037)[0m     @     0x7f457cefc4f5 at::Tensor::copy_()
[2m[36m(pid=63037)[0m     @     0x7f4582fa779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63037)[0m     @     0x55b2c55cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63037)[0m     @     0x55b2c5526b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63037)[0m     @     0x55b2c55b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63037)[0m     @     0x55b2c55b2a20 method_vectorcall
[2m[36m(pid=63037)[0m     @     0x55b2c5526bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63037)[0m     @     0x55b2c55b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63037)[0m     @     0x55b2c55b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63037)[0m     @     0x55b2c5527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63037)[0m     @     0x55b2c55b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63037)[0m     @     0x55b2c55b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63037)[0m     @     0x55b2c5527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63037)[0m     @     0x55b2c55b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63037)[0m     @     0x55b2c55b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63037)[0m     @     0x55b2c5527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63037)[0m     @     0x55b2c55b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=63037)[0m     @     0x55b2c55b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63037)[0m     @     0x55b2c5527689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63063)[0m     @     0x7f15f01244f5 at::Tensor::copy_()
[2m[36m(pid=63063)[0m     @     0x7f15f25f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63063)[0m     @     0x7f15f01244f5 at::Tensor::copy_()
[2m[36m(pid=63001)[0m     @     0x7f07e1ecc4f5 at::Tensor::copy_()
[2m[36m(pid=63001)[0m     @     0x7f07e7f7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63001)[0m     @     0x55e2a03c7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63001)[0m     @     0x55e2a0322b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63001)[0m     @     0x55e2a03adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63001)[0m     @     0x55e2a03aea20 method_vectorcall
[2m[36m(pid=63001)[0m     @     0x55e2a0322bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63001)[0m     @     0x55e2a03adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63001)[0m     @     0x55e2a03ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63001)[0m     @     0x55e2a0323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63001)[0m     @     0x55e2a03adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63001)[0m     @     0x55e2a03ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63001)[0m     @     0x55e2a0323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63001)[0m     @     0x55e2a03adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63001)[0m     @     0x55e2a03ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63001)[0m     @     0x55e2a0323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63001)[0m     @     0x55e2a03adbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63001)[0m     @     0x55e2a03ae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63001)[0m     @     0x55e2a0323689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x7f0993e9f4f5 at::Tensor::copy_()
[2m[36m(pid=62929)[0m     @     0x7f09963728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=62929)[0m     @     0x7f0993e9f4f5 at::Tensor::copy_()
[2m[36m(pid=62929)[0m     @     0x7f0999f4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=62929)[0m     @     0x5620d4633fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=62929)[0m     @     0x5620d458eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x5620d4619baf _PyEval_EvalCodeWithName
[2m[36m(pid=62929)[0m     @     0x5620d461aa20 method_vectorcall
[2m[36m(pid=62929)[0m     @     0x5620d458ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x5620d4619baf _PyEval_EvalCodeWithName
[2m[36m(pid=62929)[0m     @     0x5620d461a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62929)[0m     @     0x5620d458f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x5620d4619baf _PyEval_EvalCodeWithName
[2m[36m(pid=62929)[0m     @     0x5620d461a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62929)[0m     @     0x5620d458f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x5620d4619baf _PyEval_EvalCodeWithName
[2m[36m(pid=62929)[0m     @     0x5620d461a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62929)[0m     @     0x5620d458f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=62929)[0m     @     0x5620d4619baf _PyEval_EvalCodeWithName
[2m[36m(pid=62929)[0m     @     0x5620d461a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=62929)[0m     @     0x5620d458f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x7f582a6a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63012)[0m     @     0x7f58281cf4f5 at::Tensor::copy_()
[2m[36m(pid=63012)[0m     @     0x7f582e27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63012)[0m     @     0x555a56f1ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63012)[0m     @     0x555a56e7ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x555a56f05baf _PyEval_EvalCodeWithName
[2m[36m(pid=63012)[0m     @     0x555a56f06a20 method_vectorcall
[2m[36m(pid=63012)[0m     @     0x555a56e7abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x555a56f05baf _PyEval_EvalCodeWithName
[2m[36m(pid=63012)[0m     @     0x555a56f06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63012)[0m     @     0x555a56e7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x555a56f05baf _PyEval_EvalCodeWithName
[2m[36m(pid=63012)[0m     @     0x555a56f06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63012)[0m     @     0x555a56e7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x555a56f05baf _PyEval_EvalCodeWithName
[2m[36m(pid=63012)[0m     @     0x555a56f06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63012)[0m     @     0x555a56e7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63012)[0m     @     0x555a56f05baf _PyEval_EvalCodeWithName
[2m[36m(pid=63012)[0m     @     0x555a56f06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63012)[0m     @     0x555a56e7b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x7fba8cf678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=63002)[0m     @     0x7fba8aa944f5 at::Tensor::copy_()
[2m[36m(pid=63063)[0m     @     0x7f15f61cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63063)[0m     @     0x560ff1b60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63063)[0m     @     0x560ff1abbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63063)[0m     @     0x560ff1b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63063)[0m     @     0x560ff1b47a20 method_vectorcall
[2m[36m(pid=63063)[0m     @     0x560ff1abbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63063)[0m     @     0x560ff1b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63063)[0m     @     0x560ff1b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63063)[0m     @     0x560ff1abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63063)[0m     @     0x560ff1b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63063)[0m     @     0x560ff1b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63063)[0m     @     0x560ff1abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63063)[0m     @     0x560ff1b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63063)[0m     @     0x560ff1b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63063)[0m     @     0x560ff1abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63063)[0m     @     0x560ff1b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=63063)[0m     @     0x560ff1b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63063)[0m     @     0x560ff1abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x7fba90b3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=63002)[0m     @     0x564c5e3c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=63002)[0m     @     0x564c5e321b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x564c5e3acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63002)[0m     @     0x564c5e3ada20 method_vectorcall
[2m[36m(pid=63002)[0m     @     0x564c5e321bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x564c5e3acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63002)[0m     @     0x564c5e3ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63002)[0m     @     0x564c5e322689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x564c5e3acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63002)[0m     @     0x564c5e3ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63002)[0m     @     0x564c5e322689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x564c5e3acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63002)[0m     @     0x564c5e3ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63002)[0m     @     0x564c5e322689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=63002)[0m     @     0x564c5e3acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=63002)[0m     @     0x564c5e3ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=63002)[0m     @     0x564c5e322689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:50:35,049	ERROR trial_runner.py:567 -- Trial PPO_jss_env_b73e4_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=63040, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:50:35,056	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 10:50:35,056	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
== Status ==
Memory usage on this node: 24.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b73e4_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b73e4_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b73e4_00000_0_2020-11-05_10-50-27/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:50:35,067	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.

2020-11-05 10:50:35,067	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
[2m[36m(pid=63040)[0m E1105 10:50:35.042896 63040 64202 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=170fdfd5d34985a7e0497dac01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=63040)[0m E1105 10:50:35.043072 63040 64202 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=89f63fee54d6858ee0497dac01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=63040)[0m E1105 10:50:35.044720 63040 64202 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=37f0cff2c5fdc1c790aded9101000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=90aded9101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=63040)[0m E1105 10:50:35.044893 63040 64202 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=ff02fc67a478da9090aded9101000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=90aded9101000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=63040)[0m E1105 10:50:35.055689 63040 64202 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=c6f8a2750fad0b0de0497dac01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
== Status ==
Memory usage on this node: 24.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/557.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b73e4_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b73e4_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b73e4_00000_0_2020-11-05_10-50-27/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_b73e4_00000])
