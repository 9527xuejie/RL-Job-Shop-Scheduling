2020-11-05 11:02:51,845	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_739f5_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=22047)[0m 2020-11-05 11:02:54,722	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=21943)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21943)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21943)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21943)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21943)[0m *** SIGSEGV (@0x0) received by PID 21943 (TID 0x7f3984a94700) from PID 0; stack trace: ***
[2m[36m(pid=21943)[0m     @     0x7f398466d390 (unknown)
[2m[36m(pid=21943)[0m     @     0x7f0a867dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21943)[0m     @     0x7f0a83ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21943)[0m     @     0x7f0a83ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22027)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22027)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22027)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22027)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22027)[0m *** SIGSEGV (@0x0) received by PID 22027 (TID 0x7fb611337700) from PID 0; stack trace: ***
[2m[36m(pid=22027)[0m     @     0x7fb610f10390 (unknown)
[2m[36m(pid=22027)[0m     @     0x7f8713130fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22027)[0m     @     0x7f871042464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22027)[0m     @     0x7f8710427977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22027)[0m     @     0x7f8710427b53 at::TensorIterator::for_each()
[2m[36m(pid=22027)[0m     @     0x7f8710427e11 at::TensorIterator::for_each()
[2m[36m(pid=22027)[0m     @     0x7f8713140c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22027)[0m     @     0x7f8713163cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22056)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22056)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22056)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22056)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22056)[0m *** SIGSEGV (@0x0) received by PID 22056 (TID 0x7f394b024700) from PID 0; stack trace: ***
[2m[36m(pid=22056)[0m     @     0x7f394abfd390 (unknown)
[2m[36m(pid=22056)[0m     @     0x7f0a4cc98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22056)[0m     @     0x7f0a49f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22056)[0m     @     0x7f0a49f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22056)[0m     @     0x7f0a49f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=22056)[0m     @     0x7f0a49f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=22056)[0m     @     0x7f0a4cca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22056)[0m     @     0x7f0a4cccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22016)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22016)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22016)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22016)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22016)[0m *** SIGSEGV (@0x0) received by PID 22016 (TID 0x7fbfecb8a700) from PID 0; stack trace: ***
[2m[36m(pid=22016)[0m     @     0x7fbfec763390 (unknown)
[2m[36m(pid=22016)[0m     @     0x7f90ee885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22016)[0m     @     0x7f90ebb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22016)[0m     @     0x7f90ebb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22016)[0m     @     0x7f90ebb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=22016)[0m     @     0x7f90ebb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=22016)[0m     @     0x7f90ee895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22016)[0m     @     0x7f90ee8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22019)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22019)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22019)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22019)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22019)[0m *** SIGSEGV (@0x0) received by PID 22019 (TID 0x7f0422545700) from PID 0; stack trace: ***
[2m[36m(pid=22019)[0m     @     0x7f042211e390 (unknown)
[2m[36m(pid=22019)[0m     @     0x7ed524344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22019)[0m     @     0x7ed52163864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22019)[0m     @     0x7ed52163b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22019)[0m     @     0x7ed52163bb53 at::TensorIterator::for_each()
[2m[36m(pid=21960)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21960)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21960)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21960)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21960)[0m *** SIGSEGV (@0x0) received by PID 21960 (TID 0x7fe4125fa700) from PID 0; stack trace: ***
[2m[36m(pid=21960)[0m     @     0x7fe4121d3390 (unknown)
[2m[36m(pid=21960)[0m     @     0x7fb5143b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21960)[0m     @     0x7fb5116a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21960)[0m     @     0x7fb5116a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22002)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22002)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22002)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22002)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22002)[0m *** SIGSEGV (@0x0) received by PID 22002 (TID 0x7efe3a18f700) from PID 0; stack trace: ***
[2m[36m(pid=22002)[0m     @     0x7efe39d68390 (unknown)
[2m[36m(pid=22002)[0m     @     0x7ecf3bf89fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22002)[0m     @     0x7ecf3927d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22002)[0m     @     0x7ecf39280977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22037)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22037)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22037)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22037)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22037)[0m *** SIGSEGV (@0x0) received by PID 22037 (TID 0x7fc854506700) from PID 0; stack trace: ***
[2m[36m(pid=22037)[0m     @     0x7fc8540df390 (unknown)
[2m[36m(pid=22037)[0m     @     0x7f9956304fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22037)[0m     @     0x7f99535f864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22037)[0m     @     0x7f99535fb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22014)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22014)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22014)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22014)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22014)[0m *** SIGSEGV (@0x0) received by PID 22014 (TID 0x7f51eeec4700) from PID 0; stack trace: ***
[2m[36m(pid=22014)[0m     @     0x7f51eea9d390 (unknown)
[2m[36m(pid=22014)[0m     @     0x7f22f0c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22014)[0m     @     0x7f22edf8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22014)[0m     @     0x7f22edf8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21940)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21940)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21940)[0m *** SIGSEGV (@0x0) received by PID 21940 (TID 0x7fe9e7ec8700) from PID 0; stack trace: ***
[2m[36m(pid=21940)[0m     @     0x7fe9e7aa1390 (unknown)
[2m[36m(pid=21940)[0m     @     0x7fbae9c9afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21940)[0m     @     0x7fbae6f8e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21940)[0m     @     0x7fbae6f91977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21947)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21947)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21947)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21947)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21947)[0m *** SIGSEGV (@0x0) received by PID 21947 (TID 0x7fe13f2e8700) from PID 0; stack trace: ***
[2m[36m(pid=21947)[0m     @     0x7fe13eec1390 (unknown)
[2m[36m(pid=21947)[0m     @     0x7fb2410ddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21947)[0m     @     0x7fb23e3d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21947)[0m     @     0x7fb23e3d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22071)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22071)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22071)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22071)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22071)[0m *** SIGSEGV (@0x0) received by PID 22071 (TID 0x7f3e4169d700) from PID 0; stack trace: ***
[2m[36m(pid=22071)[0m     @     0x7f3e41276390 (unknown)
[2m[36m(pid=22071)[0m     @     0x7f0f433ddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22071)[0m     @     0x7f0f406d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22071)[0m     @     0x7f0f406d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21944)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21944)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21944)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21944)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21944)[0m *** SIGSEGV (@0x0) received by PID 21944 (TID 0x7f6bca0e3700) from PID 0; stack trace: ***
[2m[36m(pid=21944)[0m     @     0x7f6bc9cbc390 (unknown)
[2m[36m(pid=21944)[0m     @     0x7f3ccbdd9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21944)[0m     @     0x7f3cc90cd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21944)[0m     @     0x7f3cc90d0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21944)[0m     @     0x7f3cc90d0b53 at::TensorIterator::for_each()
[2m[36m(pid=22000)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22000)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22000)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22000)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22000)[0m *** SIGSEGV (@0x0) received by PID 22000 (TID 0x7f7ce9f52700) from PID 0; stack trace: ***
[2m[36m(pid=22000)[0m     @     0x7f7ce9b2b390 (unknown)
[2m[36m(pid=22000)[0m     @     0x7f4debc81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22000)[0m     @     0x7f4de8f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22000)[0m     @     0x7f4de8f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22000)[0m     @     0x7f4de8f78b53 at::TensorIterator::for_each()
[2m[36m(pid=21958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21958)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21958)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21958)[0m *** SIGSEGV (@0x0) received by PID 21958 (TID 0x7f3b4ddbe700) from PID 0; stack trace: ***
[2m[36m(pid=21958)[0m     @     0x7f3b4d997390 (unknown)
[2m[36m(pid=21958)[0m     @     0x7f0c4fa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21958)[0m     @     0x7f0c4cd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21958)[0m     @     0x7f0c4cd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21958)[0m     @     0x7f0c4cd67b53 at::TensorIterator::for_each()
[2m[36m(pid=22029)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22029)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22029)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22008)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22008)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22008)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22008)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22008)[0m *** SIGSEGV (@0x0) received by PID 22008 (TID 0x7f84963b0700) from PID 0; stack trace: ***
[2m[36m(pid=21974)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21974)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21974)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21964)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21964)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21964)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21964)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21964)[0m *** SIGSEGV (@0x0) received by PID 21964 (TID 0x7f90808fd700) from PID 0; stack trace: ***
[2m[36m(pid=21964)[0m     @     0x7f90804d6390 (unknown)
[2m[36m(pid=21964)[0m     @     0x7f61825aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21964)[0m     @     0x7f617f89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21964)[0m     @     0x7f617f8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21964)[0m     @     0x7f617f8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=22012)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22012)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22012)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22012)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22012)[0m *** SIGSEGV (@0x0) received by PID 22012 (TID 0x7fd3d555b700) from PID 0; stack trace: ***
[2m[36m(pid=22012)[0m     @     0x7fd3d5134390 (unknown)
[2m[36m(pid=22012)[0m     @     0x7fa4d736bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22012)[0m     @     0x7fa4d465f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22012)[0m     @     0x7fa4d4662977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22012)[0m     @     0x7fa4d4662b53 at::TensorIterator::for_each()
[2m[36m(pid=22022)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22022)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22022)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22017)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22017)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22017)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22017)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22017)[0m *** SIGSEGV (@0x0) received by PID 22017 (TID 0x7f2358d73700) from PID 0; stack trace: ***
[2m[36m(pid=22017)[0m     @     0x7f235894c390 (unknown)
[2m[36m(pid=22017)[0m     @     0x7ef45aa9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22017)[0m     @     0x7ef457d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22017)[0m     @     0x7ef457d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22017)[0m     @     0x7ef457d93b53 at::TensorIterator::for_each()
[2m[36m(pid=22058)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22058)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22058)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22058)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22058)[0m *** SIGSEGV (@0x0) received by PID 22058 (TID 0x7fc11bdf6700) from PID 0; stack trace: ***
[2m[36m(pid=22058)[0m     @     0x7fc11b9cf390 (unknown)
[2m[36m(pid=22058)[0m     @     0x7f921d9c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22058)[0m     @     0x7f921acbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22058)[0m     @     0x7f921acbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22058)[0m     @     0x7f921acbfb53 at::TensorIterator::for_each()
[2m[36m(pid=22058)[0m     @     0x7f921acbfe11 at::TensorIterator::for_each()
[2m[36m(pid=22058)[0m     @     0x7f921d9d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22058)[0m     @     0x7f921d9fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22058)[0m     @     0x7f921aa39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22058)[0m     @     0x7f921aa37c3f at::native::copy_impl()
[2m[36m(pid=22058)[0m     @     0x7f921aa38ed4 at::native::copy_()
[2m[36m(pid=22061)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22061)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22061)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22061)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22061)[0m *** SIGSEGV (@0x0) received by PID 22061 (TID 0x7f52c4352700) from PID 0; stack trace: ***
[2m[36m(pid=22061)[0m     @     0x7f52c3f2b390 (unknown)
[2m[36m(pid=22061)[0m     @     0x7f23c612dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22061)[0m     @     0x7f23c342164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22061)[0m     @     0x7f23c3424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22061)[0m     @     0x7f23c3424b53 at::TensorIterator::for_each()
[2m[36m(pid=22061)[0m     @     0x7f23c3424e11 at::TensorIterator::for_each()
[2m[36m(pid=22061)[0m     @     0x7f23c613dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22061)[0m     @     0x7f23c6160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22028)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22028)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22028)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22028)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22028)[0m *** SIGSEGV (@0x0) received by PID 22028 (TID 0x7f672eab1700) from PID 0; stack trace: ***
[2m[36m(pid=22028)[0m     @     0x7f672e68a390 (unknown)
[2m[36m(pid=22028)[0m     @     0x7f3830770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22028)[0m     @     0x7f382da6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22028)[0m     @     0x7f382da67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22028)[0m     @     0x7f382da67b53 at::TensorIterator::for_each()
[2m[36m(pid=22028)[0m     @     0x7f382da67e11 at::TensorIterator::for_each()
[2m[36m(pid=22028)[0m     @     0x7f3830780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22028)[0m     @     0x7f38307a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22028)[0m     @     0x7f382d7e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22028)[0m     @     0x7f382d7dfc3f at::native::copy_impl()
[2m[36m(pid=22028)[0m     @     0x7f382d7e0ed4 at::native::copy_()
[2m[36m(pid=22068)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22068)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22068)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22068)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22068)[0m *** SIGSEGV (@0x0) received by PID 22068 (TID 0x7f83b4dc0700) from PID 0; stack trace: ***
[2m[36m(pid=22068)[0m     @     0x7f83b4999390 (unknown)
[2m[36m(pid=22068)[0m     @     0x7f54b69ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22068)[0m     @     0x7f54b3cdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22068)[0m     @     0x7f54b3ce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22068)[0m     @     0x7f54b3ce2b53 at::TensorIterator::for_each()
[2m[36m(pid=22068)[0m     @     0x7f54b3ce2e11 at::TensorIterator::for_each()
[2m[36m(pid=22068)[0m     @     0x7f54b69fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22068)[0m     @     0x7f54b6a1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22068)[0m     @     0x7f54b3a5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22068)[0m     @     0x7f54b3a5ac3f at::native::copy_impl()
[2m[36m(pid=22068)[0m     @     0x7f54b3a5bed4 at::native::copy_()
[2m[36m(pid=22021)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22021)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22021)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22021)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22021)[0m *** SIGSEGV (@0x0) received by PID 22021 (TID 0x7f682ca0f700) from PID 0; stack trace: ***
[2m[36m(pid=22021)[0m     @     0x7f682c5e8390 (unknown)
[2m[36m(pid=22021)[0m     @     0x7f392e7f3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22021)[0m     @     0x7f392bae764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22021)[0m     @     0x7f392baea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22021)[0m     @     0x7f392baeab53 at::TensorIterator::for_each()
[2m[36m(pid=22021)[0m     @     0x7f392baeae11 at::TensorIterator::for_each()
[2m[36m(pid=22021)[0m     @     0x7f392e803c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22021)[0m     @     0x7f392e826cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22021)[0m     @     0x7f392b864009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22021)[0m     @     0x7f392b862c3f at::native::copy_impl()
[2m[36m(pid=21961)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21961)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21961)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21961)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21961)[0m *** SIGSEGV (@0x0) received by PID 21961 (TID 0x7f0be8bfd700) from PID 0; stack trace: ***
[2m[36m(pid=21961)[0m     @     0x7f0be87d6390 (unknown)
[2m[36m(pid=21961)[0m     @     0x7edcea7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21961)[0m     @     0x7edce7ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21961)[0m     @     0x7edce7ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21961)[0m     @     0x7edce7ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=21961)[0m     @     0x7edce7ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=22049)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22049)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22049)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22049)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22049)[0m *** SIGSEGV (@0x0) received by PID 22049 (TID 0x7fb25a7fd700) from PID 0; stack trace: ***
[2m[36m(pid=22049)[0m     @     0x7fb25a3d6390 (unknown)
[2m[36m(pid=22049)[0m     @     0x7f835c5c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22049)[0m     @     0x7f83598b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22049)[0m     @     0x7f83598b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22049)[0m     @     0x7f83598b9b53 at::TensorIterator::for_each()
[2m[36m(pid=22049)[0m     @     0x7f83598b9e11 at::TensorIterator::for_each()
[2m[36m(pid=21963)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21963)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21963)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21963)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21963)[0m *** SIGSEGV (@0x0) received by PID 21963 (TID 0x7f218828c700) from PID 0; stack trace: ***
[2m[36m(pid=21963)[0m     @     0x7f2187e65390 (unknown)
[2m[36m(pid=21963)[0m     @     0x7ef28a055fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21963)[0m     @     0x7ef28734964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21963)[0m     @     0x7ef28734c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21963)[0m     @     0x7ef28734cb53 at::TensorIterator::for_each()
[2m[36m(pid=21963)[0m     @     0x7ef28734ce11 at::TensorIterator::for_each()
[2m[36m(pid=21963)[0m     @     0x7ef28a065c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21963)[0m     @     0x7ef28a088cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21963)[0m     @     0x7ef2870c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21963)[0m     @     0x7ef2870c4c3f at::native::copy_impl()
[2m[36m(pid=21963)[0m     @     0x7ef2870c5ed4 at::native::copy_()
[2m[36m(pid=21951)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21951)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21951)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21951)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21951)[0m *** SIGSEGV (@0x0) received by PID 21951 (TID 0x7f168c7f1700) from PID 0; stack trace: ***
[2m[36m(pid=21951)[0m     @     0x7f168c3ca390 (unknown)
[2m[36m(pid=21951)[0m     @     0x7ee78e3adfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21951)[0m     @     0x7ee78b6a164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21951)[0m     @     0x7ee78b6a4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21951)[0m     @     0x7ee78b6a4b53 at::TensorIterator::for_each()
[2m[36m(pid=21951)[0m     @     0x7ee78b6a4e11 at::TensorIterator::for_each()
[2m[36m(pid=21951)[0m     @     0x7ee78e3bdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22031)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22031)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22031)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22031)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22031)[0m *** SIGSEGV (@0x0) received by PID 22031 (TID 0x7ff9de25d700) from PID 0; stack trace: ***
[2m[36m(pid=22031)[0m     @     0x7ff9dde36390 (unknown)
[2m[36m(pid=22031)[0m     @     0x7fcae005bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22031)[0m     @     0x7fcadd34f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22031)[0m     @     0x7fcadd352977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22031)[0m     @     0x7fcadd352b53 at::TensorIterator::for_each()
[2m[36m(pid=22031)[0m     @     0x7fcadd352e11 at::TensorIterator::for_each()
[2m[36m(pid=22031)[0m     @     0x7fcae006bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22031)[0m     @     0x7fcae008ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22031)[0m     @     0x7fcadd0cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22031)[0m     @     0x7fcadd0cac3f at::native::copy_impl()
[2m[36m(pid=22031)[0m     @     0x7fcadd0cbed4 at::native::copy_()
[2m[36m(pid=22020)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22020)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22020)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22020)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22020)[0m *** SIGSEGV (@0x0) received by PID 22020 (TID 0x7f9dd6317700) from PID 0; stack trace: ***
[2m[36m(pid=22020)[0m     @     0x7f9dd5ef0390 (unknown)
[2m[36m(pid=22020)[0m     @     0x7f6ed809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22020)[0m     @     0x7f6ed538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22020)[0m     @     0x7f6ed5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22020)[0m     @     0x7f6ed5392b53 at::TensorIterator::for_each()
[2m[36m(pid=22020)[0m     @     0x7f6ed5392e11 at::TensorIterator::for_each()
[2m[36m(pid=22020)[0m     @     0x7f6ed80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22020)[0m     @     0x7f6ed80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22066)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22066)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22066)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22066)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22066)[0m *** SIGSEGV (@0x0) received by PID 22066 (TID 0x7ff351a58700) from PID 0; stack trace: ***
[2m[36m(pid=22066)[0m     @     0x7ff351631390 (unknown)
[2m[36m(pid=22066)[0m     @     0x7fc45385bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22066)[0m     @     0x7fc450b4f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22066)[0m     @     0x7fc450b52977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22066)[0m     @     0x7fc450b52b53 at::TensorIterator::for_each()
[2m[36m(pid=22066)[0m     @     0x7fc450b52e11 at::TensorIterator::for_each()
[2m[36m(pid=22051)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22051)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22051)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22051)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22051)[0m *** SIGSEGV (@0x0) received by PID 22051 (TID 0x7fd5ccbe3700) from PID 0; stack trace: ***
[2m[36m(pid=22051)[0m     @     0x7fd5cc7bc390 (unknown)
[2m[36m(pid=22051)[0m     @     0x7fa6ce885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22051)[0m     @     0x7fa6cbb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22051)[0m     @     0x7fa6cbb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22051)[0m     @     0x7fa6cbb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=22051)[0m     @     0x7fa6cbb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=21952)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21952)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21952)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21952)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21952)[0m *** SIGSEGV (@0x0) received by PID 21952 (TID 0x7fd96cc19700) from PID 0; stack trace: ***
[2m[36m(pid=21952)[0m     @     0x7fd96c7f2390 (unknown)
[2m[36m(pid=21952)[0m     @     0x7faa6e7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21952)[0m     @     0x7faa6bace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21952)[0m     @     0x7faa6bad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21952)[0m     @     0x7faa6bad1b53 at::TensorIterator::for_each()
[2m[36m(pid=21952)[0m     @     0x7faa6bad1e11 at::TensorIterator::for_each()
[2m[36m(pid=21957)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21957)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21957)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21957)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21957)[0m *** SIGSEGV (@0x0) received by PID 21957 (TID 0x7f9a94f10700) from PID 0; stack trace: ***
[2m[36m(pid=21957)[0m     @     0x7f9a94ae9390 (unknown)
[2m[36m(pid=21957)[0m     @     0x7f6b96c5ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21957)[0m     @     0x7f6b93f5364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21957)[0m     @     0x7f6b93f56977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21957)[0m     @     0x7f6b93f56b53 at::TensorIterator::for_each()
[2m[36m(pid=21957)[0m     @     0x7f6b93f56e11 at::TensorIterator::for_each()
[2m[36m(pid=21957)[0m     @     0x7f6b96c6fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21957)[0m     @     0x7f6b96c92cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21957)[0m     @     0x7f6b93cd0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22018)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22018)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22018)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22018)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22018)[0m *** SIGSEGV (@0x0) received by PID 22018 (TID 0x7f6af6a95700) from PID 0; stack trace: ***
[2m[36m(pid=22018)[0m     @     0x7f6af666e390 (unknown)
[2m[36m(pid=22018)[0m     @     0x7f3bf884bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22018)[0m     @     0x7f3bf5b3f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22018)[0m     @     0x7f3bf5b42977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22018)[0m     @     0x7f3bf5b42b53 at::TensorIterator::for_each()
[2m[36m(pid=22018)[0m     @     0x7f3bf5b42e11 at::TensorIterator::for_each()
[2m[36m(pid=22053)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22053)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22053)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22053)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22053)[0m *** SIGSEGV (@0x0) received by PID 22053 (TID 0x7efeaa5c1700) from PID 0; stack trace: ***
[2m[36m(pid=22053)[0m     @     0x7efeaa19a390 (unknown)
[2m[36m(pid=22053)[0m     @     0x7ecfac3b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22053)[0m     @     0x7ecfa96a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22053)[0m     @     0x7ecfa96a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22053)[0m     @     0x7ecfa96a8b53 at::TensorIterator::for_each()
[2m[36m(pid=22053)[0m     @     0x7ecfa96a8e11 at::TensorIterator::for_each()
[2m[36m(pid=22053)[0m     @     0x7ecfac3c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22053)[0m     @     0x7ecfac3e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21955)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21955)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21955)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21955)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21955)[0m *** SIGSEGV (@0x0) received by PID 21955 (TID 0x7f4d6b135700) from PID 0; stack trace: ***
[2m[36m(pid=21955)[0m     @     0x7f4d6ad0e390 (unknown)
[2m[36m(pid=21955)[0m     @     0x7f1e6cf06fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21955)[0m     @     0x7f1e6a1fa64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21955)[0m     @     0x7f1e6a1fd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21955)[0m     @     0x7f1e6a1fdb53 at::TensorIterator::for_each()
[2m[36m(pid=21955)[0m     @     0x7f1e6a1fde11 at::TensorIterator::for_each()
[2m[36m(pid=21955)[0m     @     0x7f1e6cf16c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21942)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21942)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21942)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21966)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21966)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21966)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21966)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21966)[0m *** SIGSEGV (@0x0) received by PID 21966 (TID 0x7fc8a0266700) from PID 0; stack trace: ***
[2m[36m(pid=21966)[0m     @     0x7fc89fe3f390 (unknown)
[2m[36m(pid=21966)[0m     @     0x7f99a2055fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21966)[0m     @     0x7f999f34964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21966)[0m     @     0x7f999f34c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21966)[0m     @     0x7f999f34cb53 at::TensorIterator::for_each()
[2m[36m(pid=21966)[0m     @     0x7f999f34ce11 at::TensorIterator::for_each()
[2m[36m(pid=21966)[0m     @     0x7f99a2065c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22024)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22024)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22024)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22024)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22024)[0m *** SIGSEGV (@0x0) received by PID 22024 (TID 0x7f42521fc700) from PID 0; stack trace: ***
[2m[36m(pid=22024)[0m     @     0x7f4251dd5390 (unknown)
[2m[36m(pid=22024)[0m     @     0x7f1353e84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22024)[0m     @     0x7f135117864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22024)[0m     @     0x7f135117b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22024)[0m     @     0x7f135117bb53 at::TensorIterator::for_each()
[2m[36m(pid=22024)[0m     @     0x7f135117be11 at::TensorIterator::for_each()
[2m[36m(pid=22024)[0m     @     0x7f1353e94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22024)[0m     @     0x7f1353eb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22024)[0m     @     0x7f1350ef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22024)[0m     @     0x7f1350ef3c3f at::native::copy_impl()
[2m[36m(pid=22057)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22057)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22057)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22057)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22057)[0m *** SIGSEGV (@0x0) received by PID 22057 (TID 0x7f8ac2330700) from PID 0; stack trace: ***
[2m[36m(pid=22057)[0m     @     0x7f8ac1f09390 (unknown)
[2m[36m(pid=22057)[0m     @     0x7f5bc409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22057)[0m     @     0x7f5bc138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22057)[0m     @     0x7f5bc1392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22057)[0m     @     0x7f5bc1392b53 at::TensorIterator::for_each()
[2m[36m(pid=22057)[0m     @     0x7f5bc1392e11 at::TensorIterator::for_each()
[2m[36m(pid=22057)[0m     @     0x7f5bc40abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22057)[0m     @     0x7f5bc40cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22057)[0m     @     0x7f5bc110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22057)[0m     @     0x7f5bc110ac3f at::native::copy_impl()
[2m[36m(pid=22057)[0m     @     0x7f5bc110bed4 at::native::copy_()
[2m[36m(pid=22057)[0m     @     0x7f5bc184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21968)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21968)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21968)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21968)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21968)[0m *** SIGSEGV (@0x0) received by PID 21968 (TID 0x7fb4f0421700) from PID 0; stack trace: ***
[2m[36m(pid=21968)[0m     @     0x7fb4efffa390 (unknown)
[2m[36m(pid=21968)[0m     @     0x7f85f1fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21968)[0m     @     0x7f85ef29764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21968)[0m     @     0x7f85ef29a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21968)[0m     @     0x7f85ef29ab53 at::TensorIterator::for_each()
[2m[36m(pid=21968)[0m     @     0x7f85ef29ae11 at::TensorIterator::for_each()
[2m[36m(pid=21962)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21962)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21962)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21962)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21962)[0m *** SIGSEGV (@0x0) received by PID 21962 (TID 0x7f0f92dea700) from PID 0; stack trace: ***
[2m[36m(pid=21962)[0m     @     0x7f0f929c3390 (unknown)
[2m[36m(pid=21962)[0m     @     0x7ee094981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21962)[0m     @     0x7ee091c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21962)[0m     @     0x7ee091c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21962)[0m     @     0x7ee091c78b53 at::TensorIterator::for_each()
[2m[36m(pid=21962)[0m     @     0x7ee091c78e11 at::TensorIterator::for_each()
[2m[36m(pid=21962)[0m     @     0x7ee094991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21962)[0m     @     0x7ee0949b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22064)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22064)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22064)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22064)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22064)[0m *** SIGSEGV (@0x0) received by PID 22064 (TID 0x7faa7186c700) from PID 0; stack trace: ***
[2m[36m(pid=22064)[0m     @     0x7faa71445390 (unknown)
[2m[36m(pid=22064)[0m     @     0x7f7b73643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22064)[0m     @     0x7f7b7093764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22064)[0m     @     0x7f7b7093a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22064)[0m     @     0x7f7b7093ab53 at::TensorIterator::for_each()
[2m[36m(pid=22064)[0m     @     0x7f7b7093ae11 at::TensorIterator::for_each()
[2m[36m(pid=22064)[0m     @     0x7f7b73653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22064)[0m     @     0x7f7b73676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22064)[0m     @     0x7f7b706b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22064)[0m     @     0x7f7b706b2c3f at::native::copy_impl()
[2m[36m(pid=22064)[0m     @     0x7f7b706b3ed4 at::native::copy_()
[2m[36m(pid=22033)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22033)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22033)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22033)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22033)[0m *** SIGSEGV (@0x0) received by PID 22033 (TID 0x7fadf3a92700) from PID 0; stack trace: ***
[2m[36m(pid=22033)[0m     @     0x7fadf366b390 (unknown)
[2m[36m(pid=22033)[0m     @     0x7f7ef5869fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22033)[0m     @     0x7f7ef2b5d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22033)[0m     @     0x7f7ef2b60977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22033)[0m     @     0x7f7ef2b60b53 at::TensorIterator::for_each()
[2m[36m(pid=22033)[0m     @     0x7f7ef2b60e11 at::TensorIterator::for_each()
[2m[36m(pid=22033)[0m     @     0x7f7ef5879c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22033)[0m     @     0x7f7ef589ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22033)[0m     @     0x7f7ef28da009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22033)[0m     @     0x7f7ef28d8c3f at::native::copy_impl()
[2m[36m(pid=21954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21954)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21954)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21954)[0m *** SIGSEGV (@0x0) received by PID 21954 (TID 0x7f6e73788700) from PID 0; stack trace: ***
[2m[36m(pid=21954)[0m     @     0x7f6e73361390 (unknown)
[2m[36m(pid=21954)[0m     @     0x7f3f754a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21954)[0m     @     0x7f3f7279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21954)[0m     @     0x7f3f72797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21954)[0m     @     0x7f3f72797b53 at::TensorIterator::for_each()
[2m[36m(pid=21954)[0m     @     0x7f3f72797e11 at::TensorIterator::for_each()
[2m[36m(pid=21954)[0m     @     0x7f3f754b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21954)[0m     @     0x7f3f754d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21954)[0m     @     0x7f3f72511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21954)[0m     @     0x7f3f7250fc3f at::native::copy_impl()
[2m[36m(pid=21954)[0m     @     0x7f3f72510ed4 at::native::copy_()
[2m[36m(pid=21945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21945)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21945)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21945)[0m *** SIGSEGV (@0x0) received by PID 21945 (TID 0x7f444fb79700) from PID 0; stack trace: ***
[2m[36m(pid=21945)[0m     @     0x7f444f752390 (unknown)
[2m[36m(pid=21945)[0m     @     0x7f1550e9efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21945)[0m     @     0x7f154e19264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21945)[0m     @     0x7f154e195977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21945)[0m     @     0x7f154e195b53 at::TensorIterator::for_each()
[2m[36m(pid=21945)[0m     @     0x7f154e195e11 at::TensorIterator::for_each()
[2m[36m(pid=21945)[0m     @     0x7f1550eaec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22026)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22026)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22026)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22026)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22026)[0m *** SIGSEGV (@0x0) received by PID 22026 (TID 0x7fdc72f53700) from PID 0; stack trace: ***
[2m[36m(pid=22026)[0m     @     0x7fdc72b2c390 (unknown)
[2m[36m(pid=22026)[0m     @     0x7fad74c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22026)[0m     @     0x7fad71f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22026)[0m     @     0x7fad71f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22026)[0m     @     0x7fad71f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=22026)[0m     @     0x7fad71f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=22026)[0m     @     0x7fad74c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22026)[0m     @     0x7fad74c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22026)[0m     @     0x7fad71cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22026)[0m     @     0x7fad71cb2c3f at::native::copy_impl()
[2m[36m(pid=22026)[0m     @     0x7fad71cb3ed4 at::native::copy_()
[2m[36m(pid=22011)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22011)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22011)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22011)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22011)[0m *** SIGSEGV (@0x0) received by PID 22011 (TID 0x7fb10d0ab700) from PID 0; stack trace: ***
[2m[36m(pid=22011)[0m     @     0x7fb10cc84390 (unknown)
[2m[36m(pid=22011)[0m     @     0x7f820ed02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22011)[0m     @     0x7f820bff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22011)[0m     @     0x7f820bff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22011)[0m     @     0x7f820bff9b53 at::TensorIterator::for_each()
[2m[36m(pid=22011)[0m     @     0x7f820bff9e11 at::TensorIterator::for_each()
[2m[36m(pid=22011)[0m     @     0x7f820ed12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22011)[0m     @     0x7f820ed35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22011)[0m     @     0x7f820bd73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22011)[0m     @     0x7f820bd71c3f at::native::copy_impl()
[2m[36m(pid=22075)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22075)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22075)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22075)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22075)[0m *** SIGSEGV (@0x0) received by PID 22075 (TID 0x7f78883ad700) from PID 0; stack trace: ***
[2m[36m(pid=22075)[0m     @     0x7f7887f86390 (unknown)
[2m[36m(pid=22075)[0m     @     0x7f498a082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22075)[0m     @     0x7f498737664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22075)[0m     @     0x7f4987379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22075)[0m     @     0x7f4987379b53 at::TensorIterator::for_each()
[2m[36m(pid=22075)[0m     @     0x7f4987379e11 at::TensorIterator::for_each()
[2m[36m(pid=22075)[0m     @     0x7f498a092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22075)[0m     @     0x7f498a0b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22075)[0m     @     0x7f49870f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22075)[0m     @     0x7f49870f1c3f at::native::copy_impl()
[2m[36m(pid=22048)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22048)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22048)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22048)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22048)[0m *** SIGSEGV (@0x0) received by PID 22048 (TID 0x7fa383463700) from PID 0; stack trace: ***
[2m[36m(pid=22048)[0m     @     0x7fa38303c390 (unknown)
[2m[36m(pid=22048)[0m     @     0x7f748524bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22048)[0m     @     0x7f748253f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22048)[0m     @     0x7f7482542977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22048)[0m     @     0x7f7482542b53 at::TensorIterator::for_each()
[2m[36m(pid=22048)[0m     @     0x7f7482542e11 at::TensorIterator::for_each()
[2m[36m(pid=22048)[0m     @     0x7f748525bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22048)[0m     @     0x7f748527ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22048)[0m     @     0x7f74822bc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22048)[0m     @     0x7f74822bac3f at::native::copy_impl()
[2m[36m(pid=22045)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22045)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22045)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22045)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22045)[0m *** SIGSEGV (@0x0) received by PID 22045 (TID 0x7f0b07d7b700) from PID 0; stack trace: ***
[2m[36m(pid=22045)[0m     @     0x7f0b07954390 (unknown)
[2m[36m(pid=22045)[0m     @     0x7edc09b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22045)[0m     @     0x7edc06e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22045)[0m     @     0x7edc06e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22045)[0m     @     0x7edc06e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=22045)[0m     @     0x7edc06e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=22045)[0m     @     0x7edc09b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22045)[0m     @     0x7edc09b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22013)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22013)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22013)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22013)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22013)[0m *** SIGSEGV (@0x0) received by PID 22013 (TID 0x7ff701a08700) from PID 0; stack trace: ***
[2m[36m(pid=22013)[0m     @     0x7ff7015e1390 (unknown)
[2m[36m(pid=22013)[0m     @     0x7fc803756fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22013)[0m     @     0x7fc800a4a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22013)[0m     @     0x7fc800a4d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22013)[0m     @     0x7fc800a4db53 at::TensorIterator::for_each()
[2m[36m(pid=22013)[0m     @     0x7fc800a4de11 at::TensorIterator::for_each()
[2m[36m(pid=22013)[0m     @     0x7fc803766c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22013)[0m     @     0x7fc803789cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21943)[0m     @     0x7f0a83ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=21943)[0m     @     0x7f0a83ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=21943)[0m     @     0x7f0a867eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22027)[0m     @     0x7f87101a1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22027)[0m     @     0x7f871019fc3f at::native::copy_impl()
[2m[36m(pid=22027)[0m     @     0x7f87101a0ed4 at::native::copy_()
[2m[36m(pid=22056)[0m     @     0x7f0a49d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22056)[0m     @     0x7f0a49d07c3f at::native::copy_impl()
[2m[36m(pid=22056)[0m     @     0x7f0a49d08ed4 at::native::copy_()
[2m[36m(pid=22016)[0m     @     0x7f90eb8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22016)[0m     @     0x7f90eb8f4c3f at::native::copy_impl()
[2m[36m(pid=22016)[0m     @     0x7f90eb8f5ed4 at::native::copy_()
[2m[36m(pid=22019)[0m     @     0x7ed52163be11 at::TensorIterator::for_each()
[2m[36m(pid=22019)[0m     @     0x7ed524354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22019)[0m     @     0x7ed524377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21960)[0m     @     0x7fb5116a8b53 at::TensorIterator::for_each()
[2m[36m(pid=21960)[0m     @     0x7fb5116a8e11 at::TensorIterator::for_each()
[2m[36m(pid=21960)[0m     @     0x7fb5143c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22030)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22030)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22030)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22030)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22030)[0m *** SIGSEGV (@0x0) received by PID 22030 (TID 0x7f914646b700) from PID 0; stack trace: ***
[2m[36m(pid=22002)[0m     @     0x7ecf39280b53 at::TensorIterator::for_each()
[2m[36m(pid=22002)[0m     @     0x7ecf39280e11 at::TensorIterator::for_each()
[2m[36m(pid=22037)[0m     @     0x7f99535fbb53 at::TensorIterator::for_each()
[2m[36m(pid=22037)[0m     @     0x7f99535fbe11 at::TensorIterator::for_each()
[2m[36m(pid=22037)[0m     @     0x7f9956314c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21941)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21941)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21941)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22006)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22006)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22006)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22006)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22006)[0m *** SIGSEGV (@0x0) received by PID 22006 (TID 0x7fcc1d2cd700) from PID 0; stack trace: ***
[2m[36m(pid=22006)[0m     @     0x7fcc1cea6390 (unknown)
[2m[36m(pid=22006)[0m     @     0x7f9d1f0aefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22006)[0m     @     0x7f9d1c3a264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21948)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21948)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21948)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21948)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21948)[0m *** SIGSEGV (@0x0) received by PID 21948 (TID 0x7f40790de700) from PID 0; stack trace: ***
[2m[36m(pid=22060)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22060)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22060)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22060)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22060)[0m *** SIGSEGV (@0x0) received by PID 22060 (TID 0x7ffbdb424700) from PID 0; stack trace: ***
[2m[36m(pid=22060)[0m     @     0x7ffbdaffd390 (unknown)
[2m[36m(pid=22060)[0m     @     0x7fccdd18afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22010)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22010)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22010)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22010)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22010)[0m *** SIGSEGV (@0x0) received by PID 22010 (TID 0x7fbc9add7700) from PID 0; stack trace: ***
[2m[36m(pid=22010)[0m     @     0x7fbc9a9b0390 (unknown)
[2m[36m(pid=22010)[0m     @     0x7f8d9c981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22010)[0m     @     0x7f8d99c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21946)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21946)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21946)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21946)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21946)[0m *** SIGSEGV (@0x0) received by PID 21946 (TID 0x7fe2d75ea700) from PID 0; stack trace: ***
[2m[36m(pid=21946)[0m     @     0x7fe2d71c3390 (unknown)
[2m[36m(pid=21946)[0m     @     0x7fb3d938cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21946)[0m     @     0x7fb3d668064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22014)[0m     @     0x7f22edf8fb53 at::TensorIterator::for_each()
[2m[36m(pid=22014)[0m     @     0x7f22edf8fe11 at::TensorIterator::for_each()
[2m[36m(pid=22014)[0m     @     0x7f22f0ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22014)[0m     @     0x7f22f0ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22014)[0m     @     0x7f22edd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22015)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22015)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22015)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22015)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22015)[0m *** SIGSEGV (@0x0) received by PID 22015 (TID 0x7fc54e658700) from PID 0; stack trace: ***
[2m[36m(pid=22015)[0m     @     0x7fc54e231390 (unknown)
[2m[36m(pid=22015)[0m     @     0x7f96503b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22015)[0m     @     0x7f964d6a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21949)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21949)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21949)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21949)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21949)[0m *** SIGSEGV (@0x0) received by PID 21949 (TID 0x7f87b1e2e700) from PID 0; stack trace: ***
[2m[36m(pid=22035)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22035)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22035)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22035)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22035)[0m *** SIGSEGV (@0x0) received by PID 22035 (TID 0x7f90631c6700) from PID 0; stack trace: ***
[2m[36m(pid=22035)[0m     @     0x7f9062d9f390 (unknown)
[2m[36m(pid=21940)[0m     @     0x7fbae6f91b53 at::TensorIterator::for_each()
[2m[36m(pid=21940)[0m     @     0x7fbae6f91e11 at::TensorIterator::for_each()
[2m[36m(pid=21940)[0m     @     0x7fbae9caac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21940)[0m     @     0x7fbae9ccdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21940)[0m     @     0x7fbae6d0b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21947)[0m     @     0x7fb23e3d4b53 at::TensorIterator::for_each()
[2m[36m(pid=21947)[0m     @     0x7fb23e3d4e11 at::TensorIterator::for_each()
[2m[36m(pid=21947)[0m     @     0x7fb2410edc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21947)[0m     @     0x7fb241110cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21969)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21969)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21969)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21969)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21969)[0m *** SIGSEGV (@0x0) received by PID 21969 (TID 0x7ff9c67f6700) from PID 0; stack trace: ***
[2m[36m(pid=21969)[0m     @     0x7ff9c63cf390 (unknown)
[2m[36m(pid=21969)[0m     @     0x7fcac85c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21969)[0m     @     0x7fcac58b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22071)[0m     @     0x7f0f406d4b53 at::TensorIterator::for_each()
[2m[36m(pid=22071)[0m     @     0x7f0f406d4e11 at::TensorIterator::for_each()
[2m[36m(pid=22071)[0m     @     0x7f0f433edc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22071)[0m     @     0x7f0f43410cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22071)[0m     @     0x7f0f4044e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21950)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21950)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21950)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21950)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21950)[0m *** SIGSEGV (@0x0) received by PID 21950 (TID 0x7f8b4ce40700) from PID 0; stack trace: ***
[2m[36m(pid=21950)[0m     @     0x7f8b4ca19390 (unknown)
[2m[36m(pid=21950)[0m     @     0x7f5c4e9b5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21950)[0m     @     0x7f5c4bca964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21965)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21965)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21965)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21965)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21965)[0m *** SIGSEGV (@0x0) received by PID 21965 (TID 0x7ff6cce07700) from PID 0; stack trace: ***
[2m[36m(pid=21965)[0m     @     0x7ff6cc9e0390 (unknown)
[2m[36m(pid=21965)[0m     @     0x7fc7cea9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21965)[0m     @     0x7fc7cbd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22001)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22001)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21956)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21956)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21956)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21956)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21956)[0m *** SIGSEGV (@0x0) received by PID 21956 (TID 0x7fbb1316a700) from PID 0; stack trace: ***
[2m[36m(pid=21956)[0m     @     0x7fbb12d43390 (unknown)
[2m[36m(pid=21956)[0m     @     0x7f8c14f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21956)[0m     @     0x7f8c1226764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21956)[0m     @     0x7f8c1226a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21944)[0m     @     0x7f3cc90d0e11 at::TensorIterator::for_each()
[2m[36m(pid=21944)[0m     @     0x7f3ccbde9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21944)[0m     @     0x7f3ccbe0ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21944)[0m     @     0x7f3cc8e4a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21944)[0m     @     0x7f3cc8e48c3f at::native::copy_impl()
[2m[36m(pid=21967)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21967)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21967)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21967)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21967)[0m *** SIGSEGV (@0x0) received by PID 21967 (TID 0x7f7a409a6700) from PID 0; stack trace: ***
[2m[36m(pid=22003)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22003)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22000)[0m     @     0x7f4de8f78e11 at::TensorIterator::for_each()
[2m[36m(pid=22000)[0m     @     0x7f4debc91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22000)[0m     @     0x7f4debcb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22000)[0m     @     0x7f4de8cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22000)[0m     @     0x7f4de8cf0c3f at::native::copy_impl()
[2m[36m(pid=21958)[0m     @     0x7f0c4cd67e11 at::TensorIterator::for_each()
[2m[36m(pid=21958)[0m     @     0x7f0c4fa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21958)[0m     @     0x7f0c4faa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21958)[0m     @     0x7f0c4cae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21958)[0m     @     0x7f0c4cadfc3f at::native::copy_impl()
[2m[36m(pid=22029)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22029)[0m *** SIGSEGV (@0x0) received by PID 22029 (TID 0x7fa3f2f67700) from PID 0; stack trace: ***
[2m[36m(pid=22029)[0m     @     0x7fa3f2b40390 (unknown)
[2m[36m(pid=22029)[0m     @     0x7f74f4bf5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22029)[0m     @     0x7f74f1ee964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22008)[0m     @     0x7f8495f89390 (unknown)
[2m[36m(pid=22008)[0m     @     0x7f559809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22008)[0m     @     0x7f559538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22008)[0m     @     0x7f5595392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21974)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21974)[0m *** SIGSEGV (@0x0) received by PID 21974 (TID 0x7f2954a3b700) from PID 0; stack trace: ***
[2m[36m(pid=21974)[0m     @     0x7f2954614390 (unknown)
[2m[36m(pid=21974)[0m     @     0x7efa56818fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21974)[0m     @     0x7efa53b0c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21964)[0m     @     0x7f617f8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=21964)[0m     @     0x7f61825bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21964)[0m     @     0x7f61825ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21964)[0m     @     0x7f617f61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21964)[0m     @     0x7f617f619c3f at::native::copy_impl()
[2m[36m(pid=22012)[0m     @     0x7fa4d4662e11 at::TensorIterator::for_each()
[2m[36m(pid=22012)[0m     @     0x7fa4d737bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22012)[0m     @     0x7fa4d739ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22012)[0m     @     0x7fa4d43dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22012)[0m     @     0x7fa4d43dac3f at::native::copy_impl()
[2m[36m(pid=22022)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22022)[0m *** SIGSEGV (@0x0) received by PID 22022 (TID 0x7f090c106700) from PID 0; stack trace: ***
[2m[36m(pid=22022)[0m     @     0x7f090bcdf390 (unknown)
[2m[36m(pid=22022)[0m     @     0x7eda0dd6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22022)[0m     @     0x7eda0b06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22017)[0m     @     0x7ef457d93e11 at::TensorIterator::for_each()
[2m[36m(pid=22017)[0m     @     0x7ef45aaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22017)[0m     @     0x7ef45aacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22017)[0m     @     0x7ef457b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22017)[0m     @     0x7ef457b0bc3f at::native::copy_impl()
[2m[36m(pid=22058)[0m     @     0x7f921b17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22058)[0m     @     0x7f921b283148 at::Tensor::copy_()
[2m[36m(pid=22061)[0m     @     0x7f23c319e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22061)[0m     @     0x7f23c319cc3f at::native::copy_impl()
[2m[36m(pid=22061)[0m     @     0x7f23c319ded4 at::native::copy_()
[2m[36m(pid=22028)[0m     @     0x7f382df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22028)[0m     @     0x7f382e02b148 at::Tensor::copy_()
[2m[36m(pid=22028)[0m     @     0x7f382fc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22068)[0m     @     0x7f54b419e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22068)[0m     @     0x7f54b42a6148 at::Tensor::copy_()
[2m[36m(pid=22068)[0m     @     0x7f54b5e9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22021)[0m     @     0x7f392b863ed4 at::native::copy_()
[2m[36m(pid=22021)[0m     @     0x7f392bfa65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21961)[0m     @     0x7edcea7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21961)[0m     @     0x7edcea80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21961)[0m     @     0x7edce784b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21961)[0m     @     0x7edce7849c3f at::native::copy_impl()
[2m[36m(pid=22049)[0m     @     0x7f835c5d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22049)[0m     @     0x7f835c5f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22049)[0m     @     0x7f8359633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22049)[0m     @     0x7f8359631c3f at::native::copy_impl()
[2m[36m(pid=21963)[0m     @     0x7ef2878085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21963)[0m     @     0x7ef287910148 at::Tensor::copy_()
[2m[36m(pid=21963)[0m     @     0x7ef289507989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21951)[0m     @     0x7ee78e3e0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21951)[0m     @     0x7ee78b41e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21951)[0m     @     0x7ee78b41cc3f at::native::copy_impl()
[2m[36m(pid=22031)[0m     @     0x7fcadd80e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22031)[0m     @     0x7fcadd916148 at::Tensor::copy_()
[2m[36m(pid=22031)[0m     @     0x7fcadf50d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22020)[0m     @     0x7f6ed510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22020)[0m     @     0x7f6ed510ac3f at::native::copy_impl()
[2m[36m(pid=22020)[0m     @     0x7f6ed510bed4 at::native::copy_()
[2m[36m(pid=22066)[0m     @     0x7fc45386bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22066)[0m     @     0x7fc45388ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22066)[0m     @     0x7fc4508cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22066)[0m     @     0x7fc4508cac3f at::native::copy_impl()
[2m[36m(pid=22051)[0m     @     0x7fa6ce895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22051)[0m     @     0x7fa6ce8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22051)[0m     @     0x7fa6cb8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22051)[0m     @     0x7fa6cb8f4c3f at::native::copy_impl()
[2m[36m(pid=21952)[0m     @     0x7faa6e7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21952)[0m     @     0x7faa6e80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21952)[0m     @     0x7faa6b84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21952)[0m     @     0x7faa6b849c3f at::native::copy_impl()
[2m[36m(pid=21957)[0m     @     0x7f6b93ccec3f at::native::copy_impl()
[2m[36m(pid=21957)[0m     @     0x7f6b93ccfed4 at::native::copy_()
[2m[36m(pid=21957)[0m     @     0x7f6b944125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22018)[0m     @     0x7f3bf885bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22018)[0m     @     0x7f3bf887ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22018)[0m     @     0x7f3bf58bc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22018)[0m     @     0x7f3bf58bac3f at::native::copy_impl()
[2m[36m(pid=22018)[0m     @     0x7f3bf58bbed4 at::native::copy_()
[2m[36m(pid=22018)[0m     @     0x7f3bf5ffe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22053)[0m     @     0x7ecfa9422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22053)[0m     @     0x7ecfa9420c3f at::native::copy_impl()
[2m[36m(pid=22053)[0m     @     0x7ecfa9421ed4 at::native::copy_()
[2m[36m(pid=22053)[0m     @     0x7ecfa9b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22053)[0m     @     0x7ecfa9c6c148 at::Tensor::copy_()
[2m[36m(pid=21955)[0m     @     0x7f1e6cf39cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21955)[0m     @     0x7f1e69f77009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21955)[0m     @     0x7f1e69f75c3f at::native::copy_impl()
[2m[36m(pid=21955)[0m     @     0x7f1e69f76ed4 at::native::copy_()
[2m[36m(pid=21955)[0m     @     0x7f1e6a6b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21942)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21942)[0m *** SIGSEGV (@0x0) received by PID 21942 (TID 0x7f85f41d8700) from PID 0; stack trace: ***
[2m[36m(pid=21942)[0m     @     0x7f85f3db1390 (unknown)
[2m[36m(pid=21942)[0m     @     0x7f56f5da0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21942)[0m     @     0x7f56f309464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21942)[0m     @     0x7f56f3097977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21942)[0m     @     0x7f56f3097b53 at::TensorIterator::for_each()
[2m[36m(pid=21966)[0m     @     0x7f99a2088cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21966)[0m     @     0x7f999f0c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21966)[0m     @     0x7f999f0c4c3f at::native::copy_impl()
[2m[36m(pid=21966)[0m     @     0x7f999f0c5ed4 at::native::copy_()
[2m[36m(pid=21966)[0m     @     0x7f999f8085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22024)[0m     @     0x7f1350ef4ed4 at::native::copy_()
[2m[36m(pid=22024)[0m     @     0x7f13516375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22024)[0m     @     0x7f135173f148 at::Tensor::copy_()
[2m[36m(pid=22024)[0m     @     0x7f1353336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22024)[0m     @     0x7f13516375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22024)[0m     @     0x7f135173f148 at::Tensor::copy_()
[2m[36m(pid=22057)[0m     @     0x7f5bc1956148 at::Tensor::copy_()
[2m[36m(pid=22057)[0m     @     0x7f5bc354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22057)[0m     @     0x7f5bc184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22057)[0m     @     0x7f5bc1956148 at::Tensor::copy_()
[2m[36m(pid=22057)[0m     @     0x7f5bc7c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22057)[0m     @     0x563f1108efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22057)[0m     @     0x563f10fe9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22057)[0m     @     0x563f11074baf _PyEval_EvalCodeWithName
[2m[36m(pid=22057)[0m     @     0x563f11075a20 method_vectorcall
[2m[36m(pid=22057)[0m     @     0x563f10fe9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22057)[0m     @     0x563f11074baf _PyEval_EvalCodeWithName
[2m[36m(pid=22057)[0m     @     0x563f11075643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22057)[0m     @     0x563f10fea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22057)[0m     @     0x563f11074baf _PyEval_EvalCodeWithName
[2m[36m(pid=22057)[0m     @     0x563f11075643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22057)[0m     @     0x563f10fea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21968)[0m     @     0x7f85f1fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21968)[0m     @     0x7f85f1fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21968)[0m     @     0x7f85ef014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21968)[0m     @     0x7f85ef012c3f at::native::copy_impl()
[2m[36m(pid=21968)[0m     @     0x7f85ef013ed4 at::native::copy_()
[2m[36m(pid=21968)[0m     @     0x7f85ef7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21962)[0m     @     0x7ee0919f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21962)[0m     @     0x7ee0919f0c3f at::native::copy_impl()
[2m[36m(pid=21962)[0m     @     0x7ee0919f1ed4 at::native::copy_()
[2m[36m(pid=21962)[0m     @     0x7ee0921345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22064)[0m     @     0x7f7b70df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22064)[0m     @     0x7f7b70efe148 at::Tensor::copy_()
[2m[36m(pid=22064)[0m     @     0x7f7b72af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22064)[0m     @     0x7f7b70df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22033)[0m     @     0x7f7ef28d9ed4 at::native::copy_()
[2m[36m(pid=22033)[0m     @     0x7f7ef301c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22033)[0m     @     0x7f7ef3124148 at::Tensor::copy_()
[2m[36m(pid=22033)[0m     @     0x7f7ef4d1b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22033)[0m     @     0x7f7ef301c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21954)[0m     @     0x7f3f72c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21954)[0m     @     0x7f3f72d5b148 at::Tensor::copy_()
[2m[36m(pid=21954)[0m     @     0x7f3f74952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21954)[0m     @     0x7f3f72c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21954)[0m     @     0x7f3f72d5b148 at::Tensor::copy_()
[2m[36m(pid=21954)[0m     @     0x7f3f79011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21954)[0m     @     0x563d0fbe2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21954)[0m     @     0x563d0fb3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21954)[0m     @     0x563d0fbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=21954)[0m     @     0x563d0fbc9a20 method_vectorcall
[2m[36m(pid=21954)[0m     @     0x563d0fb3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21954)[0m     @     0x563d0fbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=21954)[0m     @     0x563d0fbc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21954)[0m     @     0x563d0fb3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21954)[0m     @     0x563d0fbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=21954)[0m     @     0x563d0fbc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21954)[0m     @     0x563d0fb3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21945)[0m     @     0x7f1550ed1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21945)[0m     @     0x7f154df0f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21945)[0m     @     0x7f154df0dc3f at::native::copy_impl()
[2m[36m(pid=21945)[0m     @     0x7f154df0eed4 at::native::copy_()
[2m[36m(pid=21945)[0m     @     0x7f154e6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22026)[0m     @     0x7fad723f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22026)[0m     @     0x7fad724fe148 at::Tensor::copy_()
[2m[36m(pid=22026)[0m     @     0x7fad740f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22026)[0m     @     0x7fad723f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22026)[0m     @     0x7fad724fe148 at::Tensor::copy_()
[2m[36m(pid=22026)[0m     @     0x7fad787b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22026)[0m     @     0x561e5fdf1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22026)[0m     @     0x561e5fd4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22026)[0m     @     0x561e5fdd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22026)[0m     @     0x561e5fdd8a20 method_vectorcall
[2m[36m(pid=22026)[0m     @     0x561e5fd4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22026)[0m     @     0x561e5fdd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22026)[0m     @     0x561e5fdd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22026)[0m     @     0x561e5fd4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22026)[0m     @     0x561e5fdd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22026)[0m     @     0x561e5fdd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22026)[0m     @     0x561e5fd4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22026)[0m     @     0x561e5fdd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22026)[0m     @     0x561e5fdd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22011)[0m     @     0x7f820bd72ed4 at::native::copy_()
[2m[36m(pid=22011)[0m     @     0x7f820c4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22011)[0m     @     0x7f820c5bd148 at::Tensor::copy_()
[2m[36m(pid=22011)[0m     @     0x7f820e1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22011)[0m     @     0x7f820c4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22075)[0m     @     0x7f49870f2ed4 at::native::copy_()
[2m[36m(pid=22075)[0m     @     0x7f49878355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22075)[0m     @     0x7f498793d148 at::Tensor::copy_()
[2m[36m(pid=22075)[0m     @     0x7f4989534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22075)[0m     @     0x7f49878355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22048)[0m     @     0x7f74822bbed4 at::native::copy_()
[2m[36m(pid=22048)[0m     @     0x7f74829fe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22048)[0m     @     0x7f7482b06148 at::Tensor::copy_()
[2m[36m(pid=22048)[0m     @     0x7f74846fd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22045)[0m     @     0x7edc06bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22045)[0m     @     0x7edc06bc4c3f at::native::copy_impl()
[2m[36m(pid=22045)[0m     @     0x7edc06bc5ed4 at::native::copy_()
[2m[36m(pid=22045)[0m     @     0x7edc073085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22045)[0m     @     0x7edc07410148 at::Tensor::copy_()
[2m[36m(pid=22013)[0m     @     0x7fc8007c7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22013)[0m     @     0x7fc8007c5c3f at::native::copy_impl()
[2m[36m(pid=22013)[0m     @     0x7fc8007c6ed4 at::native::copy_()
[2m[36m(pid=22013)[0m     @     0x7fc800f095cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22013)[0m     @     0x7fc801011148 at::Tensor::copy_()
[2m[36m(pid=22041)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22041)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22041)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22041)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22041)[0m *** SIGSEGV (@0x0) received by PID 22041 (TID 0x7fe45c825700) from PID 0; stack trace: ***
[2m[36m(pid=22041)[0m     @     0x7fe45c3fe390 (unknown)
[2m[36m(pid=22041)[0m     @     0x7fb55e3adfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22041)[0m     @     0x7fb55b6a164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21943)[0m     @     0x7f0a8680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21943)[0m     @     0x7f0a8384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21943)[0m     @     0x7f0a83849c3f at::native::copy_impl()
[2m[36m(pid=21943)[0m     @     0x7f0a8384aed4 at::native::copy_()
[2m[36m(pid=21943)[0m     @     0x7f0a83f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22027)[0m     @     0x7f87108e35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22027)[0m     @     0x7f87109eb148 at::Tensor::copy_()
[2m[36m(pid=22027)[0m     @     0x7f87125e2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22027)[0m     @     0x7f87108e35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22027)[0m     @     0x7f87109eb148 at::Tensor::copy_()
[2m[36m(pid=22027)[0m     @     0x7f8716ca1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22027)[0m     @     0x557d69cddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22027)[0m     @     0x557d69c38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22027)[0m     @     0x557d69cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22027)[0m     @     0x557d69cc4a20 method_vectorcall
[2m[36m(pid=22027)[0m     @     0x557d69c38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22027)[0m     @     0x557d69cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22027)[0m     @     0x557d69cc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22027)[0m     @     0x557d69c39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22027)[0m     @     0x557d69cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22027)[0m     @     0x557d69cc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22027)[0m     @     0x557d69c39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22027)[0m     @     0x557d69cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22056)[0m     @     0x7f0a4a44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22056)[0m     @     0x7f0a4a553148 at::Tensor::copy_()
[2m[36m(pid=22056)[0m     @     0x7f0a4c14a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22056)[0m     @     0x7f0a4a44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22056)[0m     @     0x7f0a4a553148 at::Tensor::copy_()
[2m[36m(pid=22056)[0m     @     0x7f0a50809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22056)[0m     @     0x55db8bef7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22056)[0m     @     0x55db8be52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22056)[0m     @     0x55db8beddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22056)[0m     @     0x55db8bedea20 method_vectorcall
[2m[36m(pid=22056)[0m     @     0x55db8be52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22056)[0m     @     0x55db8beddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22056)[0m     @     0x55db8bede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22056)[0m     @     0x55db8be53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22056)[0m     @     0x55db8beddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22056)[0m     @     0x55db8bede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22056)[0m     @     0x55db8be53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22056)[0m     @     0x55db8beddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22056)[0m     @     0x55db8bede643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22056)[0m     @     0x55db8be53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22056)[0m     @     0x55db8beddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22016)[0m     @     0x7f90ec0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22016)[0m     @     0x7f90ec140148 at::Tensor::copy_()
[2m[36m(pid=22016)[0m     @     0x7f90edd37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22016)[0m     @     0x7f90ec0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22016)[0m     @     0x7f90ec140148 at::Tensor::copy_()
[2m[36m(pid=22016)[0m     @     0x7f90f23f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22016)[0m     @     0x5619bc881fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22016)[0m     @     0x5619bc7dcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22019)[0m     @     0x7ed5213b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22019)[0m     @     0x7ed5213b3c3f at::native::copy_impl()
[2m[36m(pid=22019)[0m     @     0x7ed5213b4ed4 at::native::copy_()
[2m[36m(pid=22019)[0m     @     0x7ed521af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22019)[0m     @     0x7ed521bff148 at::Tensor::copy_()
[2m[36m(pid=21960)[0m     @     0x7fb5143e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21960)[0m     @     0x7fb511422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21960)[0m     @     0x7fb511420c3f at::native::copy_impl()
[2m[36m(pid=21960)[0m     @     0x7fb511421ed4 at::native::copy_()
[2m[36m(pid=21960)[0m     @     0x7fb511b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22030)[0m     @     0x7f9146044390 (unknown)
[2m[36m(pid=22030)[0m     @     0x7f6247feafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22030)[0m     @     0x7f62452de64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22030)[0m     @     0x7f62452e1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22030)[0m     @     0x7f62452e1b53 at::TensorIterator::for_each()
[2m[36m(pid=22030)[0m     @     0x7f62452e1e11 at::TensorIterator::for_each()
[2m[36m(pid=22002)[0m     @     0x7ecf3bf99c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22002)[0m     @     0x7ecf3bfbccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22002)[0m     @     0x7ecf38ffa009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22002)[0m     @     0x7ecf38ff8c3f at::native::copy_impl()
[2m[36m(pid=22002)[0m     @     0x7ecf38ff9ed4 at::native::copy_()
[2m[36m(pid=22002)[0m     @     0x7ecf3973c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22046)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22046)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22046)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22046)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22046)[0m *** SIGSEGV (@0x0) received by PID 22046 (TID 0x7f923f975700) from PID 0; stack trace: ***
[2m[36m(pid=22046)[0m     @     0x7f923f54e390 (unknown)
[2m[36m(pid=22046)[0m     @     0x7f6341761fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22046)[0m     @     0x7f633ea5564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22037)[0m     @     0x7f9956337cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22037)[0m     @     0x7f9953375009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22037)[0m     @     0x7f9953373c3f at::native::copy_impl()
[2m[36m(pid=22037)[0m     @     0x7f9953374ed4 at::native::copy_()
[2m[36m(pid=22037)[0m     @     0x7f9953ab75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22025)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22025)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22025)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22025)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22025)[0m *** SIGSEGV (@0x0) received by PID 22025 (TID 0x7f0b6a2dc700) from PID 0; stack trace: ***
[2m[36m(pid=22025)[0m     @     0x7f0b69eb5390 (unknown)
[2m[36m(pid=21941)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21941)[0m *** SIGSEGV (@0x0) received by PID 21941 (TID 0x7f29350ee700) from PID 0; stack trace: ***
[2m[36m(pid=21941)[0m     @     0x7f2934cc7390 (unknown)
[2m[36m(pid=21941)[0m     @     0x7efa36bc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21941)[0m     @     0x7efa33ebd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22006)[0m     @     0x7f9d1c3a5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22006)[0m     @     0x7f9d1c3a5b53 at::TensorIterator::for_each()
[2m[36m(pid=22006)[0m     @     0x7f9d1c3a5e11 at::TensorIterator::for_each()
[2m[36m(pid=22006)[0m     @     0x7f9d1f0bec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22006)[0m     @     0x7f9d1f0e1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21948)[0m     @     0x7f4078cb7390 (unknown)
[2m[36m(pid=21948)[0m     @     0x7f117ae48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21948)[0m     @     0x7f117813c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21948)[0m     @     0x7f117813f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22060)[0m     @     0x7fccda47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22060)[0m     @     0x7fccda481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22060)[0m     @     0x7fccda481b53 at::TensorIterator::for_each()
[2m[36m(pid=22060)[0m     @     0x7fccda481e11 at::TensorIterator::for_each()
[2m[36m(pid=22010)[0m     @     0x7f8d99c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22010)[0m     @     0x7f8d99c78b53 at::TensorIterator::for_each()
[2m[36m(pid=22010)[0m     @     0x7f8d99c78e11 at::TensorIterator::for_each()
[2m[36m(pid=22010)[0m     @     0x7f8d9c991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21946)[0m     @     0x7fb3d6683977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21946)[0m     @     0x7fb3d6683b53 at::TensorIterator::for_each()
[2m[36m(pid=21946)[0m     @     0x7fb3d6683e11 at::TensorIterator::for_each()
[2m[36m(pid=21946)[0m     @     0x7fb3d939cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22014)[0m     @     0x7f22edd07c3f at::native::copy_impl()
[2m[36m(pid=22014)[0m     @     0x7f22edd08ed4 at::native::copy_()
[2m[36m(pid=22014)[0m     @     0x7f22ee44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22015)[0m     @     0x7f964d6a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22015)[0m     @     0x7f964d6a8b53 at::TensorIterator::for_each()
[2m[36m(pid=22015)[0m     @     0x7f964d6a8e11 at::TensorIterator::for_each()
[2m[36m(pid=22015)[0m     @     0x7f96503c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22015)[0m     @     0x7f96503e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21949)[0m     @     0x7f87b1a07390 (unknown)
[2m[36m(pid=21949)[0m     @     0x7f58b3a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21949)[0m     @     0x7f58b0d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21949)[0m     @     0x7f58b0d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21949)[0m     @     0x7f58b0d67b53 at::TensorIterator::for_each()
[2m[36m(pid=22035)[0m     @     0x7f6164f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22035)[0m     @     0x7f616226764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22035)[0m     @     0x7f616226a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22035)[0m     @     0x7f616226ab53 at::TensorIterator::for_each()
[2m[36m(pid=21940)[0m     @     0x7fbae6d09c3f at::native::copy_impl()
[2m[36m(pid=21940)[0m     @     0x7fbae6d0aed4 at::native::copy_()
[2m[36m(pid=21940)[0m     @     0x7fbae744d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21947)[0m     @     0x7fb23e14e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21947)[0m     @     0x7fb23e14cc3f at::native::copy_impl()
[2m[36m(pid=21947)[0m     @     0x7fb23e14ded4 at::native::copy_()
[2m[36m(pid=21947)[0m     @     0x7fb23e8905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21969)[0m     @     0x7fcac58b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21969)[0m     @     0x7fcac58b9b53 at::TensorIterator::for_each()
[2m[36m(pid=21969)[0m     @     0x7fcac58b9e11 at::TensorIterator::for_each()
[2m[36m(pid=22071)[0m     @     0x7f0f4044cc3f at::native::copy_impl()
[2m[36m(pid=22071)[0m     @     0x7f0f4044ded4 at::native::copy_()
[2m[36m(pid=22071)[0m     @     0x7f0f40b905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22044)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22044)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22044)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22044)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22044)[0m *** SIGSEGV (@0x0) received by PID 22044 (TID 0x7fa0e4601700) from PID 0; stack trace: ***
[2m[36m(pid=22044)[0m     @     0x7fa0e41da390 (unknown)
[2m[36m(pid=22044)[0m     @     0x7f71e5fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22044)[0m     @     0x7f71e329764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21971)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=21971)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=21971)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=21971)[0m PC: @                0x0 (unknown)
[2m[36m(pid=21971)[0m *** SIGSEGV (@0x0) received by PID 21971 (TID 0x7fcdd359a700) from PID 0; stack trace: ***
[2m[36m(pid=21971)[0m     @     0x7fcdd3173390 (unknown)
[2m[36m(pid=21950)[0m     @     0x7f5c4bcac977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21950)[0m     @     0x7f5c4bcacb53 at::TensorIterator::for_each()
[2m[36m(pid=21950)[0m     @     0x7f5c4bcace11 at::TensorIterator::for_each()
[2m[36m(pid=21950)[0m     @     0x7f5c4e9c5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21950)[0m     @     0x7f5c4e9e8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21965)[0m     @     0x7fc7cbd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21965)[0m     @     0x7fc7cbd93b53 at::TensorIterator::for_each()
[2m[36m(pid=21965)[0m     @     0x7fc7cbd93e11 at::TensorIterator::for_each()
[2m[36m(pid=21965)[0m     @     0x7fc7ceaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21965)[0m     @     0x7fc7ceacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22001)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22001)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22001)[0m *** SIGSEGV (@0x0) received by PID 22001 (TID 0x7f7619cb2700) from PID 0; stack trace: ***
[2m[36m(pid=22001)[0m     @     0x7f761988b390 (unknown)
[2m[36m(pid=22001)[0m     @     0x7f471ba70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22001)[0m     @     0x7f4718d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22001)[0m     @     0x7f4718d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22023)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=22023)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=22023)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22023)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22023)[0m *** SIGSEGV (@0x0) received by PID 22023 (TID 0x7f46857da700) from PID 0; stack trace: ***
[2m[36m(pid=22023)[0m     @     0x7f46853b3390 (unknown)
[2m[36m(pid=22023)[0m     @     0x7f17875d6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22023)[0m     @     0x7f17848ca64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21956)[0m     @     0x7f8c1226ab53 at::TensorIterator::for_each()
[2m[36m(pid=21956)[0m     @     0x7f8c1226ae11 at::TensorIterator::for_each()
[2m[36m(pid=21956)[0m     @     0x7f8c14f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21956)[0m     @     0x7f8c14fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21956)[0m     @     0x7f8c11fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21956)[0m     @     0x7f8c11fe2c3f at::native::copy_impl()
[2m[36m(pid=21944)[0m     @     0x7f3cc8e49ed4 at::native::copy_()
[2m[36m(pid=21944)[0m     @     0x7f3cc958c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21944)[0m     @     0x7f3cc9694148 at::Tensor::copy_()
[2m[36m(pid=21944)[0m     @     0x7f3ccb28b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21967)[0m     @     0x7f7a4057f390 (unknown)
[2m[36m(pid=21967)[0m     @     0x7f4b42798fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21967)[0m     @     0x7f4b3fa8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21967)[0m     @     0x7f4b3fa8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21967)[0m     @     0x7f4b3fa8fb53 at::TensorIterator::for_each()
[2m[36m(pid=21967)[0m     @     0x7f4b3fa8fe11 at::TensorIterator::for_each()
[2m[36m(pid=22003)[0m *** Aborted at 1604574180 (unix time) try "date -d @1604574180" if you are using GNU date ***
[2m[36m(pid=22003)[0m PC: @                0x0 (unknown)
[2m[36m(pid=22003)[0m *** SIGSEGV (@0x0) received by PID 22003 (TID 0x7f1c64066700) from PID 0; stack trace: ***
[2m[36m(pid=22003)[0m     @     0x7f1c63c3f390 (unknown)
[2m[36m(pid=22003)[0m     @     0x7eed65c3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22003)[0m     @     0x7eed62f3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=22003)[0m     @     0x7eed62f33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22000)[0m     @     0x7f4de8cf1ed4 at::native::copy_()
[2m[36m(pid=22000)[0m     @     0x7f4de94345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22000)[0m     @     0x7f4de953c148 at::Tensor::copy_()
[2m[36m(pid=22000)[0m     @     0x7f4deb133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21958)[0m     @     0x7f0c4cae0ed4 at::native::copy_()
[2m[36m(pid=21958)[0m     @     0x7f0c4d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21958)[0m     @     0x7f0c4d32b148 at::Tensor::copy_()
[2m[36m(pid=21958)[0m     @     0x7f0c4ef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22029)[0m     @     0x7f74f1eec977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22029)[0m     @     0x7f74f1eecb53 at::TensorIterator::for_each()
[2m[36m(pid=22029)[0m     @     0x7f74f1eece11 at::TensorIterator::for_each()
[2m[36m(pid=22029)[0m     @     0x7f74f4c05c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22029)[0m     @     0x7f74f4c28cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22008)[0m     @     0x7f5595392b53 at::TensorIterator::for_each()
[2m[36m(pid=22008)[0m     @     0x7f5595392e11 at::TensorIterator::for_each()
[2m[36m(pid=22008)[0m     @     0x7f55980abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22008)[0m     @     0x7f55980cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22008)[0m     @     0x7f559510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22008)[0m     @     0x7f559510ac3f at::native::copy_impl()
[2m[36m(pid=21974)[0m     @     0x7efa53b0f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21974)[0m     @     0x7efa53b0fb53 at::TensorIterator::for_each()
[2m[36m(pid=21974)[0m     @     0x7efa53b0fe11 at::TensorIterator::for_each()
[2m[36m(pid=21974)[0m     @     0x7efa56828c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21974)[0m     @     0x7efa5684bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21974)[0m     @     0x7efa53889009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21964)[0m     @     0x7f617f61aed4 at::native::copy_()
[2m[36m(pid=21964)[0m     @     0x7f617fd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21964)[0m     @     0x7f617fe65148 at::Tensor::copy_()
[2m[36m(pid=21964)[0m     @     0x7f6181a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22012)[0m     @     0x7fa4d43dbed4 at::native::copy_()
[2m[36m(pid=22012)[0m     @     0x7fa4d4b1e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22012)[0m     @     0x7fa4d4c26148 at::Tensor::copy_()
[2m[36m(pid=22012)[0m     @     0x7fa4d681d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22022)[0m     @     0x7eda0b063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22022)[0m     @     0x7eda0b063b53 at::TensorIterator::for_each()
[2m[36m(pid=22022)[0m     @     0x7eda0b063e11 at::TensorIterator::for_each()
[2m[36m(pid=22022)[0m     @     0x7eda0dd7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22022)[0m     @     0x7eda0dd9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22022)[0m     @     0x7eda0addd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22017)[0m     @     0x7ef457b0ced4 at::native::copy_()
[2m[36m(pid=22017)[0m     @     0x7ef45824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22017)[0m     @     0x7ef458357148 at::Tensor::copy_()
[2m[36m(pid=22017)[0m     @     0x7ef459f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22058)[0m     @     0x7f921ce7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22058)[0m     @     0x7f921b17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22058)[0m     @     0x7f921b283148 at::Tensor::copy_()
[2m[36m(pid=22058)[0m     @     0x7f9221539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22058)[0m     @     0x559a171c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22058)[0m     @     0x559a1711cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22058)[0m     @     0x559a171a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22058)[0m     @     0x559a171a8a20 method_vectorcall
[2m[36m(pid=22058)[0m     @     0x559a1711cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22058)[0m     @     0x559a171a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22058)[0m     @     0x559a171a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22058)[0m     @     0x559a1711d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22058)[0m     @     0x559a171a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22058)[0m     @     0x559a171a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22058)[0m     @     0x559a1711d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22058)[0m     @     0x559a171a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22058)[0m     @     0x559a171a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22058)[0m     @     0x559a1711d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22058)[0m     @     0x559a171a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22061)[0m     @     0x7f23c38e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22061)[0m     @     0x7f23c39e8148 at::Tensor::copy_()
[2m[36m(pid=22061)[0m     @     0x7f23c55df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22061)[0m     @     0x7f23c38e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22061)[0m     @     0x7f23c39e8148 at::Tensor::copy_()
[2m[36m(pid=22028)[0m     @     0x7f382df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22028)[0m     @     0x7f382e02b148 at::Tensor::copy_()
[2m[36m(pid=22028)[0m     @     0x7f38342e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22028)[0m     @     0x5620ffdd9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22028)[0m     @     0x5620ffd34b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22028)[0m     @     0x5620ffdbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22028)[0m     @     0x5620ffdc0a20 method_vectorcall
[2m[36m(pid=22028)[0m     @     0x5620ffd34bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22028)[0m     @     0x5620ffdbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22028)[0m     @     0x5620ffdc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22028)[0m     @     0x5620ffd35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22028)[0m     @     0x5620ffdbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22028)[0m     @     0x5620ffdc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22028)[0m     @     0x5620ffd35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22028)[0m     @     0x5620ffdbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22028)[0m     @     0x5620ffdc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22028)[0m     @     0x5620ffd35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22028)[0m     @     0x5620ffdbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22068)[0m     @     0x7f54b419e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22068)[0m     @     0x7f54b42a6148 at::Tensor::copy_()
[2m[36m(pid=22068)[0m     @     0x7f54ba55cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22068)[0m     @     0x55da54a4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22068)[0m     @     0x55da549a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22068)[0m     @     0x55da54a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=22068)[0m     @     0x55da54a34a20 method_vectorcall
[2m[36m(pid=22068)[0m     @     0x55da549a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22068)[0m     @     0x55da54a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=22068)[0m     @     0x55da54a34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22068)[0m     @     0x55da549a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22068)[0m     @     0x55da54a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=22068)[0m     @     0x55da54a34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22068)[0m     @     0x55da549a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22068)[0m     @     0x55da54a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=22068)[0m     @     0x55da54a34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22068)[0m     @     0x55da549a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22068)[0m     @     0x55da54a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=22021)[0m     @     0x7f392c0ae148 at::Tensor::copy_()
[2m[36m(pid=22021)[0m     @     0x7f392dca5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22021)[0m     @     0x7f392bfa65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22021)[0m     @     0x7f392c0ae148 at::Tensor::copy_()
[2m[36m(pid=22021)[0m     @     0x7f3932364bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22021)[0m     @     0x557f0799afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22021)[0m     @     0x557f078f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22021)[0m     @     0x557f07980baf _PyEval_EvalCodeWithName
[2m[36m(pid=22021)[0m     @     0x557f07981a20 method_vectorcall
[2m[36m(pid=22021)[0m     @     0x557f078f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22021)[0m     @     0x557f07980baf _PyEval_EvalCodeWithName
[2m[36m(pid=22021)[0m     @     0x557f07981643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22021)[0m     @     0x557f078f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22021)[0m     @     0x557f07980baf _PyEval_EvalCodeWithName
[2m[36m(pid=22021)[0m     @     0x557f07981643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22021)[0m     @     0x557f078f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22021)[0m     @     0x557f07980baf _PyEval_EvalCodeWithName
[2m[36m(pid=22021)[0m     @     0x557f07981643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22021)[0m     @     0x557f078f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22021)[0m     @     0x557f07980baf _PyEval_EvalCodeWithName
[2m[36m(pid=21961)[0m     @     0x7edce784aed4 at::native::copy_()
[2m[36m(pid=21961)[0m     @     0x7edce7f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21961)[0m     @     0x7edce8095148 at::Tensor::copy_()
[2m[36m(pid=21961)[0m     @     0x7edce9c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21961)[0m     @     0x7edce7f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22049)[0m     @     0x7f8359632ed4 at::native::copy_()
[2m[36m(pid=22049)[0m     @     0x7f8359d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22049)[0m     @     0x7f8359e7d148 at::Tensor::copy_()
[2m[36m(pid=22049)[0m     @     0x7f835ba74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21963)[0m     @     0x7ef2878085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21963)[0m     @     0x7ef287910148 at::Tensor::copy_()
[2m[36m(pid=21963)[0m     @     0x7ef28dbc6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21963)[0m     @     0x55afab33ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21963)[0m     @     0x55afab29ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21963)[0m     @     0x55afab325baf _PyEval_EvalCodeWithName
[2m[36m(pid=21963)[0m     @     0x55afab326a20 method_vectorcall
[2m[36m(pid=21963)[0m     @     0x55afab29abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21963)[0m     @     0x55afab325baf _PyEval_EvalCodeWithName
[2m[36m(pid=21963)[0m     @     0x55afab326643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21963)[0m     @     0x55afab29b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21963)[0m     @     0x55afab325baf _PyEval_EvalCodeWithName
[2m[36m(pid=21963)[0m     @     0x55afab326643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21963)[0m     @     0x55afab29b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21963)[0m     @     0x55afab325baf _PyEval_EvalCodeWithName
[2m[36m(pid=21963)[0m     @     0x55afab326643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21963)[0m     @     0x55afab29b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21963)[0m     @     0x55afab325baf _PyEval_EvalCodeWithName
[2m[36m(pid=21951)[0m     @     0x7ee78b41ded4 at::native::copy_()
[2m[36m(pid=21951)[0m     @     0x7ee78bb605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21951)[0m     @     0x7ee78bc68148 at::Tensor::copy_()
[2m[36m(pid=21951)[0m     @     0x7ee78d85f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21951)[0m     @     0x7ee78bb605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22031)[0m     @     0x7fcadd80e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22031)[0m     @     0x7fcadd916148 at::Tensor::copy_()
[2m[36m(pid=22031)[0m     @     0x7fcae3bccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22031)[0m     @     0x563960329fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22031)[0m     @     0x563960284b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22031)[0m     @     0x56396030fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22031)[0m     @     0x563960310a20 method_vectorcall
[2m[36m(pid=22031)[0m     @     0x563960284bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22031)[0m     @     0x56396030fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22031)[0m     @     0x563960310643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22031)[0m     @     0x563960285689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22031)[0m     @     0x56396030fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22031)[0m     @     0x563960310643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22031)[0m     @     0x563960285689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22031)[0m     @     0x56396030fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22031)[0m     @     0x563960310643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22031)[0m     @     0x563960285689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22031)[0m     @     0x56396030fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22020)[0m     @     0x7f6ed584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22020)[0m     @     0x7f6ed5956148 at::Tensor::copy_()
[2m[36m(pid=22020)[0m     @     0x7f6ed754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22020)[0m     @     0x7f6ed584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22066)[0m     @     0x7fc4508cbed4 at::native::copy_()
[2m[36m(pid=22066)[0m     @     0x7fc45100e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22066)[0m     @     0x7fc451116148 at::Tensor::copy_()
[2m[36m(pid=22066)[0m     @     0x7fc452d0d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22051)[0m     @     0x7fa6cb8f5ed4 at::native::copy_()
[2m[36m(pid=22051)[0m     @     0x7fa6cc0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22051)[0m     @     0x7fa6cc140148 at::Tensor::copy_()
[2m[36m(pid=22051)[0m     @     0x7fa6cdd37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21952)[0m     @     0x7faa6b84aed4 at::native::copy_()
[2m[36m(pid=21952)[0m     @     0x7faa6bf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21952)[0m     @     0x7faa6c095148 at::Tensor::copy_()
[2m[36m(pid=21952)[0m     @     0x7faa6dc8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21957)[0m     @     0x7f6b9451a148 at::Tensor::copy_()
[2m[36m(pid=21957)[0m     @     0x7f6b96111989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21957)[0m     @     0x7f6b944125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21957)[0m     @     0x7f6b9451a148 at::Tensor::copy_()
[2m[36m(pid=21957)[0m     @     0x7f6b9a7d0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21957)[0m     @     0x562471fe9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21957)[0m     @     0x562471f44b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21957)[0m     @     0x562471fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21957)[0m     @     0x562471fd0a20 method_vectorcall
[2m[36m(pid=21957)[0m     @     0x562471f44bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21957)[0m     @     0x562471fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21957)[0m     @     0x562471fd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21957)[0m     @     0x562471f45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21957)[0m     @     0x562471fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22018)[0m     @     0x7f3bf6106148 at::Tensor::copy_()
[2m[36m(pid=22018)[0m     @     0x7f3bf7cfd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22053)[0m     @     0x7ecfab863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22053)[0m     @     0x7ecfa9b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21955)[0m     @     0x7f1e6a7c1148 at::Tensor::copy_()
[2m[36m(pid=21955)[0m     @     0x7f1e6c3b8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21955)[0m     @     0x7f1e6a6b95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21942)[0m     @     0x7f56f3097e11 at::TensorIterator::for_each()
[2m[36m(pid=21942)[0m     @     0x7f56f5db0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21942)[0m     @     0x7f56f5dd3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21942)[0m     @     0x7f56f2e11009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21966)[0m     @     0x7f999f910148 at::Tensor::copy_()
[2m[36m(pid=21966)[0m     @     0x7f99a1507989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22024)[0m     @     0x7f13579f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22024)[0m     @     0x55a82409bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22024)[0m     @     0x55a823ff6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22024)[0m     @     0x55a824081baf _PyEval_EvalCodeWithName
[2m[36m(pid=22024)[0m     @     0x55a824082a20 method_vectorcall
[2m[36m(pid=22024)[0m     @     0x55a823ff6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22024)[0m     @     0x55a824081baf _PyEval_EvalCodeWithName
[2m[36m(pid=22024)[0m     @     0x55a824082643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22024)[0m     @     0x55a823ff7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22024)[0m     @     0x55a824081baf _PyEval_EvalCodeWithName
[2m[36m(pid=22024)[0m     @     0x55a824082643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22024)[0m     @     0x55a823ff7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22024)[0m     @     0x55a824081baf _PyEval_EvalCodeWithName
[2m[36m(pid=22024)[0m     @     0x55a824082643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22024)[0m     @     0x55a823ff7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22024)[0m     @     0x55a824081baf _PyEval_EvalCodeWithName
[2m[36m(pid=22057)[0m     @     0x563f11074baf _PyEval_EvalCodeWithName
[2m[36m(pid=22057)[0m     @     0x563f11075643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22057)[0m     @     0x563f10fea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22057)[0m     @     0x563f11074baf _PyEval_EvalCodeWithName
[2m[36m(pid=21968)[0m     @     0x7f85ef85e148 at::Tensor::copy_()
[2m[36m(pid=21968)[0m     @     0x7f85f1455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21962)[0m     @     0x7ee09223c148 at::Tensor::copy_()
[2m[36m(pid=21962)[0m     @     0x7ee093e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21962)[0m     @     0x7ee0921345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22064)[0m     @     0x7f7b70efe148 at::Tensor::copy_()
[2m[36m(pid=22064)[0m     @     0x7f7b771b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22064)[0m     @     0x563c9083ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22064)[0m     @     0x563c9079ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22064)[0m     @     0x563c90825baf _PyEval_EvalCodeWithName
[2m[36m(pid=22064)[0m     @     0x563c90826a20 method_vectorcall
[2m[36m(pid=22064)[0m     @     0x563c9079abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22064)[0m     @     0x563c90825baf _PyEval_EvalCodeWithName
[2m[36m(pid=22064)[0m     @     0x563c90826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22064)[0m     @     0x563c9079b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22064)[0m     @     0x563c90825baf _PyEval_EvalCodeWithName
[2m[36m(pid=22064)[0m     @     0x563c90826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22064)[0m     @     0x563c9079b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22064)[0m     @     0x563c90825baf _PyEval_EvalCodeWithName
[2m[36m(pid=22064)[0m     @     0x563c90826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22064)[0m     @     0x563c9079b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22064)[0m     @     0x563c90825baf _PyEval_EvalCodeWithName
[2m[36m(pid=22033)[0m     @     0x7f7ef3124148 at::Tensor::copy_()
[2m[36m(pid=22033)[0m     @     0x7f7ef93dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22033)[0m     @     0x55eec4fa1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22033)[0m     @     0x55eec4efcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22033)[0m     @     0x55eec4f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=22033)[0m     @     0x55eec4f88a20 method_vectorcall
[2m[36m(pid=22033)[0m     @     0x55eec4efcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22033)[0m     @     0x55eec4f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=22033)[0m     @     0x55eec4f88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22033)[0m     @     0x55eec4efd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22033)[0m     @     0x55eec4f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=22033)[0m     @     0x55eec4f88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22033)[0m     @     0x55eec4efd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22033)[0m     @     0x55eec4f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=22033)[0m     @     0x55eec4f88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22033)[0m     @     0x55eec4efd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22033)[0m     @     0x55eec4f87baf _PyEval_EvalCodeWithName
[2m[36m(pid=21954)[0m     @     0x563d0fbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=21954)[0m     @     0x563d0fbc9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21954)[0m     @     0x563d0fb3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21954)[0m     @     0x563d0fbc8baf _PyEval_EvalCodeWithName
[2m[36m(pid=21945)[0m     @     0x7f154e759148 at::Tensor::copy_()
[2m[36m(pid=21945)[0m     @     0x7f1550350989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21945)[0m     @     0x7f154e6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22026)[0m     @     0x561e5fd4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22026)[0m     @     0x561e5fdd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22011)[0m     @     0x7f820c5bd148 at::Tensor::copy_()
[2m[36m(pid=22011)[0m     @     0x7f8212873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22011)[0m     @     0x5587a0f98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22011)[0m     @     0x5587a0ef3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22011)[0m     @     0x5587a0f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22011)[0m     @     0x5587a0f7fa20 method_vectorcall
[2m[36m(pid=22011)[0m     @     0x5587a0ef3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22011)[0m     @     0x5587a0f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22011)[0m     @     0x5587a0f7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22011)[0m     @     0x5587a0ef4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22011)[0m     @     0x5587a0f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22011)[0m     @     0x5587a0f7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22011)[0m     @     0x5587a0ef4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22011)[0m     @     0x5587a0f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22011)[0m     @     0x5587a0f7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22011)[0m     @     0x5587a0ef4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22011)[0m     @     0x5587a0f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22075)[0m     @     0x7f498793d148 at::Tensor::copy_()
[2m[36m(pid=22075)[0m     @     0x7f498dbf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22075)[0m     @     0x562331b0efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22075)[0m     @     0x562331a69b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22075)[0m     @     0x562331af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22075)[0m     @     0x562331af5a20 method_vectorcall
[2m[36m(pid=22075)[0m     @     0x562331a69bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22075)[0m     @     0x562331af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22075)[0m     @     0x562331af5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22075)[0m     @     0x562331a6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22075)[0m     @     0x562331af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22075)[0m     @     0x562331af5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22075)[0m     @     0x562331a6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22075)[0m     @     0x562331af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22075)[0m     @     0x562331af5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22075)[0m     @     0x562331a6a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22075)[0m     @     0x562331af4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22048)[0m     @     0x7f74829fe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22048)[0m     @     0x7f7482b06148 at::Tensor::copy_()
[2m[36m(pid=22048)[0m     @     0x7f7488dbcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22048)[0m     @     0x5576cc762fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22048)[0m     @     0x5576cc6bdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22048)[0m     @     0x5576cc748baf _PyEval_EvalCodeWithName
[2m[36m(pid=22048)[0m     @     0x5576cc749a20 method_vectorcall
[2m[36m(pid=22048)[0m     @     0x5576cc6bdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22048)[0m     @     0x5576cc748baf _PyEval_EvalCodeWithName
[2m[36m(pid=22048)[0m     @     0x5576cc749643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22048)[0m     @     0x5576cc6be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22048)[0m     @     0x5576cc748baf _PyEval_EvalCodeWithName
[2m[36m(pid=22048)[0m     @     0x5576cc749643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22048)[0m     @     0x5576cc6be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22048)[0m     @     0x5576cc748baf _PyEval_EvalCodeWithName
[2m[36m(pid=22048)[0m     @     0x5576cc749643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22048)[0m     @     0x5576cc6be689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22048)[0m     @     0x5576cc748baf _PyEval_EvalCodeWithName
[2m[36m(pid=22045)[0m     @     0x7edc09007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22045)[0m     @     0x7edc073085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22013)[0m     @     0x7fc802c08989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22013)[0m     @     0x7fc800f095cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22041)[0m     @     0x7fb55b6a4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22041)[0m     @     0x7fb55b6a4b53 at::TensorIterator::for_each()
[2m[36m(pid=21943)[0m     @     0x7f0a84095148 at::Tensor::copy_()
[2m[36m(pid=21943)[0m     @     0x7f0a85c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21943)[0m     @     0x7f0a83f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22027)[0m     @     0x557d69cc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22027)[0m     @     0x557d69c39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22027)[0m     @     0x557d69cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22016)[0m     @     0x5619bc867baf _PyEval_EvalCodeWithName
[2m[36m(pid=22016)[0m     @     0x5619bc868a20 method_vectorcall
[2m[36m(pid=22016)[0m     @     0x5619bc7dcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22016)[0m     @     0x5619bc867baf _PyEval_EvalCodeWithName
[2m[36m(pid=22016)[0m     @     0x5619bc868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22016)[0m     @     0x5619bc7dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22016)[0m     @     0x5619bc867baf _PyEval_EvalCodeWithName
[2m[36m(pid=22016)[0m     @     0x5619bc868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22016)[0m     @     0x5619bc7dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22016)[0m     @     0x5619bc867baf _PyEval_EvalCodeWithName
[2m[36m(pid=22016)[0m     @     0x5619bc868643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22016)[0m     @     0x5619bc7dd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22016)[0m     @     0x5619bc867baf _PyEval_EvalCodeWithName
[2m[36m(pid=22019)[0m     @     0x7ed5237f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22019)[0m     @     0x7ed521af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21960)[0m     @     0x7fb511c6c148 at::Tensor::copy_()
[2m[36m(pid=21960)[0m     @     0x7fb513863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21960)[0m     @     0x7fb511b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22030)[0m     @     0x7f6247ffac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22030)[0m     @     0x7f624801dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22030)[0m     @     0x7f624505b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22030)[0m     @     0x7f6245059c3f at::native::copy_impl()
[2m[36m(pid=22002)[0m     @     0x7ecf39844148 at::Tensor::copy_()
[2m[36m(pid=22002)[0m     @     0x7ecf3b43b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22046)[0m     @     0x7f633ea58977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22037)[0m     @     0x7f9953bbf148 at::Tensor::copy_()
[2m[36m(pid=22037)[0m     @     0x7f99557b6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22025)[0m     @     0x7edc6c09bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=22025)[0m     @     0x7edc6938f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21941)[0m     @     0x7efa33ec0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21941)[0m     @     0x7efa33ec0b53 at::TensorIterator::for_each()
[2m[36m(pid=22006)[0m     @     0x7f9d1c11f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22006)[0m     @     0x7f9d1c11dc3f at::native::copy_impl()
[2m[36m(pid=22006)[0m     @     0x7f9d1c11eed4 at::native::copy_()
[2m[36m(pid=22006)[0m     @     0x7f9d1c8615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21948)[0m     @     0x7f117813fb53 at::TensorIterator::for_each()
[2m[36m(pid=21948)[0m     @     0x7f117813fe11 at::TensorIterator::for_each()
[2m[36m(pid=21948)[0m     @     0x7f117ae58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21948)[0m     @     0x7f117ae7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22060)[0m     @     0x7fccdd19ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22060)[0m     @     0x7fccdd1bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22060)[0m     @     0x7fccda1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22060)[0m     @     0x7fccda1f9c3f at::native::copy_impl()
[2m[36m(pid=22060)[0m     @     0x7fccda1faed4 at::native::copy_()
[2m[36m(pid=22010)[0m     @     0x7f8d9c9b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22010)[0m     @     0x7f8d999f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22010)[0m     @     0x7f8d999f0c3f at::native::copy_impl()
[2m[36m(pid=22010)[0m     @     0x7f8d999f1ed4 at::native::copy_()
[2m[36m(pid=21946)[0m     @     0x7fb3d93bfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21946)[0m     @     0x7fb3d63fd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21946)[0m     @     0x7fb3d63fbc3f at::native::copy_impl()
[2m[36m(pid=21946)[0m     @     0x7fb3d63fced4 at::native::copy_()
[2m[36m(pid=22014)[0m     @     0x7f22ee553148 at::Tensor::copy_()
[2m[36m(pid=22014)[0m     @     0x7f22f014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22014)[0m     @     0x7f22ee44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22014)[0m     @     0x7f22ee553148 at::Tensor::copy_()
[2m[36m(pid=22015)[0m     @     0x7f964d422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22015)[0m     @     0x7f964d420c3f at::native::copy_impl()
[2m[36m(pid=22015)[0m     @     0x7f964d421ed4 at::native::copy_()
[2m[36m(pid=21949)[0m     @     0x7f58b0d67e11 at::TensorIterator::for_each()
[2m[36m(pid=21949)[0m     @     0x7f58b3a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21949)[0m     @     0x7f58b3aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21949)[0m     @     0x7f58b0ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21949)[0m     @     0x7f58b0adfc3f at::native::copy_impl()
[2m[36m(pid=22035)[0m     @     0x7f616226ae11 at::TensorIterator::for_each()
[2m[36m(pid=22035)[0m     @     0x7f6164f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22035)[0m     @     0x7f6164fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22035)[0m     @     0x7f6161fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22035)[0m     @     0x7f6161fe2c3f at::native::copy_impl()
[2m[36m(pid=21940)[0m     @     0x7fbae7555148 at::Tensor::copy_()
[2m[36m(pid=21940)[0m     @     0x7fbae914c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21940)[0m     @     0x7fbae744d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21940)[0m     @     0x7fbae7555148 at::Tensor::copy_()
[2m[36m(pid=21947)[0m     @     0x7fb23e998148 at::Tensor::copy_()
[2m[36m(pid=21947)[0m     @     0x7fb24058f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21947)[0m     @     0x7fb23e8905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21947)[0m     @     0x7fb23e998148 at::Tensor::copy_()
[2m[36m(pid=21969)[0m     @     0x7fcac85d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21969)[0m     @     0x7fcac85f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21969)[0m     @     0x7fcac5633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21969)[0m     @     0x7fcac5631c3f at::native::copy_impl()
[2m[36m(pid=21969)[0m     @     0x7fcac5632ed4 at::native::copy_()
[2m[36m(pid=22071)[0m     @     0x7f0f40c98148 at::Tensor::copy_()
[2m[36m(pid=22071)[0m     @     0x7f0f4288f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22071)[0m     @     0x7f0f40b905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22071)[0m     @     0x7f0f40c98148 at::Tensor::copy_()
[2m[36m(pid=22044)[0m     @     0x7f71e329a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22044)[0m     @     0x7f71e329ab53 at::TensorIterator::for_each()
[2m[36m(pid=22044)[0m     @     0x7f71e329ae11 at::TensorIterator::for_each()
[2m[36m(pid=22044)[0m     @     0x7f71e5fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22044)[0m     @     0x7f71e5fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21971)[0m     @     0x7f9ed536efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=21971)[0m     @     0x7f9ed266264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=21971)[0m     @     0x7f9ed2665977 at::TensorIterator::serial_for_each()
[2m[36m(pid=21971)[0m     @     0x7f9ed2665b53 at::TensorIterator::for_each()
[2m[36m(pid=21950)[0m     @     0x7f5c4ba26009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21950)[0m     @     0x7f5c4ba24c3f at::native::copy_impl()
[2m[36m(pid=21950)[0m     @     0x7f5c4ba25ed4 at::native::copy_()
[2m[36m(pid=21965)[0m     @     0x7fc7cbb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21965)[0m     @     0x7fc7cbb0bc3f at::native::copy_impl()
[2m[36m(pid=21965)[0m     @     0x7fc7cbb0ced4 at::native::copy_()
[2m[36m(pid=22001)[0m     @     0x7f4718d67b53 at::TensorIterator::for_each()
[2m[36m(pid=22001)[0m     @     0x7f4718d67e11 at::TensorIterator::for_each()
[2m[36m(pid=22023)[0m     @     0x7f17848cd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22023)[0m     @     0x7f17848cdb53 at::TensorIterator::for_each()
[2m[36m(pid=21956)[0m     @     0x7f8c11fe3ed4 at::native::copy_()
[2m[36m(pid=21956)[0m     @     0x7f8c127265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21944)[0m     @     0x7f3cc958c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21944)[0m     @     0x7f3cc9694148 at::Tensor::copy_()
[2m[36m(pid=21944)[0m     @     0x7f3ccf94abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21944)[0m     @     0x55787af3ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21944)[0m     @     0x55787ae9ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21944)[0m     @     0x55787af25baf _PyEval_EvalCodeWithName
[2m[36m(pid=21944)[0m     @     0x55787af26a20 method_vectorcall
[2m[36m(pid=21944)[0m     @     0x55787ae9abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21944)[0m     @     0x55787af25baf _PyEval_EvalCodeWithName
[2m[36m(pid=21944)[0m     @     0x55787af26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21944)[0m     @     0x55787ae9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21944)[0m     @     0x55787af25baf _PyEval_EvalCodeWithName
[2m[36m(pid=21944)[0m     @     0x55787af26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21944)[0m     @     0x55787ae9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21967)[0m     @     0x7f4b427a8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21967)[0m     @     0x7f4b427cbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21967)[0m     @     0x7f4b3f809009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21967)[0m     @     0x7f4b3f807c3f at::native::copy_impl()
[2m[36m(pid=22003)[0m     @     0x7eed62f33b53 at::TensorIterator::for_each()
[2m[36m(pid=22003)[0m     @     0x7eed62f33e11 at::TensorIterator::for_each()
[2m[36m(pid=22003)[0m     @     0x7eed65c4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22000)[0m     @     0x7f4de94345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22000)[0m     @     0x7f4de953c148 at::Tensor::copy_()
[2m[36m(pid=22000)[0m     @     0x7f4def7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22000)[0m     @     0x55cf86f88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22000)[0m     @     0x55cf86ee3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22000)[0m     @     0x55cf86f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22000)[0m     @     0x55cf86f6fa20 method_vectorcall
[2m[36m(pid=22000)[0m     @     0x55cf86ee3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22000)[0m     @     0x55cf86f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22000)[0m     @     0x55cf86f6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21958)[0m     @     0x7f0c4d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21958)[0m     @     0x7f0c4d32b148 at::Tensor::copy_()
[2m[36m(pid=21958)[0m     @     0x7f0c535e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21958)[0m     @     0x56422a38dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21958)[0m     @     0x56422a2e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21958)[0m     @     0x56422a373baf _PyEval_EvalCodeWithName
[2m[36m(pid=21958)[0m     @     0x56422a374a20 method_vectorcall
[2m[36m(pid=21958)[0m     @     0x56422a2e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21958)[0m     @     0x56422a373baf _PyEval_EvalCodeWithName
[2m[36m(pid=21958)[0m     @     0x56422a374643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21958)[0m     @     0x56422a2e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21958)[0m     @     0x56422a373baf _PyEval_EvalCodeWithName
[2m[36m(pid=21958)[0m     @     0x56422a374643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21958)[0m     @     0x56422a2e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22029)[0m     @     0x7f74f1c66009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22029)[0m     @     0x7f74f1c64c3f at::native::copy_impl()
[2m[36m(pid=22029)[0m     @     0x7f74f1c65ed4 at::native::copy_()
[2m[36m(pid=22008)[0m     @     0x7f559510bed4 at::native::copy_()
[2m[36m(pid=22008)[0m     @     0x7f559584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21974)[0m     @     0x7efa53887c3f at::native::copy_impl()
[2m[36m(pid=21974)[0m     @     0x7efa53888ed4 at::native::copy_()
[2m[36m(pid=21964)[0m     @     0x7f617fd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21964)[0m     @     0x7f617fe65148 at::Tensor::copy_()
[2m[36m(pid=21964)[0m     @     0x7f618611bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21964)[0m     @     0x556479d39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21964)[0m     @     0x556479c94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21964)[0m     @     0x556479d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21964)[0m     @     0x556479d20a20 method_vectorcall
[2m[36m(pid=21964)[0m     @     0x556479c94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21964)[0m     @     0x556479d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21964)[0m     @     0x556479d20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21964)[0m     @     0x556479c95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21964)[0m     @     0x556479d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21964)[0m     @     0x556479d20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22012)[0m     @     0x7fa4d4b1e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22012)[0m     @     0x7fa4d4c26148 at::Tensor::copy_()
[2m[36m(pid=22022)[0m     @     0x7eda0addbc3f at::native::copy_impl()
[2m[36m(pid=22022)[0m     @     0x7eda0addced4 at::native::copy_()
[2m[36m(pid=22022)[0m     @     0x7eda0b51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22017)[0m     @     0x7ef45824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22017)[0m     @     0x7ef458357148 at::Tensor::copy_()
[2m[36m(pid=22017)[0m     @     0x7ef45e60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22017)[0m     @     0x55a9ead6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22017)[0m     @     0x55a9eaccab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22017)[0m     @     0x55a9ead55baf _PyEval_EvalCodeWithName
[2m[36m(pid=22017)[0m     @     0x55a9ead56a20 method_vectorcall
[2m[36m(pid=22017)[0m     @     0x55a9eaccabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22017)[0m     @     0x55a9ead55baf _PyEval_EvalCodeWithName
[2m[36m(pid=22017)[0m     @     0x55a9ead56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22017)[0m     @     0x55a9eaccb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22017)[0m     @     0x55a9ead55baf _PyEval_EvalCodeWithName
[2m[36m(pid=22017)[0m     @     0x55a9ead56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22017)[0m     @     0x55a9eaccb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22017)[0m     @     0x55a9ead55baf _PyEval_EvalCodeWithName
[2m[36m(pid=22017)[0m     @     0x55a9ead56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22017)[0m     @     0x55a9eaccb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22017)[0m     @     0x55a9ead55baf _PyEval_EvalCodeWithName
[2m[36m(pid=22061)[0m     @     0x7f23c9c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22061)[0m     @     0x55577cdc3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22061)[0m     @     0x55577cd1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22061)[0m     @     0x55577cda9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22061)[0m     @     0x55577cdaaa20 method_vectorcall
[2m[36m(pid=22061)[0m     @     0x55577cd1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22061)[0m     @     0x55577cda9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22061)[0m     @     0x55577cdaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22061)[0m     @     0x55577cd1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22061)[0m     @     0x55577cda9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22061)[0m     @     0x55577cdaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22061)[0m     @     0x55577cd1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22061)[0m     @     0x55577cda9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22061)[0m     @     0x55577cdaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22061)[0m     @     0x55577cd1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22061)[0m     @     0x55577cda9baf _PyEval_EvalCodeWithName
[2m[36m(pid=21961)[0m     @     0x7edce8095148 at::Tensor::copy_()
[2m[36m(pid=21961)[0m     @     0x7edcee34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21961)[0m     @     0x564c41b18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21961)[0m     @     0x564c41a73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21961)[0m     @     0x564c41afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21961)[0m     @     0x564c41affa20 method_vectorcall
[2m[36m(pid=21961)[0m     @     0x564c41a73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21961)[0m     @     0x564c41afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21961)[0m     @     0x564c41aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21961)[0m     @     0x564c41a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21961)[0m     @     0x564c41afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21961)[0m     @     0x564c41aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21961)[0m     @     0x564c41a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21961)[0m     @     0x564c41afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21961)[0m     @     0x564c41aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21961)[0m     @     0x564c41a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21961)[0m     @     0x564c41afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22049)[0m     @     0x7f8359d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22049)[0m     @     0x7f8359e7d148 at::Tensor::copy_()
[2m[36m(pid=22049)[0m     @     0x7f8360133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22049)[0m     @     0x55eee0a57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22049)[0m     @     0x55eee09b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22049)[0m     @     0x55eee0a3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22049)[0m     @     0x55eee0a3ea20 method_vectorcall
[2m[36m(pid=22049)[0m     @     0x55eee09b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22049)[0m     @     0x55eee0a3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22049)[0m     @     0x55eee0a3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22049)[0m     @     0x55eee09b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22049)[0m     @     0x55eee0a3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22049)[0m     @     0x55eee0a3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22049)[0m     @     0x55eee09b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22049)[0m     @     0x55eee0a3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22049)[0m     @     0x55eee0a3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22049)[0m     @     0x55eee09b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22049)[0m     @     0x55eee0a3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21951)[0m     @     0x7ee78bc68148 at::Tensor::copy_()
[2m[36m(pid=21951)[0m     @     0x7ee791f1ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21951)[0m     @     0x55ea1860dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21951)[0m     @     0x55ea18568b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21951)[0m     @     0x55ea185f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=21951)[0m     @     0x55ea185f4a20 method_vectorcall
[2m[36m(pid=21951)[0m     @     0x55ea18568bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21951)[0m     @     0x55ea185f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=21951)[0m     @     0x55ea185f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21951)[0m     @     0x55ea18569689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21951)[0m     @     0x55ea185f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=21951)[0m     @     0x55ea185f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21951)[0m     @     0x55ea18569689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21951)[0m     @     0x55ea185f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=21951)[0m     @     0x55ea185f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21951)[0m     @     0x55ea18569689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21951)[0m     @     0x55ea185f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=22020)[0m     @     0x7f6ed5956148 at::Tensor::copy_()
[2m[36m(pid=22020)[0m     @     0x7f6edbc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22020)[0m     @     0x558adf1defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22020)[0m     @     0x558adf139b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22020)[0m     @     0x558adf1c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22020)[0m     @     0x558adf1c5a20 method_vectorcall
[2m[36m(pid=22020)[0m     @     0x558adf139bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22020)[0m     @     0x558adf1c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22020)[0m     @     0x558adf1c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22020)[0m     @     0x558adf13a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22020)[0m     @     0x558adf1c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22020)[0m     @     0x558adf1c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22020)[0m     @     0x558adf13a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22020)[0m     @     0x558adf1c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22020)[0m     @     0x558adf1c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22020)[0m     @     0x558adf13a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22020)[0m     @     0x558adf1c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22066)[0m     @     0x7fc45100e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22066)[0m     @     0x7fc451116148 at::Tensor::copy_()
[2m[36m(pid=22066)[0m     @     0x7fc4573ccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22066)[0m     @     0x56549d813fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22066)[0m     @     0x56549d76eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22066)[0m     @     0x56549d7f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22066)[0m     @     0x56549d7faa20 method_vectorcall
[2m[36m(pid=22066)[0m     @     0x56549d76ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22066)[0m     @     0x56549d7f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22066)[0m     @     0x56549d7fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22066)[0m     @     0x56549d76f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22066)[0m     @     0x56549d7f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22066)[0m     @     0x56549d7fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22066)[0m     @     0x56549d76f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22066)[0m     @     0x56549d7f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22066)[0m     @     0x56549d7fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22066)[0m     @     0x56549d76f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22066)[0m     @     0x56549d7f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22051)[0m     @     0x7fa6cc0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22051)[0m     @     0x7fa6cc140148 at::Tensor::copy_()
[2m[36m(pid=22051)[0m     @     0x7fa6d23f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22051)[0m     @     0x555a53feffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22051)[0m     @     0x555a53f4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22051)[0m     @     0x555a53fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22051)[0m     @     0x555a53fd6a20 method_vectorcall
[2m[36m(pid=22051)[0m     @     0x555a53f4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22051)[0m     @     0x555a53fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22051)[0m     @     0x555a53fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22051)[0m     @     0x555a53f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22051)[0m     @     0x555a53fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22051)[0m     @     0x555a53fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22051)[0m     @     0x555a53f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22051)[0m     @     0x555a53fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22051)[0m     @     0x555a53fd6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22051)[0m     @     0x555a53f4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22051)[0m     @     0x555a53fd5baf _PyEval_EvalCodeWithName
[2m[36m(pid=21952)[0m     @     0x7faa6bf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21952)[0m     @     0x7faa6c095148 at::Tensor::copy_()
[2m[36m(pid=21952)[0m     @     0x7faa7234bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21952)[0m     @     0x562ddab19fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21952)[0m     @     0x562ddaa74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21952)[0m     @     0x562ddaaffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21952)[0m     @     0x562ddab00a20 method_vectorcall
[2m[36m(pid=21952)[0m     @     0x562ddaa74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21952)[0m     @     0x562ddaaffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21952)[0m     @     0x562ddab00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21952)[0m     @     0x562ddaa75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21952)[0m     @     0x562ddaaffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21952)[0m     @     0x562ddab00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21952)[0m     @     0x562ddaa75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21952)[0m     @     0x562ddaaffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21952)[0m     @     0x562ddab00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21952)[0m     @     0x562ddaa75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21952)[0m     @     0x562ddaaffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21957)[0m     @     0x562471fd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21957)[0m     @     0x562471f45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21957)[0m     @     0x562471fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21957)[0m     @     0x562471fd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21957)[0m     @     0x562471f45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21957)[0m     @     0x562471fcfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22018)[0m     @     0x7f3bf5ffe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22018)[0m     @     0x7f3bf6106148 at::Tensor::copy_()
[2m[36m(pid=22018)[0m     @     0x7f3bfc3bcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22018)[0m     @     0x556c3a966fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22018)[0m     @     0x556c3a8c1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22018)[0m     @     0x556c3a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22018)[0m     @     0x556c3a94da20 method_vectorcall
[2m[36m(pid=22018)[0m     @     0x556c3a8c1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22018)[0m     @     0x556c3a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22018)[0m     @     0x556c3a94d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22018)[0m     @     0x556c3a8c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22018)[0m     @     0x556c3a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22018)[0m     @     0x556c3a94d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22018)[0m     @     0x556c3a8c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22018)[0m     @     0x556c3a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22018)[0m     @     0x556c3a94d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22018)[0m     @     0x556c3a8c2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22018)[0m     @     0x556c3a94cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22053)[0m     @     0x7ecfa9c6c148 at::Tensor::copy_()
[2m[36m(pid=22053)[0m     @     0x7ecfaff22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22053)[0m     @     0x5557fd81ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22053)[0m     @     0x5557fd77ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22053)[0m     @     0x5557fd805baf _PyEval_EvalCodeWithName
[2m[36m(pid=22053)[0m     @     0x5557fd806a20 method_vectorcall
[2m[36m(pid=22053)[0m     @     0x5557fd77abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22053)[0m     @     0x5557fd805baf _PyEval_EvalCodeWithName
[2m[36m(pid=22053)[0m     @     0x5557fd806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22053)[0m     @     0x5557fd77b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22053)[0m     @     0x5557fd805baf _PyEval_EvalCodeWithName
[2m[36m(pid=22053)[0m     @     0x5557fd806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22053)[0m     @     0x5557fd77b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22053)[0m     @     0x5557fd805baf _PyEval_EvalCodeWithName
[2m[36m(pid=22053)[0m     @     0x5557fd806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22053)[0m     @     0x5557fd77b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22053)[0m     @     0x5557fd805baf _PyEval_EvalCodeWithName
[2m[36m(pid=21955)[0m     @     0x7f1e6a7c1148 at::Tensor::copy_()
[2m[36m(pid=21955)[0m     @     0x7f1e70a77bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21955)[0m     @     0x5597f7ac7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21955)[0m     @     0x5597f7a22b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21955)[0m     @     0x5597f7aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21955)[0m     @     0x5597f7aaea20 method_vectorcall
[2m[36m(pid=21955)[0m     @     0x5597f7a22bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21955)[0m     @     0x5597f7aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21955)[0m     @     0x5597f7aae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21955)[0m     @     0x5597f7a23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21955)[0m     @     0x5597f7aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21955)[0m     @     0x5597f7aae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21955)[0m     @     0x5597f7a23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21955)[0m     @     0x5597f7aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21955)[0m     @     0x5597f7aae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21955)[0m     @     0x5597f7a23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21955)[0m     @     0x5597f7aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21942)[0m     @     0x7f56f2e0fc3f at::native::copy_impl()
[2m[36m(pid=21942)[0m     @     0x7f56f2e10ed4 at::native::copy_()
[2m[36m(pid=21942)[0m     @     0x7f56f35535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21966)[0m     @     0x7f999f8085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21966)[0m     @     0x7f999f910148 at::Tensor::copy_()
[2m[36m(pid=21968)[0m     @     0x7f85ef7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21968)[0m     @     0x7f85ef85e148 at::Tensor::copy_()
[2m[36m(pid=21968)[0m     @     0x7f85f5b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21968)[0m     @     0x55e3e34f8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21968)[0m     @     0x55e3e3453b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21968)[0m     @     0x55e3e34debaf _PyEval_EvalCodeWithName
[2m[36m(pid=21968)[0m     @     0x55e3e34dfa20 method_vectorcall
[2m[36m(pid=21968)[0m     @     0x55e3e3453bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21968)[0m     @     0x55e3e34debaf _PyEval_EvalCodeWithName
[2m[36m(pid=21968)[0m     @     0x55e3e34df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21968)[0m     @     0x55e3e3454689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21968)[0m     @     0x55e3e34debaf _PyEval_EvalCodeWithName
[2m[36m(pid=21968)[0m     @     0x55e3e34df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21968)[0m     @     0x55e3e3454689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21968)[0m     @     0x55e3e34debaf _PyEval_EvalCodeWithName
[2m[36m(pid=21968)[0m     @     0x55e3e34df643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21968)[0m     @     0x55e3e3454689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21968)[0m     @     0x55e3e34debaf _PyEval_EvalCodeWithName
[2m[36m(pid=21962)[0m     @     0x7ee09223c148 at::Tensor::copy_()
[2m[36m(pid=21962)[0m     @     0x7ee0984f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21962)[0m     @     0x55915ff36fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21962)[0m     @     0x55915fe91b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21962)[0m     @     0x55915ff1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21962)[0m     @     0x55915ff1da20 method_vectorcall
[2m[36m(pid=21962)[0m     @     0x55915fe91bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21962)[0m     @     0x55915ff1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21962)[0m     @     0x55915ff1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21962)[0m     @     0x55915fe92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21962)[0m     @     0x55915ff1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21962)[0m     @     0x55915ff1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21962)[0m     @     0x55915fe92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21962)[0m     @     0x55915ff1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21962)[0m     @     0x55915ff1d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21962)[0m     @     0x55915fe92689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21962)[0m     @     0x55915ff1cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21945)[0m     @     0x7f154e759148 at::Tensor::copy_()
[2m[36m(pid=21945)[0m     @     0x7f15545f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21945)[0m     @     0x560d666a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21945)[0m     @     0x560d665fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21945)[0m     @     0x560d66687baf _PyEval_EvalCodeWithName
[2m[36m(pid=21945)[0m     @     0x560d66688a20 method_vectorcall
[2m[36m(pid=21945)[0m     @     0x560d665fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21945)[0m     @     0x560d66687baf _PyEval_EvalCodeWithName
[2m[36m(pid=21945)[0m     @     0x560d66688643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21945)[0m     @     0x560d665fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21945)[0m     @     0x560d66687baf _PyEval_EvalCodeWithName
[2m[36m(pid=21945)[0m     @     0x560d66688643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21945)[0m     @     0x560d665fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21945)[0m     @     0x560d66687baf _PyEval_EvalCodeWithName
[2m[36m(pid=21945)[0m     @     0x560d66688643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21945)[0m     @     0x560d665fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21945)[0m     @     0x560d66687baf _PyEval_EvalCodeWithName
[2m[36m(pid=22045)[0m     @     0x7edc07410148 at::Tensor::copy_()
[2m[36m(pid=22045)[0m     @     0x7edc0d6c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22045)[0m     @     0x55cf94caafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22045)[0m     @     0x55cf94c05b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22045)[0m     @     0x55cf94c90baf _PyEval_EvalCodeWithName
[2m[36m(pid=22045)[0m     @     0x55cf94c91a20 method_vectorcall
[2m[36m(pid=22045)[0m     @     0x55cf94c05bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22045)[0m     @     0x55cf94c90baf _PyEval_EvalCodeWithName
[2m[36m(pid=22045)[0m     @     0x55cf94c91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22045)[0m     @     0x55cf94c06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22045)[0m     @     0x55cf94c90baf _PyEval_EvalCodeWithName
[2m[36m(pid=22045)[0m     @     0x55cf94c91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22045)[0m     @     0x55cf94c06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22045)[0m     @     0x55cf94c90baf _PyEval_EvalCodeWithName
[2m[36m(pid=22045)[0m     @     0x55cf94c91643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22045)[0m     @     0x55cf94c06689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22045)[0m     @     0x55cf94c90baf _PyEval_EvalCodeWithName
[2m[36m(pid=22013)[0m     @     0x7fc801011148 at::Tensor::copy_()
[2m[36m(pid=22013)[0m     @     0x7fc8072c7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22013)[0m     @     0x5597c00defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22013)[0m     @     0x5597c0039b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22013)[0m     @     0x5597c00c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22013)[0m     @     0x5597c00c5a20 method_vectorcall
[2m[36m(pid=22013)[0m     @     0x5597c0039bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22013)[0m     @     0x5597c00c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22013)[0m     @     0x5597c00c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22013)[0m     @     0x5597c003a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22013)[0m     @     0x5597c00c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22013)[0m     @     0x5597c00c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22013)[0m     @     0x5597c003a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22013)[0m     @     0x5597c00c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22013)[0m     @     0x5597c00c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22013)[0m     @     0x5597c003a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22013)[0m     @     0x5597c00c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=22041)[0m     @     0x7fb55b6a4e11 at::TensorIterator::for_each()
[2m[36m(pid=22041)[0m     @     0x7fb55e3bdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22041)[0m     @     0x7fb55e3e0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22041)[0m     @     0x7fb55b41e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22041)[0m     @     0x7fb55b41cc3f at::native::copy_impl()
[2m[36m(pid=21943)[0m     @     0x7f0a84095148 at::Tensor::copy_()
[2m[36m(pid=21943)[0m     @     0x7f0a8a34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21943)[0m     @     0x563aff16efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21943)[0m     @     0x563aff0c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21943)[0m     @     0x563aff154baf _PyEval_EvalCodeWithName
[2m[36m(pid=21943)[0m     @     0x563aff155a20 method_vectorcall
[2m[36m(pid=21943)[0m     @     0x563aff0c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21943)[0m     @     0x563aff154baf _PyEval_EvalCodeWithName
[2m[36m(pid=21943)[0m     @     0x563aff155643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21943)[0m     @     0x563aff0ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21943)[0m     @     0x563aff154baf _PyEval_EvalCodeWithName
[2m[36m(pid=21943)[0m     @     0x563aff155643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21943)[0m     @     0x563aff0ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21943)[0m     @     0x563aff154baf _PyEval_EvalCodeWithName
[2m[36m(pid=21943)[0m     @     0x563aff155643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21943)[0m     @     0x563aff0ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21943)[0m     @     0x563aff154baf _PyEval_EvalCodeWithName
[2m[36m(pid=22019)[0m     @     0x7ed521bff148 at::Tensor::copy_()
[2m[36m(pid=22019)[0m     @     0x7ed527eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22019)[0m     @     0x5584abf42fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22019)[0m     @     0x5584abe9db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22019)[0m     @     0x5584abf28baf _PyEval_EvalCodeWithName
[2m[36m(pid=22019)[0m     @     0x5584abf29a20 method_vectorcall
[2m[36m(pid=22019)[0m     @     0x5584abe9dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22019)[0m     @     0x5584abf28baf _PyEval_EvalCodeWithName
[2m[36m(pid=22019)[0m     @     0x5584abf29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22019)[0m     @     0x5584abe9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22019)[0m     @     0x5584abf28baf _PyEval_EvalCodeWithName
[2m[36m(pid=22019)[0m     @     0x5584abf29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22019)[0m     @     0x5584abe9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22019)[0m     @     0x5584abf28baf _PyEval_EvalCodeWithName
[2m[36m(pid=22019)[0m     @     0x5584abf29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22019)[0m     @     0x5584abe9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22019)[0m     @     0x5584abf28baf _PyEval_EvalCodeWithName
[2m[36m(pid=21960)[0m     @     0x7fb511c6c148 at::Tensor::copy_()
[2m[36m(pid=21960)[0m     @     0x7fb517f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21960)[0m     @     0x564ee1bf8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21960)[0m     @     0x564ee1b53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21960)[0m     @     0x564ee1bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21960)[0m     @     0x564ee1bdfa20 method_vectorcall
[2m[36m(pid=21960)[0m     @     0x564ee1b53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21960)[0m     @     0x564ee1bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21960)[0m     @     0x564ee1bdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21960)[0m     @     0x564ee1b54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21960)[0m     @     0x564ee1bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21960)[0m     @     0x564ee1bdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21960)[0m     @     0x564ee1b54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21960)[0m     @     0x564ee1bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21960)[0m     @     0x564ee1bdf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21960)[0m     @     0x564ee1b54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21960)[0m     @     0x564ee1bdebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22030)[0m     @     0x7f624505aed4 at::native::copy_()
[2m[36m(pid=22030)[0m     @     0x7f624579d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22030)[0m     @     0x7f62458a5148 at::Tensor::copy_()
[2m[36m(pid=22002)[0m     @     0x7ecf3973c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22002)[0m     @     0x7ecf39844148 at::Tensor::copy_()
[2m[36m(pid=22002)[0m     @     0x7ecf3fafabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22002)[0m     @     0x55602cba6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22002)[0m     @     0x55602cb01b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22002)[0m     @     0x55602cb8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22002)[0m     @     0x55602cb8da20 method_vectorcall
[2m[36m(pid=22002)[0m     @     0x55602cb01bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22002)[0m     @     0x55602cb8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22002)[0m     @     0x55602cb8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22002)[0m     @     0x55602cb02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22002)[0m     @     0x55602cb8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22002)[0m     @     0x55602cb8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22002)[0m     @     0x55602cb02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22002)[0m     @     0x55602cb8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22002)[0m     @     0x55602cb8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22002)[0m     @     0x55602cb02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22002)[0m     @     0x55602cb8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22046)[0m     @     0x7f633ea58b53 at::TensorIterator::for_each()
[2m[36m(pid=22046)[0m     @     0x7f633ea58e11 at::TensorIterator::for_each()
[2m[36m(pid=22046)[0m     @     0x7f6341771c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22046)[0m     @     0x7f6341794cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22037)[0m     @     0x7f9953ab75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22037)[0m     @     0x7f9953bbf148 at::Tensor::copy_()
[2m[36m(pid=22037)[0m     @     0x7f9959e75bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22037)[0m     @     0x55de142b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22037)[0m     @     0x55de1420cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22037)[0m     @     0x55de14297baf _PyEval_EvalCodeWithName
[2m[36m(pid=22037)[0m     @     0x55de14298a20 method_vectorcall
[2m[36m(pid=22037)[0m     @     0x55de1420cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22037)[0m     @     0x55de14297baf _PyEval_EvalCodeWithName
[2m[36m(pid=22037)[0m     @     0x55de14298643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22037)[0m     @     0x55de1420d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22037)[0m     @     0x55de14297baf _PyEval_EvalCodeWithName
[2m[36m(pid=22037)[0m     @     0x55de14298643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22037)[0m     @     0x55de1420d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22037)[0m     @     0x55de14297baf _PyEval_EvalCodeWithName
[2m[36m(pid=22037)[0m     @     0x55de14298643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22037)[0m     @     0x55de1420d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22037)[0m     @     0x55de14297baf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x7edc69392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=22025)[0m     @     0x7edc69392b53 at::TensorIterator::for_each()
[2m[36m(pid=21941)[0m     @     0x7efa33ec0e11 at::TensorIterator::for_each()
[2m[36m(pid=21941)[0m     @     0x7efa36bd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21941)[0m     @     0x7efa36bfccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22006)[0m     @     0x7f9d1c969148 at::Tensor::copy_()
[2m[36m(pid=22006)[0m     @     0x7f9d1e560989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21948)[0m     @     0x7f1177eb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21948)[0m     @     0x7f1177eb7c3f at::native::copy_impl()
[2m[36m(pid=21948)[0m     @     0x7f1177eb8ed4 at::native::copy_()
[2m[36m(pid=22060)[0m     @     0x7fccda93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22010)[0m     @     0x7f8d9a1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22010)[0m     @     0x7f8d9a23c148 at::Tensor::copy_()
[2m[36m(pid=22010)[0m     @     0x7f8d9be33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21946)[0m     @     0x7fb3d6b3f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21946)[0m     @     0x7fb3d6c47148 at::Tensor::copy_()
[2m[36m(pid=22014)[0m     @     0x7f22f4809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22014)[0m     @     0x5586dd006fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22014)[0m     @     0x5586dcf61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22014)[0m     @     0x5586dcfecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22014)[0m     @     0x5586dcfeda20 method_vectorcall
[2m[36m(pid=22014)[0m     @     0x5586dcf61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22014)[0m     @     0x5586dcfecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22014)[0m     @     0x5586dcfed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22014)[0m     @     0x5586dcf62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22014)[0m     @     0x5586dcfecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22014)[0m     @     0x5586dcfed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22014)[0m     @     0x5586dcf62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22014)[0m     @     0x5586dcfecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22014)[0m     @     0x5586dcfed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22014)[0m     @     0x5586dcf62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22014)[0m     @     0x5586dcfecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22015)[0m     @     0x7f964db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22015)[0m     @     0x7f964dc6c148 at::Tensor::copy_()
[2m[36m(pid=22015)[0m     @     0x7f964f863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21949)[0m     @     0x7f58b0ae0ed4 at::native::copy_()
[2m[36m(pid=21949)[0m     @     0x7f58b12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22035)[0m     @     0x7f6161fe3ed4 at::native::copy_()
[2m[36m(pid=21940)[0m     @     0x7fbaed80bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21940)[0m     @     0x5577b7915fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21940)[0m     @     0x5577b7870b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21940)[0m     @     0x5577b78fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21940)[0m     @     0x5577b78fca20 method_vectorcall
[2m[36m(pid=21940)[0m     @     0x5577b7870bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21940)[0m     @     0x5577b78fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21940)[0m     @     0x5577b78fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21940)[0m     @     0x5577b7871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21940)[0m     @     0x5577b78fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21940)[0m     @     0x5577b78fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21940)[0m     @     0x5577b7871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21940)[0m     @     0x5577b78fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21940)[0m     @     0x5577b78fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21940)[0m     @     0x5577b7871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21940)[0m     @     0x5577b78fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21947)[0m     @     0x7fb244c4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21947)[0m     @     0x55da0b805fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21947)[0m     @     0x55da0b760b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21947)[0m     @     0x55da0b7ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21947)[0m     @     0x55da0b7eca20 method_vectorcall
[2m[36m(pid=21947)[0m     @     0x55da0b760bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21947)[0m     @     0x55da0b7ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21947)[0m     @     0x55da0b7ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21947)[0m     @     0x55da0b761689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21947)[0m     @     0x55da0b7ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21947)[0m     @     0x55da0b7ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21947)[0m     @     0x55da0b761689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21947)[0m     @     0x55da0b7ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21947)[0m     @     0x55da0b7ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21947)[0m     @     0x55da0b761689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21947)[0m     @     0x55da0b7ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21969)[0m     @     0x7fcac5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22071)[0m     @     0x7f0f46f4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22071)[0m     @     0x5597930f5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22071)[0m     @     0x559793050b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22071)[0m     @     0x5597930dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22071)[0m     @     0x5597930dca20 method_vectorcall
[2m[36m(pid=22071)[0m     @     0x559793050bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22071)[0m     @     0x5597930dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22071)[0m     @     0x5597930dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22071)[0m     @     0x559793051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22071)[0m     @     0x5597930dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22071)[0m     @     0x5597930dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22071)[0m     @     0x559793051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22071)[0m     @     0x5597930dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22071)[0m     @     0x5597930dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22071)[0m     @     0x559793051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22071)[0m     @     0x5597930dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22044)[0m     @     0x7f71e3014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22044)[0m     @     0x7f71e3012c3f at::native::copy_impl()
[2m[36m(pid=22044)[0m     @     0x7f71e3013ed4 at::native::copy_()
[2m[36m(pid=21971)[0m     @     0x7f9ed2665e11 at::TensorIterator::for_each()
[2m[36m(pid=21971)[0m     @     0x7f9ed537ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=21950)[0m     @     0x7f5c4c1685cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21950)[0m     @     0x7f5c4c270148 at::Tensor::copy_()
[2m[36m(pid=21950)[0m     @     0x7f5c4de67989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21965)[0m     @     0x7fc7cc24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21965)[0m     @     0x7fc7cc357148 at::Tensor::copy_()
[2m[36m(pid=21965)[0m     @     0x7fc7cdf4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21965)[0m     @     0x7fc7cc24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22001)[0m     @     0x7f471ba80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22001)[0m     @     0x7f471baa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22001)[0m     @     0x7f4718ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22001)[0m     @     0x7f4718adfc3f at::native::copy_impl()
[2m[36m(pid=22023)[0m     @     0x7f17848cde11 at::TensorIterator::for_each()
[2m[36m(pid=22023)[0m     @     0x7f17875e6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22023)[0m     @     0x7f1787609cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22023)[0m     @     0x7f1784647009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22023)[0m     @     0x7f1784645c3f at::native::copy_impl()
[2m[36m(pid=21956)[0m     @     0x7f8c1282e148 at::Tensor::copy_()
[2m[36m(pid=21956)[0m     @     0x7f8c14425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21956)[0m     @     0x7f8c127265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21944)[0m     @     0x55787af25baf _PyEval_EvalCodeWithName
[2m[36m(pid=21944)[0m     @     0x55787af26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21944)[0m     @     0x55787ae9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21944)[0m     @     0x55787af25baf _PyEval_EvalCodeWithName
[2m[36m(pid=21967)[0m     @     0x7f4b3f808ed4 at::native::copy_()
[2m[36m(pid=21967)[0m     @     0x7f4b3ff4b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21967)[0m     @     0x7f4b40053148 at::Tensor::copy_()
[2m[36m(pid=22003)[0m     @     0x7eed65c6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22003)[0m     @     0x7eed62cad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22003)[0m     @     0x7eed62cabc3f at::native::copy_impl()
[2m[36m(pid=22003)[0m     @     0x7eed62caced4 at::native::copy_()
[2m[36m(pid=22000)[0m     @     0x55cf86ee4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22000)[0m     @     0x55cf86f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22000)[0m     @     0x55cf86f6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22000)[0m     @     0x55cf86ee4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22000)[0m     @     0x55cf86f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22000)[0m     @     0x55cf86f6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22000)[0m     @     0x55cf86ee4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22000)[0m     @     0x55cf86f6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21958)[0m     @     0x56422a373baf _PyEval_EvalCodeWithName
[2m[36m(pid=21958)[0m     @     0x56422a374643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21958)[0m     @     0x56422a2e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21958)[0m     @     0x56422a373baf _PyEval_EvalCodeWithName
[2m[36m(pid=22029)[0m     @     0x7f74f23a85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22029)[0m     @     0x7f74f24b0148 at::Tensor::copy_()
[2m[36m(pid=22029)[0m     @     0x7f74f40a7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22008)[0m     @     0x7f5595956148 at::Tensor::copy_()
[2m[36m(pid=22008)[0m     @     0x7f559754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22008)[0m     @     0x7f559584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21974)[0m     @     0x7efa53fcb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21974)[0m     @     0x7efa540d3148 at::Tensor::copy_()
[2m[36m(pid=21974)[0m     @     0x7efa55cca989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21974)[0m     @     0x7efa53fcb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21964)[0m     @     0x556479c95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21964)[0m     @     0x556479d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21964)[0m     @     0x556479d20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21964)[0m     @     0x556479c95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21964)[0m     @     0x556479d1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22012)[0m     @     0x7fa4daedcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22012)[0m     @     0x55e8f0c13fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22012)[0m     @     0x55e8f0b6eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22012)[0m     @     0x55e8f0bf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22012)[0m     @     0x55e8f0bfaa20 method_vectorcall
[2m[36m(pid=22012)[0m     @     0x55e8f0b6ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22012)[0m     @     0x55e8f0bf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22012)[0m     @     0x55e8f0bfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22012)[0m     @     0x55e8f0b6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22012)[0m     @     0x55e8f0bf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22012)[0m     @     0x55e8f0bfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22012)[0m     @     0x55e8f0b6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22012)[0m     @     0x55e8f0bf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22012)[0m     @     0x55e8f0bfa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22012)[0m     @     0x55e8f0b6f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22012)[0m     @     0x55e8f0bf9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22022)[0m     @     0x7eda0b627148 at::Tensor::copy_()
[2m[36m(pid=22022)[0m     @     0x7eda0d21e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22022)[0m     @     0x7eda0b51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21942)[0m     @     0x7f56f365b148 at::Tensor::copy_()
[2m[36m(pid=21942)[0m     @     0x7f56f5252989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21966)[0m     @     0x7f99a5bc6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21966)[0m     @     0x560fe2cb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21966)[0m     @     0x560fe2c0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21966)[0m     @     0x560fe2c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=21966)[0m     @     0x560fe2c9ba20 method_vectorcall
[2m[36m(pid=21966)[0m     @     0x560fe2c0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21966)[0m     @     0x560fe2c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=21966)[0m     @     0x560fe2c9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21966)[0m     @     0x560fe2c10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21966)[0m     @     0x560fe2c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=21966)[0m     @     0x560fe2c9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21966)[0m     @     0x560fe2c10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21966)[0m     @     0x560fe2c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=21966)[0m     @     0x560fe2c9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21966)[0m     @     0x560fe2c10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21966)[0m     @     0x560fe2c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=22041)[0m     @     0x7fb55b41ded4 at::native::copy_()
[2m[36m(pid=22030)[0m     @     0x7f624749c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22030)[0m     @     0x7f624579d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22030)[0m     @     0x7f62458a5148 at::Tensor::copy_()
[2m[36m(pid=22030)[0m     @     0x7f624bb5bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22030)[0m     @     0x55817fcc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22030)[0m     @     0x55817fc1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22030)[0m     @     0x55817fca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22030)[0m     @     0x55817fca8a20 method_vectorcall
[2m[36m(pid=22046)[0m     @     0x7f633e7d2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22046)[0m     @     0x7f633e7d0c3f at::native::copy_impl()
[2m[36m(pid=22046)[0m     @     0x7f633e7d1ed4 at::native::copy_()
[2m[36m(pid=22046)[0m     @     0x7f633ef145cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22025)[0m     @     0x7edc69392e11 at::TensorIterator::for_each()
[2m[36m(pid=22025)[0m     @     0x7edc6c0abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=22025)[0m     @     0x7edc6c0cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=22025)[0m     @     0x7edc6910c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=22025)[0m     @     0x7edc6910ac3f at::native::copy_impl()
[2m[36m(pid=21941)[0m     @     0x7efa33c3a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21941)[0m     @     0x7efa33c38c3f at::native::copy_impl()
[2m[36m(pid=21941)[0m     @     0x7efa33c39ed4 at::native::copy_()
[2m[36m(pid=21941)[0m     @     0x7efa3437c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22006)[0m     @     0x7f9d1c8615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22006)[0m     @     0x7f9d1c969148 at::Tensor::copy_()
[2m[36m(pid=22006)[0m     @     0x7f9d22c1fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22006)[0m     @     0x55ebdb3affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22006)[0m     @     0x55ebdb30ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22006)[0m     @     0x55ebdb395baf _PyEval_EvalCodeWithName
[2m[36m(pid=22006)[0m     @     0x55ebdb396a20 method_vectorcall
[2m[36m(pid=22006)[0m     @     0x55ebdb30abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22006)[0m     @     0x55ebdb395baf _PyEval_EvalCodeWithName
[2m[36m(pid=22006)[0m     @     0x55ebdb396643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22006)[0m     @     0x55ebdb30b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22006)[0m     @     0x55ebdb395baf _PyEval_EvalCodeWithName
[2m[36m(pid=22006)[0m     @     0x55ebdb396643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22006)[0m     @     0x55ebdb30b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22006)[0m     @     0x55ebdb395baf _PyEval_EvalCodeWithName
[2m[36m(pid=22006)[0m     @     0x55ebdb396643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22006)[0m     @     0x55ebdb30b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22006)[0m     @     0x55ebdb395baf _PyEval_EvalCodeWithName
[2m[36m(pid=21948)[0m     @     0x7f11785fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21948)[0m     @     0x7f1178703148 at::Tensor::copy_()
[2m[36m(pid=21948)[0m     @     0x7f117a2fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22010)[0m     @     0x7f8d9a1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22010)[0m     @     0x7f8d9a23c148 at::Tensor::copy_()
[2m[36m(pid=22010)[0m     @     0x7f8da04f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22010)[0m     @     0x55c458ec3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22010)[0m     @     0x55c458e1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22010)[0m     @     0x55c458ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22010)[0m     @     0x55c458eaaa20 method_vectorcall
[2m[36m(pid=22010)[0m     @     0x55c458e1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22010)[0m     @     0x55c458ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22010)[0m     @     0x55c458eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22010)[0m     @     0x55c458e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22010)[0m     @     0x55c458ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22010)[0m     @     0x55c458eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22010)[0m     @     0x55c458e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22010)[0m     @     0x55c458ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=22010)[0m     @     0x55c458eaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22010)[0m     @     0x55c458e1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22010)[0m     @     0x55c458ea9baf _PyEval_EvalCodeWithName
[2m[36m(pid=21946)[0m     @     0x7fb3d883e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21946)[0m     @     0x7fb3d6b3f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21946)[0m     @     0x7fb3d6c47148 at::Tensor::copy_()
[2m[36m(pid=21946)[0m     @     0x7fb3dcefdbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21946)[0m     @     0x55f9a56d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21946)[0m     @     0x55f9a5630b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21946)[0m     @     0x55f9a56bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21946)[0m     @     0x55f9a56bca20 method_vectorcall
[2m[36m(pid=21946)[0m     @     0x55f9a5630bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21946)[0m     @     0x55f9a56bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21946)[0m     @     0x55f9a56bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22015)[0m     @     0x7f964db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22015)[0m     @     0x7f964dc6c148 at::Tensor::copy_()
[2m[36m(pid=22015)[0m     @     0x7f9653f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22015)[0m     @     0x5555e30abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22015)[0m     @     0x5555e3006b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22015)[0m     @     0x5555e3091baf _PyEval_EvalCodeWithName
[2m[36m(pid=22015)[0m     @     0x5555e3092a20 method_vectorcall
[2m[36m(pid=22015)[0m     @     0x5555e3006bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22015)[0m     @     0x5555e3091baf _PyEval_EvalCodeWithName
[2m[36m(pid=22015)[0m     @     0x5555e3092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22015)[0m     @     0x5555e3007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22015)[0m     @     0x5555e3091baf _PyEval_EvalCodeWithName
[2m[36m(pid=22015)[0m     @     0x5555e3092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22015)[0m     @     0x5555e3007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22015)[0m     @     0x5555e3091baf _PyEval_EvalCodeWithName
[2m[36m(pid=22015)[0m     @     0x5555e3092643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22015)[0m     @     0x5555e3007689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22015)[0m     @     0x5555e3091baf _PyEval_EvalCodeWithName
[2m[36m(pid=21949)[0m     @     0x7f58b132b148 at::Tensor::copy_()
[2m[36m(pid=21949)[0m     @     0x7f58b2f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21949)[0m     @     0x7f58b12235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22035)[0m     @     0x7f61627265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22035)[0m     @     0x7f616282e148 at::Tensor::copy_()
[2m[36m(pid=22035)[0m     @     0x7f6164425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21969)[0m     @     0x7fcac5e7d148 at::Tensor::copy_()
[2m[36m(pid=21969)[0m     @     0x7fcac7a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21969)[0m     @     0x7fcac5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21969)[0m     @     0x7fcac5e7d148 at::Tensor::copy_()
[2m[36m(pid=22044)[0m     @     0x7f71e37565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22044)[0m     @     0x7f71e385e148 at::Tensor::copy_()
[2m[36m(pid=22044)[0m     @     0x7f71e5455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21971)[0m     @     0x7f9ed53a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=21971)[0m     @     0x7f9ed23df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=21971)[0m     @     0x7f9ed23ddc3f at::native::copy_impl()
[2m[36m(pid=21950)[0m     @     0x7f5c4c1685cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21950)[0m     @     0x7f5c4c270148 at::Tensor::copy_()
[2m[36m(pid=21950)[0m     @     0x7f5c5231ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21965)[0m     @     0x7fc7cc357148 at::Tensor::copy_()
[2m[36m(pid=21965)[0m     @     0x7fc7d260dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21965)[0m     @     0x5577c2f04fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21965)[0m     @     0x5577c2e5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21965)[0m     @     0x5577c2eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=21965)[0m     @     0x5577c2eeba20 method_vectorcall
[2m[36m(pid=21965)[0m     @     0x5577c2e5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21965)[0m     @     0x5577c2eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=21965)[0m     @     0x5577c2eeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21965)[0m     @     0x5577c2e60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21965)[0m     @     0x5577c2eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=21965)[0m     @     0x5577c2eeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21965)[0m     @     0x5577c2e60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21965)[0m     @     0x5577c2eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=21965)[0m     @     0x5577c2eeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22023)[0m     @     0x7f1784646ed4 at::native::copy_()
[2m[36m(pid=21956)[0m     @     0x7f8c1282e148 at::Tensor::copy_()
[2m[36m(pid=21956)[0m     @     0x7f8c18ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21956)[0m     @     0x56057e79bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21956)[0m     @     0x56057e6f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21956)[0m     @     0x56057e781baf _PyEval_EvalCodeWithName
[2m[36m(pid=21956)[0m     @     0x56057e782a20 method_vectorcall
[2m[36m(pid=21956)[0m     @     0x56057e6f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21956)[0m     @     0x56057e781baf _PyEval_EvalCodeWithName
[2m[36m(pid=21956)[0m     @     0x56057e782643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21956)[0m     @     0x56057e6f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21956)[0m     @     0x56057e781baf _PyEval_EvalCodeWithName
[2m[36m(pid=21956)[0m     @     0x56057e782643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21956)[0m     @     0x56057e6f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21956)[0m     @     0x56057e781baf _PyEval_EvalCodeWithName
[2m[36m(pid=21956)[0m     @     0x56057e782643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21956)[0m     @     0x56057e6f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21956)[0m     @     0x56057e781baf _PyEval_EvalCodeWithName
[2m[36m(pid=21967)[0m     @     0x7f4b41c4a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21967)[0m     @     0x7f4b3ff4b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21967)[0m     @     0x7f4b40053148 at::Tensor::copy_()
[2m[36m(pid=22003)[0m     @     0x7eed633ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22003)[0m     @     0x7eed634f7148 at::Tensor::copy_()
[2m[36m(pid=22003)[0m     @     0x7eed650ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22029)[0m     @     0x7f74f23a85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22029)[0m     @     0x7f74f24b0148 at::Tensor::copy_()
[2m[36m(pid=22029)[0m     @     0x7f74f8766bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22029)[0m     @     0x5650e24affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22029)[0m     @     0x5650e240ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22029)[0m     @     0x5650e2495baf _PyEval_EvalCodeWithName
[2m[36m(pid=22029)[0m     @     0x5650e2496a20 method_vectorcall
[2m[36m(pid=22029)[0m     @     0x5650e240abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22029)[0m     @     0x5650e2495baf _PyEval_EvalCodeWithName
[2m[36m(pid=22029)[0m     @     0x5650e2496643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22029)[0m     @     0x5650e240b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22029)[0m     @     0x5650e2495baf _PyEval_EvalCodeWithName
[2m[36m(pid=22029)[0m     @     0x5650e2496643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22029)[0m     @     0x5650e240b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22029)[0m     @     0x5650e2495baf _PyEval_EvalCodeWithName
[2m[36m(pid=22029)[0m     @     0x5650e2496643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22029)[0m     @     0x5650e240b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22029)[0m     @     0x5650e2495baf _PyEval_EvalCodeWithName
[2m[36m(pid=22008)[0m     @     0x7f5595956148 at::Tensor::copy_()
[2m[36m(pid=22008)[0m     @     0x7f559bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22008)[0m     @     0x55791f107fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22008)[0m     @     0x55791f062b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22008)[0m     @     0x55791f0edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22008)[0m     @     0x55791f0eea20 method_vectorcall
[2m[36m(pid=22008)[0m     @     0x55791f062bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22008)[0m     @     0x55791f0edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22008)[0m     @     0x55791f0ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22008)[0m     @     0x55791f063689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22008)[0m     @     0x55791f0edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22008)[0m     @     0x55791f0ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22008)[0m     @     0x55791f063689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22008)[0m     @     0x55791f0edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22008)[0m     @     0x55791f0ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22008)[0m     @     0x55791f063689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22008)[0m     @     0x55791f0edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21974)[0m     @     0x7efa540d3148 at::Tensor::copy_()
[2m[36m(pid=21974)[0m     @     0x7efa5a389bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21974)[0m     @     0x55a2dbf8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21974)[0m     @     0x55a2dbee6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21974)[0m     @     0x55a2dbf71baf _PyEval_EvalCodeWithName
[2m[36m(pid=21974)[0m     @     0x55a2dbf72a20 method_vectorcall
[2m[36m(pid=21974)[0m     @     0x55a2dbee6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21974)[0m     @     0x55a2dbf71baf _PyEval_EvalCodeWithName
[2m[36m(pid=21974)[0m     @     0x55a2dbf72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21974)[0m     @     0x55a2dbee7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21974)[0m     @     0x55a2dbf71baf _PyEval_EvalCodeWithName
[2m[36m(pid=21974)[0m     @     0x55a2dbf72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21974)[0m     @     0x55a2dbee7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21974)[0m     @     0x55a2dbf71baf _PyEval_EvalCodeWithName
[2m[36m(pid=21974)[0m     @     0x55a2dbf72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21974)[0m     @     0x55a2dbee7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21974)[0m     @     0x55a2dbf71baf _PyEval_EvalCodeWithName
[2m[36m(pid=22022)[0m     @     0x7eda0b627148 at::Tensor::copy_()
[2m[36m(pid=22022)[0m     @     0x7eda118ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22022)[0m     @     0x561cc3478fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22022)[0m     @     0x561cc33d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22022)[0m     @     0x561cc345ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22022)[0m     @     0x561cc345fa20 method_vectorcall
[2m[36m(pid=22022)[0m     @     0x561cc33d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22022)[0m     @     0x561cc345ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22022)[0m     @     0x561cc345f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22022)[0m     @     0x561cc33d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22022)[0m     @     0x561cc345ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22022)[0m     @     0x561cc345f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22022)[0m     @     0x561cc33d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22022)[0m     @     0x561cc345ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22022)[0m     @     0x561cc345f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22022)[0m     @     0x561cc33d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22022)[0m     @     0x561cc345ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=21942)[0m     @     0x7f56f35535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21942)[0m     @     0x7f56f365b148 at::Tensor::copy_()
[2m[36m(pid=21942)[0m     @     0x7f56f9911bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21942)[0m     @     0x55896fa72fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21942)[0m     @     0x55896f9cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21942)[0m     @     0x55896fa58baf _PyEval_EvalCodeWithName
[2m[36m(pid=21942)[0m     @     0x55896fa59a20 method_vectorcall
[2m[36m(pid=21942)[0m     @     0x55896f9cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21942)[0m     @     0x55896fa58baf _PyEval_EvalCodeWithName
[2m[36m(pid=21942)[0m     @     0x55896fa59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21942)[0m     @     0x55896f9ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21942)[0m     @     0x55896fa58baf _PyEval_EvalCodeWithName
[2m[36m(pid=21942)[0m     @     0x55896fa59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21942)[0m     @     0x55896f9ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21942)[0m     @     0x55896fa58baf _PyEval_EvalCodeWithName
[2m[36m(pid=21942)[0m     @     0x55896fa59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21942)[0m     @     0x55896f9ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21942)[0m     @     0x55896fa58baf _PyEval_EvalCodeWithName
[2m[36m(pid=22041)[0m     @     0x7fb55bb605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22041)[0m     @     0x7fb55bc68148 at::Tensor::copy_()
[2m[36m(pid=22041)[0m     @     0x7fb55d85f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22030)[0m     @     0x55817fc1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22030)[0m     @     0x55817fca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22030)[0m     @     0x55817fca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22030)[0m     @     0x55817fc1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22030)[0m     @     0x55817fca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22030)[0m     @     0x55817fca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22030)[0m     @     0x55817fc1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22030)[0m     @     0x55817fca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22030)[0m     @     0x55817fca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22030)[0m     @     0x55817fc1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22030)[0m     @     0x55817fca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=22046)[0m     @     0x7f633f01c148 at::Tensor::copy_()
[2m[36m(pid=22046)[0m     @     0x7f6340c13989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22025)[0m     @     0x7edc6910bed4 at::native::copy_()
[2m[36m(pid=22025)[0m     @     0x7edc6984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21941)[0m     @     0x7efa34484148 at::Tensor::copy_()
[2m[36m(pid=21941)[0m     @     0x7efa3607b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21941)[0m     @     0x7efa3437c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21948)[0m     @     0x7f11785fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21948)[0m     @     0x7f1178703148 at::Tensor::copy_()
[2m[36m(pid=21948)[0m     @     0x7f117e9b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21948)[0m     @     0x55b714bc6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21948)[0m     @     0x55b714b21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21948)[0m     @     0x55b714bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21948)[0m     @     0x55b714bada20 method_vectorcall
[2m[36m(pid=21948)[0m     @     0x55b714b21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21948)[0m     @     0x55b714bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21948)[0m     @     0x55b714bad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21948)[0m     @     0x55b714b22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21948)[0m     @     0x55b714bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21948)[0m     @     0x55b714bad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21948)[0m     @     0x55b714b22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21948)[0m     @     0x55b714bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21948)[0m     @     0x55b714bad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21948)[0m     @     0x55b714b22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21948)[0m     @     0x55b714bacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21946)[0m     @     0x55f9a5631689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21946)[0m     @     0x55f9a56bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21946)[0m     @     0x55f9a56bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21946)[0m     @     0x55f9a5631689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21946)[0m     @     0x55f9a56bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21946)[0m     @     0x55f9a56bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21946)[0m     @     0x55f9a5631689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21946)[0m     @     0x55f9a56bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21949)[0m     @     0x7f58b132b148 at::Tensor::copy_()
[2m[36m(pid=21949)[0m     @     0x7f58b75e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21949)[0m     @     0x55f4bdb96fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21949)[0m     @     0x55f4bdaf1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21949)[0m     @     0x55f4bdb7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21949)[0m     @     0x55f4bdb7da20 method_vectorcall
[2m[36m(pid=21949)[0m     @     0x55f4bdaf1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21949)[0m     @     0x55f4bdb7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21949)[0m     @     0x55f4bdb7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21949)[0m     @     0x55f4bdaf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21949)[0m     @     0x55f4bdb7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21949)[0m     @     0x55f4bdb7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21949)[0m     @     0x55f4bdaf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21949)[0m     @     0x55f4bdb7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21949)[0m     @     0x55f4bdb7d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21949)[0m     @     0x55f4bdaf2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21949)[0m     @     0x55f4bdb7cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22035)[0m     @     0x7f61627265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22035)[0m     @     0x7f616282e148 at::Tensor::copy_()
[2m[36m(pid=22035)[0m     @     0x7f6168ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22035)[0m     @     0x5589aea6efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22035)[0m     @     0x5589ae9c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22035)[0m     @     0x5589aea54baf _PyEval_EvalCodeWithName
[2m[36m(pid=22035)[0m     @     0x5589aea55a20 method_vectorcall
[2m[36m(pid=22035)[0m     @     0x5589ae9c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22035)[0m     @     0x5589aea54baf _PyEval_EvalCodeWithName
[2m[36m(pid=22035)[0m     @     0x5589aea55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22035)[0m     @     0x5589ae9ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22035)[0m     @     0x5589aea54baf _PyEval_EvalCodeWithName
[2m[36m(pid=22035)[0m     @     0x5589aea55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22035)[0m     @     0x5589ae9ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22035)[0m     @     0x5589aea54baf _PyEval_EvalCodeWithName
[2m[36m(pid=22035)[0m     @     0x5589aea55643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22035)[0m     @     0x5589ae9ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22035)[0m     @     0x5589aea54baf _PyEval_EvalCodeWithName
[2m[36m(pid=21969)[0m     @     0x7fcacc133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21969)[0m     @     0x5627e827dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21969)[0m     @     0x5627e81d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21969)[0m     @     0x5627e8263baf _PyEval_EvalCodeWithName
[2m[36m(pid=21969)[0m     @     0x5627e8264a20 method_vectorcall
[2m[36m(pid=21969)[0m     @     0x5627e81d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21969)[0m     @     0x5627e8263baf _PyEval_EvalCodeWithName
[2m[36m(pid=21969)[0m     @     0x5627e8264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21969)[0m     @     0x5627e81d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21969)[0m     @     0x5627e8263baf _PyEval_EvalCodeWithName
[2m[36m(pid=21969)[0m     @     0x5627e8264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21969)[0m     @     0x5627e81d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21969)[0m     @     0x5627e8263baf _PyEval_EvalCodeWithName
[2m[36m(pid=21969)[0m     @     0x5627e8264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21969)[0m     @     0x5627e81d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21969)[0m     @     0x5627e8263baf _PyEval_EvalCodeWithName
[2m[36m(pid=22044)[0m     @     0x7f71e37565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22044)[0m     @     0x7f71e385e148 at::Tensor::copy_()
[2m[36m(pid=22044)[0m     @     0x7f71e9b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22044)[0m     @     0x55fd2f2d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22044)[0m     @     0x55fd2f22bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22044)[0m     @     0x55fd2f2b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22044)[0m     @     0x55fd2f2b7a20 method_vectorcall
[2m[36m(pid=22044)[0m     @     0x55fd2f22bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22044)[0m     @     0x55fd2f2b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22044)[0m     @     0x55fd2f2b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22044)[0m     @     0x55fd2f22c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22044)[0m     @     0x55fd2f2b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22044)[0m     @     0x55fd2f2b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22044)[0m     @     0x55fd2f22c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22044)[0m     @     0x55fd2f2b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=22044)[0m     @     0x55fd2f2b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22044)[0m     @     0x55fd2f22c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22044)[0m     @     0x55fd2f2b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=21971)[0m     @     0x7f9ed23deed4 at::native::copy_()
[2m[36m(pid=21971)[0m     @     0x7f9ed2b215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21971)[0m     @     0x7f9ed2c29148 at::Tensor::copy_()
[2m[36m(pid=21971)[0m     @     0x7f9ed4820989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21950)[0m     @     0x56273771efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21950)[0m     @     0x562737679b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21950)[0m     @     0x562737704baf _PyEval_EvalCodeWithName
[2m[36m(pid=21950)[0m     @     0x562737705a20 method_vectorcall
[2m[36m(pid=21950)[0m     @     0x562737679bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21950)[0m     @     0x562737704baf _PyEval_EvalCodeWithName
[2m[36m(pid=21950)[0m     @     0x562737705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21950)[0m     @     0x56273767a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21950)[0m     @     0x562737704baf _PyEval_EvalCodeWithName
[2m[36m(pid=21950)[0m     @     0x562737705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21950)[0m     @     0x56273767a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21950)[0m     @     0x562737704baf _PyEval_EvalCodeWithName
[2m[36m(pid=21950)[0m     @     0x562737705643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21950)[0m     @     0x56273767a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21950)[0m     @     0x562737704baf _PyEval_EvalCodeWithName
[2m[36m(pid=21965)[0m     @     0x5577c2e60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21965)[0m     @     0x5577c2eeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=22001)[0m     @     0x7f4718ae0ed4 at::native::copy_()
[2m[36m(pid=22001)[0m     @     0x7f47192235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22023)[0m     @     0x7f1784d895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22023)[0m     @     0x7f1784e91148 at::Tensor::copy_()
[2m[36m(pid=22023)[0m     @     0x7f1786a88989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21967)[0m     @     0x7f4b46309bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21967)[0m     @     0x55753ce66fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21967)[0m     @     0x55753cdc1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21967)[0m     @     0x55753ce4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21967)[0m     @     0x55753ce4da20 method_vectorcall
[2m[36m(pid=21967)[0m     @     0x55753cdc1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21967)[0m     @     0x55753ce4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21967)[0m     @     0x55753ce4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21967)[0m     @     0x55753cdc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21967)[0m     @     0x55753ce4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21967)[0m     @     0x55753ce4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21967)[0m     @     0x55753cdc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21967)[0m     @     0x55753ce4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21967)[0m     @     0x55753ce4d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21967)[0m     @     0x55753cdc2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21967)[0m     @     0x55753ce4cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22003)[0m     @     0x7eed633ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22003)[0m     @     0x7eed634f7148 at::Tensor::copy_()
[2m[36m(pid=22041)[0m     @     0x7fb55bb605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22041)[0m     @     0x7fb55bc68148 at::Tensor::copy_()
[2m[36m(pid=22041)[0m     @     0x7fb561f1ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22041)[0m     @     0x559e5cccffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22041)[0m     @     0x559e5cc2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22041)[0m     @     0x559e5ccb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22041)[0m     @     0x559e5ccb6a20 method_vectorcall
[2m[36m(pid=22041)[0m     @     0x559e5cc2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22041)[0m     @     0x559e5ccb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22041)[0m     @     0x559e5ccb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22041)[0m     @     0x559e5cc2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22041)[0m     @     0x559e5ccb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22041)[0m     @     0x559e5ccb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22041)[0m     @     0x559e5cc2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22041)[0m     @     0x559e5ccb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22041)[0m     @     0x559e5ccb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22041)[0m     @     0x559e5cc2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22041)[0m     @     0x559e5ccb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=22046)[0m     @     0x7f633ef145cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22046)[0m     @     0x7f633f01c148 at::Tensor::copy_()
[2m[36m(pid=22046)[0m     @     0x7f63452d2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22046)[0m     @     0x563b383fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22046)[0m     @     0x563b38356b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22046)[0m     @     0x563b383e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22046)[0m     @     0x563b383e2a20 method_vectorcall
[2m[36m(pid=22046)[0m     @     0x563b38356bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22046)[0m     @     0x563b383e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22046)[0m     @     0x563b383e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22046)[0m     @     0x563b38357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22046)[0m     @     0x563b383e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22046)[0m     @     0x563b383e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22046)[0m     @     0x563b38357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22046)[0m     @     0x563b383e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22046)[0m     @     0x563b383e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22046)[0m     @     0x563b38357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22046)[0m     @     0x563b383e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x7edc69956148 at::Tensor::copy_()
[2m[36m(pid=22025)[0m     @     0x7edc6b54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22025)[0m     @     0x7edc6984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21941)[0m     @     0x7efa34484148 at::Tensor::copy_()
[2m[36m(pid=21941)[0m     @     0x7efa3a31ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21941)[0m     @     0x559b0e967fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21941)[0m     @     0x559b0e8c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21941)[0m     @     0x559b0e94dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21941)[0m     @     0x559b0e94ea20 method_vectorcall
[2m[36m(pid=21941)[0m     @     0x559b0e8c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21941)[0m     @     0x559b0e94dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21941)[0m     @     0x559b0e94e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21941)[0m     @     0x559b0e8c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21941)[0m     @     0x559b0e94dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21941)[0m     @     0x559b0e94e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21941)[0m     @     0x559b0e8c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22001)[0m     @     0x7f471932b148 at::Tensor::copy_()
[2m[36m(pid=22001)[0m     @     0x7f471af22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=22001)[0m     @     0x7f47192235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22023)[0m     @     0x7f1784d895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22003)[0m     @     0x7eed697adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22003)[0m     @     0x558b25f3dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22003)[0m     @     0x558b25e98b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22003)[0m     @     0x558b25f23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22003)[0m     @     0x558b25f24a20 method_vectorcall
[2m[36m(pid=22003)[0m     @     0x558b25e98bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22003)[0m     @     0x558b25f23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22003)[0m     @     0x558b25f24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22003)[0m     @     0x558b25e99689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22003)[0m     @     0x558b25f23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22003)[0m     @     0x558b25f24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22003)[0m     @     0x558b25e99689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22003)[0m     @     0x558b25f23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22003)[0m     @     0x558b25f24643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22003)[0m     @     0x558b25e99689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22003)[0m     @     0x558b25f23baf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x7edc69956148 at::Tensor::copy_()
[2m[36m(pid=21941)[0m     @     0x559b0e94dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=21941)[0m     @     0x559b0e94e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21941)[0m     @     0x559b0e8c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21941)[0m     @     0x559b0e94dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=22060)[0m     @     0x7fccdaa45148 at::Tensor::copy_()
[2m[36m(pid=22060)[0m     @     0x7fccdc63c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=21971)[0m     @     0x7f9ed2b215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=21971)[0m     @     0x7f9ed2c29148 at::Tensor::copy_()
[2m[36m(pid=21971)[0m     @     0x7f9ed8edfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=21971)[0m     @     0x55643a35efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=21971)[0m     @     0x55643a2b9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21971)[0m     @     0x55643a344baf _PyEval_EvalCodeWithName
[2m[36m(pid=21971)[0m     @     0x55643a345a20 method_vectorcall
[2m[36m(pid=21971)[0m     @     0x55643a2b9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21971)[0m     @     0x55643a344baf _PyEval_EvalCodeWithName
[2m[36m(pid=21971)[0m     @     0x55643a345643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21971)[0m     @     0x55643a2ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21971)[0m     @     0x55643a344baf _PyEval_EvalCodeWithName
[2m[36m(pid=21971)[0m     @     0x55643a345643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21971)[0m     @     0x55643a2ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21971)[0m     @     0x55643a344baf _PyEval_EvalCodeWithName
[2m[36m(pid=21971)[0m     @     0x55643a345643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=21971)[0m     @     0x55643a2ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=21971)[0m     @     0x55643a344baf _PyEval_EvalCodeWithName
[2m[36m(pid=22001)[0m     @     0x7f471932b148 at::Tensor::copy_()
[2m[36m(pid=22001)[0m     @     0x7f471f5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22001)[0m     @     0x55e12c548fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22001)[0m     @     0x55e12c4a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22001)[0m     @     0x55e12c52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22001)[0m     @     0x55e12c52fa20 method_vectorcall
[2m[36m(pid=22001)[0m     @     0x55e12c4a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22001)[0m     @     0x55e12c52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x7edc6fc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22025)[0m     @     0x564abea88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22025)[0m     @     0x564abe9e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22025)[0m     @     0x564abea6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x564abea6fa20 method_vectorcall
[2m[36m(pid=22025)[0m     @     0x564abe9e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22025)[0m     @     0x564abea6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x564abea6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22025)[0m     @     0x564abe9e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22025)[0m     @     0x564abea6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x564abea6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22025)[0m     @     0x564abe9e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22025)[0m     @     0x564abea6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22025)[0m     @     0x564abea6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22025)[0m     @     0x564abe9e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22025)[0m     @     0x564abea6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22060)[0m     @     0x7fccda93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=22001)[0m     @     0x55e12c52f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22001)[0m     @     0x55e12c4a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22001)[0m     @     0x55e12c52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22001)[0m     @     0x55e12c52f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22001)[0m     @     0x55e12c4a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22001)[0m     @     0x55e12c52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22001)[0m     @     0x55e12c52f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22001)[0m     @     0x55e12c4a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22001)[0m     @     0x55e12c52ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=22023)[0m     @     0x7f1784e91148 at::Tensor::copy_()
[2m[36m(pid=22023)[0m     @     0x7f178b147bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22023)[0m     @     0x55c0f8142fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22023)[0m     @     0x55c0f809db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22023)[0m     @     0x55c0f8128baf _PyEval_EvalCodeWithName
[2m[36m(pid=22023)[0m     @     0x55c0f8129a20 method_vectorcall
[2m[36m(pid=22023)[0m     @     0x55c0f809dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22023)[0m     @     0x55c0f8128baf _PyEval_EvalCodeWithName
[2m[36m(pid=22023)[0m     @     0x55c0f8129643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22023)[0m     @     0x55c0f809e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22023)[0m     @     0x55c0f8128baf _PyEval_EvalCodeWithName
[2m[36m(pid=22023)[0m     @     0x55c0f8129643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22023)[0m     @     0x55c0f809e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22023)[0m     @     0x55c0f8128baf _PyEval_EvalCodeWithName
[2m[36m(pid=22023)[0m     @     0x55c0f8129643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22023)[0m     @     0x55c0f809e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22023)[0m     @     0x55c0f8128baf _PyEval_EvalCodeWithName
[2m[36m(pid=22060)[0m     @     0x7fccdaa45148 at::Tensor::copy_()
[2m[36m(pid=22060)[0m     @     0x7fcce0cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=22060)[0m     @     0x55c3c018dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=22060)[0m     @     0x55c3c00e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22060)[0m     @     0x55c3c0173baf _PyEval_EvalCodeWithName
[2m[36m(pid=22060)[0m     @     0x55c3c0174a20 method_vectorcall
[2m[36m(pid=22060)[0m     @     0x55c3c00e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22060)[0m     @     0x55c3c0173baf _PyEval_EvalCodeWithName
[2m[36m(pid=22060)[0m     @     0x55c3c0174643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22060)[0m     @     0x55c3c00e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22060)[0m     @     0x55c3c0173baf _PyEval_EvalCodeWithName
[2m[36m(pid=22060)[0m     @     0x55c3c0174643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22060)[0m     @     0x55c3c00e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22060)[0m     @     0x55c3c0173baf _PyEval_EvalCodeWithName
[2m[36m(pid=22060)[0m     @     0x55c3c0174643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=22060)[0m     @     0x55c3c00e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=22060)[0m     @     0x55c3c0173baf _PyEval_EvalCodeWithName
2020-11-05 11:03:00,821	ERROR trial_runner.py:567 -- Trial PPO_jss_env_739f5_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=22047, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 11:03:00,828	WARNING worker.py:1072 -- A worker died or was killed while executing task fffffffffffffffff120020c01000000.
2020-11-05 11:03:00,829	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
== Status ==
Memory usage on this node: 22.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_739f5_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_739f5_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_739f5_00000_0_2020-11-05_11-02-53/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 11:03:00,850	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff51728d3301000000.
== Status ==
Memory usage on this node: 22.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_739f5_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_739f5_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_739f5_00000_0_2020-11-05_11-02-53/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 11:03:00,851	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 11:03:00,851	WARNING worker.py:1072 -- A worker died or was killed while executing task fffffffffffffffff257d30801000000.
2020-11-05 11:03:00,851	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 11:03:00,851	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_739f5_00000])
