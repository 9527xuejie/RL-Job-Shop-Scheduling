2020-11-05 10:55:30,802	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6cb09_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=76757)[0m 2020-11-05 10:55:33,616	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=76705)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76705)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76705)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76705)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76705)[0m *** SIGSEGV (@0x0) received by PID 76705 (TID 0x7fb677704700) from PID 0; stack trace: ***
[2m[36m(pid=76705)[0m     @     0x7fb6772dd390 (unknown)
[2m[36m(pid=76705)[0m     @     0x7f87794f0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76705)[0m     @     0x7f87767e464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76705)[0m     @     0x7f87767e7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76702)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76702)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76702)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76702)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76702)[0m *** SIGSEGV (@0x0) received by PID 76702 (TID 0x7f45afd19700) from PID 0; stack trace: ***
[2m[36m(pid=76702)[0m     @     0x7f45af8f2390 (unknown)
[2m[36m(pid=76702)[0m     @     0x7f16b1b15fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76702)[0m     @     0x7f16aee0964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76702)[0m     @     0x7f16aee0c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76682)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76682)[0m *** SIGSEGV (@0x0) received by PID 76682 (TID 0x7f80c6ad9700) from PID 0; stack trace: ***
[2m[36m(pid=76682)[0m     @     0x7f80c66b2390 (unknown)
[2m[36m(pid=76682)[0m     @     0x7f51c8770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76682)[0m     @     0x7f51c5a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76682)[0m     @     0x7f51c5a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76678)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76678)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76678)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76678)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76678)[0m *** SIGSEGV (@0x0) received by PID 76678 (TID 0x7ff8f6f89700) from PID 0; stack trace: ***
[2m[36m(pid=76678)[0m     @     0x7ff8f6b62390 (unknown)
[2m[36m(pid=76678)[0m     @     0x7fc9f8c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76678)[0m     @     0x7fc9f5f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76678)[0m     @     0x7fc9f5f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76678)[0m     @     0x7fc9f5f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=76726)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76726)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76726)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76726)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76726)[0m *** SIGSEGV (@0x0) received by PID 76726 (TID 0x7f34cfb8b700) from PID 0; stack trace: ***
[2m[36m(pid=76726)[0m     @     0x7f34cf764390 (unknown)
[2m[36m(pid=76726)[0m     @     0x7f05d1896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76726)[0m     @     0x7f05ceb8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76726)[0m     @     0x7f05ceb8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76726)[0m     @     0x7f05ceb8db53 at::TensorIterator::for_each()
[2m[36m(pid=76721)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76721)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76721)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76721)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76721)[0m *** SIGSEGV (@0x0) received by PID 76721 (TID 0x7f1a69aa8700) from PID 0; stack trace: ***
[2m[36m(pid=76721)[0m     @     0x7f1a69681390 (unknown)
[2m[36m(pid=76721)[0m     @     0x7eeb6b87efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76721)[0m     @     0x7eeb68b7264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76721)[0m     @     0x7eeb68b75977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76721)[0m     @     0x7eeb68b75b53 at::TensorIterator::for_each()
[2m[36m(pid=76753)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76753)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76753)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76753)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76753)[0m *** SIGSEGV (@0x0) received by PID 76753 (TID 0x7fbad0cd4700) from PID 0; stack trace: ***
[2m[36m(pid=76753)[0m     @     0x7fbad08ad390 (unknown)
[2m[36m(pid=76753)[0m     @     0x7f8bd29ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76753)[0m     @     0x7f8bcfcdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76753)[0m     @     0x7f8bcfce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76753)[0m     @     0x7f8bcfce2b53 at::TensorIterator::for_each()
[2m[36m(pid=76746)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76746)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76746)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76746)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76746)[0m *** SIGSEGV (@0x0) received by PID 76746 (TID 0x7fcbc8b26700) from PID 0; stack trace: ***
[2m[36m(pid=76746)[0m     @     0x7fcbc86ff390 (unknown)
[2m[36m(pid=76746)[0m     @     0x7f9cca86bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76746)[0m     @     0x7f9cc7b5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76746)[0m     @     0x7f9cc7b62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76746)[0m     @     0x7f9cc7b62b53 at::TensorIterator::for_each()
[2m[36m(pid=76694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76694)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76694)[0m *** SIGSEGV (@0x0) received by PID 76694 (TID 0x7febc3534700) from PID 0; stack trace: ***
[2m[36m(pid=76694)[0m     @     0x7febc310d390 (unknown)
[2m[36m(pid=76694)[0m     @     0x7fbcc5309fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76694)[0m     @     0x7fbcc25fd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76694)[0m     @     0x7fbcc2600977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76719)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76719)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76719)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76719)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76719)[0m *** SIGSEGV (@0x0) received by PID 76719 (TID 0x7f11aa02b700) from PID 0; stack trace: ***
[2m[36m(pid=76719)[0m     @     0x7f11a9c04390 (unknown)
[2m[36m(pid=76719)[0m     @     0x7ee2abe16fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76719)[0m     @     0x7ee2a910a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76719)[0m     @     0x7ee2a910d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76719)[0m     @     0x7ee2a910db53 at::TensorIterator::for_each()
[2m[36m(pid=76724)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76724)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76724)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76724)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76724)[0m *** SIGSEGV (@0x0) received by PID 76724 (TID 0x7f8e9e3a0700) from PID 0; stack trace: ***
[2m[36m(pid=76724)[0m     @     0x7f8e9df79390 (unknown)
[2m[36m(pid=76724)[0m     @     0x7f5f9ffeafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76724)[0m     @     0x7f5f9d2de64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76724)[0m     @     0x7f5f9d2e1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76623)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76623)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76623)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76623)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76623)[0m *** SIGSEGV (@0x0) received by PID 76623 (TID 0x7f9c99a35700) from PID 0; stack trace: ***
[2m[36m(pid=76641)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76641)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76641)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76641)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76641)[0m *** SIGSEGV (@0x0) received by PID 76641 (TID 0x7fa8570d0700) from PID 0; stack trace: ***
[2m[36m(pid=76689)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76689)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76689)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76689)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76689)[0m *** SIGSEGV (@0x0) received by PID 76689 (TID 0x7ff1dd338700) from PID 0; stack trace: ***
[2m[36m(pid=76745)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76745)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76745)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76739)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76739)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76739)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76634)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76634)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76634)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76738)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76738)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76738)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76737)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76737)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76737)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76737)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76737)[0m *** SIGSEGV (@0x0) received by PID 76737 (TID 0x7f452ae9a700) from PID 0; stack trace: ***
[2m[36m(pid=76737)[0m     @     0x7f452aa73390 (unknown)
[2m[36m(pid=76737)[0m     @     0x7f162cc76fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76737)[0m     @     0x7f1629f6a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76737)[0m     @     0x7f1629f6d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76737)[0m     @     0x7f1629f6db53 at::TensorIterator::for_each()
[2m[36m(pid=76737)[0m     @     0x7f1629f6de11 at::TensorIterator::for_each()
[2m[36m(pid=76737)[0m     @     0x7f162cc86c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76737)[0m     @     0x7f162cca9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76696)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76696)[0m *** SIGSEGV (@0x0) received by PID 76696 (TID 0x7f5f1cf5d700) from PID 0; stack trace: ***
[2m[36m(pid=76707)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76707)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76707)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76707)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76707)[0m *** SIGSEGV (@0x0) received by PID 76707 (TID 0x7f1b5dce1700) from PID 0; stack trace: ***
[2m[36m(pid=76707)[0m     @     0x7f1b5d8ba390 (unknown)
[2m[36m(pid=76707)[0m     @     0x7eec5fa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76707)[0m     @     0x7eec5cd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76707)[0m     @     0x7eec5cd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76707)[0m     @     0x7eec5cd67b53 at::TensorIterator::for_each()
[2m[36m(pid=76707)[0m     @     0x7eec5cd67e11 at::TensorIterator::for_each()
[2m[36m(pid=76707)[0m     @     0x7eec5fa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76707)[0m     @     0x7eec5faa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76644)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76644)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76644)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76699)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76699)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76699)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76699)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76699)[0m *** SIGSEGV (@0x0) received by PID 76699 (TID 0x7f1be2a8e700) from PID 0; stack trace: ***
[2m[36m(pid=76699)[0m     @     0x7f1be2667390 (unknown)
[2m[36m(pid=76699)[0m     @     0x7eece45dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76699)[0m     @     0x7eece18d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76699)[0m     @     0x7eece18d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76699)[0m     @     0x7eece18d3b53 at::TensorIterator::for_each()
[2m[36m(pid=76699)[0m     @     0x7eece18d3e11 at::TensorIterator::for_each()
[2m[36m(pid=76699)[0m     @     0x7eece45ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76699)[0m     @     0x7eece460fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76754)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76754)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76754)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76754)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76754)[0m *** SIGSEGV (@0x0) received by PID 76754 (TID 0x7f8d0f766700) from PID 0; stack trace: ***
[2m[36m(pid=76754)[0m     @     0x7f8d0f33f390 (unknown)
[2m[36m(pid=76754)[0m     @     0x7f5e114a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76754)[0m     @     0x7f5e0e79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76754)[0m     @     0x7f5e0e797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76754)[0m     @     0x7f5e0e797b53 at::TensorIterator::for_each()
[2m[36m(pid=76754)[0m     @     0x7f5e0e797e11 at::TensorIterator::for_each()
[2m[36m(pid=76754)[0m     @     0x7f5e114b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76754)[0m     @     0x7f5e114d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76710)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76710)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76710)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76710)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76710)[0m *** SIGSEGV (@0x0) received by PID 76710 (TID 0x7f5340c66700) from PID 0; stack trace: ***
[2m[36m(pid=76710)[0m     @     0x7f534083f390 (unknown)
[2m[36m(pid=76710)[0m     @     0x7f24427dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76710)[0m     @     0x7f243face64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76710)[0m     @     0x7f243fad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76710)[0m     @     0x7f243fad1b53 at::TensorIterator::for_each()
[2m[36m(pid=76710)[0m     @     0x7f243fad1e11 at::TensorIterator::for_each()
[2m[36m(pid=76710)[0m     @     0x7f24427eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76710)[0m     @     0x7f244280dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76710)[0m     @     0x7f243f84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76638)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76638)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76638)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76749)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76749)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76749)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76749)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76749)[0m *** SIGSEGV (@0x0) received by PID 76749 (TID 0x7ffbe5eb0700) from PID 0; stack trace: ***
[2m[36m(pid=76749)[0m     @     0x7ffbe5a89390 (unknown)
[2m[36m(pid=76749)[0m     @     0x7fcce7c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76749)[0m     @     0x7fcce4f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76749)[0m     @     0x7fcce4f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76749)[0m     @     0x7fcce4f78b53 at::TensorIterator::for_each()
[2m[36m(pid=76749)[0m     @     0x7fcce4f78e11 at::TensorIterator::for_each()
[2m[36m(pid=76749)[0m     @     0x7fcce7c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76749)[0m     @     0x7fcce7cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76740)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76740)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76740)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76740)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76740)[0m *** SIGSEGV (@0x0) received by PID 76740 (TID 0x7ff8931bf700) from PID 0; stack trace: ***
[2m[36m(pid=76740)[0m     @     0x7ff892d98390 (unknown)
[2m[36m(pid=76740)[0m     @     0x7fc994f59fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76740)[0m     @     0x7fc99224d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76740)[0m     @     0x7fc992250977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76740)[0m     @     0x7fc992250b53 at::TensorIterator::for_each()
[2m[36m(pid=76740)[0m     @     0x7fc992250e11 at::TensorIterator::for_each()
[2m[36m(pid=76740)[0m     @     0x7fc994f69c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76740)[0m     @     0x7fc994f8ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76740)[0m     @     0x7fc991fca009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76740)[0m     @     0x7fc991fc8c3f at::native::copy_impl()
[2m[36m(pid=76748)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76748)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76748)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76748)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76748)[0m *** SIGSEGV (@0x0) received by PID 76748 (TID 0x7f43dd671700) from PID 0; stack trace: ***
[2m[36m(pid=76748)[0m     @     0x7f43dd24a390 (unknown)
[2m[36m(pid=76645)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76645)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76645)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76645)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76645)[0m *** SIGSEGV (@0x0) received by PID 76645 (TID 0x7f357276c700) from PID 0; stack trace: ***
[2m[36m(pid=76640)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76640)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76640)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76677)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76679)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76679)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76679)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76679)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76679)[0m *** SIGSEGV (@0x0) received by PID 76679 (TID 0x7fcb1d7cf700) from PID 0; stack trace: ***
[2m[36m(pid=76660)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76660)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76660)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76661)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76661)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76661)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76661)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76700)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76700)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76700)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76632)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76632)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76632)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76709)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76709)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76709)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76643)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76643)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76643)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76741)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76741)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76741)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76675)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76675)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76675)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76684)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76684)[0m *** SIGSEGV (@0x0) received by PID 76684 (TID 0x7efe75f2d700) from PID 0; stack trace: ***
[2m[36m(pid=76630)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76630)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76630)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76743)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76743)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76743)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76743)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76743)[0m *** SIGSEGV (@0x0) received by PID 76743 (TID 0x7fa76b777700) from PID 0; stack trace: ***
[2m[36m(pid=76681)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76681)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76681)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76629)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76629)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76629)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76629)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76629)[0m *** SIGSEGV (@0x0) received by PID 76629 (TID 0x7f6f5088e700) from PID 0; stack trace: ***
[2m[36m(pid=76624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76624)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76624)[0m *** SIGSEGV (@0x0) received by PID 76624 (TID 0x7fbea62c4700) from PID 0; stack trace: ***
[2m[36m(pid=76624)[0m     @     0x7fbea5e9d390 (unknown)
[2m[36m(pid=76624)[0m     @     0x7f8fa7feafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76628)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76628)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76628)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76628)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76628)[0m *** SIGSEGV (@0x0) received by PID 76628 (TID 0x7fdc59e3d700) from PID 0; stack trace: ***
[2m[36m(pid=76628)[0m     @     0x7fdc59a16390 (unknown)
[2m[36m(pid=76628)[0m     @     0x7fad5b952fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76628)[0m     @     0x7fad58c4664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76633)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76633)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76633)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76633)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76633)[0m *** SIGSEGV (@0x0) received by PID 76633 (TID 0x7f18a2a44700) from PID 0; stack trace: ***
[2m[36m(pid=76633)[0m     @     0x7f18a261d390 (unknown)
[2m[36m(pid=76736)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76736)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76736)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76654)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76654)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76654)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76728)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76728)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76680)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76680)[0m *** SIGSEGV (@0x0) received by PID 76680 (TID 0x7fcbee5c0700) from PID 0; stack trace: ***
[2m[36m(pid=76680)[0m     @     0x7fcbee199390 (unknown)
[2m[36m(pid=76705)[0m     @     0x7f87767e7b53 at::TensorIterator::for_each()
[2m[36m(pid=76705)[0m     @     0x7f87767e7e11 at::TensorIterator::for_each()
[2m[36m(pid=76705)[0m     @     0x7f8779500c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76705)[0m     @     0x7f8779523cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76705)[0m     @     0x7f8776561009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76705)[0m     @     0x7f877655fc3f at::native::copy_impl()
[2m[36m(pid=76705)[0m     @     0x7f8776560ed4 at::native::copy_()
[2m[36m(pid=76744)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76744)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76744)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76744)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76744)[0m *** SIGSEGV (@0x0) received by PID 76744 (TID 0x7f6c8c5f6700) from PID 0; stack trace: ***
[2m[36m(pid=76744)[0m     @     0x7f6c8c1cf390 (unknown)
[2m[36m(pid=76744)[0m     @     0x7f3d8e293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76744)[0m     @     0x7f3d8b58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76637)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76637)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76637)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76637)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76637)[0m *** SIGSEGV (@0x0) received by PID 76637 (TID 0x7f819a1ef700) from PID 0; stack trace: ***
[2m[36m(pid=76637)[0m     @     0x7f8199dc8390 (unknown)
[2m[36m(pid=76637)[0m     @     0x7f529bfc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76627)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76627)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76627)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76627)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76627)[0m *** SIGSEGV (@0x0) received by PID 76627 (TID 0x7fc8f2747700) from PID 0; stack trace: ***
[2m[36m(pid=76627)[0m     @     0x7fc8f2320390 (unknown)
[2m[36m(pid=76647)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76647)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76647)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76647)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76647)[0m *** SIGSEGV (@0x0) received by PID 76647 (TID 0x7fc642d04700) from PID 0; stack trace: ***
[2m[36m(pid=76647)[0m     @     0x7fc6428dd390 (unknown)
[2m[36m(pid=76647)[0m     @     0x7f9744ae0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76647)[0m     @     0x7f9741dd464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76646)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76646)[0m *** SIGSEGV (@0x0) received by PID 76646 (TID 0x7f10de1f6700) from PID 0; stack trace: ***
[2m[36m(pid=76646)[0m     @     0x7f10dddcf390 (unknown)
[2m[36m(pid=76646)[0m     @     0x7ee1dffc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76646)[0m     @     0x7ee1dd2bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76651)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76651)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76651)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76651)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76651)[0m *** SIGSEGV (@0x0) received by PID 76651 (TID 0x7f50a47f6700) from PID 0; stack trace: ***
[2m[36m(pid=76651)[0m     @     0x7f50a43cf390 (unknown)
[2m[36m(pid=76625)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76625)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76625)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76625)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76625)[0m *** SIGSEGV (@0x0) received by PID 76625 (TID 0x7f13e9de9700) from PID 0; stack trace: ***
[2m[36m(pid=76625)[0m     @     0x7f13e99c2390 (unknown)
[2m[36m(pid=76625)[0m     @     0x7ee4eb952fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76625)[0m     @     0x7ee4e8c4664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76759)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76759)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76759)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76759)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76759)[0m *** SIGSEGV (@0x0) received by PID 76759 (TID 0x7fc4b1efb700) from PID 0; stack trace: ***
[2m[36m(pid=76759)[0m     @     0x7fc4b1ad4390 (unknown)
[2m[36m(pid=76759)[0m     @     0x7f95b3c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76759)[0m     @     0x7f95b0f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76716)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76716)[0m *** SIGSEGV (@0x0) received by PID 76716 (TID 0x7f7a307bf700) from PID 0; stack trace: ***
[2m[36m(pid=76716)[0m     @     0x7f7a30398390 (unknown)
[2m[36m(pid=76716)[0m     @     0x7f4b325adfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76716)[0m     @     0x7f4b2f8a164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76702)[0m     @     0x7f16aee0cb53 at::TensorIterator::for_each()
[2m[36m(pid=76702)[0m     @     0x7f16aee0ce11 at::TensorIterator::for_each()
[2m[36m(pid=76702)[0m     @     0x7f16b1b25c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76702)[0m     @     0x7f16b1b48cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76702)[0m     @     0x7f16aeb86009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76702)[0m     @     0x7f16aeb84c3f at::native::copy_impl()
[2m[36m(pid=76682)[0m     @     0x7f51c5a67b53 at::TensorIterator::for_each()
[2m[36m(pid=76682)[0m     @     0x7f51c5a67e11 at::TensorIterator::for_each()
[2m[36m(pid=76682)[0m     @     0x7f51c8780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76682)[0m     @     0x7f51c87a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76682)[0m     @     0x7f51c57e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76682)[0m     @     0x7f51c57dfc3f at::native::copy_impl()
[2m[36m(pid=76682)[0m     @     0x7f51c57e0ed4 at::native::copy_()
[2m[36m(pid=76678)[0m     @     0x7fc9f5f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=76678)[0m     @     0x7fc9f8c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76678)[0m     @     0x7fc9f8c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76678)[0m     @     0x7fc9f5cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76678)[0m     @     0x7fc9f5cb2c3f at::native::copy_impl()
[2m[36m(pid=76678)[0m     @     0x7fc9f5cb3ed4 at::native::copy_()
[2m[36m(pid=76726)[0m     @     0x7f05ceb8de11 at::TensorIterator::for_each()
[2m[36m(pid=76726)[0m     @     0x7f05d18a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76726)[0m     @     0x7f05d18c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76726)[0m     @     0x7f05ce907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76726)[0m     @     0x7f05ce905c3f at::native::copy_impl()
[2m[36m(pid=76726)[0m     @     0x7f05ce906ed4 at::native::copy_()
[2m[36m(pid=76687)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76687)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76687)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76687)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76687)[0m *** SIGSEGV (@0x0) received by PID 76687 (TID 0x7fc523339700) from PID 0; stack trace: ***
[2m[36m(pid=76687)[0m     @     0x7fc522f12390 (unknown)
[2m[36m(pid=76687)[0m     @     0x7f962510afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76687)[0m     @     0x7f96223fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76721)[0m     @     0x7eeb68b75e11 at::TensorIterator::for_each()
[2m[36m(pid=76721)[0m     @     0x7eeb6b88ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76721)[0m     @     0x7eeb6b8b1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76721)[0m     @     0x7eeb688ef009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76721)[0m     @     0x7eeb688edc3f at::native::copy_impl()
[2m[36m(pid=76721)[0m     @     0x7eeb688eeed4 at::native::copy_()
[2m[36m(pid=76753)[0m     @     0x7f8bcfce2e11 at::TensorIterator::for_each()
[2m[36m(pid=76753)[0m     @     0x7f8bd29fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76753)[0m     @     0x7f8bd2a1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76753)[0m     @     0x7f8bcfa5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76753)[0m     @     0x7f8bcfa5ac3f at::native::copy_impl()
[2m[36m(pid=76753)[0m     @     0x7f8bcfa5bed4 at::native::copy_()
[2m[36m(pid=76650)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76650)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76650)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76650)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76650)[0m *** SIGSEGV (@0x0) received by PID 76650 (TID 0x7f1035d2d700) from PID 0; stack trace: ***
[2m[36m(pid=76650)[0m     @     0x7f1035906390 (unknown)
[2m[36m(pid=76650)[0m     @     0x7ee137a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76650)[0m     @     0x7ee134d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76746)[0m     @     0x7f9cc7b62e11 at::TensorIterator::for_each()
[2m[36m(pid=76746)[0m     @     0x7f9cca87bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76746)[0m     @     0x7f9cca89ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76746)[0m     @     0x7f9cc78dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76746)[0m     @     0x7f9cc78dac3f at::native::copy_impl()
[2m[36m(pid=76746)[0m     @     0x7f9cc78dbed4 at::native::copy_()
[2m[36m(pid=76694)[0m     @     0x7fbcc2600b53 at::TensorIterator::for_each()
[2m[36m(pid=76694)[0m     @     0x7fbcc2600e11 at::TensorIterator::for_each()
[2m[36m(pid=76694)[0m     @     0x7fbcc5319c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76694)[0m     @     0x7fbcc533ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76694)[0m     @     0x7fbcc237a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76694)[0m     @     0x7fbcc2378c3f at::native::copy_impl()
[2m[36m(pid=76694)[0m     @     0x7fbcc2379ed4 at::native::copy_()
[2m[36m(pid=76712)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76712)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76712)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76712)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76712)[0m *** SIGSEGV (@0x0) received by PID 76712 (TID 0x7f7fbcdff700) from PID 0; stack trace: ***
[2m[36m(pid=76712)[0m     @     0x7f7fbc9d8390 (unknown)
[2m[36m(pid=76712)[0m     @     0x7f50bea9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76712)[0m     @     0x7f50bbd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76631)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76631)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76631)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76631)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76631)[0m *** SIGSEGV (@0x0) received by PID 76631 (TID 0x7fbbd68dd700) from PID 0; stack trace: ***
[2m[36m(pid=76631)[0m     @     0x7fbbd64b6390 (unknown)
[2m[36m(pid=76631)[0m     @     0x7f8cd85c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76631)[0m     @     0x7f8cd58b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76706)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76706)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76706)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76706)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76706)[0m *** SIGSEGV (@0x0) received by PID 76706 (TID 0x7fbe8b8a6700) from PID 0; stack trace: ***
[2m[36m(pid=76706)[0m     @     0x7fbe8b47f390 (unknown)
[2m[36m(pid=76706)[0m     @     0x7f8f8d4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76706)[0m     @     0x7f8f8a79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76635)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76635)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76635)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76635)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76635)[0m *** SIGSEGV (@0x0) received by PID 76635 (TID 0x7f03669f7700) from PID 0; stack trace: ***
[2m[36m(pid=76635)[0m     @     0x7f03665d0390 (unknown)
[2m[36m(pid=76635)[0m     @     0x7ed46860cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76635)[0m     @     0x7ed46590064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76719)[0m     @     0x7ee2a910de11 at::TensorIterator::for_each()
[2m[36m(pid=76719)[0m     @     0x7ee2abe26c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76719)[0m     @     0x7ee2abe49cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76719)[0m     @     0x7ee2a8e87009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76719)[0m     @     0x7ee2a8e85c3f at::native::copy_impl()
[2m[36m(pid=76719)[0m     @     0x7ee2a8e86ed4 at::native::copy_()
[2m[36m(pid=76724)[0m     @     0x7f5f9d2e1b53 at::TensorIterator::for_each()
[2m[36m(pid=76724)[0m     @     0x7f5f9d2e1e11 at::TensorIterator::for_each()
[2m[36m(pid=76724)[0m     @     0x7f5f9fffac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76724)[0m     @     0x7f5fa001dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76724)[0m     @     0x7f5f9d05b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76724)[0m     @     0x7f5f9d059c3f at::native::copy_impl()
[2m[36m(pid=76623)[0m     @     0x7f9c9960e390 (unknown)
[2m[36m(pid=76623)[0m     @     0x7f6d9b81bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76623)[0m     @     0x7f6d98b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76641)[0m     @     0x7fa856ca9390 (unknown)
[2m[36m(pid=76641)[0m     @     0x7f7958c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76641)[0m     @     0x7f7955f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76641)[0m     @     0x7f7955f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76689)[0m     @     0x7ff1dcf11390 (unknown)
[2m[36m(pid=76689)[0m     @     0x7fc2df130fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76689)[0m     @     0x7fc2dc42464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76695)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76695)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76695)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76695)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76695)[0m *** SIGSEGV (@0x0) received by PID 76695 (TID 0x7f1904f24700) from PID 0; stack trace: ***
[2m[36m(pid=76695)[0m     @     0x7f1904afd390 (unknown)
[2m[36m(pid=76732)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76732)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76732)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76745)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76745)[0m *** SIGSEGV (@0x0) received by PID 76745 (TID 0x7fbaf34d9700) from PID 0; stack trace: ***
[2m[36m(pid=76745)[0m     @     0x7fbaf30b2390 (unknown)
[2m[36m(pid=76745)[0m     @     0x7f8bf52c9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76745)[0m     @     0x7f8bf25bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76626)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76626)[0m *** SIGSEGV (@0x0) received by PID 76626 (TID 0x7fd833c5c700) from PID 0; stack trace: ***
[2m[36m(pid=76626)[0m     @     0x7fd833835390 (unknown)
[2m[36m(pid=76626)[0m     @     0x7fa9359c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76739)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76739)[0m *** SIGSEGV (@0x0) received by PID 76739 (TID 0x7f3e76fa2700) from PID 0; stack trace: ***
[2m[36m(pid=76739)[0m     @     0x7f3e76b7b390 (unknown)
[2m[36m(pid=76739)[0m     @     0x7f0f78c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76739)[0m     @     0x7f0f75f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76634)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76634)[0m *** SIGSEGV (@0x0) received by PID 76634 (TID 0x7f7f180aa700) from PID 0; stack trace: ***
[2m[36m(pid=76634)[0m     @     0x7f7f17c83390 (unknown)
[2m[36m(pid=76634)[0m     @     0x7f5019d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76738)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76738)[0m *** SIGSEGV (@0x0) received by PID 76738 (TID 0x7f136f541700) from PID 0; stack trace: ***
[2m[36m(pid=76738)[0m     @     0x7f136f11a390 (unknown)
[2m[36m(pid=76738)[0m     @     0x7ee47132efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76738)[0m     @     0x7ee46e62264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76737)[0m     @     0x7f1629ce7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76737)[0m     @     0x7f1629ce5c3f at::native::copy_impl()
[2m[36m(pid=76737)[0m     @     0x7f1629ce6ed4 at::native::copy_()
[2m[36m(pid=76696)[0m     @     0x7f5f1cb36390 (unknown)
[2m[36m(pid=76696)[0m     @     0x7f301ec5ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76696)[0m     @     0x7f301bf5364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76707)[0m     @     0x7eec5cae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76707)[0m     @     0x7eec5cadfc3f at::native::copy_impl()
[2m[36m(pid=76707)[0m     @     0x7eec5cae0ed4 at::native::copy_()
[2m[36m(pid=76664)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76664)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76664)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76639)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76639)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76639)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76639)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76735)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76735)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76735)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76735)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76735)[0m *** SIGSEGV (@0x0) received by PID 76735 (TID 0x7fe422ca0700) from PID 0; stack trace: ***
[2m[36m(pid=76704)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76704)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76704)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76704)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76704)[0m *** SIGSEGV (@0x0) received by PID 76704 (TID 0x7f5b5aaf6700) from PID 0; stack trace: ***
[2m[36m(pid=76656)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76656)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76656)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76692)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76692)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76692)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76644)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76644)[0m *** SIGSEGV (@0x0) received by PID 76644 (TID 0x7f27bbf9c700) from PID 0; stack trace: ***
[2m[36m(pid=76644)[0m     @     0x7f27bbb75390 (unknown)
[2m[36m(pid=76644)[0m     @     0x7ef8bdd6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76644)[0m     @     0x7ef8bb06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76699)[0m     @     0x7eece164d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76699)[0m     @     0x7eece164bc3f at::native::copy_impl()
[2m[36m(pid=76699)[0m     @     0x7eece164ced4 at::native::copy_()
[2m[36m(pid=76754)[0m     @     0x7f5e0e511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76754)[0m     @     0x7f5e0e50fc3f at::native::copy_impl()
[2m[36m(pid=76754)[0m     @     0x7f5e0e510ed4 at::native::copy_()
[2m[36m(pid=76710)[0m     @     0x7f243f849c3f at::native::copy_impl()
[2m[36m(pid=76710)[0m     @     0x7f243f84aed4 at::native::copy_()
[2m[36m(pid=76638)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76638)[0m *** SIGSEGV (@0x0) received by PID 76638 (TID 0x7f2ab6512700) from PID 0; stack trace: ***
[2m[36m(pid=76638)[0m     @     0x7f2ab60eb390 (unknown)
[2m[36m(pid=76638)[0m     @     0x7efbb8304fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76638)[0m     @     0x7efbb55f864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76749)[0m     @     0x7fcce4cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76749)[0m     @     0x7fcce4cf0c3f at::native::copy_impl()
[2m[36m(pid=76749)[0m     @     0x7fcce4cf1ed4 at::native::copy_()
[2m[36m(pid=76740)[0m     @     0x7fc991fc9ed4 at::native::copy_()
[2m[36m(pid=76740)[0m     @     0x7fc99270c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76748)[0m     @     0x7f14df32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76748)[0m     @     0x7f14dc62064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76748)[0m     @     0x7f14dc623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76645)[0m     @     0x7f3572345390 (unknown)
[2m[36m(pid=76645)[0m     @     0x7f06743b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76645)[0m     @     0x7f06716a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76645)[0m     @     0x7f06716a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76640)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76640)[0m *** SIGSEGV (@0x0) received by PID 76640 (TID 0x7f358cdab700) from PID 0; stack trace: ***
[2m[36m(pid=76640)[0m     @     0x7f358c984390 (unknown)
[2m[36m(pid=76640)[0m     @     0x7f068e9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76640)[0m     @     0x7f068bcdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76640)[0m     @     0x7f068bce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76677)[0m *** SIGSEGV (@0x0) received by PID 76677 (TID 0x7fa245de0700) from PID 0; stack trace: ***
[2m[36m(pid=76677)[0m     @     0x7fa2459b9390 (unknown)
[2m[36m(pid=76677)[0m     @     0x7f7347a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76677)[0m     @     0x7f7344d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76677)[0m     @     0x7f7344d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76679)[0m     @     0x7fcb1d3a8390 (unknown)
[2m[36m(pid=76679)[0m     @     0x7f9c1f5b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76679)[0m     @     0x7f9c1c8a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76679)[0m     @     0x7f9c1c8a8977 at::TensorIterator::serial_for_each()
2020-11-05 10:55:39,524	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=76660)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76660)[0m *** SIGSEGV (@0x0) received by PID 76660 (TID 0x7f925455d700) from PID 0; stack trace: ***
[2m[36m(pid=76660)[0m     @     0x7f9254136390 (unknown)
[2m[36m(pid=76660)[0m     @     0x7f635612dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76660)[0m     @     0x7f635342164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76660)[0m     @     0x7f6353424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76729)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76729)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76729)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76729)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76729)[0m *** SIGSEGV (@0x0) received by PID 76729 (TID 0x7f924d452700) from PID 0; stack trace: ***
[2m[36m(pid=76661)[0m *** SIGSEGV (@0x0) received by PID 76661 (TID 0x7f9e1717d700) from PID 0; stack trace: ***
[2m[36m(pid=76661)[0m     @     0x7f9e16d56390 (unknown)
[2m[36m(pid=76661)[0m     @     0x7f6f18f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76661)[0m     @     0x7f6f1626764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76661)[0m     @     0x7f6f1626a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76700)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76700)[0m *** SIGSEGV (@0x0) received by PID 76700 (TID 0x7f2d58487700) from PID 0; stack trace: ***
[2m[36m(pid=76700)[0m     @     0x7f2d58060390 (unknown)
[2m[36m(pid=76700)[0m     @     0x7efe5a266fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76700)[0m     @     0x7efe5755a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76700)[0m     @     0x7efe5755d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76632)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76632)[0m *** SIGSEGV (@0x0) received by PID 76632 (TID 0x7f9193032700) from PID 0; stack trace: ***
[2m[36m(pid=76632)[0m     @     0x7f9192c0b390 (unknown)
[2m[36m(pid=76632)[0m     @     0x7f6294e24fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76632)[0m     @     0x7f629211864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76632)[0m     @     0x7f629211b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76709)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76709)[0m *** SIGSEGV (@0x0) received by PID 76709 (TID 0x7f78fdcff700) from PID 0; stack trace: ***
[2m[36m(pid=76709)[0m     @     0x7f78fd8d8390 (unknown)
[2m[36m(pid=76709)[0m     @     0x7f49ffa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76709)[0m     @     0x7f49fcd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76709)[0m     @     0x7f49fcd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76643)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76643)[0m *** SIGSEGV (@0x0) received by PID 76643 (TID 0x7f8785450700) from PID 0; stack trace: ***
[2m[36m(pid=76643)[0m     @     0x7f8785029390 (unknown)
[2m[36m(pid=76643)[0m     @     0x7f588711bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76643)[0m     @     0x7f588440f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76708)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=76708)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=76708)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76708)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76708)[0m *** SIGSEGV (@0x0) received by PID 76708 (TID 0x7fc462406700) from PID 0; stack trace: ***
[2m[36m(pid=76741)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76741)[0m *** SIGSEGV (@0x0) received by PID 76741 (TID 0x7f8481684700) from PID 0; stack trace: ***
[2m[36m(pid=76741)[0m     @     0x7f848125d390 (unknown)
[2m[36m(pid=76741)[0m     @     0x7f558332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76741)[0m     @     0x7f558062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76741)[0m     @     0x7f5580623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76675)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76675)[0m *** SIGSEGV (@0x0) received by PID 76675 (TID 0x7fe8dab3e700) from PID 0; stack trace: ***
[2m[36m(pid=76675)[0m     @     0x7fe8da717390 (unknown)
[2m[36m(pid=76675)[0m     @     0x7fb9dc7f3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76675)[0m     @     0x7fb9d9ae764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76675)[0m     @     0x7fb9d9aea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76684)[0m     @     0x7efe75b06390 (unknown)
[2m[36m(pid=76684)[0m     @     0x7ecf77c81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76684)[0m     @     0x7ecf74f7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76684)[0m     @     0x7ecf74f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76630)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76630)[0m *** SIGSEGV (@0x0) received by PID 76630 (TID 0x7f86be536700) from PID 0; stack trace: ***
[2m[36m(pid=76630)[0m     @     0x7f86be10f390 (unknown)
[2m[36m(pid=76630)[0m     @     0x7f57c0344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76630)[0m     @     0x7f57bd63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76630)[0m     @     0x7f57bd63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76743)[0m     @     0x7fa76b350390 (unknown)
[2m[36m(pid=76743)[0m     @     0x7f786d4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76743)[0m     @     0x7f786a79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76743)[0m     @     0x7f786a797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76681)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76681)[0m *** SIGSEGV (@0x0) received by PID 76681 (TID 0x7f8c12c0c700) from PID 0; stack trace: ***
[2m[36m(pid=76681)[0m     @     0x7f8c127e5390 (unknown)
[2m[36m(pid=76681)[0m     @     0x7f5d14770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76681)[0m     @     0x7f5d11a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76681)[0m     @     0x7f5d11a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76629)[0m     @     0x7f6f50467390 (unknown)
[2m[36m(pid=76629)[0m     @     0x7f405265afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76629)[0m     @     0x7f404f94e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76629)[0m     @     0x7f404f951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76624)[0m     @     0x7f8fa52de64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76624)[0m     @     0x7f8fa52e1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76628)[0m     @     0x7fad58c49977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76628)[0m     @     0x7fad58c49b53 at::TensorIterator::for_each()
[2m[36m(pid=76633)[0m     @     0x7ee9a481bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76633)[0m     @     0x7ee9a1b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76633)[0m     @     0x7ee9a1b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76736)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76736)[0m *** SIGSEGV (@0x0) received by PID 76736 (TID 0x7fdba1501700) from PID 0; stack trace: ***
[2m[36m(pid=76654)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76654)[0m *** SIGSEGV (@0x0) received by PID 76654 (TID 0x7fe163322700) from PID 0; stack trace: ***
[2m[36m(pid=76654)[0m     @     0x7fe162efb390 (unknown)
[2m[36m(pid=76728)[0m *** Aborted at 1604573739 (unix time) try "date -d @1604573739" if you are using GNU date ***
[2m[36m(pid=76728)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76728)[0m *** SIGSEGV (@0x0) received by PID 76728 (TID 0x7fe76efdf700) from PID 0; stack trace: ***
[2m[36m(pid=76680)[0m     @     0x7f9cf0204fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76680)[0m     @     0x7f9ced4f864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76680)[0m     @     0x7f9ced4fb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76705)[0m     @     0x7f8776ca35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76705)[0m     @     0x7f8776dab148 at::Tensor::copy_()
[2m[36m(pid=76744)[0m     @     0x7f3d8b58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76744)[0m     @     0x7f3d8b58ab53 at::TensorIterator::for_each()
[2m[36m(pid=76637)[0m     @     0x7f52992bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76637)[0m     @     0x7f52992c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76627)[0m     @     0x7f99f4530fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76627)[0m     @     0x7f99f182464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76627)[0m     @     0x7f99f1827977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76627)[0m     @     0x7f99f1827b53 at::TensorIterator::for_each()
[2m[36m(pid=76647)[0m     @     0x7f9741dd7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76647)[0m     @     0x7f9741dd7b53 at::TensorIterator::for_each()
[2m[36m(pid=76646)[0m     @     0x7ee1dd2c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76646)[0m     @     0x7ee1dd2c0b53 at::TensorIterator::for_each()
[2m[36m(pid=76651)[0m     @     0x7f21a6555fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76651)[0m     @     0x7f21a384964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76651)[0m     @     0x7f21a384c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76625)[0m     @     0x7ee4e8c49977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76625)[0m     @     0x7ee4e8c49b53 at::TensorIterator::for_each()
[2m[36m(pid=76759)[0m     @     0x7f95b0f78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76759)[0m     @     0x7f95b0f78b53 at::TensorIterator::for_each()
[2m[36m(pid=76759)[0m     @     0x7f95b0f78e11 at::TensorIterator::for_each()
[2m[36m(pid=76759)[0m     @     0x7f95b3c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76759)[0m     @     0x7f95b3cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76716)[0m     @     0x7f4b2f8a4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76716)[0m     @     0x7f4b2f8a4b53 at::TensorIterator::for_each()
[2m[36m(pid=76716)[0m     @     0x7f4b2f8a4e11 at::TensorIterator::for_each()
[2m[36m(pid=76716)[0m     @     0x7f4b325bdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76702)[0m     @     0x7f16aeb85ed4 at::native::copy_()
[2m[36m(pid=76702)[0m     @     0x7f16af2c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76702)[0m     @     0x7f16af3d0148 at::Tensor::copy_()
[2m[36m(pid=76682)[0m     @     0x7f51c5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76682)[0m     @     0x7f51c602b148 at::Tensor::copy_()
[2m[36m(pid=76682)[0m     @     0x7f51c7c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76678)[0m     @     0x7fc9f63f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76678)[0m     @     0x7fc9f64fe148 at::Tensor::copy_()
[2m[36m(pid=76678)[0m     @     0x7fc9f80f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76726)[0m     @     0x7f05cf0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76726)[0m     @     0x7f05cf151148 at::Tensor::copy_()
[2m[36m(pid=76726)[0m     @     0x7f05d0d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76687)[0m     @     0x7f9622401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76687)[0m     @     0x7f9622401b53 at::TensorIterator::for_each()
[2m[36m(pid=76687)[0m     @     0x7f9622401e11 at::TensorIterator::for_each()
[2m[36m(pid=76721)[0m     @     0x7eeb690315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76721)[0m     @     0x7eeb69139148 at::Tensor::copy_()
[2m[36m(pid=76721)[0m     @     0x7eeb6ad30989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76721)[0m     @     0x7eeb690315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76753)[0m     @     0x7f8bd019e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76753)[0m     @     0x7f8bd02a6148 at::Tensor::copy_()
[2m[36m(pid=76753)[0m     @     0x7f8bd1e9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76650)[0m     @     0x7ee134d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76650)[0m     @     0x7ee134d67b53 at::TensorIterator::for_each()
[2m[36m(pid=76650)[0m     @     0x7ee134d67e11 at::TensorIterator::for_each()
[2m[36m(pid=76746)[0m     @     0x7f9cc801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76746)[0m     @     0x7f9cc8126148 at::Tensor::copy_()
[2m[36m(pid=76746)[0m     @     0x7f9cc9d1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76694)[0m     @     0x7fbcc2abc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76694)[0m     @     0x7fbcc2bc4148 at::Tensor::copy_()
[2m[36m(pid=76694)[0m     @     0x7fbcc47bb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76712)[0m     @     0x7f50bbd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76712)[0m     @     0x7f50bbd93b53 at::TensorIterator::for_each()
[2m[36m(pid=76712)[0m     @     0x7f50bbd93e11 at::TensorIterator::for_each()
[2m[36m(pid=76712)[0m     @     0x7f50beaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76631)[0m     @     0x7f8cd58b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76631)[0m     @     0x7f8cd58b9b53 at::TensorIterator::for_each()
[2m[36m(pid=76631)[0m     @     0x7f8cd58b9e11 at::TensorIterator::for_each()
[2m[36m(pid=76631)[0m     @     0x7f8cd85d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76631)[0m     @     0x7f8cd85f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76706)[0m     @     0x7f8f8a797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76706)[0m     @     0x7f8f8a797b53 at::TensorIterator::for_each()
[2m[36m(pid=76706)[0m     @     0x7f8f8a797e11 at::TensorIterator::for_each()
[2m[36m(pid=76635)[0m     @     0x7ed465903977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76635)[0m     @     0x7ed465903b53 at::TensorIterator::for_each()
[2m[36m(pid=76635)[0m     @     0x7ed465903e11 at::TensorIterator::for_each()
[2m[36m(pid=76635)[0m     @     0x7ed46861cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76719)[0m     @     0x7ee2a95c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76719)[0m     @     0x7ee2a96d1148 at::Tensor::copy_()
[2m[36m(pid=76719)[0m     @     0x7ee2ab2c8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76719)[0m     @     0x7ee2a95c95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76724)[0m     @     0x7f5f9d05aed4 at::native::copy_()
[2m[36m(pid=76724)[0m     @     0x7f5f9d79d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76724)[0m     @     0x7f5f9d8a5148 at::Tensor::copy_()
[2m[36m(pid=76724)[0m     @     0x7f5f9f49c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76623)[0m     @     0x7f6d98b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76623)[0m     @     0x7f6d98b12b53 at::TensorIterator::for_each()
[2m[36m(pid=76623)[0m     @     0x7f6d98b12e11 at::TensorIterator::for_each()
[2m[36m(pid=76623)[0m     @     0x7f6d9b82bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76641)[0m     @     0x7f7955f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=76641)[0m     @     0x7f7955f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=76641)[0m     @     0x7f7958ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76641)[0m     @     0x7f7958ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76689)[0m     @     0x7fc2dc427977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76689)[0m     @     0x7fc2dc427b53 at::TensorIterator::for_each()
[2m[36m(pid=76689)[0m     @     0x7fc2dc427e11 at::TensorIterator::for_each()
[2m[36m(pid=76689)[0m     @     0x7fc2df140c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76695)[0m     @     0x7eea06a9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76695)[0m     @     0x7eea03d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76695)[0m     @     0x7eea03d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76695)[0m     @     0x7eea03d93b53 at::TensorIterator::for_each()
[2m[36m(pid=76732)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76732)[0m *** SIGSEGV (@0x0) received by PID 76732 (TID 0x7f82bebbd700) from PID 0; stack trace: ***
[2m[36m(pid=76732)[0m     @     0x7f82be796390 (unknown)
[2m[36m(pid=76732)[0m     @     0x7f53c081bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76732)[0m     @     0x7f53bdb0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76745)[0m     @     0x7f8bf25c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76745)[0m     @     0x7f8bf25c0b53 at::TensorIterator::for_each()
[2m[36m(pid=76626)[0m     @     0x7fa932cbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76626)[0m     @     0x7fa932cbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76626)[0m     @     0x7fa932cbfb53 at::TensorIterator::for_each()
[2m[36m(pid=76739)[0m     @     0x7f0f75f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76739)[0m     @     0x7f0f75f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=76634)[0m     @     0x7f501706064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76634)[0m     @     0x7f5017063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76634)[0m     @     0x7f5017063b53 at::TensorIterator::for_each()
[2m[36m(pid=76738)[0m     @     0x7ee46e625977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76738)[0m     @     0x7ee46e625b53 at::TensorIterator::for_each()
[2m[36m(pid=76737)[0m     @     0x7f162a4295cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76737)[0m     @     0x7f162a531148 at::Tensor::copy_()
[2m[36m(pid=76737)[0m     @     0x7f162c128989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76696)[0m     @     0x7f301bf56977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76696)[0m     @     0x7f301bf56b53 at::TensorIterator::for_each()
[2m[36m(pid=76696)[0m     @     0x7f301bf56e11 at::TensorIterator::for_each()
[2m[36m(pid=76696)[0m     @     0x7f301ec6fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76707)[0m     @     0x7eec5d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76707)[0m     @     0x7eec5d32b148 at::Tensor::copy_()
[2m[36m(pid=76707)[0m     @     0x7eec5ef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76664)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76664)[0m *** SIGSEGV (@0x0) received by PID 76664 (TID 0x7f4d96ba6700) from PID 0; stack trace: ***
[2m[36m(pid=76664)[0m     @     0x7f4d9677f390 (unknown)
[2m[36m(pid=76639)[0m *** SIGSEGV (@0x0) received by PID 76639 (TID 0x7f2313a26700) from PID 0; stack trace: ***
[2m[36m(pid=76639)[0m     @     0x7f23135ff390 (unknown)
[2m[36m(pid=76639)[0m     @     0x7ef415804fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76639)[0m     @     0x7ef412af864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76639)[0m     @     0x7ef412afb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76735)[0m     @     0x7fe422879390 (unknown)
[2m[36m(pid=76735)[0m     @     0x7fb524a32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76735)[0m     @     0x7fb521d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76735)[0m     @     0x7fb521d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76704)[0m     @     0x7f5b5a6cf390 (unknown)
[2m[36m(pid=76704)[0m     @     0x7f2c5c81bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76704)[0m     @     0x7f2c59b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76704)[0m     @     0x7f2c59b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76656)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76656)[0m *** SIGSEGV (@0x0) received by PID 76656 (TID 0x7fd8f83a7700) from PID 0; stack trace: ***
[2m[36m(pid=76656)[0m     @     0x7fd8f7f80390 (unknown)
[2m[36m(pid=76656)[0m     @     0x7fa9fa082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76656)[0m     @     0x7fa9f737664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76692)[0m PC: @                0x0 (unknown)
[2m[36m(pid=76692)[0m *** SIGSEGV (@0x0) received by PID 76692 (TID 0x7fb019b80700) from PID 0; stack trace: ***
[2m[36m(pid=76692)[0m     @     0x7fb019759390 (unknown)
[2m[36m(pid=76692)[0m     @     0x7f811b96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76692)[0m     @     0x7f8118c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76692)[0m     @     0x7f8118c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76644)[0m     @     0x7ef8bb063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76644)[0m     @     0x7ef8bb063b53 at::TensorIterator::for_each()
[2m[36m(pid=76699)[0m     @     0x7eece1d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76699)[0m     @     0x7eece1e97148 at::Tensor::copy_()
[2m[36m(pid=76699)[0m     @     0x7eece3a8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76754)[0m     @     0x7f5e0ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76754)[0m     @     0x7f5e0ed5b148 at::Tensor::copy_()
[2m[36m(pid=76754)[0m     @     0x7f5e10952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76710)[0m     @     0x7f243ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76710)[0m     @     0x7f2440095148 at::Tensor::copy_()
[2m[36m(pid=76710)[0m     @     0x7f2441c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76710)[0m     @     0x7f243ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76638)[0m     @     0x7efbb55fb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76638)[0m     @     0x7efbb55fbb53 at::TensorIterator::for_each()
[2m[36m(pid=76638)[0m     @     0x7efbb55fbe11 at::TensorIterator::for_each()
[2m[36m(pid=76749)[0m     @     0x7fcce54345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76749)[0m     @     0x7fcce553c148 at::Tensor::copy_()
[2m[36m(pid=76749)[0m     @     0x7fcce7133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76749)[0m     @     0x7fcce54345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76740)[0m     @     0x7fc992814148 at::Tensor::copy_()
[2m[36m(pid=76740)[0m     @     0x7fc99440b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76740)[0m     @     0x7fc99270c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76748)[0m     @     0x7f14dc623b53 at::TensorIterator::for_each()
[2m[36m(pid=76748)[0m     @     0x7f14dc623e11 at::TensorIterator::for_each()
[2m[36m(pid=76748)[0m     @     0x7f14df33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76748)[0m     @     0x7f14df35fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76748)[0m     @     0x7f14dc39d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76645)[0m     @     0x7f06716a8b53 at::TensorIterator::for_each()
[2m[36m(pid=76645)[0m     @     0x7f06716a8e11 at::TensorIterator::for_each()
[2m[36m(pid=76645)[0m     @     0x7f06743c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76645)[0m     @     0x7f06743e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76640)[0m     @     0x7f068bce2b53 at::TensorIterator::for_each()
[2m[36m(pid=76677)[0m     @     0x7f7344d67b53 at::TensorIterator::for_each()
[2m[36m(pid=76677)[0m     @     0x7f7344d67e11 at::TensorIterator::for_each()
[2m[36m(pid=76679)[0m     @     0x7f9c1c8a8b53 at::TensorIterator::for_each()
[2m[36m(pid=76679)[0m     @     0x7f9c1c8a8e11 at::TensorIterator::for_each()
[2m[36m(pid=76679)[0m     @     0x7f9c1f5c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76660)[0m     @     0x7f6353424b53 at::TensorIterator::for_each()
[2m[36m(pid=76660)[0m     @     0x7f6353424e11 at::TensorIterator::for_each()
[2m[36m(pid=76729)[0m     @     0x7f924d02b390 (unknown)
[2m[36m(pid=76729)[0m     @     0x7f634f11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76729)[0m     @     0x7f634c40f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76729)[0m     @     0x7f634c412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76661)[0m     @     0x7f6f1626ab53 at::TensorIterator::for_each()
[2m[36m(pid=76661)[0m     @     0x7f6f1626ae11 at::TensorIterator::for_each()
[2m[36m(pid=76700)[0m     @     0x7efe5755db53 at::TensorIterator::for_each()
[2m[36m(pid=76700)[0m     @     0x7efe5755de11 at::TensorIterator::for_each()
[2m[36m(pid=76632)[0m     @     0x7f629211bb53 at::TensorIterator::for_each()
[2m[36m(pid=76632)[0m     @     0x7f629211be11 at::TensorIterator::for_each()
[2m[36m(pid=76709)[0m     @     0x7f49fcd67b53 at::TensorIterator::for_each()
[2m[36m(pid=76709)[0m     @     0x7f49fcd67e11 at::TensorIterator::for_each()
[2m[36m(pid=76643)[0m     @     0x7f5884412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76643)[0m     @     0x7f5884412b53 at::TensorIterator::for_each()
[2m[36m(pid=76708)[0m     @     0x7fc461fdf390 (unknown)
[2m[36m(pid=76708)[0m     @     0x7f9563feafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76708)[0m     @     0x7f95612de64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76741)[0m     @     0x7f5580623b53 at::TensorIterator::for_each()
[2m[36m(pid=76741)[0m     @     0x7f5580623e11 at::TensorIterator::for_each()
[2m[36m(pid=76675)[0m     @     0x7fb9d9aeab53 at::TensorIterator::for_each()
[2m[36m(pid=76675)[0m     @     0x7fb9d9aeae11 at::TensorIterator::for_each()
[2m[36m(pid=76684)[0m     @     0x7ecf74f78b53 at::TensorIterator::for_each()
[2m[36m(pid=76684)[0m     @     0x7ecf74f78e11 at::TensorIterator::for_each()
[2m[36m(pid=76684)[0m     @     0x7ecf77c91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76684)[0m     @     0x7ecf77cb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76630)[0m     @     0x7f57bd63bb53 at::TensorIterator::for_each()
[2m[36m(pid=76630)[0m     @     0x7f57bd63be11 at::TensorIterator::for_each()
[2m[36m(pid=76630)[0m     @     0x7f57c0354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76630)[0m     @     0x7f57c0377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76743)[0m     @     0x7f786a797b53 at::TensorIterator::for_each()
[2m[36m(pid=76743)[0m     @     0x7f786a797e11 at::TensorIterator::for_each()
[2m[36m(pid=76743)[0m     @     0x7f786d4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76743)[0m     @     0x7f786d4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76681)[0m     @     0x7f5d11a67b53 at::TensorIterator::for_each()
[2m[36m(pid=76681)[0m     @     0x7f5d11a67e11 at::TensorIterator::for_each()
[2m[36m(pid=76681)[0m     @     0x7f5d14780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76681)[0m     @     0x7f5d147a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76629)[0m     @     0x7f404f951b53 at::TensorIterator::for_each()
[2m[36m(pid=76629)[0m     @     0x7f404f951e11 at::TensorIterator::for_each()
[2m[36m(pid=76629)[0m     @     0x7f405266ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76629)[0m     @     0x7f405268dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76624)[0m     @     0x7f8fa52e1b53 at::TensorIterator::for_each()
[2m[36m(pid=76624)[0m     @     0x7f8fa52e1e11 at::TensorIterator::for_each()
[2m[36m(pid=76624)[0m     @     0x7f8fa7ffac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76624)[0m     @     0x7f8fa801dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76624)[0m     @     0x7f8fa505b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76628)[0m     @     0x7fad58c49e11 at::TensorIterator::for_each()
[2m[36m(pid=76628)[0m     @     0x7fad5b962c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76628)[0m     @     0x7fad5b985cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76628)[0m     @     0x7fad589c3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76628)[0m     @     0x7fad589c1c3f at::native::copy_impl()
[2m[36m(pid=76633)[0m     @     0x7ee9a1b12b53 at::TensorIterator::for_each()
[2m[36m(pid=76633)[0m     @     0x7ee9a1b12e11 at::TensorIterator::for_each()
[2m[36m(pid=76633)[0m     @     0x7ee9a482bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76633)[0m     @     0x7ee9a484ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76736)[0m     @     0x7fdba10da390 (unknown)
[2m[36m(pid=76736)[0m     @     0x7faca32ecfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76736)[0m     @     0x7faca05e064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76654)[0m     @     0x7fb26510afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76654)[0m     @     0x7fb2623fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76654)[0m     @     0x7fb262401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76728)[0m     @     0x7fe76ebb8390 (unknown)
[2m[36m(pid=76728)[0m     @     0x7fb870d48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76728)[0m     @     0x7fb86e03c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76728)[0m     @     0x7fb86e03f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76728)[0m     @     0x7fb86e03fb53 at::TensorIterator::for_each()
[2m[36m(pid=76680)[0m     @     0x7f9ced4fbb53 at::TensorIterator::for_each()
[2m[36m(pid=76680)[0m     @     0x7f9ced4fbe11 at::TensorIterator::for_each()
[2m[36m(pid=76680)[0m     @     0x7f9cf0214c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76680)[0m     @     0x7f9cf0237cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76705)[0m     @     0x7f87789a2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76705)[0m     @     0x7f8776ca35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76705)[0m     @     0x7f8776dab148 at::Tensor::copy_()
[2m[36m(pid=76705)[0m     @     0x7f877d061bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76705)[0m     @     0x55e13d9bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76705)[0m     @     0x55e13d915b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76705)[0m     @     0x55e13d9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76705)[0m     @     0x55e13d9a1a20 method_vectorcall
[2m[36m(pid=76705)[0m     @     0x55e13d915bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76705)[0m     @     0x55e13d9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76705)[0m     @     0x55e13d9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76705)[0m     @     0x55e13d916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76744)[0m     @     0x7f3d8b58ae11 at::TensorIterator::for_each()
[2m[36m(pid=76744)[0m     @     0x7f3d8e2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76744)[0m     @     0x7f3d8e2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76744)[0m     @     0x7f3d8b304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76744)[0m     @     0x7f3d8b302c3f at::native::copy_impl()
[2m[36m(pid=76637)[0m     @     0x7f52992c0b53 at::TensorIterator::for_each()
[2m[36m(pid=76637)[0m     @     0x7f52992c0e11 at::TensorIterator::for_each()
[2m[36m(pid=76637)[0m     @     0x7f529bfd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76637)[0m     @     0x7f529bffccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76637)[0m     @     0x7f529903a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76627)[0m     @     0x7f99f1827e11 at::TensorIterator::for_each()
[2m[36m(pid=76627)[0m     @     0x7f99f4540c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76627)[0m     @     0x7f99f4563cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76627)[0m     @     0x7f99f15a1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76627)[0m     @     0x7f99f159fc3f at::native::copy_impl()
[2m[36m(pid=76647)[0m     @     0x7f9741dd7e11 at::TensorIterator::for_each()
[2m[36m(pid=76647)[0m     @     0x7f9744af0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76647)[0m     @     0x7f9744b13cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76647)[0m     @     0x7f9741b51009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76647)[0m     @     0x7f9741b4fc3f at::native::copy_impl()
[2m[36m(pid=76646)[0m     @     0x7ee1dd2c0e11 at::TensorIterator::for_each()
[2m[36m(pid=76646)[0m     @     0x7ee1dffd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76646)[0m     @     0x7ee1dfffccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76646)[0m     @     0x7ee1dd03a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76646)[0m     @     0x7ee1dd038c3f at::native::copy_impl()
[2m[36m(pid=76651)[0m     @     0x7f21a384cb53 at::TensorIterator::for_each()
[2m[36m(pid=76651)[0m     @     0x7f21a384ce11 at::TensorIterator::for_each()
[2m[36m(pid=76651)[0m     @     0x7f21a6565c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76651)[0m     @     0x7f21a6588cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76651)[0m     @     0x7f21a35c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76651)[0m     @     0x7f21a35c4c3f at::native::copy_impl()
[2m[36m(pid=76625)[0m     @     0x7ee4e8c49e11 at::TensorIterator::for_each()
[2m[36m(pid=76625)[0m     @     0x7ee4eb962c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76625)[0m     @     0x7ee4eb985cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76625)[0m     @     0x7ee4e89c3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76625)[0m     @     0x7ee4e89c1c3f at::native::copy_impl()
[2m[36m(pid=76759)[0m     @     0x7f95b0cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76759)[0m     @     0x7f95b0cf0c3f at::native::copy_impl()
[2m[36m(pid=76759)[0m     @     0x7f95b0cf1ed4 at::native::copy_()
[2m[36m(pid=76716)[0m     @     0x7f4b325e0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76716)[0m     @     0x7f4b2f61e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76716)[0m     @     0x7f4b2f61cc3f at::native::copy_impl()
[2m[36m(pid=76702)[0m     @     0x7f16b0fc7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76702)[0m     @     0x7f16af2c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76702)[0m     @     0x7f16af3d0148 at::Tensor::copy_()
[2m[36m(pid=76682)[0m     @     0x7f51c5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76682)[0m     @     0x7f51c602b148 at::Tensor::copy_()
[2m[36m(pid=76682)[0m     @     0x7f51cc2e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76682)[0m     @     0x5628f293efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76682)[0m     @     0x5628f2899b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76682)[0m     @     0x5628f2924baf _PyEval_EvalCodeWithName
[2m[36m(pid=76682)[0m     @     0x5628f2925a20 method_vectorcall
[2m[36m(pid=76682)[0m     @     0x5628f2899bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76682)[0m     @     0x5628f2924baf _PyEval_EvalCodeWithName
[2m[36m(pid=76682)[0m     @     0x5628f2925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76682)[0m     @     0x5628f289a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76682)[0m     @     0x5628f2924baf _PyEval_EvalCodeWithName
[2m[36m(pid=76682)[0m     @     0x5628f2925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76682)[0m     @     0x5628f289a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76682)[0m     @     0x5628f2924baf _PyEval_EvalCodeWithName
[2m[36m(pid=76682)[0m     @     0x5628f2925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76682)[0m     @     0x5628f289a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76682)[0m     @     0x5628f2924baf _PyEval_EvalCodeWithName
[2m[36m(pid=76678)[0m     @     0x7fc9f63f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76678)[0m     @     0x7fc9f64fe148 at::Tensor::copy_()
[2m[36m(pid=76678)[0m     @     0x7fc9fc7b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76678)[0m     @     0x55b9c0ff2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76678)[0m     @     0x55b9c0f4db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76678)[0m     @     0x55b9c0fd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76678)[0m     @     0x55b9c0fd9a20 method_vectorcall
[2m[36m(pid=76678)[0m     @     0x55b9c0f4dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76678)[0m     @     0x55b9c0fd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76678)[0m     @     0x55b9c0fd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76678)[0m     @     0x55b9c0f4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76678)[0m     @     0x55b9c0fd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76678)[0m     @     0x55b9c0fd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76678)[0m     @     0x55b9c0f4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76678)[0m     @     0x55b9c0fd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76678)[0m     @     0x55b9c0fd9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76678)[0m     @     0x55b9c0f4e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76678)[0m     @     0x55b9c0fd8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76726)[0m     @     0x7f05cf0495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76726)[0m     @     0x7f05cf151148 at::Tensor::copy_()
[2m[36m(pid=76726)[0m     @     0x7f05d5407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76726)[0m     @     0x55746c05dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76726)[0m     @     0x55746bfb8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76726)[0m     @     0x55746c043baf _PyEval_EvalCodeWithName
[2m[36m(pid=76726)[0m     @     0x55746c044a20 method_vectorcall
[2m[36m(pid=76726)[0m     @     0x55746bfb8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76726)[0m     @     0x55746c043baf _PyEval_EvalCodeWithName
[2m[36m(pid=76726)[0m     @     0x55746c044643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76726)[0m     @     0x55746bfb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76726)[0m     @     0x55746c043baf _PyEval_EvalCodeWithName
[2m[36m(pid=76726)[0m     @     0x55746c044643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76726)[0m     @     0x55746bfb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76726)[0m     @     0x55746c043baf _PyEval_EvalCodeWithName
[2m[36m(pid=76726)[0m     @     0x55746c044643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76726)[0m     @     0x55746bfb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76726)[0m     @     0x55746c043baf _PyEval_EvalCodeWithName
[2m[36m(pid=76687)[0m     @     0x7f962511ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76687)[0m     @     0x7f962513dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76687)[0m     @     0x7f962217b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76687)[0m     @     0x7f9622179c3f at::native::copy_impl()
[2m[36m(pid=76721)[0m     @     0x7eeb69139148 at::Tensor::copy_()
[2m[36m(pid=76721)[0m     @     0x7eeb6f3efbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76721)[0m     @     0x561949e88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76721)[0m     @     0x561949de3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76721)[0m     @     0x561949e6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76721)[0m     @     0x561949e6fa20 method_vectorcall
[2m[36m(pid=76721)[0m     @     0x561949de3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76721)[0m     @     0x561949e6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76721)[0m     @     0x561949e6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76721)[0m     @     0x561949de4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76721)[0m     @     0x561949e6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76721)[0m     @     0x561949e6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76721)[0m     @     0x561949de4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76721)[0m     @     0x561949e6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76721)[0m     @     0x561949e6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76721)[0m     @     0x561949de4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76721)[0m     @     0x561949e6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76753)[0m     @     0x7f8bd019e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76753)[0m     @     0x7f8bd02a6148 at::Tensor::copy_()
[2m[36m(pid=76753)[0m     @     0x7f8bd655cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76753)[0m     @     0x561d8713dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76753)[0m     @     0x561d87098b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76753)[0m     @     0x561d87123baf _PyEval_EvalCodeWithName
[2m[36m(pid=76753)[0m     @     0x561d87124a20 method_vectorcall
[2m[36m(pid=76753)[0m     @     0x561d87098bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76753)[0m     @     0x561d87123baf _PyEval_EvalCodeWithName
[2m[36m(pid=76753)[0m     @     0x561d87124643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76753)[0m     @     0x561d87099689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76753)[0m     @     0x561d87123baf _PyEval_EvalCodeWithName
[2m[36m(pid=76753)[0m     @     0x561d87124643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76753)[0m     @     0x561d87099689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76753)[0m     @     0x561d87123baf _PyEval_EvalCodeWithName
[2m[36m(pid=76753)[0m     @     0x561d87124643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76753)[0m     @     0x561d87099689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76753)[0m     @     0x561d87123baf _PyEval_EvalCodeWithName
[2m[36m(pid=76650)[0m     @     0x7ee137a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76650)[0m     @     0x7ee137aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76650)[0m     @     0x7ee134ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76650)[0m     @     0x7ee134adfc3f at::native::copy_impl()
[2m[36m(pid=76746)[0m     @     0x7f9cc801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76746)[0m     @     0x7f9cc8126148 at::Tensor::copy_()
[2m[36m(pid=76746)[0m     @     0x7f9cce3dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76746)[0m     @     0x55c7d60b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76746)[0m     @     0x55c7d600bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76746)[0m     @     0x55c7d6096baf _PyEval_EvalCodeWithName
[2m[36m(pid=76746)[0m     @     0x55c7d6097a20 method_vectorcall
[2m[36m(pid=76746)[0m     @     0x55c7d600bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76746)[0m     @     0x55c7d6096baf _PyEval_EvalCodeWithName
[2m[36m(pid=76746)[0m     @     0x55c7d6097643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76746)[0m     @     0x55c7d600c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76746)[0m     @     0x55c7d6096baf _PyEval_EvalCodeWithName
[2m[36m(pid=76746)[0m     @     0x55c7d6097643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76746)[0m     @     0x55c7d600c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76746)[0m     @     0x55c7d6096baf _PyEval_EvalCodeWithName
[2m[36m(pid=76746)[0m     @     0x55c7d6097643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76746)[0m     @     0x55c7d600c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76746)[0m     @     0x55c7d6096baf _PyEval_EvalCodeWithName
[2m[36m(pid=76694)[0m     @     0x7fbcc2abc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76694)[0m     @     0x7fbcc2bc4148 at::Tensor::copy_()
[2m[36m(pid=76694)[0m     @     0x7fbcc8e7abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76694)[0m     @     0x55f25ba8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76694)[0m     @     0x55f25b9e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76694)[0m     @     0x55f25ba71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76694)[0m     @     0x55f25ba72a20 method_vectorcall
[2m[36m(pid=76694)[0m     @     0x55f25b9e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76694)[0m     @     0x55f25ba71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76694)[0m     @     0x55f25ba72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76694)[0m     @     0x55f25b9e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76694)[0m     @     0x55f25ba71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76694)[0m     @     0x55f25ba72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76694)[0m     @     0x55f25b9e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76694)[0m     @     0x55f25ba71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76694)[0m     @     0x55f25ba72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76694)[0m     @     0x55f25b9e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76694)[0m     @     0x55f25ba71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76712)[0m     @     0x7f50beacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76712)[0m     @     0x7f50bbb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76712)[0m     @     0x7f50bbb0bc3f at::native::copy_impl()
[2m[36m(pid=76631)[0m     @     0x7f8cd5633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76631)[0m     @     0x7f8cd5631c3f at::native::copy_impl()
[2m[36m(pid=76631)[0m     @     0x7f8cd5632ed4 at::native::copy_()
[2m[36m(pid=76706)[0m     @     0x7f8f8d4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76706)[0m     @     0x7f8f8d4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76706)[0m     @     0x7f8f8a511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76706)[0m     @     0x7f8f8a50fc3f at::native::copy_impl()
[2m[36m(pid=76635)[0m     @     0x7ed46863fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76635)[0m     @     0x7ed46567d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76635)[0m     @     0x7ed46567bc3f at::native::copy_impl()
[2m[36m(pid=76719)[0m     @     0x7ee2a96d1148 at::Tensor::copy_()
[2m[36m(pid=76719)[0m     @     0x7ee2af987bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76719)[0m     @     0x564d7cdfefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76719)[0m     @     0x564d7cd59b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76719)[0m     @     0x564d7cde4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76719)[0m     @     0x564d7cde5a20 method_vectorcall
[2m[36m(pid=76719)[0m     @     0x564d7cd59bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76719)[0m     @     0x564d7cde4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76719)[0m     @     0x564d7cde5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76719)[0m     @     0x564d7cd5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76719)[0m     @     0x564d7cde4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76719)[0m     @     0x564d7cde5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76719)[0m     @     0x564d7cd5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76719)[0m     @     0x564d7cde4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76719)[0m     @     0x564d7cde5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76719)[0m     @     0x564d7cd5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76719)[0m     @     0x564d7cde4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76724)[0m     @     0x7f5f9d79d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76724)[0m     @     0x7f5f9d8a5148 at::Tensor::copy_()
[2m[36m(pid=76724)[0m     @     0x7f5fa3b5bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76724)[0m     @     0x558160337fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76724)[0m     @     0x558160292b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76724)[0m     @     0x55816031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76724)[0m     @     0x55816031ea20 method_vectorcall
[2m[36m(pid=76724)[0m     @     0x558160292bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76724)[0m     @     0x55816031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76724)[0m     @     0x55816031e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76724)[0m     @     0x558160293689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76623)[0m     @     0x7f6d9b84ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76623)[0m     @     0x7f6d9888c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76623)[0m     @     0x7f6d9888ac3f at::native::copy_impl()
[2m[36m(pid=76623)[0m     @     0x7f6d9888bed4 at::native::copy_()
[2m[36m(pid=76641)[0m     @     0x7f7955d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76641)[0m     @     0x7f7955d07c3f at::native::copy_impl()
[2m[36m(pid=76641)[0m     @     0x7f7955d08ed4 at::native::copy_()
[2m[36m(pid=76689)[0m     @     0x7fc2df163cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76689)[0m     @     0x7fc2dc1a1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76689)[0m     @     0x7fc2dc19fc3f at::native::copy_impl()
[2m[36m(pid=76689)[0m     @     0x7fc2dc1a0ed4 at::native::copy_()
[2m[36m(pid=76695)[0m     @     0x7eea03d93e11 at::TensorIterator::for_each()
[2m[36m(pid=76695)[0m     @     0x7eea06aacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76695)[0m     @     0x7eea06acfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76695)[0m     @     0x7eea03b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76732)[0m     @     0x7f53bdb12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76732)[0m     @     0x7f53bdb12b53 at::TensorIterator::for_each()
[2m[36m(pid=76745)[0m     @     0x7f8bf25c0e11 at::TensorIterator::for_each()
[2m[36m(pid=76745)[0m     @     0x7f8bf52d9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76745)[0m     @     0x7f8bf52fccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76745)[0m     @     0x7f8bf233a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76745)[0m     @     0x7f8bf2338c3f at::native::copy_impl()
[2m[36m(pid=76626)[0m     @     0x7fa932cbfe11 at::TensorIterator::for_each()
[2m[36m(pid=76626)[0m     @     0x7fa9359d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76626)[0m     @     0x7fa9359fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76626)[0m     @     0x7fa932a39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76626)[0m     @     0x7fa932a37c3f at::native::copy_impl()
[2m[36m(pid=76739)[0m     @     0x7f0f75f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=76739)[0m     @     0x7f0f78ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76739)[0m     @     0x7f0f78ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76739)[0m     @     0x7f0f75d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76739)[0m     @     0x7f0f75d07c3f at::native::copy_impl()
[2m[36m(pid=76634)[0m     @     0x7f5017063e11 at::TensorIterator::for_each()
[2m[36m(pid=76634)[0m     @     0x7f5019d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76634)[0m     @     0x7f5019d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76634)[0m     @     0x7f5016ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76634)[0m     @     0x7f5016ddbc3f at::native::copy_impl()
[2m[36m(pid=76738)[0m     @     0x7ee46e625e11 at::TensorIterator::for_each()
[2m[36m(pid=76738)[0m     @     0x7ee47133ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76738)[0m     @     0x7ee471361cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76738)[0m     @     0x7ee46e39f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76738)[0m     @     0x7ee46e39dc3f at::native::copy_impl()
[2m[36m(pid=76737)[0m     @     0x7f162a4295cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76737)[0m     @     0x7f162a531148 at::Tensor::copy_()
[2m[36m(pid=76737)[0m     @     0x7f16307e7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76737)[0m     @     0x5637a7ec2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76737)[0m     @     0x5637a7e1db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76737)[0m     @     0x5637a7ea8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76737)[0m     @     0x5637a7ea9a20 method_vectorcall
[2m[36m(pid=76737)[0m     @     0x5637a7e1dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76737)[0m     @     0x5637a7ea8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76737)[0m     @     0x5637a7ea9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76737)[0m     @     0x5637a7e1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76737)[0m     @     0x5637a7ea8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76737)[0m     @     0x5637a7ea9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76737)[0m     @     0x5637a7e1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76737)[0m     @     0x5637a7ea8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76737)[0m     @     0x5637a7ea9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76737)[0m     @     0x5637a7e1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76737)[0m     @     0x5637a7ea8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76696)[0m     @     0x7f301ec92cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76696)[0m     @     0x7f301bcd0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76696)[0m     @     0x7f301bccec3f at::native::copy_impl()
[2m[36m(pid=76696)[0m     @     0x7f301bccfed4 at::native::copy_()
[2m[36m(pid=76707)[0m     @     0x7eec5d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76707)[0m     @     0x7eec5d32b148 at::Tensor::copy_()
[2m[36m(pid=76707)[0m     @     0x7eec635e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76707)[0m     @     0x561eb3f74fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76707)[0m     @     0x561eb3ecfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76707)[0m     @     0x561eb3f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76707)[0m     @     0x561eb3f5ba20 method_vectorcall
[2m[36m(pid=76707)[0m     @     0x561eb3ecfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76707)[0m     @     0x561eb3f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76707)[0m     @     0x561eb3f5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76707)[0m     @     0x561eb3ed0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76707)[0m     @     0x561eb3f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76707)[0m     @     0x561eb3f5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76707)[0m     @     0x561eb3ed0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76707)[0m     @     0x561eb3f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76707)[0m     @     0x561eb3f5b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76707)[0m     @     0x561eb3ed0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76707)[0m     @     0x561eb3f5abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x7f1e98962fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=76664)[0m     @     0x7f1e95c5664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=76664)[0m     @     0x7f1e95c59977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76639)[0m     @     0x7ef412afbb53 at::TensorIterator::for_each()
[2m[36m(pid=76639)[0m     @     0x7ef412afbe11 at::TensorIterator::for_each()
[2m[36m(pid=76735)[0m     @     0x7fb521d29b53 at::TensorIterator::for_each()
[2m[36m(pid=76735)[0m     @     0x7fb521d29e11 at::TensorIterator::for_each()
[2m[36m(pid=76735)[0m     @     0x7fb524a42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76735)[0m     @     0x7fb524a65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76704)[0m     @     0x7f2c59b12b53 at::TensorIterator::for_each()
[2m[36m(pid=76704)[0m     @     0x7f2c59b12e11 at::TensorIterator::for_each()
[2m[36m(pid=76704)[0m     @     0x7f2c5c82bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76656)[0m     @     0x7fa9f7379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76692)[0m     @     0x7f8118c62b53 at::TensorIterator::for_each()
[2m[36m(pid=76692)[0m     @     0x7f8118c62e11 at::TensorIterator::for_each()
[2m[36m(pid=76692)[0m     @     0x7f811b97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76644)[0m     @     0x7ef8bb063e11 at::TensorIterator::for_each()
[2m[36m(pid=76644)[0m     @     0x7ef8bdd7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76644)[0m     @     0x7ef8bdd9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76644)[0m     @     0x7ef8baddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76644)[0m     @     0x7ef8baddbc3f at::native::copy_impl()
[2m[36m(pid=76699)[0m     @     0x7eece1d8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76699)[0m     @     0x7eece1e97148 at::Tensor::copy_()
[2m[36m(pid=76699)[0m     @     0x7eece814dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76699)[0m     @     0x560cd6c15fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76699)[0m     @     0x560cd6b70b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76699)[0m     @     0x560cd6bfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76699)[0m     @     0x560cd6bfca20 method_vectorcall
[2m[36m(pid=76699)[0m     @     0x560cd6b70bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76699)[0m     @     0x560cd6bfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76699)[0m     @     0x560cd6bfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76699)[0m     @     0x560cd6b71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76699)[0m     @     0x560cd6bfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76699)[0m     @     0x560cd6bfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76699)[0m     @     0x560cd6b71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76699)[0m     @     0x560cd6bfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76699)[0m     @     0x560cd6bfc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76699)[0m     @     0x560cd6b71689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76699)[0m     @     0x560cd6bfbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76754)[0m     @     0x7f5e0ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76754)[0m     @     0x7f5e0ed5b148 at::Tensor::copy_()
[2m[36m(pid=76754)[0m     @     0x7f5e15011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76754)[0m     @     0x557433c94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76754)[0m     @     0x557433befb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76754)[0m     @     0x557433c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76754)[0m     @     0x557433c7ba20 method_vectorcall
[2m[36m(pid=76754)[0m     @     0x557433befbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76754)[0m     @     0x557433c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76754)[0m     @     0x557433c7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76754)[0m     @     0x557433bf0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76754)[0m     @     0x557433c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76754)[0m     @     0x557433c7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76754)[0m     @     0x557433bf0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76754)[0m     @     0x557433c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76754)[0m     @     0x557433c7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76754)[0m     @     0x557433bf0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76754)[0m     @     0x557433c7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76710)[0m     @     0x7f2440095148 at::Tensor::copy_()
[2m[36m(pid=76710)[0m     @     0x7f244634bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76710)[0m     @     0x5579cd60efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76710)[0m     @     0x5579cd569b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76710)[0m     @     0x5579cd5f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76710)[0m     @     0x5579cd5f5a20 method_vectorcall
[2m[36m(pid=76710)[0m     @     0x5579cd569bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76710)[0m     @     0x5579cd5f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76710)[0m     @     0x5579cd5f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76710)[0m     @     0x5579cd56a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76710)[0m     @     0x5579cd5f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76710)[0m     @     0x5579cd5f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76710)[0m     @     0x5579cd56a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76710)[0m     @     0x5579cd5f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76710)[0m     @     0x5579cd5f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76710)[0m     @     0x5579cd56a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76710)[0m     @     0x5579cd5f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76638)[0m     @     0x7efbb8314c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76638)[0m     @     0x7efbb8337cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76638)[0m     @     0x7efbb5375009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76638)[0m     @     0x7efbb5373c3f at::native::copy_impl()
[2m[36m(pid=76638)[0m     @     0x7efbb5374ed4 at::native::copy_()
[2m[36m(pid=76749)[0m     @     0x7fcce553c148 at::Tensor::copy_()
[2m[36m(pid=76749)[0m     @     0x7fcceb7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76749)[0m     @     0x558d4cdc2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76749)[0m     @     0x558d4cd1db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76749)[0m     @     0x558d4cda8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76749)[0m     @     0x558d4cda9a20 method_vectorcall
[2m[36m(pid=76749)[0m     @     0x558d4cd1dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76749)[0m     @     0x558d4cda8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76749)[0m     @     0x558d4cda9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76749)[0m     @     0x558d4cd1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76749)[0m     @     0x558d4cda8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76749)[0m     @     0x558d4cda9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76749)[0m     @     0x558d4cd1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76749)[0m     @     0x558d4cda8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76749)[0m     @     0x558d4cda9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76749)[0m     @     0x558d4cd1e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76749)[0m     @     0x558d4cda8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76740)[0m     @     0x7fc992814148 at::Tensor::copy_()
[2m[36m(pid=76740)[0m     @     0x7fc998acabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76740)[0m     @     0x55da81e78fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76740)[0m     @     0x55da81dd3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76740)[0m     @     0x55da81e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76740)[0m     @     0x55da81e5fa20 method_vectorcall
[2m[36m(pid=76740)[0m     @     0x55da81dd3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76740)[0m     @     0x55da81e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76740)[0m     @     0x55da81e5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76740)[0m     @     0x55da81dd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76740)[0m     @     0x55da81e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76740)[0m     @     0x55da81e5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76740)[0m     @     0x55da81dd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76740)[0m     @     0x55da81e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76740)[0m     @     0x55da81e5f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76740)[0m     @     0x55da81dd4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76740)[0m     @     0x55da81e5ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76748)[0m     @     0x7f14dc39bc3f at::native::copy_impl()
[2m[36m(pid=76748)[0m     @     0x7f14dc39ced4 at::native::copy_()
[2m[36m(pid=76748)[0m     @     0x7f14dcadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76748)[0m     @     0x7f14dcbe7148 at::Tensor::copy_()
[2m[36m(pid=76748)[0m     @     0x7f14de7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76645)[0m     @     0x7f0671422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76645)[0m     @     0x7f0671420c3f at::native::copy_impl()
[2m[36m(pid=76645)[0m     @     0x7f0671421ed4 at::native::copy_()
[2m[36m(pid=76645)[0m     @     0x7f0671b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76640)[0m     @     0x7f068bce2e11 at::TensorIterator::for_each()
[2m[36m(pid=76640)[0m     @     0x7f068e9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76640)[0m     @     0x7f068ea1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76640)[0m     @     0x7f068ba5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76640)[0m     @     0x7f068ba5ac3f at::native::copy_impl()
[2m[36m(pid=76640)[0m     @     0x7f068ba5bed4 at::native::copy_()
[2m[36m(pid=76640)[0m     @     0x7f068c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76677)[0m     @     0x7f7347a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76677)[0m     @     0x7f7347aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76677)[0m     @     0x7f7344ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76677)[0m     @     0x7f7344adfc3f at::native::copy_impl()
[2m[36m(pid=76677)[0m     @     0x7f7344ae0ed4 at::native::copy_()
[2m[36m(pid=76677)[0m     @     0x7f73452235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76679)[0m     @     0x7f9c1f5e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76679)[0m     @     0x7f9c1c622009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76679)[0m     @     0x7f9c1c620c3f at::native::copy_impl()
[2m[36m(pid=76679)[0m     @     0x7f9c1c621ed4 at::native::copy_()
[2m[36m(pid=76679)[0m     @     0x7f9c1cd645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76660)[0m     @     0x7f635613dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76660)[0m     @     0x7f6356160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76660)[0m     @     0x7f635319e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76660)[0m     @     0x7f635319cc3f at::native::copy_impl()
[2m[36m(pid=76660)[0m     @     0x7f635319ded4 at::native::copy_()
[2m[36m(pid=76660)[0m     @     0x7f63538e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76729)[0m     @     0x7f634c412b53 at::TensorIterator::for_each()
[2m[36m(pid=76729)[0m     @     0x7f634c412e11 at::TensorIterator::for_each()
[2m[36m(pid=76729)[0m     @     0x7f634f12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76729)[0m     @     0x7f634f14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76661)[0m     @     0x7f6f18f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76661)[0m     @     0x7f6f18fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76661)[0m     @     0x7f6f15fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76661)[0m     @     0x7f6f15fe2c3f at::native::copy_impl()
[2m[36m(pid=76661)[0m     @     0x7f6f15fe3ed4 at::native::copy_()
[2m[36m(pid=76661)[0m     @     0x7f6f167265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76700)[0m     @     0x7efe5a276c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76700)[0m     @     0x7efe5a299cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76700)[0m     @     0x7efe572d7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76700)[0m     @     0x7efe572d5c3f at::native::copy_impl()
[2m[36m(pid=76700)[0m     @     0x7efe572d6ed4 at::native::copy_()
[2m[36m(pid=76700)[0m     @     0x7efe57a195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76632)[0m     @     0x7f6294e34c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76632)[0m     @     0x7f6294e57cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76632)[0m     @     0x7f6291e95009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76632)[0m     @     0x7f6291e93c3f at::native::copy_impl()
[2m[36m(pid=76632)[0m     @     0x7f6291e94ed4 at::native::copy_()
[2m[36m(pid=76709)[0m     @     0x7f49ffa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76709)[0m     @     0x7f49ffaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76709)[0m     @     0x7f49fcae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76709)[0m     @     0x7f49fcadfc3f at::native::copy_impl()
[2m[36m(pid=76709)[0m     @     0x7f49fcae0ed4 at::native::copy_()
[2m[36m(pid=76643)[0m     @     0x7f5884412e11 at::TensorIterator::for_each()
[2m[36m(pid=76643)[0m     @     0x7f588712bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76643)[0m     @     0x7f588714ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76643)[0m     @     0x7f588418c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76643)[0m     @     0x7f588418ac3f at::native::copy_impl()
[2m[36m(pid=76643)[0m     @     0x7f588418bed4 at::native::copy_()
[2m[36m(pid=76708)[0m     @     0x7f95612e1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76708)[0m     @     0x7f95612e1b53 at::TensorIterator::for_each()
[2m[36m(pid=76708)[0m     @     0x7f95612e1e11 at::TensorIterator::for_each()
[2m[36m(pid=76708)[0m     @     0x7f9563ffac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76741)[0m     @     0x7f558333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76741)[0m     @     0x7f558335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76741)[0m     @     0x7f558039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76741)[0m     @     0x7f558039bc3f at::native::copy_impl()
[2m[36m(pid=76741)[0m     @     0x7f558039ced4 at::native::copy_()
[2m[36m(pid=76675)[0m     @     0x7fb9dc803c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76675)[0m     @     0x7fb9dc826cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76675)[0m     @     0x7fb9d9864009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76675)[0m     @     0x7fb9d9862c3f at::native::copy_impl()
[2m[36m(pid=76675)[0m     @     0x7fb9d9863ed4 at::native::copy_()
[2m[36m(pid=76684)[0m     @     0x7ecf74cf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76684)[0m     @     0x7ecf74cf0c3f at::native::copy_impl()
[2m[36m(pid=76684)[0m     @     0x7ecf74cf1ed4 at::native::copy_()
[2m[36m(pid=76684)[0m     @     0x7ecf754345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76630)[0m     @     0x7f57bd3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76630)[0m     @     0x7f57bd3b3c3f at::native::copy_impl()
[2m[36m(pid=76630)[0m     @     0x7f57bd3b4ed4 at::native::copy_()
[2m[36m(pid=76743)[0m     @     0x7f786a511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76743)[0m     @     0x7f786a50fc3f at::native::copy_impl()
[2m[36m(pid=76743)[0m     @     0x7f786a510ed4 at::native::copy_()
[2m[36m(pid=76743)[0m     @     0x7f786ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76681)[0m     @     0x7f5d117e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76681)[0m     @     0x7f5d117dfc3f at::native::copy_impl()
[2m[36m(pid=76681)[0m     @     0x7f5d117e0ed4 at::native::copy_()
[2m[36m(pid=76629)[0m     @     0x7f404f6cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76629)[0m     @     0x7f404f6c9c3f at::native::copy_impl()
[2m[36m(pid=76629)[0m     @     0x7f404f6caed4 at::native::copy_()
[2m[36m(pid=76624)[0m     @     0x7f8fa5059c3f at::native::copy_impl()
[2m[36m(pid=76624)[0m     @     0x7f8fa505aed4 at::native::copy_()
[2m[36m(pid=76624)[0m     @     0x7f8fa579d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76628)[0m     @     0x7fad589c2ed4 at::native::copy_()
[2m[36m(pid=76628)[0m     @     0x7fad591055cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76628)[0m     @     0x7fad5920d148 at::Tensor::copy_()
[2m[36m(pid=76633)[0m     @     0x7ee9a188c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76633)[0m     @     0x7ee9a188ac3f at::native::copy_impl()
[2m[36m(pid=76633)[0m     @     0x7ee9a188bed4 at::native::copy_()
[2m[36m(pid=76633)[0m     @     0x7ee9a1fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76736)[0m     @     0x7faca05e3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=76736)[0m     @     0x7faca05e3b53 at::TensorIterator::for_each()
[2m[36m(pid=76654)[0m     @     0x7fb262401b53 at::TensorIterator::for_each()
[2m[36m(pid=76728)[0m     @     0x7fb86e03fe11 at::TensorIterator::for_each()
[2m[36m(pid=76728)[0m     @     0x7fb870d58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76728)[0m     @     0x7fb870d7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76728)[0m     @     0x7fb86ddb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76728)[0m     @     0x7fb86ddb7c3f at::native::copy_impl()
[2m[36m(pid=76728)[0m     @     0x7fb86ddb8ed4 at::native::copy_()
[2m[36m(pid=76680)[0m     @     0x7f9ced275009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76680)[0m     @     0x7f9ced273c3f at::native::copy_impl()
[2m[36m(pid=76680)[0m     @     0x7f9ced274ed4 at::native::copy_()
[2m[36m(pid=76680)[0m     @     0x7f9ced9b75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76680)[0m     @     0x7f9cedabf148 at::Tensor::copy_()
[2m[36m(pid=76680)[0m     @     0x7f9cef6b6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76705)[0m     @     0x55e13d9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76705)[0m     @     0x55e13d9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76705)[0m     @     0x55e13d916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76705)[0m     @     0x55e13d9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76705)[0m     @     0x55e13d9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76705)[0m     @     0x55e13d916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76705)[0m     @     0x55e13d9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76744)[0m     @     0x7f3d8b303ed4 at::native::copy_()
[2m[36m(pid=76744)[0m     @     0x7f3d8ba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76744)[0m     @     0x7f3d8bb4e148 at::Tensor::copy_()
[2m[36m(pid=76744)[0m     @     0x7f3d8d745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76637)[0m     @     0x7f5299038c3f at::native::copy_impl()
[2m[36m(pid=76637)[0m     @     0x7f5299039ed4 at::native::copy_()
[2m[36m(pid=76637)[0m     @     0x7f529977c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76637)[0m     @     0x7f5299884148 at::Tensor::copy_()
[2m[36m(pid=76627)[0m     @     0x7f99f15a0ed4 at::native::copy_()
[2m[36m(pid=76627)[0m     @     0x7f99f1ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76627)[0m     @     0x7f99f1deb148 at::Tensor::copy_()
[2m[36m(pid=76627)[0m     @     0x7f99f39e2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76647)[0m     @     0x7f9741b50ed4 at::native::copy_()
[2m[36m(pid=76647)[0m     @     0x7f97422935cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76647)[0m     @     0x7f974239b148 at::Tensor::copy_()
[2m[36m(pid=76647)[0m     @     0x7f9743f92989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76646)[0m     @     0x7ee1dd039ed4 at::native::copy_()
[2m[36m(pid=76646)[0m     @     0x7ee1dd77c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76646)[0m     @     0x7ee1dd884148 at::Tensor::copy_()
[2m[36m(pid=76646)[0m     @     0x7ee1df47b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76651)[0m     @     0x7f21a35c5ed4 at::native::copy_()
[2m[36m(pid=76651)[0m     @     0x7f21a3d085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76651)[0m     @     0x7f21a3e10148 at::Tensor::copy_()
[2m[36m(pid=76625)[0m     @     0x7ee4e89c2ed4 at::native::copy_()
[2m[36m(pid=76625)[0m     @     0x7ee4e91055cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76625)[0m     @     0x7ee4e920d148 at::Tensor::copy_()
[2m[36m(pid=76625)[0m     @     0x7ee4eae04989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76759)[0m     @     0x7f95b14345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76759)[0m     @     0x7f95b153c148 at::Tensor::copy_()
[2m[36m(pid=76759)[0m     @     0x7f95b3133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76759)[0m     @     0x7f95b14345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76716)[0m     @     0x7f4b2f61ded4 at::native::copy_()
[2m[36m(pid=76716)[0m     @     0x7f4b2fd605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76716)[0m     @     0x7f4b2fe68148 at::Tensor::copy_()
[2m[36m(pid=76702)[0m     @     0x7f16b5686bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76702)[0m     @     0x55d89f2b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76702)[0m     @     0x55d89f212b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76702)[0m     @     0x55d89f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76702)[0m     @     0x55d89f29ea20 method_vectorcall
[2m[36m(pid=76702)[0m     @     0x55d89f212bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76702)[0m     @     0x55d89f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76702)[0m     @     0x55d89f29e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76702)[0m     @     0x55d89f213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76702)[0m     @     0x55d89f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76702)[0m     @     0x55d89f29e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76702)[0m     @     0x55d89f213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76702)[0m     @     0x55d89f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76702)[0m     @     0x55d89f29e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76702)[0m     @     0x55d89f213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76702)[0m     @     0x55d89f29dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76687)[0m     @     0x7f962217aed4 at::native::copy_()
[2m[36m(pid=76687)[0m     @     0x7f96228bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76687)[0m     @     0x7f96229c5148 at::Tensor::copy_()
[2m[36m(pid=76687)[0m     @     0x7f96245bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76650)[0m     @     0x7ee134ae0ed4 at::native::copy_()
[2m[36m(pid=76650)[0m     @     0x7ee1352235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76650)[0m     @     0x7ee13532b148 at::Tensor::copy_()
[2m[36m(pid=76650)[0m     @     0x7ee136f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76712)[0m     @     0x7f50bbb0ced4 at::native::copy_()
[2m[36m(pid=76712)[0m     @     0x7f50bc24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76712)[0m     @     0x7f50bc357148 at::Tensor::copy_()
[2m[36m(pid=76712)[0m     @     0x7f50bdf4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76712)[0m     @     0x7f50bc24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76631)[0m     @     0x7f8cd5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76631)[0m     @     0x7f8cd5e7d148 at::Tensor::copy_()
[2m[36m(pid=76631)[0m     @     0x7f8cd7a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76706)[0m     @     0x7f8f8a510ed4 at::native::copy_()
[2m[36m(pid=76706)[0m     @     0x7f8f8ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76706)[0m     @     0x7f8f8ad5b148 at::Tensor::copy_()
[2m[36m(pid=76706)[0m     @     0x7f8f8c952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76635)[0m     @     0x7ed46567ced4 at::native::copy_()
[2m[36m(pid=76635)[0m     @     0x7ed465dbf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76635)[0m     @     0x7ed465ec7148 at::Tensor::copy_()
[2m[36m(pid=76635)[0m     @     0x7ed467abe989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76724)[0m     @     0x55816031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76724)[0m     @     0x55816031e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76724)[0m     @     0x558160293689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76724)[0m     @     0x55816031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76724)[0m     @     0x55816031e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76724)[0m     @     0x558160293689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76724)[0m     @     0x55816031dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76623)[0m     @     0x7f6d98fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76623)[0m     @     0x7f6d990d6148 at::Tensor::copy_()
[2m[36m(pid=76623)[0m     @     0x7f6d9accd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76623)[0m     @     0x7f6d98fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76641)[0m     @     0x7f795644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76641)[0m     @     0x7f7956553148 at::Tensor::copy_()
[2m[36m(pid=76641)[0m     @     0x7f795814a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76641)[0m     @     0x7f795644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76689)[0m     @     0x7fc2dc8e35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76689)[0m     @     0x7fc2dc9eb148 at::Tensor::copy_()
[2m[36m(pid=76689)[0m     @     0x7fc2de5e2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76695)[0m     @     0x7eea03b0bc3f at::native::copy_impl()
[2m[36m(pid=76695)[0m     @     0x7eea03b0ced4 at::native::copy_()
[2m[36m(pid=76695)[0m     @     0x7eea0424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76695)[0m     @     0x7eea04357148 at::Tensor::copy_()
[2m[36m(pid=76732)[0m     @     0x7f53bdb12e11 at::TensorIterator::for_each()
[2m[36m(pid=76732)[0m     @     0x7f53c082bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76732)[0m     @     0x7f53c084ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76732)[0m     @     0x7f53bd88c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76732)[0m     @     0x7f53bd88ac3f at::native::copy_impl()
[2m[36m(pid=76745)[0m     @     0x7f8bf2339ed4 at::native::copy_()
[2m[36m(pid=76745)[0m     @     0x7f8bf2a7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76745)[0m     @     0x7f8bf2b84148 at::Tensor::copy_()
[2m[36m(pid=76626)[0m     @     0x7fa932a38ed4 at::native::copy_()
[2m[36m(pid=76626)[0m     @     0x7fa93317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76626)[0m     @     0x7fa933283148 at::Tensor::copy_()
[2m[36m(pid=76626)[0m     @     0x7fa934e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76739)[0m     @     0x7f0f75d08ed4 at::native::copy_()
[2m[36m(pid=76739)[0m     @     0x7f0f7644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76739)[0m     @     0x7f0f76553148 at::Tensor::copy_()
[2m[36m(pid=76634)[0m     @     0x7f5016ddced4 at::native::copy_()
[2m[36m(pid=76634)[0m     @     0x7f501751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76634)[0m     @     0x7f5017627148 at::Tensor::copy_()
[2m[36m(pid=76738)[0m     @     0x7ee46e39eed4 at::native::copy_()
[2m[36m(pid=76738)[0m     @     0x7ee46eae15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76738)[0m     @     0x7ee46ebe9148 at::Tensor::copy_()
[2m[36m(pid=76696)[0m     @     0x7f301c4125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76696)[0m     @     0x7f301c51a148 at::Tensor::copy_()
[2m[36m(pid=76696)[0m     @     0x7f301e111989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76664)[0m     @     0x7f1e95c59b53 at::TensorIterator::for_each()
[2m[36m(pid=76664)[0m     @     0x7f1e95c59e11 at::TensorIterator::for_each()
[2m[36m(pid=76664)[0m     @     0x7f1e98972c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76664)[0m     @     0x7f1e98995cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76639)[0m     @     0x7ef415814c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76639)[0m     @     0x7ef415837cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76639)[0m     @     0x7ef412875009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76639)[0m     @     0x7ef412873c3f at::native::copy_impl()
[2m[36m(pid=76639)[0m     @     0x7ef412874ed4 at::native::copy_()
[2m[36m(pid=76735)[0m     @     0x7fb521aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76735)[0m     @     0x7fb521aa1c3f at::native::copy_impl()
[2m[36m(pid=76735)[0m     @     0x7fb521aa2ed4 at::native::copy_()
[2m[36m(pid=76735)[0m     @     0x7fb5221e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76704)[0m     @     0x7f2c5c84ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76704)[0m     @     0x7f2c5988c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76704)[0m     @     0x7f2c5988ac3f at::native::copy_impl()
[2m[36m(pid=76704)[0m     @     0x7f2c5988bed4 at::native::copy_()
[2m[36m(pid=76704)[0m     @     0x7f2c59fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76656)[0m     @     0x7fa9f7379b53 at::TensorIterator::for_each()
[2m[36m(pid=76656)[0m     @     0x7fa9f7379e11 at::TensorIterator::for_each()
[2m[36m(pid=76656)[0m     @     0x7fa9fa092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76692)[0m     @     0x7f811b99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76692)[0m     @     0x7f81189dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76692)[0m     @     0x7f81189dac3f at::native::copy_impl()
[2m[36m(pid=76692)[0m     @     0x7f81189dbed4 at::native::copy_()
[2m[36m(pid=76644)[0m     @     0x7ef8baddced4 at::native::copy_()
[2m[36m(pid=76644)[0m     @     0x7ef8bb51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76644)[0m     @     0x7ef8bb627148 at::Tensor::copy_()
[2m[36m(pid=76638)[0m     @     0x7efbb5ab75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76638)[0m     @     0x7efbb5bbf148 at::Tensor::copy_()
[2m[36m(pid=76638)[0m     @     0x7efbb77b6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76748)[0m     @     0x7f14dcadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76645)[0m     @     0x7f0671c6c148 at::Tensor::copy_()
[2m[36m(pid=76640)[0m     @     0x7f068c2a6148 at::Tensor::copy_()
[2m[36m(pid=76640)[0m     @     0x7f068de9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76677)[0m     @     0x7f734532b148 at::Tensor::copy_()
[2m[36m(pid=76677)[0m     @     0x7f7346f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76679)[0m     @     0x7f9c1ce6c148 at::Tensor::copy_()
[2m[36m(pid=76679)[0m     @     0x7f9c1ea63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76679)[0m     @     0x7f9c1cd645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76660)[0m     @     0x7f63539e8148 at::Tensor::copy_()
[2m[36m(pid=76660)[0m     @     0x7f63555df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76729)[0m     @     0x7f634c18c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76729)[0m     @     0x7f634c18ac3f at::native::copy_impl()
[2m[36m(pid=76729)[0m     @     0x7f634c18bed4 at::native::copy_()
[2m[36m(pid=76661)[0m     @     0x7f6f1682e148 at::Tensor::copy_()
[2m[36m(pid=76661)[0m     @     0x7f6f18425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76700)[0m     @     0x7efe57b21148 at::Tensor::copy_()
[2m[36m(pid=76700)[0m     @     0x7efe59718989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76632)[0m     @     0x7f62925d75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76632)[0m     @     0x7f62926df148 at::Tensor::copy_()
[2m[36m(pid=76632)[0m     @     0x7f62942d6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76709)[0m     @     0x7f49fd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76709)[0m     @     0x7f49fd32b148 at::Tensor::copy_()
[2m[36m(pid=76709)[0m     @     0x7f49fef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76643)[0m     @     0x7f58848ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76643)[0m     @     0x7f58849d6148 at::Tensor::copy_()
[2m[36m(pid=76708)[0m     @     0x7f956401dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76708)[0m     @     0x7f956105b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76708)[0m     @     0x7f9561059c3f at::native::copy_impl()
[2m[36m(pid=76708)[0m     @     0x7f956105aed4 at::native::copy_()
[2m[36m(pid=76741)[0m     @     0x7f5580adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76741)[0m     @     0x7f5580be7148 at::Tensor::copy_()
[2m[36m(pid=76741)[0m     @     0x7f55827de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76741)[0m     @     0x7f5580adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76675)[0m     @     0x7fb9d9fa65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76675)[0m     @     0x7fb9da0ae148 at::Tensor::copy_()
[2m[36m(pid=76675)[0m     @     0x7fb9dbca5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76684)[0m     @     0x7ecf7553c148 at::Tensor::copy_()
[2m[36m(pid=76684)[0m     @     0x7ecf77133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76684)[0m     @     0x7ecf754345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76630)[0m     @     0x7f57bdaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76630)[0m     @     0x7f57bdbff148 at::Tensor::copy_()
[2m[36m(pid=76630)[0m     @     0x7f57bf7f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76743)[0m     @     0x7f786ad5b148 at::Tensor::copy_()
[2m[36m(pid=76743)[0m     @     0x7f786c952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76743)[0m     @     0x7f786ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76681)[0m     @     0x7f5d11f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76681)[0m     @     0x7f5d1202b148 at::Tensor::copy_()
[2m[36m(pid=76681)[0m     @     0x7f5d13c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76629)[0m     @     0x7f404fe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76629)[0m     @     0x7f404ff15148 at::Tensor::copy_()
[2m[36m(pid=76629)[0m     @     0x7f4051b0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76624)[0m     @     0x7f8fa58a5148 at::Tensor::copy_()
[2m[36m(pid=76624)[0m     @     0x7f8fa749c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76624)[0m     @     0x7f8fa579d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76628)[0m     @     0x7fad5ae04989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76628)[0m     @     0x7fad591055cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76628)[0m     @     0x7fad5920d148 at::Tensor::copy_()
[2m[36m(pid=76628)[0m     @     0x7fad704d5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76628)[0m     @     0x56124eb76fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76628)[0m     @     0x56124ead1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76628)[0m     @     0x56124eb5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76628)[0m     @     0x56124eb5da20 method_vectorcall
[2m[36m(pid=76628)[0m     @     0x56124ead1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76628)[0m     @     0x56124eb5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76628)[0m     @     0x56124eb5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76628)[0m     @     0x56124ead2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76628)[0m     @     0x56124eb5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76628)[0m     @     0x56124eb5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76628)[0m     @     0x56124ead2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76628)[0m     @     0x56124eb5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76628)[0m     @     0x56124eb5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76628)[0m     @     0x56124ead2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76633)[0m     @     0x7ee9a20d6148 at::Tensor::copy_()
[2m[36m(pid=76633)[0m     @     0x7ee9a3ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76633)[0m     @     0x7ee9a1fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76736)[0m     @     0x7faca05e3e11 at::TensorIterator::for_each()
[2m[36m(pid=76736)[0m     @     0x7faca32fcc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76736)[0m     @     0x7faca331fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76654)[0m     @     0x7fb262401e11 at::TensorIterator::for_each()
[2m[36m(pid=76654)[0m     @     0x7fb26511ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=76654)[0m     @     0x7fb26513dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76728)[0m     @     0x7fb86e4fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76728)[0m     @     0x7fb86e603148 at::Tensor::copy_()
[2m[36m(pid=76728)[0m     @     0x7fb8701fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76680)[0m     @     0x7f9ced9b75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76744)[0m     @     0x7f3d8ba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76744)[0m     @     0x7f3d8bb4e148 at::Tensor::copy_()
[2m[36m(pid=76744)[0m     @     0x7f3d91e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76744)[0m     @     0x55f4101cefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76744)[0m     @     0x55f410129b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76744)[0m     @     0x55f4101b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76744)[0m     @     0x55f4101b5a20 method_vectorcall
[2m[36m(pid=76744)[0m     @     0x55f410129bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76637)[0m     @     0x7f529b47b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76637)[0m     @     0x7f529977c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76627)[0m     @     0x7f99f1ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76627)[0m     @     0x7f99f1deb148 at::Tensor::copy_()
[2m[36m(pid=76647)[0m     @     0x7f97422935cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76647)[0m     @     0x7f974239b148 at::Tensor::copy_()
[2m[36m(pid=76647)[0m     @     0x7f9748651bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76647)[0m     @     0x555d1d520fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76647)[0m     @     0x555d1d47bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76647)[0m     @     0x555d1d506baf _PyEval_EvalCodeWithName
[2m[36m(pid=76647)[0m     @     0x555d1d507a20 method_vectorcall
[2m[36m(pid=76647)[0m     @     0x555d1d47bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76647)[0m     @     0x555d1d506baf _PyEval_EvalCodeWithName
[2m[36m(pid=76647)[0m     @     0x555d1d507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76647)[0m     @     0x555d1d47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76647)[0m     @     0x555d1d506baf _PyEval_EvalCodeWithName
[2m[36m(pid=76647)[0m     @     0x555d1d507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76647)[0m     @     0x555d1d47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76647)[0m     @     0x555d1d506baf _PyEval_EvalCodeWithName
[2m[36m(pid=76647)[0m     @     0x555d1d507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76647)[0m     @     0x555d1d47c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76647)[0m     @     0x555d1d506baf _PyEval_EvalCodeWithName
[2m[36m(pid=76646)[0m     @     0x7ee1dd77c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76646)[0m     @     0x7ee1dd884148 at::Tensor::copy_()
[2m[36m(pid=76646)[0m     @     0x7ee1e3b3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76646)[0m     @     0x560a4a4a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76646)[0m     @     0x560a4a402b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76646)[0m     @     0x560a4a48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76646)[0m     @     0x560a4a48ea20 method_vectorcall
[2m[36m(pid=76646)[0m     @     0x560a4a402bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76646)[0m     @     0x560a4a48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76646)[0m     @     0x560a4a48e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76646)[0m     @     0x560a4a403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76651)[0m     @     0x7f21a5a07989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76651)[0m     @     0x7f21a3d085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76625)[0m     @     0x7ee4e91055cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76625)[0m     @     0x7ee4e920d148 at::Tensor::copy_()
[2m[36m(pid=76759)[0m     @     0x7f95b153c148 at::Tensor::copy_()
[2m[36m(pid=76759)[0m     @     0x7f95b77f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76759)[0m     @     0x56420c960fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76759)[0m     @     0x56420c8bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76759)[0m     @     0x56420c946baf _PyEval_EvalCodeWithName
[2m[36m(pid=76759)[0m     @     0x56420c947a20 method_vectorcall
[2m[36m(pid=76759)[0m     @     0x56420c8bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76759)[0m     @     0x56420c946baf _PyEval_EvalCodeWithName
[2m[36m(pid=76759)[0m     @     0x56420c947643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76759)[0m     @     0x56420c8bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76759)[0m     @     0x56420c946baf _PyEval_EvalCodeWithName
[2m[36m(pid=76759)[0m     @     0x56420c947643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76759)[0m     @     0x56420c8bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76759)[0m     @     0x56420c946baf _PyEval_EvalCodeWithName
[2m[36m(pid=76759)[0m     @     0x56420c947643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76759)[0m     @     0x56420c8bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76759)[0m     @     0x56420c946baf _PyEval_EvalCodeWithName
[2m[36m(pid=76716)[0m     @     0x7f4b31a5f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76716)[0m     @     0x7f4b2fd605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76687)[0m     @     0x7f96228bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76687)[0m     @     0x7f96229c5148 at::Tensor::copy_()
[2m[36m(pid=76687)[0m     @     0x7f9628c7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76687)[0m     @     0x5593b18d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76687)[0m     @     0x5593b1831b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76687)[0m     @     0x5593b18bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76687)[0m     @     0x5593b18bda20 method_vectorcall
[2m[36m(pid=76687)[0m     @     0x5593b1831bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76687)[0m     @     0x5593b18bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76687)[0m     @     0x5593b18bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76687)[0m     @     0x5593b1832689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76687)[0m     @     0x5593b18bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76687)[0m     @     0x5593b18bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76650)[0m     @     0x7ee1352235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76650)[0m     @     0x7ee13532b148 at::Tensor::copy_()
[2m[36m(pid=76712)[0m     @     0x7f50bc357148 at::Tensor::copy_()
[2m[36m(pid=76712)[0m     @     0x7f50c260dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76712)[0m     @     0x55f64931efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76712)[0m     @     0x55f649279b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76712)[0m     @     0x55f649304baf _PyEval_EvalCodeWithName
[2m[36m(pid=76712)[0m     @     0x55f649305a20 method_vectorcall
[2m[36m(pid=76712)[0m     @     0x55f649279bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76712)[0m     @     0x55f649304baf _PyEval_EvalCodeWithName
[2m[36m(pid=76712)[0m     @     0x55f649305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76712)[0m     @     0x55f64927a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76712)[0m     @     0x55f649304baf _PyEval_EvalCodeWithName
[2m[36m(pid=76712)[0m     @     0x55f649305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76712)[0m     @     0x55f64927a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76712)[0m     @     0x55f649304baf _PyEval_EvalCodeWithName
[2m[36m(pid=76712)[0m     @     0x55f649305643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76712)[0m     @     0x55f64927a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76712)[0m     @     0x55f649304baf _PyEval_EvalCodeWithName
[2m[36m(pid=76631)[0m     @     0x7f8cd5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76706)[0m     @     0x7f8f8ac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76706)[0m     @     0x7f8f8ad5b148 at::Tensor::copy_()
[2m[36m(pid=76635)[0m     @     0x7ed465dbf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76635)[0m     @     0x7ed465ec7148 at::Tensor::copy_()
[2m[36m(pid=76635)[0m     @     0x7ed46c17dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76635)[0m     @     0x557809285fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76635)[0m     @     0x5578091e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76635)[0m     @     0x55780926bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76635)[0m     @     0x55780926ca20 method_vectorcall
[2m[36m(pid=76635)[0m     @     0x5578091e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76635)[0m     @     0x55780926bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76623)[0m     @     0x7f6d990d6148 at::Tensor::copy_()
[2m[36m(pid=76623)[0m     @     0x7f6d9f38cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76623)[0m     @     0x56082a0d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76623)[0m     @     0x56082a02fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76623)[0m     @     0x56082a0babaf _PyEval_EvalCodeWithName
[2m[36m(pid=76623)[0m     @     0x56082a0bba20 method_vectorcall
[2m[36m(pid=76623)[0m     @     0x56082a02fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76623)[0m     @     0x56082a0babaf _PyEval_EvalCodeWithName
[2m[36m(pid=76623)[0m     @     0x56082a0bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76623)[0m     @     0x56082a030689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76623)[0m     @     0x56082a0babaf _PyEval_EvalCodeWithName
[2m[36m(pid=76623)[0m     @     0x56082a0bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76623)[0m     @     0x56082a030689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76623)[0m     @     0x56082a0babaf _PyEval_EvalCodeWithName
[2m[36m(pid=76623)[0m     @     0x56082a0bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76623)[0m     @     0x56082a030689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76623)[0m     @     0x56082a0babaf _PyEval_EvalCodeWithName
[2m[36m(pid=76641)[0m     @     0x7f7956553148 at::Tensor::copy_()
[2m[36m(pid=76641)[0m     @     0x7f795c809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76641)[0m     @     0x5562d0e7efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76641)[0m     @     0x5562d0dd9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76641)[0m     @     0x5562d0e64baf _PyEval_EvalCodeWithName
[2m[36m(pid=76641)[0m     @     0x5562d0e65a20 method_vectorcall
[2m[36m(pid=76641)[0m     @     0x5562d0dd9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76641)[0m     @     0x5562d0e64baf _PyEval_EvalCodeWithName
[2m[36m(pid=76641)[0m     @     0x5562d0e65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76641)[0m     @     0x5562d0dda689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76641)[0m     @     0x5562d0e64baf _PyEval_EvalCodeWithName
[2m[36m(pid=76641)[0m     @     0x5562d0e65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76641)[0m     @     0x5562d0dda689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76641)[0m     @     0x5562d0e64baf _PyEval_EvalCodeWithName
[2m[36m(pid=76641)[0m     @     0x5562d0e65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76641)[0m     @     0x5562d0dda689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76641)[0m     @     0x5562d0e64baf _PyEval_EvalCodeWithName
[2m[36m(pid=76689)[0m     @     0x7fc2dc8e35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76689)[0m     @     0x7fc2dc9eb148 at::Tensor::copy_()
[2m[36m(pid=76689)[0m     @     0x7fc2e2ca1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76689)[0m     @     0x55c8cdc88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76689)[0m     @     0x55c8cdbe3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76689)[0m     @     0x55c8cdc6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76689)[0m     @     0x55c8cdc6fa20 method_vectorcall
[2m[36m(pid=76689)[0m     @     0x55c8cdbe3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76689)[0m     @     0x55c8cdc6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76689)[0m     @     0x55c8cdc6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76689)[0m     @     0x55c8cdbe4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76689)[0m     @     0x55c8cdc6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76689)[0m     @     0x55c8cdc6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76689)[0m     @     0x55c8cdbe4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76689)[0m     @     0x55c8cdc6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76689)[0m     @     0x55c8cdc6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76689)[0m     @     0x55c8cdbe4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76689)[0m     @     0x55c8cdc6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76695)[0m     @     0x7eea05f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76695)[0m     @     0x7eea0424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76695)[0m     @     0x7eea04357148 at::Tensor::copy_()
[2m[36m(pid=76695)[0m     @     0x7eea0a60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76695)[0m     @     0x55ef03eb1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76695)[0m     @     0x55ef03e0cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76695)[0m     @     0x55ef03e97baf _PyEval_EvalCodeWithName
[2m[36m(pid=76695)[0m     @     0x55ef03e98a20 method_vectorcall
[2m[36m(pid=76695)[0m     @     0x55ef03e0cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76695)[0m     @     0x55ef03e97baf _PyEval_EvalCodeWithName
[2m[36m(pid=76695)[0m     @     0x55ef03e98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76732)[0m     @     0x7f53bd88bed4 at::native::copy_()
[2m[36m(pid=76732)[0m     @     0x7f53bdfce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76732)[0m     @     0x7f53be0d6148 at::Tensor::copy_()
[2m[36m(pid=76732)[0m     @     0x7f53bfccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76745)[0m     @     0x7f8bf477b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76745)[0m     @     0x7f8bf2a7c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76745)[0m     @     0x7f8bf2b84148 at::Tensor::copy_()
[2m[36m(pid=76745)[0m     @     0x7f8bf8e3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76745)[0m     @     0x55e77cc7bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76745)[0m     @     0x55e77cbd6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76745)[0m     @     0x55e77cc61baf _PyEval_EvalCodeWithName
[2m[36m(pid=76745)[0m     @     0x55e77cc62a20 method_vectorcall
[2m[36m(pid=76745)[0m     @     0x55e77cbd6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76745)[0m     @     0x55e77cc61baf _PyEval_EvalCodeWithName
[2m[36m(pid=76745)[0m     @     0x55e77cc62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76745)[0m     @     0x55e77cbd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76745)[0m     @     0x55e77cc61baf _PyEval_EvalCodeWithName
[2m[36m(pid=76745)[0m     @     0x55e77cc62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76745)[0m     @     0x55e77cbd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76745)[0m     @     0x55e77cc61baf _PyEval_EvalCodeWithName
[2m[36m(pid=76745)[0m     @     0x55e77cc62643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76745)[0m     @     0x55e77cbd7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76745)[0m     @     0x55e77cc61baf _PyEval_EvalCodeWithName
[2m[36m(pid=76626)[0m     @     0x7fa93317b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76626)[0m     @     0x7fa933283148 at::Tensor::copy_()
[2m[36m(pid=76626)[0m     @     0x7fa939539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76626)[0m     @     0x560662d1afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76626)[0m     @     0x560662c75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76626)[0m     @     0x560662d00baf _PyEval_EvalCodeWithName
[2m[36m(pid=76626)[0m     @     0x560662d01a20 method_vectorcall
[2m[36m(pid=76626)[0m     @     0x560662c75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76626)[0m     @     0x560662d00baf _PyEval_EvalCodeWithName
[2m[36m(pid=76626)[0m     @     0x560662d01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76626)[0m     @     0x560662c76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76626)[0m     @     0x560662d00baf _PyEval_EvalCodeWithName
[2m[36m(pid=76626)[0m     @     0x560662d01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76626)[0m     @     0x560662c76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76626)[0m     @     0x560662d00baf _PyEval_EvalCodeWithName
[2m[36m(pid=76626)[0m     @     0x560662d01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76626)[0m     @     0x560662c76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76626)[0m     @     0x560662d00baf _PyEval_EvalCodeWithName
[2m[36m(pid=76739)[0m     @     0x7f0f7814a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76739)[0m     @     0x7f0f7644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76739)[0m     @     0x7f0f76553148 at::Tensor::copy_()
[2m[36m(pid=76739)[0m     @     0x7f0f7c809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76739)[0m     @     0x55930ff0ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76739)[0m     @     0x55930fe6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76739)[0m     @     0x55930fef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=76739)[0m     @     0x55930fef6a20 method_vectorcall
[2m[36m(pid=76739)[0m     @     0x55930fe6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76739)[0m     @     0x55930fef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=76739)[0m     @     0x55930fef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76739)[0m     @     0x55930fe6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76739)[0m     @     0x55930fef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=76739)[0m     @     0x55930fef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76739)[0m     @     0x55930fe6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76739)[0m     @     0x55930fef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=76739)[0m     @     0x55930fef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76739)[0m     @     0x55930fe6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76739)[0m     @     0x55930fef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=76634)[0m     @     0x7f501921e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76634)[0m     @     0x7f501751f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76634)[0m     @     0x7f5017627148 at::Tensor::copy_()
[2m[36m(pid=76634)[0m     @     0x7f501d8ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76634)[0m     @     0x55d1cd66dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76634)[0m     @     0x55d1cd5c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76634)[0m     @     0x55d1cd653baf _PyEval_EvalCodeWithName
[2m[36m(pid=76634)[0m     @     0x55d1cd654a20 method_vectorcall
[2m[36m(pid=76634)[0m     @     0x55d1cd5c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76634)[0m     @     0x55d1cd653baf _PyEval_EvalCodeWithName
[2m[36m(pid=76634)[0m     @     0x55d1cd654643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76634)[0m     @     0x55d1cd5c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76634)[0m     @     0x55d1cd653baf _PyEval_EvalCodeWithName
[2m[36m(pid=76634)[0m     @     0x55d1cd654643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76634)[0m     @     0x55d1cd5c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76634)[0m     @     0x55d1cd653baf _PyEval_EvalCodeWithName
[2m[36m(pid=76634)[0m     @     0x55d1cd654643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76634)[0m     @     0x55d1cd5c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76634)[0m     @     0x55d1cd653baf _PyEval_EvalCodeWithName
[2m[36m(pid=76738)[0m     @     0x7ee4707e0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76738)[0m     @     0x7ee46eae15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76738)[0m     @     0x7ee46ebe9148 at::Tensor::copy_()
[2m[36m(pid=76738)[0m     @     0x7ee474e9fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76738)[0m     @     0x5569726d2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76738)[0m     @     0x55697262db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76738)[0m     @     0x5569726b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76738)[0m     @     0x5569726b9a20 method_vectorcall
[2m[36m(pid=76738)[0m     @     0x55697262dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76738)[0m     @     0x5569726b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76738)[0m     @     0x5569726b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76738)[0m     @     0x55697262e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76738)[0m     @     0x5569726b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76738)[0m     @     0x5569726b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76738)[0m     @     0x55697262e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76738)[0m     @     0x5569726b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76738)[0m     @     0x5569726b9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76738)[0m     @     0x55697262e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76738)[0m     @     0x5569726b8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76696)[0m     @     0x7f301c4125cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76696)[0m     @     0x7f301c51a148 at::Tensor::copy_()
[2m[36m(pid=76696)[0m     @     0x7f30227d0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76696)[0m     @     0x56415aee2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76696)[0m     @     0x56415ae3db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76696)[0m     @     0x56415aec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76696)[0m     @     0x56415aec9a20 method_vectorcall
[2m[36m(pid=76696)[0m     @     0x56415ae3dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76696)[0m     @     0x56415aec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76696)[0m     @     0x56415aec9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76696)[0m     @     0x56415ae3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76696)[0m     @     0x56415aec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76696)[0m     @     0x56415aec9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76696)[0m     @     0x56415ae3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76696)[0m     @     0x56415aec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76696)[0m     @     0x56415aec9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76696)[0m     @     0x56415ae3e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76696)[0m     @     0x56415aec8baf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x7f1e959d3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76664)[0m     @     0x7f1e959d1c3f at::native::copy_impl()
[2m[36m(pid=76664)[0m     @     0x7f1e959d2ed4 at::native::copy_()
[2m[36m(pid=76664)[0m     @     0x7f1e961155cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76639)[0m     @     0x7ef412fb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76639)[0m     @     0x7ef4130bf148 at::Tensor::copy_()
[2m[36m(pid=76639)[0m     @     0x7ef414cb6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76735)[0m     @     0x7fb5222ed148 at::Tensor::copy_()
[2m[36m(pid=76735)[0m     @     0x7fb523ee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76735)[0m     @     0x7fb5221e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76704)[0m     @     0x7f2c5a0d6148 at::Tensor::copy_()
[2m[36m(pid=76704)[0m     @     0x7f2c5bccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76704)[0m     @     0x7f2c59fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76704)[0m     @     0x7f2c5a0d6148 at::Tensor::copy_()
[2m[36m(pid=76704)[0m     @     0x7f2c6038cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76704)[0m     @     0x55761e76efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76704)[0m     @     0x55761e6c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76704)[0m     @     0x55761e754baf _PyEval_EvalCodeWithName
[2m[36m(pid=76704)[0m     @     0x55761e755a20 method_vectorcall
[2m[36m(pid=76704)[0m     @     0x55761e6c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76704)[0m     @     0x55761e754baf _PyEval_EvalCodeWithName
[2m[36m(pid=76704)[0m     @     0x55761e755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76704)[0m     @     0x55761e6ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76704)[0m     @     0x55761e754baf _PyEval_EvalCodeWithName
[2m[36m(pid=76704)[0m     @     0x55761e755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76704)[0m     @     0x55761e6ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76704)[0m     @     0x55761e754baf _PyEval_EvalCodeWithName
[2m[36m(pid=76704)[0m     @     0x55761e755643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76704)[0m     @     0x55761e6ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76704)[0m     @     0x55761e754baf _PyEval_EvalCodeWithName
[2m[36m(pid=76656)[0m     @     0x7fa9fa0b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=76656)[0m     @     0x7fa9f70f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76656)[0m     @     0x7fa9f70f1c3f at::native::copy_impl()
[2m[36m(pid=76656)[0m     @     0x7fa9f70f2ed4 at::native::copy_()
[2m[36m(pid=76692)[0m     @     0x7f811911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76692)[0m     @     0x7f8119226148 at::Tensor::copy_()
[2m[36m(pid=76692)[0m     @     0x7f811ae1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76692)[0m     @     0x7f811911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76644)[0m     @     0x7ef8bd21e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76644)[0m     @     0x7ef8bb51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76644)[0m     @     0x7ef8bb627148 at::Tensor::copy_()
[2m[36m(pid=76644)[0m     @     0x7ef8c18ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76644)[0m     @     0x55c69a5befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76644)[0m     @     0x55c69a519b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76644)[0m     @     0x55c69a5a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76644)[0m     @     0x55c69a5a5a20 method_vectorcall
[2m[36m(pid=76644)[0m     @     0x55c69a519bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76644)[0m     @     0x55c69a5a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76644)[0m     @     0x55c69a5a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76644)[0m     @     0x55c69a51a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76644)[0m     @     0x55c69a5a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76644)[0m     @     0x55c69a5a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76644)[0m     @     0x55c69a51a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76644)[0m     @     0x55c69a5a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76644)[0m     @     0x55c69a5a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76644)[0m     @     0x55c69a51a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76644)[0m     @     0x55c69a5a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76638)[0m     @     0x7efbb5ab75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76638)[0m     @     0x7efbb5bbf148 at::Tensor::copy_()
[2m[36m(pid=76638)[0m     @     0x7efbbbe75bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76638)[0m     @     0x55d3dad4bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76638)[0m     @     0x55d3daca6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76638)[0m     @     0x55d3dad31baf _PyEval_EvalCodeWithName
[2m[36m(pid=76638)[0m     @     0x55d3dad32a20 method_vectorcall
[2m[36m(pid=76638)[0m     @     0x55d3daca6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76638)[0m     @     0x55d3dad31baf _PyEval_EvalCodeWithName
[2m[36m(pid=76638)[0m     @     0x55d3dad32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76638)[0m     @     0x55d3daca7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76638)[0m     @     0x55d3dad31baf _PyEval_EvalCodeWithName
[2m[36m(pid=76638)[0m     @     0x55d3dad32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76638)[0m     @     0x55d3daca7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76638)[0m     @     0x55d3dad31baf _PyEval_EvalCodeWithName
[2m[36m(pid=76638)[0m     @     0x55d3dad32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76638)[0m     @     0x55d3daca7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76638)[0m     @     0x55d3dad31baf _PyEval_EvalCodeWithName
[2m[36m(pid=76748)[0m     @     0x7f14dcbe7148 at::Tensor::copy_()
[2m[36m(pid=76748)[0m     @     0x7f14e2e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76748)[0m     @     0x562369240fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76748)[0m     @     0x56236919bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76748)[0m     @     0x562369226baf _PyEval_EvalCodeWithName
[2m[36m(pid=76748)[0m     @     0x562369227a20 method_vectorcall
[2m[36m(pid=76748)[0m     @     0x56236919bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76748)[0m     @     0x562369226baf _PyEval_EvalCodeWithName
[2m[36m(pid=76748)[0m     @     0x562369227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76748)[0m     @     0x56236919c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76748)[0m     @     0x562369226baf _PyEval_EvalCodeWithName
[2m[36m(pid=76748)[0m     @     0x562369227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76748)[0m     @     0x56236919c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76748)[0m     @     0x562369226baf _PyEval_EvalCodeWithName
[2m[36m(pid=76748)[0m     @     0x562369227643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76748)[0m     @     0x56236919c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76748)[0m     @     0x562369226baf _PyEval_EvalCodeWithName
[2m[36m(pid=76645)[0m     @     0x7f0673863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76645)[0m     @     0x7f0671b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76645)[0m     @     0x7f0671c6c148 at::Tensor::copy_()
[2m[36m(pid=76645)[0m     @     0x7f0677f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76645)[0m     @     0x55645da47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76645)[0m     @     0x55645d9a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76645)[0m     @     0x55645da2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76645)[0m     @     0x55645da2ea20 method_vectorcall
[2m[36m(pid=76645)[0m     @     0x55645d9a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76645)[0m     @     0x55645da2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76645)[0m     @     0x55645da2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76645)[0m     @     0x55645d9a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76645)[0m     @     0x55645da2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76645)[0m     @     0x55645da2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76645)[0m     @     0x55645d9a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76645)[0m     @     0x55645da2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76640)[0m     @     0x7f068c19e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76640)[0m     @     0x7f068c2a6148 at::Tensor::copy_()
[2m[36m(pid=76640)[0m     @     0x7f069255cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76640)[0m     @     0x56205c4ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76640)[0m     @     0x56205c446b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76640)[0m     @     0x56205c4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=76640)[0m     @     0x56205c4d2a20 method_vectorcall
[2m[36m(pid=76640)[0m     @     0x56205c446bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76640)[0m     @     0x56205c4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=76640)[0m     @     0x56205c4d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76640)[0m     @     0x56205c447689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76640)[0m     @     0x56205c4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=76640)[0m     @     0x56205c4d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76640)[0m     @     0x56205c447689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76640)[0m     @     0x56205c4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=76640)[0m     @     0x56205c4d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76640)[0m     @     0x56205c447689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76640)[0m     @     0x56205c4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=76677)[0m     @     0x7f73452235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76677)[0m     @     0x7f734532b148 at::Tensor::copy_()
[2m[36m(pid=76677)[0m     @     0x7f734b5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76677)[0m     @     0x5648ca969fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76677)[0m     @     0x5648ca8c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76677)[0m     @     0x5648ca94fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76677)[0m     @     0x5648ca950a20 method_vectorcall
[2m[36m(pid=76677)[0m     @     0x5648ca8c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76677)[0m     @     0x5648ca94fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76677)[0m     @     0x5648ca950643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76677)[0m     @     0x5648ca8c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76677)[0m     @     0x5648ca94fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76677)[0m     @     0x5648ca950643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76677)[0m     @     0x5648ca8c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76677)[0m     @     0x5648ca94fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76677)[0m     @     0x5648ca950643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76677)[0m     @     0x5648ca8c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76677)[0m     @     0x5648ca94fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76679)[0m     @     0x7f9c1ce6c148 at::Tensor::copy_()
[2m[36m(pid=76679)[0m     @     0x7f9c23122bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76679)[0m     @     0x5643c55c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76679)[0m     @     0x5643c551fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76679)[0m     @     0x5643c55aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=76679)[0m     @     0x5643c55aba20 method_vectorcall
[2m[36m(pid=76679)[0m     @     0x5643c551fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76679)[0m     @     0x5643c55aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=76679)[0m     @     0x5643c55ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76679)[0m     @     0x5643c5520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76679)[0m     @     0x5643c55aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=76679)[0m     @     0x5643c55ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76679)[0m     @     0x5643c5520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76679)[0m     @     0x5643c55aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=76679)[0m     @     0x5643c55ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76679)[0m     @     0x5643c5520689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76679)[0m     @     0x5643c55aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=76660)[0m     @     0x7f63538e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76660)[0m     @     0x7f63539e8148 at::Tensor::copy_()
[2m[36m(pid=76660)[0m     @     0x7f6359c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76660)[0m     @     0x557ec9d2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76660)[0m     @     0x557ec9c86b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76660)[0m     @     0x557ec9d11baf _PyEval_EvalCodeWithName
[2m[36m(pid=76660)[0m     @     0x557ec9d12a20 method_vectorcall
[2m[36m(pid=76660)[0m     @     0x557ec9c86bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76660)[0m     @     0x557ec9d11baf _PyEval_EvalCodeWithName
[2m[36m(pid=76660)[0m     @     0x557ec9d12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76660)[0m     @     0x557ec9c87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76660)[0m     @     0x557ec9d11baf _PyEval_EvalCodeWithName
[2m[36m(pid=76660)[0m     @     0x557ec9d12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76660)[0m     @     0x557ec9c87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76660)[0m     @     0x557ec9d11baf _PyEval_EvalCodeWithName
[2m[36m(pid=76660)[0m     @     0x557ec9d12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76660)[0m     @     0x557ec9c87689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76660)[0m     @     0x557ec9d11baf _PyEval_EvalCodeWithName
[2m[36m(pid=76729)[0m     @     0x7f634c8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76729)[0m     @     0x7f634c9d6148 at::Tensor::copy_()
[2m[36m(pid=76729)[0m     @     0x7f634e5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76729)[0m     @     0x7f634c8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76661)[0m     @     0x7f6f167265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76661)[0m     @     0x7f6f1682e148 at::Tensor::copy_()
[2m[36m(pid=76661)[0m     @     0x7f6f1cae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76661)[0m     @     0x55836b2f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76661)[0m     @     0x55836b24cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76661)[0m     @     0x55836b2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76661)[0m     @     0x55836b2d8a20 method_vectorcall
[2m[36m(pid=76661)[0m     @     0x55836b24cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76661)[0m     @     0x55836b2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76661)[0m     @     0x55836b2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76661)[0m     @     0x55836b24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76661)[0m     @     0x55836b2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76661)[0m     @     0x55836b2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76661)[0m     @     0x55836b24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76661)[0m     @     0x55836b2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76661)[0m     @     0x55836b2d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76661)[0m     @     0x55836b24d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76661)[0m     @     0x55836b2d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76700)[0m     @     0x7efe57a195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76700)[0m     @     0x7efe57b21148 at::Tensor::copy_()
[2m[36m(pid=76700)[0m     @     0x7efe5ddd7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76700)[0m     @     0x55a888a40fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76700)[0m     @     0x55a88899bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76700)[0m     @     0x55a888a26baf _PyEval_EvalCodeWithName
[2m[36m(pid=76700)[0m     @     0x55a888a27a20 method_vectorcall
[2m[36m(pid=76700)[0m     @     0x55a88899bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76700)[0m     @     0x55a888a26baf _PyEval_EvalCodeWithName
[2m[36m(pid=76700)[0m     @     0x55a888a27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76700)[0m     @     0x55a88899c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76700)[0m     @     0x55a888a26baf _PyEval_EvalCodeWithName
[2m[36m(pid=76700)[0m     @     0x55a888a27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76700)[0m     @     0x55a88899c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76700)[0m     @     0x55a888a26baf _PyEval_EvalCodeWithName
[2m[36m(pid=76700)[0m     @     0x55a888a27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76700)[0m     @     0x55a88899c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76700)[0m     @     0x55a888a26baf _PyEval_EvalCodeWithName
[2m[36m(pid=76632)[0m     @     0x7f62925d75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76632)[0m     @     0x7f62926df148 at::Tensor::copy_()
[2m[36m(pid=76632)[0m     @     0x7f6298995bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76632)[0m     @     0x55aee739ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76632)[0m     @     0x55aee72fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76632)[0m     @     0x55aee7385baf _PyEval_EvalCodeWithName
[2m[36m(pid=76632)[0m     @     0x55aee7386a20 method_vectorcall
[2m[36m(pid=76632)[0m     @     0x55aee72fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76632)[0m     @     0x55aee7385baf _PyEval_EvalCodeWithName
[2m[36m(pid=76632)[0m     @     0x55aee7386643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76632)[0m     @     0x55aee72fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76632)[0m     @     0x55aee7385baf _PyEval_EvalCodeWithName
[2m[36m(pid=76632)[0m     @     0x55aee7386643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76632)[0m     @     0x55aee72fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76632)[0m     @     0x55aee7385baf _PyEval_EvalCodeWithName
[2m[36m(pid=76632)[0m     @     0x55aee7386643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76632)[0m     @     0x55aee72fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76632)[0m     @     0x55aee7385baf _PyEval_EvalCodeWithName
[2m[36m(pid=76709)[0m     @     0x7f49fd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76709)[0m     @     0x7f49fd32b148 at::Tensor::copy_()
[2m[36m(pid=76709)[0m     @     0x7f4a035e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76709)[0m     @     0x561a52cb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76709)[0m     @     0x561a52c14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76709)[0m     @     0x561a52c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76709)[0m     @     0x561a52ca0a20 method_vectorcall
[2m[36m(pid=76709)[0m     @     0x561a52c14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76709)[0m     @     0x561a52c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76709)[0m     @     0x561a52ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76709)[0m     @     0x561a52c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76709)[0m     @     0x561a52c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76709)[0m     @     0x561a52ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76709)[0m     @     0x561a52c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76709)[0m     @     0x561a52c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76709)[0m     @     0x561a52ca0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76709)[0m     @     0x561a52c15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76709)[0m     @     0x561a52c9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76643)[0m     @     0x7f58865cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76643)[0m     @     0x7f58848ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76643)[0m     @     0x7f58849d6148 at::Tensor::copy_()
[2m[36m(pid=76643)[0m     @     0x7f588ac8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76643)[0m     @     0x561ac211cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76643)[0m     @     0x561ac2077b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76643)[0m     @     0x561ac2102baf _PyEval_EvalCodeWithName
[2m[36m(pid=76643)[0m     @     0x561ac2103a20 method_vectorcall
[2m[36m(pid=76643)[0m     @     0x561ac2077bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76643)[0m     @     0x561ac2102baf _PyEval_EvalCodeWithName
[2m[36m(pid=76643)[0m     @     0x561ac2103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76643)[0m     @     0x561ac2078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76643)[0m     @     0x561ac2102baf _PyEval_EvalCodeWithName
[2m[36m(pid=76643)[0m     @     0x561ac2103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76643)[0m     @     0x561ac2078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76643)[0m     @     0x561ac2102baf _PyEval_EvalCodeWithName
[2m[36m(pid=76643)[0m     @     0x561ac2103643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76643)[0m     @     0x561ac2078689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76643)[0m     @     0x561ac2102baf _PyEval_EvalCodeWithName
[2m[36m(pid=76708)[0m     @     0x7f956179d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76708)[0m     @     0x7f95618a5148 at::Tensor::copy_()
[2m[36m(pid=76708)[0m     @     0x7f956349c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76741)[0m     @     0x7f5580be7148 at::Tensor::copy_()
[2m[36m(pid=76741)[0m     @     0x7f5586e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76741)[0m     @     0x558121f5ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76741)[0m     @     0x558121ebab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76741)[0m     @     0x558121f45baf _PyEval_EvalCodeWithName
[2m[36m(pid=76741)[0m     @     0x558121f46a20 method_vectorcall
[2m[36m(pid=76741)[0m     @     0x558121ebabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76741)[0m     @     0x558121f45baf _PyEval_EvalCodeWithName
[2m[36m(pid=76741)[0m     @     0x558121f46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76741)[0m     @     0x558121ebb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76741)[0m     @     0x558121f45baf _PyEval_EvalCodeWithName
[2m[36m(pid=76741)[0m     @     0x558121f46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76741)[0m     @     0x558121ebb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76741)[0m     @     0x558121f45baf _PyEval_EvalCodeWithName
[2m[36m(pid=76741)[0m     @     0x558121f46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76741)[0m     @     0x558121ebb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76741)[0m     @     0x558121f45baf _PyEval_EvalCodeWithName
[2m[36m(pid=76675)[0m     @     0x7fb9d9fa65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76675)[0m     @     0x7fb9da0ae148 at::Tensor::copy_()
[2m[36m(pid=76675)[0m     @     0x7fb9e0364bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76675)[0m     @     0x55e397954fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76675)[0m     @     0x55e3978afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76675)[0m     @     0x55e39793abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76675)[0m     @     0x55e39793ba20 method_vectorcall
[2m[36m(pid=76675)[0m     @     0x55e3978afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76675)[0m     @     0x55e39793abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76675)[0m     @     0x55e39793b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76675)[0m     @     0x55e3978b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76675)[0m     @     0x55e39793abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76675)[0m     @     0x55e39793b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76675)[0m     @     0x55e3978b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76675)[0m     @     0x55e39793abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76675)[0m     @     0x55e39793b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76675)[0m     @     0x55e3978b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76675)[0m     @     0x55e39793abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76684)[0m     @     0x7ecf7553c148 at::Tensor::copy_()
[2m[36m(pid=76684)[0m     @     0x7ecf7b7f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76684)[0m     @     0x5589bf595fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76684)[0m     @     0x5589bf4f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76684)[0m     @     0x5589bf57bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76684)[0m     @     0x5589bf57ca20 method_vectorcall
[2m[36m(pid=76684)[0m     @     0x5589bf4f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76684)[0m     @     0x5589bf57bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76684)[0m     @     0x5589bf57c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76684)[0m     @     0x5589bf4f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76684)[0m     @     0x5589bf57bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76684)[0m     @     0x5589bf57c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76684)[0m     @     0x5589bf4f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76684)[0m     @     0x5589bf57bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76684)[0m     @     0x5589bf57c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76684)[0m     @     0x5589bf4f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76684)[0m     @     0x5589bf57bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76630)[0m     @     0x7f57bdaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76630)[0m     @     0x7f57bdbff148 at::Tensor::copy_()
[2m[36m(pid=76630)[0m     @     0x7f57c3eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76630)[0m     @     0x55c6c2f98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76630)[0m     @     0x55c6c2ef3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76630)[0m     @     0x55c6c2f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76630)[0m     @     0x55c6c2f7fa20 method_vectorcall
[2m[36m(pid=76630)[0m     @     0x55c6c2ef3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76630)[0m     @     0x55c6c2f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76630)[0m     @     0x55c6c2f7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76630)[0m     @     0x55c6c2ef4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76630)[0m     @     0x55c6c2f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76630)[0m     @     0x55c6c2f7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76630)[0m     @     0x55c6c2ef4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76630)[0m     @     0x55c6c2f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76630)[0m     @     0x55c6c2f7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76630)[0m     @     0x55c6c2ef4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76630)[0m     @     0x55c6c2f7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76743)[0m     @     0x7f786ad5b148 at::Tensor::copy_()
[2m[36m(pid=76743)[0m     @     0x7f7871011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76743)[0m     @     0x55a607544fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76743)[0m     @     0x55a60749fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76743)[0m     @     0x55a60752abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76743)[0m     @     0x55a60752ba20 method_vectorcall
[2m[36m(pid=76743)[0m     @     0x55a60749fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76743)[0m     @     0x55a60752abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76743)[0m     @     0x55a60752b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76743)[0m     @     0x55a6074a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76743)[0m     @     0x55a60752abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76743)[0m     @     0x55a60752b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76743)[0m     @     0x55a6074a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76743)[0m     @     0x55a60752abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76743)[0m     @     0x55a60752b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76743)[0m     @     0x55a6074a0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76743)[0m     @     0x55a60752abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76681)[0m     @     0x7f5d11f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76681)[0m     @     0x7f5d1202b148 at::Tensor::copy_()
[2m[36m(pid=76681)[0m     @     0x7f5d182e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76681)[0m     @     0x561f06578fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76681)[0m     @     0x561f064d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76681)[0m     @     0x561f0655ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76681)[0m     @     0x561f0655fa20 method_vectorcall
[2m[36m(pid=76681)[0m     @     0x561f064d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76681)[0m     @     0x561f0655ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76681)[0m     @     0x561f0655f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76681)[0m     @     0x561f064d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76681)[0m     @     0x561f0655ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76681)[0m     @     0x561f0655f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76681)[0m     @     0x561f064d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76681)[0m     @     0x561f0655ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76681)[0m     @     0x561f0655f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76681)[0m     @     0x561f064d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76681)[0m     @     0x561f0655ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76629)[0m     @     0x7f404fe0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76629)[0m     @     0x7f404ff15148 at::Tensor::copy_()
[2m[36m(pid=76629)[0m     @     0x7f40561cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76629)[0m     @     0x55ed279b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76629)[0m     @     0x55ed2790fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76629)[0m     @     0x55ed2799abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76629)[0m     @     0x55ed2799ba20 method_vectorcall
[2m[36m(pid=76629)[0m     @     0x55ed2790fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76629)[0m     @     0x55ed2799abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76629)[0m     @     0x55ed2799b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76629)[0m     @     0x55ed27910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76629)[0m     @     0x55ed2799abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76629)[0m     @     0x55ed2799b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76629)[0m     @     0x55ed27910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76629)[0m     @     0x55ed2799abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76629)[0m     @     0x55ed2799b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76629)[0m     @     0x55ed27910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76629)[0m     @     0x55ed2799abaf _PyEval_EvalCodeWithName
[2m[36m(pid=76624)[0m     @     0x7f8fa58a5148 at::Tensor::copy_()
[2m[36m(pid=76624)[0m     @     0x7f8fabb5bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76624)[0m     @     0x559216caffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76624)[0m     @     0x559216c0ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76624)[0m     @     0x559216c95baf _PyEval_EvalCodeWithName
[2m[36m(pid=76624)[0m     @     0x559216c96a20 method_vectorcall
[2m[36m(pid=76624)[0m     @     0x559216c0abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76624)[0m     @     0x559216c95baf _PyEval_EvalCodeWithName
[2m[36m(pid=76624)[0m     @     0x559216c96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76624)[0m     @     0x559216c0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76624)[0m     @     0x559216c95baf _PyEval_EvalCodeWithName
[2m[36m(pid=76624)[0m     @     0x559216c96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76624)[0m     @     0x559216c0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76624)[0m     @     0x559216c95baf _PyEval_EvalCodeWithName
[2m[36m(pid=76624)[0m     @     0x559216c96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76624)[0m     @     0x559216c0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76624)[0m     @     0x559216c95baf _PyEval_EvalCodeWithName
[2m[36m(pid=76628)[0m     @     0x56124eb5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76633)[0m     @     0x7ee9a20d6148 at::Tensor::copy_()
[2m[36m(pid=76633)[0m     @     0x7ee9a838cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76633)[0m     @     0x559f0310afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76633)[0m     @     0x559f03065b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76633)[0m     @     0x559f030f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76633)[0m     @     0x559f030f1a20 method_vectorcall
[2m[36m(pid=76633)[0m     @     0x559f03065bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76633)[0m     @     0x559f030f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76633)[0m     @     0x559f030f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76633)[0m     @     0x559f03066689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76633)[0m     @     0x559f030f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76633)[0m     @     0x559f030f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76633)[0m     @     0x559f03066689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76633)[0m     @     0x559f030f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76633)[0m     @     0x559f030f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76633)[0m     @     0x559f03066689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76633)[0m     @     0x559f030f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76736)[0m     @     0x7faca035d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76736)[0m     @     0x7faca035bc3f at::native::copy_impl()
[2m[36m(pid=76736)[0m     @     0x7faca035ced4 at::native::copy_()
[2m[36m(pid=76736)[0m     @     0x7faca0a9f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76654)[0m     @     0x7fb26217b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=76654)[0m     @     0x7fb262179c3f at::native::copy_impl()
[2m[36m(pid=76654)[0m     @     0x7fb26217aed4 at::native::copy_()
[2m[36m(pid=76728)[0m     @     0x7fb86e4fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76728)[0m     @     0x7fb86e603148 at::Tensor::copy_()
[2m[36m(pid=76728)[0m     @     0x7fb8748b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76728)[0m     @     0x5630e490cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76728)[0m     @     0x5630e4867b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76728)[0m     @     0x5630e48f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=76728)[0m     @     0x5630e48f3a20 method_vectorcall
[2m[36m(pid=76728)[0m     @     0x5630e4867bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76728)[0m     @     0x5630e48f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=76728)[0m     @     0x5630e48f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76728)[0m     @     0x5630e4868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76728)[0m     @     0x5630e48f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=76728)[0m     @     0x5630e48f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76728)[0m     @     0x5630e4868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76728)[0m     @     0x5630e48f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=76728)[0m     @     0x5630e48f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76728)[0m     @     0x5630e4868689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76728)[0m     @     0x5630e48f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=76680)[0m     @     0x7f9cedabf148 at::Tensor::copy_()
[2m[36m(pid=76680)[0m     @     0x7f9cf3d75bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76680)[0m     @     0x55999f7a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76680)[0m     @     0x55999f702b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76680)[0m     @     0x55999f78dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76680)[0m     @     0x55999f78ea20 method_vectorcall
[2m[36m(pid=76680)[0m     @     0x55999f702bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76680)[0m     @     0x55999f78dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76680)[0m     @     0x55999f78e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76680)[0m     @     0x55999f703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76680)[0m     @     0x55999f78dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76680)[0m     @     0x55999f78e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76680)[0m     @     0x55999f703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76680)[0m     @     0x55999f78dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76680)[0m     @     0x55999f78e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76680)[0m     @     0x55999f703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76680)[0m     @     0x55999f78dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76744)[0m     @     0x55f4101b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76744)[0m     @     0x55f4101b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76744)[0m     @     0x55f41012a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76744)[0m     @     0x55f4101b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76744)[0m     @     0x55f4101b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76744)[0m     @     0x55f41012a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76744)[0m     @     0x55f4101b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76744)[0m     @     0x55f4101b5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76744)[0m     @     0x55f41012a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76744)[0m     @     0x55f4101b4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76637)[0m     @     0x7f5299884148 at::Tensor::copy_()
[2m[36m(pid=76637)[0m     @     0x7f529fb3abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76637)[0m     @     0x5628deea5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76637)[0m     @     0x5628dee00b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76637)[0m     @     0x5628dee8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76637)[0m     @     0x5628dee8ca20 method_vectorcall
[2m[36m(pid=76637)[0m     @     0x5628dee00bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76637)[0m     @     0x5628dee8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76637)[0m     @     0x5628dee8c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76637)[0m     @     0x5628dee01689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76637)[0m     @     0x5628dee8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76637)[0m     @     0x5628dee8c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76637)[0m     @     0x5628dee01689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76637)[0m     @     0x5628dee8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76637)[0m     @     0x5628dee8c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76637)[0m     @     0x5628dee01689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76637)[0m     @     0x5628dee8bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76627)[0m     @     0x7f99f80a1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76627)[0m     @     0x55e3e3c65fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76627)[0m     @     0x55e3e3bc0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76627)[0m     @     0x55e3e3c4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76627)[0m     @     0x55e3e3c4ca20 method_vectorcall
[2m[36m(pid=76627)[0m     @     0x55e3e3bc0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76627)[0m     @     0x55e3e3c4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76627)[0m     @     0x55e3e3c4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76627)[0m     @     0x55e3e3bc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76627)[0m     @     0x55e3e3c4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76627)[0m     @     0x55e3e3c4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76627)[0m     @     0x55e3e3bc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76627)[0m     @     0x55e3e3c4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76627)[0m     @     0x55e3e3c4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76627)[0m     @     0x55e3e3bc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76627)[0m     @     0x55e3e3c4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76646)[0m     @     0x560a4a48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76646)[0m     @     0x560a4a48e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76646)[0m     @     0x560a4a403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76646)[0m     @     0x560a4a48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76646)[0m     @     0x560a4a48e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76646)[0m     @     0x560a4a403689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76646)[0m     @     0x560a4a48dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76651)[0m     @     0x7f21a3e10148 at::Tensor::copy_()
[2m[36m(pid=76651)[0m     @     0x7f21aa0c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76651)[0m     @     0x55bb2f10efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76651)[0m     @     0x55bb2f069b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76651)[0m     @     0x55bb2f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76651)[0m     @     0x55bb2f0f5a20 method_vectorcall
[2m[36m(pid=76651)[0m     @     0x55bb2f069bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76651)[0m     @     0x55bb2f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76651)[0m     @     0x55bb2f0f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76651)[0m     @     0x55bb2f06a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76651)[0m     @     0x55bb2f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76651)[0m     @     0x55bb2f0f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76651)[0m     @     0x55bb2f06a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76651)[0m     @     0x55bb2f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76651)[0m     @     0x55bb2f0f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76651)[0m     @     0x55bb2f06a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76651)[0m     @     0x55bb2f0f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76625)[0m     @     0x7ee5184f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76625)[0m     @     0x55ede106cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76625)[0m     @     0x55ede0fc7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76625)[0m     @     0x55ede1052baf _PyEval_EvalCodeWithName
[2m[36m(pid=76625)[0m     @     0x55ede1053a20 method_vectorcall
[2m[36m(pid=76625)[0m     @     0x55ede0fc7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76625)[0m     @     0x55ede1052baf _PyEval_EvalCodeWithName
[2m[36m(pid=76625)[0m     @     0x55ede1053643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76625)[0m     @     0x55ede0fc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76625)[0m     @     0x55ede1052baf _PyEval_EvalCodeWithName
[2m[36m(pid=76625)[0m     @     0x55ede1053643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76625)[0m     @     0x55ede0fc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76625)[0m     @     0x55ede1052baf _PyEval_EvalCodeWithName
[2m[36m(pid=76625)[0m     @     0x55ede1053643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76625)[0m     @     0x55ede0fc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76625)[0m     @     0x55ede1052baf _PyEval_EvalCodeWithName
[2m[36m(pid=76716)[0m     @     0x7f4b2fe68148 at::Tensor::copy_()
[2m[36m(pid=76716)[0m     @     0x7f4b3611ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76716)[0m     @     0x562d7ee1bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76716)[0m     @     0x562d7ed76b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76716)[0m     @     0x562d7ee01baf _PyEval_EvalCodeWithName
[2m[36m(pid=76716)[0m     @     0x562d7ee02a20 method_vectorcall
[2m[36m(pid=76716)[0m     @     0x562d7ed76bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76716)[0m     @     0x562d7ee01baf _PyEval_EvalCodeWithName
[2m[36m(pid=76716)[0m     @     0x562d7ee02643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76716)[0m     @     0x562d7ed77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76716)[0m     @     0x562d7ee01baf _PyEval_EvalCodeWithName
[2m[36m(pid=76716)[0m     @     0x562d7ee02643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76716)[0m     @     0x562d7ed77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76716)[0m     @     0x562d7ee01baf _PyEval_EvalCodeWithName
[2m[36m(pid=76716)[0m     @     0x562d7ee02643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76716)[0m     @     0x562d7ed77689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76716)[0m     @     0x562d7ee01baf _PyEval_EvalCodeWithName
[2m[36m(pid=76687)[0m     @     0x5593b1832689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76687)[0m     @     0x5593b18bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76687)[0m     @     0x5593b18bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76687)[0m     @     0x5593b1832689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76687)[0m     @     0x5593b18bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76650)[0m     @     0x7ee13b5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76650)[0m     @     0x55560e251fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76650)[0m     @     0x55560e1acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76650)[0m     @     0x55560e237baf _PyEval_EvalCodeWithName
[2m[36m(pid=76650)[0m     @     0x55560e238a20 method_vectorcall
[2m[36m(pid=76650)[0m     @     0x55560e1acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76650)[0m     @     0x55560e237baf _PyEval_EvalCodeWithName
[2m[36m(pid=76650)[0m     @     0x55560e238643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76650)[0m     @     0x55560e1ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76650)[0m     @     0x55560e237baf _PyEval_EvalCodeWithName
[2m[36m(pid=76650)[0m     @     0x55560e238643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76650)[0m     @     0x55560e1ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76650)[0m     @     0x55560e237baf _PyEval_EvalCodeWithName
[2m[36m(pid=76650)[0m     @     0x55560e238643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76650)[0m     @     0x55560e1ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76650)[0m     @     0x55560e237baf _PyEval_EvalCodeWithName
[2m[36m(pid=76631)[0m     @     0x7f8cd5e7d148 at::Tensor::copy_()
[2m[36m(pid=76631)[0m     @     0x7f8cdc133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76631)[0m     @     0x55c1c22a5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76631)[0m     @     0x55c1c2200b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76631)[0m     @     0x55c1c228bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76631)[0m     @     0x55c1c228ca20 method_vectorcall
[2m[36m(pid=76631)[0m     @     0x55c1c2200bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76631)[0m     @     0x55c1c228bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76631)[0m     @     0x55c1c228c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76631)[0m     @     0x55c1c2201689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76631)[0m     @     0x55c1c228bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76631)[0m     @     0x55c1c228c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76631)[0m     @     0x55c1c2201689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76631)[0m     @     0x55c1c228bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76706)[0m     @     0x7f8f91011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76706)[0m     @     0x55edff526fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76706)[0m     @     0x55edff481b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76706)[0m     @     0x55edff50cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76706)[0m     @     0x55edff50da20 method_vectorcall
[2m[36m(pid=76706)[0m     @     0x55edff481bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76706)[0m     @     0x55edff50cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76706)[0m     @     0x55edff50d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76706)[0m     @     0x55edff482689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76706)[0m     @     0x55edff50cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76706)[0m     @     0x55edff50d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76706)[0m     @     0x55edff482689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76706)[0m     @     0x55edff50cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76706)[0m     @     0x55edff50d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76706)[0m     @     0x55edff482689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76706)[0m     @     0x55edff50cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76635)[0m     @     0x55780926c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76635)[0m     @     0x5578091e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76635)[0m     @     0x55780926bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76635)[0m     @     0x55780926c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76635)[0m     @     0x5578091e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76635)[0m     @     0x55780926bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76635)[0m     @     0x55780926c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76635)[0m     @     0x5578091e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76635)[0m     @     0x55780926bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76695)[0m     @     0x55ef03e0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76695)[0m     @     0x55ef03e97baf _PyEval_EvalCodeWithName
[2m[36m(pid=76695)[0m     @     0x55ef03e98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76695)[0m     @     0x55ef03e0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76695)[0m     @     0x55ef03e97baf _PyEval_EvalCodeWithName
[2m[36m(pid=76695)[0m     @     0x55ef03e98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76695)[0m     @     0x55ef03e0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76695)[0m     @     0x55ef03e97baf _PyEval_EvalCodeWithName
[2m[36m(pid=76732)[0m     @     0x7f53bdfce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76732)[0m     @     0x7f53be0d6148 at::Tensor::copy_()
[2m[36m(pid=76732)[0m     @     0x7f53c438cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76732)[0m     @     0x5618b84fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76732)[0m     @     0x5618b8459b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76732)[0m     @     0x5618b84e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76732)[0m     @     0x5618b84e5a20 method_vectorcall
[2m[36m(pid=76732)[0m     @     0x5618b8459bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76732)[0m     @     0x5618b84e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76732)[0m     @     0x5618b84e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76732)[0m     @     0x5618b845a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76732)[0m     @     0x5618b84e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76732)[0m     @     0x5618b84e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76732)[0m     @     0x5618b845a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76732)[0m     @     0x5618b84e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76732)[0m     @     0x5618b84e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76732)[0m     @     0x5618b845a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76732)[0m     @     0x5618b84e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x7f1e9621d148 at::Tensor::copy_()
[2m[36m(pid=76664)[0m     @     0x7f1e97e14989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76664)[0m     @     0x7f1e961155cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76639)[0m     @     0x7ef412fb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76639)[0m     @     0x7ef4130bf148 at::Tensor::copy_()
[2m[36m(pid=76639)[0m     @     0x7ef419375bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76639)[0m     @     0x55a652355fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76639)[0m     @     0x55a6522b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76639)[0m     @     0x55a65233bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76639)[0m     @     0x55a65233ca20 method_vectorcall
[2m[36m(pid=76639)[0m     @     0x55a6522b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76639)[0m     @     0x55a65233bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76639)[0m     @     0x55a65233c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76639)[0m     @     0x55a6522b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76639)[0m     @     0x55a65233bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76639)[0m     @     0x55a65233c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76639)[0m     @     0x55a6522b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76639)[0m     @     0x55a65233bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76639)[0m     @     0x55a65233c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76639)[0m     @     0x55a6522b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76639)[0m     @     0x55a65233bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76735)[0m     @     0x7fb5222ed148 at::Tensor::copy_()
[2m[36m(pid=76735)[0m     @     0x7fb5285a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76735)[0m     @     0x55efeefcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76735)[0m     @     0x55efeef25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76735)[0m     @     0x55efeefb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76735)[0m     @     0x55efeefb1a20 method_vectorcall
[2m[36m(pid=76735)[0m     @     0x55efeef25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76735)[0m     @     0x55efeefb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76735)[0m     @     0x55efeefb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76735)[0m     @     0x55efeef26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76735)[0m     @     0x55efeefb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76735)[0m     @     0x55efeefb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76735)[0m     @     0x55efeef26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76735)[0m     @     0x55efeefb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76735)[0m     @     0x55efeefb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76735)[0m     @     0x55efeef26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76735)[0m     @     0x55efeefb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76656)[0m     @     0x7fa9f78355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76656)[0m     @     0x7fa9f793d148 at::Tensor::copy_()
[2m[36m(pid=76656)[0m     @     0x7fa9f9534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76692)[0m     @     0x7f8119226148 at::Tensor::copy_()
[2m[36m(pid=76692)[0m     @     0x7f811f4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76692)[0m     @     0x55c67297afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76692)[0m     @     0x55c6728d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76692)[0m     @     0x55c672960baf _PyEval_EvalCodeWithName
[2m[36m(pid=76692)[0m     @     0x55c672961a20 method_vectorcall
[2m[36m(pid=76692)[0m     @     0x55c6728d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76692)[0m     @     0x55c672960baf _PyEval_EvalCodeWithName
[2m[36m(pid=76692)[0m     @     0x55c672961643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76692)[0m     @     0x55c6728d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76692)[0m     @     0x55c672960baf _PyEval_EvalCodeWithName
[2m[36m(pid=76692)[0m     @     0x55c672961643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76692)[0m     @     0x55c6728d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76692)[0m     @     0x55c672960baf _PyEval_EvalCodeWithName
[2m[36m(pid=76692)[0m     @     0x55c672961643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76692)[0m     @     0x55c6728d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76692)[0m     @     0x55c672960baf _PyEval_EvalCodeWithName
[2m[36m(pid=76645)[0m     @     0x55645da2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76645)[0m     @     0x55645d9a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76645)[0m     @     0x55645da2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76729)[0m     @     0x7f634c9d6148 at::Tensor::copy_()
[2m[36m(pid=76729)[0m     @     0x7f6352c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76729)[0m     @     0x5619d28e0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76729)[0m     @     0x5619d283bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76729)[0m     @     0x5619d28c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=76729)[0m     @     0x5619d28c7a20 method_vectorcall
[2m[36m(pid=76729)[0m     @     0x5619d283bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76729)[0m     @     0x5619d28c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=76729)[0m     @     0x5619d28c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76729)[0m     @     0x5619d283c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76729)[0m     @     0x5619d28c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=76729)[0m     @     0x5619d28c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76729)[0m     @     0x5619d283c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76729)[0m     @     0x5619d28c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=76729)[0m     @     0x5619d28c7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76729)[0m     @     0x5619d283c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76729)[0m     @     0x5619d28c6baf _PyEval_EvalCodeWithName
[2m[36m(pid=76708)[0m     @     0x7f956179d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76708)[0m     @     0x7f95618a5148 at::Tensor::copy_()
[2m[36m(pid=76708)[0m     @     0x7f9567b5bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76708)[0m     @     0x559901cc1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76708)[0m     @     0x559901c1cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76708)[0m     @     0x559901ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76708)[0m     @     0x559901ca8a20 method_vectorcall
[2m[36m(pid=76708)[0m     @     0x559901c1cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76708)[0m     @     0x559901ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76708)[0m     @     0x559901ca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76708)[0m     @     0x559901c1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76708)[0m     @     0x559901ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76708)[0m     @     0x559901ca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76708)[0m     @     0x559901c1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76708)[0m     @     0x559901ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76708)[0m     @     0x559901ca8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76708)[0m     @     0x559901c1d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76708)[0m     @     0x559901ca7baf _PyEval_EvalCodeWithName
[2m[36m(pid=76736)[0m     @     0x7faca0ba7148 at::Tensor::copy_()
[2m[36m(pid=76736)[0m     @     0x7faca279e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76654)[0m     @     0x7fb2628bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76631)[0m     @     0x55c1c228c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76631)[0m     @     0x55c1c2201689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76631)[0m     @     0x55c1c228bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x7f1e9621d148 at::Tensor::copy_()
[2m[36m(pid=76664)[0m     @     0x7f1e9c4d3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76664)[0m     @     0x563fe4f8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76664)[0m     @     0x563fe4ee6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76664)[0m     @     0x563fe4f71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x563fe4f72a20 method_vectorcall
[2m[36m(pid=76664)[0m     @     0x563fe4ee6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76664)[0m     @     0x563fe4f71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x563fe4f72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76664)[0m     @     0x563fe4ee7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76664)[0m     @     0x563fe4f71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x563fe4f72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76664)[0m     @     0x563fe4ee7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76664)[0m     @     0x563fe4f71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76664)[0m     @     0x563fe4f72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76664)[0m     @     0x563fe4ee7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76664)[0m     @     0x563fe4f71baf _PyEval_EvalCodeWithName
[2m[36m(pid=76656)[0m     @     0x7fa9f78355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76656)[0m     @     0x7fa9f793d148 at::Tensor::copy_()
[2m[36m(pid=76656)[0m     @     0x7fa9fdbf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76656)[0m     @     0x558040b68fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76656)[0m     @     0x558040ac3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76656)[0m     @     0x558040b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76656)[0m     @     0x558040b4fa20 method_vectorcall
[2m[36m(pid=76656)[0m     @     0x558040ac3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76656)[0m     @     0x558040b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76656)[0m     @     0x558040b4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76656)[0m     @     0x558040ac4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76656)[0m     @     0x558040b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76656)[0m     @     0x558040b4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76656)[0m     @     0x558040ac4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76656)[0m     @     0x558040b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76656)[0m     @     0x558040b4f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76656)[0m     @     0x558040ac4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76656)[0m     @     0x558040b4ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=76736)[0m     @     0x7faca0a9f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76736)[0m     @     0x7faca0ba7148 at::Tensor::copy_()
[2m[36m(pid=76736)[0m     @     0x7faca6e5dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76736)[0m     @     0x55f77abfafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76736)[0m     @     0x55f77ab55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76736)[0m     @     0x55f77abe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76736)[0m     @     0x55f77abe1a20 method_vectorcall
[2m[36m(pid=76736)[0m     @     0x55f77ab55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76736)[0m     @     0x55f77abe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76736)[0m     @     0x55f77abe1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76736)[0m     @     0x55f77ab56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76736)[0m     @     0x55f77abe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76736)[0m     @     0x55f77abe1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76736)[0m     @     0x55f77ab56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76736)[0m     @     0x55f77abe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76736)[0m     @     0x55f77abe1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76736)[0m     @     0x55f77ab56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76736)[0m     @     0x55f77abe0baf _PyEval_EvalCodeWithName
[2m[36m(pid=76654)[0m     @     0x7fb2629c5148 at::Tensor::copy_()
[2m[36m(pid=76654)[0m     @     0x7fb2645bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=76654)[0m     @     0x7fb2628bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=76654)[0m     @     0x7fb2629c5148 at::Tensor::copy_()
2020-11-05 10:55:39,788	ERROR trial_runner.py:567 -- Trial PPO_jss_env_6cb09_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=76757, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:55:39,790	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:55:39,791	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
== Status ==
Memory usage on this node: 24.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6cb09_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_6cb09_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6cb09_00000_0_2020-11-05_10-55-32/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.96 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_6cb09_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_6cb09_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_6cb09_00000_0_2020-11-05_10-55-32/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:55:39,801	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:55:39,812	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:55:39,813	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:55:39,813	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 10:55:39,813	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:55:39,813	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_6cb09_00000])
[2m[36m(pid=76654)[0m     @     0x7fb268c7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=76654)[0m     @     0x55fdb8bf3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=76654)[0m     @     0x55fdb8b4eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76654)[0m     @     0x55fdb8bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=76654)[0m     @     0x55fdb8bdaa20 method_vectorcall
[2m[36m(pid=76654)[0m     @     0x55fdb8b4ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76654)[0m     @     0x55fdb8bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=76654)[0m     @     0x55fdb8bda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76654)[0m     @     0x55fdb8b4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76654)[0m     @     0x55fdb8bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=76654)[0m     @     0x55fdb8bda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76654)[0m     @     0x55fdb8b4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76654)[0m     @     0x55fdb8bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=76654)[0m     @     0x55fdb8bda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=76654)[0m     @     0x55fdb8b4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=76654)[0m     @     0x55fdb8bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=76757)[0m E1105 10:55:39.780390 76757 77942 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=76757)[0m E1105 10:55:39.780573 76757 77942 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
