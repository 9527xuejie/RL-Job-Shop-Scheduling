2020-11-05 10:58:08,136	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ca79b_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=9568)[0m 2020-11-05 10:58:10,944	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=9456)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9456)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9456)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9456)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9515)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9515)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9515)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9441)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9519)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9519)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9519)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9519)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9519)[0m *** SIGSEGV (@0x0) received by PID 9519 (TID 0x7f365f090700) from PID 0; stack trace: ***
[2m[36m(pid=9443)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9443)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9443)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9495)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9495)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9495)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9566)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9566)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9566)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9566)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9566)[0m *** SIGSEGV (@0x0) received by PID 9566 (TID 0x7f50c9384700) from PID 0; stack trace: ***
[2m[36m(pid=9566)[0m     @     0x7f50c8f5d390 (unknown)
[2m[36m(pid=9518)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9518)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9518)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9518)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9518)[0m *** SIGSEGV (@0x0) received by PID 9518 (TID 0x7f1327743700) from PID 0; stack trace: ***
[2m[36m(pid=9539)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9539)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9539)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9539)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9539)[0m *** SIGSEGV (@0x0) received by PID 9539 (TID 0x7f6f90a72700) from PID 0; stack trace: ***
[2m[36m(pid=9542)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9542)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9542)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9542)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9542)[0m *** SIGSEGV (@0x0) received by PID 9542 (TID 0x7f6789358700) from PID 0; stack trace: ***
[2m[36m(pid=9542)[0m     @     0x7f6788f31390 (unknown)
[2m[36m(pid=9500)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9500)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9500)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9500)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9500)[0m *** SIGSEGV (@0x0) received by PID 9500 (TID 0x7f4ca320f700) from PID 0; stack trace: ***
[2m[36m(pid=9511)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9511)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9511)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9511)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9511)[0m *** SIGSEGV (@0x0) received by PID 9511 (TID 0x7f181a101700) from PID 0; stack trace: ***
[2m[36m(pid=9524)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9524)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9524)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9524)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9524)[0m *** SIGSEGV (@0x0) received by PID 9524 (TID 0x7f18c9b67700) from PID 0; stack trace: ***
[2m[36m(pid=9457)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9457)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9457)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9454)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9454)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9454)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9454)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9454)[0m *** SIGSEGV (@0x0) received by PID 9454 (TID 0x7f2dcbfec700) from PID 0; stack trace: ***
[2m[36m(pid=9529)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9529)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9529)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9529)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9529)[0m *** SIGSEGV (@0x0) received by PID 9529 (TID 0x7f03d4af0700) from PID 0; stack trace: ***
[2m[36m(pid=9529)[0m     @     0x7f03d46c9390 (unknown)
[2m[36m(pid=9547)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9547)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9547)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9547)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9547)[0m *** SIGSEGV (@0x0) received by PID 9547 (TID 0x7fa1b2a4e700) from PID 0; stack trace: ***
[2m[36m(pid=9547)[0m     @     0x7fa1b2627390 (unknown)
[2m[36m(pid=9516)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9516)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9516)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9570)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9570)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9570)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9570)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9570)[0m *** SIGSEGV (@0x0) received by PID 9570 (TID 0x7f1a222dd700) from PID 0; stack trace: ***
[2m[36m(pid=9570)[0m     @     0x7f1a21eb6390 (unknown)
[2m[36m(pid=9506)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9506)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9506)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9506)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9506)[0m *** SIGSEGV (@0x0) received by PID 9506 (TID 0x7f9c944a5700) from PID 0; stack trace: ***
[2m[36m(pid=9506)[0m     @     0x7f9c9407e390 (unknown)
[2m[36m(pid=9506)[0m     @     0x7f6d9612dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9536)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9536)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9536)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9536)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9536)[0m *** SIGSEGV (@0x0) received by PID 9536 (TID 0x7f48d012c700) from PID 0; stack trace: ***
[2m[36m(pid=9492)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9492)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9492)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9492)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9492)[0m *** SIGSEGV (@0x0) received by PID 9492 (TID 0x7f4ddbdb3700) from PID 0; stack trace: ***
[2m[36m(pid=9435)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9435)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9435)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9514)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9514)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9514)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9514)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9514)[0m *** SIGSEGV (@0x0) received by PID 9514 (TID 0x7f0f60ee8700) from PID 0; stack trace: ***
[2m[36m(pid=9535)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9535)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9535)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9535)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9535)[0m *** SIGSEGV (@0x0) received by PID 9535 (TID 0x7f58e4d21700) from PID 0; stack trace: ***
[2m[36m(pid=9535)[0m     @     0x7f58e48fa390 (unknown)
[2m[36m(pid=9502)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9502)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9502)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9502)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9502)[0m *** SIGSEGV (@0x0) received by PID 9502 (TID 0x7f24f631a700) from PID 0; stack trace: ***
[2m[36m(pid=9545)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9545)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9545)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9545)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9545)[0m *** SIGSEGV (@0x0) received by PID 9545 (TID 0x7f99caff3700) from PID 0; stack trace: ***
[2m[36m(pid=9545)[0m     @     0x7f99cabcc390 (unknown)
[2m[36m(pid=9545)[0m     @     0x7f6accd48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9545)[0m     @     0x7f6aca03c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9545)[0m     @     0x7f6aca03f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9548)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9548)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9548)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9548)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9548)[0m *** SIGSEGV (@0x0) received by PID 9548 (TID 0x7fa1ce2b2700) from PID 0; stack trace: ***
[2m[36m(pid=9528)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9528)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9528)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9528)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9528)[0m *** SIGSEGV (@0x0) received by PID 9528 (TID 0x7f68d7ddf700) from PID 0; stack trace: ***
[2m[36m(pid=9528)[0m     @     0x7f68d79b8390 (unknown)
[2m[36m(pid=9528)[0m     @     0x7f39d9b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9465)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9465)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9465)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9465)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9465)[0m *** SIGSEGV (@0x0) received by PID 9465 (TID 0x7fc43d4af700) from PID 0; stack trace: ***
[2m[36m(pid=9534)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9534)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9534)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9534)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9534)[0m *** SIGSEGV (@0x0) received by PID 9534 (TID 0x7ff9c84f4700) from PID 0; stack trace: ***
[2m[36m(pid=9534)[0m     @     0x7ff9c80cd390 (unknown)
[2m[36m(pid=9562)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9562)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9562)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9562)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9562)[0m *** SIGSEGV (@0x0) received by PID 9562 (TID 0x7f3d2d6a7700) from PID 0; stack trace: ***
[2m[36m(pid=9554)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9554)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9554)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9554)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9554)[0m *** SIGSEGV (@0x0) received by PID 9554 (TID 0x7f06e6fe5700) from PID 0; stack trace: ***
[2m[36m(pid=9554)[0m     @     0x7f06e6bbe390 (unknown)
[2m[36m(pid=9554)[0m     @     0x7ed7e8dc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9508)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9508)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9508)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9508)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9508)[0m *** SIGSEGV (@0x0) received by PID 9508 (TID 0x7efc7d71f700) from PID 0; stack trace: ***
[2m[36m(pid=9508)[0m     @     0x7efc7d2f8390 (unknown)
[2m[36m(pid=9508)[0m     @     0x7ecd7f501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9544)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9544)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9544)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9544)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9544)[0m *** SIGSEGV (@0x0) received by PID 9544 (TID 0x7eff6e22f700) from PID 0; stack trace: ***
[2m[36m(pid=9544)[0m     @     0x7eff6de08390 (unknown)
[2m[36m(pid=9544)[0m     @     0x7ed07001bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9510)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9510)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9510)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9510)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9510)[0m *** SIGSEGV (@0x0) received by PID 9510 (TID 0x7f30a3295700) from PID 0; stack trace: ***
[2m[36m(pid=9538)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9538)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9538)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9538)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9538)[0m *** SIGSEGV (@0x0) received by PID 9538 (TID 0x7fa59c29d700) from PID 0; stack trace: ***
[2m[36m(pid=9538)[0m     @     0x7fa59be76390 (unknown)
[2m[36m(pid=9538)[0m     @     0x7f769e055fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9557)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9557)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9557)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9557)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9557)[0m *** SIGSEGV (@0x0) received by PID 9557 (TID 0x7fdef0082700) from PID 0; stack trace: ***
[2m[36m(pid=9557)[0m     @     0x7fdeefc5b390 (unknown)
[2m[36m(pid=9557)[0m     @     0x7faff1d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9557)[0m     @     0x7fafef06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9557)[0m     @     0x7fafef063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9440)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9440)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9440)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9440)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9440)[0m *** SIGSEGV (@0x0) received by PID 9440 (TID 0x7f20c952c700) from PID 0; stack trace: ***
[2m[36m(pid=9440)[0m     @     0x7f20c9105390 (unknown)
[2m[36m(pid=9507)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9507)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9507)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9507)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9507)[0m *** SIGSEGV (@0x0) received by PID 9507 (TID 0x7f2491614700) from PID 0; stack trace: ***
[2m[36m(pid=9507)[0m     @     0x7f24911ed390 (unknown)
[2m[36m(pid=9507)[0m     @     0x7ef59332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9453)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9453)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9453)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9453)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9453)[0m *** SIGSEGV (@0x0) received by PID 9453 (TID 0x7f93bbc21700) from PID 0; stack trace: ***
[2m[36m(pid=9453)[0m     @     0x7f93bb7fa390 (unknown)
[2m[36m(pid=9453)[0m     @     0x7f64bda05fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9456)[0m *** SIGSEGV (@0x0) received by PID 9456 (TID 0x7f517949c700) from PID 0; stack trace: ***
[2m[36m(pid=9456)[0m     @     0x7f5179075390 (unknown)
[2m[36m(pid=9456)[0m     @     0x7f227b25afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9456)[0m     @     0x7f227854e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9515)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9515)[0m *** SIGSEGV (@0x0) received by PID 9515 (TID 0x7f8cafda5700) from PID 0; stack trace: ***
[2m[36m(pid=9441)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9441)[0m *** SIGSEGV (@0x0) received by PID 9441 (TID 0x7fb7097ce700) from PID 0; stack trace: ***
[2m[36m(pid=9441)[0m     @     0x7fb7093a7390 (unknown)
[2m[36m(pid=9441)[0m     @     0x7f880b5b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9519)[0m     @     0x7f365ec69390 (unknown)
[2m[36m(pid=9519)[0m     @     0x7f0760c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9519)[0m     @     0x7f075df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9443)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9443)[0m *** SIGSEGV (@0x0) received by PID 9443 (TID 0x7f8b7940e700) from PID 0; stack trace: ***
[2m[36m(pid=9443)[0m     @     0x7f8b78fe7390 (unknown)
[2m[36m(pid=9443)[0m     @     0x7f5c7b1c6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9443)[0m     @     0x7f5c784ba64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9495)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9495)[0m *** SIGSEGV (@0x0) received by PID 9495 (TID 0x7f7d48903700) from PID 0; stack trace: ***
[2m[36m(pid=9495)[0m     @     0x7f7d484dc390 (unknown)
[2m[36m(pid=9495)[0m     @     0x7f4e4a65afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9495)[0m     @     0x7f4e4794e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9566)[0m     @     0x7f21cb11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9566)[0m     @     0x7f21c840f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9566)[0m     @     0x7f21c8412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9566)[0m     @     0x7f21c8412b53 at::TensorIterator::for_each()
[2m[36m(pid=9518)[0m     @     0x7f132731c390 (unknown)
[2m[36m(pid=9518)[0m     @     0x7ee42939bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9518)[0m     @     0x7ee42668f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9539)[0m     @     0x7f6f9064b390 (unknown)
[2m[36m(pid=9539)[0m     @     0x7f40927dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9539)[0m     @     0x7f408face64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9542)[0m     @     0x7f388b123fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9542)[0m     @     0x7f388841764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9542)[0m     @     0x7f388841a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9500)[0m     @     0x7f4ca2de8390 (unknown)
[2m[36m(pid=9500)[0m     @     0x7f1da4ffafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9500)[0m     @     0x7f1da22ee64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9511)[0m     @     0x7f1819cda390 (unknown)
[2m[36m(pid=9511)[0m     @     0x7ee91be84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9511)[0m     @     0x7ee91917864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9524)[0m     @     0x7f18c9740390 (unknown)
[2m[36m(pid=9524)[0m     @     0x7ee9cb92bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9524)[0m     @     0x7ee9c8c1f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9457)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9457)[0m *** SIGSEGV (@0x0) received by PID 9457 (TID 0x7f35ac2de700) from PID 0; stack trace: ***
[2m[36m(pid=9457)[0m     @     0x7f35abeb7390 (unknown)
[2m[36m(pid=9457)[0m     @     0x7f06ace9efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9454)[0m     @     0x7f2dcbbc5390 (unknown)
[2m[36m(pid=9454)[0m     @     0x7efecdd6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9454)[0m     @     0x7efecb06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9529)[0m     @     0x7ed4d67dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9529)[0m     @     0x7ed4d3ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9529)[0m     @     0x7ed4d3ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9547)[0m     @     0x7f72b47f3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9547)[0m     @     0x7f72b1ae764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9547)[0m     @     0x7f72b1aea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9516)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9516)[0m *** SIGSEGV (@0x0) received by PID 9516 (TID 0x7f10aacf7700) from PID 0; stack trace: ***
[2m[36m(pid=9516)[0m     @     0x7f10aa8d0390 (unknown)
[2m[36m(pid=9516)[0m     @     0x7ee1ac981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9516)[0m     @     0x7ee1a9c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9570)[0m     @     0x7eeb2409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9570)[0m     @     0x7eeb2138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9570)[0m     @     0x7eeb21392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9506)[0m     @     0x7f6d9342164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9506)[0m     @     0x7f6d93424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9506)[0m     @     0x7f6d93424b53 at::TensorIterator::for_each()
[2m[36m(pid=9536)[0m     @     0x7f48cfd05390 (unknown)
[2m[36m(pid=9536)[0m     @     0x7f19d1f1ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9536)[0m     @     0x7f19cf21364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9536)[0m     @     0x7f19cf216977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9492)[0m     @     0x7f4ddb98c390 (unknown)
[2m[36m(pid=9492)[0m     @     0x7f1eddb55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9492)[0m     @     0x7f1edae4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9435)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9435)[0m *** SIGSEGV (@0x0) received by PID 9435 (TID 0x7f4f5ea10700) from PID 0; stack trace: ***
[2m[36m(pid=9435)[0m     @     0x7f4f5e5e9390 (unknown)
[2m[36m(pid=9435)[0m     @     0x7f2060770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9435)[0m     @     0x7f205da6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9514)[0m     @     0x7f0f60ac1390 (unknown)
[2m[36m(pid=9514)[0m     @     0x7ee062cadfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9514)[0m     @     0x7ee05ffa164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9514)[0m     @     0x7ee05ffa4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9535)[0m     @     0x7f29e69f3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9535)[0m     @     0x7f29e3ce764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9535)[0m     @     0x7f29e3cea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9502)[0m     @     0x7f24f5ef3390 (unknown)
[2m[36m(pid=9502)[0m     @     0x7ef5f809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9502)[0m     @     0x7ef5f538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9502)[0m     @     0x7ef5f5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9545)[0m     @     0x7f6aca03fb53 at::TensorIterator::for_each()
[2m[36m(pid=9545)[0m     @     0x7f6aca03fe11 at::TensorIterator::for_each()
[2m[36m(pid=9548)[0m     @     0x7fa1cde8b390 (unknown)
[2m[36m(pid=9548)[0m     @     0x7f72d006efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9548)[0m     @     0x7f72cd36264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9528)[0m     @     0x7f39d6e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9528)[0m     @     0x7f39d6e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9465)[0m     @     0x7fc43d088390 (unknown)
[2m[36m(pid=9465)[0m     @     0x7f953f2a8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9465)[0m     @     0x7f953c59c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9465)[0m     @     0x7f953c59f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9534)[0m     @     0x7fcaca2cbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9534)[0m     @     0x7fcac75bf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9534)[0m     @     0x7fcac75c2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9562)[0m     @     0x7f3d2d280390 (unknown)
[2m[36m(pid=9562)[0m     @     0x7f0e2f3ddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9562)[0m     @     0x7f0e2c6d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9554)[0m     @     0x7ed7e60bd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9554)[0m     @     0x7ed7e60c0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9554)[0m     @     0x7ed7e60c0b53 at::TensorIterator::for_each()
[2m[36m(pid=9508)[0m     @     0x7ecd7c7f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9508)[0m     @     0x7ecd7c7f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9544)[0m     @     0x7ed06d30f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9544)[0m     @     0x7ed06d312977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9510)[0m     @     0x7f30a2e6e390 (unknown)
[2m[36m(pid=9510)[0m     @     0x7f01a507afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9510)[0m     @     0x7f01a236e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9538)[0m     @     0x7f769b34964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9538)[0m     @     0x7f769b34c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9538)[0m     @     0x7f769b34cb53 at::TensorIterator::for_each()
[2m[36m(pid=9557)[0m     @     0x7fafef063b53 at::TensorIterator::for_each()
[2m[36m(pid=9440)[0m     @     0x7ef1cb2fffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9440)[0m     @     0x7ef1c85f364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9507)[0m     @     0x7ef59062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9507)[0m     @     0x7ef590623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9453)[0m     @     0x7f64bacf964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9453)[0m     @     0x7f64bacfc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9456)[0m     @     0x7f2278551977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9456)[0m     @     0x7f2278551b53 at::TensorIterator::for_each()
[2m[36m(pid=9515)[0m     @     0x7f8caf97e390 (unknown)
[2m[36m(pid=9515)[0m     @     0x7f5db19c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9515)[0m     @     0x7f5daecbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9441)[0m     @     0x7f88088a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9519)[0m     @     0x7f075df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9519)[0m     @     0x7f075df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=9443)[0m     @     0x7f5c784bd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9495)[0m     @     0x7f4e47951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9566)[0m     @     0x7f21c8412e11 at::TensorIterator::for_each()
[2m[36m(pid=9518)[0m     @     0x7ee426692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9539)[0m     @     0x7f408fad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9500)[0m     @     0x7f1da22f1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9500)[0m     @     0x7f1da22f1b53 at::TensorIterator::for_each()
[2m[36m(pid=9511)[0m     @     0x7ee91917b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9524)[0m     @     0x7ee9c8c22977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9457)[0m     @     0x7f06aa19264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9454)[0m     @     0x7efecb063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9529)[0m     @     0x7ed4d3ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=9570)[0m     @     0x7eeb21392b53 at::TensorIterator::for_each()
[2m[36m(pid=9506)[0m     @     0x7f6d93424e11 at::TensorIterator::for_each()
[2m[36m(pid=9536)[0m     @     0x7f19cf216b53 at::TensorIterator::for_each()
[2m[36m(pid=9492)[0m     @     0x7f1edae4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9514)[0m     @     0x7ee05ffa4b53 at::TensorIterator::for_each()
[2m[36m(pid=9535)[0m     @     0x7f29e3ceab53 at::TensorIterator::for_each()
[2m[36m(pid=9535)[0m     @     0x7f29e3ceae11 at::TensorIterator::for_each()
[2m[36m(pid=9535)[0m     @     0x7f29e6a03c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9535)[0m     @     0x7f29e6a26cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9502)[0m     @     0x7ef5f5392b53 at::TensorIterator::for_each()
[2m[36m(pid=9502)[0m     @     0x7ef5f5392e11 at::TensorIterator::for_each()
[2m[36m(pid=9502)[0m     @     0x7ef5f80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9502)[0m     @     0x7ef5f80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9545)[0m     @     0x7f6accd58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9545)[0m     @     0x7f6accd7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9545)[0m     @     0x7f6ac9db9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9545)[0m     @     0x7f6ac9db7c3f at::native::copy_impl()
[2m[36m(pid=9545)[0m     @     0x7f6ac9db8ed4 at::native::copy_()
[2m[36m(pid=9548)[0m     @     0x7f72cd365977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9548)[0m     @     0x7f72cd365b53 at::TensorIterator::for_each()
[2m[36m(pid=9548)[0m     @     0x7f72cd365e11 at::TensorIterator::for_each()
[2m[36m(pid=9528)[0m     @     0x7f39d6e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=9528)[0m     @     0x7f39d6e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=9528)[0m     @     0x7f39d9b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9528)[0m     @     0x7f39d9b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9528)[0m     @     0x7f39d6bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9528)[0m     @     0x7f39d6bc4c3f at::native::copy_impl()
[2m[36m(pid=9465)[0m     @     0x7f953c59fb53 at::TensorIterator::for_each()
[2m[36m(pid=9465)[0m     @     0x7f953c59fe11 at::TensorIterator::for_each()
[2m[36m(pid=9465)[0m     @     0x7f953f2b8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9465)[0m     @     0x7f953f2dbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9534)[0m     @     0x7fcac75c2b53 at::TensorIterator::for_each()
[2m[36m(pid=9534)[0m     @     0x7fcac75c2e11 at::TensorIterator::for_each()
[2m[36m(pid=9534)[0m     @     0x7fcaca2dbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9534)[0m     @     0x7fcaca2fecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9562)[0m     @     0x7f0e2c6d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9562)[0m     @     0x7f0e2c6d4b53 at::TensorIterator::for_each()
[2m[36m(pid=9554)[0m     @     0x7ed7e60c0e11 at::TensorIterator::for_each()
[2m[36m(pid=9554)[0m     @     0x7ed7e8dd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9554)[0m     @     0x7ed7e8dfccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9554)[0m     @     0x7ed7e5e3a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9554)[0m     @     0x7ed7e5e38c3f at::native::copy_impl()
[2m[36m(pid=9508)[0m     @     0x7ecd7c7f8b53 at::TensorIterator::for_each()
[2m[36m(pid=9508)[0m     @     0x7ecd7c7f8e11 at::TensorIterator::for_each()
[2m[36m(pid=9508)[0m     @     0x7ecd7f511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9508)[0m     @     0x7ecd7f534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9508)[0m     @     0x7ecd7c572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9544)[0m     @     0x7ed06d312b53 at::TensorIterator::for_each()
[2m[36m(pid=9544)[0m     @     0x7ed06d312e11 at::TensorIterator::for_each()
[2m[36m(pid=9544)[0m     @     0x7ed07002bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9544)[0m     @     0x7ed07004ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9544)[0m     @     0x7ed06d08c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9544)[0m     @     0x7ed06d08ac3f at::native::copy_impl()
[2m[36m(pid=9510)[0m     @     0x7f01a2371977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9510)[0m     @     0x7f01a2371b53 at::TensorIterator::for_each()
[2m[36m(pid=9510)[0m     @     0x7f01a2371e11 at::TensorIterator::for_each()
[2m[36m(pid=9538)[0m     @     0x7f769b34ce11 at::TensorIterator::for_each()
[2m[36m(pid=9538)[0m     @     0x7f769e065c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9538)[0m     @     0x7f769e088cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9538)[0m     @     0x7f769b0c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9538)[0m     @     0x7f769b0c4c3f at::native::copy_impl()
[2m[36m(pid=9467)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9467)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9459)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9557)[0m     @     0x7fafef063e11 at::TensorIterator::for_each()
[2m[36m(pid=9557)[0m     @     0x7faff1d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9557)[0m     @     0x7faff1d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9557)[0m     @     0x7fafeeddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9557)[0m     @     0x7fafeeddbc3f at::native::copy_impl()
[2m[36m(pid=9503)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9503)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9503)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9503)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9503)[0m *** SIGSEGV (@0x0) received by PID 9503 (TID 0x7ff471ab2700) from PID 0; stack trace: ***
[2m[36m(pid=9569)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9569)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9569)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9569)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9569)[0m *** SIGSEGV (@0x0) received by PID 9569 (TID 0x7fe6ac680700) from PID 0; stack trace: ***
[2m[36m(pid=9569)[0m     @     0x7fe6ac259390 (unknown)
[2m[36m(pid=9461)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9461)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9461)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9461)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9461)[0m *** SIGSEGV (@0x0) received by PID 9461 (TID 0x7fadeb263700) from PID 0; stack trace: ***
[2m[36m(pid=9440)[0m     @     0x7ef1c85f6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9440)[0m     @     0x7ef1c85f6b53 at::TensorIterator::for_each()
[2m[36m(pid=9440)[0m     @     0x7ef1c85f6e11 at::TensorIterator::for_each()
[2m[36m(pid=9442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9442)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9442)[0m *** SIGSEGV (@0x0) received by PID 9442 (TID 0x7f5aedf70700) from PID 0; stack trace: ***
[2m[36m(pid=9434)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9434)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9434)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9434)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9434)[0m *** SIGSEGV (@0x0) received by PID 9434 (TID 0x7f6ff0f23700) from PID 0; stack trace: ***
[2m[36m(pid=9434)[0m     @     0x7f6ff0afc390 (unknown)
[2m[36m(pid=9434)[0m     @     0x7f40efaa5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9507)[0m     @     0x7ef590623b53 at::TensorIterator::for_each()
[2m[36m(pid=9507)[0m     @     0x7ef590623e11 at::TensorIterator::for_each()
[2m[36m(pid=9507)[0m     @     0x7ef59333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9507)[0m     @     0x7ef59335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9453)[0m     @     0x7f64bacfcb53 at::TensorIterator::for_each()
[2m[36m(pid=9453)[0m     @     0x7f64bacfce11 at::TensorIterator::for_each()
[2m[36m(pid=9453)[0m     @     0x7f64bda15c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9453)[0m     @     0x7f64bda38cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9517)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9517)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9517)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9517)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9517)[0m *** SIGSEGV (@0x0) received by PID 9517 (TID 0x7fa9362d2700) from PID 0; stack trace: ***
[2m[36m(pid=9553)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9553)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9553)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9553)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9553)[0m *** SIGSEGV (@0x0) received by PID 9553 (TID 0x7f7f5155b700) from PID 0; stack trace: ***
[2m[36m(pid=9553)[0m     @     0x7f7f51134390 (unknown)
[2m[36m(pid=9553)[0m     @     0x7f505332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9504)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9504)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9504)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9504)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9504)[0m *** SIGSEGV (@0x0) received by PID 9504 (TID 0x7ff828f1a700) from PID 0; stack trace: ***
[2m[36m(pid=9470)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9470)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9470)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9470)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9470)[0m *** SIGSEGV (@0x0) received by PID 9470 (TID 0x7f286d7c6700) from PID 0; stack trace: ***
[2m[36m(pid=9449)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9449)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9449)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9449)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9449)[0m *** SIGSEGV (@0x0) received by PID 9449 (TID 0x7fa209740700) from PID 0; stack trace: ***
[2m[36m(pid=9449)[0m     @     0x7fa209319390 (unknown)
[2m[36m(pid=9449)[0m     @     0x7f730b51efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9449)[0m     @     0x7f730881264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9509)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9509)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9509)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9509)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9509)[0m *** SIGSEGV (@0x0) received by PID 9509 (TID 0x7f580eec9700) from PID 0; stack trace: ***
[2m[36m(pid=9509)[0m     @     0x7f580eaa2390 (unknown)
[2m[36m(pid=9446)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9446)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9446)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9446)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9446)[0m *** SIGSEGV (@0x0) received by PID 9446 (TID 0x7fcb6e2c7700) from PID 0; stack trace: ***
[2m[36m(pid=9526)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9526)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9526)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9526)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9526)[0m *** SIGSEGV (@0x0) received by PID 9526 (TID 0x7f5c97494700) from PID 0; stack trace: ***
[2m[36m(pid=9526)[0m     @     0x7f5c9706d390 (unknown)
[2m[36m(pid=9526)[0m     @     0x7f2d9928bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9526)[0m     @     0x7f2d9657f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9450)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9450)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9450)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9450)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9450)[0m *** SIGSEGV (@0x0) received by PID 9450 (TID 0x7ffbbcd27700) from PID 0; stack trace: ***
[2m[36m(pid=9450)[0m     @     0x7ffbbc900390 (unknown)
[2m[36m(pid=9450)[0m     @     0x7fccbeb27fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9450)[0m     @     0x7fccbbe1b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9496)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9496)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9496)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9496)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9496)[0m *** SIGSEGV (@0x0) received by PID 9496 (TID 0x7f0aadcf8700) from PID 0; stack trace: ***
[2m[36m(pid=9496)[0m     @     0x7f0aad8d1390 (unknown)
[2m[36m(pid=9496)[0m     @     0x7edbafa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9496)[0m     @     0x7edbacd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9456)[0m     @     0x7f2278551e11 at::TensorIterator::for_each()
[2m[36m(pid=9456)[0m     @     0x7f227b26ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9456)[0m     @     0x7f227b28dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9456)[0m     @     0x7f22782cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9456)[0m     @     0x7f22782c9c3f at::native::copy_impl()
[2m[36m(pid=9552)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9552)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9552)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9552)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9552)[0m *** SIGSEGV (@0x0) received by PID 9552 (TID 0x7fcd67161700) from PID 0; stack trace: ***
[2m[36m(pid=9561)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9561)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9561)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9561)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9561)[0m *** SIGSEGV (@0x0) received by PID 9561 (TID 0x7ff6ab6e8700) from PID 0; stack trace: ***
[2m[36m(pid=9561)[0m     @     0x7ff6ab2c1390 (unknown)
[2m[36m(pid=9515)[0m     @     0x7f5daecbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9515)[0m     @     0x7f5daecbfb53 at::TensorIterator::for_each()
[2m[36m(pid=9515)[0m     @     0x7f5daecbfe11 at::TensorIterator::for_each()
[2m[36m(pid=9452)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9452)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9452)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9452)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9452)[0m *** SIGSEGV (@0x0) received by PID 9452 (TID 0x7f09215b6700) from PID 0; stack trace: ***
[2m[36m(pid=9452)[0m     @     0x7f092118f390 (unknown)
[2m[36m(pid=9452)[0m     @     0x7eda2332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9452)[0m     @     0x7eda2062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9558)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9558)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9558)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9558)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9558)[0m *** SIGSEGV (@0x0) received by PID 9558 (TID 0x7f89ad693700) from PID 0; stack trace: ***
[2m[36m(pid=9558)[0m     @     0x7f89ad26c390 (unknown)
[2m[36m(pid=9541)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9541)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9541)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9541)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9541)[0m *** SIGSEGV (@0x0) received by PID 9541 (TID 0x7f5842de4700) from PID 0; stack trace: ***
[2m[36m(pid=9541)[0m     @     0x7f58429bd390 (unknown)
[2m[36m(pid=9541)[0m     @     0x7f2944a82fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9513)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9513)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9513)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9513)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9513)[0m *** SIGSEGV (@0x0) received by PID 9513 (TID 0x7f9467234700) from PID 0; stack trace: ***
[2m[36m(pid=9513)[0m     @     0x7f9466e0d390 (unknown)
[2m[36m(pid=9513)[0m     @     0x7f6569027fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9513)[0m     @     0x7f656631b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9437)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9437)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9437)[0m *** SIGSEGV (@0x0) received by PID 9437 (TID 0x7f4ea0ddf700) from PID 0; stack trace: ***
[2m[36m(pid=9437)[0m     @     0x7f4ea09b8390 (unknown)
[2m[36m(pid=9437)[0m     @     0x7f1fa2bf3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9437)[0m     @     0x7f1f9fee764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9436)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9436)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9436)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9436)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9436)[0m *** SIGSEGV (@0x0) received by PID 9436 (TID 0x7fe849755700) from PID 0; stack trace: ***
[2m[36m(pid=9436)[0m     @     0x7fe84932e390 (unknown)
[2m[36m(pid=9436)[0m     @     0x7fb94b543fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9436)[0m     @     0x7fb94883764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9436)[0m     @     0x7fb94883a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9458)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9458)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9458)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9458)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9458)[0m *** SIGSEGV (@0x0) received by PID 9458 (TID 0x7f0eff820700) from PID 0; stack trace: ***
[2m[36m(pid=9505)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9505)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9505)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9505)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9505)[0m *** SIGSEGV (@0x0) received by PID 9505 (TID 0x7fa411a1d700) from PID 0; stack trace: ***
[2m[36m(pid=9441)[0m     @     0x7f88088a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9441)[0m     @     0x7f88088a8b53 at::TensorIterator::for_each()
[2m[36m(pid=9441)[0m     @     0x7f88088a8e11 at::TensorIterator::for_each()
[2m[36m(pid=9441)[0m     @     0x7f880b5c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9441)[0m     @     0x7f880b5e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9441)[0m     @     0x7f8808622009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9519)[0m     @     0x7f075df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=9519)[0m     @     0x7f0760ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9519)[0m     @     0x7f0760ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9519)[0m     @     0x7f075dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9519)[0m     @     0x7f075dd07c3f at::native::copy_impl()
[2m[36m(pid=9519)[0m     @     0x7f075dd08ed4 at::native::copy_()
[2m[36m(pid=9448)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9448)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9448)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9448)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9448)[0m *** SIGSEGV (@0x0) received by PID 9448 (TID 0x7f50dd775700) from PID 0; stack trace: ***
[2m[36m(pid=9448)[0m     @     0x7f50dd34e390 (unknown)
[2m[36m(pid=9448)[0m     @     0x7f21df52efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9448)[0m     @     0x7f21dc82264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9448)[0m     @     0x7f21dc825977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9455)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9455)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9455)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9455)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9455)[0m *** SIGSEGV (@0x0) received by PID 9455 (TID 0x7fc3c34c3700) from PID 0; stack trace: ***
[2m[36m(pid=9455)[0m     @     0x7fc3c309c390 (unknown)
[2m[36m(pid=9455)[0m     @     0x7f94c52b8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9455)[0m     @     0x7f94c25ac64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9455)[0m     @     0x7f94c25af977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9443)[0m     @     0x7f5c784bdb53 at::TensorIterator::for_each()
[2m[36m(pid=9443)[0m     @     0x7f5c784bde11 at::TensorIterator::for_each()
[2m[36m(pid=9443)[0m     @     0x7f5c7b1d6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9443)[0m     @     0x7f5c7b1f9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9443)[0m     @     0x7f5c78237009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9443)[0m     @     0x7f5c78235c3f at::native::copy_impl()
[2m[36m(pid=9443)[0m     @     0x7f5c78236ed4 at::native::copy_()
[2m[36m(pid=9495)[0m     @     0x7f4e47951b53 at::TensorIterator::for_each()
[2m[36m(pid=9495)[0m     @     0x7f4e47951e11 at::TensorIterator::for_each()
[2m[36m(pid=9495)[0m     @     0x7f4e4a66ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9495)[0m     @     0x7f4e4a68dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9495)[0m     @     0x7f4e476cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9495)[0m     @     0x7f4e476c9c3f at::native::copy_impl()
[2m[36m(pid=9566)[0m     @     0x7f21cb12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9566)[0m     @     0x7f21cb14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9566)[0m     @     0x7f21c818c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9566)[0m     @     0x7f21c818ac3f at::native::copy_impl()
[2m[36m(pid=9566)[0m     @     0x7f21c818bed4 at::native::copy_()
[2m[36m(pid=9566)[0m     @     0x7f21c88ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9518)[0m     @     0x7ee426692b53 at::TensorIterator::for_each()
[2m[36m(pid=9518)[0m     @     0x7ee426692e11 at::TensorIterator::for_each()
[2m[36m(pid=9518)[0m     @     0x7ee4293abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9518)[0m     @     0x7ee4293cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9518)[0m     @     0x7ee42640c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9518)[0m     @     0x7ee42640ac3f at::native::copy_impl()
[2m[36m(pid=9539)[0m     @     0x7f408fad1b53 at::TensorIterator::for_each()
[2m[36m(pid=9539)[0m     @     0x7f408fad1e11 at::TensorIterator::for_each()
[2m[36m(pid=9539)[0m     @     0x7f40927eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9539)[0m     @     0x7f409280dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9539)[0m     @     0x7f408f84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9539)[0m     @     0x7f408f849c3f at::native::copy_impl()
[2m[36m(pid=9542)[0m     @     0x7f388841ab53 at::TensorIterator::for_each()
[2m[36m(pid=9542)[0m     @     0x7f388841ae11 at::TensorIterator::for_each()
[2m[36m(pid=9542)[0m     @     0x7f388b133c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9542)[0m     @     0x7f388b156cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9542)[0m     @     0x7f3888194009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9542)[0m     @     0x7f3888192c3f at::native::copy_impl()
[2m[36m(pid=9542)[0m     @     0x7f3888193ed4 at::native::copy_()
[2m[36m(pid=9500)[0m     @     0x7f1da22f1e11 at::TensorIterator::for_each()
[2m[36m(pid=9500)[0m     @     0x7f1da500ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9500)[0m     @     0x7f1da502dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9500)[0m     @     0x7f1da206b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9500)[0m     @     0x7f1da2069c3f at::native::copy_impl()
[2m[36m(pid=9500)[0m     @     0x7f1da206aed4 at::native::copy_()
[2m[36m(pid=9511)[0m     @     0x7ee91917bb53 at::TensorIterator::for_each()
[2m[36m(pid=9511)[0m     @     0x7ee91917be11 at::TensorIterator::for_each()
[2m[36m(pid=9511)[0m     @     0x7ee91be94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9511)[0m     @     0x7ee91beb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9511)[0m     @     0x7ee918ef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9511)[0m     @     0x7ee918ef3c3f at::native::copy_impl()
[2m[36m(pid=9524)[0m     @     0x7ee9c8c22b53 at::TensorIterator::for_each()
[2m[36m(pid=9524)[0m     @     0x7ee9c8c22e11 at::TensorIterator::for_each()
[2m[36m(pid=9524)[0m     @     0x7ee9cb93bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9524)[0m     @     0x7ee9cb95ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9524)[0m     @     0x7ee9c899c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9524)[0m     @     0x7ee9c899ac3f at::native::copy_impl()
[2m[36m(pid=9464)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9464)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9464)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9464)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9464)[0m *** SIGSEGV (@0x0) received by PID 9464 (TID 0x7f9de878e700) from PID 0; stack trace: ***
[2m[36m(pid=9464)[0m     @     0x7f9de8367390 (unknown)
[2m[36m(pid=9464)[0m     @     0x7f6eea507fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9464)[0m     @     0x7f6ee77fb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9464)[0m     @     0x7f6ee77fe977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9556)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9556)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9556)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9556)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9556)[0m *** SIGSEGV (@0x0) received by PID 9556 (TID 0x7fbeae910700) from PID 0; stack trace: ***
[2m[36m(pid=9556)[0m     @     0x7fbeae4e9390 (unknown)
[2m[36m(pid=9556)[0m     @     0x7f8fb0531fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9556)[0m     @     0x7f8fad82564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9556)[0m     @     0x7f8fad828977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9469)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9469)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9469)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9469)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9469)[0m *** SIGSEGV (@0x0) received by PID 9469 (TID 0x7f534ba32700) from PID 0; stack trace: ***
[2m[36m(pid=9469)[0m     @     0x7f534b60b390 (unknown)
[2m[36m(pid=9469)[0m     @     0x7f244d664fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9469)[0m     @     0x7f244a95864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9469)[0m     @     0x7f244a95b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9438)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9438)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9438)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9438)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9438)[0m *** SIGSEGV (@0x0) received by PID 9438 (TID 0x7fcb8e49e700) from PID 0; stack trace: ***
[2m[36m(pid=9438)[0m     @     0x7fcb8e077390 (unknown)
[2m[36m(pid=9438)[0m     @     0x7f9c9027cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9438)[0m     @     0x7f9c8d57064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9438)[0m     @     0x7f9c8d573977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9457)[0m     @     0x7f06aa195977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9457)[0m     @     0x7f06aa195b53 at::TensorIterator::for_each()
[2m[36m(pid=9457)[0m     @     0x7f06aa195e11 at::TensorIterator::for_each()
[2m[36m(pid=9457)[0m     @     0x7f06aceaec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9457)[0m     @     0x7f06aced1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9457)[0m     @     0x7f06a9f0f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9457)[0m     @     0x7f06a9f0dc3f at::native::copy_impl()
[2m[36m(pid=9454)[0m     @     0x7efecb063b53 at::TensorIterator::for_each()
[2m[36m(pid=9454)[0m     @     0x7efecb063e11 at::TensorIterator::for_each()
[2m[36m(pid=9454)[0m     @     0x7efecdd7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9454)[0m     @     0x7efecdd9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9454)[0m     @     0x7efecaddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9454)[0m     @     0x7efecaddbc3f at::native::copy_impl()
[2m[36m(pid=9529)[0m     @     0x7ed4d3ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=9529)[0m     @     0x7ed4d67eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9529)[0m     @     0x7ed4d680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9529)[0m     @     0x7ed4d384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9529)[0m     @     0x7ed4d3849c3f at::native::copy_impl()
[2m[36m(pid=9529)[0m     @     0x7ed4d384aed4 at::native::copy_()
[2m[36m(pid=9547)[0m     @     0x7f72b1aeab53 at::TensorIterator::for_each()
[2m[36m(pid=9547)[0m     @     0x7f72b1aeae11 at::TensorIterator::for_each()
[2m[36m(pid=9547)[0m     @     0x7f72b4803c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9547)[0m     @     0x7f72b4826cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9547)[0m     @     0x7f72b1864009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9547)[0m     @     0x7f72b1862c3f at::native::copy_impl()
[2m[36m(pid=9547)[0m     @     0x7f72b1863ed4 at::native::copy_()
[2m[36m(pid=9516)[0m     @     0x7ee1a9c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9516)[0m     @     0x7ee1a9c78b53 at::TensorIterator::for_each()
[2m[36m(pid=9516)[0m     @     0x7ee1a9c78e11 at::TensorIterator::for_each()
[2m[36m(pid=9516)[0m     @     0x7ee1ac991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9516)[0m     @     0x7ee1ac9b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9516)[0m     @     0x7ee1a99f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9516)[0m     @     0x7ee1a99f0c3f at::native::copy_impl()
[2m[36m(pid=9570)[0m     @     0x7eeb21392e11 at::TensorIterator::for_each()
[2m[36m(pid=9570)[0m     @     0x7eeb240abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9570)[0m     @     0x7eeb240cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9570)[0m     @     0x7eeb2110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9570)[0m     @     0x7eeb2110ac3f at::native::copy_impl()
[2m[36m(pid=9570)[0m     @     0x7eeb2110bed4 at::native::copy_()
[2m[36m(pid=9570)[0m     @     0x7eeb2184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9506)[0m     @     0x7f6d9613dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9506)[0m     @     0x7f6d96160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9506)[0m     @     0x7f6d9319e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9506)[0m     @     0x7f6d9319cc3f at::native::copy_impl()
[2m[36m(pid=9506)[0m     @     0x7f6d9319ded4 at::native::copy_()
[2m[36m(pid=9506)[0m     @     0x7f6d938e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9506)[0m     @     0x7f6d939e8148 at::Tensor::copy_()
[2m[36m(pid=9536)[0m     @     0x7f19cf216e11 at::TensorIterator::for_each()
[2m[36m(pid=9536)[0m     @     0x7f19d1f2fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9536)[0m     @     0x7f19d1f52cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9536)[0m     @     0x7f19cef90009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9536)[0m     @     0x7f19cef8ec3f at::native::copy_impl()
[2m[36m(pid=9536)[0m     @     0x7f19cef8fed4 at::native::copy_()
[2m[36m(pid=9447)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9447)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9447)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9447)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9447)[0m *** SIGSEGV (@0x0) received by PID 9447 (TID 0x7f49e12ff700) from PID 0; stack trace: ***
[2m[36m(pid=9447)[0m     @     0x7f49e0ed8390 (unknown)
[2m[36m(pid=9447)[0m     @     0x7f1ae30f6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9447)[0m     @     0x7f1ae03ea64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9447)[0m     @     0x7f1ae03ed977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9447)[0m     @     0x7f1ae03edb53 at::TensorIterator::for_each()
[2m[36m(pid=9492)[0m     @     0x7f1edae4cb53 at::TensorIterator::for_each()
[2m[36m(pid=9492)[0m     @     0x7f1edae4ce11 at::TensorIterator::for_each()
[2m[36m(pid=9492)[0m     @     0x7f1eddb65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9492)[0m     @     0x7f1eddb88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9492)[0m     @     0x7f1edabc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9492)[0m     @     0x7f1edabc4c3f at::native::copy_impl()
[2m[36m(pid=9435)[0m     @     0x7f205da67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9435)[0m     @     0x7f205da67b53 at::TensorIterator::for_each()
[2m[36m(pid=9435)[0m     @     0x7f205da67e11 at::TensorIterator::for_each()
[2m[36m(pid=9435)[0m     @     0x7f2060780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9435)[0m     @     0x7f20607a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9435)[0m     @     0x7f205d7e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9435)[0m     @     0x7f205d7dfc3f at::native::copy_impl()
[2m[36m(pid=9512)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9512)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9512)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9512)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9512)[0m *** SIGSEGV (@0x0) received by PID 9512 (TID 0x7f004a625700) from PID 0; stack trace: ***
[2m[36m(pid=9512)[0m     @     0x7f004a1fe390 (unknown)
[2m[36m(pid=9512)[0m     @     0x7ed14c3b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9512)[0m     @     0x7ed1496a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9512)[0m     @     0x7ed1496a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9512)[0m     @     0x7ed1496a8b53 at::TensorIterator::for_each()
[2m[36m(pid=9445)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9445)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9445)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9445)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9445)[0m *** SIGSEGV (@0x0) received by PID 9445 (TID 0x7f36bd6af700) from PID 0; stack trace: ***
[2m[36m(pid=9445)[0m     @     0x7f36bd288390 (unknown)
[2m[36m(pid=9445)[0m     @     0x7f07bf49cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9445)[0m     @     0x7f07bc79064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9445)[0m     @     0x7f07bc793977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9522)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9522)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9522)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9522)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9522)[0m *** SIGSEGV (@0x0) received by PID 9522 (TID 0x7f29529b2700) from PID 0; stack trace: ***
[2m[36m(pid=9522)[0m     @     0x7f295258b390 (unknown)
[2m[36m(pid=9522)[0m     @     0x7efa545c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9522)[0m     @     0x7efa518b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9514)[0m     @     0x7ee05ffa4e11 at::TensorIterator::for_each()
[2m[36m(pid=9514)[0m     @     0x7ee062cbdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9514)[0m     @     0x7ee062ce0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9514)[0m     @     0x7ee05fd1e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9514)[0m     @     0x7ee05fd1cc3f at::native::copy_impl()
[2m[36m(pid=9514)[0m     @     0x7ee05fd1ded4 at::native::copy_()
[2m[36m(pid=9514)[0m     @     0x7ee0604605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9535)[0m     @     0x7f29e3a64009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9535)[0m     @     0x7f29e3a62c3f at::native::copy_impl()
[2m[36m(pid=9535)[0m     @     0x7f29e3a63ed4 at::native::copy_()
[2m[36m(pid=9535)[0m     @     0x7f29e41a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9502)[0m     @     0x7ef5f510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9502)[0m     @     0x7ef5f510ac3f at::native::copy_impl()
[2m[36m(pid=9502)[0m     @     0x7ef5f510bed4 at::native::copy_()
[2m[36m(pid=9502)[0m     @     0x7ef5f584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9545)[0m     @     0x7f6aca4fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9545)[0m     @     0x7f6aca603148 at::Tensor::copy_()
[2m[36m(pid=9545)[0m     @     0x7f6acc1fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9545)[0m     @     0x7f6aca4fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9548)[0m     @     0x7f72d007ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9548)[0m     @     0x7f72d00a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9548)[0m     @     0x7f72cd0df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9548)[0m     @     0x7f72cd0ddc3f at::native::copy_impl()
[2m[36m(pid=9548)[0m     @     0x7f72cd0deed4 at::native::copy_()
[2m[36m(pid=9528)[0m     @     0x7f39d6bc5ed4 at::native::copy_()
[2m[36m(pid=9528)[0m     @     0x7f39d73085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9528)[0m     @     0x7f39d7410148 at::Tensor::copy_()
[2m[36m(pid=9465)[0m     @     0x7f953c319009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9465)[0m     @     0x7f953c317c3f at::native::copy_impl()
[2m[36m(pid=9465)[0m     @     0x7f953c318ed4 at::native::copy_()
[2m[36m(pid=9465)[0m     @     0x7f953ca5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9534)[0m     @     0x7fcac733c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9534)[0m     @     0x7fcac733ac3f at::native::copy_impl()
[2m[36m(pid=9534)[0m     @     0x7fcac733bed4 at::native::copy_()
[2m[36m(pid=9534)[0m     @     0x7fcac7a7e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9562)[0m     @     0x7f0e2c6d4e11 at::TensorIterator::for_each()
[2m[36m(pid=9562)[0m     @     0x7f0e2f3edc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9562)[0m     @     0x7f0e2f410cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9562)[0m     @     0x7f0e2c44e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9562)[0m     @     0x7f0e2c44cc3f at::native::copy_impl()
[2m[36m(pid=9562)[0m     @     0x7f0e2c44ded4 at::native::copy_()
[2m[36m(pid=9554)[0m     @     0x7ed7e5e39ed4 at::native::copy_()
[2m[36m(pid=9554)[0m     @     0x7ed7e657c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9554)[0m     @     0x7ed7e6684148 at::Tensor::copy_()
[2m[36m(pid=9508)[0m     @     0x7ecd7c570c3f at::native::copy_impl()
[2m[36m(pid=9508)[0m     @     0x7ecd7c571ed4 at::native::copy_()
[2m[36m(pid=9508)[0m     @     0x7ecd7ccb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9508)[0m     @     0x7ecd7cdbc148 at::Tensor::copy_()
[2m[36m(pid=9544)[0m     @     0x7ed06d08bed4 at::native::copy_()
[2m[36m(pid=9544)[0m     @     0x7ed06d7ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9544)[0m     @     0x7ed06d8d6148 at::Tensor::copy_()
[2m[36m(pid=9510)[0m     @     0x7f01a508ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9510)[0m     @     0x7f01a50adcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9510)[0m     @     0x7f01a20eb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9510)[0m     @     0x7f01a20e9c3f at::native::copy_impl()
[2m[36m(pid=9510)[0m     @     0x7f01a20eaed4 at::native::copy_()
[2m[36m(pid=9538)[0m     @     0x7f769b0c5ed4 at::native::copy_()
[2m[36m(pid=9538)[0m     @     0x7f769b8085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9538)[0m     @     0x7f769b910148 at::Tensor::copy_()
[2m[36m(pid=9467)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9467)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9467)[0m *** SIGSEGV (@0x0) received by PID 9467 (TID 0x7f3a09bd6700) from PID 0; stack trace: ***
[2m[36m(pid=9467)[0m     @     0x7f3a097af390 (unknown)
[2m[36m(pid=9467)[0m     @     0x7f0b0b96bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9467)[0m     @     0x7f0b08c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9467)[0m     @     0x7f0b08c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9459)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9459)[0m *** SIGSEGV (@0x0) received by PID 9459 (TID 0x7fa5c3b61700) from PID 0; stack trace: ***
[2m[36m(pid=9459)[0m     @     0x7fa5c373a390 (unknown)
[2m[36m(pid=9459)[0m     @     0x7f76c5896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9459)[0m     @     0x7f76c2b8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9459)[0m     @     0x7f76c2b8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9459)[0m     @     0x7f76c2b8db53 at::TensorIterator::for_each()
[2m[36m(pid=9557)[0m     @     0x7fafeeddced4 at::native::copy_()
[2m[36m(pid=9557)[0m     @     0x7fafef51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9557)[0m     @     0x7fafef627148 at::Tensor::copy_()
[2m[36m(pid=9557)[0m     @     0x7faff121e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9557)[0m     @     0x7fafef51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9503)[0m     @     0x7ff47168b390 (unknown)
[2m[36m(pid=9503)[0m     @     0x7fc57387efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9503)[0m     @     0x7fc570b7264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9503)[0m     @     0x7fc570b75977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9503)[0m     @     0x7fc570b75b53 at::TensorIterator::for_each()
[2m[36m(pid=9439)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=9439)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=9439)[0m *** Aborted at 1604573896 (unix time) try "date -d @1604573896" if you are using GNU date ***
[2m[36m(pid=9439)[0m PC: @                0x0 (unknown)
[2m[36m(pid=9439)[0m *** SIGSEGV (@0x0) received by PID 9439 (TID 0x7f38d418e700) from PID 0; stack trace: ***
[2m[36m(pid=9439)[0m     @     0x7f38d3d67390 (unknown)
[2m[36m(pid=9439)[0m     @     0x7f09d5f70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9569)[0m     @     0x7fb7ae293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9569)[0m     @     0x7fb7ab58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9569)[0m     @     0x7fb7ab58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9569)[0m     @     0x7fb7ab58ab53 at::TensorIterator::for_each()
[2m[36m(pid=9569)[0m     @     0x7fb7ab58ae11 at::TensorIterator::for_each()
[2m[36m(pid=9461)[0m     @     0x7fadeae3c390 (unknown)
[2m[36m(pid=9461)[0m     @     0x7f7eed067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9461)[0m     @     0x7f7eea35b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9461)[0m     @     0x7f7eea35e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9440)[0m     @     0x7ef1cb30fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9440)[0m     @     0x7ef1cb332cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9440)[0m     @     0x7ef1c8370009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9440)[0m     @     0x7ef1c836ec3f at::native::copy_impl()
[2m[36m(pid=9440)[0m     @     0x7ef1c836fed4 at::native::copy_()
[2m[36m(pid=9440)[0m     @     0x7ef1c8ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9442)[0m     @     0x7f5aedb49390 (unknown)
[2m[36m(pid=9442)[0m     @     0x7f2befc81fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9442)[0m     @     0x7f2becf7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9442)[0m     @     0x7f2becf78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9434)[0m     @     0x7f40ecd9964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9434)[0m     @     0x7f40ecd9c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9434)[0m     @     0x7f40ecd9cb53 at::TensorIterator::for_each()
[2m[36m(pid=9434)[0m     @     0x7f40ecd9ce11 at::TensorIterator::for_each()
[2m[36m(pid=9434)[0m     @     0x7f40efab5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9507)[0m     @     0x7ef59039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9507)[0m     @     0x7ef59039bc3f at::native::copy_impl()
[2m[36m(pid=9507)[0m     @     0x7ef59039ced4 at::native::copy_()
[2m[36m(pid=9507)[0m     @     0x7ef590adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9507)[0m     @     0x7ef590be7148 at::Tensor::copy_()
[2m[36m(pid=9507)[0m     @     0x7ef5927de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9453)[0m     @     0x7f64baa76009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9453)[0m     @     0x7f64baa74c3f at::native::copy_impl()
[2m[36m(pid=9453)[0m     @     0x7f64baa75ed4 at::native::copy_()
[2m[36m(pid=9453)[0m     @     0x7f64bb1b85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9453)[0m     @     0x7f64bb2c0148 at::Tensor::copy_()
[2m[36m(pid=9517)[0m     @     0x7fa935eab390 (unknown)
[2m[36m(pid=9517)[0m     @     0x7f7a3809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9517)[0m     @     0x7f7a3538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9553)[0m     @     0x7f505062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9553)[0m     @     0x7f5050623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9553)[0m     @     0x7f5050623b53 at::TensorIterator::for_each()
[2m[36m(pid=9553)[0m     @     0x7f5050623e11 at::TensorIterator::for_each()
[2m[36m(pid=9553)[0m     @     0x7f505333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9553)[0m     @     0x7f505335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9504)[0m     @     0x7ff828af3390 (unknown)
[2m[36m(pid=9504)[0m     @     0x7fc92aa9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9504)[0m     @     0x7fc927d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9504)[0m     @     0x7fc927d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9504)[0m     @     0x7fc927d93b53 at::TensorIterator::for_each()
[2m[36m(pid=9470)[0m     @     0x7f286d39f390 (unknown)
[2m[36m(pid=9470)[0m     @     0x7ef96f5b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9470)[0m     @     0x7ef96c8a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9470)[0m     @     0x7ef96c8a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9470)[0m     @     0x7ef96c8a8b53 at::TensorIterator::for_each()
[2m[36m(pid=9449)[0m     @     0x7f7308815977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9449)[0m     @     0x7f7308815b53 at::TensorIterator::for_each()
[2m[36m(pid=9449)[0m     @     0x7f7308815e11 at::TensorIterator::for_each()
[2m[36m(pid=9449)[0m     @     0x7f730b52ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9449)[0m     @     0x7f730b551cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9509)[0m     @     0x7f2910c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9509)[0m     @     0x7f290df8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9509)[0m     @     0x7f290df8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9446)[0m     @     0x7fcb6dea0390 (unknown)
[2m[36m(pid=9446)[0m     @     0x7f9c6ffeafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9446)[0m     @     0x7f9c6d2de64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9446)[0m     @     0x7f9c6d2e1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9446)[0m     @     0x7f9c6d2e1b53 at::TensorIterator::for_each()
[2m[36m(pid=9526)[0m     @     0x7f2d96582977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9526)[0m     @     0x7f2d96582b53 at::TensorIterator::for_each()
[2m[36m(pid=9526)[0m     @     0x7f2d96582e11 at::TensorIterator::for_each()
[2m[36m(pid=9526)[0m     @     0x7f2d9929bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9526)[0m     @     0x7f2d992becfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9450)[0m     @     0x7fccbbe1e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9450)[0m     @     0x7fccbbe1eb53 at::TensorIterator::for_each()
[2m[36m(pid=9450)[0m     @     0x7fccbbe1ee11 at::TensorIterator::for_each()
[2m[36m(pid=9450)[0m     @     0x7fccbeb37c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9450)[0m     @     0x7fccbeb5acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9496)[0m     @     0x7edbacd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9496)[0m     @     0x7edbacd67b53 at::TensorIterator::for_each()
[2m[36m(pid=9496)[0m     @     0x7edbacd67e11 at::TensorIterator::for_each()
[2m[36m(pid=9496)[0m     @     0x7edbafa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9496)[0m     @     0x7edbafaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9456)[0m     @     0x7f22782caed4 at::native::copy_()
[2m[36m(pid=9456)[0m     @     0x7f2278a0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9552)[0m     @     0x7fcd66d3a390 (unknown)
[2m[36m(pid=9552)[0m     @     0x7f9e68f46fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9552)[0m     @     0x7f9e6623a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9552)[0m     @     0x7f9e6623d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9552)[0m     @     0x7f9e6623db53 at::TensorIterator::for_each()
[2m[36m(pid=9552)[0m     @     0x7f9e6623de11 at::TensorIterator::for_each()
[2m[36m(pid=9561)[0m     @     0x7fc7ad4a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9561)[0m     @     0x7fc7aa79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9561)[0m     @     0x7fc7aa797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9561)[0m     @     0x7fc7aa797b53 at::TensorIterator::for_each()
[2m[36m(pid=9561)[0m     @     0x7fc7aa797e11 at::TensorIterator::for_each()
[2m[36m(pid=9515)[0m     @     0x7f5db19d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9515)[0m     @     0x7f5db19fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9515)[0m     @     0x7f5daea39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9515)[0m     @     0x7f5daea37c3f at::native::copy_impl()
[2m[36m(pid=9515)[0m     @     0x7f5daea38ed4 at::native::copy_()
[2m[36m(pid=9515)[0m     @     0x7f5daf17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9452)[0m     @     0x7eda20623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9452)[0m     @     0x7eda20623b53 at::TensorIterator::for_each()
[2m[36m(pid=9452)[0m     @     0x7eda20623e11 at::TensorIterator::for_each()
[2m[36m(pid=9452)[0m     @     0x7eda2333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9558)[0m     @     0x7f5aaf32cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9558)[0m     @     0x7f5aac62064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9558)[0m     @     0x7f5aac623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9558)[0m     @     0x7f5aac623b53 at::TensorIterator::for_each()
[2m[36m(pid=9558)[0m     @     0x7f5aac623e11 at::TensorIterator::for_each()
[2m[36m(pid=9541)[0m     @     0x7f2941d7664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9541)[0m     @     0x7f2941d79977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9541)[0m     @     0x7f2941d79b53 at::TensorIterator::for_each()
[2m[36m(pid=9541)[0m     @     0x7f2941d79e11 at::TensorIterator::for_each()
[2m[36m(pid=9513)[0m     @     0x7f656631e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9513)[0m     @     0x7f656631eb53 at::TensorIterator::for_each()
[2m[36m(pid=9513)[0m     @     0x7f656631ee11 at::TensorIterator::for_each()
[2m[36m(pid=9513)[0m     @     0x7f6569037c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9513)[0m     @     0x7f656905acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9437)[0m     @     0x7f1f9feea977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9437)[0m     @     0x7f1f9feeab53 at::TensorIterator::for_each()
[2m[36m(pid=9437)[0m     @     0x7f1f9feeae11 at::TensorIterator::for_each()
[2m[36m(pid=9436)[0m     @     0x7fb94883ab53 at::TensorIterator::for_each()
[2m[36m(pid=9436)[0m     @     0x7fb94883ae11 at::TensorIterator::for_each()
[2m[36m(pid=9436)[0m     @     0x7fb94b553c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9436)[0m     @     0x7fb94b576cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9458)[0m     @     0x7f0eff3f9390 (unknown)
[2m[36m(pid=9458)[0m     @     0x7ee0014a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9458)[0m     @     0x7edffe79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9458)[0m     @     0x7edffe797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9505)[0m     @     0x7fa4115f6390 (unknown)
[2m[36m(pid=9505)[0m     @     0x7f751375afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=9505)[0m     @     0x7f7510a4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9505)[0m     @     0x7f7510a51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9441)[0m     @     0x7f8808620c3f at::native::copy_impl()
[2m[36m(pid=9441)[0m     @     0x7f8808621ed4 at::native::copy_()
[2m[36m(pid=9441)[0m     @     0x7f8808d645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9519)[0m     @     0x7f075e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9519)[0m     @     0x7f075e553148 at::Tensor::copy_()
[2m[36m(pid=9519)[0m     @     0x7f076014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9448)[0m     @     0x7f21dc825b53 at::TensorIterator::for_each()
[2m[36m(pid=9448)[0m     @     0x7f21dc825e11 at::TensorIterator::for_each()
[2m[36m(pid=9448)[0m     @     0x7f21df53ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9448)[0m     @     0x7f21df561cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9455)[0m     @     0x7f94c25afb53 at::TensorIterator::for_each()
[2m[36m(pid=9455)[0m     @     0x7f94c25afe11 at::TensorIterator::for_each()
[2m[36m(pid=9455)[0m     @     0x7f94c52c8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9455)[0m     @     0x7f94c52ebcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9443)[0m     @     0x7f5c789795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9443)[0m     @     0x7f5c78a81148 at::Tensor::copy_()
[2m[36m(pid=9443)[0m     @     0x7f5c7a678989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9495)[0m     @     0x7f4e476caed4 at::native::copy_()
[2m[36m(pid=9495)[0m     @     0x7f4e47e0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9566)[0m     @     0x7f21c89d6148 at::Tensor::copy_()
[2m[36m(pid=9566)[0m     @     0x7f21ca5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9566)[0m     @     0x7f21c88ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9518)[0m     @     0x7ee42640bed4 at::native::copy_()
[2m[36m(pid=9518)[0m     @     0x7ee426b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9539)[0m     @     0x7f408f84aed4 at::native::copy_()
[2m[36m(pid=9539)[0m     @     0x7f408ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9539)[0m     @     0x7f4090095148 at::Tensor::copy_()
[2m[36m(pid=9542)[0m     @     0x7f38888d65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9542)[0m     @     0x7f38889de148 at::Tensor::copy_()
[2m[36m(pid=9542)[0m     @     0x7f388a5d5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9500)[0m     @     0x7f1da27ad5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9500)[0m     @     0x7f1da28b5148 at::Tensor::copy_()
[2m[36m(pid=9500)[0m     @     0x7f1da44ac989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9511)[0m     @     0x7ee918ef4ed4 at::native::copy_()
[2m[36m(pid=9511)[0m     @     0x7ee9196375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9511)[0m     @     0x7ee91973f148 at::Tensor::copy_()
[2m[36m(pid=9524)[0m     @     0x7ee9c899bed4 at::native::copy_()
[2m[36m(pid=9524)[0m     @     0x7ee9c90de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9524)[0m     @     0x7ee9c91e6148 at::Tensor::copy_()
[2m[36m(pid=9464)[0m     @     0x7f6ee77feb53 at::TensorIterator::for_each()
[2m[36m(pid=9464)[0m     @     0x7f6ee77fee11 at::TensorIterator::for_each()
[2m[36m(pid=9464)[0m     @     0x7f6eea517c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9464)[0m     @     0x7f6eea53acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9464)[0m     @     0x7f6ee7578009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9464)[0m     @     0x7f6ee7576c3f at::native::copy_impl()
[2m[36m(pid=9556)[0m     @     0x7f8fad828b53 at::TensorIterator::for_each()
[2m[36m(pid=9556)[0m     @     0x7f8fad828e11 at::TensorIterator::for_each()
[2m[36m(pid=9556)[0m     @     0x7f8fb0541c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9556)[0m     @     0x7f8fb0564cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9556)[0m     @     0x7f8fad5a2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9556)[0m     @     0x7f8fad5a0c3f at::native::copy_impl()
[2m[36m(pid=9469)[0m     @     0x7f244a95bb53 at::TensorIterator::for_each()
[2m[36m(pid=9469)[0m     @     0x7f244a95be11 at::TensorIterator::for_each()
[2m[36m(pid=9469)[0m     @     0x7f244d674c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9469)[0m     @     0x7f244d697cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9469)[0m     @     0x7f244a6d5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9469)[0m     @     0x7f244a6d3c3f at::native::copy_impl()
[2m[36m(pid=9438)[0m     @     0x7f9c8d573b53 at::TensorIterator::for_each()
[2m[36m(pid=9438)[0m     @     0x7f9c8d573e11 at::TensorIterator::for_each()
[2m[36m(pid=9438)[0m     @     0x7f9c9028cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9438)[0m     @     0x7f9c902afcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9438)[0m     @     0x7f9c8d2ed009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9457)[0m     @     0x7f06a9f0eed4 at::native::copy_()
[2m[36m(pid=9457)[0m     @     0x7f06aa6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9457)[0m     @     0x7f06aa759148 at::Tensor::copy_()
[2m[36m(pid=9457)[0m     @     0x7f06ac350989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9454)[0m     @     0x7efecaddced4 at::native::copy_()
[2m[36m(pid=9454)[0m     @     0x7efecb51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9454)[0m     @     0x7efecb627148 at::Tensor::copy_()
[2m[36m(pid=9454)[0m     @     0x7efecd21e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9529)[0m     @     0x7ed4d3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9529)[0m     @     0x7ed4d4095148 at::Tensor::copy_()
[2m[36m(pid=9529)[0m     @     0x7ed4d5c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9529)[0m     @     0x7ed4d3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9547)[0m     @     0x7f72b1fa65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9547)[0m     @     0x7f72b20ae148 at::Tensor::copy_()
[2m[36m(pid=9547)[0m     @     0x7f72b3ca5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9547)[0m     @     0x7f72b1fa65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9516)[0m     @     0x7ee1a99f1ed4 at::native::copy_()
[2m[36m(pid=9516)[0m     @     0x7ee1aa1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9516)[0m     @     0x7ee1aa23c148 at::Tensor::copy_()
[2m[36m(pid=9516)[0m     @     0x7ee1abe33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9570)[0m     @     0x7eeb21956148 at::Tensor::copy_()
[2m[36m(pid=9570)[0m     @     0x7eeb2354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9570)[0m     @     0x7eeb2184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9570)[0m     @     0x7eeb21956148 at::Tensor::copy_()
[2m[36m(pid=9570)[0m     @     0x7eeb27c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9570)[0m     @     0x55a1b1bdefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9570)[0m     @     0x55a1b1b39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9570)[0m     @     0x55a1b1bc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9570)[0m     @     0x55a1b1bc5a20 method_vectorcall
[2m[36m(pid=9570)[0m     @     0x55a1b1b39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9570)[0m     @     0x55a1b1bc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9570)[0m     @     0x55a1b1bc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9570)[0m     @     0x55a1b1b3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9570)[0m     @     0x55a1b1bc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9570)[0m     @     0x55a1b1bc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9570)[0m     @     0x55a1b1b3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9506)[0m     @     0x7f6d955df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9506)[0m     @     0x7f6d938e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9506)[0m     @     0x7f6d939e8148 at::Tensor::copy_()
[2m[36m(pid=9506)[0m     @     0x7f6d99c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9506)[0m     @     0x557956992fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9506)[0m     @     0x5579568edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9506)[0m     @     0x557956978baf _PyEval_EvalCodeWithName
[2m[36m(pid=9506)[0m     @     0x557956979a20 method_vectorcall
[2m[36m(pid=9506)[0m     @     0x5579568edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9506)[0m     @     0x557956978baf _PyEval_EvalCodeWithName
[2m[36m(pid=9506)[0m     @     0x557956979643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9506)[0m     @     0x5579568ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9506)[0m     @     0x557956978baf _PyEval_EvalCodeWithName
[2m[36m(pid=9506)[0m     @     0x557956979643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9506)[0m     @     0x5579568ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9506)[0m     @     0x557956978baf _PyEval_EvalCodeWithName
[2m[36m(pid=9506)[0m     @     0x557956979643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9506)[0m     @     0x5579568ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9506)[0m     @     0x557956978baf _PyEval_EvalCodeWithName
[2m[36m(pid=9536)[0m     @     0x7f19cf6d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9536)[0m     @     0x7f19cf7da148 at::Tensor::copy_()
[2m[36m(pid=9536)[0m     @     0x7f19d13d1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9536)[0m     @     0x7f19cf6d25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9447)[0m     @     0x7f1ae03ede11 at::TensorIterator::for_each()
[2m[36m(pid=9447)[0m     @     0x7f1ae3106c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9447)[0m     @     0x7f1ae3129cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9447)[0m     @     0x7f1ae0167009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9447)[0m     @     0x7f1ae0165c3f at::native::copy_impl()
[2m[36m(pid=9447)[0m     @     0x7f1ae0166ed4 at::native::copy_()
[2m[36m(pid=9492)[0m     @     0x7f1edabc5ed4 at::native::copy_()
[2m[36m(pid=9492)[0m     @     0x7f1edb3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9492)[0m     @     0x7f1edb410148 at::Tensor::copy_()
[2m[36m(pid=9492)[0m     @     0x7f1edd007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9435)[0m     @     0x7f205d7e0ed4 at::native::copy_()
[2m[36m(pid=9435)[0m     @     0x7f205df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9435)[0m     @     0x7f205e02b148 at::Tensor::copy_()
[2m[36m(pid=9435)[0m     @     0x7f205fc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9512)[0m     @     0x7ed1496a8e11 at::TensorIterator::for_each()
[2m[36m(pid=9512)[0m     @     0x7ed14c3c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9512)[0m     @     0x7ed14c3e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9512)[0m     @     0x7ed149422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9512)[0m     @     0x7ed149420c3f at::native::copy_impl()
[2m[36m(pid=9445)[0m     @     0x7f07bc793b53 at::TensorIterator::for_each()
[2m[36m(pid=9445)[0m     @     0x7f07bc793e11 at::TensorIterator::for_each()
[2m[36m(pid=9445)[0m     @     0x7f07bf4acc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9445)[0m     @     0x7f07bf4cfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9445)[0m     @     0x7f07bc50d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9445)[0m     @     0x7f07bc50bc3f at::native::copy_impl()
[2m[36m(pid=9522)[0m     @     0x7efa518b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9522)[0m     @     0x7efa518b9b53 at::TensorIterator::for_each()
[2m[36m(pid=9522)[0m     @     0x7efa518b9e11 at::TensorIterator::for_each()
[2m[36m(pid=9522)[0m     @     0x7efa545d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9514)[0m     @     0x7ee060568148 at::Tensor::copy_()
[2m[36m(pid=9514)[0m     @     0x7ee06215f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9514)[0m     @     0x7ee0604605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9514)[0m     @     0x7ee060568148 at::Tensor::copy_()
[2m[36m(pid=9514)[0m     @     0x7ee06681ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9514)[0m     @     0x55bb55941fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9514)[0m     @     0x55bb5589cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9514)[0m     @     0x55bb55927baf _PyEval_EvalCodeWithName
[2m[36m(pid=9514)[0m     @     0x55bb55928a20 method_vectorcall
[2m[36m(pid=9514)[0m     @     0x55bb5589cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9514)[0m     @     0x55bb55927baf _PyEval_EvalCodeWithName
[2m[36m(pid=9514)[0m     @     0x55bb55928643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9535)[0m     @     0x7f29e42ae148 at::Tensor::copy_()
[2m[36m(pid=9535)[0m     @     0x7f29e5ea5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9535)[0m     @     0x7f29e41a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9535)[0m     @     0x7f29e42ae148 at::Tensor::copy_()
[2m[36m(pid=9502)[0m     @     0x7ef5f5956148 at::Tensor::copy_()
[2m[36m(pid=9502)[0m     @     0x7ef5f754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9502)[0m     @     0x7ef5f584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9502)[0m     @     0x7ef5f5956148 at::Tensor::copy_()
[2m[36m(pid=9545)[0m     @     0x7f6aca603148 at::Tensor::copy_()
[2m[36m(pid=9545)[0m     @     0x7f6ad08b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9545)[0m     @     0x55ca85704fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9545)[0m     @     0x55ca8565fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9545)[0m     @     0x55ca856eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9545)[0m     @     0x55ca856eba20 method_vectorcall
[2m[36m(pid=9545)[0m     @     0x55ca8565fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9545)[0m     @     0x55ca856eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9545)[0m     @     0x55ca856eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9545)[0m     @     0x55ca85660689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9545)[0m     @     0x55ca856eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9545)[0m     @     0x55ca856eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9545)[0m     @     0x55ca85660689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9545)[0m     @     0x55ca856eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9545)[0m     @     0x55ca856eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9545)[0m     @     0x55ca85660689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9545)[0m     @     0x55ca856eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9548)[0m     @     0x7f72cd8215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9548)[0m     @     0x7f72cd929148 at::Tensor::copy_()
[2m[36m(pid=9548)[0m     @     0x7f72cf520989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9548)[0m     @     0x7f72cd8215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9528)[0m     @     0x7f39d9007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9528)[0m     @     0x7f39d73085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9528)[0m     @     0x7f39d7410148 at::Tensor::copy_()
[2m[36m(pid=9528)[0m     @     0x7f39dd6c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9528)[0m     @     0x55d93eea3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9528)[0m     @     0x55d93edfeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9528)[0m     @     0x55d93ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=9528)[0m     @     0x55d93ee8aa20 method_vectorcall
[2m[36m(pid=9528)[0m     @     0x55d93edfebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9528)[0m     @     0x55d93ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=9528)[0m     @     0x55d93ee8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9528)[0m     @     0x55d93edff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9528)[0m     @     0x55d93ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=9528)[0m     @     0x55d93ee8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9528)[0m     @     0x55d93edff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9528)[0m     @     0x55d93ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=9528)[0m     @     0x55d93ee8a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9528)[0m     @     0x55d93edff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9528)[0m     @     0x55d93ee89baf _PyEval_EvalCodeWithName
[2m[36m(pid=9465)[0m     @     0x7f953cb63148 at::Tensor::copy_()
[2m[36m(pid=9465)[0m     @     0x7f953e75a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9465)[0m     @     0x7f953ca5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9465)[0m     @     0x7f953cb63148 at::Tensor::copy_()
[2m[36m(pid=9534)[0m     @     0x7fcac7b86148 at::Tensor::copy_()
[2m[36m(pid=9534)[0m     @     0x7fcac977d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9534)[0m     @     0x7fcac7a7e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9534)[0m     @     0x7fcac7b86148 at::Tensor::copy_()
[2m[36m(pid=9534)[0m     @     0x7fcacde3cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9534)[0m     @     0x56200b2eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9534)[0m     @     0x56200b245b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9562)[0m     @     0x7f0e2cb905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9562)[0m     @     0x7f0e2cc98148 at::Tensor::copy_()
[2m[36m(pid=9562)[0m     @     0x7f0e2e88f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9562)[0m     @     0x7f0e2cb905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9554)[0m     @     0x7ed7e827b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9554)[0m     @     0x7ed7e657c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9554)[0m     @     0x7ed7e6684148 at::Tensor::copy_()
[2m[36m(pid=9508)[0m     @     0x7ecd7e9b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9508)[0m     @     0x7ecd7ccb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9508)[0m     @     0x7ecd7cdbc148 at::Tensor::copy_()
[2m[36m(pid=9508)[0m     @     0x7ecd83072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9508)[0m     @     0x5624079aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9508)[0m     @     0x562407905b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9508)[0m     @     0x562407990baf _PyEval_EvalCodeWithName
[2m[36m(pid=9508)[0m     @     0x562407991a20 method_vectorcall
[2m[36m(pid=9508)[0m     @     0x562407905bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9508)[0m     @     0x562407990baf _PyEval_EvalCodeWithName
[2m[36m(pid=9508)[0m     @     0x562407991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9508)[0m     @     0x562407906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9508)[0m     @     0x562407990baf _PyEval_EvalCodeWithName
[2m[36m(pid=9508)[0m     @     0x562407991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9508)[0m     @     0x562407906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9508)[0m     @     0x562407990baf _PyEval_EvalCodeWithName
[2m[36m(pid=9508)[0m     @     0x562407991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9508)[0m     @     0x562407906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9508)[0m     @     0x562407990baf _PyEval_EvalCodeWithName
[2m[36m(pid=9544)[0m     @     0x7ed06f4cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9544)[0m     @     0x7ed06d7ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9544)[0m     @     0x7ed06d8d6148 at::Tensor::copy_()
[2m[36m(pid=9544)[0m     @     0x7ed073b8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9544)[0m     @     0x55fa126ccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9544)[0m     @     0x55fa12627b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9544)[0m     @     0x55fa126b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=9544)[0m     @     0x55fa126b3a20 method_vectorcall
[2m[36m(pid=9544)[0m     @     0x55fa12627bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9544)[0m     @     0x55fa126b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=9544)[0m     @     0x55fa126b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9544)[0m     @     0x55fa12628689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9544)[0m     @     0x55fa126b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=9544)[0m     @     0x55fa126b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9544)[0m     @     0x55fa12628689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9544)[0m     @     0x55fa126b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=9544)[0m     @     0x55fa126b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9544)[0m     @     0x55fa12628689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9544)[0m     @     0x55fa126b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=9510)[0m     @     0x7f01a282d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9510)[0m     @     0x7f01a2935148 at::Tensor::copy_()
[2m[36m(pid=9510)[0m     @     0x7f01a452c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9510)[0m     @     0x7f01a282d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9538)[0m     @     0x7f769d507989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9538)[0m     @     0x7f769b8085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9538)[0m     @     0x7f769b910148 at::Tensor::copy_()
[2m[36m(pid=9538)[0m     @     0x7f76a1bc6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9538)[0m     @     0x55b71b31ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9538)[0m     @     0x55b71b27ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9538)[0m     @     0x55b71b305baf _PyEval_EvalCodeWithName
[2m[36m(pid=9538)[0m     @     0x55b71b306a20 method_vectorcall
[2m[36m(pid=9538)[0m     @     0x55b71b27abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9538)[0m     @     0x55b71b305baf _PyEval_EvalCodeWithName
[2m[36m(pid=9538)[0m     @     0x55b71b306643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9538)[0m     @     0x55b71b27b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9538)[0m     @     0x55b71b305baf _PyEval_EvalCodeWithName
[2m[36m(pid=9538)[0m     @     0x55b71b306643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9538)[0m     @     0x55b71b27b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9538)[0m     @     0x55b71b305baf _PyEval_EvalCodeWithName
[2m[36m(pid=9538)[0m     @     0x55b71b306643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9538)[0m     @     0x55b71b27b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9538)[0m     @     0x55b71b305baf _PyEval_EvalCodeWithName
[2m[36m(pid=9467)[0m     @     0x7f0b08c62b53 at::TensorIterator::for_each()
[2m[36m(pid=9467)[0m     @     0x7f0b08c62e11 at::TensorIterator::for_each()
[2m[36m(pid=9467)[0m     @     0x7f0b0b97bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9467)[0m     @     0x7f0b0b99ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9459)[0m     @     0x7f76c2b8de11 at::TensorIterator::for_each()
[2m[36m(pid=9459)[0m     @     0x7f76c58a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9459)[0m     @     0x7f76c58c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9459)[0m     @     0x7f76c2907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9557)[0m     @     0x7fafef627148 at::Tensor::copy_()
[2m[36m(pid=9557)[0m     @     0x7faff58ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9557)[0m     @     0x55f5a37affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9557)[0m     @     0x55f5a370ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9557)[0m     @     0x55f5a3795baf _PyEval_EvalCodeWithName
[2m[36m(pid=9557)[0m     @     0x55f5a3796a20 method_vectorcall
[2m[36m(pid=9557)[0m     @     0x55f5a370abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9557)[0m     @     0x55f5a3795baf _PyEval_EvalCodeWithName
[2m[36m(pid=9557)[0m     @     0x55f5a3796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9557)[0m     @     0x55f5a370b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9557)[0m     @     0x55f5a3795baf _PyEval_EvalCodeWithName
[2m[36m(pid=9557)[0m     @     0x55f5a3796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9557)[0m     @     0x55f5a370b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9557)[0m     @     0x55f5a3795baf _PyEval_EvalCodeWithName
[2m[36m(pid=9557)[0m     @     0x55f5a3796643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9557)[0m     @     0x55f5a370b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9557)[0m     @     0x55f5a3795baf _PyEval_EvalCodeWithName
[2m[36m(pid=9503)[0m     @     0x7fc570b75e11 at::TensorIterator::for_each()
[2m[36m(pid=9503)[0m     @     0x7fc57388ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9503)[0m     @     0x7fc5738b1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9439)[0m     @     0x7f09d326464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=9439)[0m     @     0x7f09d3267977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9569)[0m     @     0x7fb7ae2a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9569)[0m     @     0x7fb7ae2c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9569)[0m     @     0x7fb7ab304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9569)[0m     @     0x7fb7ab302c3f at::native::copy_impl()
[2m[36m(pid=9461)[0m     @     0x7f7eea35eb53 at::TensorIterator::for_each()
[2m[36m(pid=9461)[0m     @     0x7f7eea35ee11 at::TensorIterator::for_each()
[2m[36m(pid=9461)[0m     @     0x7f7eed077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9461)[0m     @     0x7f7eed09acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9440)[0m     @     0x7ef1c8bba148 at::Tensor::copy_()
[2m[36m(pid=9440)[0m     @     0x7ef1ca7b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9440)[0m     @     0x7ef1c8ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9442)[0m     @     0x7f2becf78b53 at::TensorIterator::for_each()
[2m[36m(pid=9434)[0m     @     0x7f40efad8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9434)[0m     @     0x7f40ecb16009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9434)[0m     @     0x7f40ecb14c3f at::native::copy_impl()
[2m[36m(pid=9434)[0m     @     0x7f40ecb15ed4 at::native::copy_()
[2m[36m(pid=9507)[0m     @     0x7ef590adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9507)[0m     @     0x7ef590be7148 at::Tensor::copy_()
[2m[36m(pid=9507)[0m     @     0x7ef596e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9507)[0m     @     0x55f9cf6dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9507)[0m     @     0x55f9cf63ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9507)[0m     @     0x55f9cf6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9507)[0m     @     0x55f9cf6c6a20 method_vectorcall
[2m[36m(pid=9507)[0m     @     0x55f9cf63abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9507)[0m     @     0x55f9cf6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9453)[0m     @     0x7f64bceb7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9453)[0m     @     0x7f64bb1b85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9453)[0m     @     0x7f64bb2c0148 at::Tensor::copy_()
[2m[36m(pid=9453)[0m     @     0x7f64c1576bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9453)[0m     @     0x55b3668b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9453)[0m     @     0x55b366811b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9453)[0m     @     0x55b36689cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9453)[0m     @     0x55b36689da20 method_vectorcall
[2m[36m(pid=9453)[0m     @     0x55b366811bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9517)[0m     @     0x7f7a35392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=9553)[0m     @     0x7f505039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9553)[0m     @     0x7f505039bc3f at::native::copy_impl()
[2m[36m(pid=9553)[0m     @     0x7f505039ced4 at::native::copy_()
[2m[36m(pid=9504)[0m     @     0x7fc927d93e11 at::TensorIterator::for_each()
[2m[36m(pid=9504)[0m     @     0x7fc92aaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9504)[0m     @     0x7fc92aacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9504)[0m     @     0x7fc927b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9504)[0m     @     0x7fc927b0bc3f at::native::copy_impl()
[2m[36m(pid=9504)[0m     @     0x7fc927b0ced4 at::native::copy_()
[2m[36m(pid=9470)[0m     @     0x7ef96c8a8e11 at::TensorIterator::for_each()
[2m[36m(pid=9470)[0m     @     0x7ef96f5c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9470)[0m     @     0x7ef96f5e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9470)[0m     @     0x7ef96c622009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9470)[0m     @     0x7ef96c620c3f at::native::copy_impl()
[2m[36m(pid=9470)[0m     @     0x7ef96c621ed4 at::native::copy_()
[2m[36m(pid=9470)[0m     @     0x7ef96cd645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9449)[0m     @     0x7f730858f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9449)[0m     @     0x7f730858dc3f at::native::copy_impl()
[2m[36m(pid=9449)[0m     @     0x7f730858eed4 at::native::copy_()
[2m[36m(pid=9449)[0m     @     0x7f7308cd15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9449)[0m     @     0x7f7308dd9148 at::Tensor::copy_()
[2m[36m(pid=9449)[0m     @     0x7f730a9d0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9509)[0m     @     0x7f290df8fb53 at::TensorIterator::for_each()
[2m[36m(pid=9509)[0m     @     0x7f290df8fe11 at::TensorIterator::for_each()
[2m[36m(pid=9509)[0m     @     0x7f2910ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9509)[0m     @     0x7f2910ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9509)[0m     @     0x7f290dd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9509)[0m     @     0x7f290dd07c3f at::native::copy_impl()
[2m[36m(pid=9446)[0m     @     0x7f9c6d2e1e11 at::TensorIterator::for_each()
[2m[36m(pid=9446)[0m     @     0x7f9c6fffac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9446)[0m     @     0x7f9c7001dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9446)[0m     @     0x7f9c6d05b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9446)[0m     @     0x7f9c6d059c3f at::native::copy_impl()
[2m[36m(pid=9446)[0m     @     0x7f9c6d05aed4 at::native::copy_()
[2m[36m(pid=9526)[0m     @     0x7f2d962fc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9526)[0m     @     0x7f2d962fac3f at::native::copy_impl()
[2m[36m(pid=9526)[0m     @     0x7f2d962fbed4 at::native::copy_()
[2m[36m(pid=9526)[0m     @     0x7f2d96a3e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9526)[0m     @     0x7f2d96b46148 at::Tensor::copy_()
[2m[36m(pid=9526)[0m     @     0x7f2d9873d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9450)[0m     @     0x7fccbbb98009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9450)[0m     @     0x7fccbbb96c3f at::native::copy_impl()
[2m[36m(pid=9450)[0m     @     0x7fccbbb97ed4 at::native::copy_()
[2m[36m(pid=9450)[0m     @     0x7fccbc2da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9450)[0m     @     0x7fccbc3e2148 at::Tensor::copy_()
[2m[36m(pid=9450)[0m     @     0x7fccbdfd9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9496)[0m     @     0x7edbacae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9496)[0m     @     0x7edbacadfc3f at::native::copy_impl()
[2m[36m(pid=9496)[0m     @     0x7edbacae0ed4 at::native::copy_()
[2m[36m(pid=9496)[0m     @     0x7edbad2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9496)[0m     @     0x7edbad32b148 at::Tensor::copy_()
[2m[36m(pid=9496)[0m     @     0x7edbaef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9456)[0m     @     0x7f2278b15148 at::Tensor::copy_()
[2m[36m(pid=9456)[0m     @     0x7f227a70c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9456)[0m     @     0x7f2278a0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9456)[0m     @     0x7f2278b15148 at::Tensor::copy_()
[2m[36m(pid=9456)[0m     @     0x7f227edcbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9456)[0m     @     0x563c479a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9456)[0m     @     0x563c478fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9456)[0m     @     0x563c47987baf _PyEval_EvalCodeWithName
[2m[36m(pid=9456)[0m     @     0x563c47988a20 method_vectorcall
[2m[36m(pid=9456)[0m     @     0x563c478fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9456)[0m     @     0x563c47987baf _PyEval_EvalCodeWithName
[2m[36m(pid=9456)[0m     @     0x563c47988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9456)[0m     @     0x563c478fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9456)[0m     @     0x563c47987baf _PyEval_EvalCodeWithName
[2m[36m(pid=9456)[0m     @     0x563c47988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9456)[0m     @     0x563c478fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9456)[0m     @     0x563c47987baf _PyEval_EvalCodeWithName
[2m[36m(pid=9456)[0m     @     0x563c47988643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9456)[0m     @     0x563c478fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9456)[0m     @     0x563c47987baf _PyEval_EvalCodeWithName
[2m[36m(pid=9552)[0m     @     0x7f9e68f56c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9552)[0m     @     0x7f9e68f79cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9552)[0m     @     0x7f9e65fb7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9552)[0m     @     0x7f9e65fb5c3f at::native::copy_impl()
[2m[36m(pid=9552)[0m     @     0x7f9e65fb6ed4 at::native::copy_()
[2m[36m(pid=9552)[0m     @     0x7f9e666f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9561)[0m     @     0x7fc7ad4b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9561)[0m     @     0x7fc7ad4d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9561)[0m     @     0x7fc7aa511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9561)[0m     @     0x7fc7aa50fc3f at::native::copy_impl()
[2m[36m(pid=9561)[0m     @     0x7fc7aa510ed4 at::native::copy_()
[2m[36m(pid=9561)[0m     @     0x7fc7aac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9515)[0m     @     0x7f5daf283148 at::Tensor::copy_()
[2m[36m(pid=9515)[0m     @     0x7f5db0e7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9515)[0m     @     0x7f5daf17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9515)[0m     @     0x7f5daf283148 at::Tensor::copy_()
[2m[36m(pid=9515)[0m     @     0x7f5db5539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9515)[0m     @     0x556704b8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9515)[0m     @     0x556704aeab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9515)[0m     @     0x556704b75baf _PyEval_EvalCodeWithName
[2m[36m(pid=9515)[0m     @     0x556704b76a20 method_vectorcall
[2m[36m(pid=9515)[0m     @     0x556704aeabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9515)[0m     @     0x556704b75baf _PyEval_EvalCodeWithName
[2m[36m(pid=9515)[0m     @     0x556704b76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9515)[0m     @     0x556704aeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9515)[0m     @     0x556704b75baf _PyEval_EvalCodeWithName
[2m[36m(pid=9515)[0m     @     0x556704b76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9515)[0m     @     0x556704aeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9515)[0m     @     0x556704b75baf _PyEval_EvalCodeWithName
[2m[36m(pid=9515)[0m     @     0x556704b76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9515)[0m     @     0x556704aeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9515)[0m     @     0x556704b75baf _PyEval_EvalCodeWithName
[2m[36m(pid=9452)[0m     @     0x7eda2335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9452)[0m     @     0x7eda2039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9452)[0m     @     0x7eda2039bc3f at::native::copy_impl()
[2m[36m(pid=9452)[0m     @     0x7eda2039ced4 at::native::copy_()
[2m[36m(pid=9452)[0m     @     0x7eda20adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9452)[0m     @     0x7eda20be7148 at::Tensor::copy_()
[2m[36m(pid=9558)[0m     @     0x7f5aaf33cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9558)[0m     @     0x7f5aaf35fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9558)[0m     @     0x7f5aac39d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9558)[0m     @     0x7f5aac39bc3f at::native::copy_impl()
[2m[36m(pid=9558)[0m     @     0x7f5aac39ced4 at::native::copy_()
[2m[36m(pid=9558)[0m     @     0x7f5aacadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9558)[0m     @     0x7f5aacbe7148 at::Tensor::copy_()
[2m[36m(pid=9541)[0m     @     0x7f2944a92c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9541)[0m     @     0x7f2944ab5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9541)[0m     @     0x7f2941af3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9541)[0m     @     0x7f2941af1c3f at::native::copy_impl()
[2m[36m(pid=9541)[0m     @     0x7f2941af2ed4 at::native::copy_()
[2m[36m(pid=9541)[0m     @     0x7f29422355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9541)[0m     @     0x7f294233d148 at::Tensor::copy_()
[2m[36m(pid=9513)[0m     @     0x7f6566098009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9513)[0m     @     0x7f6566096c3f at::native::copy_impl()
[2m[36m(pid=9513)[0m     @     0x7f6566097ed4 at::native::copy_()
[2m[36m(pid=9513)[0m     @     0x7f65667da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9513)[0m     @     0x7f65668e2148 at::Tensor::copy_()
[2m[36m(pid=9513)[0m     @     0x7f65684d9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9437)[0m     @     0x7f1fa2c03c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9437)[0m     @     0x7f1fa2c26cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9437)[0m     @     0x7f1f9fc64009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9437)[0m     @     0x7f1f9fc62c3f at::native::copy_impl()
[2m[36m(pid=9437)[0m     @     0x7f1f9fc63ed4 at::native::copy_()
[2m[36m(pid=9437)[0m     @     0x7f1fa03a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9436)[0m     @     0x7fb9485b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9436)[0m     @     0x7fb9485b2c3f at::native::copy_impl()
[2m[36m(pid=9436)[0m     @     0x7fb9485b3ed4 at::native::copy_()
[2m[36m(pid=9436)[0m     @     0x7fb948cf65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9436)[0m     @     0x7fb948dfe148 at::Tensor::copy_()
[2m[36m(pid=9436)[0m     @     0x7fb94a9f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9458)[0m     @     0x7edffe797b53 at::TensorIterator::for_each()
[2m[36m(pid=9458)[0m     @     0x7edffe797e11 at::TensorIterator::for_each()
[2m[36m(pid=9458)[0m     @     0x7ee0014b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9458)[0m     @     0x7ee0014d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9458)[0m     @     0x7edffe511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9458)[0m     @     0x7edffe50fc3f at::native::copy_impl()
[2m[36m(pid=9505)[0m     @     0x7f7510a51b53 at::TensorIterator::for_each()
[2m[36m(pid=9505)[0m     @     0x7f7510a51e11 at::TensorIterator::for_each()
[2m[36m(pid=9505)[0m     @     0x7f751376ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9505)[0m     @     0x7f751378dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9505)[0m     @     0x7f75107cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9505)[0m     @     0x7f75107c9c3f at::native::copy_impl()
[2m[36m(pid=9505)[0m     @     0x7f75107caed4 at::native::copy_()
[2m[36m(pid=9441)[0m     @     0x7f8808e6c148 at::Tensor::copy_()
[2m[36m(pid=9441)[0m     @     0x7f880aa63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9441)[0m     @     0x7f8808d645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9441)[0m     @     0x7f8808e6c148 at::Tensor::copy_()
[2m[36m(pid=9441)[0m     @     0x7f880f122bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9441)[0m     @     0x56459c2d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9441)[0m     @     0x56459c233b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9441)[0m     @     0x56459c2bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9441)[0m     @     0x56459c2bfa20 method_vectorcall
[2m[36m(pid=9441)[0m     @     0x56459c233bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9441)[0m     @     0x56459c2bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9441)[0m     @     0x56459c2bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9441)[0m     @     0x56459c234689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9441)[0m     @     0x56459c2bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9441)[0m     @     0x56459c2bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9441)[0m     @     0x56459c234689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9441)[0m     @     0x56459c2bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9441)[0m     @     0x56459c2bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9441)[0m     @     0x56459c234689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9441)[0m     @     0x56459c2bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9519)[0m     @     0x7f075e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9519)[0m     @     0x7f075e553148 at::Tensor::copy_()
[2m[36m(pid=9519)[0m     @     0x7f0764809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9519)[0m     @     0x55bbed61cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9519)[0m     @     0x55bbed577b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9519)[0m     @     0x55bbed602baf _PyEval_EvalCodeWithName
[2m[36m(pid=9519)[0m     @     0x55bbed603a20 method_vectorcall
[2m[36m(pid=9519)[0m     @     0x55bbed577bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9519)[0m     @     0x55bbed602baf _PyEval_EvalCodeWithName
[2m[36m(pid=9519)[0m     @     0x55bbed603643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9519)[0m     @     0x55bbed578689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9519)[0m     @     0x55bbed602baf _PyEval_EvalCodeWithName
[2m[36m(pid=9519)[0m     @     0x55bbed603643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9519)[0m     @     0x55bbed578689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9519)[0m     @     0x55bbed602baf _PyEval_EvalCodeWithName
[2m[36m(pid=9519)[0m     @     0x55bbed603643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9519)[0m     @     0x55bbed578689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9519)[0m     @     0x55bbed602baf _PyEval_EvalCodeWithName
[2m[36m(pid=9448)[0m     @     0x7f21dc59f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9448)[0m     @     0x7f21dc59dc3f at::native::copy_impl()
[2m[36m(pid=9448)[0m     @     0x7f21dc59eed4 at::native::copy_()
[2m[36m(pid=9448)[0m     @     0x7f21dcce15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9448)[0m     @     0x7f21dcde9148 at::Tensor::copy_()
[2m[36m(pid=9448)[0m     @     0x7f21de9e0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9455)[0m     @     0x7f94c2329009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9455)[0m     @     0x7f94c2327c3f at::native::copy_impl()
[2m[36m(pid=9455)[0m     @     0x7f94c2328ed4 at::native::copy_()
[2m[36m(pid=9455)[0m     @     0x7f94c2a6b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9455)[0m     @     0x7f94c2b73148 at::Tensor::copy_()
[2m[36m(pid=9455)[0m     @     0x7f94c476a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9443)[0m     @     0x7f5c789795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9443)[0m     @     0x7f5c78a81148 at::Tensor::copy_()
[2m[36m(pid=9443)[0m     @     0x7f5c7ed37bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9443)[0m     @     0x55a6f92d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9443)[0m     @     0x55a6f922fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9443)[0m     @     0x55a6f92babaf _PyEval_EvalCodeWithName
[2m[36m(pid=9443)[0m     @     0x55a6f92bba20 method_vectorcall
[2m[36m(pid=9443)[0m     @     0x55a6f922fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9443)[0m     @     0x55a6f92babaf _PyEval_EvalCodeWithName
[2m[36m(pid=9443)[0m     @     0x55a6f92bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9443)[0m     @     0x55a6f9230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9443)[0m     @     0x55a6f92babaf _PyEval_EvalCodeWithName
[2m[36m(pid=9443)[0m     @     0x55a6f92bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9443)[0m     @     0x55a6f9230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9443)[0m     @     0x55a6f92babaf _PyEval_EvalCodeWithName
[2m[36m(pid=9443)[0m     @     0x55a6f92bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9443)[0m     @     0x55a6f9230689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9443)[0m     @     0x55a6f92babaf _PyEval_EvalCodeWithName
[2m[36m(pid=9495)[0m     @     0x7f4e47f15148 at::Tensor::copy_()
[2m[36m(pid=9495)[0m     @     0x7f4e49b0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9495)[0m     @     0x7f4e47e0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9495)[0m     @     0x7f4e47f15148 at::Tensor::copy_()
[2m[36m(pid=9495)[0m     @     0x7f4e4e1cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9495)[0m     @     0x55f93a4a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9495)[0m     @     0x55f93a403b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9495)[0m     @     0x55f93a48ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9495)[0m     @     0x55f93a48fa20 method_vectorcall
[2m[36m(pid=9495)[0m     @     0x55f93a403bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9495)[0m     @     0x55f93a48ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9495)[0m     @     0x55f93a48f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9495)[0m     @     0x55f93a404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9495)[0m     @     0x55f93a48ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9495)[0m     @     0x55f93a48f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9495)[0m     @     0x55f93a404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9495)[0m     @     0x55f93a48ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9495)[0m     @     0x55f93a48f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9495)[0m     @     0x55f93a404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9495)[0m     @     0x55f93a48ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9566)[0m     @     0x7f21c89d6148 at::Tensor::copy_()
[2m[36m(pid=9566)[0m     @     0x7f21cec8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9566)[0m     @     0x5579d4626fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9566)[0m     @     0x5579d4581b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9566)[0m     @     0x5579d460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9566)[0m     @     0x5579d460da20 method_vectorcall
[2m[36m(pid=9566)[0m     @     0x5579d4581bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9566)[0m     @     0x5579d460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9566)[0m     @     0x5579d460d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9566)[0m     @     0x5579d4582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9566)[0m     @     0x5579d460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9566)[0m     @     0x5579d460d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9566)[0m     @     0x5579d4582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9566)[0m     @     0x5579d460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9566)[0m     @     0x5579d460d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9566)[0m     @     0x5579d4582689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9566)[0m     @     0x5579d460cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9518)[0m     @     0x7ee426c56148 at::Tensor::copy_()
[2m[36m(pid=9518)[0m     @     0x7ee42884d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9518)[0m     @     0x7ee426b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9518)[0m     @     0x7ee426c56148 at::Tensor::copy_()
[2m[36m(pid=9518)[0m     @     0x7ee42cf0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9518)[0m     @     0x5579505dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9518)[0m     @     0x55795053ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9518)[0m     @     0x5579505c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9518)[0m     @     0x5579505c6a20 method_vectorcall
[2m[36m(pid=9518)[0m     @     0x55795053abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9518)[0m     @     0x5579505c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9518)[0m     @     0x5579505c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9518)[0m     @     0x55795053b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9518)[0m     @     0x5579505c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9518)[0m     @     0x5579505c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9518)[0m     @     0x55795053b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9518)[0m     @     0x5579505c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9518)[0m     @     0x5579505c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9518)[0m     @     0x55795053b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9518)[0m     @     0x5579505c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9539)[0m     @     0x7f4091c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9539)[0m     @     0x7f408ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9539)[0m     @     0x7f4090095148 at::Tensor::copy_()
[2m[36m(pid=9539)[0m     @     0x7f409634bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9539)[0m     @     0x55b32c12cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9539)[0m     @     0x55b32c087b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9539)[0m     @     0x55b32c112baf _PyEval_EvalCodeWithName
[2m[36m(pid=9539)[0m     @     0x55b32c113a20 method_vectorcall
[2m[36m(pid=9539)[0m     @     0x55b32c087bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9539)[0m     @     0x55b32c112baf _PyEval_EvalCodeWithName
[2m[36m(pid=9539)[0m     @     0x55b32c113643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9539)[0m     @     0x55b32c088689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9539)[0m     @     0x55b32c112baf _PyEval_EvalCodeWithName
[2m[36m(pid=9539)[0m     @     0x55b32c113643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9539)[0m     @     0x55b32c088689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9539)[0m     @     0x55b32c112baf _PyEval_EvalCodeWithName
[2m[36m(pid=9539)[0m     @     0x55b32c113643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9539)[0m     @     0x55b32c088689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9539)[0m     @     0x55b32c112baf _PyEval_EvalCodeWithName
[2m[36m(pid=9542)[0m     @     0x7f38888d65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9542)[0m     @     0x7f38889de148 at::Tensor::copy_()
[2m[36m(pid=9542)[0m     @     0x7f388ec94bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9542)[0m     @     0x55f547d3ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9542)[0m     @     0x55f547c9ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9542)[0m     @     0x55f547d25baf _PyEval_EvalCodeWithName
[2m[36m(pid=9542)[0m     @     0x55f547d26a20 method_vectorcall
[2m[36m(pid=9542)[0m     @     0x55f547c9abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9542)[0m     @     0x55f547d25baf _PyEval_EvalCodeWithName
[2m[36m(pid=9542)[0m     @     0x55f547d26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9542)[0m     @     0x55f547c9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9542)[0m     @     0x55f547d25baf _PyEval_EvalCodeWithName
[2m[36m(pid=9542)[0m     @     0x55f547d26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9542)[0m     @     0x55f547c9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9542)[0m     @     0x55f547d25baf _PyEval_EvalCodeWithName
[2m[36m(pid=9542)[0m     @     0x55f547d26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9542)[0m     @     0x55f547c9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9542)[0m     @     0x55f547d25baf _PyEval_EvalCodeWithName
[2m[36m(pid=9500)[0m     @     0x7f1da27ad5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9500)[0m     @     0x7f1da28b5148 at::Tensor::copy_()
[2m[36m(pid=9500)[0m     @     0x7f1da8b6bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9500)[0m     @     0x55614f22efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9500)[0m     @     0x55614f189b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9500)[0m     @     0x55614f214baf _PyEval_EvalCodeWithName
[2m[36m(pid=9500)[0m     @     0x55614f215a20 method_vectorcall
[2m[36m(pid=9500)[0m     @     0x55614f189bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9500)[0m     @     0x55614f214baf _PyEval_EvalCodeWithName
[2m[36m(pid=9500)[0m     @     0x55614f215643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9500)[0m     @     0x55614f18a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9500)[0m     @     0x55614f214baf _PyEval_EvalCodeWithName
[2m[36m(pid=9500)[0m     @     0x55614f215643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9500)[0m     @     0x55614f18a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9500)[0m     @     0x55614f214baf _PyEval_EvalCodeWithName
[2m[36m(pid=9500)[0m     @     0x55614f215643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9500)[0m     @     0x55614f18a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9500)[0m     @     0x55614f214baf _PyEval_EvalCodeWithName
[2m[36m(pid=9511)[0m     @     0x7ee91b336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9511)[0m     @     0x7ee9196375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9511)[0m     @     0x7ee91973f148 at::Tensor::copy_()
[2m[36m(pid=9511)[0m     @     0x7ee91f9f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9511)[0m     @     0x55c689330fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9511)[0m     @     0x55c68928bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9511)[0m     @     0x55c689316baf _PyEval_EvalCodeWithName
[2m[36m(pid=9511)[0m     @     0x55c689317a20 method_vectorcall
[2m[36m(pid=9511)[0m     @     0x55c68928bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9511)[0m     @     0x55c689316baf _PyEval_EvalCodeWithName
[2m[36m(pid=9511)[0m     @     0x55c689317643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9511)[0m     @     0x55c68928c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9511)[0m     @     0x55c689316baf _PyEval_EvalCodeWithName
[2m[36m(pid=9511)[0m     @     0x55c689317643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9511)[0m     @     0x55c68928c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9511)[0m     @     0x55c689316baf _PyEval_EvalCodeWithName
[2m[36m(pid=9511)[0m     @     0x55c689317643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9511)[0m     @     0x55c68928c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9511)[0m     @     0x55c689316baf _PyEval_EvalCodeWithName
[2m[36m(pid=9524)[0m     @     0x7ee9caddd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9524)[0m     @     0x7ee9c90de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9524)[0m     @     0x7ee9c91e6148 at::Tensor::copy_()
[2m[36m(pid=9524)[0m     @     0x7ee9cf49cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9524)[0m     @     0x56290660bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9524)[0m     @     0x562906566b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9524)[0m     @     0x5629065f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9524)[0m     @     0x5629065f2a20 method_vectorcall
[2m[36m(pid=9524)[0m     @     0x562906566bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9524)[0m     @     0x5629065f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9524)[0m     @     0x5629065f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9524)[0m     @     0x562906567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9524)[0m     @     0x5629065f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9524)[0m     @     0x5629065f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9524)[0m     @     0x562906567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9524)[0m     @     0x5629065f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9524)[0m     @     0x5629065f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9524)[0m     @     0x562906567689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9524)[0m     @     0x5629065f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9464)[0m     @     0x7f6ee7577ed4 at::native::copy_()
[2m[36m(pid=9464)[0m     @     0x7f6ee7cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9464)[0m     @     0x7f6ee7dc2148 at::Tensor::copy_()
[2m[36m(pid=9464)[0m     @     0x7f6ee99b9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9464)[0m     @     0x7f6ee7cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9556)[0m     @     0x7f8fad5a1ed4 at::native::copy_()
[2m[36m(pid=9556)[0m     @     0x7f8fadce45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9556)[0m     @     0x7f8faddec148 at::Tensor::copy_()
[2m[36m(pid=9469)[0m     @     0x7f244a6d4ed4 at::native::copy_()
[2m[36m(pid=9469)[0m     @     0x7f244ae175cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9469)[0m     @     0x7f244af1f148 at::Tensor::copy_()
[2m[36m(pid=9438)[0m     @     0x7f9c8d2ebc3f at::native::copy_impl()
[2m[36m(pid=9438)[0m     @     0x7f9c8d2eced4 at::native::copy_()
[2m[36m(pid=9438)[0m     @     0x7f9c8da2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9438)[0m     @     0x7f9c8db37148 at::Tensor::copy_()
[2m[36m(pid=9457)[0m     @     0x7f06aa6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9457)[0m     @     0x7f06aa759148 at::Tensor::copy_()
[2m[36m(pid=9457)[0m     @     0x7f06b05f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9457)[0m     @     0x564bf6a12fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9457)[0m     @     0x564bf696db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9457)[0m     @     0x564bf69f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9457)[0m     @     0x564bf69f9a20 method_vectorcall
[2m[36m(pid=9457)[0m     @     0x564bf696dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9457)[0m     @     0x564bf69f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9457)[0m     @     0x564bf69f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9457)[0m     @     0x564bf696e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9457)[0m     @     0x564bf69f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9457)[0m     @     0x564bf69f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9457)[0m     @     0x564bf696e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9457)[0m     @     0x564bf69f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9457)[0m     @     0x564bf69f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9457)[0m     @     0x564bf696e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9457)[0m     @     0x564bf69f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9454)[0m     @     0x7efecb51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9454)[0m     @     0x7efecb627148 at::Tensor::copy_()
[2m[36m(pid=9454)[0m     @     0x7efed18ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9454)[0m     @     0x55aadbf20fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9454)[0m     @     0x55aadbe7bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9454)[0m     @     0x55aadbf06baf _PyEval_EvalCodeWithName
[2m[36m(pid=9454)[0m     @     0x55aadbf07a20 method_vectorcall
[2m[36m(pid=9454)[0m     @     0x55aadbe7bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9454)[0m     @     0x55aadbf06baf _PyEval_EvalCodeWithName
[2m[36m(pid=9454)[0m     @     0x55aadbf07643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9454)[0m     @     0x55aadbe7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9454)[0m     @     0x55aadbf06baf _PyEval_EvalCodeWithName
[2m[36m(pid=9454)[0m     @     0x55aadbf07643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9454)[0m     @     0x55aadbe7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9454)[0m     @     0x55aadbf06baf _PyEval_EvalCodeWithName
[2m[36m(pid=9454)[0m     @     0x55aadbf07643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9454)[0m     @     0x55aadbe7c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9454)[0m     @     0x55aadbf06baf _PyEval_EvalCodeWithName
[2m[36m(pid=9529)[0m     @     0x7ed4d4095148 at::Tensor::copy_()
[2m[36m(pid=9529)[0m     @     0x7ed4da34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9529)[0m     @     0x55a267514fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9529)[0m     @     0x55a26746fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9529)[0m     @     0x55a2674fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9529)[0m     @     0x55a2674fba20 method_vectorcall
[2m[36m(pid=9529)[0m     @     0x55a26746fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9529)[0m     @     0x55a2674fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9529)[0m     @     0x55a2674fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9529)[0m     @     0x55a267470689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9529)[0m     @     0x55a2674fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9529)[0m     @     0x55a2674fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9529)[0m     @     0x55a267470689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9529)[0m     @     0x55a2674fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9529)[0m     @     0x55a2674fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9529)[0m     @     0x55a267470689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9529)[0m     @     0x55a2674fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=9547)[0m     @     0x7f72b20ae148 at::Tensor::copy_()
[2m[36m(pid=9547)[0m     @     0x7f72b8364bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9547)[0m     @     0x55eff084ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9547)[0m     @     0x55eff07aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9547)[0m     @     0x55eff0835baf _PyEval_EvalCodeWithName
[2m[36m(pid=9547)[0m     @     0x55eff0836a20 method_vectorcall
[2m[36m(pid=9547)[0m     @     0x55eff07aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9547)[0m     @     0x55eff0835baf _PyEval_EvalCodeWithName
[2m[36m(pid=9547)[0m     @     0x55eff0836643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9547)[0m     @     0x55eff07ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9547)[0m     @     0x55eff0835baf _PyEval_EvalCodeWithName
[2m[36m(pid=9547)[0m     @     0x55eff0836643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9547)[0m     @     0x55eff07ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9547)[0m     @     0x55eff0835baf _PyEval_EvalCodeWithName
[2m[36m(pid=9547)[0m     @     0x55eff0836643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9547)[0m     @     0x55eff07ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9547)[0m     @     0x55eff0835baf _PyEval_EvalCodeWithName
[2m[36m(pid=9516)[0m     @     0x7ee1aa1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9516)[0m     @     0x7ee1aa23c148 at::Tensor::copy_()
[2m[36m(pid=9516)[0m     @     0x7ee1b04f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9516)[0m     @     0x55f957767fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9516)[0m     @     0x55f9576c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9516)[0m     @     0x55f95774dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9516)[0m     @     0x55f95774ea20 method_vectorcall
[2m[36m(pid=9516)[0m     @     0x55f9576c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9516)[0m     @     0x55f95774dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9516)[0m     @     0x55f95774e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9516)[0m     @     0x55f9576c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9516)[0m     @     0x55f95774dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9516)[0m     @     0x55f95774e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9516)[0m     @     0x55f9576c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9516)[0m     @     0x55f95774dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9516)[0m     @     0x55f95774e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9516)[0m     @     0x55f9576c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9516)[0m     @     0x55f95774dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9570)[0m     @     0x55a1b1bc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9570)[0m     @     0x55a1b1bc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9570)[0m     @     0x55a1b1b3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9570)[0m     @     0x55a1b1bc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9536)[0m     @     0x7f19cf7da148 at::Tensor::copy_()
[2m[36m(pid=9536)[0m     @     0x7f19d5a90bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9536)[0m     @     0x55db854f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9536)[0m     @     0x55db8544db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9536)[0m     @     0x55db854d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9536)[0m     @     0x55db854d9a20 method_vectorcall
[2m[36m(pid=9536)[0m     @     0x55db8544dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9536)[0m     @     0x55db854d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9536)[0m     @     0x55db854d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9536)[0m     @     0x55db8544e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9536)[0m     @     0x55db854d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9536)[0m     @     0x55db854d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9536)[0m     @     0x55db8544e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9536)[0m     @     0x55db854d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9536)[0m     @     0x55db854d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9536)[0m     @     0x55db8544e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9536)[0m     @     0x55db854d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9447)[0m     @     0x7f1ae08a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9447)[0m     @     0x7f1ae09b1148 at::Tensor::copy_()
[2m[36m(pid=9447)[0m     @     0x7f1ae25a8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9447)[0m     @     0x7f1ae08a95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9492)[0m     @     0x7f1edb3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9492)[0m     @     0x7f1edb410148 at::Tensor::copy_()
[2m[36m(pid=9492)[0m     @     0x7f1ee16c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9492)[0m     @     0x557c5a131fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9492)[0m     @     0x557c5a08cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9492)[0m     @     0x557c5a117baf _PyEval_EvalCodeWithName
[2m[36m(pid=9492)[0m     @     0x557c5a118a20 method_vectorcall
[2m[36m(pid=9492)[0m     @     0x557c5a08cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9492)[0m     @     0x557c5a117baf _PyEval_EvalCodeWithName
[2m[36m(pid=9492)[0m     @     0x557c5a118643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9492)[0m     @     0x557c5a08d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9492)[0m     @     0x557c5a117baf _PyEval_EvalCodeWithName
[2m[36m(pid=9492)[0m     @     0x557c5a118643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9492)[0m     @     0x557c5a08d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9492)[0m     @     0x557c5a117baf _PyEval_EvalCodeWithName
[2m[36m(pid=9492)[0m     @     0x557c5a118643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9492)[0m     @     0x557c5a08d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9492)[0m     @     0x557c5a117baf _PyEval_EvalCodeWithName
[2m[36m(pid=9435)[0m     @     0x7f205df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9435)[0m     @     0x7f205e02b148 at::Tensor::copy_()
[2m[36m(pid=9435)[0m     @     0x7f20642e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9435)[0m     @     0x560bd3ddefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9435)[0m     @     0x560bd3d39b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9435)[0m     @     0x560bd3dc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9435)[0m     @     0x560bd3dc5a20 method_vectorcall
[2m[36m(pid=9435)[0m     @     0x560bd3d39bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9435)[0m     @     0x560bd3dc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9435)[0m     @     0x560bd3dc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9435)[0m     @     0x560bd3d3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9435)[0m     @     0x560bd3dc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9435)[0m     @     0x560bd3dc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9435)[0m     @     0x560bd3d3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9435)[0m     @     0x560bd3dc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9435)[0m     @     0x560bd3dc5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9435)[0m     @     0x560bd3d3a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9435)[0m     @     0x560bd3dc4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9512)[0m     @     0x7ed149421ed4 at::native::copy_()
[2m[36m(pid=9512)[0m     @     0x7ed149b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9512)[0m     @     0x7ed149c6c148 at::Tensor::copy_()
[2m[36m(pid=9512)[0m     @     0x7ed14b863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9445)[0m     @     0x7f07bc50ced4 at::native::copy_()
[2m[36m(pid=9445)[0m     @     0x7f07bcc4f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9445)[0m     @     0x7f07bcd57148 at::Tensor::copy_()
[2m[36m(pid=9445)[0m     @     0x7f07be94e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9522)[0m     @     0x7efa545f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9522)[0m     @     0x7efa51633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9522)[0m     @     0x7efa51631c3f at::native::copy_impl()
[2m[36m(pid=9522)[0m     @     0x7efa51632ed4 at::native::copy_()
[2m[36m(pid=9522)[0m     @     0x7efa51d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9514)[0m     @     0x55bb5589d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9514)[0m     @     0x55bb55927baf _PyEval_EvalCodeWithName
[2m[36m(pid=9514)[0m     @     0x55bb55928643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9514)[0m     @     0x55bb5589d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9514)[0m     @     0x55bb55927baf _PyEval_EvalCodeWithName
[2m[36m(pid=9514)[0m     @     0x55bb55928643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9514)[0m     @     0x55bb5589d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9514)[0m     @     0x55bb55927baf _PyEval_EvalCodeWithName
[2m[36m(pid=9535)[0m     @     0x7f29ea564bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9535)[0m     @     0x561f66d6cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9535)[0m     @     0x561f66cc7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9535)[0m     @     0x561f66d52baf _PyEval_EvalCodeWithName
[2m[36m(pid=9535)[0m     @     0x561f66d53a20 method_vectorcall
[2m[36m(pid=9535)[0m     @     0x561f66cc7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9535)[0m     @     0x561f66d52baf _PyEval_EvalCodeWithName
[2m[36m(pid=9535)[0m     @     0x561f66d53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9535)[0m     @     0x561f66cc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9535)[0m     @     0x561f66d52baf _PyEval_EvalCodeWithName
[2m[36m(pid=9535)[0m     @     0x561f66d53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9535)[0m     @     0x561f66cc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9535)[0m     @     0x561f66d52baf _PyEval_EvalCodeWithName
[2m[36m(pid=9535)[0m     @     0x561f66d53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9535)[0m     @     0x561f66cc8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9535)[0m     @     0x561f66d52baf _PyEval_EvalCodeWithName
[2m[36m(pid=9502)[0m     @     0x7ef5fbc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9502)[0m     @     0x5613c4dbafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9502)[0m     @     0x5613c4d15b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9502)[0m     @     0x5613c4da0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9502)[0m     @     0x5613c4da1a20 method_vectorcall
[2m[36m(pid=9502)[0m     @     0x5613c4d15bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9502)[0m     @     0x5613c4da0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9502)[0m     @     0x5613c4da1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9502)[0m     @     0x5613c4d16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9502)[0m     @     0x5613c4da0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9502)[0m     @     0x5613c4da1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9502)[0m     @     0x5613c4d16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9502)[0m     @     0x5613c4da0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9502)[0m     @     0x5613c4da1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9502)[0m     @     0x5613c4d16689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9502)[0m     @     0x5613c4da0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9548)[0m     @     0x7f72cd929148 at::Tensor::copy_()
[2m[36m(pid=9548)[0m     @     0x7f72d3bdfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9548)[0m     @     0x5587a8855fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9548)[0m     @     0x5587a87b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9548)[0m     @     0x5587a883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9548)[0m     @     0x5587a883ca20 method_vectorcall
[2m[36m(pid=9548)[0m     @     0x5587a87b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9548)[0m     @     0x5587a883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9548)[0m     @     0x5587a883c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9548)[0m     @     0x5587a87b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9548)[0m     @     0x5587a883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9548)[0m     @     0x5587a883c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9548)[0m     @     0x5587a87b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9548)[0m     @     0x5587a883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9548)[0m     @     0x5587a883c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9548)[0m     @     0x5587a87b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9548)[0m     @     0x5587a883bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9465)[0m     @     0x7f9542e19bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9465)[0m     @     0x565095441fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9465)[0m     @     0x56509539cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9465)[0m     @     0x565095427baf _PyEval_EvalCodeWithName
[2m[36m(pid=9465)[0m     @     0x565095428a20 method_vectorcall
[2m[36m(pid=9465)[0m     @     0x56509539cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9465)[0m     @     0x565095427baf _PyEval_EvalCodeWithName
[2m[36m(pid=9465)[0m     @     0x565095428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9465)[0m     @     0x56509539d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9465)[0m     @     0x565095427baf _PyEval_EvalCodeWithName
[2m[36m(pid=9465)[0m     @     0x565095428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9465)[0m     @     0x56509539d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9465)[0m     @     0x565095427baf _PyEval_EvalCodeWithName
[2m[36m(pid=9465)[0m     @     0x565095428643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9465)[0m     @     0x56509539d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9465)[0m     @     0x565095427baf _PyEval_EvalCodeWithName
[2m[36m(pid=9534)[0m     @     0x56200b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9534)[0m     @     0x56200b2d1a20 method_vectorcall
[2m[36m(pid=9534)[0m     @     0x56200b245bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9534)[0m     @     0x56200b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9534)[0m     @     0x56200b2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9534)[0m     @     0x56200b246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9534)[0m     @     0x56200b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9534)[0m     @     0x56200b2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9534)[0m     @     0x56200b246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9534)[0m     @     0x56200b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9534)[0m     @     0x56200b2d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9534)[0m     @     0x56200b246689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9534)[0m     @     0x56200b2d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=9562)[0m     @     0x7f0e2cc98148 at::Tensor::copy_()
[2m[36m(pid=9562)[0m     @     0x7f0e32f4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9562)[0m     @     0x55dd2f4b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9562)[0m     @     0x55dd2f40bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9562)[0m     @     0x55dd2f496baf _PyEval_EvalCodeWithName
[2m[36m(pid=9562)[0m     @     0x55dd2f497a20 method_vectorcall
[2m[36m(pid=9562)[0m     @     0x55dd2f40bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9562)[0m     @     0x55dd2f496baf _PyEval_EvalCodeWithName
[2m[36m(pid=9562)[0m     @     0x55dd2f497643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9562)[0m     @     0x55dd2f40c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9562)[0m     @     0x55dd2f496baf _PyEval_EvalCodeWithName
[2m[36m(pid=9562)[0m     @     0x55dd2f497643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9562)[0m     @     0x55dd2f40c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9562)[0m     @     0x55dd2f496baf _PyEval_EvalCodeWithName
[2m[36m(pid=9562)[0m     @     0x55dd2f497643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9562)[0m     @     0x55dd2f40c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9562)[0m     @     0x55dd2f496baf _PyEval_EvalCodeWithName
[2m[36m(pid=9554)[0m     @     0x7ed7ec93abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9554)[0m     @     0x55c41d8c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9554)[0m     @     0x55c41d81eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9554)[0m     @     0x55c41d8a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=9554)[0m     @     0x55c41d8aaa20 method_vectorcall
[2m[36m(pid=9554)[0m     @     0x55c41d81ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9554)[0m     @     0x55c41d8a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=9554)[0m     @     0x55c41d8aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9554)[0m     @     0x55c41d81f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9554)[0m     @     0x55c41d8a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=9554)[0m     @     0x55c41d8aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9554)[0m     @     0x55c41d81f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9554)[0m     @     0x55c41d8a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=9554)[0m     @     0x55c41d8aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9554)[0m     @     0x55c41d81f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9554)[0m     @     0x55c41d8a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=9510)[0m     @     0x7f01a2935148 at::Tensor::copy_()
[2m[36m(pid=9510)[0m     @     0x7f01a8bebbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9510)[0m     @     0x563bf9677fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9510)[0m     @     0x563bf95d2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9510)[0m     @     0x563bf965dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9510)[0m     @     0x563bf965ea20 method_vectorcall
[2m[36m(pid=9510)[0m     @     0x563bf95d2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9510)[0m     @     0x563bf965dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9510)[0m     @     0x563bf965e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9510)[0m     @     0x563bf95d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9510)[0m     @     0x563bf965dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9510)[0m     @     0x563bf965e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9510)[0m     @     0x563bf95d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9510)[0m     @     0x563bf965dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9510)[0m     @     0x563bf965e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9510)[0m     @     0x563bf95d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9510)[0m     @     0x563bf965dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9467)[0m     @     0x7f0b089dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9467)[0m     @     0x7f0b089dac3f at::native::copy_impl()
[2m[36m(pid=9467)[0m     @     0x7f0b089dbed4 at::native::copy_()
[2m[36m(pid=9467)[0m     @     0x7f0b0911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9467)[0m     @     0x7f0b09226148 at::Tensor::copy_()
[2m[36m(pid=9467)[0m     @     0x7f0b0ae1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9459)[0m     @     0x7f76c2905c3f at::native::copy_impl()
[2m[36m(pid=9459)[0m     @     0x7f76c2906ed4 at::native::copy_()
[2m[36m(pid=9459)[0m     @     0x7f76c30495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9459)[0m     @     0x7f76c3151148 at::Tensor::copy_()
[2m[36m(pid=9459)[0m     @     0x7f76c4d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9503)[0m     @     0x7fc5708ef009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9503)[0m     @     0x7fc5708edc3f at::native::copy_impl()
[2m[36m(pid=9503)[0m     @     0x7fc5708eeed4 at::native::copy_()
[2m[36m(pid=9503)[0m     @     0x7fc5710315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9503)[0m     @     0x7fc571139148 at::Tensor::copy_()
[2m[36m(pid=9503)[0m     @     0x7fc572d30989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9439)[0m     @     0x7f09d3267b53 at::TensorIterator::for_each()
[2m[36m(pid=9439)[0m     @     0x7f09d3267e11 at::TensorIterator::for_each()
[2m[36m(pid=9439)[0m     @     0x7f09d5f80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9439)[0m     @     0x7f09d5fa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9569)[0m     @     0x7fb7ab303ed4 at::native::copy_()
[2m[36m(pid=9569)[0m     @     0x7fb7aba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9569)[0m     @     0x7fb7abb4e148 at::Tensor::copy_()
[2m[36m(pid=9569)[0m     @     0x7fb7ad745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9569)[0m     @     0x7fb7aba465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9569)[0m     @     0x7fb7abb4e148 at::Tensor::copy_()
[2m[36m(pid=9569)[0m     @     0x7fb7b1e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9569)[0m     @     0x555bafef0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9569)[0m     @     0x555bafe4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9569)[0m     @     0x555bafed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9461)[0m     @     0x7f7eea0d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9461)[0m     @     0x7f7eea0d6c3f at::native::copy_impl()
[2m[36m(pid=9461)[0m     @     0x7f7eea0d7ed4 at::native::copy_()
[2m[36m(pid=9461)[0m     @     0x7f7eea81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9461)[0m     @     0x7f7eea922148 at::Tensor::copy_()
[2m[36m(pid=9461)[0m     @     0x7f7eec519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9461)[0m     @     0x7f7eea81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9440)[0m     @     0x7ef1c8bba148 at::Tensor::copy_()
[2m[36m(pid=9440)[0m     @     0x7ef1cee70bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9440)[0m     @     0x558a7d594fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9440)[0m     @     0x558a7d4efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9440)[0m     @     0x558a7d57abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9440)[0m     @     0x558a7d57ba20 method_vectorcall
[2m[36m(pid=9440)[0m     @     0x558a7d4efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9440)[0m     @     0x558a7d57abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9440)[0m     @     0x558a7d57b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9440)[0m     @     0x558a7d4f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9440)[0m     @     0x558a7d57abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9440)[0m     @     0x558a7d57b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9440)[0m     @     0x558a7d4f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9440)[0m     @     0x558a7d57abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9440)[0m     @     0x558a7d57b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9440)[0m     @     0x558a7d4f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9440)[0m     @     0x558a7d57abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9442)[0m     @     0x7f2becf78e11 at::TensorIterator::for_each()
[2m[36m(pid=9442)[0m     @     0x7f2befc91c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9442)[0m     @     0x7f2befcb4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9434)[0m     @     0x7f40ed2585cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9434)[0m     @     0x7f40ed360148 at::Tensor::copy_()
[2m[36m(pid=9434)[0m     @     0x7f40eef57989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9434)[0m     @     0x7f40ed2585cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9434)[0m     @     0x7f40ed360148 at::Tensor::copy_()
[2m[36m(pid=9507)[0m     @     0x55f9cf6c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9507)[0m     @     0x55f9cf63b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9507)[0m     @     0x55f9cf6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9507)[0m     @     0x55f9cf6c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9507)[0m     @     0x55f9cf63b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9507)[0m     @     0x55f9cf6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9507)[0m     @     0x55f9cf6c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9507)[0m     @     0x55f9cf63b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9507)[0m     @     0x55f9cf6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9453)[0m     @     0x55b36689cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9453)[0m     @     0x55b36689d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9453)[0m     @     0x55b366812689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9453)[0m     @     0x55b36689cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9453)[0m     @     0x55b36689d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9453)[0m     @     0x55b366812689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9453)[0m     @     0x55b36689cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9453)[0m     @     0x55b36689d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9453)[0m     @     0x55b366812689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9453)[0m     @     0x55b36689cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9517)[0m     @     0x7f7a35392b53 at::TensorIterator::for_each()
[2m[36m(pid=9517)[0m     @     0x7f7a35392e11 at::TensorIterator::for_each()
[2m[36m(pid=9517)[0m     @     0x7f7a380abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=9517)[0m     @     0x7f7a380cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=9517)[0m     @     0x7f7a3510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9517)[0m     @     0x7f7a3510ac3f at::native::copy_impl()
[2m[36m(pid=9553)[0m     @     0x7f5050adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9553)[0m     @     0x7f5050be7148 at::Tensor::copy_()
[2m[36m(pid=9553)[0m     @     0x7f50527de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9553)[0m     @     0x7f5050adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9553)[0m     @     0x7f5050be7148 at::Tensor::copy_()
[2m[36m(pid=9553)[0m     @     0x7f5056e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9553)[0m     @     0x5607ac2befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9553)[0m     @     0x5607ac219b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9553)[0m     @     0x5607ac2a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9553)[0m     @     0x5607ac2a5a20 method_vectorcall
[2m[36m(pid=9553)[0m     @     0x5607ac219bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9553)[0m     @     0x5607ac2a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9553)[0m     @     0x5607ac2a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9553)[0m     @     0x5607ac21a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9553)[0m     @     0x5607ac2a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9553)[0m     @     0x5607ac2a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9553)[0m     @     0x5607ac21a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9553)[0m     @     0x5607ac2a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9553)[0m     @     0x5607ac2a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9553)[0m     @     0x5607ac21a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9553)[0m     @     0x5607ac2a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=9504)[0m     @     0x7fc92824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9504)[0m     @     0x7fc928357148 at::Tensor::copy_()
[2m[36m(pid=9504)[0m     @     0x7fc929f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9504)[0m     @     0x7fc92824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9504)[0m     @     0x7fc928357148 at::Tensor::copy_()
[2m[36m(pid=9470)[0m     @     0x7ef96ce6c148 at::Tensor::copy_()
[2m[36m(pid=9470)[0m     @     0x7ef96ea63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9449)[0m     @     0x7f7308cd15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9449)[0m     @     0x7f7308dd9148 at::Tensor::copy_()
[2m[36m(pid=9449)[0m     @     0x7f730f08fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9449)[0m     @     0x5569d5f0ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9449)[0m     @     0x5569d5e6ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9449)[0m     @     0x5569d5ef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9449)[0m     @     0x5569d5ef6a20 method_vectorcall
[2m[36m(pid=9449)[0m     @     0x5569d5e6abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9449)[0m     @     0x5569d5ef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9449)[0m     @     0x5569d5ef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9449)[0m     @     0x5569d5e6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9449)[0m     @     0x5569d5ef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9449)[0m     @     0x5569d5ef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9449)[0m     @     0x5569d5e6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9449)[0m     @     0x5569d5ef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9449)[0m     @     0x5569d5ef6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9449)[0m     @     0x5569d5e6b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9449)[0m     @     0x5569d5ef5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9509)[0m     @     0x7f290dd08ed4 at::native::copy_()
[2m[36m(pid=9509)[0m     @     0x7f290e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9509)[0m     @     0x7f290e553148 at::Tensor::copy_()
[2m[36m(pid=9446)[0m     @     0x7f9c6d79d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9446)[0m     @     0x7f9c6d8a5148 at::Tensor::copy_()
[2m[36m(pid=9446)[0m     @     0x7f9c6f49c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9526)[0m     @     0x7f2d96a3e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9526)[0m     @     0x7f2d96b46148 at::Tensor::copy_()
[2m[36m(pid=9526)[0m     @     0x7f2d9cdfcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9526)[0m     @     0x55eba7a8bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9526)[0m     @     0x55eba79e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9526)[0m     @     0x55eba7a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=9526)[0m     @     0x55eba7a72a20 method_vectorcall
[2m[36m(pid=9526)[0m     @     0x55eba79e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9526)[0m     @     0x55eba7a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=9526)[0m     @     0x55eba7a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9526)[0m     @     0x55eba79e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9526)[0m     @     0x55eba7a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=9526)[0m     @     0x55eba7a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9526)[0m     @     0x55eba79e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9526)[0m     @     0x55eba7a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=9526)[0m     @     0x55eba7a72643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9526)[0m     @     0x55eba79e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9526)[0m     @     0x55eba7a71baf _PyEval_EvalCodeWithName
[2m[36m(pid=9450)[0m     @     0x7fccbc2da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9450)[0m     @     0x7fccbc3e2148 at::Tensor::copy_()
[2m[36m(pid=9450)[0m     @     0x7fccc2698bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9450)[0m     @     0x560d3ca11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9450)[0m     @     0x560d3c96cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9450)[0m     @     0x560d3c9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9450)[0m     @     0x560d3c9f8a20 method_vectorcall
[2m[36m(pid=9450)[0m     @     0x560d3c96cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9450)[0m     @     0x560d3c9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9450)[0m     @     0x560d3c9f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9450)[0m     @     0x560d3c96d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9450)[0m     @     0x560d3c9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9450)[0m     @     0x560d3c9f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9450)[0m     @     0x560d3c96d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9450)[0m     @     0x560d3c9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9450)[0m     @     0x560d3c9f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9450)[0m     @     0x560d3c96d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9450)[0m     @     0x560d3c9f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9496)[0m     @     0x7edbad2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9496)[0m     @     0x7edbad32b148 at::Tensor::copy_()
[2m[36m(pid=9496)[0m     @     0x7edbb35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9496)[0m     @     0x557e2d476fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9496)[0m     @     0x557e2d3d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9496)[0m     @     0x557e2d45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9496)[0m     @     0x557e2d45da20 method_vectorcall
[2m[36m(pid=9496)[0m     @     0x557e2d3d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9496)[0m     @     0x557e2d45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9496)[0m     @     0x557e2d45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9496)[0m     @     0x557e2d3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9496)[0m     @     0x557e2d45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9496)[0m     @     0x557e2d45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9496)[0m     @     0x557e2d3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9496)[0m     @     0x557e2d45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9496)[0m     @     0x557e2d45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9496)[0m     @     0x557e2d3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9496)[0m     @     0x557e2d45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9552)[0m     @     0x7f9e66801148 at::Tensor::copy_()
[2m[36m(pid=9552)[0m     @     0x7f9e683f8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9552)[0m     @     0x7f9e666f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9561)[0m     @     0x7fc7aad5b148 at::Tensor::copy_()
[2m[36m(pid=9561)[0m     @     0x7fc7ac952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9561)[0m     @     0x7fc7aac535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9561)[0m     @     0x7fc7aad5b148 at::Tensor::copy_()
[2m[36m(pid=9452)[0m     @     0x7eda227de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9452)[0m     @     0x7eda20adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9452)[0m     @     0x7eda20be7148 at::Tensor::copy_()
[2m[36m(pid=9452)[0m     @     0x7eda26e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9452)[0m     @     0x55ff45bd7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9452)[0m     @     0x55ff45b32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9452)[0m     @     0x55ff45bbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9452)[0m     @     0x55ff45bbea20 method_vectorcall
[2m[36m(pid=9452)[0m     @     0x55ff45b32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9452)[0m     @     0x55ff45bbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9452)[0m     @     0x55ff45bbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9452)[0m     @     0x55ff45b33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9452)[0m     @     0x55ff45bbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9452)[0m     @     0x55ff45bbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9452)[0m     @     0x55ff45b33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9452)[0m     @     0x55ff45bbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9452)[0m     @     0x55ff45bbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9452)[0m     @     0x55ff45b33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9452)[0m     @     0x55ff45bbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9558)[0m     @     0x7f5aae7de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9558)[0m     @     0x7f5aacadf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9558)[0m     @     0x7f5aacbe7148 at::Tensor::copy_()
[2m[36m(pid=9558)[0m     @     0x7f5ab2e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9558)[0m     @     0x56028d454fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9558)[0m     @     0x56028d3afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9558)[0m     @     0x56028d43abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9558)[0m     @     0x56028d43ba20 method_vectorcall
[2m[36m(pid=9558)[0m     @     0x56028d3afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9541)[0m     @     0x7f2943f34989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9541)[0m     @     0x7f29422355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9541)[0m     @     0x7f294233d148 at::Tensor::copy_()
[2m[36m(pid=9541)[0m     @     0x7f29485f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9541)[0m     @     0x561c15c17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9541)[0m     @     0x561c15b72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9513)[0m     @     0x7f65667da5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9513)[0m     @     0x7f65668e2148 at::Tensor::copy_()
[2m[36m(pid=9513)[0m     @     0x7f656cb98bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9513)[0m     @     0x55f332111fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9513)[0m     @     0x55f33206cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9513)[0m     @     0x55f3320f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9513)[0m     @     0x55f3320f8a20 method_vectorcall
[2m[36m(pid=9513)[0m     @     0x55f33206cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9513)[0m     @     0x55f3320f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9513)[0m     @     0x55f3320f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9513)[0m     @     0x55f33206d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9513)[0m     @     0x55f3320f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9513)[0m     @     0x55f3320f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9513)[0m     @     0x55f33206d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9513)[0m     @     0x55f3320f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9513)[0m     @     0x55f3320f8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9513)[0m     @     0x55f33206d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9513)[0m     @     0x55f3320f7baf _PyEval_EvalCodeWithName
[2m[36m(pid=9437)[0m     @     0x7f1fa04ae148 at::Tensor::copy_()
[2m[36m(pid=9437)[0m     @     0x7f1fa20a5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9437)[0m     @     0x7f1fa03a65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9436)[0m     @     0x7fb948cf65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9436)[0m     @     0x7fb948dfe148 at::Tensor::copy_()
[2m[36m(pid=9436)[0m     @     0x7fb94f0b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9436)[0m     @     0x55ebcfd00fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9436)[0m     @     0x55ebcfc5bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9436)[0m     @     0x55ebcfce6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9436)[0m     @     0x55ebcfce7a20 method_vectorcall
[2m[36m(pid=9436)[0m     @     0x55ebcfc5bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9436)[0m     @     0x55ebcfce6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9436)[0m     @     0x55ebcfce7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9436)[0m     @     0x55ebcfc5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9436)[0m     @     0x55ebcfce6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9436)[0m     @     0x55ebcfce7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9436)[0m     @     0x55ebcfc5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9436)[0m     @     0x55ebcfce6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9436)[0m     @     0x55ebcfce7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9436)[0m     @     0x55ebcfc5c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9436)[0m     @     0x55ebcfce6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9458)[0m     @     0x7edffe510ed4 at::native::copy_()
[2m[36m(pid=9458)[0m     @     0x7edffec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9458)[0m     @     0x7edffed5b148 at::Tensor::copy_()
[2m[36m(pid=9458)[0m     @     0x7ee000952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9458)[0m     @     0x7edffec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9505)[0m     @     0x7f7510f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9505)[0m     @     0x7f7511015148 at::Tensor::copy_()
[2m[36m(pid=9505)[0m     @     0x7f7512c0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9448)[0m     @     0x7f21dcce15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9448)[0m     @     0x7f21dcde9148 at::Tensor::copy_()
[2m[36m(pid=9448)[0m     @     0x7f21e309fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9448)[0m     @     0x55d2b885cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9448)[0m     @     0x55d2b87b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9448)[0m     @     0x55d2b8842baf _PyEval_EvalCodeWithName
[2m[36m(pid=9448)[0m     @     0x55d2b8843a20 method_vectorcall
[2m[36m(pid=9448)[0m     @     0x55d2b87b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9448)[0m     @     0x55d2b8842baf _PyEval_EvalCodeWithName
[2m[36m(pid=9448)[0m     @     0x55d2b8843643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9448)[0m     @     0x55d2b87b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9448)[0m     @     0x55d2b8842baf _PyEval_EvalCodeWithName
[2m[36m(pid=9448)[0m     @     0x55d2b8843643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9448)[0m     @     0x55d2b87b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9448)[0m     @     0x55d2b8842baf _PyEval_EvalCodeWithName
[2m[36m(pid=9448)[0m     @     0x55d2b8843643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9448)[0m     @     0x55d2b87b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9448)[0m     @     0x55d2b8842baf _PyEval_EvalCodeWithName
[2m[36m(pid=9455)[0m     @     0x7f94c2a6b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9455)[0m     @     0x7f94c2b73148 at::Tensor::copy_()
[2m[36m(pid=9455)[0m     @     0x7f94c8e29bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9455)[0m     @     0x563ac661afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9455)[0m     @     0x563ac6575b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9455)[0m     @     0x563ac6600baf _PyEval_EvalCodeWithName
[2m[36m(pid=9455)[0m     @     0x563ac6601a20 method_vectorcall
[2m[36m(pid=9455)[0m     @     0x563ac6575bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9455)[0m     @     0x563ac6600baf _PyEval_EvalCodeWithName
[2m[36m(pid=9455)[0m     @     0x563ac6601643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9455)[0m     @     0x563ac6576689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9455)[0m     @     0x563ac6600baf _PyEval_EvalCodeWithName
[2m[36m(pid=9455)[0m     @     0x563ac6601643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9455)[0m     @     0x563ac6576689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9455)[0m     @     0x563ac6600baf _PyEval_EvalCodeWithName
[2m[36m(pid=9455)[0m     @     0x563ac6601643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9455)[0m     @     0x563ac6576689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9455)[0m     @     0x563ac6600baf _PyEval_EvalCodeWithName
[2m[36m(pid=9464)[0m     @     0x7f6ee7dc2148 at::Tensor::copy_()
[2m[36m(pid=9464)[0m     @     0x7f6eee078bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9464)[0m     @     0x5602cbad7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9464)[0m     @     0x5602cba32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9464)[0m     @     0x5602cbabdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9464)[0m     @     0x5602cbabea20 method_vectorcall
[2m[36m(pid=9464)[0m     @     0x5602cba32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9464)[0m     @     0x5602cbabdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9464)[0m     @     0x5602cbabe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9464)[0m     @     0x5602cba33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9464)[0m     @     0x5602cbabdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9464)[0m     @     0x5602cbabe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9464)[0m     @     0x5602cba33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9464)[0m     @     0x5602cbabdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9464)[0m     @     0x5602cbabe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9464)[0m     @     0x5602cba33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9464)[0m     @     0x5602cbabdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9556)[0m     @     0x7f8faf9e3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9556)[0m     @     0x7f8fadce45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9556)[0m     @     0x7f8faddec148 at::Tensor::copy_()
[2m[36m(pid=9556)[0m     @     0x7f8fb40a2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9556)[0m     @     0x55a09e102fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9556)[0m     @     0x55a09e05db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9556)[0m     @     0x55a09e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9556)[0m     @     0x55a09e0e9a20 method_vectorcall
[2m[36m(pid=9556)[0m     @     0x55a09e05dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9556)[0m     @     0x55a09e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9556)[0m     @     0x55a09e0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9556)[0m     @     0x55a09e05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9556)[0m     @     0x55a09e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9556)[0m     @     0x55a09e0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9556)[0m     @     0x55a09e05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9556)[0m     @     0x55a09e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9556)[0m     @     0x55a09e0e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9556)[0m     @     0x55a09e05e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9556)[0m     @     0x55a09e0e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=9469)[0m     @     0x7f244cb16989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9469)[0m     @     0x7f244ae175cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9469)[0m     @     0x7f244af1f148 at::Tensor::copy_()
[2m[36m(pid=9469)[0m     @     0x7f24511d5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9469)[0m     @     0x560af3670fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9469)[0m     @     0x560af35cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9469)[0m     @     0x560af3656baf _PyEval_EvalCodeWithName
[2m[36m(pid=9469)[0m     @     0x560af3657a20 method_vectorcall
[2m[36m(pid=9469)[0m     @     0x560af35cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9469)[0m     @     0x560af3656baf _PyEval_EvalCodeWithName
[2m[36m(pid=9469)[0m     @     0x560af3657643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9469)[0m     @     0x560af35cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9469)[0m     @     0x560af3656baf _PyEval_EvalCodeWithName
[2m[36m(pid=9469)[0m     @     0x560af3657643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9469)[0m     @     0x560af35cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9469)[0m     @     0x560af3656baf _PyEval_EvalCodeWithName
[2m[36m(pid=9469)[0m     @     0x560af3657643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9469)[0m     @     0x560af35cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9469)[0m     @     0x560af3656baf _PyEval_EvalCodeWithName
[2m[36m(pid=9438)[0m     @     0x7f9c8f72e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9438)[0m     @     0x7f9c8da2f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9438)[0m     @     0x7f9c8db37148 at::Tensor::copy_()
[2m[36m(pid=9438)[0m     @     0x7f9c93dedbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9438)[0m     @     0x5561ba592fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9438)[0m     @     0x5561ba4edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9438)[0m     @     0x5561ba578baf _PyEval_EvalCodeWithName
[2m[36m(pid=9438)[0m     @     0x5561ba579a20 method_vectorcall
[2m[36m(pid=9438)[0m     @     0x5561ba4edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9438)[0m     @     0x5561ba578baf _PyEval_EvalCodeWithName
[2m[36m(pid=9438)[0m     @     0x5561ba579643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9438)[0m     @     0x5561ba4ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9438)[0m     @     0x5561ba578baf _PyEval_EvalCodeWithName
[2m[36m(pid=9438)[0m     @     0x5561ba579643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9438)[0m     @     0x5561ba4ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9438)[0m     @     0x5561ba578baf _PyEval_EvalCodeWithName
[2m[36m(pid=9438)[0m     @     0x5561ba579643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9438)[0m     @     0x5561ba4ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9438)[0m     @     0x5561ba578baf _PyEval_EvalCodeWithName
[2m[36m(pid=9447)[0m     @     0x7f1ae09b1148 at::Tensor::copy_()
[2m[36m(pid=9447)[0m     @     0x7f1ae6c67bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9447)[0m     @     0x55847d0b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9447)[0m     @     0x55847d011b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9447)[0m     @     0x55847d09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9447)[0m     @     0x55847d09da20 method_vectorcall
[2m[36m(pid=9447)[0m     @     0x55847d011bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9447)[0m     @     0x55847d09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9447)[0m     @     0x55847d09d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9447)[0m     @     0x55847d012689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9447)[0m     @     0x55847d09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9447)[0m     @     0x55847d09d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9447)[0m     @     0x55847d012689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9447)[0m     @     0x55847d09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9447)[0m     @     0x55847d09d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9447)[0m     @     0x55847d012689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9447)[0m     @     0x55847d09cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9512)[0m     @     0x7ed149b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9512)[0m     @     0x7ed149c6c148 at::Tensor::copy_()
[2m[36m(pid=9512)[0m     @     0x7ed14ff22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9512)[0m     @     0x55cbc170ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9512)[0m     @     0x55cbc166ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9512)[0m     @     0x55cbc16f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9512)[0m     @     0x55cbc16f6a20 method_vectorcall
[2m[36m(pid=9512)[0m     @     0x55cbc166abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9512)[0m     @     0x55cbc16f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9512)[0m     @     0x55cbc16f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9512)[0m     @     0x55cbc166b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9512)[0m     @     0x55cbc16f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9512)[0m     @     0x55cbc16f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9512)[0m     @     0x55cbc166b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9512)[0m     @     0x55cbc16f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9512)[0m     @     0x55cbc16f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9512)[0m     @     0x55cbc166b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9512)[0m     @     0x55cbc16f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=9445)[0m     @     0x7f07bcc4f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9445)[0m     @     0x7f07bcd57148 at::Tensor::copy_()
[2m[36m(pid=9445)[0m     @     0x7f07c300dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9445)[0m     @     0x5568a319afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9445)[0m     @     0x5568a30f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9445)[0m     @     0x5568a3180baf _PyEval_EvalCodeWithName
[2m[36m(pid=9445)[0m     @     0x5568a3181a20 method_vectorcall
[2m[36m(pid=9445)[0m     @     0x5568a30f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9445)[0m     @     0x5568a3180baf _PyEval_EvalCodeWithName
[2m[36m(pid=9445)[0m     @     0x5568a3181643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9445)[0m     @     0x5568a30f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9445)[0m     @     0x5568a3180baf _PyEval_EvalCodeWithName
[2m[36m(pid=9445)[0m     @     0x5568a3181643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9445)[0m     @     0x5568a30f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9445)[0m     @     0x5568a3180baf _PyEval_EvalCodeWithName
[2m[36m(pid=9445)[0m     @     0x5568a3181643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9445)[0m     @     0x5568a30f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9445)[0m     @     0x5568a3180baf _PyEval_EvalCodeWithName
[2m[36m(pid=9522)[0m     @     0x7efa51e7d148 at::Tensor::copy_()
[2m[36m(pid=9522)[0m     @     0x7efa53a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9522)[0m     @     0x7efa51d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9522)[0m     @     0x7efa51e7d148 at::Tensor::copy_()
[2m[36m(pid=9522)[0m     @     0x7efa58133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9522)[0m     @     0x55a485f55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9522)[0m     @     0x55a485eb0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9522)[0m     @     0x55a485f3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9522)[0m     @     0x55a485f3ca20 method_vectorcall
[2m[36m(pid=9522)[0m     @     0x55a485eb0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9522)[0m     @     0x55a485f3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9522)[0m     @     0x55a485f3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9522)[0m     @     0x55a485eb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9522)[0m     @     0x55a485f3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9522)[0m     @     0x55a485f3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9522)[0m     @     0x55a485eb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9467)[0m     @     0x7f0b0911e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9459)[0m     @     0x7f76c30495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9459)[0m     @     0x7f76c3151148 at::Tensor::copy_()
[2m[36m(pid=9459)[0m     @     0x7f76c9407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9459)[0m     @     0x55b856d89fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9459)[0m     @     0x55b856ce4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9459)[0m     @     0x55b856d6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9459)[0m     @     0x55b856d70a20 method_vectorcall
[2m[36m(pid=9459)[0m     @     0x55b856ce4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9459)[0m     @     0x55b856d6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9459)[0m     @     0x55b856d70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9459)[0m     @     0x55b856ce5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9459)[0m     @     0x55b856d6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9459)[0m     @     0x55b856d70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9459)[0m     @     0x55b856ce5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9459)[0m     @     0x55b856d6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9459)[0m     @     0x55b856d70643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9459)[0m     @     0x55b856ce5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9459)[0m     @     0x55b856d6fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9503)[0m     @     0x7fc5710315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9503)[0m     @     0x7fc571139148 at::Tensor::copy_()
[2m[36m(pid=9503)[0m     @     0x7fc5773efbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9503)[0m     @     0x55e542808fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9503)[0m     @     0x55e542763b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9503)[0m     @     0x55e5427eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9503)[0m     @     0x55e5427efa20 method_vectorcall
[2m[36m(pid=9503)[0m     @     0x55e542763bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9503)[0m     @     0x55e5427eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9503)[0m     @     0x55e5427ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9503)[0m     @     0x55e542764689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9503)[0m     @     0x55e5427eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9503)[0m     @     0x55e5427ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9503)[0m     @     0x55e542764689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9503)[0m     @     0x55e5427eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9503)[0m     @     0x55e5427ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9503)[0m     @     0x55e542764689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9503)[0m     @     0x55e5427eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x7f09d2fe1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9439)[0m     @     0x7f09d2fdfc3f at::native::copy_impl()
[2m[36m(pid=9569)[0m     @     0x555bafed7a20 method_vectorcall
[2m[36m(pid=9569)[0m     @     0x555bafe4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9569)[0m     @     0x555bafed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9569)[0m     @     0x555bafed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9569)[0m     @     0x555bafe4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9569)[0m     @     0x555bafed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9569)[0m     @     0x555bafed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9569)[0m     @     0x555bafe4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9569)[0m     @     0x555bafed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9569)[0m     @     0x555bafed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9569)[0m     @     0x555bafe4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9569)[0m     @     0x555bafed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=9461)[0m     @     0x7f7eea922148 at::Tensor::copy_()
[2m[36m(pid=9461)[0m     @     0x7f7ef0bd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9461)[0m     @     0x557dcd6ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9461)[0m     @     0x557dcd646b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9461)[0m     @     0x557dcd6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9461)[0m     @     0x557dcd6d2a20 method_vectorcall
[2m[36m(pid=9461)[0m     @     0x557dcd646bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9461)[0m     @     0x557dcd6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9461)[0m     @     0x557dcd6d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9461)[0m     @     0x557dcd647689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9461)[0m     @     0x557dcd6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9461)[0m     @     0x557dcd6d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9461)[0m     @     0x557dcd647689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9461)[0m     @     0x557dcd6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9461)[0m     @     0x557dcd6d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9461)[0m     @     0x557dcd647689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9461)[0m     @     0x557dcd6d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=9442)[0m     @     0x7f2beccf2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=9442)[0m     @     0x7f2beccf0c3f at::native::copy_impl()
[2m[36m(pid=9434)[0m     @     0x7f6fb86dbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9434)[0m     @     0x5597bf848fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9434)[0m     @     0x5597bf7a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9434)[0m     @     0x5597bf82ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9434)[0m     @     0x5597bf82fa20 method_vectorcall
[2m[36m(pid=9434)[0m     @     0x5597bf7a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9434)[0m     @     0x5597bf82ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9434)[0m     @     0x5597bf82f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9434)[0m     @     0x5597bf7a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9434)[0m     @     0x5597bf82ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9434)[0m     @     0x5597bf82f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9434)[0m     @     0x5597bf7a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9434)[0m     @     0x5597bf82ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9434)[0m     @     0x5597bf82f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9434)[0m     @     0x5597bf7a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9434)[0m     @     0x5597bf82ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9517)[0m     @     0x7f7a3510bed4 at::native::copy_()
[2m[36m(pid=9517)[0m     @     0x7f7a3584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9504)[0m     @     0x7fc92e60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9504)[0m     @     0x55f177da6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9504)[0m     @     0x55f177d01b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9504)[0m     @     0x55f177d8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9504)[0m     @     0x55f177d8da20 method_vectorcall
[2m[36m(pid=9504)[0m     @     0x55f177d01bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9504)[0m     @     0x55f177d8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9504)[0m     @     0x55f177d8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9504)[0m     @     0x55f177d02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9504)[0m     @     0x55f177d8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9504)[0m     @     0x55f177d8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9504)[0m     @     0x55f177d02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9504)[0m     @     0x55f177d8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9504)[0m     @     0x55f177d8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9504)[0m     @     0x55f177d02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9504)[0m     @     0x55f177d8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9470)[0m     @     0x7ef96cd645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9470)[0m     @     0x7ef96ce6c148 at::Tensor::copy_()
[2m[36m(pid=9470)[0m     @     0x7ef973122bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9470)[0m     @     0x565525067fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9470)[0m     @     0x565524fc2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9470)[0m     @     0x56552504dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9470)[0m     @     0x56552504ea20 method_vectorcall
[2m[36m(pid=9470)[0m     @     0x565524fc2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9470)[0m     @     0x56552504dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9470)[0m     @     0x56552504e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9470)[0m     @     0x565524fc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9470)[0m     @     0x56552504dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9470)[0m     @     0x56552504e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9470)[0m     @     0x565524fc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9470)[0m     @     0x56552504dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9470)[0m     @     0x56552504e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9470)[0m     @     0x565524fc3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9470)[0m     @     0x56552504dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9509)[0m     @     0x7f291014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9509)[0m     @     0x7f290e44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9509)[0m     @     0x7f290e553148 at::Tensor::copy_()
[2m[36m(pid=9509)[0m     @     0x7f2914809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9509)[0m     @     0x556bf2eacfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9509)[0m     @     0x556bf2e07b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9509)[0m     @     0x556bf2e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=9509)[0m     @     0x556bf2e93a20 method_vectorcall
[2m[36m(pid=9509)[0m     @     0x556bf2e07bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9509)[0m     @     0x556bf2e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=9509)[0m     @     0x556bf2e93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9509)[0m     @     0x556bf2e08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9509)[0m     @     0x556bf2e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=9509)[0m     @     0x556bf2e93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9509)[0m     @     0x556bf2e08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9509)[0m     @     0x556bf2e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=9509)[0m     @     0x556bf2e93643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9509)[0m     @     0x556bf2e08689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9509)[0m     @     0x556bf2e92baf _PyEval_EvalCodeWithName
[2m[36m(pid=9446)[0m     @     0x7f9c6d79d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9446)[0m     @     0x7f9c6d8a5148 at::Tensor::copy_()
[2m[36m(pid=9446)[0m     @     0x7f9c73b5bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9446)[0m     @     0x559e7b324fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9446)[0m     @     0x559e7b27fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9446)[0m     @     0x559e7b30abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9446)[0m     @     0x559e7b30ba20 method_vectorcall
[2m[36m(pid=9446)[0m     @     0x559e7b27fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9446)[0m     @     0x559e7b30abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9446)[0m     @     0x559e7b30b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9446)[0m     @     0x559e7b280689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9446)[0m     @     0x559e7b30abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9446)[0m     @     0x559e7b30b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9446)[0m     @     0x559e7b280689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9446)[0m     @     0x559e7b30abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9446)[0m     @     0x559e7b30b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9446)[0m     @     0x559e7b280689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9446)[0m     @     0x559e7b30abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9552)[0m     @     0x7f9e66801148 at::Tensor::copy_()
[2m[36m(pid=9552)[0m     @     0x7f9e6cab7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9552)[0m     @     0x559193a0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9552)[0m     @     0x559193968b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9552)[0m     @     0x5591939f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=9552)[0m     @     0x5591939f4a20 method_vectorcall
[2m[36m(pid=9552)[0m     @     0x559193968bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9552)[0m     @     0x5591939f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=9552)[0m     @     0x5591939f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9552)[0m     @     0x559193969689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9552)[0m     @     0x5591939f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=9552)[0m     @     0x5591939f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9552)[0m     @     0x559193969689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9552)[0m     @     0x5591939f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=9552)[0m     @     0x5591939f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9552)[0m     @     0x559193969689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9552)[0m     @     0x5591939f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=9561)[0m     @     0x7fc7b1011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9561)[0m     @     0x564477e4cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9561)[0m     @     0x564477da7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9561)[0m     @     0x564477e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=9561)[0m     @     0x564477e33a20 method_vectorcall
[2m[36m(pid=9561)[0m     @     0x564477da7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9561)[0m     @     0x564477e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=9561)[0m     @     0x564477e33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9561)[0m     @     0x564477da8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9561)[0m     @     0x564477e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=9561)[0m     @     0x564477e33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9561)[0m     @     0x564477da8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9561)[0m     @     0x564477e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=9561)[0m     @     0x564477e33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9561)[0m     @     0x564477da8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9561)[0m     @     0x564477e32baf _PyEval_EvalCodeWithName
[2m[36m(pid=9558)[0m     @     0x56028d43abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9558)[0m     @     0x56028d43b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9558)[0m     @     0x56028d3b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9558)[0m     @     0x56028d43abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9558)[0m     @     0x56028d43b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9558)[0m     @     0x56028d3b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9558)[0m     @     0x56028d43abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9558)[0m     @     0x56028d43b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9558)[0m     @     0x56028d3b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9558)[0m     @     0x56028d43abaf _PyEval_EvalCodeWithName
[2m[36m(pid=9541)[0m     @     0x561c15bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9541)[0m     @     0x561c15bfea20 method_vectorcall
[2m[36m(pid=9541)[0m     @     0x561c15b72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9541)[0m     @     0x561c15bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9541)[0m     @     0x561c15bfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9541)[0m     @     0x561c15b73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9541)[0m     @     0x561c15bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9541)[0m     @     0x561c15bfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9541)[0m     @     0x561c15b73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9541)[0m     @     0x561c15bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9541)[0m     @     0x561c15bfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9541)[0m     @     0x561c15b73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9541)[0m     @     0x561c15bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9437)[0m     @     0x7f1fa04ae148 at::Tensor::copy_()
[2m[36m(pid=9437)[0m     @     0x7f1fa6764bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9437)[0m     @     0x556100d73fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9437)[0m     @     0x556100cceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9437)[0m     @     0x556100d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=9437)[0m     @     0x556100d5aa20 method_vectorcall
[2m[36m(pid=9437)[0m     @     0x556100ccebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9437)[0m     @     0x556100d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=9437)[0m     @     0x556100d5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9437)[0m     @     0x556100ccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9437)[0m     @     0x556100d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=9437)[0m     @     0x556100d5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9437)[0m     @     0x556100ccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9437)[0m     @     0x556100d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=9437)[0m     @     0x556100d5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9437)[0m     @     0x556100ccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9437)[0m     @     0x556100d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=9458)[0m     @     0x7edffed5b148 at::Tensor::copy_()
[2m[36m(pid=9458)[0m     @     0x7ee005011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9458)[0m     @     0x556441d09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9458)[0m     @     0x556441c64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9458)[0m     @     0x556441cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9458)[0m     @     0x556441cf0a20 method_vectorcall
[2m[36m(pid=9458)[0m     @     0x556441c64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9458)[0m     @     0x556441cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9458)[0m     @     0x556441cf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9458)[0m     @     0x556441c65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9458)[0m     @     0x556441cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9458)[0m     @     0x556441cf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9458)[0m     @     0x556441c65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9458)[0m     @     0x556441cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9458)[0m     @     0x556441cf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9458)[0m     @     0x556441c65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9458)[0m     @     0x556441cefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9505)[0m     @     0x7f7510f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9505)[0m     @     0x7f7511015148 at::Tensor::copy_()
[2m[36m(pid=9505)[0m     @     0x7f75172cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9505)[0m     @     0x55e750b6afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9505)[0m     @     0x55e750ac5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9505)[0m     @     0x55e750b50baf _PyEval_EvalCodeWithName
[2m[36m(pid=9505)[0m     @     0x55e750b51a20 method_vectorcall
[2m[36m(pid=9505)[0m     @     0x55e750ac5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9505)[0m     @     0x55e750b50baf _PyEval_EvalCodeWithName
[2m[36m(pid=9505)[0m     @     0x55e750b51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9505)[0m     @     0x55e750ac6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9505)[0m     @     0x55e750b50baf _PyEval_EvalCodeWithName
[2m[36m(pid=9505)[0m     @     0x55e750b51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9505)[0m     @     0x55e750ac6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9505)[0m     @     0x55e750b50baf _PyEval_EvalCodeWithName
[2m[36m(pid=9505)[0m     @     0x55e750b51643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9522)[0m     @     0x55a485f3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9522)[0m     @     0x55a485f3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9522)[0m     @     0x55a485eb1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9522)[0m     @     0x55a485f3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9467)[0m     @     0x7f0b09226148 at::Tensor::copy_()
[2m[36m(pid=9467)[0m     @     0x7f0b0f4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9467)[0m     @     0x559f78138fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9467)[0m     @     0x559f78093b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9467)[0m     @     0x559f7811ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9467)[0m     @     0x559f7811fa20 method_vectorcall
[2m[36m(pid=9467)[0m     @     0x559f78093bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9467)[0m     @     0x559f7811ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9467)[0m     @     0x559f7811f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9467)[0m     @     0x559f78094689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9467)[0m     @     0x559f7811ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9467)[0m     @     0x559f7811f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9467)[0m     @     0x559f78094689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9467)[0m     @     0x559f7811ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9467)[0m     @     0x559f7811f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9467)[0m     @     0x559f78094689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9467)[0m     @     0x559f7811ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x7f09d2fe0ed4 at::native::copy_()
[2m[36m(pid=9442)[0m     @     0x7f2beccf1ed4 at::native::copy_()
[2m[36m(pid=9517)[0m     @     0x7f7a35956148 at::Tensor::copy_()
[2m[36m(pid=9517)[0m     @     0x7f7a3754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9517)[0m     @     0x7f7a3584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9505)[0m     @     0x55e750ac6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9505)[0m     @     0x55e750b50baf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x7f09d37235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9442)[0m     @     0x7f2bed4345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9442)[0m     @     0x7f2bed53c148 at::Tensor::copy_()
[2m[36m(pid=9517)[0m     @     0x7f7a35956148 at::Tensor::copy_()
[2m[36m(pid=9517)[0m     @     0x7f7a3bc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9517)[0m     @     0x55ba2c096fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9517)[0m     @     0x55ba2bff1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9517)[0m     @     0x55ba2c07cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9517)[0m     @     0x55ba2c07da20 method_vectorcall
[2m[36m(pid=9517)[0m     @     0x55ba2bff1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9517)[0m     @     0x55ba2c07cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9517)[0m     @     0x55ba2c07d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9517)[0m     @     0x55ba2bff2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9517)[0m     @     0x55ba2c07cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9517)[0m     @     0x55ba2c07d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9517)[0m     @     0x55ba2bff2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9517)[0m     @     0x55ba2c07cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9517)[0m     @     0x55ba2c07d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9517)[0m     @     0x55ba2bff2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9517)[0m     @     0x55ba2c07cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x7f09d382b148 at::Tensor::copy_()
[2m[36m(pid=9439)[0m     @     0x7f09d5422989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=9442)[0m     @     0x7f2bef133989 torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:58:17,073	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:58:17,081	ERROR trial_runner.py:567 -- Trial PPO_jss_env_ca79b_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=9568, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:58:17,085	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:58:17,086	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
== Status ==
Memory usage on this node: 25.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ca79b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ca79b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ca79b_00000_0_2020-11-05_10-58-09/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.71 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ca79b_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ca79b_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ca79b_00000_0_2020-11-05_10-58-09/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[36m(pid=9439)[0m     @     0x7f09d37235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9439)[0m     @     0x7f09d382b148 at::Tensor::copy_()
[2m[36m(pid=9439)[0m     @     0x7f09d9ae1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9439)[0m     @     0x55580c1b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9439)[0m     @     0x55580c112b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9439)[0m     @     0x55580c19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x55580c19ea20 method_vectorcall
[2m[36m(pid=9439)[0m     @     0x55580c112bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9439)[0m     @     0x55580c19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x55580c19e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9439)[0m     @     0x55580c113689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9439)[0m     @     0x55580c19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x55580c19e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9439)[0m     @     0x55580c113689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9439)[0m     @     0x55580c19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9439)[0m     @     0x55580c19e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9439)[0m     @     0x55580c113689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9439)[0m     @     0x55580c19dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9442)[0m     @     0x7f2bed4345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=9442)[0m     @     0x7f2bed53c148 at::Tensor::copy_()
[2m[36m(pid=9442)[0m     @     0x7f2bf37f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=9442)[0m     @     0x55ae27819fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=9442)[0m     @     0x55ae27774b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9442)[0m     @     0x55ae277ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9442)[0m     @     0x55ae27800a20 method_vectorcall
[2m[36m(pid=9442)[0m     @     0x55ae27774bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9442)[0m     @     0x55ae277ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9442)[0m     @     0x55ae27800643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9442)[0m     @     0x55ae27775689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9442)[0m     @     0x55ae277ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9442)[0m     @     0x55ae27800643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9442)[0m     @     0x55ae27775689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9442)[0m     @     0x55ae277ffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=9442)[0m     @     0x55ae27800643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=9442)[0m     @     0x55ae27775689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=9442)[0m     @     0x55ae277ffbaf _PyEval_EvalCodeWithName
2020-11-05 10:58:17,118	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8d06128001000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_ca79b_00000])
