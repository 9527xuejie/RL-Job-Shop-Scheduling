2020-11-05 10:49:34,224	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_9827f_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=59906)[0m 2020-11-05 10:49:37,034	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=59906)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=59906)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=59906)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=59906)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=59906)[0m 
[2m[36m(pid=59906)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=59931)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59931)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59931)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59931)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59931)[0m *** SIGSEGV (@0x0) received by PID 59931 (TID 0x7f20bd6e6700) from PID 0; stack trace: ***
[2m[36m(pid=59931)[0m     @     0x7f20bd2bf390 (unknown)
[2m[36m(pid=59931)[0m     @     0x7ef1bd24af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59931)[0m     @     0x7ef1bc9757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59931)[0m     @     0x7ef1bc9788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59931)[0m     @     0x7ef1bc978ad3 at::TensorIterator::for_each()
[2m[36m(pid=59931)[0m     @     0x7ef1bc978d91 at::TensorIterator::for_each()
[2m[36m(pid=59931)[0m     @     0x7ef1bd25bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59931)[0m     @     0x7ef1bd27ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59901)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59901)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59901)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59893)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59893)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59893)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59893)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59893)[0m *** SIGSEGV (@0x0) received by PID 59893 (TID 0x7fcb36000700) from PID 0; stack trace: ***
[2m[36m(pid=59893)[0m     @     0x7fcb35bd9390 (unknown)
[2m[36m(pid=59893)[0m     @     0x7f9c35b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59893)[0m     @     0x7f9c352a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59893)[0m     @     0x7f9c352a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59893)[0m     @     0x7f9c352a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=59893)[0m     @     0x7f9c352a8d91 at::TensorIterator::for_each()
[2m[36m(pid=59893)[0m     @     0x7f9c35b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59893)[0m     @     0x7f9c35baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59824)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59824)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59839)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59839)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59839)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59808)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59808)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59808)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59926)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59926)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59926)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59926)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59926)[0m *** SIGSEGV (@0x0) received by PID 59926 (TID 0x7fd40f2fe700) from PID 0; stack trace: ***
[2m[36m(pid=59926)[0m     @     0x7fd40eed7390 (unknown)
[2m[36m(pid=59926)[0m     @     0x7fa50ee66f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59926)[0m     @     0x7fa50e5917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59926)[0m     @     0x7fa50e5948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59926)[0m     @     0x7fa50e594ad3 at::TensorIterator::for_each()
[2m[36m(pid=59926)[0m     @     0x7fa50e594d91 at::TensorIterator::for_each()
[2m[36m(pid=59926)[0m     @     0x7fa50ee77b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59889)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59889)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59889)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59889)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59889)[0m *** SIGSEGV (@0x0) received by PID 59889 (TID 0x7f60faa01700) from PID 0; stack trace: ***
[2m[36m(pid=59889)[0m     @     0x7f60fa5da390 (unknown)
[2m[36m(pid=59889)[0m     @     0x7f31fa4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59889)[0m     @     0x7f31f9c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59889)[0m     @     0x7f31f9c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59889)[0m     @     0x7f31f9c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=59889)[0m     @     0x7f31f9c27d91 at::TensorIterator::for_each()
[2m[36m(pid=59889)[0m     @     0x7f31fa50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59880)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59880)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59880)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59927)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59927)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59927)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59927)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59927)[0m *** SIGSEGV (@0x0) received by PID 59927 (TID 0x7f3fe9e3e700) from PID 0; stack trace: ***
[2m[36m(pid=59927)[0m     @     0x7f3fe9a17390 (unknown)
[2m[36m(pid=59927)[0m     @     0x7f10e97f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59927)[0m     @     0x7f10e8f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59927)[0m     @     0x7f10e8f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59927)[0m     @     0x7f10e8f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=59927)[0m     @     0x7f10e8f27d91 at::TensorIterator::for_each()
[2m[36m(pid=59927)[0m     @     0x7f10e980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59927)[0m     @     0x7f10e982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59929)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59929)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59929)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59929)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59929)[0m *** SIGSEGV (@0x0) received by PID 59929 (TID 0x7f938263a700) from PID 0; stack trace: ***
[2m[36m(pid=59929)[0m     @     0x7f9382213390 (unknown)
[2m[36m(pid=59929)[0m     @     0x7f648213af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59929)[0m     @     0x7f64818657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59929)[0m     @     0x7f64818688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59929)[0m     @     0x7f6481868ad3 at::TensorIterator::for_each()
[2m[36m(pid=59929)[0m     @     0x7f6481868d91 at::TensorIterator::for_each()
[2m[36m(pid=59929)[0m     @     0x7f648214bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59929)[0m     @     0x7f648216ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59929)[0m     @     0x7f6481610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59913)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59913)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59913)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59913)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59913)[0m *** SIGSEGV (@0x0) received by PID 59913 (TID 0x7f500e16c700) from PID 0; stack trace: ***
[2m[36m(pid=59913)[0m     @     0x7f500dd45390 (unknown)
[2m[36m(pid=59913)[0m     @     0x7f210dceff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59913)[0m     @     0x7f210d41a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59913)[0m     @     0x7f210d41d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59913)[0m     @     0x7f210d41dad3 at::TensorIterator::for_each()
[2m[36m(pid=59913)[0m     @     0x7f210d41dd91 at::TensorIterator::for_each()
[2m[36m(pid=59913)[0m     @     0x7f210dd00b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59913)[0m     @     0x7f210dd23c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59913)[0m     @     0x7f210d1c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59819)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59819)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59819)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59940)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59807)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59807)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59807)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59945)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59909)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59909)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59909)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59909)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59909)[0m *** SIGSEGV (@0x0) received by PID 59909 (TID 0x7f19b3b95700) from PID 0; stack trace: ***
[2m[36m(pid=59909)[0m     @     0x7f19b376e390 (unknown)
[2m[36m(pid=59909)[0m     @     0x7eeab363cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59909)[0m     @     0x7eeab2d677db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59909)[0m     @     0x7eeab2d6a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59909)[0m     @     0x7eeab2d6aad3 at::TensorIterator::for_each()
[2m[36m(pid=59896)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59896)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59896)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59896)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59896)[0m *** SIGSEGV (@0x0) received by PID 59896 (TID 0x7fe026cb0700) from PID 0; stack trace: ***
[2m[36m(pid=59896)[0m     @     0x7fe026889390 (unknown)
[2m[36m(pid=59896)[0m     @     0x7fb1267bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59896)[0m     @     0x7fb125ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59896)[0m     @     0x7fb125ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59896)[0m     @     0x7fb125ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=59896)[0m     @     0x7fb125ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=59896)[0m     @     0x7fb1267ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59896)[0m     @     0x7fb1267efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59896)[0m     @     0x7fb125c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59896)[0m     @     0x7fb125c8f388 at::native::copy_impl()
[2m[36m(pid=59937)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59937)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59937)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59937)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59937)[0m *** SIGSEGV (@0x0) received by PID 59937 (TID 0x7f8293df3700) from PID 0; stack trace: ***
[2m[36m(pid=59937)[0m     @     0x7f82939cc390 (unknown)
[2m[36m(pid=59937)[0m     @     0x7f5393751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59937)[0m     @     0x7f5392e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59937)[0m     @     0x7f5392e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59937)[0m     @     0x7f5392e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=59937)[0m     @     0x7f5392e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=59937)[0m     @     0x7f5393762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59937)[0m     @     0x7f5393785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59937)[0m     @     0x7f5392c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59937)[0m     @     0x7f5392c25388 at::native::copy_impl()
[2m[36m(pid=59876)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59876)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59876)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59867)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59867)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59867)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59867)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59867)[0m *** SIGSEGV (@0x0) received by PID 59867 (TID 0x7fdb7af38700) from PID 0; stack trace: ***
[2m[36m(pid=59892)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59892)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59892)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59919)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59919)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59919)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59895)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59895)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59895)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59895)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59895)[0m *** SIGSEGV (@0x0) received by PID 59895 (TID 0x7f282f0c1700) from PID 0; stack trace: ***
[2m[36m(pid=59879)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59879)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59879)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59879)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59879)[0m *** SIGSEGV (@0x0) received by PID 59879 (TID 0x7f44fcef6700) from PID 0; stack trace: ***
[2m[36m(pid=59873)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59873)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59873)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59873)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59873)[0m *** SIGSEGV (@0x0) received by PID 59873 (TID 0x7f5c2b196700) from PID 0; stack trace: ***
[2m[36m(pid=59873)[0m     @     0x7f5c2ad6f390 (unknown)
[2m[36m(pid=59873)[0m     @     0x7f2d2acfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59873)[0m     @     0x7f2d2a4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59873)[0m     @     0x7f2d2a42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59873)[0m     @     0x7f2d2a42aad3 at::TensorIterator::for_each()
[2m[36m(pid=59916)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59916)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59916)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59916)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59916)[0m *** SIGSEGV (@0x0) received by PID 59916 (TID 0x7f1199881700) from PID 0; stack trace: ***
[2m[36m(pid=59827)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59827)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59827)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59827)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59827)[0m *** SIGSEGV (@0x0) received by PID 59827 (TID 0x7f5689e7a700) from PID 0; stack trace: ***
[2m[36m(pid=59827)[0m     @     0x7f5689a53390 (unknown)
[2m[36m(pid=59838)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59838)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59838)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59865)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59865)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59865)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59860)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59860)[0m *** SIGSEGV (@0x0) received by PID 59860 (TID 0x7ffa920d1700) from PID 0; stack trace: ***
[2m[36m(pid=59860)[0m     @     0x7ffa91caa390 (unknown)
[2m[36m(pid=59860)[0m     @     0x7fcb91c51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59860)[0m     @     0x7fcb9137c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59860)[0m     @     0x7fcb9137f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59860)[0m     @     0x7fcb9137fad3 at::TensorIterator::for_each()
[2m[36m(pid=59860)[0m     @     0x7fcb9137fd91 at::TensorIterator::for_each()
[2m[36m(pid=59860)[0m     @     0x7fcb91c62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59860)[0m     @     0x7fcb91c85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59899)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59899)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59899)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59938)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59938)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59938)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59821)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59821)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59821)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59928)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59928)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59928)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59928)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59928)[0m *** SIGSEGV (@0x0) received by PID 59928 (TID 0x7f8ab966e700) from PID 0; stack trace: ***
[2m[36m(pid=59928)[0m     @     0x7f8ab9247390 (unknown)
[2m[36m(pid=59928)[0m     @     0x7f5bb90b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59928)[0m     @     0x7f5bb87e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59928)[0m     @     0x7f5bb87e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59928)[0m     @     0x7f5bb87e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=59890)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59890)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59890)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59890)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59890)[0m *** SIGSEGV (@0x0) received by PID 59890 (TID 0x7f8059a73700) from PID 0; stack trace: ***
[2m[36m(pid=59890)[0m     @     0x7f805964c390 (unknown)
[2m[36m(pid=59890)[0m     @     0x7f51595e4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59890)[0m     @     0x7f5158d0f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59890)[0m     @     0x7f5158d128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59890)[0m     @     0x7f5158d12ad3 at::TensorIterator::for_each()
[2m[36m(pid=59890)[0m     @     0x7f5158d12d91 at::TensorIterator::for_each()
[2m[36m(pid=59890)[0m     @     0x7f51595f5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59890)[0m     @     0x7f5159618c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59894)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59894)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59894)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59894)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59894)[0m *** SIGSEGV (@0x0) received by PID 59894 (TID 0x7fac1560a700) from PID 0; stack trace: ***
[2m[36m(pid=59942)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59942)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59942)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59942)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59942)[0m *** SIGSEGV (@0x0) received by PID 59942 (TID 0x7f38d79de700) from PID 0; stack trace: ***
[2m[36m(pid=59942)[0m     @     0x7f38d75b7390 (unknown)
[2m[36m(pid=59942)[0m     @     0x7f09d754df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59942)[0m     @     0x7f09d6c787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59942)[0m     @     0x7f09d6c7b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59942)[0m     @     0x7f09d6c7bad3 at::TensorIterator::for_each()
[2m[36m(pid=59942)[0m     @     0x7f09d6c7bd91 at::TensorIterator::for_each()
[2m[36m(pid=59942)[0m     @     0x7f09d755eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59942)[0m     @     0x7f09d7581c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59942)[0m     @     0x7f09d6a23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59942)[0m     @     0x7f09d6a21388 at::native::copy_impl()
[2m[36m(pid=59881)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59881)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59881)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59881)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59881)[0m *** SIGSEGV (@0x0) received by PID 59881 (TID 0x7f495a495700) from PID 0; stack trace: ***
[2m[36m(pid=59826)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59826)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59826)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59845)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59845)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59845)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59845)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59845)[0m *** SIGSEGV (@0x0) received by PID 59845 (TID 0x7f4b39702700) from PID 0; stack trace: ***
[2m[36m(pid=59816)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59816)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59816)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59816)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59816)[0m *** SIGSEGV (@0x0) received by PID 59816 (TID 0x7f3c3cc58700) from PID 0; stack trace: ***
[2m[36m(pid=59816)[0m     @     0x7f3c3c831390 (unknown)
[2m[36m(pid=59816)[0m     @     0x7f0d3c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59933)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59933)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59933)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59898)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59898)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59898)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59898)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59898)[0m *** SIGSEGV (@0x0) received by PID 59898 (TID 0x7effb8e2b700) from PID 0; stack trace: ***
[2m[36m(pid=59898)[0m     @     0x7effb8a04390 (unknown)
[2m[36m(pid=59898)[0m     @     0x7ed0b8774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59898)[0m     @     0x7ed0b7e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59898)[0m     @     0x7ed0b7ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59898)[0m     @     0x7ed0b7ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=59914)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59914)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59914)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59914)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59914)[0m *** SIGSEGV (@0x0) received by PID 59914 (TID 0x7f451d1cd700) from PID 0; stack trace: ***
[2m[36m(pid=59914)[0m     @     0x7f451cda6390 (unknown)
[2m[36m(pid=59842)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59842)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59842)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59842)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59842)[0m *** SIGSEGV (@0x0) received by PID 59842 (TID 0x7f0b7c3e9700) from PID 0; stack trace: ***
[2m[36m(pid=59842)[0m     @     0x7f0b7bfc2390 (unknown)
[2m[36m(pid=59842)[0m     @     0x7edc7be0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59805)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59805)[0m *** SIGSEGV (@0x0) received by PID 59805 (TID 0x7f227f1a7700) from PID 0; stack trace: ***
[2m[36m(pid=59805)[0m     @     0x7f227ed80390 (unknown)
[2m[36m(pid=59817)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59817)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59817)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59817)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59817)[0m *** SIGSEGV (@0x0) received by PID 59817 (TID 0x7f6607dbb700) from PID 0; stack trace: ***
[2m[36m(pid=59903)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59903)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59903)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59861)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59861)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59861)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59861)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59861)[0m *** SIGSEGV (@0x0) received by PID 59861 (TID 0x7fafc0d53700) from PID 0; stack trace: ***
[2m[36m(pid=59861)[0m     @     0x7fafc092c390 (unknown)
[2m[36m(pid=59861)[0m     @     0x7f80c076df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59863)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59863)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59863)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59863)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59834)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59834)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59834)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59834)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59925)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59925)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59925)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59884)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59884)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59884)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59835)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59835)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59835)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59835)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59835)[0m *** SIGSEGV (@0x0) received by PID 59835 (TID 0x7ffa4b315700) from PID 0; stack trace: ***
[2m[36m(pid=59869)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59869)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59869)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59869)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59869)[0m *** SIGSEGV (@0x0) received by PID 59869 (TID 0x7f5922727700) from PID 0; stack trace: ***
[2m[36m(pid=59869)[0m     @     0x7f5922300390 (unknown)
[2m[36m(pid=59869)[0m     @     0x7f2a222b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59869)[0m     @     0x7f2a219e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59831)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59831)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59831)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59831)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59831)[0m *** SIGSEGV (@0x0) received by PID 59831 (TID 0x7f7b60b46700) from PID 0; stack trace: ***
[2m[36m(pid=59831)[0m     @     0x7f7b6071f390 (unknown)
[2m[36m(pid=59831)[0m     @     0x7f4c606ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59831)[0m     @     0x7f4c5fdf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59814)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59814)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59814)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59814)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59814)[0m *** SIGSEGV (@0x0) received by PID 59814 (TID 0x7f51dc660700) from PID 0; stack trace: ***
[2m[36m(pid=59814)[0m     @     0x7f51dc239390 (unknown)
[2m[36m(pid=59814)[0m     @     0x7f22dc01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59820)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59820)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59820)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59820)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59820)[0m *** SIGSEGV (@0x0) received by PID 59820 (TID 0x7faa72795700) from PID 0; stack trace: ***
[2m[36m(pid=59820)[0m     @     0x7faa7236e390 (unknown)
[2m[36m(pid=59820)[0m     @     0x7f7b7231ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59820)[0m     @     0x7f7b71a497db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59843)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59843)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59843)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59841)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59841)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59841)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59841)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59841)[0m *** SIGSEGV (@0x0) received by PID 59841 (TID 0x7fc2e2ec6700) from PID 0; stack trace: ***
[2m[36m(pid=59878)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59878)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59878)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59878)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59878)[0m *** SIGSEGV (@0x0) received by PID 59878 (TID 0x7f30df7d9700) from PID 0; stack trace: ***
[2m[36m(pid=59840)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59840)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59840)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59883)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59883)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59883)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59883)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59883)[0m *** SIGSEGV (@0x0) received by PID 59883 (TID 0x7f5a02212700) from PID 0; stack trace: ***
[2m[36m(pid=59883)[0m     @     0x7f5a01deb390 (unknown)
[2m[36m(pid=59813)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59813)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59813)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59813)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59813)[0m *** SIGSEGV (@0x0) received by PID 59813 (TID 0x7fd010031700) from PID 0; stack trace: ***
[2m[36m(pid=59813)[0m     @     0x7fd00fc0a390 (unknown)
[2m[36m(pid=59813)[0m     @     0x7fa10d940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59813)[0m     @     0x7fa10d06b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59891)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59891)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59891)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59891)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59891)[0m *** SIGSEGV (@0x0) received by PID 59891 (TID 0x7fbb5acb1700) from PID 0; stack trace: ***
[2m[36m(pid=59891)[0m     @     0x7fbb5a88a390 (unknown)
[2m[36m(pid=59891)[0m     @     0x7f8c5a817f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59891)[0m     @     0x7f8c59f427db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59891)[0m     @     0x7f8c59f458f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59806)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59806)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59806)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59806)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59806)[0m *** SIGSEGV (@0x0) received by PID 59806 (TID 0x7fbc2b002700) from PID 0; stack trace: ***
[2m[36m(pid=59806)[0m     @     0x7fbc2abdb390 (unknown)
[2m[36m(pid=59806)[0m     @     0x7f8d2aa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59806)[0m     @     0x7f8d2a14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59811)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59811)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59811)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59811)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59811)[0m *** SIGSEGV (@0x0) received by PID 59811 (TID 0x7f5415174700) from PID 0; stack trace: ***
[2m[36m(pid=59811)[0m     @     0x7f5414d4d390 (unknown)
[2m[36m(pid=59811)[0m     @     0x7f2514940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59811)[0m     @     0x7f251406b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59809)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59809)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59809)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59809)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59809)[0m *** SIGSEGV (@0x0) received by PID 59809 (TID 0x7f017ba83700) from PID 0; stack trace: ***
[2m[36m(pid=59809)[0m     @     0x7f017b65c390 (unknown)
[2m[36m(pid=59809)[0m     @     0x7ed27b5f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59809)[0m     @     0x7ed27ad1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59810)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59810)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59810)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59810)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59810)[0m *** SIGSEGV (@0x0) received by PID 59810 (TID 0x7f6893c31700) from PID 0; stack trace: ***
[2m[36m(pid=59810)[0m     @     0x7f689380a390 (unknown)
[2m[36m(pid=59810)[0m     @     0x7f399378ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59810)[0m     @     0x7f3992eb97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59907)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59907)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59907)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59907)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59907)[0m *** SIGSEGV (@0x0) received by PID 59907 (TID 0x7f1dc8018700) from PID 0; stack trace: ***
[2m[36m(pid=59907)[0m     @     0x7f1dc7bf1390 (unknown)
[2m[36m(pid=59907)[0m     @     0x7eeec7af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59907)[0m     @     0x7eeec72207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59931)[0m     @     0x7ef1bc720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59931)[0m     @     0x7ef1bc71e388 at::native::copy_impl()
[2m[36m(pid=59931)[0m     @     0x7ef1bc7205a4 at::native::copy_()
[2m[36m(pid=59931)[0m     @     0x7ef1bce0b4f5 at::Tensor::copy_()
[2m[36m(pid=59901)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59901)[0m *** SIGSEGV (@0x0) received by PID 59901 (TID 0x7f937a906700) from PID 0; stack trace: ***
[2m[36m(pid=59901)[0m     @     0x7f937a4df390 (unknown)
[2m[36m(pid=59901)[0m     @     0x7f647a467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59901)[0m     @     0x7f6479b927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59893)[0m     @     0x7f9c35050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59893)[0m     @     0x7f9c3504e388 at::native::copy_impl()
[2m[36m(pid=59893)[0m     @     0x7f9c350505a4 at::native::copy_()
[2m[36m(pid=59824)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59824)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59824)[0m *** SIGSEGV (@0x0) received by PID 59824 (TID 0x7f92eb1dc700) from PID 0; stack trace: ***
[2m[36m(pid=59824)[0m     @     0x7f92eadb5390 (unknown)
[2m[36m(pid=59824)[0m     @     0x7f63eacfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59824)[0m     @     0x7f63ea4277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59839)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59839)[0m *** SIGSEGV (@0x0) received by PID 59839 (TID 0x7fac35b53700) from PID 0; stack trace: ***
[2m[36m(pid=59839)[0m     @     0x7fac3572c390 (unknown)
[2m[36m(pid=59839)[0m     @     0x7f7d356b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59839)[0m     @     0x7f7d34ddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59839)[0m     @     0x7f7d34de28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59923)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59923)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59923)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59923)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59923)[0m *** SIGSEGV (@0x0) received by PID 59923 (TID 0x7f2790b59700) from PID 0; stack trace: ***
[2m[36m(pid=59923)[0m     @     0x7f2790732390 (unknown)
[2m[36m(pid=59923)[0m     @     0x7ef89054bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59923)[0m     @     0x7ef88fc767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59818)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59818)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59818)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59818)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59818)[0m *** SIGSEGV (@0x0) received by PID 59818 (TID 0x7f1f0b243700) from PID 0; stack trace: ***
[2m[36m(pid=59818)[0m     @     0x7f1f0ae1c390 (unknown)
[2m[36m(pid=59818)[0m     @     0x7ef00adb0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59818)[0m     @     0x7ef00a4db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59808)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59808)[0m *** SIGSEGV (@0x0) received by PID 59808 (TID 0x7f001fb91700) from PID 0; stack trace: ***
[2m[36m(pid=59808)[0m     @     0x7f001f76a390 (unknown)
[2m[36m(pid=59808)[0m     @     0x7ed11f6aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59808)[0m     @     0x7ed11edd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59926)[0m     @     0x7fa50ee9ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59926)[0m     @     0x7fa50e33ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59926)[0m     @     0x7fa50e33a388 at::native::copy_impl()
[2m[36m(pid=59926)[0m     @     0x7fa50e33c5a4 at::native::copy_()
[2m[36m(pid=59926)[0m     @     0x7fa50ea274f5 at::Tensor::copy_()
[2m[36m(pid=59926)[0m     @     0x7fa510efa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59889)[0m     @     0x7f31fa52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59889)[0m     @     0x7f31f99cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59889)[0m     @     0x7f31f99cd388 at::native::copy_impl()
[2m[36m(pid=59889)[0m     @     0x7f31f99cf5a4 at::native::copy_()
[2m[36m(pid=59880)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59880)[0m *** SIGSEGV (@0x0) received by PID 59880 (TID 0x7f2b5d09f700) from PID 0; stack trace: ***
[2m[36m(pid=59880)[0m     @     0x7f2b5cc78390 (unknown)
[2m[36m(pid=59880)[0m     @     0x7efc5ca36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59880)[0m     @     0x7efc5c1617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59927)[0m     @     0x7f10e8ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59927)[0m     @     0x7f10e8ccd388 at::native::copy_impl()
[2m[36m(pid=59927)[0m     @     0x7f10e8ccf5a4 at::native::copy_()
[2m[36m(pid=59927)[0m     @     0x7f10e93ba4f5 at::Tensor::copy_()
[2m[36m(pid=59929)[0m     @     0x7f648160e388 at::native::copy_impl()
[2m[36m(pid=59929)[0m     @     0x7f64816105a4 at::native::copy_()
[2m[36m(pid=59929)[0m     @     0x7f6481cfb4f5 at::Tensor::copy_()
[2m[36m(pid=59929)[0m     @     0x7f64841ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59913)[0m     @     0x7f210d1c3388 at::native::copy_impl()
[2m[36m(pid=59913)[0m     @     0x7f210d1c55a4 at::native::copy_()
[2m[36m(pid=59913)[0m     @     0x7f210d8b04f5 at::Tensor::copy_()
[2m[36m(pid=59913)[0m     @     0x7f210fd838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59819)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59819)[0m *** SIGSEGV (@0x0) received by PID 59819 (TID 0x7f6d9a08e700) from PID 0; stack trace: ***
[2m[36m(pid=59819)[0m     @     0x7f6d99c67390 (unknown)
[2m[36m(pid=59819)[0m     @     0x7f3e99c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59819)[0m     @     0x7f3e9933c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59940)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59940)[0m *** SIGSEGV (@0x0) received by PID 59940 (TID 0x7fbf815dc700) from PID 0; stack trace: ***
[2m[36m(pid=59940)[0m     @     0x7fbf811b5390 (unknown)
[2m[36m(pid=59935)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59935)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59935)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59935)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59935)[0m *** SIGSEGV (@0x0) received by PID 59935 (TID 0x7f5c7f8ab700) from PID 0; stack trace: ***
[2m[36m(pid=59935)[0m     @     0x7f5c7f484390 (unknown)
[2m[36m(pid=59935)[0m     @     0x7f2d7f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59807)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59807)[0m *** SIGSEGV (@0x0) received by PID 59807 (TID 0x7fca980cf700) from PID 0; stack trace: ***
[2m[36m(pid=59807)[0m     @     0x7fca97ca8390 (unknown)
[2m[36m(pid=59807)[0m     @     0x7f9b97af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59807)[0m     @     0x7f9b972207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59807)[0m     @     0x7f9b972238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59945)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59945)[0m *** SIGSEGV (@0x0) received by PID 59945 (TID 0x7ff0460b8700) from PID 0; stack trace: ***
[2m[36m(pid=59945)[0m     @     0x7ff045c91390 (unknown)
[2m[36m(pid=59945)[0m     @     0x7fc145c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59945)[0m     @     0x7fc14533c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59897)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59897)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59897)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59897)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59897)[0m *** SIGSEGV (@0x0) received by PID 59897 (TID 0x7faa7d1b3700) from PID 0; stack trace: ***
[2m[36m(pid=59877)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59877)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59877)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59877)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59877)[0m *** SIGSEGV (@0x0) received by PID 59877 (TID 0x7f617fed3700) from PID 0; stack trace: ***
[2m[36m(pid=59910)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59910)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59910)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59910)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59910)[0m *** SIGSEGV (@0x0) received by PID 59910 (TID 0x7f42d723c700) from PID 0; stack trace: ***
[2m[36m(pid=59822)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59822)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59822)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59822)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59822)[0m *** SIGSEGV (@0x0) received by PID 59822 (TID 0x7f47b814d700) from PID 0; stack trace: ***
[2m[36m(pid=59822)[0m     @     0x7f47b7d26390 (unknown)
[2m[36m(pid=59909)[0m     @     0x7eeab2d6ad91 at::TensorIterator::for_each()
[2m[36m(pid=59909)[0m     @     0x7eeab364db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59909)[0m     @     0x7eeab3670c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59909)[0m     @     0x7eeab2b12a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59909)[0m     @     0x7eeab2b10388 at::native::copy_impl()
[2m[36m(pid=59896)[0m     @     0x7fb125c915a4 at::native::copy_()
[2m[36m(pid=59896)[0m     @     0x7fb12637c4f5 at::Tensor::copy_()
[2m[36m(pid=59896)[0m     @     0x7fb12884f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59896)[0m     @     0x7fb12637c4f5 at::Tensor::copy_()
[2m[36m(pid=59896)[0m     @     0x7fb12c42779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59896)[0m     @     0x55e8f67dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59896)[0m     @     0x55e8f673ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59896)[0m     @     0x55e8f67c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59896)[0m     @     0x55e8f67c6a20 method_vectorcall
[2m[36m(pid=59896)[0m     @     0x55e8f673abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59937)[0m     @     0x7f5392c275a4 at::native::copy_()
[2m[36m(pid=59937)[0m     @     0x7f53933124f5 at::Tensor::copy_()
[2m[36m(pid=59937)[0m     @     0x7f53957e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59937)[0m     @     0x7f53933124f5 at::Tensor::copy_()
[2m[36m(pid=59937)[0m     @     0x7f53993bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59937)[0m     @     0x5616bcc06fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59937)[0m     @     0x5616bcb61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59937)[0m     @     0x5616bcbecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59937)[0m     @     0x5616bcbeda20 method_vectorcall
[2m[36m(pid=59937)[0m     @     0x5616bcb61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59937)[0m     @     0x5616bcbecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59937)[0m     @     0x5616bcbed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59937)[0m     @     0x5616bcb62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59876)[0m *** SIGSEGV (@0x0) received by PID 59876 (TID 0x7f8ef2a39700) from PID 0; stack trace: ***
[2m[36m(pid=59876)[0m     @     0x7f8ef2612390 (unknown)
[2m[36m(pid=59876)[0m     @     0x7f5ff2365f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59876)[0m     @     0x7f5ff1a907db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59876)[0m     @     0x7f5ff1a938f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59876)[0m     @     0x7f5ff1a93ad3 at::TensorIterator::for_each()
[2m[36m(pid=59867)[0m     @     0x7fdb7ab11390 (unknown)
[2m[36m(pid=59867)[0m     @     0x7fac7aa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59867)[0m     @     0x7fac7a14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59867)[0m     @     0x7fac7a14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59892)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59892)[0m *** SIGSEGV (@0x0) received by PID 59892 (TID 0x7fd6b5a88700) from PID 0; stack trace: ***
[2m[36m(pid=59892)[0m     @     0x7fd6b5661390 (unknown)
[2m[36m(pid=59892)[0m     @     0x7fa7b55e2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59892)[0m     @     0x7fa7b4d0d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59892)[0m     @     0x7fa7b4d108f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59919)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59919)[0m *** SIGSEGV (@0x0) received by PID 59919 (TID 0x7f82b830a700) from PID 0; stack trace: ***
[2m[36m(pid=59919)[0m     @     0x7f82b7ee3390 (unknown)
[2m[36m(pid=59919)[0m     @     0x7f53b7e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59919)[0m     @     0x7f53b75367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59919)[0m     @     0x7f53b75398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59895)[0m     @     0x7f282ec9a390 (unknown)
[2m[36m(pid=59895)[0m     @     0x7ef92ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59895)[0m     @     0x7ef92e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59895)[0m     @     0x7ef92e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59895)[0m     @     0x7ef92e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=59879)[0m     @     0x7f44fcacf390 (unknown)
[2m[36m(pid=59879)[0m     @     0x7f15fca36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59879)[0m     @     0x7f15fc1617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59879)[0m     @     0x7f15fc1648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59879)[0m     @     0x7f15fc164ad3 at::TensorIterator::for_each()
[2m[36m(pid=59873)[0m     @     0x7f2d2a42ad91 at::TensorIterator::for_each()
[2m[36m(pid=59873)[0m     @     0x7f2d2ad0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59873)[0m     @     0x7f2d2ad30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59873)[0m     @     0x7f2d2a1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59873)[0m     @     0x7f2d2a1d0388 at::native::copy_impl()
[2m[36m(pid=59916)[0m     @     0x7f119945a390 (unknown)
[2m[36m(pid=59916)[0m     @     0x7ee2993ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59916)[0m     @     0x7ee298af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59916)[0m     @     0x7ee298afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59916)[0m     @     0x7ee298afaad3 at::TensorIterator::for_each()
[2m[36m(pid=59827)[0m     @     0x7f27897f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59827)[0m     @     0x7f2788f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59827)[0m     @     0x7f2788f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59827)[0m     @     0x7f2788f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=59827)[0m     @     0x7f2788f27d91 at::TensorIterator::for_each()
[2m[36m(pid=59838)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59838)[0m *** SIGSEGV (@0x0) received by PID 59838 (TID 0x7fbb3aabd700) from PID 0; stack trace: ***
[2m[36m(pid=59838)[0m     @     0x7fbb3a696390 (unknown)
[2m[36m(pid=59838)[0m     @     0x7f8c3a4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59865)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59865)[0m *** SIGSEGV (@0x0) received by PID 59865 (TID 0x7f619d8d2700) from PID 0; stack trace: ***
[2m[36m(pid=59865)[0m     @     0x7f619d4ab390 (unknown)
[2m[36m(pid=59865)[0m     @     0x7f329d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59865)[0m     @     0x7f329caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59865)[0m     @     0x7f329cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59865)[0m     @     0x7f329cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=59860)[0m     @     0x7fcb91127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59860)[0m     @     0x7fcb91125388 at::native::copy_impl()
[2m[36m(pid=59860)[0m     @     0x7fcb911275a4 at::native::copy_()
[2m[36m(pid=59860)[0m     @     0x7fcb918124f5 at::Tensor::copy_()
[2m[36m(pid=59899)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59899)[0m *** SIGSEGV (@0x0) received by PID 59899 (TID 0x7f92aee38700) from PID 0; stack trace: ***
[2m[36m(pid=59899)[0m     @     0x7f92aea11390 (unknown)
[2m[36m(pid=59899)[0m     @     0x7f63ae99ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59899)[0m     @     0x7f63ae0ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59899)[0m     @     0x7f63ae0cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59938)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59938)[0m *** SIGSEGV (@0x0) received by PID 59938 (TID 0x7fe8e3e27700) from PID 0; stack trace: ***
[2m[36m(pid=59938)[0m     @     0x7fe8e3a00390 (unknown)
[2m[36m(pid=59938)[0m     @     0x7fb9e38def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59938)[0m     @     0x7fb9e30097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59938)[0m     @     0x7fb9e300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59821)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59821)[0m *** SIGSEGV (@0x0) received by PID 59821 (TID 0x7fd29827f700) from PID 0; stack trace: ***
[2m[36m(pid=59821)[0m     @     0x7fd297e58390 (unknown)
[2m[36m(pid=59821)[0m     @     0x7fa397de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59821)[0m     @     0x7fa39750f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59821)[0m     @     0x7fa3975128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59928)[0m     @     0x7f5bb87e3d91 at::TensorIterator::for_each()
[2m[36m(pid=59928)[0m     @     0x7f5bb90c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59928)[0m     @     0x7f5bb90e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59928)[0m     @     0x7f5bb858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59928)[0m     @     0x7f5bb8589388 at::native::copy_impl()
[2m[36m(pid=59928)[0m     @     0x7f5bb858b5a4 at::native::copy_()
[2m[36m(pid=59890)[0m     @     0x7f5158abaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59890)[0m     @     0x7f5158ab8388 at::native::copy_impl()
[2m[36m(pid=59890)[0m     @     0x7f5158aba5a4 at::native::copy_()
[2m[36m(pid=59890)[0m     @     0x7f51591a54f5 at::Tensor::copy_()
[2m[36m(pid=59890)[0m     @     0x7f515b6788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59894)[0m     @     0x7fac151e3390 (unknown)
[2m[36m(pid=59894)[0m     @     0x7f7d150b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59894)[0m     @     0x7f7d147e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59894)[0m     @     0x7f7d147e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59894)[0m     @     0x7f7d147e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=59942)[0m     @     0x7f09d6a235a4 at::native::copy_()
[2m[36m(pid=59942)[0m     @     0x7f09d710e4f5 at::Tensor::copy_()
[2m[36m(pid=59942)[0m     @     0x7f09d95e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59942)[0m     @     0x7f09d710e4f5 at::Tensor::copy_()
[2m[36m(pid=59942)[0m     @     0x7f09dd1b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59942)[0m     @     0x562b4894efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59942)[0m     @     0x562b488a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59942)[0m     @     0x562b48934baf _PyEval_EvalCodeWithName
[2m[36m(pid=59942)[0m     @     0x562b48935a20 method_vectorcall
[2m[36m(pid=59942)[0m     @     0x562b488a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59942)[0m     @     0x562b48934baf _PyEval_EvalCodeWithName
[2m[36m(pid=59942)[0m     @     0x562b48935643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59881)[0m     @     0x7f495a06e390 (unknown)
[2m[36m(pid=59881)[0m     @     0x7f1a59e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59881)[0m     @     0x7f1a5954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59881)[0m     @     0x7f1a595528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59881)[0m     @     0x7f1a59552ad3 at::TensorIterator::for_each()
[2m[36m(pid=59826)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59826)[0m *** SIGSEGV (@0x0) received by PID 59826 (TID 0x7fb41d85d700) from PID 0; stack trace: ***
[2m[36m(pid=59826)[0m     @     0x7fb41d436390 (unknown)
[2m[36m(pid=59826)[0m     @     0x7f851d3eaf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59826)[0m     @     0x7f851cb157db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59826)[0m     @     0x7f851cb188f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59845)[0m     @     0x7f4b392db390 (unknown)
[2m[36m(pid=59845)[0m     @     0x7f1c3924af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59845)[0m     @     0x7f1c389757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59845)[0m     @     0x7f1c389788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59845)[0m     @     0x7f1c38978ad3 at::TensorIterator::for_each()
[2m[36m(pid=59816)[0m     @     0x7f0d3bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59816)[0m     @     0x7f0d3bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59816)[0m     @     0x7f0d3bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=59816)[0m     @     0x7f0d3bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=59933)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59933)[0m *** SIGSEGV (@0x0) received by PID 59933 (TID 0x7f4d44d2e700) from PID 0; stack trace: ***
[2m[36m(pid=59933)[0m     @     0x7f4d44907390 (unknown)
[2m[36m(pid=59933)[0m     @     0x7f1e44774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59933)[0m     @     0x7f1e43e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59933)[0m     @     0x7f1e43ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59898)[0m     @     0x7ed0b7ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=59898)[0m     @     0x7ed0b8785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59898)[0m     @     0x7ed0b87a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59898)[0m     @     0x7ed0b7c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59898)[0m     @     0x7ed0b7c48388 at::native::copy_impl()
[2m[36m(pid=59898)[0m     @     0x7ed0b7c4a5a4 at::native::copy_()
[2m[36m(pid=59914)[0m     @     0x7f161cc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59914)[0m     @     0x7f161c39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59914)[0m     @     0x7f161c3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59914)[0m     @     0x7f161c3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=59842)[0m     @     0x7edc7b5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59842)[0m     @     0x7edc7b5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59842)[0m     @     0x7edc7b539ad3 at::TensorIterator::for_each()
[2m[36m(pid=59842)[0m     @     0x7edc7b539d91 at::TensorIterator::for_each()
[2m[36m(pid=59805)[0m     @     0x7ef37ec51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59805)[0m     @     0x7ef37e37c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59805)[0m     @     0x7ef37e37f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59805)[0m     @     0x7ef37e37fad3 at::TensorIterator::for_each()
[2m[36m(pid=59817)[0m     @     0x7f6607994390 (unknown)
[2m[36m(pid=59817)[0m     @     0x7f37078def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59817)[0m     @     0x7f37070097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59817)[0m     @     0x7f370700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59817)[0m     @     0x7f370700cad3 at::TensorIterator::for_each()
[2m[36m(pid=59903)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59903)[0m *** SIGSEGV (@0x0) received by PID 59903 (TID 0x7fcec686b700) from PID 0; stack trace: ***
[2m[36m(pid=59903)[0m     @     0x7fcec6444390 (unknown)
[2m[36m(pid=59903)[0m     @     0x7f9fc634bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59903)[0m     @     0x7f9fc5a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59903)[0m     @     0x7f9fc5a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59861)[0m     @     0x7f80bfe987db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59861)[0m     @     0x7f80bfe9b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59861)[0m     @     0x7f80bfe9bad3 at::TensorIterator::for_each()
[2m[36m(pid=59861)[0m     @     0x7f80bfe9bd91 at::TensorIterator::for_each()
[2m[36m(pid=59861)[0m     @     0x7f80c077eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59861)[0m     @     0x7f80c07a1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59863)[0m *** SIGSEGV (@0x0) received by PID 59863 (TID 0x7fde37dba700) from PID 0; stack trace: ***
[2m[36m(pid=59863)[0m     @     0x7fde37993390 (unknown)
[2m[36m(pid=59863)[0m     @     0x7faf36c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59863)[0m     @     0x7faf363407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59863)[0m     @     0x7faf363438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59834)[0m *** SIGSEGV (@0x0) received by PID 59834 (TID 0x7fe59590a700) from PID 0; stack trace: ***
[2m[36m(pid=59834)[0m     @     0x7fe5954e3390 (unknown)
[2m[36m(pid=59834)[0m     @     0x7fb6954a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59834)[0m     @     0x7fb694bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59830)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=59830)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=59830)[0m *** Aborted at 1604573382 (unix time) try "date -d @1604573382" if you are using GNU date ***
[2m[36m(pid=59830)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59830)[0m *** SIGSEGV (@0x0) received by PID 59830 (TID 0x7f8c33e8f700) from PID 0; stack trace: ***
[2m[36m(pid=59830)[0m     @     0x7f8c33a68390 (unknown)
[2m[36m(pid=59925)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59925)[0m *** SIGSEGV (@0x0) received by PID 59925 (TID 0x7fb99ab0b700) from PID 0; stack trace: ***
[2m[36m(pid=59925)[0m     @     0x7fb99a6e4390 (unknown)
[2m[36m(pid=59925)[0m     @     0x7f8a9a57cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59925)[0m     @     0x7f8a99ca77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59925)[0m     @     0x7f8a99caa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59884)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59884)[0m *** SIGSEGV (@0x0) received by PID 59884 (TID 0x7ff1e7179700) from PID 0; stack trace: ***
[2m[36m(pid=59884)[0m     @     0x7ff1e6d52390 (unknown)
[2m[36m(pid=59884)[0m     @     0x7fc2e6cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59884)[0m     @     0x7fc2e64277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59884)[0m     @     0x7fc2e642a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59835)[0m     @     0x7ffa4aeee390 (unknown)
[2m[36m(pid=59835)[0m     @     0x7fcb4ae93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59835)[0m     @     0x7fcb4a5be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59835)[0m     @     0x7fcb4a5c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59869)[0m     @     0x7f2a219e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59869)[0m     @     0x7f2a219e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=59831)[0m     @     0x7f4c5fdfa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59831)[0m     @     0x7f4c5fdfaad3 at::TensorIterator::for_each()
[2m[36m(pid=59814)[0m     @     0x7f22db7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59820)[0m     @     0x7f7b71a4c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59820)[0m     @     0x7f7b71a4cad3 at::TensorIterator::for_each()
[2m[36m(pid=59843)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59843)[0m *** SIGSEGV (@0x0) received by PID 59843 (TID 0x7f019291b700) from PID 0; stack trace: ***
[2m[36m(pid=59843)[0m     @     0x7f01924f4390 (unknown)
[2m[36m(pid=59843)[0m     @     0x7ed29246ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59843)[0m     @     0x7ed291b9a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59841)[0m     @     0x7fc2e2a9f390 (unknown)
[2m[36m(pid=59841)[0m     @     0x7f93e29ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59841)[0m     @     0x7f93e20f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59878)[0m     @     0x7f30df3b2390 (unknown)
[2m[36m(pid=59878)[0m     @     0x7f01df229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59878)[0m     @     0x7f01de9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59878)[0m     @     0x7f01de9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59878)[0m     @     0x7f01de957ad3 at::TensorIterator::for_each()
[2m[36m(pid=59840)[0m PC: @                0x0 (unknown)
[2m[36m(pid=59840)[0m *** SIGSEGV (@0x0) received by PID 59840 (TID 0x7f1930ca1700) from PID 0; stack trace: ***
[2m[36m(pid=59840)[0m     @     0x7f193087a390 (unknown)
[2m[36m(pid=59840)[0m     @     0x7eea30825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59840)[0m     @     0x7eea2ff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59883)[0m     @     0x7f2b01d77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59883)[0m     @     0x7f2b014a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59883)[0m     @     0x7f2b014a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59883)[0m     @     0x7f2b014a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=59813)[0m     @     0x7fa10d06e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59813)[0m     @     0x7fa10d06ead3 at::TensorIterator::for_each()
[2m[36m(pid=59813)[0m     @     0x7fa10d06ed91 at::TensorIterator::for_each()
[2m[36m(pid=59891)[0m     @     0x7f8c59f45ad3 at::TensorIterator::for_each()
[2m[36m(pid=59891)[0m     @     0x7f8c59f45d91 at::TensorIterator::for_each()
[2m[36m(pid=59891)[0m     @     0x7f8c5a828b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59891)[0m     @     0x7f8c5a84bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59806)[0m     @     0x7f8d2a14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59806)[0m     @     0x7f8d2a14fad3 at::TensorIterator::for_each()
[2m[36m(pid=59811)[0m     @     0x7f251406e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59811)[0m     @     0x7f251406ead3 at::TensorIterator::for_each()
[2m[36m(pid=59811)[0m     @     0x7f251406ed91 at::TensorIterator::for_each()
[2m[36m(pid=59809)[0m     @     0x7ed27ad208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59809)[0m     @     0x7ed27ad20ad3 at::TensorIterator::for_each()
[2m[36m(pid=59810)[0m     @     0x7f3992ebc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59810)[0m     @     0x7f3992ebcad3 at::TensorIterator::for_each()
[2m[36m(pid=59810)[0m     @     0x7f3992ebcd91 at::TensorIterator::for_each()
[2m[36m(pid=59907)[0m     @     0x7eeec72238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59907)[0m     @     0x7eeec7223ad3 at::TensorIterator::for_each()
[2m[36m(pid=59907)[0m     @     0x7eeec7223d91 at::TensorIterator::for_each()
[2m[36m(pid=59931)[0m     @     0x7ef1bf2de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59931)[0m     @     0x7ef1bce0b4f5 at::Tensor::copy_()
[2m[36m(pid=59931)[0m     @     0x7ef1c2eb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59931)[0m     @     0x557417f07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59931)[0m     @     0x557417e62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59931)[0m     @     0x557417eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59931)[0m     @     0x557417eeea20 method_vectorcall
[2m[36m(pid=59931)[0m     @     0x557417e62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59931)[0m     @     0x557417eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59931)[0m     @     0x557417eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59931)[0m     @     0x557417e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59931)[0m     @     0x557417eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59931)[0m     @     0x557417eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59931)[0m     @     0x557417e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59931)[0m     @     0x557417eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59931)[0m     @     0x557417eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59931)[0m     @     0x557417e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59931)[0m     @     0x557417eedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59931)[0m     @     0x557417eee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59931)[0m     @     0x557417e63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59901)[0m     @     0x7f6479b958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59901)[0m     @     0x7f6479b95ad3 at::TensorIterator::for_each()
[2m[36m(pid=59901)[0m     @     0x7f6479b95d91 at::TensorIterator::for_each()
[2m[36m(pid=59893)[0m     @     0x7f9c3573b4f5 at::Tensor::copy_()
[2m[36m(pid=59893)[0m     @     0x7f9c37c0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59893)[0m     @     0x7f9c3573b4f5 at::Tensor::copy_()
[2m[36m(pid=59893)[0m     @     0x7f9c3b7e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59893)[0m     @     0x5613ab514fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59893)[0m     @     0x5613ab46fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59893)[0m     @     0x5613ab4fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59893)[0m     @     0x5613ab4fba20 method_vectorcall
[2m[36m(pid=59893)[0m     @     0x5613ab46fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59893)[0m     @     0x5613ab4fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59893)[0m     @     0x5613ab4fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59893)[0m     @     0x5613ab470689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59893)[0m     @     0x5613ab4fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59893)[0m     @     0x5613ab4fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59893)[0m     @     0x5613ab470689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59893)[0m     @     0x5613ab4fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59893)[0m     @     0x5613ab4fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59893)[0m     @     0x5613ab470689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59893)[0m     @     0x5613ab4fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59893)[0m     @     0x5613ab4fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59893)[0m     @     0x5613ab470689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59824)[0m     @     0x7f63ea42a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59824)[0m     @     0x7f63ea42aad3 at::TensorIterator::for_each()
[2m[36m(pid=59824)[0m     @     0x7f63ea42ad91 at::TensorIterator::for_each()
[2m[36m(pid=59839)[0m     @     0x7f7d34de2ad3 at::TensorIterator::for_each()
[2m[36m(pid=59839)[0m     @     0x7f7d34de2d91 at::TensorIterator::for_each()
[2m[36m(pid=59839)[0m     @     0x7f7d356c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59839)[0m     @     0x7f7d356e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59923)[0m     @     0x7ef88fc798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59923)[0m     @     0x7ef88fc79ad3 at::TensorIterator::for_each()
[2m[36m(pid=59923)[0m     @     0x7ef88fc79d91 at::TensorIterator::for_each()
[2m[36m(pid=59923)[0m     @     0x7ef89055cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59923)[0m     @     0x7ef89057fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59818)[0m     @     0x7ef00a4de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59818)[0m     @     0x7ef00a4dead3 at::TensorIterator::for_each()
[2m[36m(pid=59818)[0m     @     0x7ef00a4ded91 at::TensorIterator::for_each()
[2m[36m(pid=59808)[0m     @     0x7ed11eddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59808)[0m     @     0x7ed11eddcad3 at::TensorIterator::for_each()
[2m[36m(pid=59808)[0m     @     0x7ed11eddcd91 at::TensorIterator::for_each()
[2m[36m(pid=59808)[0m     @     0x7ed11f6bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59926)[0m     @     0x7fa50ea274f5 at::Tensor::copy_()
[2m[36m(pid=59926)[0m     @     0x7fa514ad279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59926)[0m     @     0x55feed9aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59926)[0m     @     0x55feed905b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59926)[0m     @     0x55feed990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59926)[0m     @     0x55feed991a20 method_vectorcall
[2m[36m(pid=59926)[0m     @     0x55feed905bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59926)[0m     @     0x55feed990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59926)[0m     @     0x55feed991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59926)[0m     @     0x55feed906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59926)[0m     @     0x55feed990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59926)[0m     @     0x55feed991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59926)[0m     @     0x55feed906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59926)[0m     @     0x55feed990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59926)[0m     @     0x55feed991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59926)[0m     @     0x55feed906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59926)[0m     @     0x55feed990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59926)[0m     @     0x55feed991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59926)[0m     @     0x55feed906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59889)[0m     @     0x7f31fa0ba4f5 at::Tensor::copy_()
[2m[36m(pid=59889)[0m     @     0x7f31fc58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59889)[0m     @     0x7f31fa0ba4f5 at::Tensor::copy_()
[2m[36m(pid=59889)[0m     @     0x7f320016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59889)[0m     @     0x55db450e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59889)[0m     @     0x55db4503fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59889)[0m     @     0x55db450cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59889)[0m     @     0x55db450cba20 method_vectorcall
[2m[36m(pid=59889)[0m     @     0x55db4503fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59889)[0m     @     0x55db450cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59889)[0m     @     0x55db450cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59889)[0m     @     0x55db45040689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59889)[0m     @     0x55db450cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59889)[0m     @     0x55db450cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59889)[0m     @     0x55db45040689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59889)[0m     @     0x55db450cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59889)[0m     @     0x55db450cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59889)[0m     @     0x55db45040689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59889)[0m     @     0x55db450cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59889)[0m     @     0x55db450cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59889)[0m     @     0x55db45040689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59880)[0m     @     0x7efc5c1648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59880)[0m     @     0x7efc5c164ad3 at::TensorIterator::for_each()
[2m[36m(pid=59880)[0m     @     0x7efc5c164d91 at::TensorIterator::for_each()
[2m[36m(pid=59880)[0m     @     0x7efc5ca47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59880)[0m     @     0x7efc5ca6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59927)[0m     @     0x7f10eb88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59927)[0m     @     0x7f10e93ba4f5 at::Tensor::copy_()
[2m[36m(pid=59927)[0m     @     0x7f10ef46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59927)[0m     @     0x564c3989bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59927)[0m     @     0x564c397f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59927)[0m     @     0x564c39881baf _PyEval_EvalCodeWithName
[2m[36m(pid=59927)[0m     @     0x564c39882a20 method_vectorcall
[2m[36m(pid=59927)[0m     @     0x564c397f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59927)[0m     @     0x564c39881baf _PyEval_EvalCodeWithName
[2m[36m(pid=59927)[0m     @     0x564c39882643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59927)[0m     @     0x564c397f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59927)[0m     @     0x564c39881baf _PyEval_EvalCodeWithName
[2m[36m(pid=59927)[0m     @     0x564c39882643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59927)[0m     @     0x564c397f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59927)[0m     @     0x564c39881baf _PyEval_EvalCodeWithName
[2m[36m(pid=59927)[0m     @     0x564c39882643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59927)[0m     @     0x564c397f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59927)[0m     @     0x564c39881baf _PyEval_EvalCodeWithName
[2m[36m(pid=59927)[0m     @     0x564c39882643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59927)[0m     @     0x564c397f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59929)[0m     @     0x7f6481cfb4f5 at::Tensor::copy_()
[2m[36m(pid=59929)[0m     @     0x7f6487da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59929)[0m     @     0x562367eb5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59929)[0m     @     0x562367e10b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59929)[0m     @     0x562367e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59929)[0m     @     0x562367e9ca20 method_vectorcall
[2m[36m(pid=59929)[0m     @     0x562367e10bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59929)[0m     @     0x562367e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59929)[0m     @     0x562367e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59929)[0m     @     0x562367e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59929)[0m     @     0x562367e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59929)[0m     @     0x562367e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59929)[0m     @     0x562367e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59929)[0m     @     0x562367e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59929)[0m     @     0x562367e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59929)[0m     @     0x562367e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59929)[0m     @     0x562367e9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59929)[0m     @     0x562367e9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59929)[0m     @     0x562367e11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59913)[0m     @     0x7f210d8b04f5 at::Tensor::copy_()
[2m[36m(pid=59913)[0m     @     0x7f211395b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59913)[0m     @     0x55b28f3cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59913)[0m     @     0x55b28f325b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59913)[0m     @     0x55b28f3b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59913)[0m     @     0x55b28f3b1a20 method_vectorcall
[2m[36m(pid=59913)[0m     @     0x55b28f325bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59913)[0m     @     0x55b28f3b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59913)[0m     @     0x55b28f3b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59913)[0m     @     0x55b28f326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59913)[0m     @     0x55b28f3b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59913)[0m     @     0x55b28f3b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59913)[0m     @     0x55b28f326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59913)[0m     @     0x55b28f3b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59913)[0m     @     0x55b28f3b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59913)[0m     @     0x55b28f326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59913)[0m     @     0x55b28f3b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59913)[0m     @     0x55b28f3b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59913)[0m     @     0x55b28f326689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59819)[0m     @     0x7f3e9933f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59819)[0m     @     0x7f3e9933fad3 at::TensorIterator::for_each()
[2m[36m(pid=59819)[0m     @     0x7f3e9933fd91 at::TensorIterator::for_each()
[2m[36m(pid=59819)[0m     @     0x7f3e99c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59819)[0m     @     0x7f3e99c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59940)[0m     @     0x7f9081166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59940)[0m     @     0x7f90808917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59940)[0m     @     0x7f90808948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59935)[0m     @     0x7f2d7e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59935)[0m     @     0x7f2d7e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59935)[0m     @     0x7f2d7e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=59807)[0m     @     0x7f9b97223ad3 at::TensorIterator::for_each()
[2m[36m(pid=59807)[0m     @     0x7f9b97223d91 at::TensorIterator::for_each()
[2m[36m(pid=59807)[0m     @     0x7f9b97b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59807)[0m     @     0x7f9b97b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59945)[0m     @     0x7fc14533f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59945)[0m     @     0x7fc14533fad3 at::TensorIterator::for_each()
[2m[36m(pid=59945)[0m     @     0x7fc14533fd91 at::TensorIterator::for_each()
[2m[36m(pid=59897)[0m     @     0x7faa7cd8c390 (unknown)
[2m[36m(pid=59897)[0m     @     0x7f7b7cc74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59897)[0m     @     0x7f7b7c39f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59877)[0m     @     0x7f617faac390 (unknown)
[2m[36m(pid=59877)[0m     @     0x7f327f9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59877)[0m     @     0x7f327f0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59877)[0m     @     0x7f327f0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59877)[0m     @     0x7f327f0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=59910)[0m     @     0x7f42d6e15390 (unknown)
[2m[36m(pid=59910)[0m     @     0x7f13d6db0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59910)[0m     @     0x7f13d64db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59910)[0m     @     0x7f13d64de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59822)[0m     @     0x7f18b7af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59822)[0m     @     0x7f18b72207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59822)[0m     @     0x7f18b72238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59909)[0m     @     0x7eeab2b125a4 at::native::copy_()
[2m[36m(pid=59909)[0m     @     0x7eeab31fd4f5 at::Tensor::copy_()
[2m[36m(pid=59909)[0m     @     0x7eeab56d08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59896)[0m     @     0x55e8f67c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59896)[0m     @     0x55e8f67c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59896)[0m     @     0x55e8f673b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59896)[0m     @     0x55e8f67c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59896)[0m     @     0x55e8f67c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59896)[0m     @     0x55e8f673b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59896)[0m     @     0x55e8f67c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59896)[0m     @     0x55e8f67c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59896)[0m     @     0x55e8f673b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59896)[0m     @     0x55e8f67c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59896)[0m     @     0x55e8f67c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59896)[0m     @     0x55e8f673b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59937)[0m     @     0x5616bcbecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59937)[0m     @     0x5616bcbed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59937)[0m     @     0x5616bcb62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59937)[0m     @     0x5616bcbecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59937)[0m     @     0x5616bcbed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59937)[0m     @     0x5616bcb62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59937)[0m     @     0x5616bcbecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59937)[0m     @     0x5616bcbed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59937)[0m     @     0x5616bcb62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m     @     0x7f5ff1a93d91 at::TensorIterator::for_each()
[2m[36m(pid=59876)[0m     @     0x7f5ff2376b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59876)[0m     @     0x7f5ff2399c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59867)[0m     @     0x7fac7a14fad3 at::TensorIterator::for_each()
[2m[36m(pid=59867)[0m     @     0x7fac7a14fd91 at::TensorIterator::for_each()
[2m[36m(pid=59867)[0m     @     0x7fac7aa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59892)[0m     @     0x7fa7b4d10ad3 at::TensorIterator::for_each()
[2m[36m(pid=59892)[0m     @     0x7fa7b4d10d91 at::TensorIterator::for_each()
[2m[36m(pid=59892)[0m     @     0x7fa7b55f3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59892)[0m     @     0x7fa7b5616c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59919)[0m     @     0x7f53b7539ad3 at::TensorIterator::for_each()
[2m[36m(pid=59919)[0m     @     0x7f53b7539d91 at::TensorIterator::for_each()
[2m[36m(pid=59919)[0m     @     0x7f53b7e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59919)[0m     @     0x7f53b7e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59895)[0m     @     0x7ef92e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=59895)[0m     @     0x7ef92ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59895)[0m     @     0x7ef92ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59895)[0m     @     0x7ef92def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59879)[0m     @     0x7f15fc164d91 at::TensorIterator::for_each()
[2m[36m(pid=59879)[0m     @     0x7f15fca47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59879)[0m     @     0x7f15fca6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59879)[0m     @     0x7f15fbf0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59873)[0m     @     0x7f2d2a1d25a4 at::native::copy_()
[2m[36m(pid=59873)[0m     @     0x7f2d2a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=59873)[0m     @     0x7f2d2cd908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59916)[0m     @     0x7ee298afad91 at::TensorIterator::for_each()
[2m[36m(pid=59916)[0m     @     0x7ee2993ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59916)[0m     @     0x7ee299400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59827)[0m     @     0x7f278980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59827)[0m     @     0x7f278982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59827)[0m     @     0x7f2788ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59827)[0m     @     0x7f2788ccd388 at::native::copy_impl()
[2m[36m(pid=59838)[0m     @     0x7f8c39c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59838)[0m     @     0x7f8c39c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59865)[0m     @     0x7f329cafad91 at::TensorIterator::for_each()
[2m[36m(pid=59865)[0m     @     0x7f329d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59865)[0m     @     0x7f329d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59860)[0m     @     0x7fcb93ce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59860)[0m     @     0x7fcb918124f5 at::Tensor::copy_()
[2m[36m(pid=59860)[0m     @     0x7fcb978bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59860)[0m     @     0x557ff8cfafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59860)[0m     @     0x557ff8c55b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59860)[0m     @     0x557ff8ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59860)[0m     @     0x557ff8ce1a20 method_vectorcall
[2m[36m(pid=59860)[0m     @     0x557ff8c55bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59860)[0m     @     0x557ff8ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59860)[0m     @     0x557ff8ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59860)[0m     @     0x557ff8c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59860)[0m     @     0x557ff8ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59860)[0m     @     0x557ff8ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59860)[0m     @     0x557ff8c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59860)[0m     @     0x557ff8ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59860)[0m     @     0x557ff8ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59860)[0m     @     0x557ff8c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59860)[0m     @     0x557ff8ce0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59860)[0m     @     0x557ff8ce1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59860)[0m     @     0x557ff8c56689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59899)[0m     @     0x7f63ae0cdad3 at::TensorIterator::for_each()
[2m[36m(pid=59899)[0m     @     0x7f63ae0cdd91 at::TensorIterator::for_each()
[2m[36m(pid=59899)[0m     @     0x7f63ae9b0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59899)[0m     @     0x7f63ae9d3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59938)[0m     @     0x7fb9e300cad3 at::TensorIterator::for_each()
[2m[36m(pid=59938)[0m     @     0x7fb9e300cd91 at::TensorIterator::for_each()
[2m[36m(pid=59938)[0m     @     0x7fb9e38efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59938)[0m     @     0x7fb9e3912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59821)[0m     @     0x7fa397512ad3 at::TensorIterator::for_each()
[2m[36m(pid=59821)[0m     @     0x7fa397512d91 at::TensorIterator::for_each()
[2m[36m(pid=59821)[0m     @     0x7fa397df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59821)[0m     @     0x7fa397e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59928)[0m     @     0x7f5bb8c764f5 at::Tensor::copy_()
[2m[36m(pid=59928)[0m     @     0x7f5bbb1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59928)[0m     @     0x7f5bb8c764f5 at::Tensor::copy_()
[2m[36m(pid=59890)[0m     @     0x7f51591a54f5 at::Tensor::copy_()
[2m[36m(pid=59890)[0m     @     0x7f515f25079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59890)[0m     @     0x556ae7ebefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59890)[0m     @     0x556ae7e19b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59890)[0m     @     0x556ae7ea4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59890)[0m     @     0x556ae7ea5a20 method_vectorcall
[2m[36m(pid=59890)[0m     @     0x556ae7e19bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59890)[0m     @     0x556ae7ea4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59890)[0m     @     0x556ae7ea5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59890)[0m     @     0x556ae7e1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59890)[0m     @     0x556ae7ea4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59890)[0m     @     0x556ae7ea5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59890)[0m     @     0x556ae7e1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59890)[0m     @     0x556ae7ea4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59890)[0m     @     0x556ae7ea5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59890)[0m     @     0x556ae7e1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59890)[0m     @     0x556ae7ea4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59890)[0m     @     0x556ae7ea5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59890)[0m     @     0x556ae7e1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59894)[0m     @     0x7f7d147e3d91 at::TensorIterator::for_each()
[2m[36m(pid=59894)[0m     @     0x7f7d150c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59894)[0m     @     0x7f7d150e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59894)[0m     @     0x7f7d1458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59942)[0m     @     0x562b488aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59942)[0m     @     0x562b48934baf _PyEval_EvalCodeWithName
[2m[36m(pid=59942)[0m     @     0x562b48935643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59942)[0m     @     0x562b488aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59942)[0m     @     0x562b48934baf _PyEval_EvalCodeWithName
[2m[36m(pid=59942)[0m     @     0x562b48935643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59942)[0m     @     0x562b488aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59942)[0m     @     0x562b48934baf _PyEval_EvalCodeWithName
[2m[36m(pid=59942)[0m     @     0x562b48935643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59942)[0m     @     0x562b488aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x7f1a59552d91 at::TensorIterator::for_each()
[2m[36m(pid=59881)[0m     @     0x7f1a59e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59881)[0m     @     0x7f1a59e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59826)[0m     @     0x7f851cb18ad3 at::TensorIterator::for_each()
[2m[36m(pid=59826)[0m     @     0x7f851cb18d91 at::TensorIterator::for_each()
[2m[36m(pid=59826)[0m     @     0x7f851d3fbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59826)[0m     @     0x7f851d41ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59845)[0m     @     0x7f1c38978d91 at::TensorIterator::for_each()
[2m[36m(pid=59845)[0m     @     0x7f1c3925bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59845)[0m     @     0x7f1c3927ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59816)[0m     @     0x7f0d3c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59816)[0m     @     0x7f0d3c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59816)[0m     @     0x7f0d3ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59816)[0m     @     0x7f0d3ba37388 at::native::copy_impl()
[2m[36m(pid=59933)[0m     @     0x7f1e43ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=59933)[0m     @     0x7f1e43ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=59933)[0m     @     0x7f1e44785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59933)[0m     @     0x7f1e447a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59898)[0m     @     0x7ed0b83354f5 at::Tensor::copy_()
[2m[36m(pid=59898)[0m     @     0x7ed0ba8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59914)[0m     @     0x7f161c3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=59914)[0m     @     0x7f161cc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59914)[0m     @     0x7f161cca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59914)[0m     @     0x7f161c14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59914)[0m     @     0x7f161c148388 at::native::copy_impl()
[2m[36m(pid=59842)[0m     @     0x7edc7be1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59842)[0m     @     0x7edc7be3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59842)[0m     @     0x7edc7b2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59842)[0m     @     0x7edc7b2df388 at::native::copy_impl()
[2m[36m(pid=59805)[0m     @     0x7ef37e37fd91 at::TensorIterator::for_each()
[2m[36m(pid=59805)[0m     @     0x7ef37ec62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59805)[0m     @     0x7ef37ec85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59805)[0m     @     0x7ef37e127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59805)[0m     @     0x7ef37e125388 at::native::copy_impl()
[2m[36m(pid=59817)[0m     @     0x7f370700cd91 at::TensorIterator::for_each()
[2m[36m(pid=59817)[0m     @     0x7f37078efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59817)[0m     @     0x7f3707912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59817)[0m     @     0x7f3706db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59817)[0m     @     0x7f3706db2388 at::native::copy_impl()
[2m[36m(pid=59903)[0m     @     0x7f9fc5a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=59903)[0m     @     0x7f9fc5a79d91 at::TensorIterator::for_each()
[2m[36m(pid=59903)[0m     @     0x7f9fc635cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59903)[0m     @     0x7f9fc637fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59861)[0m     @     0x7f80bfc43a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59861)[0m     @     0x7f80bfc41388 at::native::copy_impl()
[2m[36m(pid=59861)[0m     @     0x7f80bfc435a4 at::native::copy_()
[2m[36m(pid=59863)[0m     @     0x7faf36343ad3 at::TensorIterator::for_each()
[2m[36m(pid=59863)[0m     @     0x7faf36343d91 at::TensorIterator::for_each()
[2m[36m(pid=59863)[0m     @     0x7faf36c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59863)[0m     @     0x7faf36c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59863)[0m     @     0x7faf360eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59863)[0m     @     0x7faf360e9388 at::native::copy_impl()
[2m[36m(pid=59834)[0m     @     0x7fb694bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59834)[0m     @     0x7fb694bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=59834)[0m     @     0x7fb694bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=59834)[0m     @     0x7fb6954b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59834)[0m     @     0x7fb6954d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59830)[0m     @     0x7f5d338def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=59830)[0m     @     0x7f5d330097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=59830)[0m     @     0x7f5d3300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59925)[0m     @     0x7f8a99caaad3 at::TensorIterator::for_each()
[2m[36m(pid=59925)[0m     @     0x7f8a99caad91 at::TensorIterator::for_each()
[2m[36m(pid=59925)[0m     @     0x7f8a9a58db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59925)[0m     @     0x7f8a9a5b0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59884)[0m     @     0x7fc2e642aad3 at::TensorIterator::for_each()
[2m[36m(pid=59884)[0m     @     0x7fc2e642ad91 at::TensorIterator::for_each()
[2m[36m(pid=59884)[0m     @     0x7fc2e6d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59884)[0m     @     0x7fc2e6d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59835)[0m     @     0x7fcb4a5c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=59835)[0m     @     0x7fcb4a5c1d91 at::TensorIterator::for_each()
[2m[36m(pid=59835)[0m     @     0x7fcb4aea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59835)[0m     @     0x7fcb4aec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59835)[0m     @     0x7fcb4a369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59835)[0m     @     0x7fcb4a367388 at::native::copy_impl()
[2m[36m(pid=59869)[0m     @     0x7f2a219e7d91 at::TensorIterator::for_each()
[2m[36m(pid=59869)[0m     @     0x7f2a222cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59869)[0m     @     0x7f2a222edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59869)[0m     @     0x7f2a2178fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59869)[0m     @     0x7f2a2178d388 at::native::copy_impl()
[2m[36m(pid=59831)[0m     @     0x7f4c5fdfad91 at::TensorIterator::for_each()
[2m[36m(pid=59831)[0m     @     0x7f4c606ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59831)[0m     @     0x7f4c60700c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59831)[0m     @     0x7f4c5fba2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59831)[0m     @     0x7f4c5fba0388 at::native::copy_impl()
[2m[36m(pid=59814)[0m     @     0x7f22db74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59814)[0m     @     0x7f22db74aad3 at::TensorIterator::for_each()
[2m[36m(pid=59820)[0m     @     0x7f7b71a4cd91 at::TensorIterator::for_each()
[2m[36m(pid=59820)[0m     @     0x7f7b7232fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59820)[0m     @     0x7f7b72352c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59820)[0m     @     0x7f7b717f4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59820)[0m     @     0x7f7b717f2388 at::native::copy_impl()
[2m[36m(pid=59843)[0m     @     0x7ed291b9d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59841)[0m     @     0x7f93e20fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59878)[0m     @     0x7f01de957d91 at::TensorIterator::for_each()
[2m[36m(pid=59878)[0m     @     0x7f01df23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59878)[0m     @     0x7f01df25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59878)[0m     @     0x7f01de6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59878)[0m     @     0x7f01de6fd388 at::native::copy_impl()
[2m[36m(pid=59840)[0m     @     0x7eea2ff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59883)[0m     @     0x7f2b014a5d91 at::TensorIterator::for_each()
[2m[36m(pid=59883)[0m     @     0x7f2b01d88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59883)[0m     @     0x7f2b01dabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59883)[0m     @     0x7f2b0124da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59813)[0m     @     0x7fa10d951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59813)[0m     @     0x7fa10d974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59813)[0m     @     0x7fa10ce16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59813)[0m     @     0x7fa10ce14388 at::native::copy_impl()
[2m[36m(pid=59891)[0m     @     0x7f8c59ceda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59891)[0m     @     0x7f8c59ceb388 at::native::copy_impl()
[2m[36m(pid=59891)[0m     @     0x7f8c59ced5a4 at::native::copy_()
[2m[36m(pid=59806)[0m     @     0x7f8d2a14fd91 at::TensorIterator::for_each()
[2m[36m(pid=59806)[0m     @     0x7f8d2aa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59806)[0m     @     0x7f8d2aa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59806)[0m     @     0x7f8d29ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59806)[0m     @     0x7f8d29ef5388 at::native::copy_impl()
[2m[36m(pid=59811)[0m     @     0x7f2514951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59811)[0m     @     0x7f2514974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59811)[0m     @     0x7f2513e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59811)[0m     @     0x7f2513e14388 at::native::copy_impl()
[2m[36m(pid=59809)[0m     @     0x7ed27ad20d91 at::TensorIterator::for_each()
[2m[36m(pid=59809)[0m     @     0x7ed27b603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59809)[0m     @     0x7ed27b626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59809)[0m     @     0x7ed27aac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59809)[0m     @     0x7ed27aac6388 at::native::copy_impl()
[2m[36m(pid=59810)[0m     @     0x7f399379fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59810)[0m     @     0x7f39937c2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59810)[0m     @     0x7f3992c64a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59810)[0m     @     0x7f3992c62388 at::native::copy_impl()
[2m[36m(pid=59907)[0m     @     0x7eeec7b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59907)[0m     @     0x7eeec7b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59907)[0m     @     0x7eeec6fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59907)[0m     @     0x7eeec6fc9388 at::native::copy_impl()
[2m[36m(pid=59901)[0m     @     0x7f647a478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59901)[0m     @     0x7f647a49bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59901)[0m     @     0x7f647993da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59901)[0m     @     0x7f647993b388 at::native::copy_impl()
[2m[36m(pid=59824)[0m     @     0x7f63ead0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59824)[0m     @     0x7f63ead30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59824)[0m     @     0x7f63ea1d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59824)[0m     @     0x7f63ea1d0388 at::native::copy_impl()
[2m[36m(pid=59839)[0m     @     0x7f7d34b8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59839)[0m     @     0x7f7d34b88388 at::native::copy_impl()
[2m[36m(pid=59839)[0m     @     0x7f7d34b8a5a4 at::native::copy_()
[2m[36m(pid=59839)[0m     @     0x7f7d352754f5 at::Tensor::copy_()
[2m[36m(pid=59923)[0m     @     0x7ef88fa21a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59923)[0m     @     0x7ef88fa1f388 at::native::copy_impl()
[2m[36m(pid=59923)[0m     @     0x7ef88fa215a4 at::native::copy_()
[2m[36m(pid=59818)[0m     @     0x7ef00adc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59818)[0m     @     0x7ef00ade4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59818)[0m     @     0x7ef00a286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59818)[0m     @     0x7ef00a284388 at::native::copy_impl()
[2m[36m(pid=59808)[0m     @     0x7ed11f6e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59808)[0m     @     0x7ed11eb84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59808)[0m     @     0x7ed11eb82388 at::native::copy_impl()
[2m[36m(pid=59808)[0m     @     0x7ed11eb845a4 at::native::copy_()
[2m[36m(pid=59880)[0m     @     0x7efc5bf0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59880)[0m     @     0x7efc5bf0a388 at::native::copy_impl()
[2m[36m(pid=59880)[0m     @     0x7efc5bf0c5a4 at::native::copy_()
[2m[36m(pid=59819)[0m     @     0x7f3e990e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59819)[0m     @     0x7f3e990e5388 at::native::copy_impl()
[2m[36m(pid=59819)[0m     @     0x7f3e990e75a4 at::native::copy_()
[2m[36m(pid=59940)[0m     @     0x7f9080894ad3 at::TensorIterator::for_each()
[2m[36m(pid=59935)[0m     @     0x7f2d7e957d91 at::TensorIterator::for_each()
[2m[36m(pid=59935)[0m     @     0x7f2d7f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59935)[0m     @     0x7f2d7f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59935)[0m     @     0x7f2d7e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59935)[0m     @     0x7f2d7e6fd388 at::native::copy_impl()
[2m[36m(pid=59807)[0m     @     0x7f9b96fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59807)[0m     @     0x7f9b96fc9388 at::native::copy_impl()
[2m[36m(pid=59807)[0m     @     0x7f9b96fcb5a4 at::native::copy_()
[2m[36m(pid=59945)[0m     @     0x7fc145c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59945)[0m     @     0x7fc145c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59945)[0m     @     0x7fc1450e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59945)[0m     @     0x7fc1450e5388 at::native::copy_impl()
[2m[36m(pid=59897)[0m     @     0x7f7b7c3a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=59877)[0m     @     0x7f327f0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=59877)[0m     @     0x7f327f9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59877)[0m     @     0x7f327f9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59910)[0m     @     0x7f13d64dead3 at::TensorIterator::for_each()
[2m[36m(pid=59910)[0m     @     0x7f13d64ded91 at::TensorIterator::for_each()
[2m[36m(pid=59910)[0m     @     0x7f13d6dc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59910)[0m     @     0x7f13d6de4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59822)[0m     @     0x7f18b7223ad3 at::TensorIterator::for_each()
[2m[36m(pid=59822)[0m     @     0x7f18b7223d91 at::TensorIterator::for_each()
[2m[36m(pid=59822)[0m     @     0x7f18b7b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59822)[0m     @     0x7f18b7b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59909)[0m     @     0x7eeab31fd4f5 at::Tensor::copy_()
[2m[36m(pid=59909)[0m     @     0x7eeab92a879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59909)[0m     @     0x56512f32efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59909)[0m     @     0x56512f289b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59909)[0m     @     0x56512f314baf _PyEval_EvalCodeWithName
[2m[36m(pid=59909)[0m     @     0x56512f315a20 method_vectorcall
[2m[36m(pid=59909)[0m     @     0x56512f289bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59909)[0m     @     0x56512f314baf _PyEval_EvalCodeWithName
[2m[36m(pid=59909)[0m     @     0x56512f315643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59909)[0m     @     0x56512f28a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59909)[0m     @     0x56512f314baf _PyEval_EvalCodeWithName
[2m[36m(pid=59909)[0m     @     0x56512f315643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59909)[0m     @     0x56512f28a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59909)[0m     @     0x56512f314baf _PyEval_EvalCodeWithName
[2m[36m(pid=59909)[0m     @     0x56512f315643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59909)[0m     @     0x56512f28a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59909)[0m     @     0x56512f314baf _PyEval_EvalCodeWithName
[2m[36m(pid=59909)[0m     @     0x56512f315643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59909)[0m     @     0x56512f28a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m     @     0x7f5ff183ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59876)[0m     @     0x7f5ff1839388 at::native::copy_impl()
[2m[36m(pid=59876)[0m     @     0x7f5ff183b5a4 at::native::copy_()
[2m[36m(pid=59867)[0m     @     0x7fac7aa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59867)[0m     @     0x7fac79ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59867)[0m     @     0x7fac79ef5388 at::native::copy_impl()
[2m[36m(pid=59892)[0m     @     0x7fa7b4ab8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59892)[0m     @     0x7fa7b4ab6388 at::native::copy_impl()
[2m[36m(pid=59892)[0m     @     0x7fa7b4ab85a4 at::native::copy_()
[2m[36m(pid=59919)[0m     @     0x7f53b72e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59919)[0m     @     0x7f53b72df388 at::native::copy_impl()
[2m[36m(pid=59919)[0m     @     0x7f53b72e15a4 at::native::copy_()
[2m[36m(pid=59895)[0m     @     0x7ef92def5388 at::native::copy_impl()
[2m[36m(pid=59895)[0m     @     0x7ef92def75a4 at::native::copy_()
[2m[36m(pid=59895)[0m     @     0x7ef92e5e24f5 at::Tensor::copy_()
[2m[36m(pid=59895)[0m     @     0x7ef930ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59879)[0m     @     0x7f15fbf0a388 at::native::copy_impl()
[2m[36m(pid=59879)[0m     @     0x7f15fbf0c5a4 at::native::copy_()
[2m[36m(pid=59879)[0m     @     0x7f15fc5f74f5 at::Tensor::copy_()
[2m[36m(pid=59879)[0m     @     0x7f15feaca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59873)[0m     @     0x7f2d2a8bd4f5 at::Tensor::copy_()
[2m[36m(pid=59873)[0m     @     0x7f2d3096879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59873)[0m     @     0x55785e9aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59873)[0m     @     0x55785e905b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59873)[0m     @     0x55785e990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59873)[0m     @     0x55785e991a20 method_vectorcall
[2m[36m(pid=59873)[0m     @     0x55785e905bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59873)[0m     @     0x55785e990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59873)[0m     @     0x55785e991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59873)[0m     @     0x55785e906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59873)[0m     @     0x55785e990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59873)[0m     @     0x55785e991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59873)[0m     @     0x55785e906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59873)[0m     @     0x55785e990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59873)[0m     @     0x55785e991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59873)[0m     @     0x55785e906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59873)[0m     @     0x55785e990baf _PyEval_EvalCodeWithName
[2m[36m(pid=59873)[0m     @     0x55785e991643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59873)[0m     @     0x55785e906689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x7ee2988a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59916)[0m     @     0x7ee2988a0388 at::native::copy_impl()
[2m[36m(pid=59916)[0m     @     0x7ee2988a25a4 at::native::copy_()
[2m[36m(pid=59827)[0m     @     0x7f2788ccf5a4 at::native::copy_()
[2m[36m(pid=59827)[0m     @     0x7f27893ba4f5 at::Tensor::copy_()
[2m[36m(pid=59827)[0m     @     0x7f278b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59865)[0m     @     0x7f329c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59865)[0m     @     0x7f329c8a0388 at::native::copy_impl()
[2m[36m(pid=59865)[0m     @     0x7f329c8a25a4 at::native::copy_()
[2m[36m(pid=59899)[0m     @     0x7f63ade75a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59899)[0m     @     0x7f63ade73388 at::native::copy_impl()
[2m[36m(pid=59899)[0m     @     0x7f63ade755a4 at::native::copy_()
[2m[36m(pid=59938)[0m     @     0x7fb9e2db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59938)[0m     @     0x7fb9e2db2388 at::native::copy_impl()
[2m[36m(pid=59938)[0m     @     0x7fb9e2db45a4 at::native::copy_()
[2m[36m(pid=59821)[0m     @     0x7fa3972baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59821)[0m     @     0x7fa3972b8388 at::native::copy_impl()
[2m[36m(pid=59821)[0m     @     0x7fa3972ba5a4 at::native::copy_()
[2m[36m(pid=59928)[0m     @     0x7f5bbed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59928)[0m     @     0x55a52f4ebfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59928)[0m     @     0x55a52f446b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59928)[0m     @     0x55a52f4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59928)[0m     @     0x55a52f4d2a20 method_vectorcall
[2m[36m(pid=59928)[0m     @     0x55a52f446bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59928)[0m     @     0x55a52f4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59928)[0m     @     0x55a52f4d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59928)[0m     @     0x55a52f447689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59928)[0m     @     0x55a52f4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59928)[0m     @     0x55a52f4d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59928)[0m     @     0x55a52f447689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59928)[0m     @     0x55a52f4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59928)[0m     @     0x55a52f4d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59928)[0m     @     0x55a52f447689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59928)[0m     @     0x55a52f4d1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59928)[0m     @     0x55a52f4d2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59928)[0m     @     0x55a52f447689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59894)[0m     @     0x7f7d14589388 at::native::copy_impl()
[2m[36m(pid=59894)[0m     @     0x7f7d1458b5a4 at::native::copy_()
[2m[36m(pid=59881)[0m     @     0x7f1a592faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59881)[0m     @     0x7f1a592f8388 at::native::copy_impl()
[2m[36m(pid=59881)[0m     @     0x7f1a592fa5a4 at::native::copy_()
[2m[36m(pid=59826)[0m     @     0x7f851c8c0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59826)[0m     @     0x7f851c8be388 at::native::copy_impl()
[2m[36m(pid=59826)[0m     @     0x7f851c8c05a4 at::native::copy_()
[2m[36m(pid=59845)[0m     @     0x7f1c38720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59845)[0m     @     0x7f1c3871e388 at::native::copy_impl()
[2m[36m(pid=59845)[0m     @     0x7f1c387205a4 at::native::copy_()
[2m[36m(pid=59816)[0m     @     0x7f0d3ba395a4 at::native::copy_()
[2m[36m(pid=59816)[0m     @     0x7f0d3c1244f5 at::Tensor::copy_()
[2m[36m(pid=59816)[0m     @     0x7f0d3e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59933)[0m     @     0x7f1e43c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59933)[0m     @     0x7f1e43c48388 at::native::copy_impl()
[2m[36m(pid=59933)[0m     @     0x7f1e43c4a5a4 at::native::copy_()
[2m[36m(pid=59898)[0m     @     0x7ed0b83354f5 at::Tensor::copy_()
[2m[36m(pid=59898)[0m     @     0x7ed0be3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59898)[0m     @     0x556610aa1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59898)[0m     @     0x5566109fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59898)[0m     @     0x556610a87baf _PyEval_EvalCodeWithName
[2m[36m(pid=59898)[0m     @     0x556610a88a20 method_vectorcall
[2m[36m(pid=59898)[0m     @     0x5566109fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59898)[0m     @     0x556610a87baf _PyEval_EvalCodeWithName
[2m[36m(pid=59898)[0m     @     0x556610a88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59898)[0m     @     0x5566109fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59898)[0m     @     0x556610a87baf _PyEval_EvalCodeWithName
[2m[36m(pid=59898)[0m     @     0x556610a88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59898)[0m     @     0x5566109fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59898)[0m     @     0x556610a87baf _PyEval_EvalCodeWithName
[2m[36m(pid=59898)[0m     @     0x556610a88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59898)[0m     @     0x5566109fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59898)[0m     @     0x556610a87baf _PyEval_EvalCodeWithName
[2m[36m(pid=59898)[0m     @     0x556610a88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59898)[0m     @     0x5566109fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59914)[0m     @     0x7f161c14a5a4 at::native::copy_()
[2m[36m(pid=59914)[0m     @     0x7f161c8354f5 at::Tensor::copy_()
[2m[36m(pid=59914)[0m     @     0x7f161ed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59842)[0m     @     0x7edc7b2e15a4 at::native::copy_()
[2m[36m(pid=59842)[0m     @     0x7edc7b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=59842)[0m     @     0x7edc7de9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59805)[0m     @     0x7ef37e1275a4 at::native::copy_()
[2m[36m(pid=59805)[0m     @     0x7ef37e8124f5 at::Tensor::copy_()
[2m[36m(pid=59817)[0m     @     0x7f3706db45a4 at::native::copy_()
[2m[36m(pid=59817)[0m     @     0x7f370749f4f5 at::Tensor::copy_()
[2m[36m(pid=59903)[0m     @     0x7f9fc5821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59903)[0m     @     0x7f9fc581f388 at::native::copy_impl()
[2m[36m(pid=59903)[0m     @     0x7f9fc58215a4 at::native::copy_()
[2m[36m(pid=59861)[0m     @     0x7f80c032e4f5 at::Tensor::copy_()
[2m[36m(pid=59861)[0m     @     0x7f80c28018de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59861)[0m     @     0x7f80c032e4f5 at::Tensor::copy_()
[2m[36m(pid=59861)[0m     @     0x7f80c63d979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59863)[0m     @     0x7faf360eb5a4 at::native::copy_()
[2m[36m(pid=59834)[0m     @     0x7fb694979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59834)[0m     @     0x7fb694977388 at::native::copy_impl()
[2m[36m(pid=59925)[0m     @     0x7f8a99a52a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59925)[0m     @     0x7f8a99a50388 at::native::copy_impl()
[2m[36m(pid=59925)[0m     @     0x7f8a99a525a4 at::native::copy_()
[2m[36m(pid=59884)[0m     @     0x7fc2e61d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59884)[0m     @     0x7fc2e61d0388 at::native::copy_impl()
[2m[36m(pid=59835)[0m     @     0x7fcb4a3695a4 at::native::copy_()
[2m[36m(pid=59869)[0m     @     0x7f2a2178f5a4 at::native::copy_()
[2m[36m(pid=59869)[0m     @     0x7f2a21e7a4f5 at::Tensor::copy_()
[2m[36m(pid=59831)[0m     @     0x7f4c5fba25a4 at::native::copy_()
[2m[36m(pid=59814)[0m     @     0x7f22db74ad91 at::TensorIterator::for_each()
[2m[36m(pid=59820)[0m     @     0x7f7b717f45a4 at::native::copy_()
[2m[36m(pid=59820)[0m     @     0x7f7b71edf4f5 at::Tensor::copy_()
[2m[36m(pid=59820)[0m     @     0x7f7b743b28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59843)[0m     @     0x7ed291b9dad3 at::TensorIterator::for_each()
[2m[36m(pid=59841)[0m     @     0x7f93e20faad3 at::TensorIterator::for_each()
[2m[36m(pid=59878)[0m     @     0x7f01de6ff5a4 at::native::copy_()
[2m[36m(pid=59878)[0m     @     0x7f01dedea4f5 at::Tensor::copy_()
[2m[36m(pid=59878)[0m     @     0x7f01e12bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59840)[0m     @     0x7eea2ff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=59883)[0m     @     0x7f2b0124b388 at::native::copy_impl()
[2m[36m(pid=59883)[0m     @     0x7f2b0124d5a4 at::native::copy_()
[2m[36m(pid=59883)[0m     @     0x7f2b019384f5 at::Tensor::copy_()
[2m[36m(pid=59813)[0m     @     0x7fa10ce165a4 at::native::copy_()
[2m[36m(pid=59813)[0m     @     0x7fa10d5014f5 at::Tensor::copy_()
[2m[36m(pid=59813)[0m     @     0x7fa10f9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59891)[0m     @     0x7f8c5a3d84f5 at::Tensor::copy_()
[2m[36m(pid=59891)[0m     @     0x7f8c5c8ab8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59891)[0m     @     0x7f8c5a3d84f5 at::Tensor::copy_()
[2m[36m(pid=59806)[0m     @     0x7f8d29ef75a4 at::native::copy_()
[2m[36m(pid=59806)[0m     @     0x7f8d2a5e24f5 at::Tensor::copy_()
[2m[36m(pid=59806)[0m     @     0x7f8d2cab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59811)[0m     @     0x7f2513e165a4 at::native::copy_()
[2m[36m(pid=59811)[0m     @     0x7f25145014f5 at::Tensor::copy_()
[2m[36m(pid=59811)[0m     @     0x7f25169d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59809)[0m     @     0x7ed27aac85a4 at::native::copy_()
[2m[36m(pid=59809)[0m     @     0x7ed27b1b34f5 at::Tensor::copy_()
[2m[36m(pid=59810)[0m     @     0x7f3992c645a4 at::native::copy_()
[2m[36m(pid=59810)[0m     @     0x7f399334f4f5 at::Tensor::copy_()
[2m[36m(pid=59810)[0m     @     0x7f39958228de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59907)[0m     @     0x7eeec6fcb5a4 at::native::copy_()
[2m[36m(pid=59907)[0m     @     0x7eeec76b64f5 at::Tensor::copy_()
[2m[36m(pid=59907)[0m     @     0x7eeec9b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59901)[0m     @     0x7f647993d5a4 at::native::copy_()
[2m[36m(pid=59901)[0m     @     0x7f647a0284f5 at::Tensor::copy_()
[2m[36m(pid=59901)[0m     @     0x7f647c4fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59824)[0m     @     0x7f63ea1d25a4 at::native::copy_()
[2m[36m(pid=59824)[0m     @     0x7f63ea8bd4f5 at::Tensor::copy_()
[2m[36m(pid=59824)[0m     @     0x7f63ecd908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59839)[0m     @     0x7f7d377488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59839)[0m     @     0x7f7d352754f5 at::Tensor::copy_()
[2m[36m(pid=59839)[0m     @     0x7f7d3b32079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59839)[0m     @     0x55d875312fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59839)[0m     @     0x55d87526db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59839)[0m     @     0x55d8752f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59839)[0m     @     0x55d8752f9a20 method_vectorcall
[2m[36m(pid=59839)[0m     @     0x55d87526dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59839)[0m     @     0x55d8752f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59839)[0m     @     0x55d8752f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59923)[0m     @     0x7ef89010c4f5 at::Tensor::copy_()
[2m[36m(pid=59923)[0m     @     0x7ef8925df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59923)[0m     @     0x7ef89010c4f5 at::Tensor::copy_()
[2m[36m(pid=59923)[0m     @     0x7ef8961b779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59923)[0m     @     0x55c7304a2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59818)[0m     @     0x7ef00a2865a4 at::native::copy_()
[2m[36m(pid=59818)[0m     @     0x7ef00a9714f5 at::Tensor::copy_()
[2m[36m(pid=59818)[0m     @     0x7ef00ce448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59808)[0m     @     0x7ed11f26f4f5 at::Tensor::copy_()
[2m[36m(pid=59808)[0m     @     0x7ed1217428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59880)[0m     @     0x7efc5c5f74f5 at::Tensor::copy_()
[2m[36m(pid=59880)[0m     @     0x7efc5eaca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59819)[0m     @     0x7f3e997d24f5 at::Tensor::copy_()
[2m[36m(pid=59819)[0m     @     0x7f3e9bca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59935)[0m     @     0x7f2d7e6ff5a4 at::native::copy_()
[2m[36m(pid=59935)[0m     @     0x7f2d7edea4f5 at::Tensor::copy_()
[2m[36m(pid=59807)[0m     @     0x7f9b976b64f5 at::Tensor::copy_()
[2m[36m(pid=59807)[0m     @     0x7f9b99b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59807)[0m     @     0x7f9b976b64f5 at::Tensor::copy_()
[2m[36m(pid=59945)[0m     @     0x7fc1450e75a4 at::native::copy_()
[2m[36m(pid=59945)[0m     @     0x7fc1457d24f5 at::Tensor::copy_()
[2m[36m(pid=59945)[0m     @     0x7fc147ca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59897)[0m     @     0x7f7b7c3a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=59877)[0m     @     0x7f327ee9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59877)[0m     @     0x7f327ee99388 at::native::copy_impl()
[2m[36m(pid=59877)[0m     @     0x7f327ee9b5a4 at::native::copy_()
[2m[36m(pid=59910)[0m     @     0x7f13d6286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59910)[0m     @     0x7f13d6284388 at::native::copy_impl()
[2m[36m(pid=59822)[0m     @     0x7f18b6fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59822)[0m     @     0x7f18b6fc9388 at::native::copy_impl()
[2m[36m(pid=59822)[0m     @     0x7f18b6fcb5a4 at::native::copy_()
[2m[36m(pid=59876)[0m     @     0x7f5ff1f264f5 at::Tensor::copy_()
[2m[36m(pid=59876)[0m     @     0x7f5ff43f98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59876)[0m     @     0x7f5ff1f264f5 at::Tensor::copy_()
[2m[36m(pid=59867)[0m     @     0x7fac79ef75a4 at::native::copy_()
[2m[36m(pid=59867)[0m     @     0x7fac7a5e24f5 at::Tensor::copy_()
[2m[36m(pid=59892)[0m     @     0x7fa7b51a34f5 at::Tensor::copy_()
[2m[36m(pid=59892)[0m     @     0x7fa7b76768de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59919)[0m     @     0x7f53b79cc4f5 at::Tensor::copy_()
[2m[36m(pid=59919)[0m     @     0x7f53b9e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59895)[0m     @     0x7ef92e5e24f5 at::Tensor::copy_()
[2m[36m(pid=59895)[0m     @     0x7ef93468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59895)[0m     @     0x561aa2655fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59895)[0m     @     0x561aa25b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59895)[0m     @     0x561aa263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59895)[0m     @     0x561aa263ca20 method_vectorcall
[2m[36m(pid=59895)[0m     @     0x561aa25b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59895)[0m     @     0x561aa263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59895)[0m     @     0x561aa263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59895)[0m     @     0x561aa25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59895)[0m     @     0x561aa263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59895)[0m     @     0x561aa263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59895)[0m     @     0x561aa25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59895)[0m     @     0x561aa263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59895)[0m     @     0x561aa263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59895)[0m     @     0x561aa25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59895)[0m     @     0x561aa263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59895)[0m     @     0x561aa263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59895)[0m     @     0x561aa25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59879)[0m     @     0x7f15fc5f74f5 at::Tensor::copy_()
[2m[36m(pid=59879)[0m     @     0x7f16026a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59879)[0m     @     0x564a6288efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59879)[0m     @     0x564a627e9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59879)[0m     @     0x564a62874baf _PyEval_EvalCodeWithName
[2m[36m(pid=59879)[0m     @     0x564a62875a20 method_vectorcall
[2m[36m(pid=59879)[0m     @     0x564a627e9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59879)[0m     @     0x564a62874baf _PyEval_EvalCodeWithName
[2m[36m(pid=59879)[0m     @     0x564a62875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59879)[0m     @     0x564a627ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59879)[0m     @     0x564a62874baf _PyEval_EvalCodeWithName
[2m[36m(pid=59879)[0m     @     0x564a62875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59879)[0m     @     0x564a627ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59879)[0m     @     0x564a62874baf _PyEval_EvalCodeWithName
[2m[36m(pid=59879)[0m     @     0x564a62875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59879)[0m     @     0x564a627ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59879)[0m     @     0x564a62874baf _PyEval_EvalCodeWithName
[2m[36m(pid=59879)[0m     @     0x564a62875643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59879)[0m     @     0x564a627ea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x7ee298f8d4f5 at::Tensor::copy_()
[2m[36m(pid=59916)[0m     @     0x7ee29b4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59827)[0m     @     0x7f27893ba4f5 at::Tensor::copy_()
[2m[36m(pid=59827)[0m     @     0x7f278f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59827)[0m     @     0x5610e03adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59827)[0m     @     0x5610e0308b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59827)[0m     @     0x5610e0393baf _PyEval_EvalCodeWithName
[2m[36m(pid=59827)[0m     @     0x5610e0394a20 method_vectorcall
[2m[36m(pid=59827)[0m     @     0x5610e0308bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59827)[0m     @     0x5610e0393baf _PyEval_EvalCodeWithName
[2m[36m(pid=59827)[0m     @     0x5610e0394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59827)[0m     @     0x5610e0309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59827)[0m     @     0x5610e0393baf _PyEval_EvalCodeWithName
[2m[36m(pid=59827)[0m     @     0x5610e0394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59827)[0m     @     0x5610e0309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59827)[0m     @     0x5610e0393baf _PyEval_EvalCodeWithName
[2m[36m(pid=59827)[0m     @     0x5610e0394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59827)[0m     @     0x5610e0309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59827)[0m     @     0x5610e0393baf _PyEval_EvalCodeWithName
[2m[36m(pid=59827)[0m     @     0x5610e0394643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59827)[0m     @     0x5610e0309689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x7f8c39c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=59838)[0m     @     0x7f8c39c27d91 at::TensorIterator::for_each()
[2m[36m(pid=59865)[0m     @     0x7f329cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=59865)[0m     @     0x7f329f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59899)[0m     @     0x7f63ae5604f5 at::Tensor::copy_()
[2m[36m(pid=59899)[0m     @     0x7f63b0a338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59938)[0m     @     0x7fb9e349f4f5 at::Tensor::copy_()
[2m[36m(pid=59938)[0m     @     0x7fb9e59728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59821)[0m     @     0x7fa3979a54f5 at::Tensor::copy_()
[2m[36m(pid=59821)[0m     @     0x7fa399e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59894)[0m     @     0x7f7d14c764f5 at::Tensor::copy_()
[2m[36m(pid=59894)[0m     @     0x7f7d171498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59894)[0m     @     0x7f7d14c764f5 at::Tensor::copy_()
[2m[36m(pid=59894)[0m     @     0x7f7d1ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59894)[0m     @     0x556c639eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59894)[0m     @     0x556c63945b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59894)[0m     @     0x556c639d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59894)[0m     @     0x556c639d1a20 method_vectorcall
[2m[36m(pid=59894)[0m     @     0x556c63945bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59894)[0m     @     0x556c639d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59894)[0m     @     0x556c639d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59894)[0m     @     0x556c63946689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59894)[0m     @     0x556c639d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59894)[0m     @     0x556c639d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59894)[0m     @     0x556c63946689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59894)[0m     @     0x556c639d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59894)[0m     @     0x556c639d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59894)[0m     @     0x556c63946689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59894)[0m     @     0x556c639d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59894)[0m     @     0x556c639d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59894)[0m     @     0x556c63946689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x7f1a599e54f5 at::Tensor::copy_()
[2m[36m(pid=59881)[0m     @     0x7f1a5beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59881)[0m     @     0x7f1a599e54f5 at::Tensor::copy_()
[2m[36m(pid=59881)[0m     @     0x7f1a5fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59881)[0m     @     0x55e83f706fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59881)[0m     @     0x55e83f661b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x55e83f6ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59881)[0m     @     0x55e83f6eda20 method_vectorcall
[2m[36m(pid=59881)[0m     @     0x55e83f661bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x55e83f6ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59881)[0m     @     0x55e83f6ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59881)[0m     @     0x55e83f662689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x55e83f6ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59881)[0m     @     0x55e83f6ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59881)[0m     @     0x55e83f662689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x55e83f6ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59826)[0m     @     0x7f851cfab4f5 at::Tensor::copy_()
[2m[36m(pid=59826)[0m     @     0x7f851f47e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59826)[0m     @     0x7f851cfab4f5 at::Tensor::copy_()
[2m[36m(pid=59826)[0m     @     0x7f852305679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59826)[0m     @     0x55ea2c4befd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59826)[0m     @     0x55ea2c419b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59826)[0m     @     0x55ea2c4a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59826)[0m     @     0x55ea2c4a5a20 method_vectorcall
[2m[36m(pid=59826)[0m     @     0x55ea2c419bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59826)[0m     @     0x55ea2c4a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59826)[0m     @     0x55ea2c4a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59845)[0m     @     0x7f1c38e0b4f5 at::Tensor::copy_()
[2m[36m(pid=59845)[0m     @     0x7f1c3b2de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59845)[0m     @     0x7f1c38e0b4f5 at::Tensor::copy_()
[2m[36m(pid=59845)[0m     @     0x7f1c3eeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59845)[0m     @     0x55f7ae37bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59845)[0m     @     0x55f7ae2d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59845)[0m     @     0x55f7ae361baf _PyEval_EvalCodeWithName
[2m[36m(pid=59845)[0m     @     0x55f7ae362a20 method_vectorcall
[2m[36m(pid=59845)[0m     @     0x55f7ae2d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59845)[0m     @     0x55f7ae361baf _PyEval_EvalCodeWithName
[2m[36m(pid=59845)[0m     @     0x55f7ae362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59845)[0m     @     0x55f7ae2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59845)[0m     @     0x55f7ae361baf _PyEval_EvalCodeWithName
[2m[36m(pid=59845)[0m     @     0x55f7ae362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59845)[0m     @     0x55f7ae2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59845)[0m     @     0x55f7ae361baf _PyEval_EvalCodeWithName
[2m[36m(pid=59845)[0m     @     0x55f7ae362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59845)[0m     @     0x55f7ae2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59845)[0m     @     0x55f7ae361baf _PyEval_EvalCodeWithName
[2m[36m(pid=59845)[0m     @     0x55f7ae362643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59845)[0m     @     0x55f7ae2d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59816)[0m     @     0x7f0d3c1244f5 at::Tensor::copy_()
[2m[36m(pid=59816)[0m     @     0x7f0d421cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59816)[0m     @     0x55893e771fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59816)[0m     @     0x55893e6ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59816)[0m     @     0x55893e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=59816)[0m     @     0x55893e758a20 method_vectorcall
[2m[36m(pid=59816)[0m     @     0x55893e6ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59816)[0m     @     0x55893e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=59816)[0m     @     0x55893e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59816)[0m     @     0x55893e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59816)[0m     @     0x55893e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=59816)[0m     @     0x55893e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59816)[0m     @     0x55893e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59816)[0m     @     0x55893e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=59816)[0m     @     0x55893e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59816)[0m     @     0x55893e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59816)[0m     @     0x55893e757baf _PyEval_EvalCodeWithName
[2m[36m(pid=59816)[0m     @     0x55893e758643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59816)[0m     @     0x55893e6cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59933)[0m     @     0x7f1e443354f5 at::Tensor::copy_()
[2m[36m(pid=59933)[0m     @     0x7f1e468088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59933)[0m     @     0x7f1e443354f5 at::Tensor::copy_()
[2m[36m(pid=59933)[0m     @     0x7f1e4a3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59933)[0m     @     0x55f32c249fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59933)[0m     @     0x55f32c1a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59933)[0m     @     0x55f32c22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59933)[0m     @     0x55f32c230a20 method_vectorcall
[2m[36m(pid=59933)[0m     @     0x55f32c1a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59933)[0m     @     0x55f32c22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59933)[0m     @     0x55f32c230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59933)[0m     @     0x55f32c1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59914)[0m     @     0x7f161c8354f5 at::Tensor::copy_()
[2m[36m(pid=59914)[0m     @     0x7f16228e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59914)[0m     @     0x555b793c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59914)[0m     @     0x555b7931eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59914)[0m     @     0x555b793a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=59914)[0m     @     0x555b793aaa20 method_vectorcall
[2m[36m(pid=59914)[0m     @     0x555b7931ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59914)[0m     @     0x555b793a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=59914)[0m     @     0x555b793aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59914)[0m     @     0x555b7931f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59914)[0m     @     0x555b793a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=59914)[0m     @     0x555b793aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59914)[0m     @     0x555b7931f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59914)[0m     @     0x555b793a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=59914)[0m     @     0x555b793aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59914)[0m     @     0x555b7931f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59914)[0m     @     0x555b793a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=59914)[0m     @     0x555b793aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59914)[0m     @     0x555b7931f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59842)[0m     @     0x7edc7b9cc4f5 at::Tensor::copy_()
[2m[36m(pid=59842)[0m     @     0x7edc81a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59842)[0m     @     0x55c4c6299fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59842)[0m     @     0x55c4c61f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59842)[0m     @     0x55c4c627fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59842)[0m     @     0x55c4c6280a20 method_vectorcall
[2m[36m(pid=59842)[0m     @     0x55c4c61f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59842)[0m     @     0x55c4c627fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59842)[0m     @     0x55c4c6280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59842)[0m     @     0x55c4c61f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59842)[0m     @     0x55c4c627fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59842)[0m     @     0x55c4c6280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59842)[0m     @     0x55c4c61f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59842)[0m     @     0x55c4c627fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59842)[0m     @     0x55c4c6280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59842)[0m     @     0x55c4c61f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59842)[0m     @     0x55c4c627fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59842)[0m     @     0x55c4c6280643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59842)[0m     @     0x55c4c61f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59805)[0m     @     0x7ef380ce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59805)[0m     @     0x7ef37e8124f5 at::Tensor::copy_()
[2m[36m(pid=59805)[0m     @     0x7ef3848bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59805)[0m     @     0x556ba0afefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59805)[0m     @     0x556ba0a59b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59805)[0m     @     0x556ba0ae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59805)[0m     @     0x556ba0ae5a20 method_vectorcall
[2m[36m(pid=59805)[0m     @     0x556ba0a59bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59805)[0m     @     0x556ba0ae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59805)[0m     @     0x556ba0ae5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59805)[0m     @     0x556ba0a5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59805)[0m     @     0x556ba0ae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59805)[0m     @     0x556ba0ae5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59805)[0m     @     0x556ba0a5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59805)[0m     @     0x556ba0ae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59805)[0m     @     0x556ba0ae5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59805)[0m     @     0x556ba0a5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59805)[0m     @     0x556ba0ae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59805)[0m     @     0x556ba0ae5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59805)[0m     @     0x556ba0a5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59817)[0m     @     0x7f37099728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59817)[0m     @     0x7f370749f4f5 at::Tensor::copy_()
[2m[36m(pid=59817)[0m     @     0x7f370d54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59817)[0m     @     0x5561e79f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59817)[0m     @     0x5561e794fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59817)[0m     @     0x5561e79dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59817)[0m     @     0x5561e79dba20 method_vectorcall
[2m[36m(pid=59817)[0m     @     0x5561e794fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59817)[0m     @     0x5561e79dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59817)[0m     @     0x5561e79db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59817)[0m     @     0x5561e7950689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59817)[0m     @     0x5561e79dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59817)[0m     @     0x5561e79db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59817)[0m     @     0x5561e7950689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59817)[0m     @     0x5561e79dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59817)[0m     @     0x5561e79db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59817)[0m     @     0x5561e7950689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59817)[0m     @     0x5561e79dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59817)[0m     @     0x5561e79db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59817)[0m     @     0x5561e7950689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59903)[0m     @     0x7f9fc5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=59903)[0m     @     0x7f9fc83df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59903)[0m     @     0x7f9fc5f0c4f5 at::Tensor::copy_()
[2m[36m(pid=59903)[0m     @     0x7f9fcbfb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59903)[0m     @     0x565414ec6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59903)[0m     @     0x565414e21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59903)[0m     @     0x565414eacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59903)[0m     @     0x565414eada20 method_vectorcall
[2m[36m(pid=59903)[0m     @     0x565414e21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59903)[0m     @     0x565414eacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59903)[0m     @     0x565414ead643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59903)[0m     @     0x565414e22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59903)[0m     @     0x565414eacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59903)[0m     @     0x565414ead643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59903)[0m     @     0x565414e22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59903)[0m     @     0x565414eacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59861)[0m     @     0x5620b2252fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59861)[0m     @     0x5620b21adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59861)[0m     @     0x5620b2238baf _PyEval_EvalCodeWithName
[2m[36m(pid=59861)[0m     @     0x5620b2239a20 method_vectorcall
[2m[36m(pid=59861)[0m     @     0x5620b21adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59861)[0m     @     0x5620b2238baf _PyEval_EvalCodeWithName
[2m[36m(pid=59861)[0m     @     0x5620b2239643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59861)[0m     @     0x5620b21ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59861)[0m     @     0x5620b2238baf _PyEval_EvalCodeWithName
[2m[36m(pid=59861)[0m     @     0x5620b2239643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59861)[0m     @     0x5620b21ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59861)[0m     @     0x5620b2238baf _PyEval_EvalCodeWithName
[2m[36m(pid=59861)[0m     @     0x5620b2239643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59861)[0m     @     0x5620b21ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59861)[0m     @     0x5620b2238baf _PyEval_EvalCodeWithName
[2m[36m(pid=59861)[0m     @     0x5620b2239643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59861)[0m     @     0x5620b21ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59863)[0m     @     0x7faf367d64f5 at::Tensor::copy_()
[2m[36m(pid=59863)[0m     @     0x7faf38ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59863)[0m     @     0x7faf367d64f5 at::Tensor::copy_()
[2m[36m(pid=59863)[0m     @     0x7faf3c47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59863)[0m     @     0x564f661fdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59863)[0m     @     0x564f66158b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59863)[0m     @     0x564f661e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=59863)[0m     @     0x564f661e4a20 method_vectorcall
[2m[36m(pid=59863)[0m     @     0x564f66158bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59863)[0m     @     0x564f661e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=59863)[0m     @     0x564f661e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59863)[0m     @     0x564f66159689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59863)[0m     @     0x564f661e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=59863)[0m     @     0x564f661e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59863)[0m     @     0x564f66159689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59863)[0m     @     0x564f661e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=59863)[0m     @     0x564f661e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59834)[0m     @     0x7fb6949795a4 at::native::copy_()
[2m[36m(pid=59834)[0m     @     0x7fb6950644f5 at::Tensor::copy_()
[2m[36m(pid=59834)[0m     @     0x7fb6975378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59830)[0m     @     0x7f5d3300cad3 at::TensorIterator::for_each()
[2m[36m(pid=59925)[0m     @     0x7f8a9a13d4f5 at::Tensor::copy_()
[2m[36m(pid=59925)[0m     @     0x7f8a9c6108de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59925)[0m     @     0x7f8a9a13d4f5 at::Tensor::copy_()
[2m[36m(pid=59925)[0m     @     0x7f8aa01e879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59925)[0m     @     0x55f536bf1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59925)[0m     @     0x55f536b4cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59925)[0m     @     0x55f536bd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=59925)[0m     @     0x55f536bd8a20 method_vectorcall
[2m[36m(pid=59925)[0m     @     0x55f536b4cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59925)[0m     @     0x55f536bd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=59925)[0m     @     0x55f536bd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59925)[0m     @     0x55f536b4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59925)[0m     @     0x55f536bd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=59925)[0m     @     0x55f536bd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59884)[0m     @     0x7fc2e61d25a4 at::native::copy_()
[2m[36m(pid=59884)[0m     @     0x7fc2e68bd4f5 at::Tensor::copy_()
[2m[36m(pid=59884)[0m     @     0x7fc2e8d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59835)[0m     @     0x7fcb4aa544f5 at::Tensor::copy_()
[2m[36m(pid=59835)[0m     @     0x7fcb4cf278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59835)[0m     @     0x7fcb4aa544f5 at::Tensor::copy_()
[2m[36m(pid=59835)[0m     @     0x7fcb50aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59835)[0m     @     0x55d086b42fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59835)[0m     @     0x55d086a9db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59835)[0m     @     0x55d086b28baf _PyEval_EvalCodeWithName
[2m[36m(pid=59835)[0m     @     0x55d086b29a20 method_vectorcall
[2m[36m(pid=59835)[0m     @     0x55d086a9dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59835)[0m     @     0x55d086b28baf _PyEval_EvalCodeWithName
[2m[36m(pid=59835)[0m     @     0x55d086b29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59835)[0m     @     0x55d086a9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59835)[0m     @     0x55d086b28baf _PyEval_EvalCodeWithName
[2m[36m(pid=59835)[0m     @     0x55d086b29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59835)[0m     @     0x55d086a9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59835)[0m     @     0x55d086b28baf _PyEval_EvalCodeWithName
[2m[36m(pid=59835)[0m     @     0x55d086b29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59835)[0m     @     0x55d086a9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59835)[0m     @     0x55d086b28baf _PyEval_EvalCodeWithName
[2m[36m(pid=59835)[0m     @     0x55d086b29643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59835)[0m     @     0x55d086a9e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59869)[0m     @     0x7f2a2434d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59869)[0m     @     0x7f2a21e7a4f5 at::Tensor::copy_()
[2m[36m(pid=59869)[0m     @     0x7f2a27f2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59869)[0m     @     0x55dcca7b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59869)[0m     @     0x55dcca714b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59869)[0m     @     0x55dcca79fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59869)[0m     @     0x55dcca7a0a20 method_vectorcall
[2m[36m(pid=59869)[0m     @     0x55dcca714bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59869)[0m     @     0x55dcca79fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59869)[0m     @     0x55dcca7a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59869)[0m     @     0x55dcca715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59869)[0m     @     0x55dcca79fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59869)[0m     @     0x55dcca7a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59869)[0m     @     0x55dcca715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59869)[0m     @     0x55dcca79fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59869)[0m     @     0x55dcca7a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59869)[0m     @     0x55dcca715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59869)[0m     @     0x55dcca79fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59869)[0m     @     0x55dcca7a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59869)[0m     @     0x55dcca715689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59831)[0m     @     0x7f4c6028d4f5 at::Tensor::copy_()
[2m[36m(pid=59831)[0m     @     0x7f4c627608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59831)[0m     @     0x7f4c6028d4f5 at::Tensor::copy_()
[2m[36m(pid=59831)[0m     @     0x7f4c6633879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59831)[0m     @     0x55d686e95fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59831)[0m     @     0x55d686df0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59831)[0m     @     0x55d686e7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59831)[0m     @     0x55d686e7ca20 method_vectorcall
[2m[36m(pid=59831)[0m     @     0x55d686df0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59831)[0m     @     0x55d686e7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59831)[0m     @     0x55d686e7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59831)[0m     @     0x55d686df1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59831)[0m     @     0x55d686e7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59831)[0m     @     0x55d686e7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59831)[0m     @     0x55d686df1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59831)[0m     @     0x55d686e7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59831)[0m     @     0x55d686e7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59831)[0m     @     0x55d686df1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59831)[0m     @     0x55d686e7bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59831)[0m     @     0x55d686e7c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59831)[0m     @     0x55d686df1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x7f22dc02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59814)[0m     @     0x7f22dc050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59820)[0m     @     0x7f7b71edf4f5 at::Tensor::copy_()
[2m[36m(pid=59820)[0m     @     0x7f7b77f8a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59820)[0m     @     0x556f3fd76fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59820)[0m     @     0x556f3fcd1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59820)[0m     @     0x556f3fd5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59820)[0m     @     0x556f3fd5da20 method_vectorcall
[2m[36m(pid=59820)[0m     @     0x556f3fcd1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59820)[0m     @     0x556f3fd5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59820)[0m     @     0x556f3fd5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59820)[0m     @     0x556f3fcd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59820)[0m     @     0x556f3fd5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59820)[0m     @     0x556f3fd5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59820)[0m     @     0x556f3fcd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59820)[0m     @     0x556f3fd5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59820)[0m     @     0x556f3fd5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59820)[0m     @     0x556f3fcd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59820)[0m     @     0x556f3fd5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59820)[0m     @     0x556f3fd5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59820)[0m     @     0x556f3fcd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59843)[0m     @     0x7ed291b9dd91 at::TensorIterator::for_each()
[2m[36m(pid=59843)[0m     @     0x7ed292480b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59843)[0m     @     0x7ed2924a3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59841)[0m     @     0x7f93e20fad91 at::TensorIterator::for_each()
[2m[36m(pid=59841)[0m     @     0x7f93e29ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59841)[0m     @     0x7f93e2a00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59878)[0m     @     0x7f01dedea4f5 at::Tensor::copy_()
[2m[36m(pid=59878)[0m     @     0x7f01e4e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59878)[0m     @     0x55b088d14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59878)[0m     @     0x55b088c6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59878)[0m     @     0x55b088cfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59878)[0m     @     0x55b088cfba20 method_vectorcall
[2m[36m(pid=59878)[0m     @     0x55b088c6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59878)[0m     @     0x55b088cfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59878)[0m     @     0x55b088cfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59878)[0m     @     0x55b088c70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59878)[0m     @     0x55b088cfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59878)[0m     @     0x55b088cfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59878)[0m     @     0x55b088c70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59878)[0m     @     0x55b088cfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59878)[0m     @     0x55b088cfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59878)[0m     @     0x55b088c70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59878)[0m     @     0x55b088cfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59878)[0m     @     0x55b088cfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59878)[0m     @     0x55b088c70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x7eea2ff53d91 at::TensorIterator::for_each()
[2m[36m(pid=59840)[0m     @     0x7eea30836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59883)[0m     @     0x7f2b03e0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59883)[0m     @     0x7f2b019384f5 at::Tensor::copy_()
[2m[36m(pid=59883)[0m     @     0x7f2b079e379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59883)[0m     @     0x55ef2b3bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59883)[0m     @     0x55ef2b31ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59883)[0m     @     0x55ef2b3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59883)[0m     @     0x55ef2b3a6a20 method_vectorcall
[2m[36m(pid=59883)[0m     @     0x55ef2b31abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59883)[0m     @     0x55ef2b3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59883)[0m     @     0x55ef2b3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59883)[0m     @     0x55ef2b31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59883)[0m     @     0x55ef2b3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59883)[0m     @     0x55ef2b3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59883)[0m     @     0x55ef2b31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59883)[0m     @     0x55ef2b3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59883)[0m     @     0x55ef2b3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59883)[0m     @     0x55ef2b31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59883)[0m     @     0x55ef2b3a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=59883)[0m     @     0x55ef2b3a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59883)[0m     @     0x55ef2b31b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59813)[0m     @     0x7fa10d5014f5 at::Tensor::copy_()
[2m[36m(pid=59813)[0m     @     0x7fa14028379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59813)[0m     @     0x55559f187fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59813)[0m     @     0x55559f0e2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59813)[0m     @     0x55559f16dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59813)[0m     @     0x55559f16ea20 method_vectorcall
[2m[36m(pid=59813)[0m     @     0x55559f0e2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59813)[0m     @     0x55559f16dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59813)[0m     @     0x55559f16e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59813)[0m     @     0x55559f0e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59813)[0m     @     0x55559f16dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59813)[0m     @     0x55559f16e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59813)[0m     @     0x55559f0e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59813)[0m     @     0x55559f16dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59813)[0m     @     0x55559f16e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59813)[0m     @     0x55559f0e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59813)[0m     @     0x55559f16dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59813)[0m     @     0x55559f16e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59813)[0m     @     0x55559f0e3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59891)[0m     @     0x7f8c6048379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59891)[0m     @     0x55cf81f02fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59891)[0m     @     0x55cf81e5db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59891)[0m     @     0x55cf81ee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59891)[0m     @     0x55cf81ee9a20 method_vectorcall
[2m[36m(pid=59891)[0m     @     0x55cf81e5dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59891)[0m     @     0x55cf81ee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59891)[0m     @     0x55cf81ee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59891)[0m     @     0x55cf81e5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59891)[0m     @     0x55cf81ee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59891)[0m     @     0x55cf81ee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59891)[0m     @     0x55cf81e5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59891)[0m     @     0x55cf81ee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59891)[0m     @     0x55cf81ee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59891)[0m     @     0x55cf81e5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59891)[0m     @     0x55cf81ee8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59891)[0m     @     0x55cf81ee9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59891)[0m     @     0x55cf81e5e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59806)[0m     @     0x7f8d2a5e24f5 at::Tensor::copy_()
[2m[36m(pid=59806)[0m     @     0x7f8d3068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59806)[0m     @     0x557fbc9bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59806)[0m     @     0x557fbc915b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59806)[0m     @     0x557fbc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59806)[0m     @     0x557fbc9a1a20 method_vectorcall
[2m[36m(pid=59806)[0m     @     0x557fbc915bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59806)[0m     @     0x557fbc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59806)[0m     @     0x557fbc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59806)[0m     @     0x557fbc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59806)[0m     @     0x557fbc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59806)[0m     @     0x557fbc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59806)[0m     @     0x557fbc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59806)[0m     @     0x557fbc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59806)[0m     @     0x557fbc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59806)[0m     @     0x557fbc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59806)[0m     @     0x557fbc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=59806)[0m     @     0x557fbc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59806)[0m     @     0x557fbc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59811)[0m     @     0x7f25145014f5 at::Tensor::copy_()
[2m[36m(pid=59811)[0m     @     0x7f251a1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59811)[0m     @     0x561066aa4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59811)[0m     @     0x5610669ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59811)[0m     @     0x561066a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59811)[0m     @     0x561066a8ba20 method_vectorcall
[2m[36m(pid=59811)[0m     @     0x5610669ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59811)[0m     @     0x561066a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59811)[0m     @     0x561066a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59811)[0m     @     0x561066a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59811)[0m     @     0x561066a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59811)[0m     @     0x561066a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59811)[0m     @     0x561066a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59811)[0m     @     0x561066a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59811)[0m     @     0x561066a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59811)[0m     @     0x561066a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59811)[0m     @     0x561066a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59811)[0m     @     0x561066a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59811)[0m     @     0x561066a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59809)[0m     @     0x7ed27d6868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59809)[0m     @     0x7ed27b1b34f5 at::Tensor::copy_()
[2m[36m(pid=59809)[0m     @     0x7ed28125e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59809)[0m     @     0x55a8035c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59809)[0m     @     0x55a803520b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59809)[0m     @     0x55a8035abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59809)[0m     @     0x55a8035aca20 method_vectorcall
[2m[36m(pid=59809)[0m     @     0x55a803520bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59809)[0m     @     0x55a8035abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59809)[0m     @     0x55a8035ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59809)[0m     @     0x55a803521689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59809)[0m     @     0x55a8035abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59809)[0m     @     0x55a8035ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59809)[0m     @     0x55a803521689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59809)[0m     @     0x55a8035abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59809)[0m     @     0x55a8035ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59809)[0m     @     0x55a803521689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59809)[0m     @     0x55a8035abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59809)[0m     @     0x55a8035ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59809)[0m     @     0x55a803521689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59810)[0m     @     0x7f399334f4f5 at::Tensor::copy_()
[2m[36m(pid=59810)[0m     @     0x7f39993fa79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59810)[0m     @     0x55d907461fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59810)[0m     @     0x55d9073bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59810)[0m     @     0x55d907447baf _PyEval_EvalCodeWithName
[2m[36m(pid=59810)[0m     @     0x55d907448a20 method_vectorcall
[2m[36m(pid=59810)[0m     @     0x55d9073bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59810)[0m     @     0x55d907447baf _PyEval_EvalCodeWithName
[2m[36m(pid=59810)[0m     @     0x55d907448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59810)[0m     @     0x55d9073bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59810)[0m     @     0x55d907447baf _PyEval_EvalCodeWithName
[2m[36m(pid=59810)[0m     @     0x55d907448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59810)[0m     @     0x55d9073bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59810)[0m     @     0x55d907447baf _PyEval_EvalCodeWithName
[2m[36m(pid=59810)[0m     @     0x55d907448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59810)[0m     @     0x55d9073bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59810)[0m     @     0x55d907447baf _PyEval_EvalCodeWithName
[2m[36m(pid=59810)[0m     @     0x55d907448643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59810)[0m     @     0x55d9073bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59907)[0m     @     0x7eeec76b64f5 at::Tensor::copy_()
[2m[36m(pid=59907)[0m     @     0x7eeecd76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59907)[0m     @     0x558274530fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59907)[0m     @     0x55827448bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59907)[0m     @     0x558274516baf _PyEval_EvalCodeWithName
[2m[36m(pid=59907)[0m     @     0x558274517a20 method_vectorcall
[2m[36m(pid=59907)[0m     @     0x55827448bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59907)[0m     @     0x558274516baf _PyEval_EvalCodeWithName
[2m[36m(pid=59907)[0m     @     0x558274517643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59907)[0m     @     0x55827448c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59907)[0m     @     0x558274516baf _PyEval_EvalCodeWithName
[2m[36m(pid=59907)[0m     @     0x558274517643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59907)[0m     @     0x55827448c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59907)[0m     @     0x558274516baf _PyEval_EvalCodeWithName
[2m[36m(pid=59907)[0m     @     0x558274517643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59907)[0m     @     0x55827448c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59907)[0m     @     0x558274516baf _PyEval_EvalCodeWithName
[2m[36m(pid=59907)[0m     @     0x558274517643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59907)[0m     @     0x55827448c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59901)[0m     @     0x7f647a0284f5 at::Tensor::copy_()
[2m[36m(pid=59901)[0m     @     0x7f64800d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59901)[0m     @     0x563900295fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59901)[0m     @     0x5639001f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59901)[0m     @     0x56390027bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59901)[0m     @     0x56390027ca20 method_vectorcall
[2m[36m(pid=59901)[0m     @     0x5639001f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59901)[0m     @     0x56390027bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59901)[0m     @     0x56390027c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59901)[0m     @     0x5639001f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59901)[0m     @     0x56390027bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59901)[0m     @     0x56390027c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59901)[0m     @     0x5639001f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59901)[0m     @     0x56390027bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59901)[0m     @     0x56390027c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59901)[0m     @     0x5639001f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59901)[0m     @     0x56390027bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59901)[0m     @     0x56390027c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59901)[0m     @     0x5639001f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59824)[0m     @     0x7f63ea8bd4f5 at::Tensor::copy_()
[2m[36m(pid=59824)[0m     @     0x7f63f096879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59824)[0m     @     0x557cfc4defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59824)[0m     @     0x557cfc439b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59824)[0m     @     0x557cfc4c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59824)[0m     @     0x557cfc4c5a20 method_vectorcall
[2m[36m(pid=59824)[0m     @     0x557cfc439bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59824)[0m     @     0x557cfc4c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59824)[0m     @     0x557cfc4c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59824)[0m     @     0x557cfc43a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59824)[0m     @     0x557cfc4c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59824)[0m     @     0x557cfc4c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59824)[0m     @     0x557cfc43a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59824)[0m     @     0x557cfc4c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59824)[0m     @     0x557cfc4c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59824)[0m     @     0x557cfc43a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59824)[0m     @     0x557cfc4c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59824)[0m     @     0x557cfc4c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59824)[0m     @     0x557cfc43a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59839)[0m     @     0x55d87526e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59839)[0m     @     0x55d8752f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59839)[0m     @     0x55d8752f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59839)[0m     @     0x55d87526e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59839)[0m     @     0x55d8752f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59839)[0m     @     0x55d8752f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59839)[0m     @     0x55d87526e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59839)[0m     @     0x55d8752f8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59839)[0m     @     0x55d8752f9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59839)[0m     @     0x55d87526e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59923)[0m     @     0x55c7303fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59923)[0m     @     0x55c730488baf _PyEval_EvalCodeWithName
[2m[36m(pid=59923)[0m     @     0x55c730489a20 method_vectorcall
[2m[36m(pid=59923)[0m     @     0x55c7303fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59923)[0m     @     0x55c730488baf _PyEval_EvalCodeWithName
[2m[36m(pid=59923)[0m     @     0x55c730489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59923)[0m     @     0x55c7303fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59923)[0m     @     0x55c730488baf _PyEval_EvalCodeWithName
[2m[36m(pid=59923)[0m     @     0x55c730489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59923)[0m     @     0x55c7303fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59923)[0m     @     0x55c730488baf _PyEval_EvalCodeWithName
[2m[36m(pid=59923)[0m     @     0x55c730489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59923)[0m     @     0x55c7303fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59923)[0m     @     0x55c730488baf _PyEval_EvalCodeWithName
[2m[36m(pid=59923)[0m     @     0x55c730489643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59923)[0m     @     0x55c7303fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59818)[0m     @     0x7ef00a9714f5 at::Tensor::copy_()
[2m[36m(pid=59818)[0m     @     0x7ef010a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59818)[0m     @     0x555d8f084fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59818)[0m     @     0x555d8efdfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59818)[0m     @     0x555d8f06abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59818)[0m     @     0x555d8f06ba20 method_vectorcall
[2m[36m(pid=59818)[0m     @     0x555d8efdfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59818)[0m     @     0x555d8f06abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59818)[0m     @     0x555d8f06b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59818)[0m     @     0x555d8efe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59818)[0m     @     0x555d8f06abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59818)[0m     @     0x555d8f06b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59818)[0m     @     0x555d8efe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59818)[0m     @     0x555d8f06abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59818)[0m     @     0x555d8f06b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59818)[0m     @     0x555d8efe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59818)[0m     @     0x555d8f06abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59818)[0m     @     0x555d8f06b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59818)[0m     @     0x555d8efe0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59808)[0m     @     0x7ed11f26f4f5 at::Tensor::copy_()
[2m[36m(pid=59808)[0m     @     0x7ed12531a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59808)[0m     @     0x564e418aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59808)[0m     @     0x564e41805b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59808)[0m     @     0x564e41890baf _PyEval_EvalCodeWithName
[2m[36m(pid=59808)[0m     @     0x564e41891a20 method_vectorcall
[2m[36m(pid=59808)[0m     @     0x564e41805bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59808)[0m     @     0x564e41890baf _PyEval_EvalCodeWithName
[2m[36m(pid=59808)[0m     @     0x564e41891643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59808)[0m     @     0x564e41806689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59808)[0m     @     0x564e41890baf _PyEval_EvalCodeWithName
[2m[36m(pid=59808)[0m     @     0x564e41891643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59808)[0m     @     0x564e41806689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59808)[0m     @     0x564e41890baf _PyEval_EvalCodeWithName
[2m[36m(pid=59808)[0m     @     0x564e41891643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59808)[0m     @     0x564e41806689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59808)[0m     @     0x564e41890baf _PyEval_EvalCodeWithName
[2m[36m(pid=59808)[0m     @     0x564e41891643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59808)[0m     @     0x564e41806689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59880)[0m     @     0x7efc5c5f74f5 at::Tensor::copy_()
[2m[36m(pid=59880)[0m     @     0x7efc626a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59880)[0m     @     0x564400f8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59880)[0m     @     0x564400eeab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59880)[0m     @     0x564400f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=59880)[0m     @     0x564400f76a20 method_vectorcall
[2m[36m(pid=59880)[0m     @     0x564400eeabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59880)[0m     @     0x564400f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=59880)[0m     @     0x564400f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59880)[0m     @     0x564400eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59880)[0m     @     0x564400f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=59880)[0m     @     0x564400f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59880)[0m     @     0x564400eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59880)[0m     @     0x564400f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=59880)[0m     @     0x564400f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59880)[0m     @     0x564400eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59880)[0m     @     0x564400f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=59880)[0m     @     0x564400f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59880)[0m     @     0x564400eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59819)[0m     @     0x7f3e997d24f5 at::Tensor::copy_()
[2m[36m(pid=59819)[0m     @     0x7f3e9f87d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59819)[0m     @     0x55b37dba8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59819)[0m     @     0x55b37db03b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59819)[0m     @     0x55b37db8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59819)[0m     @     0x55b37db8fa20 method_vectorcall
[2m[36m(pid=59819)[0m     @     0x55b37db03bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59819)[0m     @     0x55b37db8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59819)[0m     @     0x55b37db8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59819)[0m     @     0x55b37db04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59819)[0m     @     0x55b37db8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59819)[0m     @     0x55b37db8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59819)[0m     @     0x55b37db04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59819)[0m     @     0x55b37db8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59819)[0m     @     0x55b37db8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59819)[0m     @     0x55b37db04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59819)[0m     @     0x55b37db8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59819)[0m     @     0x55b37db8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59819)[0m     @     0x55b37db04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59940)[0m     @     0x7f9080894d91 at::TensorIterator::for_each()
[2m[36m(pid=59940)[0m     @     0x7f9081177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59940)[0m     @     0x7f908119ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59940)[0m     @     0x7f908063ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59940)[0m     @     0x7f908063a388 at::native::copy_impl()
[2m[36m(pid=59935)[0m     @     0x7f2d812bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59935)[0m     @     0x7f2d7edea4f5 at::Tensor::copy_()
[2m[36m(pid=59935)[0m     @     0x7f2d84e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59935)[0m     @     0x56091713bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59935)[0m     @     0x560917096b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59935)[0m     @     0x560917121baf _PyEval_EvalCodeWithName
[2m[36m(pid=59935)[0m     @     0x560917122a20 method_vectorcall
[2m[36m(pid=59935)[0m     @     0x560917096bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59935)[0m     @     0x560917121baf _PyEval_EvalCodeWithName
[2m[36m(pid=59935)[0m     @     0x560917122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59935)[0m     @     0x560917097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59935)[0m     @     0x560917121baf _PyEval_EvalCodeWithName
[2m[36m(pid=59935)[0m     @     0x560917122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59935)[0m     @     0x560917097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59935)[0m     @     0x560917121baf _PyEval_EvalCodeWithName
[2m[36m(pid=59935)[0m     @     0x560917122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59935)[0m     @     0x560917097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59935)[0m     @     0x560917121baf _PyEval_EvalCodeWithName
[2m[36m(pid=59935)[0m     @     0x560917122643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59935)[0m     @     0x560917097689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59807)[0m     @     0x7f9b9d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59807)[0m     @     0x55f95e89dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59807)[0m     @     0x55f95e7f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59807)[0m     @     0x55f95e883baf _PyEval_EvalCodeWithName
[2m[36m(pid=59807)[0m     @     0x55f95e884a20 method_vectorcall
[2m[36m(pid=59807)[0m     @     0x55f95e7f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59807)[0m     @     0x55f95e883baf _PyEval_EvalCodeWithName
[2m[36m(pid=59807)[0m     @     0x55f95e884643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59807)[0m     @     0x55f95e7f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59807)[0m     @     0x55f95e883baf _PyEval_EvalCodeWithName
[2m[36m(pid=59807)[0m     @     0x55f95e884643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59807)[0m     @     0x55f95e7f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59807)[0m     @     0x55f95e883baf _PyEval_EvalCodeWithName
[2m[36m(pid=59807)[0m     @     0x55f95e884643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59807)[0m     @     0x55f95e7f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59807)[0m     @     0x55f95e883baf _PyEval_EvalCodeWithName
[2m[36m(pid=59807)[0m     @     0x55f95e884643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59807)[0m     @     0x55f95e7f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59945)[0m     @     0x7fc1457d24f5 at::Tensor::copy_()
[2m[36m(pid=59945)[0m     @     0x7fc14b87d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59945)[0m     @     0x557496602fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59945)[0m     @     0x55749655db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59945)[0m     @     0x5574965e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59945)[0m     @     0x5574965e9a20 method_vectorcall
[2m[36m(pid=59945)[0m     @     0x55749655dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59945)[0m     @     0x5574965e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59945)[0m     @     0x5574965e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59945)[0m     @     0x55749655e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59945)[0m     @     0x5574965e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59945)[0m     @     0x5574965e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59945)[0m     @     0x55749655e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59945)[0m     @     0x5574965e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59945)[0m     @     0x5574965e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59945)[0m     @     0x55749655e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59945)[0m     @     0x5574965e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=59945)[0m     @     0x5574965e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59945)[0m     @     0x55749655e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59897)[0m     @     0x7f7b7c3a2d91 at::TensorIterator::for_each()
[2m[36m(pid=59897)[0m     @     0x7f7b7cc85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59897)[0m     @     0x7f7b7cca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59877)[0m     @     0x7f327f5864f5 at::Tensor::copy_()
[2m[36m(pid=59877)[0m     @     0x7f3281a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59910)[0m     @     0x7f13d62865a4 at::native::copy_()
[2m[36m(pid=59910)[0m     @     0x7f13d69714f5 at::Tensor::copy_()
[2m[36m(pid=59910)[0m     @     0x7f13d8e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59910)[0m     @     0x7f13d69714f5 at::Tensor::copy_()
[2m[36m(pid=59910)[0m     @     0x7f13dca1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59910)[0m     @     0x55ccbd448fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59822)[0m     @     0x7f18b76b64f5 at::Tensor::copy_()
[2m[36m(pid=59822)[0m     @     0x7f18b9b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59822)[0m     @     0x7f18b76b64f5 at::Tensor::copy_()
[2m[36m(pid=59822)[0m     @     0x7f18bd76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59822)[0m     @     0x5567ef0f5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59822)[0m     @     0x5567ef050b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59822)[0m     @     0x5567ef0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59822)[0m     @     0x5567ef0dca20 method_vectorcall
[2m[36m(pid=59822)[0m     @     0x5567ef050bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59822)[0m     @     0x5567ef0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59822)[0m     @     0x5567ef0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59822)[0m     @     0x5567ef051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59822)[0m     @     0x5567ef0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59822)[0m     @     0x5567ef0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59876)[0m     @     0x7f5ff7fd179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59876)[0m     @     0x563871d3cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59876)[0m     @     0x563871c97b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m     @     0x563871d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=59876)[0m     @     0x563871d23a20 method_vectorcall
[2m[36m(pid=59876)[0m     @     0x563871c97bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m     @     0x563871d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=59876)[0m     @     0x563871d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59876)[0m     @     0x563871c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m     @     0x563871d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=59876)[0m     @     0x563871d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59876)[0m     @     0x563871c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m     @     0x563871d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=59876)[0m     @     0x563871d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59876)[0m     @     0x563871c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59876)[0m     @     0x563871d22baf _PyEval_EvalCodeWithName
[2m[36m(pid=59876)[0m     @     0x563871d23643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59876)[0m     @     0x563871c98689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59867)[0m     @     0x7fac7cab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59867)[0m     @     0x7fac7a5e24f5 at::Tensor::copy_()
[2m[36m(pid=59867)[0m     @     0x7fac8068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59867)[0m     @     0x55bf9add9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59867)[0m     @     0x55bf9ad34b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59867)[0m     @     0x55bf9adbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59867)[0m     @     0x55bf9adc0a20 method_vectorcall
[2m[36m(pid=59867)[0m     @     0x55bf9ad34bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59867)[0m     @     0x55bf9adbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59867)[0m     @     0x55bf9adc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59867)[0m     @     0x55bf9ad35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59867)[0m     @     0x55bf9adbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59867)[0m     @     0x55bf9adc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59867)[0m     @     0x55bf9ad35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59867)[0m     @     0x55bf9adbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59867)[0m     @     0x55bf9adc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59867)[0m     @     0x55bf9ad35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59867)[0m     @     0x55bf9adbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59867)[0m     @     0x55bf9adc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59867)[0m     @     0x55bf9ad35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59892)[0m     @     0x7fa7b51a34f5 at::Tensor::copy_()
[2m[36m(pid=59892)[0m     @     0x7fa7bb24e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59892)[0m     @     0x55b645714fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59892)[0m     @     0x55b64566fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59892)[0m     @     0x55b6456fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59892)[0m     @     0x55b6456fba20 method_vectorcall
[2m[36m(pid=59892)[0m     @     0x55b64566fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59892)[0m     @     0x55b6456fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59892)[0m     @     0x55b6456fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59892)[0m     @     0x55b645670689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59892)[0m     @     0x55b6456fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59892)[0m     @     0x55b6456fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59892)[0m     @     0x55b645670689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59892)[0m     @     0x55b6456fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59892)[0m     @     0x55b6456fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59892)[0m     @     0x55b645670689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59892)[0m     @     0x55b6456fabaf _PyEval_EvalCodeWithName
[2m[36m(pid=59892)[0m     @     0x55b6456fb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59892)[0m     @     0x55b645670689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59919)[0m     @     0x7f53b79cc4f5 at::Tensor::copy_()
[2m[36m(pid=59919)[0m     @     0x7f53bda7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59919)[0m     @     0x558bae141fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59919)[0m     @     0x558bae09cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59919)[0m     @     0x558bae127baf _PyEval_EvalCodeWithName
[2m[36m(pid=59919)[0m     @     0x558bae128a20 method_vectorcall
[2m[36m(pid=59919)[0m     @     0x558bae09cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59919)[0m     @     0x558bae127baf _PyEval_EvalCodeWithName
[2m[36m(pid=59919)[0m     @     0x558bae128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59919)[0m     @     0x558bae09d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59919)[0m     @     0x558bae127baf _PyEval_EvalCodeWithName
[2m[36m(pid=59919)[0m     @     0x558bae128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59919)[0m     @     0x558bae09d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59919)[0m     @     0x558bae127baf _PyEval_EvalCodeWithName
[2m[36m(pid=59919)[0m     @     0x558bae128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59919)[0m     @     0x558bae09d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59919)[0m     @     0x558bae127baf _PyEval_EvalCodeWithName
[2m[36m(pid=59919)[0m     @     0x558bae128643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59919)[0m     @     0x558bae09d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x7ee298f8d4f5 at::Tensor::copy_()
[2m[36m(pid=59916)[0m     @     0x7ee29f03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59916)[0m     @     0x559d0b535fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59916)[0m     @     0x559d0b490b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x559d0b51bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59916)[0m     @     0x559d0b51ca20 method_vectorcall
[2m[36m(pid=59916)[0m     @     0x559d0b490bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x559d0b51bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59916)[0m     @     0x559d0b51c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59916)[0m     @     0x559d0b491689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x559d0b51bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59916)[0m     @     0x559d0b51c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59916)[0m     @     0x559d0b491689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x559d0b51bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59916)[0m     @     0x559d0b51c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59916)[0m     @     0x559d0b491689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59916)[0m     @     0x559d0b51bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59916)[0m     @     0x559d0b51c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59916)[0m     @     0x559d0b491689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x7f8c3a50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59838)[0m     @     0x7f8c3a52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59865)[0m     @     0x7f329cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=59865)[0m     @     0x7f32a303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59865)[0m     @     0x55d136634fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59865)[0m     @     0x55d13658fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59865)[0m     @     0x55d13661abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59865)[0m     @     0x55d13661ba20 method_vectorcall
[2m[36m(pid=59865)[0m     @     0x55d13658fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59865)[0m     @     0x55d13661abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59865)[0m     @     0x55d13661b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59865)[0m     @     0x55d136590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59865)[0m     @     0x55d13661abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59865)[0m     @     0x55d13661b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59865)[0m     @     0x55d136590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59865)[0m     @     0x55d13661abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59865)[0m     @     0x55d13661b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59865)[0m     @     0x55d136590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59865)[0m     @     0x55d13661abaf _PyEval_EvalCodeWithName
[2m[36m(pid=59865)[0m     @     0x55d13661b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59865)[0m     @     0x55d136590689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59899)[0m     @     0x7f63ae5604f5 at::Tensor::copy_()
[2m[36m(pid=59899)[0m     @     0x7f63b460b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59899)[0m     @     0x557ea8b88fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59899)[0m     @     0x557ea8ae3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59899)[0m     @     0x557ea8b6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59899)[0m     @     0x557ea8b6fa20 method_vectorcall
[2m[36m(pid=59899)[0m     @     0x557ea8ae3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59899)[0m     @     0x557ea8b6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59899)[0m     @     0x557ea8b6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59899)[0m     @     0x557ea8ae4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59899)[0m     @     0x557ea8b6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59899)[0m     @     0x557ea8b6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59899)[0m     @     0x557ea8ae4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59899)[0m     @     0x557ea8b6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59899)[0m     @     0x557ea8b6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59899)[0m     @     0x557ea8ae4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59899)[0m     @     0x557ea8b6ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59899)[0m     @     0x557ea8b6f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59899)[0m     @     0x557ea8ae4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59938)[0m     @     0x7fb9e349f4f5 at::Tensor::copy_()
[2m[36m(pid=59938)[0m     @     0x7fb9e954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59938)[0m     @     0x560a5af07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59938)[0m     @     0x560a5ae62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59938)[0m     @     0x560a5aeedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59938)[0m     @     0x560a5aeeea20 method_vectorcall
[2m[36m(pid=59938)[0m     @     0x560a5ae62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59938)[0m     @     0x560a5aeedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59938)[0m     @     0x560a5aeee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59938)[0m     @     0x560a5ae63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59938)[0m     @     0x560a5aeedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59938)[0m     @     0x560a5aeee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59938)[0m     @     0x560a5ae63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59938)[0m     @     0x560a5aeedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59938)[0m     @     0x560a5aeee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59938)[0m     @     0x560a5ae63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59938)[0m     @     0x560a5aeedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59938)[0m     @     0x560a5aeee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59938)[0m     @     0x560a5ae63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59821)[0m     @     0x7fa3979a54f5 at::Tensor::copy_()
[2m[36m(pid=59821)[0m     @     0x7fa39da5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59821)[0m     @     0x560c7fe27fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59821)[0m     @     0x560c7fd82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59821)[0m     @     0x560c7fe0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59821)[0m     @     0x560c7fe0ea20 method_vectorcall
[2m[36m(pid=59821)[0m     @     0x560c7fd82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59821)[0m     @     0x560c7fe0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59821)[0m     @     0x560c7fe0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59821)[0m     @     0x560c7fd83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59821)[0m     @     0x560c7fe0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59821)[0m     @     0x560c7fe0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59821)[0m     @     0x560c7fd83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59821)[0m     @     0x560c7fe0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59821)[0m     @     0x560c7fe0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59821)[0m     @     0x560c7fd83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59821)[0m     @     0x560c7fe0dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59821)[0m     @     0x560c7fe0e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59821)[0m     @     0x560c7fd83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x55e83f6ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59881)[0m     @     0x55e83f662689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59881)[0m     @     0x55e83f6ecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59881)[0m     @     0x55e83f6ed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59881)[0m     @     0x55e83f662689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59826)[0m     @     0x55ea2c41a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59826)[0m     @     0x55ea2c4a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59826)[0m     @     0x55ea2c4a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59826)[0m     @     0x55ea2c41a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59826)[0m     @     0x55ea2c4a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59826)[0m     @     0x55ea2c4a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59826)[0m     @     0x55ea2c41a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59826)[0m     @     0x55ea2c4a4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59826)[0m     @     0x55ea2c4a5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59826)[0m     @     0x55ea2c41a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59933)[0m     @     0x55f32c22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59933)[0m     @     0x55f32c230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59933)[0m     @     0x55f32c1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59933)[0m     @     0x55f32c22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59933)[0m     @     0x55f32c230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59933)[0m     @     0x55f32c1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59933)[0m     @     0x55f32c22fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59933)[0m     @     0x55f32c230643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59933)[0m     @     0x55f32c1a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59903)[0m     @     0x565414ead643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59903)[0m     @     0x565414e22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59903)[0m     @     0x565414eacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59903)[0m     @     0x565414ead643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59903)[0m     @     0x565414e22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59863)[0m     @     0x564f66159689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59863)[0m     @     0x564f661e3baf _PyEval_EvalCodeWithName
[2m[36m(pid=59863)[0m     @     0x564f661e4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59863)[0m     @     0x564f66159689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59834)[0m     @     0x7fb6950644f5 at::Tensor::copy_()
[2m[36m(pid=59834)[0m     @     0x7fb69b10f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59834)[0m     @     0x555c41563fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59834)[0m     @     0x555c414beb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59834)[0m     @     0x555c41549baf _PyEval_EvalCodeWithName
[2m[36m(pid=59834)[0m     @     0x555c4154aa20 method_vectorcall
[2m[36m(pid=59834)[0m     @     0x555c414bebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59834)[0m     @     0x555c41549baf _PyEval_EvalCodeWithName
[2m[36m(pid=59834)[0m     @     0x555c4154a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59834)[0m     @     0x555c414bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59834)[0m     @     0x555c41549baf _PyEval_EvalCodeWithName
[2m[36m(pid=59834)[0m     @     0x555c4154a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59834)[0m     @     0x555c414bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59834)[0m     @     0x555c41549baf _PyEval_EvalCodeWithName
[2m[36m(pid=59834)[0m     @     0x555c4154a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59834)[0m     @     0x555c414bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59834)[0m     @     0x555c41549baf _PyEval_EvalCodeWithName
[2m[36m(pid=59834)[0m     @     0x555c4154a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59834)[0m     @     0x555c414bf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59830)[0m     @     0x7f5d3300cd91 at::TensorIterator::for_each()
[2m[36m(pid=59830)[0m     @     0x7f5d338efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=59830)[0m     @     0x7f5d33912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59925)[0m     @     0x55f536b4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59925)[0m     @     0x55f536bd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=59925)[0m     @     0x55f536bd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59925)[0m     @     0x55f536b4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59925)[0m     @     0x55f536bd7baf _PyEval_EvalCodeWithName
[2m[36m(pid=59925)[0m     @     0x55f536bd8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59925)[0m     @     0x55f536b4d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59884)[0m     @     0x7fc2e68bd4f5 at::Tensor::copy_()
[2m[36m(pid=59884)[0m     @     0x7fc2ec96879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59884)[0m     @     0x561fbacdcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59884)[0m     @     0x561fbac37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59884)[0m     @     0x561fbacc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=59884)[0m     @     0x561fbacc3a20 method_vectorcall
[2m[36m(pid=59884)[0m     @     0x561fbac37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59884)[0m     @     0x561fbacc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=59884)[0m     @     0x561fbacc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59884)[0m     @     0x561fbac38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59884)[0m     @     0x561fbacc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=59884)[0m     @     0x561fbacc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59884)[0m     @     0x561fbac38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59884)[0m     @     0x561fbacc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=59884)[0m     @     0x561fbacc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59884)[0m     @     0x561fbac38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59884)[0m     @     0x561fbacc2baf _PyEval_EvalCodeWithName
[2m[36m(pid=59884)[0m     @     0x561fbacc3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59884)[0m     @     0x561fbac38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x7f22db4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59814)[0m     @     0x7f22db4f0388 at::native::copy_impl()
[2m[36m(pid=59843)[0m     @     0x7ed291945a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59843)[0m     @     0x7ed291943388 at::native::copy_impl()
[2m[36m(pid=59841)[0m     @     0x7f93e1ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59841)[0m     @     0x7f93e1ea0388 at::native::copy_impl()
[2m[36m(pid=59841)[0m     @     0x7f93e1ea25a4 at::native::copy_()
[2m[36m(pid=59841)[0m     @     0x7f93e258d4f5 at::Tensor::copy_()
[2m[36m(pid=59841)[0m     @     0x7f93e4a608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59840)[0m     @     0x7eea30859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=59840)[0m     @     0x7eea2fcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59840)[0m     @     0x7eea2fcf9388 at::native::copy_impl()
[2m[36m(pid=59940)[0m     @     0x7f908063c5a4 at::native::copy_()
[2m[36m(pid=59940)[0m     @     0x7f9080d274f5 at::Tensor::copy_()
[2m[36m(pid=59940)[0m     @     0x7f90831fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59897)[0m     @     0x7f7b7c14aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59897)[0m     @     0x7f7b7c148388 at::native::copy_impl()
[2m[36m(pid=59877)[0m     @     0x7f327f5864f5 at::Tensor::copy_()
[2m[36m(pid=59877)[0m     @     0x7f328563179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59877)[0m     @     0x5619bfab1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59877)[0m     @     0x5619bfa0cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59877)[0m     @     0x5619bfa97baf _PyEval_EvalCodeWithName
[2m[36m(pid=59877)[0m     @     0x5619bfa98a20 method_vectorcall
[2m[36m(pid=59877)[0m     @     0x5619bfa0cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59877)[0m     @     0x5619bfa97baf _PyEval_EvalCodeWithName
[2m[36m(pid=59877)[0m     @     0x5619bfa98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59877)[0m     @     0x5619bfa0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59877)[0m     @     0x5619bfa97baf _PyEval_EvalCodeWithName
[2m[36m(pid=59877)[0m     @     0x5619bfa98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59877)[0m     @     0x5619bfa0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59877)[0m     @     0x5619bfa97baf _PyEval_EvalCodeWithName
[2m[36m(pid=59877)[0m     @     0x5619bfa98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59877)[0m     @     0x5619bfa0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59877)[0m     @     0x5619bfa97baf _PyEval_EvalCodeWithName
[2m[36m(pid=59877)[0m     @     0x5619bfa98643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59877)[0m     @     0x5619bfa0d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59910)[0m     @     0x55ccbd3a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59910)[0m     @     0x55ccbd42ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59910)[0m     @     0x55ccbd42fa20 method_vectorcall
[2m[36m(pid=59910)[0m     @     0x55ccbd3a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59910)[0m     @     0x55ccbd42ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59910)[0m     @     0x55ccbd42f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59910)[0m     @     0x55ccbd3a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59910)[0m     @     0x55ccbd42ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59910)[0m     @     0x55ccbd42f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59910)[0m     @     0x55ccbd3a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59910)[0m     @     0x55ccbd42ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59910)[0m     @     0x55ccbd42f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59910)[0m     @     0x55ccbd3a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59910)[0m     @     0x55ccbd42ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59910)[0m     @     0x55ccbd42f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59910)[0m     @     0x55ccbd3a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59822)[0m     @     0x5567ef051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59822)[0m     @     0x5567ef0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59822)[0m     @     0x5567ef0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59822)[0m     @     0x5567ef051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59822)[0m     @     0x5567ef0dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59822)[0m     @     0x5567ef0dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59822)[0m     @     0x5567ef051689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x7f8c399cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59838)[0m     @     0x7f8c399cd388 at::native::copy_impl()
[2m[36m(pid=59830)[0m     @     0x7f5d32db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=59830)[0m     @     0x7f5d32db2388 at::native::copy_impl()
[2m[36m(pid=59830)[0m     @     0x7f5d32db45a4 at::native::copy_()
[2m[36m(pid=59830)[0m     @     0x7f5d3349f4f5 at::Tensor::copy_()
[2m[36m(pid=59814)[0m     @     0x7f22db4f25a4 at::native::copy_()
[2m[36m(pid=59843)[0m     @     0x7ed2919455a4 at::native::copy_()
[2m[36m(pid=59841)[0m     @     0x7f93e258d4f5 at::Tensor::copy_()
[2m[36m(pid=59841)[0m     @     0x7f93e863879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59841)[0m     @     0x55b1f6665fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59841)[0m     @     0x55b1f65c0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59841)[0m     @     0x55b1f664bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59841)[0m     @     0x55b1f664ca20 method_vectorcall
[2m[36m(pid=59841)[0m     @     0x55b1f65c0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59841)[0m     @     0x55b1f664bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59841)[0m     @     0x55b1f664c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59841)[0m     @     0x55b1f65c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59841)[0m     @     0x55b1f664bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59841)[0m     @     0x55b1f664c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59841)[0m     @     0x55b1f65c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59841)[0m     @     0x55b1f664bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59841)[0m     @     0x55b1f664c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59841)[0m     @     0x55b1f65c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59841)[0m     @     0x55b1f664bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=59841)[0m     @     0x55b1f664c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59841)[0m     @     0x55b1f65c1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x7eea2fcfb5a4 at::native::copy_()
[2m[36m(pid=59940)[0m     @     0x7f9080d274f5 at::Tensor::copy_()
[2m[36m(pid=59940)[0m     @     0x7f9086dd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59940)[0m     @     0x5620c310efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59940)[0m     @     0x5620c3069b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59940)[0m     @     0x5620c30f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59940)[0m     @     0x5620c30f5a20 method_vectorcall
[2m[36m(pid=59940)[0m     @     0x5620c3069bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59940)[0m     @     0x5620c30f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59940)[0m     @     0x5620c30f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59940)[0m     @     0x5620c306a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59940)[0m     @     0x5620c30f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59940)[0m     @     0x5620c30f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59940)[0m     @     0x5620c306a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59940)[0m     @     0x5620c30f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59940)[0m     @     0x5620c30f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59940)[0m     @     0x5620c306a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59940)[0m     @     0x5620c30f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=59940)[0m     @     0x5620c30f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59940)[0m     @     0x5620c306a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59897)[0m     @     0x7f7b7c14a5a4 at::native::copy_()
[2m[36m(pid=59897)[0m     @     0x7f7b7c8354f5 at::Tensor::copy_()
[2m[36m(pid=59897)[0m     @     0x7f7b7ed088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59838)[0m     @     0x7f8c399cf5a4 at::native::copy_()
[2m[36m(pid=59830)[0m     @     0x7f5d359728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59830)[0m     @     0x7f5d3349f4f5 at::Tensor::copy_()
[2m[36m(pid=59830)[0m     @     0x7f5d3954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59830)[0m     @     0x5622b2afbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59830)[0m     @     0x5622b2a56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59830)[0m     @     0x5622b2ae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59830)[0m     @     0x5622b2ae2a20 method_vectorcall
[2m[36m(pid=59830)[0m     @     0x5622b2a56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59830)[0m     @     0x5622b2ae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59830)[0m     @     0x5622b2ae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59830)[0m     @     0x5622b2a57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59830)[0m     @     0x5622b2ae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59830)[0m     @     0x5622b2ae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59830)[0m     @     0x5622b2a57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59830)[0m     @     0x5622b2ae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59830)[0m     @     0x5622b2ae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59830)[0m     @     0x5622b2a57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x7f22dbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=59814)[0m     @     0x7f22de0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59843)[0m     @     0x7ed2920304f5 at::Tensor::copy_()
[2m[36m(pid=59843)[0m     @     0x7ed2945038de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59840)[0m     @     0x7eea303e64f5 at::Tensor::copy_()
[2m[36m(pid=59840)[0m     @     0x7eea328b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59897)[0m     @     0x7f7b7c8354f5 at::Tensor::copy_()
[2m[36m(pid=59897)[0m     @     0x7f7b828e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59897)[0m     @     0x556c34a5afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59897)[0m     @     0x556c349b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59897)[0m     @     0x556c34a40baf _PyEval_EvalCodeWithName
[2m[36m(pid=59897)[0m     @     0x556c34a41a20 method_vectorcall
[2m[36m(pid=59897)[0m     @     0x556c349b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59897)[0m     @     0x556c34a40baf _PyEval_EvalCodeWithName
[2m[36m(pid=59897)[0m     @     0x556c34a41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59897)[0m     @     0x556c349b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59897)[0m     @     0x556c34a40baf _PyEval_EvalCodeWithName
[2m[36m(pid=59897)[0m     @     0x556c34a41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59897)[0m     @     0x556c349b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59897)[0m     @     0x556c34a40baf _PyEval_EvalCodeWithName
[2m[36m(pid=59897)[0m     @     0x556c34a41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59897)[0m     @     0x556c349b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59897)[0m     @     0x556c34a40baf _PyEval_EvalCodeWithName
[2m[36m(pid=59897)[0m     @     0x556c34a41643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59897)[0m     @     0x556c349b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x7f8c3a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=59838)[0m     @     0x7f8c3c58d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=59830)[0m     @     0x5622b2ae1baf _PyEval_EvalCodeWithName
[2m[36m(pid=59830)[0m     @     0x5622b2ae2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59830)[0m     @     0x5622b2a57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x7f22dbbdd4f5 at::Tensor::copy_()
[2m[36m(pid=59814)[0m     @     0x7f22e1c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59814)[0m     @     0x55a462198fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59814)[0m     @     0x55a4620f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x55a46217ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59814)[0m     @     0x55a46217fa20 method_vectorcall
[2m[36m(pid=59814)[0m     @     0x55a4620f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x55a46217ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59814)[0m     @     0x55a46217f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59814)[0m     @     0x55a4620f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x55a46217ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59814)[0m     @     0x55a46217f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59814)[0m     @     0x55a4620f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x55a46217ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59814)[0m     @     0x55a46217f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59814)[0m     @     0x55a4620f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59814)[0m     @     0x55a46217ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=59814)[0m     @     0x55a46217f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59814)[0m     @     0x55a4620f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59843)[0m     @     0x7ed2920304f5 at::Tensor::copy_()
[2m[36m(pid=59843)[0m     @     0x7ed2980db79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59843)[0m     @     0x55df50f1dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59843)[0m     @     0x55df50e78b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59843)[0m     @     0x55df50f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=59843)[0m     @     0x55df50f04a20 method_vectorcall
[2m[36m(pid=59843)[0m     @     0x55df50e78bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59843)[0m     @     0x55df50f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=59843)[0m     @     0x55df50f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59843)[0m     @     0x55df50e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59843)[0m     @     0x55df50f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=59843)[0m     @     0x55df50f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59843)[0m     @     0x55df50e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59843)[0m     @     0x55df50f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=59843)[0m     @     0x55df50f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59843)[0m     @     0x55df50e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59843)[0m     @     0x55df50f03baf _PyEval_EvalCodeWithName
[2m[36m(pid=59843)[0m     @     0x55df50f04643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59843)[0m     @     0x55df50e79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x7eea303e64f5 at::Tensor::copy_()
[2m[36m(pid=59840)[0m     @     0x7eea3649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59840)[0m     @     0x55f461d2dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59840)[0m     @     0x55f461c88b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x55f461d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=59840)[0m     @     0x55f461d14a20 method_vectorcall
[2m[36m(pid=59840)[0m     @     0x55f461c88bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x55f461d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=59840)[0m     @     0x55f461d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59840)[0m     @     0x55f461c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x55f461d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=59840)[0m     @     0x55f461d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59840)[0m     @     0x55f461c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x55f461d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=59840)[0m     @     0x55f461d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59840)[0m     @     0x55f461c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59840)[0m     @     0x55f461d13baf _PyEval_EvalCodeWithName
[2m[36m(pid=59840)[0m     @     0x55f461d14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59840)[0m     @     0x55f461c89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x7f8c3a0ba4f5 at::Tensor::copy_()
[2m[36m(pid=59838)[0m     @     0x7f8c4016579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=59838)[0m     @     0x55f187c2efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=59838)[0m     @     0x55f187b89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x55f187c14baf _PyEval_EvalCodeWithName
[2m[36m(pid=59838)[0m     @     0x55f187c15a20 method_vectorcall
[2m[36m(pid=59838)[0m     @     0x55f187b89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x55f187c14baf _PyEval_EvalCodeWithName
[2m[36m(pid=59838)[0m     @     0x55f187c15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59838)[0m     @     0x55f187b8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x55f187c14baf _PyEval_EvalCodeWithName
[2m[36m(pid=59838)[0m     @     0x55f187c15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59838)[0m     @     0x55f187b8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x55f187c14baf _PyEval_EvalCodeWithName
[2m[36m(pid=59838)[0m     @     0x55f187c15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59838)[0m     @     0x55f187b8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=59838)[0m     @     0x55f187c14baf _PyEval_EvalCodeWithName
[2m[36m(pid=59838)[0m     @     0x55f187c15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=59838)[0m     @     0x55f187b8a689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:49:43,019	ERROR trial_runner.py:567 -- Trial PPO_jss_env_9827f_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=59906, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:49:43,020	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:49:43,034	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:49:43,046	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
== Status ==
Memory usage on this node: 24.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_9827f_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_9827f_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_9827f_00000_0_2020-11-05_10-49-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:49:43,047	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:49:43,047	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:49:43,047	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.

== Status ==
Memory usage on this node: 23.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_9827f_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_9827f_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_9827f_00000_0_2020-11-05_10-49-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_9827f_00000])
