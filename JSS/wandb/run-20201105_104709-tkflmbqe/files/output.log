2020-11-05 10:47:13,068	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_43fde_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=55213)[0m 2020-11-05 10:47:15,789	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=55213)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=55213)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=55213)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=55213)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=55213)[0m 
[2m[36m(pid=55213)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=55154)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55154)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55154)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55154)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55154)[0m *** SIGSEGV (@0x0) received by PID 55154 (TID 0x7f486fdca700) from PID 0; stack trace: ***
[2m[36m(pid=55154)[0m     @     0x7f486f9a3390 (unknown)
[2m[36m(pid=55154)[0m     @     0x7f196f94df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55154)[0m     @     0x7f196f0787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55165)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55165)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55165)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55165)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55165)[0m *** SIGSEGV (@0x0) received by PID 55165 (TID 0x7f911ff08700) from PID 0; stack trace: ***
[2m[36m(pid=55165)[0m     @     0x7f911fae1390 (unknown)
[2m[36m(pid=55165)[0m     @     0x7f621ec15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55165)[0m     @     0x7f621e3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55205)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55205)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55205)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55205)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55205)[0m *** SIGSEGV (@0x0) received by PID 55205 (TID 0x7fc5eae8c700) from PID 0; stack trace: ***
[2m[36m(pid=55205)[0m     @     0x7fc5eaa65390 (unknown)
[2m[36m(pid=55205)[0m     @     0x7f96ea70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55205)[0m     @     0x7f96e9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55205)[0m     @     0x7f96e9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55171)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55171)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55171)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55171)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55171)[0m *** SIGSEGV (@0x0) received by PID 55171 (TID 0x7f9424ad5700) from PID 0; stack trace: ***
[2m[36m(pid=55171)[0m     @     0x7f94246ae390 (unknown)
[2m[36m(pid=55171)[0m     @     0x7f652460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55171)[0m     @     0x7f6523d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55171)[0m     @     0x7f6523d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55178)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55178)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55178)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55178)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55178)[0m *** SIGSEGV (@0x0) received by PID 55178 (TID 0x7ffb828ea700) from PID 0; stack trace: ***
[2m[36m(pid=55178)[0m     @     0x7ffb824c3390 (unknown)
[2m[36m(pid=55178)[0m     @     0x7fcc8234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55178)[0m     @     0x7fcc81a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55186)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55186)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55186)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55186)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55186)[0m *** SIGSEGV (@0x0) received by PID 55186 (TID 0x7f3b99065700) from PID 0; stack trace: ***
[2m[36m(pid=55186)[0m     @     0x7f3b98c3e390 (unknown)
[2m[36m(pid=55186)[0m     @     0x7f0c98b3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55186)[0m     @     0x7f0c982667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55186)[0m     @     0x7f0c982698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55191)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55191)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55191)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55191)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55191)[0m *** SIGSEGV (@0x0) received by PID 55191 (TID 0x7f97283a9700) from PID 0; stack trace: ***
[2m[36m(pid=55191)[0m     @     0x7f9727f82390 (unknown)
[2m[36m(pid=55191)[0m     @     0x7f6827e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55191)[0m     @     0x7f68275367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55191)[0m     @     0x7f68275398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55191)[0m     @     0x7f6827539ad3 at::TensorIterator::for_each()
[2m[36m(pid=55168)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55168)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55168)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55168)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55168)[0m *** SIGSEGV (@0x0) received by PID 55168 (TID 0x7f0b6d29c700) from PID 0; stack trace: ***
[2m[36m(pid=55168)[0m     @     0x7f0b6ce75390 (unknown)
[2m[36m(pid=55168)[0m     @     0x7edc6cc1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55168)[0m     @     0x7edc6c34a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55168)[0m     @     0x7edc6c34d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55168)[0m     @     0x7edc6c34dad3 at::TensorIterator::for_each()
[2m[36m(pid=55168)[0m     @     0x7edc6c34dd91 at::TensorIterator::for_each()
[2m[36m(pid=55208)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55208)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55208)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55179)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55179)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55179)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55179)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55179)[0m *** SIGSEGV (@0x0) received by PID 55179 (TID 0x7f0269bca700) from PID 0; stack trace: ***
[2m[36m(pid=55179)[0m     @     0x7f02697a3390 (unknown)
[2m[36m(pid=55179)[0m     @     0x7ed3696f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55179)[0m     @     0x7ed368e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55179)[0m     @     0x7ed368e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55179)[0m     @     0x7ed368e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=55179)[0m     @     0x7ed368e22d91 at::TensorIterator::for_each()
[2m[36m(pid=55179)[0m     @     0x7ed369705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55155)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55155)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55155)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55155)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55155)[0m *** SIGSEGV (@0x0) received by PID 55155 (TID 0x7fc340959700) from PID 0; stack trace: ***
[2m[36m(pid=55155)[0m     @     0x7fc340532390 (unknown)
[2m[36m(pid=55155)[0m     @     0x7f9440333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55155)[0m     @     0x7f943fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55155)[0m     @     0x7f943fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55155)[0m     @     0x7f943fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=55216)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55216)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55216)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55216)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55216)[0m *** SIGSEGV (@0x0) received by PID 55216 (TID 0x7fd47ad13700) from PID 0; stack trace: ***
[2m[36m(pid=55216)[0m     @     0x7fd47a8ec390 (unknown)
[2m[36m(pid=55216)[0m     @     0x7fa57a70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55216)[0m     @     0x7fa579e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55216)[0m     @     0x7fa579e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55216)[0m     @     0x7fa579e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=55216)[0m     @     0x7fa579e38d91 at::TensorIterator::for_each()
[2m[36m(pid=55216)[0m     @     0x7fa57a71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55216)[0m     @     0x7fa57a73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55167)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55167)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55167)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55167)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55167)[0m *** SIGSEGV (@0x0) received by PID 55167 (TID 0x7f62902fc700) from PID 0; stack trace: ***
[2m[36m(pid=55167)[0m     @     0x7f628fed5390 (unknown)
[2m[36m(pid=55167)[0m     @     0x7f338fe76f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55167)[0m     @     0x7f338f5a17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55167)[0m     @     0x7f338f5a48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55167)[0m     @     0x7f338f5a4ad3 at::TensorIterator::for_each()
[2m[36m(pid=55167)[0m     @     0x7f338f5a4d91 at::TensorIterator::for_each()
[2m[36m(pid=55169)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55169)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55169)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55169)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55169)[0m *** SIGSEGV (@0x0) received by PID 55169 (TID 0x7f64a2b96700) from PID 0; stack trace: ***
[2m[36m(pid=55169)[0m     @     0x7f64a276f390 (unknown)
[2m[36m(pid=55169)[0m     @     0x7f35a25a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55169)[0m     @     0x7f35a1ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55169)[0m     @     0x7f35a1cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55204)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55204)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55204)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55204)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55204)[0m *** SIGSEGV (@0x0) received by PID 55204 (TID 0x7fd717a0d700) from PID 0; stack trace: ***
[2m[36m(pid=55204)[0m     @     0x7fd7175e6390 (unknown)
[2m[36m(pid=55204)[0m     @     0x7fa81758df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55204)[0m     @     0x7fa816cb87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55204)[0m     @     0x7fa816cbb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55204)[0m     @     0x7fa816cbbad3 at::TensorIterator::for_each()
[2m[36m(pid=55204)[0m     @     0x7fa816cbbd91 at::TensorIterator::for_each()
[2m[36m(pid=55204)[0m     @     0x7fa81759eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55204)[0m     @     0x7fa8175c1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55180)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55180)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55180)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55188)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55188)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55188)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55188)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55188)[0m *** SIGSEGV (@0x0) received by PID 55188 (TID 0x7fa97323a700) from PID 0; stack trace: ***
[2m[36m(pid=55188)[0m     @     0x7fa972e13390 (unknown)
[2m[36m(pid=55188)[0m     @     0x7f7a72db0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55188)[0m     @     0x7f7a724db7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55188)[0m     @     0x7f7a724de8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55188)[0m     @     0x7f7a724dead3 at::TensorIterator::for_each()
[2m[36m(pid=55188)[0m     @     0x7f7a724ded91 at::TensorIterator::for_each()
[2m[36m(pid=55198)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55198)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55198)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55198)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55198)[0m *** SIGSEGV (@0x0) received by PID 55198 (TID 0x7fbf427db700) from PID 0; stack trace: ***
[2m[36m(pid=55198)[0m     @     0x7fbf423b4390 (unknown)
[2m[36m(pid=55198)[0m     @     0x7f904234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55198)[0m     @     0x7f9041a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55198)[0m     @     0x7f9041a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55198)[0m     @     0x7f9041a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=55198)[0m     @     0x7f9041a79d91 at::TensorIterator::for_each()
[2m[36m(pid=55154)[0m     @     0x7f196f07b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55143)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55143)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55143)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55145)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55145)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55145)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55164)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55164)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55164)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55165)[0m     @     0x7f621e3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55205)[0m     @     0x7f96e9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=55205)[0m     @     0x7f96e9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=55205)[0m     @     0x7f96ea71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55171)[0m     @     0x7f6523d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=55178)[0m     @     0x7fcc81a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55090)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55090)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55090)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55186)[0m     @     0x7f0c98269ad3 at::TensorIterator::for_each()
[2m[36m(pid=55186)[0m     @     0x7f0c98269d91 at::TensorIterator::for_each()
[2m[36m(pid=55085)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55085)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55085)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55102)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55102)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55149)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55149)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55149)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55080)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55080)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55080)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55144)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55144)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55144)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55144)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55144)[0m *** SIGSEGV (@0x0) received by PID 55144 (TID 0x7f875179b700) from PID 0; stack trace: ***
[2m[36m(pid=55079)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55079)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55079)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55152)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55152)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55152)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55099)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55099)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55099)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55086)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55086)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55086)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55091)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55091)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55091)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55091)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55091)[0m *** SIGSEGV (@0x0) received by PID 55091 (TID 0x7fcfa03a2700) from PID 0; stack trace: ***
[2m[36m(pid=55097)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55097)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55097)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55106)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55106)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55106)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55196)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55196)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55196)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55153)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55153)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55153)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55089)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55089)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55089)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55103)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55103)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55103)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55075)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55075)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55075)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55176)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55176)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55176)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55199)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55199)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55199)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55110)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55110)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55110)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55158)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55158)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55158)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55095)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55095)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55095)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55095)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55095)[0m *** SIGSEGV (@0x0) received by PID 55095 (TID 0x7fd2d7d17700) from PID 0; stack trace: ***
[2m[36m(pid=55095)[0m     @     0x7fd2d78f0390 (unknown)
[2m[36m(pid=55083)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55083)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55083)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55142)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55142)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55142)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55135)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55135)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55135)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55135)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55135)[0m *** SIGSEGV (@0x0) received by PID 55135 (TID 0x7f60b8ff0700) from PID 0; stack trace: ***
[2m[36m(pid=55092)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55092)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55092)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55160)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55160)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55160)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55146)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55146)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55146)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55076)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55076)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55076)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55076)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55076)[0m *** SIGSEGV (@0x0) received by PID 55076 (TID 0x7fe91751c700) from PID 0; stack trace: ***
[2m[36m(pid=55162)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55162)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55162)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55082)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55082)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55082)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55082)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55082)[0m *** SIGSEGV (@0x0) received by PID 55082 (TID 0x7f21127eb700) from PID 0; stack trace: ***
[2m[36m(pid=55082)[0m     @     0x7f21123c4390 (unknown)
[2m[36m(pid=55082)[0m     @     0x7ef21234bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55113)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55113)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55113)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55114)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55114)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55114)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55157)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55157)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55157)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55157)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55157)[0m *** SIGSEGV (@0x0) received by PID 55157 (TID 0x7fbc86011700) from PID 0; stack trace: ***
[2m[36m(pid=55157)[0m     @     0x7fbc85bea390 (unknown)
[2m[36m(pid=55157)[0m     @     0x7f8d85b7af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55191)[0m     @     0x7f6827539d91 at::TensorIterator::for_each()
[2m[36m(pid=55191)[0m     @     0x7f6827e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55191)[0m     @     0x7f6827e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55191)[0m     @     0x7f68272e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55191)[0m     @     0x7f68272df388 at::native::copy_impl()
[2m[36m(pid=55168)[0m     @     0x7edc6cc30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55168)[0m     @     0x7edc6cc53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55168)[0m     @     0x7edc6c0f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55168)[0m     @     0x7edc6c0f3388 at::native::copy_impl()
[2m[36m(pid=55168)[0m     @     0x7edc6c0f55a4 at::native::copy_()
[2m[36m(pid=55168)[0m     @     0x7edc6c7e04f5 at::Tensor::copy_()
[2m[36m(pid=55168)[0m     @     0x7edc6ecb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55208)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55208)[0m *** SIGSEGV (@0x0) received by PID 55208 (TID 0x7f8699ba3700) from PID 0; stack trace: ***
[2m[36m(pid=55208)[0m     @     0x7f869977c390 (unknown)
[2m[36m(pid=55208)[0m     @     0x7f57996f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55208)[0m     @     0x7f5798e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55208)[0m     @     0x7f5798e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55179)[0m     @     0x7ed369728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55179)[0m     @     0x7ed368bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55179)[0m     @     0x7ed368bc8388 at::native::copy_impl()
[2m[36m(pid=55179)[0m     @     0x7ed368bca5a4 at::native::copy_()
[2m[36m(pid=55179)[0m     @     0x7ed3692b54f5 at::Tensor::copy_()
[2m[36m(pid=55155)[0m     @     0x7f943fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=55155)[0m     @     0x7f9440344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55155)[0m     @     0x7f9440367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55155)[0m     @     0x7f943f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55155)[0m     @     0x7f943f807388 at::native::copy_impl()
[2m[36m(pid=55155)[0m     @     0x7f943f8095a4 at::native::copy_()
[2m[36m(pid=55216)[0m     @     0x7fa579be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55216)[0m     @     0x7fa579bde388 at::native::copy_impl()
[2m[36m(pid=55216)[0m     @     0x7fa579be05a4 at::native::copy_()
[2m[36m(pid=55216)[0m     @     0x7fa57a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=55216)[0m     @     0x7fa57c79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55167)[0m     @     0x7f338fe87b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55167)[0m     @     0x7f338feaac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55167)[0m     @     0x7f338f34ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55167)[0m     @     0x7f338f34a388 at::native::copy_impl()
[2m[36m(pid=55167)[0m     @     0x7f338f34c5a4 at::native::copy_()
[2m[36m(pid=55167)[0m     @     0x7f338fa374f5 at::Tensor::copy_()
[2m[36m(pid=55167)[0m     @     0x7f3391f0a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55169)[0m     @     0x7f35a1cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=55169)[0m     @     0x7f35a1cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=55169)[0m     @     0x7f35a25b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55169)[0m     @     0x7f35a25d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55169)[0m     @     0x7f35a1a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55169)[0m     @     0x7f35a1a78388 at::native::copy_impl()
[2m[36m(pid=55204)[0m     @     0x7fa816a63a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55204)[0m     @     0x7fa816a61388 at::native::copy_impl()
[2m[36m(pid=55204)[0m     @     0x7fa816a635a4 at::native::copy_()
[2m[36m(pid=55204)[0m     @     0x7fa81714e4f5 at::Tensor::copy_()
[2m[36m(pid=55204)[0m     @     0x7fa8196218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55180)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55180)[0m *** SIGSEGV (@0x0) received by PID 55180 (TID 0x7f1510154700) from PID 0; stack trace: ***
[2m[36m(pid=55180)[0m     @     0x7f150fd2d390 (unknown)
[2m[36m(pid=55180)[0m     @     0x7ee60faf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55180)[0m     @     0x7ee60f2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55180)[0m     @     0x7ee60f2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55188)[0m     @     0x7f7a72dc1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55188)[0m     @     0x7f7a72de4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55188)[0m     @     0x7f7a72286a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55188)[0m     @     0x7f7a72284388 at::native::copy_impl()
[2m[36m(pid=55188)[0m     @     0x7f7a722865a4 at::native::copy_()
[2m[36m(pid=55188)[0m     @     0x7f7a729714f5 at::Tensor::copy_()
[2m[36m(pid=55188)[0m     @     0x7f7a74e448de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55198)[0m     @     0x7f904235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55198)[0m     @     0x7f904237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55198)[0m     @     0x7f9041821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55198)[0m     @     0x7f904181f388 at::native::copy_impl()
[2m[36m(pid=55198)[0m     @     0x7f90418215a4 at::native::copy_()
[2m[36m(pid=55154)[0m     @     0x7f196f07bad3 at::TensorIterator::for_each()
[2m[36m(pid=55154)[0m     @     0x7f196f07bd91 at::TensorIterator::for_each()
[2m[36m(pid=55154)[0m     @     0x7f196f95eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55154)[0m     @     0x7f196f981c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55154)[0m     @     0x7f196ee23a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55154)[0m     @     0x7f196ee21388 at::native::copy_impl()
[2m[36m(pid=55093)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55093)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55093)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55093)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55093)[0m *** SIGSEGV (@0x0) received by PID 55093 (TID 0x7f101d415700) from PID 0; stack trace: ***
[2m[36m(pid=55093)[0m     @     0x7f101cfee390 (unknown)
[2m[36m(pid=55093)[0m     @     0x7ee11cf4ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55143)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55143)[0m *** SIGSEGV (@0x0) received by PID 55143 (TID 0x7f1cd7f9a700) from PID 0; stack trace: ***
[2m[36m(pid=55143)[0m     @     0x7f1cd7b73390 (unknown)
[2m[36m(pid=55143)[0m     @     0x7eedd7af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55143)[0m     @     0x7eedd72207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55145)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55145)[0m *** SIGSEGV (@0x0) received by PID 55145 (TID 0x7fd956773700) from PID 0; stack trace: ***
[2m[36m(pid=55145)[0m     @     0x7fd95634c390 (unknown)
[2m[36m(pid=55145)[0m     @     0x7faa562def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55145)[0m     @     0x7faa55a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55145)[0m     @     0x7faa55a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55145)[0m     @     0x7faa55a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=55164)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55164)[0m *** SIGSEGV (@0x0) received by PID 55164 (TID 0x7f69f2e29700) from PID 0; stack trace: ***
[2m[36m(pid=55164)[0m     @     0x7f69f2a02390 (unknown)
[2m[36m(pid=55164)[0m     @     0x7f3af270af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55164)[0m     @     0x7f3af1e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55164)[0m     @     0x7f3af1e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55164)[0m     @     0x7f3af1e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=55165)[0m     @     0x7f621e343ad3 at::TensorIterator::for_each()
[2m[36m(pid=55165)[0m     @     0x7f621e343d91 at::TensorIterator::for_each()
[2m[36m(pid=55165)[0m     @     0x7f621ec26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55165)[0m     @     0x7f621ec49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55165)[0m     @     0x7f621e0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55165)[0m     @     0x7f621e0e9388 at::native::copy_impl()
[2m[36m(pid=55205)[0m     @     0x7f96ea73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55205)[0m     @     0x7f96e9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55205)[0m     @     0x7f96e9bde388 at::native::copy_impl()
[2m[36m(pid=55205)[0m     @     0x7f96e9be05a4 at::native::copy_()
[2m[36m(pid=55205)[0m     @     0x7f96ea2cb4f5 at::Tensor::copy_()
[2m[36m(pid=55171)[0m     @     0x7f6523d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=55171)[0m     @     0x7f652461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55171)[0m     @     0x7f6524642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55171)[0m     @     0x7f6523ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55171)[0m     @     0x7f6523ae2388 at::native::copy_impl()
[2m[36m(pid=55171)[0m     @     0x7f6523ae45a4 at::native::copy_()
[2m[36m(pid=55178)[0m     @     0x7fcc81a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=55178)[0m     @     0x7fcc81a79d91 at::TensorIterator::for_each()
[2m[36m(pid=55178)[0m     @     0x7fcc8235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55178)[0m     @     0x7fcc8237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55178)[0m     @     0x7fcc81821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55178)[0m     @     0x7fcc8181f388 at::native::copy_impl()
[2m[36m(pid=55090)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55090)[0m *** SIGSEGV (@0x0) received by PID 55090 (TID 0x7f205c8f6700) from PID 0; stack trace: ***
[2m[36m(pid=55090)[0m     @     0x7f205c4cf390 (unknown)
[2m[36m(pid=55090)[0m     @     0x7ef15c136f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55090)[0m     @     0x7ef15b8617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55090)[0m     @     0x7ef15b8648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55186)[0m     @     0x7f0c98b4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55186)[0m     @     0x7f0c98b6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55186)[0m     @     0x7f0c98011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55186)[0m     @     0x7f0c9800f388 at::native::copy_impl()
[2m[36m(pid=55186)[0m     @     0x7f0c980115a4 at::native::copy_()
[2m[36m(pid=55186)[0m     @     0x7f0c986fc4f5 at::Tensor::copy_()
[2m[36m(pid=55186)[0m     @     0x7f0c9abcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55085)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55085)[0m *** SIGSEGV (@0x0) received by PID 55085 (TID 0x7f103996e700) from PID 0; stack trace: ***
[2m[36m(pid=55085)[0m     @     0x7f1039547390 (unknown)
[2m[36m(pid=55085)[0m     @     0x7ee1394e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55085)[0m     @     0x7ee138c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55085)[0m     @     0x7ee138c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55078)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55078)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55078)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55078)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55078)[0m *** SIGSEGV (@0x0) received by PID 55078 (TID 0x7ff8fc368700) from PID 0; stack trace: ***
[2m[36m(pid=55078)[0m     @     0x7ff8fbf41390 (unknown)
[2m[36m(pid=55078)[0m     @     0x7fc9fbd2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55078)[0m     @     0x7fc9fb4577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55102)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55102)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55102)[0m *** SIGSEGV (@0x0) received by PID 55102 (TID 0x7f8b2ef7d700) from PID 0; stack trace: ***
[2m[36m(pid=55102)[0m     @     0x7f8b2eb56390 (unknown)
[2m[36m(pid=55102)[0m     @     0x7f5c2ea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55102)[0m     @     0x7f5c2e14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55149)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55149)[0m *** SIGSEGV (@0x0) received by PID 55149 (TID 0x7f44aec95700) from PID 0; stack trace: ***
[2m[36m(pid=55149)[0m     @     0x7f44ae86e390 (unknown)
[2m[36m(pid=55149)[0m     @     0x7f15ae7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55149)[0m     @     0x7f15adee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55149)[0m     @     0x7f15adee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55177)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55177)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55177)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55177)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55177)[0m *** SIGSEGV (@0x0) received by PID 55177 (TID 0x7fc3bf6c8700) from PID 0; stack trace: ***
[2m[36m(pid=55177)[0m     @     0x7fc3bf2a1390 (unknown)
[2m[36m(pid=55177)[0m     @     0x7f94bf229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55177)[0m     @     0x7f94be9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55177)[0m     @     0x7f94be9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55096)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55096)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55096)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55096)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55096)[0m *** SIGSEGV (@0x0) received by PID 55096 (TID 0x7f4bdf442700) from PID 0; stack trace: ***
[2m[36m(pid=55096)[0m     @     0x7f4bdf01b390 (unknown)
[2m[36m(pid=55096)[0m     @     0x7f1cdef13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55096)[0m     @     0x7f1cde63e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55173)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55173)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55173)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55174)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55174)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55174)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55174)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55174)[0m *** SIGSEGV (@0x0) received by PID 55174 (TID 0x7fc696d8f700) from PID 0; stack trace: ***
[2m[36m(pid=55174)[0m     @     0x7fc696968390 (unknown)
[2m[36m(pid=55174)[0m     @     0x7f979670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55174)[0m     @     0x7f9795e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55156)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55156)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55156)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55105)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55105)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55105)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55105)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55105)[0m *** SIGSEGV (@0x0) received by PID 55105 (TID 0x7faab0fd0700) from PID 0; stack trace: ***
[2m[36m(pid=55105)[0m     @     0x7faab0ba9390 (unknown)
[2m[36m(pid=55105)[0m     @     0x7f7bb0a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55182)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55182)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55182)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55182)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55182)[0m *** SIGSEGV (@0x0) received by PID 55182 (TID 0x7fd0712d5700) from PID 0; stack trace: ***
[2m[36m(pid=55084)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55084)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55084)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55084)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55084)[0m *** SIGSEGV (@0x0) received by PID 55084 (TID 0x7f9d2a76a700) from PID 0; stack trace: ***
[2m[36m(pid=55080)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55080)[0m *** SIGSEGV (@0x0) received by PID 55080 (TID 0x7f89c7354700) from PID 0; stack trace: ***
[2m[36m(pid=55080)[0m     @     0x7f89c6f2d390 (unknown)
[2m[36m(pid=55080)[0m     @     0x7f5ac6ed3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55080)[0m     @     0x7f5ac65fe7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55080)[0m     @     0x7f5ac66018f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55144)[0m     @     0x7f8751374390 (unknown)
[2m[36m(pid=55144)[0m     @     0x7f58512fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55144)[0m     @     0x7f5850a277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55144)[0m     @     0x7f5850a2a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55144)[0m     @     0x7f5850a2aad3 at::TensorIterator::for_each()
[2m[36m(pid=55111)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55111)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55111)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55111)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55111)[0m *** SIGSEGV (@0x0) received by PID 55111 (TID 0x7fafeec20700) from PID 0; stack trace: ***
[2m[36m(pid=55111)[0m     @     0x7fafee7f9390 (unknown)
[2m[36m(pid=55111)[0m     @     0x7f80ee77bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55111)[0m     @     0x7f80edea67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55111)[0m     @     0x7f80edea98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55079)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55079)[0m *** SIGSEGV (@0x0) received by PID 55079 (TID 0x7fea246b8700) from PID 0; stack trace: ***
[2m[36m(pid=55079)[0m     @     0x7fea24291390 (unknown)
[2m[36m(pid=55079)[0m     @     0x7fbb24246f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55079)[0m     @     0x7fbb239717db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55079)[0m     @     0x7fbb239748f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55077)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55077)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55077)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55077)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55077)[0m *** SIGSEGV (@0x0) received by PID 55077 (TID 0x7f607229b700) from PID 0; stack trace: ***
[2m[36m(pid=55077)[0m     @     0x7f6071e74390 (unknown)
[2m[36m(pid=55077)[0m     @     0x7f316d391f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55077)[0m     @     0x7f316cabc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55077)[0m     @     0x7f316cabf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55152)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55152)[0m *** SIGSEGV (@0x0) received by PID 55152 (TID 0x7f83756ce700) from PID 0; stack trace: ***
[2m[36m(pid=55152)[0m     @     0x7f83752a7390 (unknown)
[2m[36m(pid=55152)[0m     @     0x7f5475225f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55152)[0m     @     0x7f54749507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55152)[0m     @     0x7f54749538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55206)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55206)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55206)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55206)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55206)[0m *** SIGSEGV (@0x0) received by PID 55206 (TID 0x7fe33fe8f700) from PID 0; stack trace: ***
[2m[36m(pid=55088)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55088)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55088)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55088)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55088)[0m *** SIGSEGV (@0x0) received by PID 55088 (TID 0x7f543c649700) from PID 0; stack trace: ***
[2m[36m(pid=55099)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55099)[0m *** SIGSEGV (@0x0) received by PID 55099 (TID 0x7fb7f87d1700) from PID 0; stack trace: ***
[2m[36m(pid=55099)[0m     @     0x7fb7f83aa390 (unknown)
[2m[36m(pid=55099)[0m     @     0x7f88f80c0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55099)[0m     @     0x7f88f77eb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55086)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55086)[0m *** SIGSEGV (@0x0) received by PID 55086 (TID 0x7f71ca129700) from PID 0; stack trace: ***
[2m[36m(pid=55086)[0m     @     0x7f71c9d02390 (unknown)
[2m[36m(pid=55086)[0m     @     0x7f42c9c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55086)[0m     @     0x7f42c93387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55091)[0m     @     0x7fcf9ff7b390 (unknown)
[2m[36m(pid=55091)[0m     @     0x7fa09feb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55091)[0m     @     0x7fa09f5e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55091)[0m     @     0x7fa09f5e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55097)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55097)[0m *** SIGSEGV (@0x0) received by PID 55097 (TID 0x7f0e6f511700) from PID 0; stack trace: ***
[2m[36m(pid=55097)[0m     @     0x7f0e6f0ea390 (unknown)
[2m[36m(pid=55097)[0m     @     0x7edf6f092f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55097)[0m     @     0x7edf6e7bd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55097)[0m     @     0x7edf6e7c08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55106)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55106)[0m *** SIGSEGV (@0x0) received by PID 55106 (TID 0x7fa639eb8700) from PID 0; stack trace: ***
[2m[36m(pid=55106)[0m     @     0x7fa639a91390 (unknown)
[2m[36m(pid=55196)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55196)[0m *** SIGSEGV (@0x0) received by PID 55196 (TID 0x7febea31a700) from PID 0; stack trace: ***
[2m[36m(pid=55196)[0m     @     0x7febe9ef3390 (unknown)
[2m[36m(pid=55196)[0m     @     0x7fbce9e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55196)[0m     @     0x7fbce954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55153)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55153)[0m *** SIGSEGV (@0x0) received by PID 55153 (TID 0x7f9100b9f700) from PID 0; stack trace: ***
[2m[36m(pid=55153)[0m     @     0x7f9100778390 (unknown)
[2m[36m(pid=55153)[0m     @     0x7f6200563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55153)[0m     @     0x7f61ffc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55089)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55089)[0m *** SIGSEGV (@0x0) received by PID 55089 (TID 0x7ff36eac7700) from PID 0; stack trace: ***
[2m[36m(pid=55089)[0m     @     0x7ff36e6a0390 (unknown)
[2m[36m(pid=55089)[0m     @     0x7fc46e62bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55089)[0m     @     0x7fc46dd567db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55139)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55139)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55139)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55139)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55139)[0m *** SIGSEGV (@0x0) received by PID 55139 (TID 0x7f82b0640700) from PID 0; stack trace: ***
[2m[36m(pid=55139)[0m     @     0x7f82b0219390 (unknown)
[2m[36m(pid=55103)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55103)[0m *** SIGSEGV (@0x0) received by PID 55103 (TID 0x7f4f4d522700) from PID 0; stack trace: ***
[2m[36m(pid=55103)[0m     @     0x7f4f4d0fb390 (unknown)
[2m[36m(pid=55103)[0m     @     0x7f204d088f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55103)[0m     @     0x7f204c7b37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55094)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55094)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55094)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55094)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55094)[0m *** SIGSEGV (@0x0) received by PID 55094 (TID 0x7f04c43e4700) from PID 0; stack trace: ***
[2m[36m(pid=55094)[0m     @     0x7f04c3fbd390 (unknown)
[2m[36m(pid=55075)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55075)[0m *** SIGSEGV (@0x0) received by PID 55075 (TID 0x7f17258f4700) from PID 0; stack trace: ***
[2m[36m(pid=55075)[0m     @     0x7f17254cd390 (unknown)
[2m[36m(pid=55075)[0m     @     0x7ee825476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55075)[0m     @     0x7ee824ba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55161)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55161)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55161)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55161)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55161)[0m *** SIGSEGV (@0x0) received by PID 55161 (TID 0x7fc6b2043700) from PID 0; stack trace: ***
[2m[36m(pid=55161)[0m     @     0x7fc6b1c1c390 (unknown)
[2m[36m(pid=55192)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55192)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55192)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55192)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55192)[0m *** SIGSEGV (@0x0) received by PID 55192 (TID 0x7f768b62e700) from PID 0; stack trace: ***
[2m[36m(pid=55192)[0m     @     0x7f768b207390 (unknown)
[2m[36m(pid=55187)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55187)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55187)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55187)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55187)[0m *** SIGSEGV (@0x0) received by PID 55187 (TID 0x7fc4e8e36700) from PID 0; stack trace: ***
[2m[36m(pid=55201)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55201)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55201)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55176)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55176)[0m *** SIGSEGV (@0x0) received by PID 55176 (TID 0x7f443a588700) from PID 0; stack trace: ***
[2m[36m(pid=55176)[0m     @     0x7f443a161390 (unknown)
[2m[36m(pid=55176)[0m     @     0x7f153a10df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55176)[0m     @     0x7f15398387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55176)[0m     @     0x7f153983b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55199)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55199)[0m *** SIGSEGV (@0x0) received by PID 55199 (TID 0x7fb5d1857700) from PID 0; stack trace: ***
[2m[36m(pid=55199)[0m     @     0x7fb5d1430390 (unknown)
[2m[36m(pid=55199)[0m     @     0x7f86d1377f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55199)[0m     @     0x7f86d0aa27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55199)[0m     @     0x7f86d0aa58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55199)[0m     @     0x7f86d0aa5ad3 at::TensorIterator::for_each()
[2m[36m(pid=55110)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55110)[0m *** SIGSEGV (@0x0) received by PID 55110 (TID 0x7f535351c700) from PID 0; stack trace: ***
[2m[36m(pid=55110)[0m     @     0x7f53530f5390 (unknown)
[2m[36m(pid=55110)[0m     @     0x7f2453092f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55110)[0m     @     0x7f24527bd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55110)[0m     @     0x7f24527c08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55158)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55158)[0m *** SIGSEGV (@0x0) received by PID 55158 (TID 0x7fd43f354700) from PID 0; stack trace: ***
[2m[36m(pid=55158)[0m     @     0x7fd43ef2d390 (unknown)
[2m[36m(pid=55158)[0m     @     0x7fa53eea6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55158)[0m     @     0x7fa53e5d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55158)[0m     @     0x7fa53e5d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55095)[0m     @     0x7fa3d789ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55095)[0m     @     0x7fa3d6fc97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55095)[0m     @     0x7fa3d6fcc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55095)[0m     @     0x7fa3d6fccad3 at::TensorIterator::for_each()
[2m[36m(pid=55095)[0m     @     0x7fa3d6fccd91 at::TensorIterator::for_each()
[2m[36m(pid=55083)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55083)[0m *** SIGSEGV (@0x0) received by PID 55083 (TID 0x7f4f5e689700) from PID 0; stack trace: ***
[2m[36m(pid=55083)[0m     @     0x7f4f5e262390 (unknown)
[2m[36m(pid=55083)[0m     @     0x7f205e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55083)[0m     @     0x7f205d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55083)[0m     @     0x7f205d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55142)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55142)[0m *** SIGSEGV (@0x0) received by PID 55142 (TID 0x7f5b90845700) from PID 0; stack trace: ***
[2m[36m(pid=55142)[0m     @     0x7f5b9041e390 (unknown)
[2m[36m(pid=55142)[0m     @     0x7f2c90333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55142)[0m     @     0x7f2c8fa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55142)[0m     @     0x7f2c8fa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55142)[0m     @     0x7f2c8fa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=55135)[0m     @     0x7f60b8bc9390 (unknown)
[2m[36m(pid=55135)[0m     @     0x7f31b8b64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55135)[0m     @     0x7f31b828f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55135)[0m     @     0x7f31b82928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55135)[0m     @     0x7f31b8292ad3 at::TensorIterator::for_each()
[2m[36m(pid=55092)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55092)[0m *** SIGSEGV (@0x0) received by PID 55092 (TID 0x7f48aa810700) from PID 0; stack trace: ***
[2m[36m(pid=55092)[0m     @     0x7f48aa3e9390 (unknown)
[2m[36m(pid=55092)[0m     @     0x7f19aa34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55092)[0m     @     0x7f19a9a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55092)[0m     @     0x7f19a9a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55160)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55160)[0m *** SIGSEGV (@0x0) received by PID 55160 (TID 0x7fc208d99700) from PID 0; stack trace: ***
[2m[36m(pid=55160)[0m     @     0x7fc208972390 (unknown)
[2m[36m(pid=55160)[0m     @     0x7f9308825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55160)[0m     @     0x7f9307f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55160)[0m     @     0x7f9307f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55146)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55146)[0m *** SIGSEGV (@0x0) received by PID 55146 (TID 0x7f0badf4c700) from PID 0; stack trace: ***
[2m[36m(pid=55146)[0m     @     0x7f0badb25390 (unknown)
[2m[36m(pid=55146)[0m     @     0x7edcada0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55146)[0m     @     0x7edcad1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55146)[0m     @     0x7edcad1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55076)[0m     @     0x7fe9170f5390 (unknown)
[2m[36m(pid=55076)[0m     @     0x7fba15940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55076)[0m     @     0x7fba1506b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55076)[0m     @     0x7fba1506e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55076)[0m     @     0x7fba1506ead3 at::TensorIterator::for_each()
[2m[36m(pid=55162)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55162)[0m *** SIGSEGV (@0x0) received by PID 55162 (TID 0x7f39159de700) from PID 0; stack trace: ***
[2m[36m(pid=55162)[0m     @     0x7f39155b7390 (unknown)
[2m[36m(pid=55162)[0m     @     0x7f0a154e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55162)[0m     @     0x7f0a14c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55162)[0m     @     0x7f0a14c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55082)[0m     @     0x7ef211a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55082)[0m     @     0x7ef211a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55082)[0m     @     0x7ef211a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=55082)[0m     @     0x7ef211a79d91 at::TensorIterator::for_each()
[2m[36m(pid=55113)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55113)[0m *** SIGSEGV (@0x0) received by PID 55113 (TID 0x7f7450531700) from PID 0; stack trace: ***
[2m[36m(pid=55113)[0m     @     0x7f745010a390 (unknown)
[2m[36m(pid=55113)[0m     @     0x7f455001cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55113)[0m     @     0x7f454f7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55113)[0m     @     0x7f454f74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55193)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55193)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55193)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55193)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55193)[0m *** SIGSEGV (@0x0) received by PID 55193 (TID 0x7f2699de7700) from PID 0; stack trace: ***
[2m[36m(pid=55193)[0m     @     0x7f26999c0390 (unknown)
[2m[36m(pid=55193)[0m     @     0x7ef7997f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55193)[0m     @     0x7ef798f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55159)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55159)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55159)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55159)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55159)[0m *** SIGSEGV (@0x0) received by PID 55159 (TID 0x7f7232265700) from PID 0; stack trace: ***
[2m[36m(pid=55159)[0m     @     0x7f7231e3e390 (unknown)
[2m[36m(pid=55159)[0m     @     0x7f4331de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55159)[0m     @     0x7f433150f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55163)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=55163)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=55163)[0m *** Aborted at 1604573241 (unix time) try "date -d @1604573241" if you are using GNU date ***
[2m[36m(pid=55163)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55163)[0m *** SIGSEGV (@0x0) received by PID 55163 (TID 0x7f4f10aa7700) from PID 0; stack trace: ***
[2m[36m(pid=55163)[0m     @     0x7f4f10680390 (unknown)
[2m[36m(pid=55163)[0m     @     0x7f2010563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55114)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55114)[0m *** SIGSEGV (@0x0) received by PID 55114 (TID 0x7f4bd7dea700) from PID 0; stack trace: ***
[2m[36m(pid=55114)[0m     @     0x7f4bd79c3390 (unknown)
[2m[36m(pid=55157)[0m     @     0x7f8d852a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55157)[0m     @     0x7f8d852a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55157)[0m     @     0x7f8d852a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=55191)[0m     @     0x7f68272e15a4 at::native::copy_()
[2m[36m(pid=55191)[0m     @     0x7f68279cc4f5 at::Tensor::copy_()
[2m[36m(pid=55191)[0m     @     0x7f6829e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55168)[0m     @     0x7edc6c7e04f5 at::Tensor::copy_()
[2m[36m(pid=55168)[0m     @     0x7edc7288b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55168)[0m     @     0x556727ce7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55168)[0m     @     0x556727c42b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55168)[0m     @     0x556727ccdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55168)[0m     @     0x556727ccea20 method_vectorcall
[2m[36m(pid=55168)[0m     @     0x556727c42bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55168)[0m     @     0x556727ccdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55168)[0m     @     0x556727cce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55168)[0m     @     0x556727c43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55168)[0m     @     0x556727ccdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55168)[0m     @     0x556727cce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55168)[0m     @     0x556727c43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55168)[0m     @     0x556727ccdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55168)[0m     @     0x556727cce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55168)[0m     @     0x556727c43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55168)[0m     @     0x556727ccdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55168)[0m     @     0x556727cce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55168)[0m     @     0x556727c43689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55208)[0m     @     0x7f5798e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=55208)[0m     @     0x7f5798e22d91 at::TensorIterator::for_each()
[2m[36m(pid=55208)[0m     @     0x7f5799705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55179)[0m     @     0x7ed36b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55179)[0m     @     0x7ed3692b54f5 at::Tensor::copy_()
[2m[36m(pid=55179)[0m     @     0x7ed36f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55179)[0m     @     0x5618b244afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55179)[0m     @     0x5618b23a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55179)[0m     @     0x5618b2430baf _PyEval_EvalCodeWithName
[2m[36m(pid=55179)[0m     @     0x5618b2431a20 method_vectorcall
[2m[36m(pid=55179)[0m     @     0x5618b23a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55179)[0m     @     0x5618b2430baf _PyEval_EvalCodeWithName
[2m[36m(pid=55179)[0m     @     0x5618b2431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55179)[0m     @     0x5618b23a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55179)[0m     @     0x5618b2430baf _PyEval_EvalCodeWithName
[2m[36m(pid=55179)[0m     @     0x5618b2431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55179)[0m     @     0x5618b23a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55179)[0m     @     0x5618b2430baf _PyEval_EvalCodeWithName
[2m[36m(pid=55179)[0m     @     0x5618b2431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55179)[0m     @     0x5618b23a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55179)[0m     @     0x5618b2430baf _PyEval_EvalCodeWithName
[2m[36m(pid=55179)[0m     @     0x5618b2431643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55155)[0m     @     0x7f943fef44f5 at::Tensor::copy_()
[2m[36m(pid=55155)[0m     @     0x7f94423c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55216)[0m     @     0x7fa57a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=55216)[0m     @     0x7fa58037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55216)[0m     @     0x556ef87effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55216)[0m     @     0x556ef874ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55216)[0m     @     0x556ef87d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55216)[0m     @     0x556ef87d6a20 method_vectorcall
[2m[36m(pid=55216)[0m     @     0x556ef874abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55216)[0m     @     0x556ef87d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55216)[0m     @     0x556ef87d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55216)[0m     @     0x556ef874b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55216)[0m     @     0x556ef87d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55216)[0m     @     0x556ef87d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55216)[0m     @     0x556ef874b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55216)[0m     @     0x556ef87d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55216)[0m     @     0x556ef87d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55216)[0m     @     0x556ef874b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55216)[0m     @     0x556ef87d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55216)[0m     @     0x556ef87d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55216)[0m     @     0x556ef874b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55167)[0m     @     0x7f338fa374f5 at::Tensor::copy_()
[2m[36m(pid=55167)[0m     @     0x7f3395ae279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55167)[0m     @     0x5595827e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55167)[0m     @     0x559582743b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55167)[0m     @     0x5595827cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55167)[0m     @     0x5595827cfa20 method_vectorcall
[2m[36m(pid=55167)[0m     @     0x559582743bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55167)[0m     @     0x5595827cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55167)[0m     @     0x5595827cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55167)[0m     @     0x559582744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55167)[0m     @     0x5595827cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55167)[0m     @     0x5595827cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55167)[0m     @     0x559582744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55167)[0m     @     0x5595827cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55167)[0m     @     0x5595827cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55167)[0m     @     0x559582744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55167)[0m     @     0x5595827cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55167)[0m     @     0x5595827cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55167)[0m     @     0x559582744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55169)[0m     @     0x7f35a1a7a5a4 at::native::copy_()
[2m[36m(pid=55169)[0m     @     0x7f35a21654f5 at::Tensor::copy_()
[2m[36m(pid=55169)[0m     @     0x7f35a46388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55204)[0m     @     0x7fa81714e4f5 at::Tensor::copy_()
[2m[36m(pid=55204)[0m     @     0x7fa81d1f979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55204)[0m     @     0x559ab3209fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55204)[0m     @     0x559ab3164b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55204)[0m     @     0x559ab31efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55204)[0m     @     0x559ab31f0a20 method_vectorcall
[2m[36m(pid=55204)[0m     @     0x559ab3164bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55204)[0m     @     0x559ab31efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55204)[0m     @     0x559ab31f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55204)[0m     @     0x559ab3165689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55204)[0m     @     0x559ab31efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55204)[0m     @     0x559ab31f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55204)[0m     @     0x559ab3165689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55204)[0m     @     0x559ab31efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55204)[0m     @     0x559ab31f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55204)[0m     @     0x559ab3165689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55204)[0m     @     0x559ab31efbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55204)[0m     @     0x559ab31f0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55204)[0m     @     0x559ab3165689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x7ee60f223ad3 at::TensorIterator::for_each()
[2m[36m(pid=55180)[0m     @     0x7ee60f223d91 at::TensorIterator::for_each()
[2m[36m(pid=55180)[0m     @     0x7ee60fb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55180)[0m     @     0x7ee60fb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55188)[0m     @     0x7f7a729714f5 at::Tensor::copy_()
[2m[36m(pid=55188)[0m     @     0x7f7a78a1c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55188)[0m     @     0x55637c803fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55188)[0m     @     0x55637c75eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55188)[0m     @     0x55637c7e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=55188)[0m     @     0x55637c7eaa20 method_vectorcall
[2m[36m(pid=55188)[0m     @     0x55637c75ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55188)[0m     @     0x55637c7e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=55188)[0m     @     0x55637c7ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55188)[0m     @     0x55637c75f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55188)[0m     @     0x55637c7e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=55188)[0m     @     0x55637c7ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55188)[0m     @     0x55637c75f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55188)[0m     @     0x55637c7e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=55188)[0m     @     0x55637c7ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55188)[0m     @     0x55637c75f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55188)[0m     @     0x55637c7e9baf _PyEval_EvalCodeWithName
[2m[36m(pid=55188)[0m     @     0x55637c7ea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55188)[0m     @     0x55637c75f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55198)[0m     @     0x7f9041f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55198)[0m     @     0x7f90443df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55198)[0m     @     0x7f9041f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55198)[0m     @     0x7f9047fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55198)[0m     @     0x55a160f8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55198)[0m     @     0x55a160ee7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55198)[0m     @     0x55a160f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=55198)[0m     @     0x55a160f73a20 method_vectorcall
[2m[36m(pid=55198)[0m     @     0x55a160ee7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55154)[0m     @     0x7f196ee235a4 at::native::copy_()
[2m[36m(pid=55154)[0m     @     0x7f196f50e4f5 at::Tensor::copy_()
[2m[36m(pid=55093)[0m     @     0x7ee11c67a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55093)[0m     @     0x7ee11c67d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55093)[0m     @     0x7ee11c67dad3 at::TensorIterator::for_each()
[2m[36m(pid=55143)[0m     @     0x7eedd72238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55143)[0m     @     0x7eedd7223ad3 at::TensorIterator::for_each()
[2m[36m(pid=55145)[0m     @     0x7faa55a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=55145)[0m     @     0x7faa562efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55145)[0m     @     0x7faa56312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55164)[0m     @     0x7f3af1e38d91 at::TensorIterator::for_each()
[2m[36m(pid=55164)[0m     @     0x7f3af271bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55164)[0m     @     0x7f3af273ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55165)[0m     @     0x7f621e0eb5a4 at::native::copy_()
[2m[36m(pid=55165)[0m     @     0x7f621e7d64f5 at::Tensor::copy_()
[2m[36m(pid=55165)[0m     @     0x7f6220ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55205)[0m     @     0x7f96ec79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55205)[0m     @     0x7f96ea2cb4f5 at::Tensor::copy_()
[2m[36m(pid=55205)[0m     @     0x7f96f037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55205)[0m     @     0x55bc70b6cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55205)[0m     @     0x55bc70ac7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55205)[0m     @     0x55bc70b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55205)[0m     @     0x55bc70b53a20 method_vectorcall
[2m[36m(pid=55205)[0m     @     0x55bc70ac7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55205)[0m     @     0x55bc70b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55205)[0m     @     0x55bc70b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55205)[0m     @     0x55bc70ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55205)[0m     @     0x55bc70b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55205)[0m     @     0x55bc70b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55205)[0m     @     0x55bc70ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55205)[0m     @     0x55bc70b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55205)[0m     @     0x55bc70b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55205)[0m     @     0x55bc70ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55205)[0m     @     0x55bc70b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55205)[0m     @     0x55bc70b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55205)[0m     @     0x55bc70ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55171)[0m     @     0x7f65241cf4f5 at::Tensor::copy_()
[2m[36m(pid=55171)[0m     @     0x7f65266a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55171)[0m     @     0x7f65241cf4f5 at::Tensor::copy_()
[2m[36m(pid=55171)[0m     @     0x7f652a27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55171)[0m     @     0x55ed3238ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55171)[0m     @     0x55ed322eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55171)[0m     @     0x55ed32375baf _PyEval_EvalCodeWithName
[2m[36m(pid=55171)[0m     @     0x55ed32376a20 method_vectorcall
[2m[36m(pid=55171)[0m     @     0x55ed322eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55171)[0m     @     0x55ed32375baf _PyEval_EvalCodeWithName
[2m[36m(pid=55171)[0m     @     0x55ed32376643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55171)[0m     @     0x55ed322eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55178)[0m     @     0x7fcc818215a4 at::native::copy_()
[2m[36m(pid=55178)[0m     @     0x7fcc81f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55090)[0m     @     0x7ef15b864ad3 at::TensorIterator::for_each()
[2m[36m(pid=55090)[0m     @     0x7ef15b864d91 at::TensorIterator::for_each()
[2m[36m(pid=55090)[0m     @     0x7ef15c147b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55090)[0m     @     0x7ef15c16ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55186)[0m     @     0x7f0c986fc4f5 at::Tensor::copy_()
[2m[36m(pid=55186)[0m     @     0x7f0c9e7a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55186)[0m     @     0x5602c8cdffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55186)[0m     @     0x5602c8c3ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55186)[0m     @     0x5602c8cc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55186)[0m     @     0x5602c8cc6a20 method_vectorcall
[2m[36m(pid=55186)[0m     @     0x5602c8c3abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55186)[0m     @     0x5602c8cc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55186)[0m     @     0x5602c8cc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55186)[0m     @     0x5602c8c3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55186)[0m     @     0x5602c8cc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55186)[0m     @     0x5602c8cc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55186)[0m     @     0x5602c8c3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55186)[0m     @     0x5602c8cc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55186)[0m     @     0x5602c8cc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55186)[0m     @     0x5602c8c3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55186)[0m     @     0x5602c8cc5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55186)[0m     @     0x5602c8cc6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55186)[0m     @     0x5602c8c3b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55085)[0m     @     0x7ee138c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=55085)[0m     @     0x7ee138c11d91 at::TensorIterator::for_each()
[2m[36m(pid=55078)[0m     @     0x7fc9fb45a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55078)[0m     @     0x7fc9fb45aad3 at::TensorIterator::for_each()
[2m[36m(pid=55102)[0m     @     0x7f5c2e14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55102)[0m     @     0x7f5c2e14fad3 at::TensorIterator::for_each()
[2m[36m(pid=55102)[0m     @     0x7f5c2e14fd91 at::TensorIterator::for_each()
[2m[36m(pid=55149)[0m     @     0x7f15adee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=55177)[0m     @     0x7f94be957ad3 at::TensorIterator::for_each()
[2m[36m(pid=55177)[0m     @     0x7f94be957d91 at::TensorIterator::for_each()
[2m[36m(pid=55177)[0m     @     0x7f94bf23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55096)[0m     @     0x7f1cde6418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55096)[0m     @     0x7f1cde641ad3 at::TensorIterator::for_each()
[2m[36m(pid=55173)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55173)[0m *** SIGSEGV (@0x0) received by PID 55173 (TID 0x7fe2d86eb700) from PID 0; stack trace: ***
[2m[36m(pid=55173)[0m     @     0x7fe2d82c4390 (unknown)
[2m[36m(pid=55173)[0m     @     0x7fb3d8246f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55174)[0m     @     0x7f9795e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55174)[0m     @     0x7f9795e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=55156)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55156)[0m *** SIGSEGV (@0x0) received by PID 55156 (TID 0x7f0cc6dc5700) from PID 0; stack trace: ***
[2m[36m(pid=55156)[0m     @     0x7f0cc699e390 (unknown)
[2m[36m(pid=55156)[0m     @     0x7eddc6601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55105)[0m     @     0x7f7bb01b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55105)[0m     @     0x7f7bb01b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55105)[0m     @     0x7f7bb01b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=55182)[0m     @     0x7fd070eae390 (unknown)
[2m[36m(pid=55182)[0m     @     0x7fa170e37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55182)[0m     @     0x7fa1705627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55084)[0m     @     0x7f9d2a343390 (unknown)
[2m[36m(pid=55084)[0m     @     0x7f6e2a2def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55084)[0m     @     0x7f6e29a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55084)[0m     @     0x7f6e29a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55084)[0m     @     0x7f6e29a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=55080)[0m     @     0x7f5ac6601ad3 at::TensorIterator::for_each()
[2m[36m(pid=55080)[0m     @     0x7f5ac6601d91 at::TensorIterator::for_each()
[2m[36m(pid=55080)[0m     @     0x7f5ac6ee4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55080)[0m     @     0x7f5ac6f07c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55080)[0m     @     0x7f5ac63a9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55144)[0m     @     0x7f5850a2ad91 at::TensorIterator::for_each()
[2m[36m(pid=55144)[0m     @     0x7f585130db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55144)[0m     @     0x7f5851330c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55144)[0m     @     0x7f58507d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55144)[0m     @     0x7f58507d0388 at::native::copy_impl()
[2m[36m(pid=55111)[0m     @     0x7f80edea9ad3 at::TensorIterator::for_each()
[2m[36m(pid=55111)[0m     @     0x7f80edea9d91 at::TensorIterator::for_each()
[2m[36m(pid=55111)[0m     @     0x7f80ee78cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55111)[0m     @     0x7f80ee7afc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55079)[0m     @     0x7fbb23974ad3 at::TensorIterator::for_each()
[2m[36m(pid=55079)[0m     @     0x7fbb23974d91 at::TensorIterator::for_each()
[2m[36m(pid=55079)[0m     @     0x7fbb24257b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55079)[0m     @     0x7fbb2427ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55077)[0m     @     0x7f316cabfad3 at::TensorIterator::for_each()
[2m[36m(pid=55077)[0m     @     0x7f316cabfd91 at::TensorIterator::for_each()
[2m[36m(pid=55077)[0m     @     0x7f316d3a2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55077)[0m     @     0x7f316d3c5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55077)[0m     @     0x7f316c867a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55152)[0m     @     0x7f5474953ad3 at::TensorIterator::for_each()
[2m[36m(pid=55152)[0m     @     0x7f5474953d91 at::TensorIterator::for_each()
[2m[36m(pid=55152)[0m     @     0x7f5475236b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55152)[0m     @     0x7f5475259c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55152)[0m     @     0x7f54746fba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55152)[0m     @     0x7f54746f9388 at::native::copy_impl()
[2m[36m(pid=55206)[0m     @     0x7fe33fa68390 (unknown)
[2m[36m(pid=55206)[0m     @     0x7fb43f8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55206)[0m     @     0x7fb43f0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55206)[0m     @     0x7fb43f00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55206)[0m     @     0x7fb43f00cad3 at::TensorIterator::for_each()
[2m[36m(pid=55206)[0m     @     0x7fb43f00cd91 at::TensorIterator::for_each()
[2m[36m(pid=55088)[0m     @     0x7f543c222390 (unknown)
[2m[36m(pid=55088)[0m     @     0x7f253c01cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55088)[0m     @     0x7f253b7477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55088)[0m     @     0x7f253b74a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55088)[0m     @     0x7f253b74aad3 at::TensorIterator::for_each()
[2m[36m(pid=55099)[0m     @     0x7f88f77ee8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55099)[0m     @     0x7f88f77eead3 at::TensorIterator::for_each()
[2m[36m(pid=55099)[0m     @     0x7f88f77eed91 at::TensorIterator::for_each()
[2m[36m(pid=55099)[0m     @     0x7f88f80d1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55099)[0m     @     0x7f88f80f4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55086)[0m     @     0x7f42c933b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55086)[0m     @     0x7f42c933bad3 at::TensorIterator::for_each()
[2m[36m(pid=55086)[0m     @     0x7f42c933bd91 at::TensorIterator::for_each()
[2m[36m(pid=55091)[0m     @     0x7fa09f5e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=55091)[0m     @     0x7fa09f5e4d91 at::TensorIterator::for_each()
[2m[36m(pid=55091)[0m     @     0x7fa09fec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55091)[0m     @     0x7fa09feeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55091)[0m     @     0x7fa09f38ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55097)[0m     @     0x7edf6e7c0ad3 at::TensorIterator::for_each()
[2m[36m(pid=55097)[0m     @     0x7edf6e7c0d91 at::TensorIterator::for_each()
[2m[36m(pid=55097)[0m     @     0x7edf6f0a3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55097)[0m     @     0x7edf6f0c6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55106)[0m     @     0x7f7739a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55106)[0m     @     0x7f77391357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55106)[0m     @     0x7f77391388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55106)[0m     @     0x7f7739138ad3 at::TensorIterator::for_each()
[2m[36m(pid=55196)[0m     @     0x7fbce95528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55196)[0m     @     0x7fbce9552ad3 at::TensorIterator::for_each()
[2m[36m(pid=55196)[0m     @     0x7fbce9552d91 at::TensorIterator::for_each()
[2m[36m(pid=55153)[0m     @     0x7f61ffc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55153)[0m     @     0x7f61ffc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=55153)[0m     @     0x7f61ffc91d91 at::TensorIterator::for_each()
[2m[36m(pid=55153)[0m     @     0x7f6200574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55153)[0m     @     0x7f6200597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55089)[0m     @     0x7fc46dd598f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55089)[0m     @     0x7fc46dd59ad3 at::TensorIterator::for_each()
[2m[36m(pid=55089)[0m     @     0x7fc46dd59d91 at::TensorIterator::for_each()
[2m[36m(pid=55089)[0m     @     0x7fc46e63cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55089)[0m     @     0x7fc46e65fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55139)[0m     @     0x7f53b00cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55139)[0m     @     0x7f53af7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55139)[0m     @     0x7f53af7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55139)[0m     @     0x7f53af7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=55103)[0m     @     0x7f204c7b68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55103)[0m     @     0x7f204c7b6ad3 at::TensorIterator::for_each()
[2m[36m(pid=55103)[0m     @     0x7f204c7b6d91 at::TensorIterator::for_each()
[2m[36m(pid=55103)[0m     @     0x7f204d099b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55094)[0m     @     0x7ed5c3df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55094)[0m     @     0x7ed5c351b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55094)[0m     @     0x7ed5c351e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55094)[0m     @     0x7ed5c351ead3 at::TensorIterator::for_each()
[2m[36m(pid=55075)[0m     @     0x7ee824ba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55075)[0m     @     0x7ee824ba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=55075)[0m     @     0x7ee824ba4d91 at::TensorIterator::for_each()
[2m[36m(pid=55075)[0m     @     0x7ee825487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55161)[0m     @     0x7f97b1b9ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55161)[0m     @     0x7f97b12ca7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55161)[0m     @     0x7f97b12cd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55161)[0m     @     0x7f97b12cdad3 at::TensorIterator::for_each()
[2m[36m(pid=55192)[0m     @     0x7f478b124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55192)[0m     @     0x7f478a84f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55192)[0m     @     0x7f478a8528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55187)[0m     @     0x7fc4e8a0f390 (unknown)
[2m[36m(pid=55187)[0m     @     0x7f95e8825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55187)[0m     @     0x7f95e7f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55187)[0m     @     0x7f95e7f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55201)[0m PC: @                0x0 (unknown)
[2m[36m(pid=55201)[0m *** SIGSEGV (@0x0) received by PID 55201 (TID 0x7fb7e1959700) from PID 0; stack trace: ***
[2m[36m(pid=55201)[0m     @     0x7fb7e1532390 (unknown)
[2m[36m(pid=55201)[0m     @     0x7f88e14e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55201)[0m     @     0x7f88e0c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55176)[0m     @     0x7f153983bad3 at::TensorIterator::for_each()
[2m[36m(pid=55176)[0m     @     0x7f153983bd91 at::TensorIterator::for_each()
[2m[36m(pid=55176)[0m     @     0x7f153a11eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55176)[0m     @     0x7f153a141c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55199)[0m     @     0x7f86d0aa5d91 at::TensorIterator::for_each()
[2m[36m(pid=55199)[0m     @     0x7f86d1388b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55199)[0m     @     0x7f86d13abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55110)[0m     @     0x7f24527c0ad3 at::TensorIterator::for_each()
[2m[36m(pid=55110)[0m     @     0x7f24527c0d91 at::TensorIterator::for_each()
[2m[36m(pid=55110)[0m     @     0x7f24530a3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55110)[0m     @     0x7f24530c6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55158)[0m     @     0x7fa53e5d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=55158)[0m     @     0x7fa53e5d4d91 at::TensorIterator::for_each()
[2m[36m(pid=55158)[0m     @     0x7fa53eeb7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55158)[0m     @     0x7fa53eedac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55095)[0m     @     0x7fa3d78afb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55095)[0m     @     0x7fa3d78d2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55095)[0m     @     0x7fa3d6d74a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55095)[0m     @     0x7fa3d6d72388 at::native::copy_impl()
[2m[36m(pid=55083)[0m     @     0x7f205d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=55083)[0m     @     0x7f205d868d91 at::TensorIterator::for_each()
[2m[36m(pid=55142)[0m     @     0x7f2c8fa61d91 at::TensorIterator::for_each()
[2m[36m(pid=55142)[0m     @     0x7f2c90344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55135)[0m     @     0x7f31b8292d91 at::TensorIterator::for_each()
[2m[36m(pid=55135)[0m     @     0x7f31b8b75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55135)[0m     @     0x7f31b8b98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55135)[0m     @     0x7f31b803aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55092)[0m     @     0x7f19a9a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=55092)[0m     @     0x7f19a9a79d91 at::TensorIterator::for_each()
[2m[36m(pid=55092)[0m     @     0x7f19aa35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55092)[0m     @     0x7f19aa37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55160)[0m     @     0x7f9307f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=55160)[0m     @     0x7f9307f53d91 at::TensorIterator::for_each()
[2m[36m(pid=55160)[0m     @     0x7f9308836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55160)[0m     @     0x7f9308859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55146)[0m     @     0x7edcad138ad3 at::TensorIterator::for_each()
[2m[36m(pid=55146)[0m     @     0x7edcad138d91 at::TensorIterator::for_each()
[2m[36m(pid=55146)[0m     @     0x7edcada1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55146)[0m     @     0x7edcada3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55076)[0m     @     0x7fba1506ed91 at::TensorIterator::for_each()
[2m[36m(pid=55076)[0m     @     0x7fba15951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55076)[0m     @     0x7fba15974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55076)[0m     @     0x7fba14e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55076)[0m     @     0x7fba14e14388 at::native::copy_impl()
[2m[36m(pid=55162)[0m     @     0x7f0a14c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=55162)[0m     @     0x7f0a14c11d91 at::TensorIterator::for_each()
[2m[36m(pid=55162)[0m     @     0x7f0a154f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55162)[0m     @     0x7f0a15517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55162)[0m     @     0x7f0a149b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55082)[0m     @     0x7ef21235cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55082)[0m     @     0x7ef21237fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55082)[0m     @     0x7ef211821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55082)[0m     @     0x7ef21181f388 at::native::copy_impl()
[2m[36m(pid=55082)[0m     @     0x7ef2118215a4 at::native::copy_()
[2m[36m(pid=55113)[0m     @     0x7f454f74aad3 at::TensorIterator::for_each()
[2m[36m(pid=55113)[0m     @     0x7f454f74ad91 at::TensorIterator::for_each()
[2m[36m(pid=55113)[0m     @     0x7f455002db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55113)[0m     @     0x7f4550050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55193)[0m     @     0x7ef798f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55193)[0m     @     0x7ef798f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=55193)[0m     @     0x7ef798f27d91 at::TensorIterator::for_each()
[2m[36m(pid=55193)[0m     @     0x7ef79980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55159)[0m     @     0x7f43315128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55159)[0m     @     0x7f4331512ad3 at::TensorIterator::for_each()
[2m[36m(pid=55159)[0m     @     0x7f4331512d91 at::TensorIterator::for_each()
[2m[36m(pid=55159)[0m     @     0x7f4331df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55159)[0m     @     0x7f4331e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55163)[0m     @     0x7f200fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55163)[0m     @     0x7f200fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55163)[0m     @     0x7f200fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=55114)[0m     @     0x7f1cd78def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=55114)[0m     @     0x7f1cd70097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55157)[0m     @     0x7f8d852a8d91 at::TensorIterator::for_each()
[2m[36m(pid=55157)[0m     @     0x7f8d85b8bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55157)[0m     @     0x7f8d85baec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55157)[0m     @     0x7f8d85050a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55157)[0m     @     0x7f8d8504e388 at::native::copy_impl()
[2m[36m(pid=55191)[0m     @     0x7f68279cc4f5 at::Tensor::copy_()
[2m[36m(pid=55191)[0m     @     0x7f682da7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55191)[0m     @     0x56353c6b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55191)[0m     @     0x56353c60cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55191)[0m     @     0x56353c697baf _PyEval_EvalCodeWithName
[2m[36m(pid=55191)[0m     @     0x56353c698a20 method_vectorcall
[2m[36m(pid=55191)[0m     @     0x56353c60cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55191)[0m     @     0x56353c697baf _PyEval_EvalCodeWithName
[2m[36m(pid=55191)[0m     @     0x56353c698643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55191)[0m     @     0x56353c60d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55191)[0m     @     0x56353c697baf _PyEval_EvalCodeWithName
[2m[36m(pid=55191)[0m     @     0x56353c698643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55191)[0m     @     0x56353c60d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55191)[0m     @     0x56353c697baf _PyEval_EvalCodeWithName
[2m[36m(pid=55191)[0m     @     0x56353c698643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55191)[0m     @     0x56353c60d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55191)[0m     @     0x56353c697baf _PyEval_EvalCodeWithName
[2m[36m(pid=55191)[0m     @     0x56353c698643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55191)[0m     @     0x56353c60d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55208)[0m     @     0x7f5799728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55208)[0m     @     0x7f5798bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55208)[0m     @     0x7f5798bc8388 at::native::copy_impl()
[2m[36m(pid=55208)[0m     @     0x7f5798bca5a4 at::native::copy_()
[2m[36m(pid=55179)[0m     @     0x5618b23a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55155)[0m     @     0x7f943fef44f5 at::Tensor::copy_()
[2m[36m(pid=55155)[0m     @     0x7f9445f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55155)[0m     @     0x5605fb84afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55155)[0m     @     0x5605fb7a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55155)[0m     @     0x5605fb830baf _PyEval_EvalCodeWithName
[2m[36m(pid=55155)[0m     @     0x5605fb831a20 method_vectorcall
[2m[36m(pid=55155)[0m     @     0x5605fb7a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55155)[0m     @     0x5605fb830baf _PyEval_EvalCodeWithName
[2m[36m(pid=55155)[0m     @     0x5605fb831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55155)[0m     @     0x5605fb7a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55155)[0m     @     0x5605fb830baf _PyEval_EvalCodeWithName
[2m[36m(pid=55155)[0m     @     0x5605fb831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55155)[0m     @     0x5605fb7a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55155)[0m     @     0x5605fb830baf _PyEval_EvalCodeWithName
[2m[36m(pid=55155)[0m     @     0x5605fb831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55155)[0m     @     0x5605fb7a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55155)[0m     @     0x5605fb830baf _PyEval_EvalCodeWithName
[2m[36m(pid=55155)[0m     @     0x5605fb831643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55155)[0m     @     0x5605fb7a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55169)[0m     @     0x7f35a21654f5 at::Tensor::copy_()
[2m[36m(pid=55169)[0m     @     0x7f35a821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55169)[0m     @     0x564f9429bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55169)[0m     @     0x564f941f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55169)[0m     @     0x564f94281baf _PyEval_EvalCodeWithName
[2m[36m(pid=55169)[0m     @     0x564f94282a20 method_vectorcall
[2m[36m(pid=55169)[0m     @     0x564f941f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55169)[0m     @     0x564f94281baf _PyEval_EvalCodeWithName
[2m[36m(pid=55169)[0m     @     0x564f94282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55169)[0m     @     0x564f941f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55169)[0m     @     0x564f94281baf _PyEval_EvalCodeWithName
[2m[36m(pid=55169)[0m     @     0x564f94282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55169)[0m     @     0x564f941f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55169)[0m     @     0x564f94281baf _PyEval_EvalCodeWithName
[2m[36m(pid=55169)[0m     @     0x564f94282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55169)[0m     @     0x564f941f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55169)[0m     @     0x564f94281baf _PyEval_EvalCodeWithName
[2m[36m(pid=55169)[0m     @     0x564f94282643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55169)[0m     @     0x564f941f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x7ee60efcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55180)[0m     @     0x7ee60efc9388 at::native::copy_impl()
[2m[36m(pid=55180)[0m     @     0x7ee60efcb5a4 at::native::copy_()
[2m[36m(pid=55198)[0m     @     0x55a160f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=55198)[0m     @     0x55a160f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55198)[0m     @     0x55a160ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55198)[0m     @     0x55a160f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=55198)[0m     @     0x55a160f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55198)[0m     @     0x55a160ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55198)[0m     @     0x55a160f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=55198)[0m     @     0x55a160f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55198)[0m     @     0x55a160ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55198)[0m     @     0x55a160f72baf _PyEval_EvalCodeWithName
[2m[36m(pid=55198)[0m     @     0x55a160f73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55198)[0m     @     0x55a160ee8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55154)[0m     @     0x7f19719e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55154)[0m     @     0x7f196f50e4f5 at::Tensor::copy_()
[2m[36m(pid=55154)[0m     @     0x7f19755b979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55154)[0m     @     0x5578ffaadfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55154)[0m     @     0x5578ffa08b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55154)[0m     @     0x5578ffa93baf _PyEval_EvalCodeWithName
[2m[36m(pid=55154)[0m     @     0x5578ffa94a20 method_vectorcall
[2m[36m(pid=55154)[0m     @     0x5578ffa08bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55154)[0m     @     0x5578ffa93baf _PyEval_EvalCodeWithName
[2m[36m(pid=55154)[0m     @     0x5578ffa94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55154)[0m     @     0x5578ffa09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55154)[0m     @     0x5578ffa93baf _PyEval_EvalCodeWithName
[2m[36m(pid=55154)[0m     @     0x5578ffa94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55154)[0m     @     0x5578ffa09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55154)[0m     @     0x5578ffa93baf _PyEval_EvalCodeWithName
[2m[36m(pid=55154)[0m     @     0x5578ffa94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55154)[0m     @     0x5578ffa09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55154)[0m     @     0x5578ffa93baf _PyEval_EvalCodeWithName
[2m[36m(pid=55154)[0m     @     0x5578ffa94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55154)[0m     @     0x5578ffa09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55093)[0m     @     0x7ee11c67dd91 at::TensorIterator::for_each()
[2m[36m(pid=55093)[0m     @     0x7ee11cf60b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55093)[0m     @     0x7ee11cf83c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55093)[0m     @     0x7ee11c425a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55093)[0m     @     0x7ee11c423388 at::native::copy_impl()
[2m[36m(pid=55143)[0m     @     0x7eedd7223d91 at::TensorIterator::for_each()
[2m[36m(pid=55143)[0m     @     0x7eedd7b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55143)[0m     @     0x7eedd7b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55143)[0m     @     0x7eedd6fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55143)[0m     @     0x7eedd6fc9388 at::native::copy_impl()
[2m[36m(pid=55143)[0m     @     0x7eedd6fcb5a4 at::native::copy_()
[2m[36m(pid=55145)[0m     @     0x7faa557b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55145)[0m     @     0x7faa557b2388 at::native::copy_impl()
[2m[36m(pid=55145)[0m     @     0x7faa557b45a4 at::native::copy_()
[2m[36m(pid=55145)[0m     @     0x7faa55e9f4f5 at::Tensor::copy_()
[2m[36m(pid=55164)[0m     @     0x7f3af1be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55164)[0m     @     0x7f3af1bde388 at::native::copy_impl()
[2m[36m(pid=55164)[0m     @     0x7f3af1be05a4 at::native::copy_()
[2m[36m(pid=55164)[0m     @     0x7f3af22cb4f5 at::Tensor::copy_()
[2m[36m(pid=55165)[0m     @     0x7f621e7d64f5 at::Tensor::copy_()
[2m[36m(pid=55165)[0m     @     0x7f622447779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55165)[0m     @     0x562fdb92dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55165)[0m     @     0x562fdb888b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55165)[0m     @     0x562fdb913baf _PyEval_EvalCodeWithName
[2m[36m(pid=55165)[0m     @     0x562fdb914a20 method_vectorcall
[2m[36m(pid=55165)[0m     @     0x562fdb888bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55165)[0m     @     0x562fdb913baf _PyEval_EvalCodeWithName
[2m[36m(pid=55165)[0m     @     0x562fdb914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55165)[0m     @     0x562fdb889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55165)[0m     @     0x562fdb913baf _PyEval_EvalCodeWithName
[2m[36m(pid=55165)[0m     @     0x562fdb914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55165)[0m     @     0x562fdb889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55165)[0m     @     0x562fdb913baf _PyEval_EvalCodeWithName
[2m[36m(pid=55165)[0m     @     0x562fdb914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55165)[0m     @     0x562fdb889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55165)[0m     @     0x562fdb913baf _PyEval_EvalCodeWithName
[2m[36m(pid=55165)[0m     @     0x562fdb914643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55165)[0m     @     0x562fdb889689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55171)[0m     @     0x55ed32375baf _PyEval_EvalCodeWithName
[2m[36m(pid=55171)[0m     @     0x55ed32376643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55171)[0m     @     0x55ed322eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55171)[0m     @     0x55ed32375baf _PyEval_EvalCodeWithName
[2m[36m(pid=55171)[0m     @     0x55ed32376643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55171)[0m     @     0x55ed322eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55171)[0m     @     0x55ed32375baf _PyEval_EvalCodeWithName
[2m[36m(pid=55171)[0m     @     0x55ed32376643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55171)[0m     @     0x55ed322eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55178)[0m     @     0x7fcc843df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55178)[0m     @     0x7fcc81f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55178)[0m     @     0x7fcc87fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55178)[0m     @     0x562dfa748fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55178)[0m     @     0x562dfa6a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55178)[0m     @     0x562dfa72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55178)[0m     @     0x562dfa72fa20 method_vectorcall
[2m[36m(pid=55178)[0m     @     0x562dfa6a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55178)[0m     @     0x562dfa72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55178)[0m     @     0x562dfa72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55178)[0m     @     0x562dfa6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55178)[0m     @     0x562dfa72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55178)[0m     @     0x562dfa72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55178)[0m     @     0x562dfa6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55178)[0m     @     0x562dfa72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55178)[0m     @     0x562dfa72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55178)[0m     @     0x562dfa6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55178)[0m     @     0x562dfa72ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55178)[0m     @     0x562dfa72f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55178)[0m     @     0x562dfa6a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55090)[0m     @     0x7ef15b60ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55090)[0m     @     0x7ef15b60a388 at::native::copy_impl()
[2m[36m(pid=55090)[0m     @     0x7ef15b60c5a4 at::native::copy_()
[2m[36m(pid=55085)[0m     @     0x7ee1394f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55085)[0m     @     0x7ee139517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55085)[0m     @     0x7ee1389b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55085)[0m     @     0x7ee1389b7388 at::native::copy_impl()
[2m[36m(pid=55085)[0m     @     0x7ee1389b95a4 at::native::copy_()
[2m[36m(pid=55078)[0m     @     0x7fc9fb45ad91 at::TensorIterator::for_each()
[2m[36m(pid=55078)[0m     @     0x7fc9fbd3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55078)[0m     @     0x7fc9fbd60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55078)[0m     @     0x7fc9fb202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55078)[0m     @     0x7fc9fb200388 at::native::copy_impl()
[2m[36m(pid=55102)[0m     @     0x7f5c2ea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55102)[0m     @     0x7f5c2ea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55102)[0m     @     0x7f5c2def7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55102)[0m     @     0x7f5c2def5388 at::native::copy_impl()
[2m[36m(pid=55102)[0m     @     0x7f5c2def75a4 at::native::copy_()
[2m[36m(pid=55149)[0m     @     0x7f15adee9d91 at::TensorIterator::for_each()
[2m[36m(pid=55149)[0m     @     0x7f15ae7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55149)[0m     @     0x7f15ae7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55149)[0m     @     0x7f15adc91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55149)[0m     @     0x7f15adc8f388 at::native::copy_impl()
[2m[36m(pid=55177)[0m     @     0x7f94bf25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55177)[0m     @     0x7f94be6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55177)[0m     @     0x7f94be6fd388 at::native::copy_impl()
[2m[36m(pid=55177)[0m     @     0x7f94be6ff5a4 at::native::copy_()
[2m[36m(pid=55096)[0m     @     0x7f1cde641d91 at::TensorIterator::for_each()
[2m[36m(pid=55096)[0m     @     0x7f1cdef24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55096)[0m     @     0x7f1cdef47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55096)[0m     @     0x7f1cde3e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55096)[0m     @     0x7f1cde3e7388 at::native::copy_impl()
[2m[36m(pid=55096)[0m     @     0x7f1cde3e95a4 at::native::copy_()
[2m[36m(pid=55173)[0m     @     0x7fb3d79717db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55173)[0m     @     0x7fb3d79748f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55173)[0m     @     0x7fb3d7974ad3 at::TensorIterator::for_each()
[2m[36m(pid=55174)[0m     @     0x7f9795e38d91 at::TensorIterator::for_each()
[2m[36m(pid=55174)[0m     @     0x7f979671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55174)[0m     @     0x7f979673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55174)[0m     @     0x7f9795be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55174)[0m     @     0x7f9795bde388 at::native::copy_impl()
[2m[36m(pid=55156)[0m     @     0x7eddc5d2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=55156)[0m     @     0x7eddc5d2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55156)[0m     @     0x7eddc5d2fad3 at::TensorIterator::for_each()
[2m[36m(pid=55105)[0m     @     0x7f7bb01b9d91 at::TensorIterator::for_each()
[2m[36m(pid=55105)[0m     @     0x7f7bb0a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55105)[0m     @     0x7f7bb0abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55105)[0m     @     0x7f7baff61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55105)[0m     @     0x7f7baff5f388 at::native::copy_impl()
[2m[36m(pid=55182)[0m     @     0x7fa1705658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55182)[0m     @     0x7fa170565ad3 at::TensorIterator::for_each()
[2m[36m(pid=55182)[0m     @     0x7fa170565d91 at::TensorIterator::for_each()
[2m[36m(pid=55182)[0m     @     0x7fa170e48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55182)[0m     @     0x7fa170e6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55084)[0m     @     0x7f6e29a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=55084)[0m     @     0x7f6e2a2efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55084)[0m     @     0x7f6e2a312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55080)[0m     @     0x7f5ac63a7388 at::native::copy_impl()
[2m[36m(pid=55080)[0m     @     0x7f5ac63a95a4 at::native::copy_()
[2m[36m(pid=55144)[0m     @     0x7f58507d25a4 at::native::copy_()
[2m[36m(pid=55144)[0m     @     0x7f5850ebd4f5 at::Tensor::copy_()
[2m[36m(pid=55144)[0m     @     0x7f58533908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55111)[0m     @     0x7f80edc51a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55111)[0m     @     0x7f80edc4f388 at::native::copy_impl()
[2m[36m(pid=55111)[0m     @     0x7f80edc515a4 at::native::copy_()
[2m[36m(pid=55079)[0m     @     0x7fbb2371ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55079)[0m     @     0x7fbb2371a388 at::native::copy_impl()
[2m[36m(pid=55079)[0m     @     0x7fbb2371c5a4 at::native::copy_()
[2m[36m(pid=55077)[0m     @     0x7f316c865388 at::native::copy_impl()
[2m[36m(pid=55077)[0m     @     0x7f316c8675a4 at::native::copy_()
[2m[36m(pid=55152)[0m     @     0x7f54746fb5a4 at::native::copy_()
[2m[36m(pid=55152)[0m     @     0x7f5474de64f5 at::Tensor::copy_()
[2m[36m(pid=55206)[0m     @     0x7fb43f8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55206)[0m     @     0x7fb43f912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55206)[0m     @     0x7fb43edb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55206)[0m     @     0x7fb43edb2388 at::native::copy_impl()
[2m[36m(pid=55088)[0m     @     0x7f253b74ad91 at::TensorIterator::for_each()
[2m[36m(pid=55088)[0m     @     0x7f253c02db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55088)[0m     @     0x7f253c050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55099)[0m     @     0x7f88f7596a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55099)[0m     @     0x7f88f7594388 at::native::copy_impl()
[2m[36m(pid=55086)[0m     @     0x7f42c9c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55086)[0m     @     0x7f42c9c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55086)[0m     @     0x7f42c90e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55086)[0m     @     0x7f42c90e1388 at::native::copy_impl()
[2m[36m(pid=55091)[0m     @     0x7fa09f38a388 at::native::copy_impl()
[2m[36m(pid=55091)[0m     @     0x7fa09f38c5a4 at::native::copy_()
[2m[36m(pid=55097)[0m     @     0x7edf6e568a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55097)[0m     @     0x7edf6e566388 at::native::copy_impl()
[2m[36m(pid=55097)[0m     @     0x7edf6e5685a4 at::native::copy_()
[2m[36m(pid=55106)[0m     @     0x7f7739138d91 at::TensorIterator::for_each()
[2m[36m(pid=55106)[0m     @     0x7f7739a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55106)[0m     @     0x7f7739a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55106)[0m     @     0x7f7738ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55106)[0m     @     0x7f7738ede388 at::native::copy_impl()
[2m[36m(pid=55106)[0m     @     0x7f7738ee05a4 at::native::copy_()
[2m[36m(pid=55196)[0m     @     0x7fbce9e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55196)[0m     @     0x7fbce9e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55196)[0m     @     0x7fbce92faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55196)[0m     @     0x7fbce92f8388 at::native::copy_impl()
[2m[36m(pid=55196)[0m     @     0x7fbce92fa5a4 at::native::copy_()
[2m[36m(pid=55153)[0m     @     0x7f61ffa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55153)[0m     @     0x7f61ffa37388 at::native::copy_impl()
[2m[36m(pid=55153)[0m     @     0x7f61ffa395a4 at::native::copy_()
[2m[36m(pid=55153)[0m     @     0x7f62001244f5 at::Tensor::copy_()
[2m[36m(pid=55089)[0m     @     0x7fc46db01a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55089)[0m     @     0x7fc46daff388 at::native::copy_impl()
[2m[36m(pid=55089)[0m     @     0x7fc46db015a4 at::native::copy_()
[2m[36m(pid=55089)[0m     @     0x7fc46e1ec4f5 at::Tensor::copy_()
[2m[36m(pid=55139)[0m     @     0x7f53af7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=55139)[0m     @     0x7f53b00deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55139)[0m     @     0x7f53b0101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55139)[0m     @     0x7f53af5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55139)[0m     @     0x7f53af5a1388 at::native::copy_impl()
[2m[36m(pid=55139)[0m     @     0x7f53af5a35a4 at::native::copy_()
[2m[36m(pid=55103)[0m     @     0x7f204d0bcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55103)[0m     @     0x7f204c55ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55103)[0m     @     0x7f204c55c388 at::native::copy_impl()
[2m[36m(pid=55103)[0m     @     0x7f204c55e5a4 at::native::copy_()
[2m[36m(pid=55094)[0m     @     0x7ed5c351ed91 at::TensorIterator::for_each()
[2m[36m(pid=55094)[0m     @     0x7ed5c3e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55094)[0m     @     0x7ed5c3e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55094)[0m     @     0x7ed5c32c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55094)[0m     @     0x7ed5c32c4388 at::native::copy_impl()
[2m[36m(pid=55075)[0m     @     0x7ee8254aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55075)[0m     @     0x7ee82494ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55075)[0m     @     0x7ee82494a388 at::native::copy_impl()
[2m[36m(pid=55075)[0m     @     0x7ee82494c5a4 at::native::copy_()
[2m[36m(pid=55161)[0m     @     0x7f97b12cdd91 at::TensorIterator::for_each()
[2m[36m(pid=55161)[0m     @     0x7f97b1bb0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55161)[0m     @     0x7f97b1bd3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55161)[0m     @     0x7f97b1075a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55161)[0m     @     0x7f97b1073388 at::native::copy_impl()
[2m[36m(pid=55161)[0m     @     0x7f97b10755a4 at::native::copy_()
[2m[36m(pid=55192)[0m     @     0x7f478a852ad3 at::TensorIterator::for_each()
[2m[36m(pid=55187)[0m     @     0x7f95e7f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=55187)[0m     @     0x7f95e7f53d91 at::TensorIterator::for_each()
[2m[36m(pid=55187)[0m     @     0x7f95e8836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55187)[0m     @     0x7f95e8859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55187)[0m     @     0x7f95e7cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55187)[0m     @     0x7f95e7cf9388 at::native::copy_impl()
[2m[36m(pid=55187)[0m     @     0x7f95e7cfb5a4 at::native::copy_()
[2m[36m(pid=55201)[0m     @     0x7f88e0c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55201)[0m     @     0x7f88e0c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=55176)[0m     @     0x7f15395e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55176)[0m     @     0x7f15395e1388 at::native::copy_impl()
[2m[36m(pid=55176)[0m     @     0x7f15395e35a4 at::native::copy_()
[2m[36m(pid=55176)[0m     @     0x7f1539cce4f5 at::Tensor::copy_()
[2m[36m(pid=55199)[0m     @     0x7f86d084da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55199)[0m     @     0x7f86d084b388 at::native::copy_impl()
[2m[36m(pid=55199)[0m     @     0x7f86d084d5a4 at::native::copy_()
[2m[36m(pid=55199)[0m     @     0x7f86d0f384f5 at::Tensor::copy_()
[2m[36m(pid=55110)[0m     @     0x7f2452568a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55110)[0m     @     0x7f2452566388 at::native::copy_impl()
[2m[36m(pid=55110)[0m     @     0x7f24525685a4 at::native::copy_()
[2m[36m(pid=55110)[0m     @     0x7f2452c534f5 at::Tensor::copy_()
[2m[36m(pid=55158)[0m     @     0x7fa53e37ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55158)[0m     @     0x7fa53e37a388 at::native::copy_impl()
[2m[36m(pid=55158)[0m     @     0x7fa53e37c5a4 at::native::copy_()
[2m[36m(pid=55158)[0m     @     0x7fa53ea674f5 at::Tensor::copy_()
[2m[36m(pid=55095)[0m     @     0x7fa3d6d745a4 at::native::copy_()
[2m[36m(pid=55095)[0m     @     0x7fa3d745f4f5 at::Tensor::copy_()
[2m[36m(pid=55095)[0m     @     0x7fa3d99328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55095)[0m     @     0x7fa3d745f4f5 at::Tensor::copy_()
[2m[36m(pid=55083)[0m     @     0x7f205e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55083)[0m     @     0x7f205e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55083)[0m     @     0x7f205d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55083)[0m     @     0x7f205d60e388 at::native::copy_impl()
[2m[36m(pid=55083)[0m     @     0x7f205d6105a4 at::native::copy_()
[2m[36m(pid=55142)[0m     @     0x7f2c90367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55142)[0m     @     0x7f2c8f809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55142)[0m     @     0x7f2c8f807388 at::native::copy_impl()
[2m[36m(pid=55142)[0m     @     0x7f2c8f8095a4 at::native::copy_()
[2m[36m(pid=55135)[0m     @     0x7f31b8038388 at::native::copy_impl()
[2m[36m(pid=55135)[0m     @     0x7f31b803a5a4 at::native::copy_()
[2m[36m(pid=55135)[0m     @     0x7f31b87254f5 at::Tensor::copy_()
[2m[36m(pid=55135)[0m     @     0x7f31babf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55135)[0m     @     0x7f31b87254f5 at::Tensor::copy_()
[2m[36m(pid=55135)[0m     @     0x7f31be7d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55135)[0m     @     0x55dc762affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55092)[0m     @     0x7f19a9821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55092)[0m     @     0x7f19a981f388 at::native::copy_impl()
[2m[36m(pid=55092)[0m     @     0x7f19a98215a4 at::native::copy_()
[2m[36m(pid=55160)[0m     @     0x7f9307cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55160)[0m     @     0x7f9307cf9388 at::native::copy_impl()
[2m[36m(pid=55160)[0m     @     0x7f9307cfb5a4 at::native::copy_()
[2m[36m(pid=55146)[0m     @     0x7edcacee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55146)[0m     @     0x7edcacede388 at::native::copy_impl()
[2m[36m(pid=55146)[0m     @     0x7edcacee05a4 at::native::copy_()
[2m[36m(pid=55076)[0m     @     0x7fba14e165a4 at::native::copy_()
[2m[36m(pid=55076)[0m     @     0x7fba155014f5 at::Tensor::copy_()
[2m[36m(pid=55076)[0m     @     0x7fba179d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55162)[0m     @     0x7f0a149b7388 at::native::copy_impl()
[2m[36m(pid=55162)[0m     @     0x7f0a149b95a4 at::native::copy_()
[2m[36m(pid=55162)[0m     @     0x7f0a150a44f5 at::Tensor::copy_()
[2m[36m(pid=55082)[0m     @     0x7ef211f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55082)[0m     @     0x7ef2143df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55082)[0m     @     0x7ef211f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55082)[0m     @     0x7ef217fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55082)[0m     @     0x559dadaa2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55113)[0m     @     0x7f454f4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55113)[0m     @     0x7f454f4f0388 at::native::copy_impl()
[2m[36m(pid=55113)[0m     @     0x7f454f4f25a4 at::native::copy_()
[2m[36m(pid=55193)[0m     @     0x7ef79982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55193)[0m     @     0x7ef798ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55193)[0m     @     0x7ef798ccd388 at::native::copy_impl()
[2m[36m(pid=55193)[0m     @     0x7ef798ccf5a4 at::native::copy_()
[2m[36m(pid=55159)[0m     @     0x7f43312baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55159)[0m     @     0x7f43312b8388 at::native::copy_impl()
[2m[36m(pid=55159)[0m     @     0x7f43312ba5a4 at::native::copy_()
[2m[36m(pid=55163)[0m     @     0x7f200fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=55163)[0m     @     0x7f2010574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55163)[0m     @     0x7f2010597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55163)[0m     @     0x7f200fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55163)[0m     @     0x7f200fa37388 at::native::copy_impl()
[2m[36m(pid=55114)[0m     @     0x7f1cd700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=55157)[0m     @     0x7f8d850505a4 at::native::copy_()
[2m[36m(pid=55157)[0m     @     0x7f8d8573b4f5 at::Tensor::copy_()
[2m[36m(pid=55157)[0m     @     0x7f8d87c0e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55208)[0m     @     0x7f57992b54f5 at::Tensor::copy_()
[2m[36m(pid=55208)[0m     @     0x7f579b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55208)[0m     @     0x7f57992b54f5 at::Tensor::copy_()
[2m[36m(pid=55208)[0m     @     0x7f579f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55208)[0m     @     0x55acde83ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55208)[0m     @     0x55acde79ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55208)[0m     @     0x55acde825baf _PyEval_EvalCodeWithName
[2m[36m(pid=55208)[0m     @     0x55acde826a20 method_vectorcall
[2m[36m(pid=55208)[0m     @     0x55acde79abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x7ee60f6b64f5 at::Tensor::copy_()
[2m[36m(pid=55180)[0m     @     0x7ee611b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55180)[0m     @     0x7ee60f6b64f5 at::Tensor::copy_()
[2m[36m(pid=55180)[0m     @     0x7ee61576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55180)[0m     @     0x55b306b6cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55180)[0m     @     0x55b306ac7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x55b306b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55180)[0m     @     0x55b306b53a20 method_vectorcall
[2m[36m(pid=55180)[0m     @     0x55b306ac7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x55b306b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55180)[0m     @     0x55b306b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55180)[0m     @     0x55b306ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x55b306b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55180)[0m     @     0x55b306b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55180)[0m     @     0x55b306ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x55b306b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55180)[0m     @     0x55b306b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55180)[0m     @     0x55b306ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x55b306b52baf _PyEval_EvalCodeWithName
[2m[36m(pid=55180)[0m     @     0x55b306b53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55093)[0m     @     0x7ee11c4255a4 at::native::copy_()
[2m[36m(pid=55093)[0m     @     0x7ee11cb104f5 at::Tensor::copy_()
[2m[36m(pid=55093)[0m     @     0x7ee11efe38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55143)[0m     @     0x7eedd76b64f5 at::Tensor::copy_()
[2m[36m(pid=55143)[0m     @     0x7eedd9b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55143)[0m     @     0x7eedd76b64f5 at::Tensor::copy_()
[2m[36m(pid=55143)[0m     @     0x7eeddd76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55143)[0m     @     0x55bb27867fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55143)[0m     @     0x55bb277c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55143)[0m     @     0x55bb2784dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55143)[0m     @     0x55bb2784ea20 method_vectorcall
[2m[36m(pid=55143)[0m     @     0x55bb277c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55143)[0m     @     0x55bb2784dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55143)[0m     @     0x55bb2784e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55143)[0m     @     0x55bb277c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55143)[0m     @     0x55bb2784dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55143)[0m     @     0x55bb2784e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55143)[0m     @     0x55bb277c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55145)[0m     @     0x7faa583728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55145)[0m     @     0x7faa55e9f4f5 at::Tensor::copy_()
[2m[36m(pid=55145)[0m     @     0x7faa5bf4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55145)[0m     @     0x555a21c4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55145)[0m     @     0x555a21ba8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55145)[0m     @     0x555a21c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55145)[0m     @     0x555a21c34a20 method_vectorcall
[2m[36m(pid=55145)[0m     @     0x555a21ba8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55145)[0m     @     0x555a21c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55145)[0m     @     0x555a21c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55145)[0m     @     0x555a21ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55145)[0m     @     0x555a21c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55145)[0m     @     0x555a21c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55145)[0m     @     0x555a21ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55145)[0m     @     0x555a21c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55145)[0m     @     0x555a21c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55145)[0m     @     0x555a21ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55145)[0m     @     0x555a21c33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55145)[0m     @     0x555a21c34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55145)[0m     @     0x555a21ba9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55164)[0m     @     0x7f3af479e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55164)[0m     @     0x7f3af22cb4f5 at::Tensor::copy_()
[2m[36m(pid=55164)[0m     @     0x7f3af837679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55164)[0m     @     0x55b5d2967fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55164)[0m     @     0x55b5d28c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55164)[0m     @     0x55b5d294dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55164)[0m     @     0x55b5d294ea20 method_vectorcall
[2m[36m(pid=55164)[0m     @     0x55b5d28c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55164)[0m     @     0x55b5d294dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55164)[0m     @     0x55b5d294e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55164)[0m     @     0x55b5d28c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55164)[0m     @     0x55b5d294dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55164)[0m     @     0x55b5d294e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55164)[0m     @     0x55b5d28c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55164)[0m     @     0x55b5d294dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55164)[0m     @     0x55b5d294e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55164)[0m     @     0x55b5d28c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55164)[0m     @     0x55b5d294dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55164)[0m     @     0x55b5d294e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55164)[0m     @     0x55b5d28c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55090)[0m     @     0x7ef15bcf74f5 at::Tensor::copy_()
[2m[36m(pid=55090)[0m     @     0x7ef15e1ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55090)[0m     @     0x7ef15bcf74f5 at::Tensor::copy_()
[2m[36m(pid=55090)[0m     @     0x7ef161da279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55090)[0m     @     0x555cfed0cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55090)[0m     @     0x555cfec67b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55090)[0m     @     0x555cfecf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=55090)[0m     @     0x555cfecf3a20 method_vectorcall
[2m[36m(pid=55090)[0m     @     0x555cfec67bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55090)[0m     @     0x555cfecf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=55090)[0m     @     0x555cfecf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55090)[0m     @     0x555cfec68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55090)[0m     @     0x555cfecf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=55090)[0m     @     0x555cfecf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55090)[0m     @     0x555cfec68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55090)[0m     @     0x555cfecf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=55090)[0m     @     0x555cfecf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55090)[0m     @     0x555cfec68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55090)[0m     @     0x555cfecf2baf _PyEval_EvalCodeWithName
[2m[36m(pid=55090)[0m     @     0x555cfecf3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55090)[0m     @     0x555cfec68689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55085)[0m     @     0x7ee1390a44f5 at::Tensor::copy_()
[2m[36m(pid=55085)[0m     @     0x7ee13b5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55085)[0m     @     0x7ee1390a44f5 at::Tensor::copy_()
[2m[36m(pid=55085)[0m     @     0x7ee13f14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55085)[0m     @     0x555c39873fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55085)[0m     @     0x555c397ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55085)[0m     @     0x555c39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55085)[0m     @     0x555c3985aa20 method_vectorcall
[2m[36m(pid=55085)[0m     @     0x555c397cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55085)[0m     @     0x555c39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55085)[0m     @     0x555c3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55085)[0m     @     0x555c397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55085)[0m     @     0x555c39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55085)[0m     @     0x555c3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55085)[0m     @     0x555c397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55085)[0m     @     0x555c39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55085)[0m     @     0x555c3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55085)[0m     @     0x555c397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55085)[0m     @     0x555c39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55085)[0m     @     0x555c3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55085)[0m     @     0x555c397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55078)[0m     @     0x7fc9fb2025a4 at::native::copy_()
[2m[36m(pid=55078)[0m     @     0x7fc9fb8ed4f5 at::Tensor::copy_()
[2m[36m(pid=55078)[0m     @     0x7fc9fddc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55078)[0m     @     0x7fc9fb8ed4f5 at::Tensor::copy_()
[2m[36m(pid=55078)[0m     @     0x7fca0199879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55078)[0m     @     0x55955aa37fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55078)[0m     @     0x55955a992b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55078)[0m     @     0x55955aa1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55078)[0m     @     0x55955aa1ea20 method_vectorcall
[2m[36m(pid=55078)[0m     @     0x55955a992bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55078)[0m     @     0x55955aa1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55102)[0m     @     0x7f5c2e5e24f5 at::Tensor::copy_()
[2m[36m(pid=55102)[0m     @     0x7f5c30ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55102)[0m     @     0x7f5c2e5e24f5 at::Tensor::copy_()
[2m[36m(pid=55102)[0m     @     0x7f5c3468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55102)[0m     @     0x55cdc2655fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55102)[0m     @     0x55cdc25b0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55102)[0m     @     0x55cdc263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55102)[0m     @     0x55cdc263ca20 method_vectorcall
[2m[36m(pid=55102)[0m     @     0x55cdc25b0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55102)[0m     @     0x55cdc263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55102)[0m     @     0x55cdc263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55102)[0m     @     0x55cdc25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55102)[0m     @     0x55cdc263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55102)[0m     @     0x55cdc263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55102)[0m     @     0x55cdc25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55102)[0m     @     0x55cdc263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55102)[0m     @     0x55cdc263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55102)[0m     @     0x55cdc25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55102)[0m     @     0x55cdc263bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55102)[0m     @     0x55cdc263c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55149)[0m     @     0x7f15adc915a4 at::native::copy_()
[2m[36m(pid=55149)[0m     @     0x7f15ae37c4f5 at::Tensor::copy_()
[2m[36m(pid=55149)[0m     @     0x7f15b084f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55149)[0m     @     0x7f15ae37c4f5 at::Tensor::copy_()
[2m[36m(pid=55149)[0m     @     0x7f15b442779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55149)[0m     @     0x55de19ba1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55149)[0m     @     0x55de19afcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55149)[0m     @     0x55de19b87baf _PyEval_EvalCodeWithName
[2m[36m(pid=55149)[0m     @     0x55de19b88a20 method_vectorcall
[2m[36m(pid=55149)[0m     @     0x55de19afcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55149)[0m     @     0x55de19b87baf _PyEval_EvalCodeWithName
[2m[36m(pid=55149)[0m     @     0x55de19b88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55149)[0m     @     0x55de19afd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55149)[0m     @     0x55de19b87baf _PyEval_EvalCodeWithName
[2m[36m(pid=55149)[0m     @     0x55de19b88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55177)[0m     @     0x7f94bedea4f5 at::Tensor::copy_()
[2m[36m(pid=55177)[0m     @     0x7f94c12bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55177)[0m     @     0x7f94bedea4f5 at::Tensor::copy_()
[2m[36m(pid=55177)[0m     @     0x7f94c4e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55177)[0m     @     0x55c4290d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55177)[0m     @     0x55c429030b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55177)[0m     @     0x55c4290bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55177)[0m     @     0x55c4290bca20 method_vectorcall
[2m[36m(pid=55177)[0m     @     0x55c429030bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55177)[0m     @     0x55c4290bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55177)[0m     @     0x55c4290bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55177)[0m     @     0x55c429031689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55177)[0m     @     0x55c4290bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55177)[0m     @     0x55c4290bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55177)[0m     @     0x55c429031689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55177)[0m     @     0x55c4290bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55177)[0m     @     0x55c4290bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55177)[0m     @     0x55c429031689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55177)[0m     @     0x55c4290bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55177)[0m     @     0x55c4290bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55177)[0m     @     0x55c429031689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55096)[0m     @     0x7f1cdead44f5 at::Tensor::copy_()
[2m[36m(pid=55096)[0m     @     0x7f1ce0fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55096)[0m     @     0x7f1cdead44f5 at::Tensor::copy_()
[2m[36m(pid=55096)[0m     @     0x7f1ce4b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55096)[0m     @     0x55a25158bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55096)[0m     @     0x55a2514e6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55096)[0m     @     0x55a251571baf _PyEval_EvalCodeWithName
[2m[36m(pid=55096)[0m     @     0x55a251572a20 method_vectorcall
[2m[36m(pid=55096)[0m     @     0x55a2514e6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55096)[0m     @     0x55a251571baf _PyEval_EvalCodeWithName
[2m[36m(pid=55096)[0m     @     0x55a251572643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55096)[0m     @     0x55a2514e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55096)[0m     @     0x55a251571baf _PyEval_EvalCodeWithName
[2m[36m(pid=55096)[0m     @     0x55a251572643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55096)[0m     @     0x55a2514e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55096)[0m     @     0x55a251571baf _PyEval_EvalCodeWithName
[2m[36m(pid=55096)[0m     @     0x55a251572643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55173)[0m     @     0x7fb3d7974d91 at::TensorIterator::for_each()
[2m[36m(pid=55173)[0m     @     0x7fb3d8257b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55173)[0m     @     0x7fb3d827ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55173)[0m     @     0x7fb3d771ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55173)[0m     @     0x7fb3d771a388 at::native::copy_impl()
[2m[36m(pid=55173)[0m     @     0x7fb3d771c5a4 at::native::copy_()
[2m[36m(pid=55174)[0m     @     0x7f9795be05a4 at::native::copy_()
[2m[36m(pid=55174)[0m     @     0x7f97962cb4f5 at::Tensor::copy_()
[2m[36m(pid=55174)[0m     @     0x7f979879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55174)[0m     @     0x7f97962cb4f5 at::Tensor::copy_()
[2m[36m(pid=55156)[0m     @     0x7eddc5d2fd91 at::TensorIterator::for_each()
[2m[36m(pid=55156)[0m     @     0x7eddc6612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55156)[0m     @     0x7eddc6635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55156)[0m     @     0x7eddc5ad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55156)[0m     @     0x7eddc5ad5388 at::native::copy_impl()
[2m[36m(pid=55156)[0m     @     0x7eddc5ad75a4 at::native::copy_()
[2m[36m(pid=55105)[0m     @     0x7f7baff615a4 at::native::copy_()
[2m[36m(pid=55105)[0m     @     0x7f7bb064c4f5 at::Tensor::copy_()
[2m[36m(pid=55105)[0m     @     0x7f7bb2b1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55182)[0m     @     0x7fa17030da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55182)[0m     @     0x7fa17030b388 at::native::copy_impl()
[2m[36m(pid=55182)[0m     @     0x7fa17030d5a4 at::native::copy_()
[2m[36m(pid=55182)[0m     @     0x7fa1709f84f5 at::Tensor::copy_()
[2m[36m(pid=55084)[0m     @     0x7f6e297b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55084)[0m     @     0x7f6e297b2388 at::native::copy_impl()
[2m[36m(pid=55084)[0m     @     0x7f6e297b45a4 at::native::copy_()
[2m[36m(pid=55084)[0m     @     0x7f6e29e9f4f5 at::Tensor::copy_()
[2m[36m(pid=55084)[0m     @     0x7f6e2c3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55080)[0m     @     0x7f5ac6a944f5 at::Tensor::copy_()
[2m[36m(pid=55080)[0m     @     0x7f5ac8f678de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55080)[0m     @     0x7f5ac6a944f5 at::Tensor::copy_()
[2m[36m(pid=55080)[0m     @     0x7f5accb3f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55080)[0m     @     0x560021330fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55080)[0m     @     0x56002128bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55080)[0m     @     0x560021316baf _PyEval_EvalCodeWithName
[2m[36m(pid=55080)[0m     @     0x560021317a20 method_vectorcall
[2m[36m(pid=55080)[0m     @     0x56002128bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55080)[0m     @     0x560021316baf _PyEval_EvalCodeWithName
[2m[36m(pid=55080)[0m     @     0x560021317643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55080)[0m     @     0x56002128c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55080)[0m     @     0x560021316baf _PyEval_EvalCodeWithName
[2m[36m(pid=55080)[0m     @     0x560021317643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55080)[0m     @     0x56002128c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55080)[0m     @     0x560021316baf _PyEval_EvalCodeWithName
[2m[36m(pid=55080)[0m     @     0x560021317643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55080)[0m     @     0x56002128c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55080)[0m     @     0x560021316baf _PyEval_EvalCodeWithName
[2m[36m(pid=55080)[0m     @     0x560021317643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55080)[0m     @     0x56002128c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55144)[0m     @     0x7f5850ebd4f5 at::Tensor::copy_()
[2m[36m(pid=55144)[0m     @     0x7f5856f6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55144)[0m     @     0x55d5f11c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55144)[0m     @     0x55d5f111fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55144)[0m     @     0x55d5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=55144)[0m     @     0x55d5f11aba20 method_vectorcall
[2m[36m(pid=55144)[0m     @     0x55d5f111fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55144)[0m     @     0x55d5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=55144)[0m     @     0x55d5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55144)[0m     @     0x55d5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55144)[0m     @     0x55d5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=55144)[0m     @     0x55d5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55144)[0m     @     0x55d5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55144)[0m     @     0x55d5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=55144)[0m     @     0x55d5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55144)[0m     @     0x55d5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55144)[0m     @     0x55d5f11aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=55144)[0m     @     0x55d5f11ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55144)[0m     @     0x55d5f1120689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55111)[0m     @     0x7f80ee33c4f5 at::Tensor::copy_()
[2m[36m(pid=55111)[0m     @     0x7f80f080f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55111)[0m     @     0x7f80ee33c4f5 at::Tensor::copy_()
[2m[36m(pid=55111)[0m     @     0x7f80f43e779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55111)[0m     @     0x5600fabd2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55111)[0m     @     0x5600fab2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55111)[0m     @     0x5600fabb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55111)[0m     @     0x5600fabb9a20 method_vectorcall
[2m[36m(pid=55111)[0m     @     0x5600fab2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55111)[0m     @     0x5600fabb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55111)[0m     @     0x5600fabb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55111)[0m     @     0x5600fab2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55111)[0m     @     0x5600fabb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55111)[0m     @     0x5600fabb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55111)[0m     @     0x5600fab2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55111)[0m     @     0x5600fabb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55111)[0m     @     0x5600fabb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55111)[0m     @     0x5600fab2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55111)[0m     @     0x5600fabb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55111)[0m     @     0x5600fabb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55111)[0m     @     0x5600fab2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55079)[0m     @     0x7fbb23e074f5 at::Tensor::copy_()
[2m[36m(pid=55079)[0m     @     0x7fbb262da8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55079)[0m     @     0x7fbb23e074f5 at::Tensor::copy_()
[2m[36m(pid=55079)[0m     @     0x7fbb29eb279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55079)[0m     @     0x559754a70fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55079)[0m     @     0x5597549cbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55079)[0m     @     0x559754a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=55079)[0m     @     0x559754a57a20 method_vectorcall
[2m[36m(pid=55079)[0m     @     0x5597549cbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55079)[0m     @     0x559754a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=55079)[0m     @     0x559754a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55079)[0m     @     0x5597549cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55079)[0m     @     0x559754a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=55079)[0m     @     0x559754a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55079)[0m     @     0x5597549cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55079)[0m     @     0x559754a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=55079)[0m     @     0x559754a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55079)[0m     @     0x5597549cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55079)[0m     @     0x559754a56baf _PyEval_EvalCodeWithName
[2m[36m(pid=55079)[0m     @     0x559754a57643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55079)[0m     @     0x5597549cc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55077)[0m     @     0x7f316cf524f5 at::Tensor::copy_()
[2m[36m(pid=55077)[0m     @     0x7f316f4258de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55077)[0m     @     0x7f316cf524f5 at::Tensor::copy_()
[2m[36m(pid=55077)[0m     @     0x7f319c58379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55077)[0m     @     0x56289b8eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55077)[0m     @     0x56289b845b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55077)[0m     @     0x56289b8d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55077)[0m     @     0x56289b8d1a20 method_vectorcall
[2m[36m(pid=55077)[0m     @     0x56289b845bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55077)[0m     @     0x56289b8d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55077)[0m     @     0x56289b8d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55077)[0m     @     0x56289b846689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55077)[0m     @     0x56289b8d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55077)[0m     @     0x56289b8d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55077)[0m     @     0x56289b846689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55077)[0m     @     0x56289b8d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55077)[0m     @     0x56289b8d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55077)[0m     @     0x56289b846689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55077)[0m     @     0x56289b8d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55077)[0m     @     0x56289b8d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55077)[0m     @     0x56289b846689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55152)[0m     @     0x7f54772b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55152)[0m     @     0x7f5474de64f5 at::Tensor::copy_()
[2m[36m(pid=55152)[0m     @     0x7f547ae9179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55152)[0m     @     0x55fb3e296fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55152)[0m     @     0x55fb3e1f1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55152)[0m     @     0x55fb3e27cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55152)[0m     @     0x55fb3e27da20 method_vectorcall
[2m[36m(pid=55152)[0m     @     0x55fb3e1f1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55152)[0m     @     0x55fb3e27cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55152)[0m     @     0x55fb3e27d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55152)[0m     @     0x55fb3e1f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55152)[0m     @     0x55fb3e27cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55152)[0m     @     0x55fb3e27d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55152)[0m     @     0x55fb3e1f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55152)[0m     @     0x55fb3e27cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55152)[0m     @     0x55fb3e27d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55152)[0m     @     0x55fb3e1f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55152)[0m     @     0x55fb3e27cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55152)[0m     @     0x55fb3e27d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55152)[0m     @     0x55fb3e1f2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55206)[0m     @     0x7fb43edb45a4 at::native::copy_()
[2m[36m(pid=55206)[0m     @     0x7fb43f49f4f5 at::Tensor::copy_()
[2m[36m(pid=55206)[0m     @     0x7fb4419728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55206)[0m     @     0x7fb43f49f4f5 at::Tensor::copy_()
[2m[36m(pid=55088)[0m     @     0x7f253b4f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55088)[0m     @     0x7f253b4f0388 at::native::copy_impl()
[2m[36m(pid=55088)[0m     @     0x7f253b4f25a4 at::native::copy_()
[2m[36m(pid=55088)[0m     @     0x7f253bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=55088)[0m     @     0x7f253e0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55099)[0m     @     0x7f88f75965a4 at::native::copy_()
[2m[36m(pid=55099)[0m     @     0x7f88f7c814f5 at::Tensor::copy_()
[2m[36m(pid=55099)[0m     @     0x7f88fa1548de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55099)[0m     @     0x7f88f7c814f5 at::Tensor::copy_()
[2m[36m(pid=55099)[0m     @     0x7f88fdd2c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55099)[0m     @     0x561ba6e0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55099)[0m     @     0x561ba6d68b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55099)[0m     @     0x561ba6df3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55099)[0m     @     0x561ba6df4a20 method_vectorcall
[2m[36m(pid=55099)[0m     @     0x561ba6d68bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55099)[0m     @     0x561ba6df3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55099)[0m     @     0x561ba6df4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55099)[0m     @     0x561ba6d69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55099)[0m     @     0x561ba6df3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55099)[0m     @     0x561ba6df4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55099)[0m     @     0x561ba6d69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55099)[0m     @     0x561ba6df3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55086)[0m     @     0x7f42c90e35a4 at::native::copy_()
[2m[36m(pid=55086)[0m     @     0x7f42c97ce4f5 at::Tensor::copy_()
[2m[36m(pid=55086)[0m     @     0x7f42cbca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55086)[0m     @     0x7f42c97ce4f5 at::Tensor::copy_()
[2m[36m(pid=55091)[0m     @     0x7fa09fa774f5 at::Tensor::copy_()
[2m[36m(pid=55091)[0m     @     0x7fa0a1f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55091)[0m     @     0x7fa09fa774f5 at::Tensor::copy_()
[2m[36m(pid=55091)[0m     @     0x7fa0a5b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55091)[0m     @     0x55b0d5448fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55091)[0m     @     0x55b0d53a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55091)[0m     @     0x55b0d542ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55091)[0m     @     0x55b0d542fa20 method_vectorcall
[2m[36m(pid=55091)[0m     @     0x55b0d53a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55091)[0m     @     0x55b0d542ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55091)[0m     @     0x55b0d542f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55091)[0m     @     0x55b0d53a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55091)[0m     @     0x55b0d542ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55091)[0m     @     0x55b0d542f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55091)[0m     @     0x55b0d53a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55091)[0m     @     0x55b0d542ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55091)[0m     @     0x55b0d542f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55091)[0m     @     0x55b0d53a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55091)[0m     @     0x55b0d542ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55091)[0m     @     0x55b0d542f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55091)[0m     @     0x55b0d53a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55097)[0m     @     0x7edf6ec534f5 at::Tensor::copy_()
[2m[36m(pid=55097)[0m     @     0x7edf711268de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55097)[0m     @     0x7edf6ec534f5 at::Tensor::copy_()
[2m[36m(pid=55097)[0m     @     0x7edf74cfe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55097)[0m     @     0x559301e99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55097)[0m     @     0x559301df4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55097)[0m     @     0x559301e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55097)[0m     @     0x559301e80a20 method_vectorcall
[2m[36m(pid=55097)[0m     @     0x559301df4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55097)[0m     @     0x559301e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55097)[0m     @     0x559301e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55097)[0m     @     0x559301df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55097)[0m     @     0x559301e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55097)[0m     @     0x559301e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55097)[0m     @     0x559301df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55097)[0m     @     0x559301e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55097)[0m     @     0x559301e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55097)[0m     @     0x559301df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55097)[0m     @     0x559301e7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55097)[0m     @     0x559301e80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55097)[0m     @     0x559301df5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55106)[0m     @     0x7f77395cb4f5 at::Tensor::copy_()
[2m[36m(pid=55106)[0m     @     0x7f773ba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55196)[0m     @     0x7fbce99e54f5 at::Tensor::copy_()
[2m[36m(pid=55196)[0m     @     0x7fbcebeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55196)[0m     @     0x7fbce99e54f5 at::Tensor::copy_()
[2m[36m(pid=55153)[0m     @     0x7f62025f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55153)[0m     @     0x7f62001244f5 at::Tensor::copy_()
[2m[36m(pid=55153)[0m     @     0x7f62061cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55153)[0m     @     0x55768aabffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55153)[0m     @     0x55768aa1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55153)[0m     @     0x55768aaa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55153)[0m     @     0x55768aaa6a20 method_vectorcall
[2m[36m(pid=55153)[0m     @     0x55768aa1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55153)[0m     @     0x55768aaa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55153)[0m     @     0x55768aaa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55153)[0m     @     0x55768aa1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55153)[0m     @     0x55768aaa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55153)[0m     @     0x55768aaa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55153)[0m     @     0x55768aa1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55153)[0m     @     0x55768aaa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55153)[0m     @     0x55768aaa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55153)[0m     @     0x55768aa1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55153)[0m     @     0x55768aaa5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55153)[0m     @     0x55768aaa6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55153)[0m     @     0x55768aa1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55089)[0m     @     0x7fc4706bf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55089)[0m     @     0x7fc46e1ec4f5 at::Tensor::copy_()
[2m[36m(pid=55089)[0m     @     0x7fc47429779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55089)[0m     @     0x5597bbf8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55089)[0m     @     0x5597bbee5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55089)[0m     @     0x5597bbf70baf _PyEval_EvalCodeWithName
[2m[36m(pid=55089)[0m     @     0x5597bbf71a20 method_vectorcall
[2m[36m(pid=55089)[0m     @     0x5597bbee5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55089)[0m     @     0x5597bbf70baf _PyEval_EvalCodeWithName
[2m[36m(pid=55089)[0m     @     0x5597bbf71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55089)[0m     @     0x5597bbee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55089)[0m     @     0x5597bbf70baf _PyEval_EvalCodeWithName
[2m[36m(pid=55089)[0m     @     0x5597bbf71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55089)[0m     @     0x5597bbee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55089)[0m     @     0x5597bbf70baf _PyEval_EvalCodeWithName
[2m[36m(pid=55089)[0m     @     0x5597bbf71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55089)[0m     @     0x5597bbee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55089)[0m     @     0x5597bbf70baf _PyEval_EvalCodeWithName
[2m[36m(pid=55089)[0m     @     0x5597bbf71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55089)[0m     @     0x5597bbee6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55139)[0m     @     0x7f53afc8e4f5 at::Tensor::copy_()
[2m[36m(pid=55139)[0m     @     0x7f53b21618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55139)[0m     @     0x7f53afc8e4f5 at::Tensor::copy_()
[2m[36m(pid=55139)[0m     @     0x7f53b5d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55139)[0m     @     0x561349f97fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55139)[0m     @     0x561349ef2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55139)[0m     @     0x561349f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55139)[0m     @     0x561349f7ea20 method_vectorcall
[2m[36m(pid=55139)[0m     @     0x561349ef2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55139)[0m     @     0x561349f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55139)[0m     @     0x561349f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55139)[0m     @     0x561349ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55139)[0m     @     0x561349f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55139)[0m     @     0x561349f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55139)[0m     @     0x561349ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55139)[0m     @     0x561349f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55139)[0m     @     0x561349f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55139)[0m     @     0x561349ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55139)[0m     @     0x561349f7dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55139)[0m     @     0x561349f7e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55139)[0m     @     0x561349ef3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55103)[0m     @     0x7f204cc494f5 at::Tensor::copy_()
[2m[36m(pid=55103)[0m     @     0x7f204f11c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55103)[0m     @     0x7f204cc494f5 at::Tensor::copy_()
[2m[36m(pid=55103)[0m     @     0x7f2052cf479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55103)[0m     @     0x55601cac7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55103)[0m     @     0x55601ca22b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55103)[0m     @     0x55601caadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55103)[0m     @     0x55601caaea20 method_vectorcall
[2m[36m(pid=55103)[0m     @     0x55601ca22bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55103)[0m     @     0x55601caadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55103)[0m     @     0x55601caae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55103)[0m     @     0x55601ca23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55103)[0m     @     0x55601caadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55094)[0m     @     0x7ed5c32c65a4 at::native::copy_()
[2m[36m(pid=55094)[0m     @     0x7ed5c39b14f5 at::Tensor::copy_()
[2m[36m(pid=55094)[0m     @     0x7ed5c5e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55075)[0m     @     0x7ee8250374f5 at::Tensor::copy_()
[2m[36m(pid=55075)[0m     @     0x7ee82750a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55075)[0m     @     0x7ee8250374f5 at::Tensor::copy_()
[2m[36m(pid=55075)[0m     @     0x7ee82b0e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55075)[0m     @     0x55bfe102efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55075)[0m     @     0x55bfe0f89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55075)[0m     @     0x55bfe1014baf _PyEval_EvalCodeWithName
[2m[36m(pid=55075)[0m     @     0x55bfe1015a20 method_vectorcall
[2m[36m(pid=55075)[0m     @     0x55bfe0f89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55075)[0m     @     0x55bfe1014baf _PyEval_EvalCodeWithName
[2m[36m(pid=55075)[0m     @     0x55bfe1015643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55075)[0m     @     0x55bfe0f8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55075)[0m     @     0x55bfe1014baf _PyEval_EvalCodeWithName
[2m[36m(pid=55161)[0m     @     0x7f97b17604f5 at::Tensor::copy_()
[2m[36m(pid=55161)[0m     @     0x7f97b3c338de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55192)[0m     @     0x7f478a852d91 at::TensorIterator::for_each()
[2m[36m(pid=55192)[0m     @     0x7f478b135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55192)[0m     @     0x7f478b158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55187)[0m     @     0x7f95e83e64f5 at::Tensor::copy_()
[2m[36m(pid=55187)[0m     @     0x7f95ea8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55187)[0m     @     0x7f95e83e64f5 at::Tensor::copy_()
[2m[36m(pid=55187)[0m     @     0x7f95ee49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55187)[0m     @     0x563e4b694fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55201)[0m     @     0x7f88e0c11d91 at::TensorIterator::for_each()
[2m[36m(pid=55201)[0m     @     0x7f88e14f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55201)[0m     @     0x7f88e1517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55201)[0m     @     0x7f88e09b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55176)[0m     @     0x7f153c1a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55176)[0m     @     0x7f1539cce4f5 at::Tensor::copy_()
[2m[36m(pid=55176)[0m     @     0x7f153fd7979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55176)[0m     @     0x55d445fb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55176)[0m     @     0x55d445f14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55176)[0m     @     0x55d445f9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55176)[0m     @     0x55d445fa0a20 method_vectorcall
[2m[36m(pid=55176)[0m     @     0x55d445f14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55176)[0m     @     0x55d445f9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55176)[0m     @     0x55d445fa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55176)[0m     @     0x55d445f15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55176)[0m     @     0x55d445f9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55176)[0m     @     0x55d445fa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55176)[0m     @     0x55d445f15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55199)[0m     @     0x7f86d340b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55110)[0m     @     0x7f24551268de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55110)[0m     @     0x7f2452c534f5 at::Tensor::copy_()
[2m[36m(pid=55110)[0m     @     0x7f2458cfe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55110)[0m     @     0x558d8936dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55110)[0m     @     0x558d892c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55110)[0m     @     0x558d89353baf _PyEval_EvalCodeWithName
[2m[36m(pid=55110)[0m     @     0x558d89354a20 method_vectorcall
[2m[36m(pid=55110)[0m     @     0x558d892c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55110)[0m     @     0x558d89353baf _PyEval_EvalCodeWithName
[2m[36m(pid=55110)[0m     @     0x558d89354643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55110)[0m     @     0x558d892c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55110)[0m     @     0x558d89353baf _PyEval_EvalCodeWithName
[2m[36m(pid=55110)[0m     @     0x558d89354643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55110)[0m     @     0x558d892c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55110)[0m     @     0x558d89353baf _PyEval_EvalCodeWithName
[2m[36m(pid=55110)[0m     @     0x558d89354643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55110)[0m     @     0x558d892c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55110)[0m     @     0x558d89353baf _PyEval_EvalCodeWithName
[2m[36m(pid=55110)[0m     @     0x558d89354643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55110)[0m     @     0x558d892c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55158)[0m     @     0x7fa540f3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55158)[0m     @     0x7fa53ea674f5 at::Tensor::copy_()
[2m[36m(pid=55158)[0m     @     0x7fa544b1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55158)[0m     @     0x55b0b4838fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55158)[0m     @     0x55b0b4793b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55158)[0m     @     0x55b0b481ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55158)[0m     @     0x55b0b481fa20 method_vectorcall
[2m[36m(pid=55158)[0m     @     0x55b0b4793bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55158)[0m     @     0x55b0b481ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55158)[0m     @     0x55b0b481f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55158)[0m     @     0x55b0b4794689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55158)[0m     @     0x55b0b481ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55158)[0m     @     0x55b0b481f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55158)[0m     @     0x55b0b4794689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55158)[0m     @     0x55b0b481ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55158)[0m     @     0x55b0b481f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55158)[0m     @     0x55b0b4794689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55158)[0m     @     0x55b0b481ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55158)[0m     @     0x55b0b481f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55158)[0m     @     0x55b0b4794689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55095)[0m     @     0x7fa3dd50a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55095)[0m     @     0x55749f915fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55095)[0m     @     0x55749f870b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55095)[0m     @     0x55749f8fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55095)[0m     @     0x55749f8fca20 method_vectorcall
[2m[36m(pid=55095)[0m     @     0x55749f870bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55095)[0m     @     0x55749f8fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55095)[0m     @     0x55749f8fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55095)[0m     @     0x55749f871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55095)[0m     @     0x55749f8fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55095)[0m     @     0x55749f8fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55095)[0m     @     0x55749f871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55095)[0m     @     0x55749f8fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55095)[0m     @     0x55749f8fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55095)[0m     @     0x55749f871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55095)[0m     @     0x55749f8fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55095)[0m     @     0x55749f8fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55095)[0m     @     0x55749f871689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55083)[0m     @     0x7f205dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=55083)[0m     @     0x7f20601ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55083)[0m     @     0x7f205dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=55083)[0m     @     0x7f2063da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55083)[0m     @     0x560014dcdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55083)[0m     @     0x560014d28b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55083)[0m     @     0x560014db3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55083)[0m     @     0x560014db4a20 method_vectorcall
[2m[36m(pid=55083)[0m     @     0x560014d28bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55083)[0m     @     0x560014db3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55083)[0m     @     0x560014db4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55083)[0m     @     0x560014d29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55083)[0m     @     0x560014db3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55083)[0m     @     0x560014db4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55083)[0m     @     0x560014d29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55083)[0m     @     0x560014db3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55083)[0m     @     0x560014db4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55083)[0m     @     0x560014d29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55083)[0m     @     0x560014db3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55083)[0m     @     0x560014db4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55083)[0m     @     0x560014d29689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55142)[0m     @     0x7f2c8fef44f5 at::Tensor::copy_()
[2m[36m(pid=55142)[0m     @     0x7f2c923c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55142)[0m     @     0x7f2c8fef44f5 at::Tensor::copy_()
[2m[36m(pid=55142)[0m     @     0x7f2c95f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55142)[0m     @     0x560381233fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55142)[0m     @     0x56038118eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55142)[0m     @     0x560381219baf _PyEval_EvalCodeWithName
[2m[36m(pid=55142)[0m     @     0x56038121aa20 method_vectorcall
[2m[36m(pid=55142)[0m     @     0x56038118ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55142)[0m     @     0x560381219baf _PyEval_EvalCodeWithName
[2m[36m(pid=55142)[0m     @     0x56038121a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55142)[0m     @     0x56038118f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55142)[0m     @     0x560381219baf _PyEval_EvalCodeWithName
[2m[36m(pid=55142)[0m     @     0x56038121a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55142)[0m     @     0x56038118f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55142)[0m     @     0x560381219baf _PyEval_EvalCodeWithName
[2m[36m(pid=55142)[0m     @     0x56038121a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55142)[0m     @     0x56038118f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55142)[0m     @     0x560381219baf _PyEval_EvalCodeWithName
[2m[36m(pid=55142)[0m     @     0x56038121a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55142)[0m     @     0x56038118f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55135)[0m     @     0x55dc7620ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55135)[0m     @     0x55dc76295baf _PyEval_EvalCodeWithName
[2m[36m(pid=55135)[0m     @     0x55dc76296a20 method_vectorcall
[2m[36m(pid=55135)[0m     @     0x55dc7620abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55135)[0m     @     0x55dc76295baf _PyEval_EvalCodeWithName
[2m[36m(pid=55135)[0m     @     0x55dc76296643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55135)[0m     @     0x55dc7620b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55135)[0m     @     0x55dc76295baf _PyEval_EvalCodeWithName
[2m[36m(pid=55135)[0m     @     0x55dc76296643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55135)[0m     @     0x55dc7620b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55135)[0m     @     0x55dc76295baf _PyEval_EvalCodeWithName
[2m[36m(pid=55135)[0m     @     0x55dc76296643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55135)[0m     @     0x55dc7620b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55135)[0m     @     0x55dc76295baf _PyEval_EvalCodeWithName
[2m[36m(pid=55135)[0m     @     0x55dc76296643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55135)[0m     @     0x55dc7620b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55092)[0m     @     0x7f19a9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55092)[0m     @     0x7f19ac3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55092)[0m     @     0x7f19a9f0c4f5 at::Tensor::copy_()
[2m[36m(pid=55092)[0m     @     0x7f19affb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55092)[0m     @     0x55dc8d50bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55092)[0m     @     0x55dc8d466b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55092)[0m     @     0x55dc8d4f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55092)[0m     @     0x55dc8d4f2a20 method_vectorcall
[2m[36m(pid=55092)[0m     @     0x55dc8d466bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55092)[0m     @     0x55dc8d4f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55092)[0m     @     0x55dc8d4f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55092)[0m     @     0x55dc8d467689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55092)[0m     @     0x55dc8d4f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55092)[0m     @     0x55dc8d4f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55092)[0m     @     0x55dc8d467689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55092)[0m     @     0x55dc8d4f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55092)[0m     @     0x55dc8d4f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55092)[0m     @     0x55dc8d467689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55092)[0m     @     0x55dc8d4f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55092)[0m     @     0x55dc8d4f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55092)[0m     @     0x55dc8d467689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55160)[0m     @     0x7f93083e64f5 at::Tensor::copy_()
[2m[36m(pid=55160)[0m     @     0x7f930a8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55160)[0m     @     0x7f93083e64f5 at::Tensor::copy_()
[2m[36m(pid=55160)[0m     @     0x7f930e49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55160)[0m     @     0x5582fc1e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55160)[0m     @     0x5582fc143b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55160)[0m     @     0x5582fc1cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55160)[0m     @     0x5582fc1cfa20 method_vectorcall
[2m[36m(pid=55160)[0m     @     0x5582fc143bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55160)[0m     @     0x5582fc1cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55160)[0m     @     0x5582fc1cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55160)[0m     @     0x5582fc144689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55160)[0m     @     0x5582fc1cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55160)[0m     @     0x5582fc1cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55160)[0m     @     0x5582fc144689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55160)[0m     @     0x5582fc1cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55160)[0m     @     0x5582fc1cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55160)[0m     @     0x5582fc144689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55160)[0m     @     0x5582fc1cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=55160)[0m     @     0x5582fc1cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55160)[0m     @     0x5582fc144689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55146)[0m     @     0x7edcad5cb4f5 at::Tensor::copy_()
[2m[36m(pid=55146)[0m     @     0x7edcafa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55146)[0m     @     0x7edcad5cb4f5 at::Tensor::copy_()
[2m[36m(pid=55146)[0m     @     0x7edcb367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55146)[0m     @     0x5573a2802fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55146)[0m     @     0x5573a275db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55146)[0m     @     0x5573a27e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55146)[0m     @     0x5573a27e9a20 method_vectorcall
[2m[36m(pid=55146)[0m     @     0x5573a275dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55146)[0m     @     0x5573a27e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55146)[0m     @     0x5573a27e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55146)[0m     @     0x5573a275e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55146)[0m     @     0x5573a27e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55146)[0m     @     0x5573a27e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55146)[0m     @     0x5573a275e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55146)[0m     @     0x5573a27e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55146)[0m     @     0x5573a27e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55146)[0m     @     0x5573a275e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55146)[0m     @     0x5573a27e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=55146)[0m     @     0x5573a27e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55146)[0m     @     0x5573a275e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55076)[0m     @     0x7fba155014f5 at::Tensor::copy_()
[2m[36m(pid=55076)[0m     @     0x7fe8e08b279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55076)[0m     @     0x55a6b10effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55076)[0m     @     0x55a6b104ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55076)[0m     @     0x55a6b10d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55076)[0m     @     0x55a6b10d6a20 method_vectorcall
[2m[36m(pid=55076)[0m     @     0x55a6b104abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55076)[0m     @     0x55a6b10d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55076)[0m     @     0x55a6b10d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55076)[0m     @     0x55a6b104b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55076)[0m     @     0x55a6b10d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55076)[0m     @     0x55a6b10d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55076)[0m     @     0x55a6b104b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55076)[0m     @     0x55a6b10d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55076)[0m     @     0x55a6b10d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55076)[0m     @     0x55a6b104b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55076)[0m     @     0x55a6b10d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55076)[0m     @     0x55a6b10d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55076)[0m     @     0x55a6b104b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55162)[0m     @     0x7f0a175778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55162)[0m     @     0x7f0a150a44f5 at::Tensor::copy_()
[2m[36m(pid=55162)[0m     @     0x7f0a1b14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55162)[0m     @     0x55c6ab2e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55162)[0m     @     0x55c6ab244b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55162)[0m     @     0x55c6ab2cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55162)[0m     @     0x55c6ab2d0a20 method_vectorcall
[2m[36m(pid=55162)[0m     @     0x55c6ab244bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55162)[0m     @     0x55c6ab2cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55162)[0m     @     0x55c6ab2d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55162)[0m     @     0x55c6ab245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55162)[0m     @     0x55c6ab2cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55162)[0m     @     0x55c6ab2d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55162)[0m     @     0x55c6ab245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55162)[0m     @     0x55c6ab2cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55162)[0m     @     0x55c6ab2d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55162)[0m     @     0x55c6ab245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55162)[0m     @     0x55c6ab2cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55162)[0m     @     0x55c6ab2d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55162)[0m     @     0x55c6ab245689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55082)[0m     @     0x559dad9fdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55082)[0m     @     0x559dada88baf _PyEval_EvalCodeWithName
[2m[36m(pid=55082)[0m     @     0x559dada89a20 method_vectorcall
[2m[36m(pid=55082)[0m     @     0x559dad9fdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55082)[0m     @     0x559dada88baf _PyEval_EvalCodeWithName
[2m[36m(pid=55082)[0m     @     0x559dada89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55082)[0m     @     0x559dad9fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55082)[0m     @     0x559dada88baf _PyEval_EvalCodeWithName
[2m[36m(pid=55082)[0m     @     0x559dada89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55082)[0m     @     0x559dad9fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55082)[0m     @     0x559dada88baf _PyEval_EvalCodeWithName
[2m[36m(pid=55082)[0m     @     0x559dada89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55082)[0m     @     0x559dad9fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55082)[0m     @     0x559dada88baf _PyEval_EvalCodeWithName
[2m[36m(pid=55082)[0m     @     0x559dada89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55082)[0m     @     0x559dad9fe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55113)[0m     @     0x7f454fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=55113)[0m     @     0x7f45520b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55113)[0m     @     0x7f454fbdd4f5 at::Tensor::copy_()
[2m[36m(pid=55113)[0m     @     0x7f4555c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55113)[0m     @     0x55ff39873fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55113)[0m     @     0x55ff397ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55113)[0m     @     0x55ff39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55113)[0m     @     0x55ff3985aa20 method_vectorcall
[2m[36m(pid=55113)[0m     @     0x55ff397cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55113)[0m     @     0x55ff39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55113)[0m     @     0x55ff3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55113)[0m     @     0x55ff397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55113)[0m     @     0x55ff39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55113)[0m     @     0x55ff3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55113)[0m     @     0x55ff397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55113)[0m     @     0x55ff39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55113)[0m     @     0x55ff3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55113)[0m     @     0x55ff397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55113)[0m     @     0x55ff39859baf _PyEval_EvalCodeWithName
[2m[36m(pid=55113)[0m     @     0x55ff3985a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55113)[0m     @     0x55ff397cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55193)[0m     @     0x7ef7993ba4f5 at::Tensor::copy_()
[2m[36m(pid=55193)[0m     @     0x7ef79b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55193)[0m     @     0x7ef7993ba4f5 at::Tensor::copy_()
[2m[36m(pid=55193)[0m     @     0x7ef79f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55193)[0m     @     0x56041690dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55193)[0m     @     0x560416868b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55193)[0m     @     0x5604168f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55193)[0m     @     0x5604168f4a20 method_vectorcall
[2m[36m(pid=55193)[0m     @     0x560416868bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55193)[0m     @     0x5604168f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55193)[0m     @     0x5604168f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55193)[0m     @     0x560416869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55193)[0m     @     0x5604168f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55193)[0m     @     0x5604168f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55193)[0m     @     0x560416869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55193)[0m     @     0x5604168f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55193)[0m     @     0x5604168f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55193)[0m     @     0x560416869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55193)[0m     @     0x5604168f3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55193)[0m     @     0x5604168f4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55193)[0m     @     0x560416869689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55159)[0m     @     0x7f43319a54f5 at::Tensor::copy_()
[2m[36m(pid=55159)[0m     @     0x7f4333e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55159)[0m     @     0x7f43319a54f5 at::Tensor::copy_()
[2m[36m(pid=55159)[0m     @     0x7f4337a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55159)[0m     @     0x55b786345fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55159)[0m     @     0x55b7862a0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55159)[0m     @     0x55b78632bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55159)[0m     @     0x55b78632ca20 method_vectorcall
[2m[36m(pid=55159)[0m     @     0x55b7862a0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55159)[0m     @     0x55b78632bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55159)[0m     @     0x55b78632c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55159)[0m     @     0x55b7862a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55159)[0m     @     0x55b78632bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55159)[0m     @     0x55b78632c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55159)[0m     @     0x55b7862a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55159)[0m     @     0x55b78632bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55159)[0m     @     0x55b78632c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55159)[0m     @     0x55b7862a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55159)[0m     @     0x55b78632bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55159)[0m     @     0x55b78632c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55159)[0m     @     0x55b7862a1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55163)[0m     @     0x7f200fa395a4 at::native::copy_()
[2m[36m(pid=55163)[0m     @     0x7f20101244f5 at::Tensor::copy_()
[2m[36m(pid=55163)[0m     @     0x7f20125f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55163)[0m     @     0x7f20101244f5 at::Tensor::copy_()
[2m[36m(pid=55163)[0m     @     0x7f20161cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55163)[0m     @     0x561492bbbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55114)[0m     @     0x7f1cd700cad3 at::TensorIterator::for_each()
[2m[36m(pid=55114)[0m     @     0x7f1cd700cd91 at::TensorIterator::for_each()
[2m[36m(pid=55114)[0m     @     0x7f1cd78efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=55114)[0m     @     0x7f1cd7912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=55114)[0m     @     0x7f1cd6db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55114)[0m     @     0x7f1cd6db2388 at::native::copy_impl()
[2m[36m(pid=55157)[0m     @     0x7f8d8573b4f5 at::Tensor::copy_()
[2m[36m(pid=55157)[0m     @     0x7f8d8b7e679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55157)[0m     @     0x55ec1bb4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55157)[0m     @     0x55ec1baa8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55157)[0m     @     0x55ec1bb33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55157)[0m     @     0x55ec1bb34a20 method_vectorcall
[2m[36m(pid=55157)[0m     @     0x55ec1baa8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55157)[0m     @     0x55ec1bb33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55157)[0m     @     0x55ec1bb34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55157)[0m     @     0x55ec1baa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55157)[0m     @     0x55ec1bb33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55157)[0m     @     0x55ec1bb34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55157)[0m     @     0x55ec1baa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55157)[0m     @     0x55ec1bb33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55157)[0m     @     0x55ec1bb34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55157)[0m     @     0x55ec1baa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55157)[0m     @     0x55ec1bb33baf _PyEval_EvalCodeWithName
[2m[36m(pid=55157)[0m     @     0x55ec1bb34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55157)[0m     @     0x55ec1baa9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55208)[0m     @     0x55acde825baf _PyEval_EvalCodeWithName
[2m[36m(pid=55208)[0m     @     0x55acde826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55208)[0m     @     0x55acde79b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55208)[0m     @     0x55acde825baf _PyEval_EvalCodeWithName
[2m[36m(pid=55208)[0m     @     0x55acde826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55208)[0m     @     0x55acde79b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55208)[0m     @     0x55acde825baf _PyEval_EvalCodeWithName
[2m[36m(pid=55208)[0m     @     0x55acde826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55208)[0m     @     0x55acde79b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55208)[0m     @     0x55acde825baf _PyEval_EvalCodeWithName
[2m[36m(pid=55208)[0m     @     0x55acde826643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55208)[0m     @     0x55acde79b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55180)[0m     @     0x55b306ac8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55093)[0m     @     0x7ee11cb104f5 at::Tensor::copy_()
[2m[36m(pid=55093)[0m     @     0x7ee122bbb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55093)[0m     @     0x561ddef1afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55093)[0m     @     0x561ddee75b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55093)[0m     @     0x561ddef00baf _PyEval_EvalCodeWithName
[2m[36m(pid=55093)[0m     @     0x561ddef01a20 method_vectorcall
[2m[36m(pid=55093)[0m     @     0x561ddee75bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55093)[0m     @     0x561ddef00baf _PyEval_EvalCodeWithName
[2m[36m(pid=55093)[0m     @     0x561ddef01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55093)[0m     @     0x561ddee76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55093)[0m     @     0x561ddef00baf _PyEval_EvalCodeWithName
[2m[36m(pid=55093)[0m     @     0x561ddef01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55093)[0m     @     0x561ddee76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55093)[0m     @     0x561ddef00baf _PyEval_EvalCodeWithName
[2m[36m(pid=55093)[0m     @     0x561ddef01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55093)[0m     @     0x561ddee76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55093)[0m     @     0x561ddef00baf _PyEval_EvalCodeWithName
[2m[36m(pid=55093)[0m     @     0x561ddef01643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55093)[0m     @     0x561ddee76689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55143)[0m     @     0x55bb2784dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55143)[0m     @     0x55bb2784e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55143)[0m     @     0x55bb277c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55143)[0m     @     0x55bb2784dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55143)[0m     @     0x55bb2784e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55143)[0m     @     0x55bb277c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55078)[0m     @     0x55955aa1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55078)[0m     @     0x55955a993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55078)[0m     @     0x55955aa1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55078)[0m     @     0x55955aa1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55078)[0m     @     0x55955a993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55078)[0m     @     0x55955aa1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55078)[0m     @     0x55955aa1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55078)[0m     @     0x55955a993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55078)[0m     @     0x55955aa1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55078)[0m     @     0x55955aa1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55078)[0m     @     0x55955a993689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55102)[0m     @     0x55cdc25b1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55149)[0m     @     0x55de19afd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55149)[0m     @     0x55de19b87baf _PyEval_EvalCodeWithName
[2m[36m(pid=55149)[0m     @     0x55de19b88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55149)[0m     @     0x55de19afd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55149)[0m     @     0x55de19b87baf _PyEval_EvalCodeWithName
[2m[36m(pid=55149)[0m     @     0x55de19b88643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55149)[0m     @     0x55de19afd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55096)[0m     @     0x55a2514e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55096)[0m     @     0x55a251571baf _PyEval_EvalCodeWithName
[2m[36m(pid=55096)[0m     @     0x55a251572643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55096)[0m     @     0x55a2514e7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55173)[0m     @     0x7fb3d7e074f5 at::Tensor::copy_()
[2m[36m(pid=55173)[0m     @     0x7fb3da2da8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55174)[0m     @     0x7f979c37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55174)[0m     @     0x56310d59ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55174)[0m     @     0x56310d4fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55174)[0m     @     0x56310d585baf _PyEval_EvalCodeWithName
[2m[36m(pid=55174)[0m     @     0x56310d586a20 method_vectorcall
[2m[36m(pid=55174)[0m     @     0x56310d4fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55174)[0m     @     0x56310d585baf _PyEval_EvalCodeWithName
[2m[36m(pid=55174)[0m     @     0x56310d586643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55174)[0m     @     0x56310d4fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55174)[0m     @     0x56310d585baf _PyEval_EvalCodeWithName
[2m[36m(pid=55174)[0m     @     0x56310d586643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55174)[0m     @     0x56310d4fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55174)[0m     @     0x56310d585baf _PyEval_EvalCodeWithName
[2m[36m(pid=55174)[0m     @     0x56310d586643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55174)[0m     @     0x56310d4fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55174)[0m     @     0x56310d585baf _PyEval_EvalCodeWithName
[2m[36m(pid=55174)[0m     @     0x56310d586643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55174)[0m     @     0x56310d4fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55156)[0m     @     0x7eddc61c24f5 at::Tensor::copy_()
[2m[36m(pid=55156)[0m     @     0x7eddc86958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55105)[0m     @     0x7f7bb064c4f5 at::Tensor::copy_()
[2m[36m(pid=55105)[0m     @     0x7f7bb66f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55105)[0m     @     0x55860dc54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55105)[0m     @     0x55860dbafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55105)[0m     @     0x55860dc3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55105)[0m     @     0x55860dc3ba20 method_vectorcall
[2m[36m(pid=55105)[0m     @     0x55860dbafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55105)[0m     @     0x55860dc3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55105)[0m     @     0x55860dc3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55105)[0m     @     0x55860dbb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55105)[0m     @     0x55860dc3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55105)[0m     @     0x55860dc3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55105)[0m     @     0x55860dbb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55105)[0m     @     0x55860dc3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55105)[0m     @     0x55860dc3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55105)[0m     @     0x55860dbb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55105)[0m     @     0x55860dc3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55105)[0m     @     0x55860dc3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55105)[0m     @     0x55860dbb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55182)[0m     @     0x7fa172ecb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55182)[0m     @     0x7fa1709f84f5 at::Tensor::copy_()
[2m[36m(pid=55182)[0m     @     0x7fa176aa379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55182)[0m     @     0x5563961fefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55182)[0m     @     0x556396159b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55182)[0m     @     0x5563961e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=55182)[0m     @     0x5563961e5a20 method_vectorcall
[2m[36m(pid=55182)[0m     @     0x556396159bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55182)[0m     @     0x5563961e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=55182)[0m     @     0x5563961e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55182)[0m     @     0x55639615a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55182)[0m     @     0x5563961e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=55182)[0m     @     0x5563961e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55182)[0m     @     0x55639615a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55182)[0m     @     0x5563961e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=55182)[0m     @     0x5563961e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55182)[0m     @     0x55639615a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55182)[0m     @     0x5563961e4baf _PyEval_EvalCodeWithName
[2m[36m(pid=55182)[0m     @     0x5563961e5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55182)[0m     @     0x55639615a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55084)[0m     @     0x7f6e29e9f4f5 at::Tensor::copy_()
[2m[36m(pid=55084)[0m     @     0x7f6e2ff4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55084)[0m     @     0x557e854cffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55084)[0m     @     0x557e8542ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55084)[0m     @     0x557e854b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55084)[0m     @     0x557e854b6a20 method_vectorcall
[2m[36m(pid=55084)[0m     @     0x557e8542abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55084)[0m     @     0x557e854b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55084)[0m     @     0x557e854b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55084)[0m     @     0x557e8542b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55084)[0m     @     0x557e854b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55084)[0m     @     0x557e854b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55084)[0m     @     0x557e8542b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55084)[0m     @     0x557e854b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55084)[0m     @     0x557e854b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55084)[0m     @     0x557e8542b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55084)[0m     @     0x557e854b5baf _PyEval_EvalCodeWithName
[2m[36m(pid=55084)[0m     @     0x557e854b6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55084)[0m     @     0x557e8542b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55206)[0m     @     0x7fb44554a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55206)[0m     @     0x55f24d73bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55206)[0m     @     0x55f24d696b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55206)[0m     @     0x55f24d721baf _PyEval_EvalCodeWithName
[2m[36m(pid=55206)[0m     @     0x55f24d722a20 method_vectorcall
[2m[36m(pid=55206)[0m     @     0x55f24d696bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55206)[0m     @     0x55f24d721baf _PyEval_EvalCodeWithName
[2m[36m(pid=55206)[0m     @     0x55f24d722643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55206)[0m     @     0x55f24d697689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55206)[0m     @     0x55f24d721baf _PyEval_EvalCodeWithName
[2m[36m(pid=55206)[0m     @     0x55f24d722643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55206)[0m     @     0x55f24d697689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55206)[0m     @     0x55f24d721baf _PyEval_EvalCodeWithName
[2m[36m(pid=55206)[0m     @     0x55f24d722643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55206)[0m     @     0x55f24d697689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55206)[0m     @     0x55f24d721baf _PyEval_EvalCodeWithName
[2m[36m(pid=55206)[0m     @     0x55f24d722643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55206)[0m     @     0x55f24d697689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55088)[0m     @     0x7f253bbdd4f5 at::Tensor::copy_()
[2m[36m(pid=55088)[0m     @     0x7f2541c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55088)[0m     @     0x56319680afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55088)[0m     @     0x563196765b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55088)[0m     @     0x5631967f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55088)[0m     @     0x5631967f1a20 method_vectorcall
[2m[36m(pid=55088)[0m     @     0x563196765bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55088)[0m     @     0x5631967f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55088)[0m     @     0x5631967f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55088)[0m     @     0x563196766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55088)[0m     @     0x5631967f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55088)[0m     @     0x5631967f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55088)[0m     @     0x563196766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55088)[0m     @     0x5631967f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55088)[0m     @     0x5631967f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55088)[0m     @     0x563196766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55088)[0m     @     0x5631967f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=55088)[0m     @     0x5631967f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55088)[0m     @     0x563196766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55099)[0m     @     0x561ba6df4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55099)[0m     @     0x561ba6d69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55099)[0m     @     0x561ba6df3baf _PyEval_EvalCodeWithName
[2m[36m(pid=55099)[0m     @     0x561ba6df4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55099)[0m     @     0x561ba6d69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55086)[0m     @     0x7f42cf87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55086)[0m     @     0x55e149e4bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55086)[0m     @     0x55e149da6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55086)[0m     @     0x55e149e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=55086)[0m     @     0x55e149e32a20 method_vectorcall
[2m[36m(pid=55086)[0m     @     0x55e149da6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55086)[0m     @     0x55e149e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=55086)[0m     @     0x55e149e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55086)[0m     @     0x55e149da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55086)[0m     @     0x55e149e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=55086)[0m     @     0x55e149e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55086)[0m     @     0x55e149da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55086)[0m     @     0x55e149e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=55086)[0m     @     0x55e149e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55086)[0m     @     0x55e149da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55086)[0m     @     0x55e149e31baf _PyEval_EvalCodeWithName
[2m[36m(pid=55086)[0m     @     0x55e149e32643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55086)[0m     @     0x55e149da7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55106)[0m     @     0x7f77395cb4f5 at::Tensor::copy_()
[2m[36m(pid=55106)[0m     @     0x7f773f67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55106)[0m     @     0x55a1ba26dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55106)[0m     @     0x55a1ba1c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55106)[0m     @     0x55a1ba253baf _PyEval_EvalCodeWithName
[2m[36m(pid=55106)[0m     @     0x55a1ba254a20 method_vectorcall
[2m[36m(pid=55106)[0m     @     0x55a1ba1c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55106)[0m     @     0x55a1ba253baf _PyEval_EvalCodeWithName
[2m[36m(pid=55106)[0m     @     0x55a1ba254643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55106)[0m     @     0x55a1ba1c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55106)[0m     @     0x55a1ba253baf _PyEval_EvalCodeWithName
[2m[36m(pid=55106)[0m     @     0x55a1ba254643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55106)[0m     @     0x55a1ba1c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55106)[0m     @     0x55a1ba253baf _PyEval_EvalCodeWithName
[2m[36m(pid=55106)[0m     @     0x55a1ba254643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55106)[0m     @     0x55a1ba1c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55106)[0m     @     0x55a1ba253baf _PyEval_EvalCodeWithName
[2m[36m(pid=55106)[0m     @     0x55a1ba254643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55106)[0m     @     0x55a1ba1c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55196)[0m     @     0x7fbcefa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55196)[0m     @     0x55ff13aa0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55196)[0m     @     0x55ff139fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55196)[0m     @     0x55ff13a86baf _PyEval_EvalCodeWithName
[2m[36m(pid=55196)[0m     @     0x55ff13a87a20 method_vectorcall
[2m[36m(pid=55196)[0m     @     0x55ff139fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55196)[0m     @     0x55ff13a86baf _PyEval_EvalCodeWithName
[2m[36m(pid=55196)[0m     @     0x55ff13a87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55196)[0m     @     0x55ff139fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55196)[0m     @     0x55ff13a86baf _PyEval_EvalCodeWithName
[2m[36m(pid=55196)[0m     @     0x55ff13a87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55196)[0m     @     0x55ff139fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55196)[0m     @     0x55ff13a86baf _PyEval_EvalCodeWithName
[2m[36m(pid=55196)[0m     @     0x55ff13a87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55196)[0m     @     0x55ff139fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55196)[0m     @     0x55ff13a86baf _PyEval_EvalCodeWithName
[2m[36m(pid=55196)[0m     @     0x55ff13a87643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55196)[0m     @     0x55ff139fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55103)[0m     @     0x55601caae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55103)[0m     @     0x55601ca23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55103)[0m     @     0x55601caadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55103)[0m     @     0x55601caae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55103)[0m     @     0x55601ca23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55103)[0m     @     0x55601caadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55103)[0m     @     0x55601caae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55103)[0m     @     0x55601ca23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55094)[0m     @     0x7ed5c39b14f5 at::Tensor::copy_()
[2m[36m(pid=55094)[0m     @     0x7ed5c9a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55094)[0m     @     0x562bc6435fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55094)[0m     @     0x562bc6390b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55094)[0m     @     0x562bc641bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55094)[0m     @     0x562bc641ca20 method_vectorcall
[2m[36m(pid=55094)[0m     @     0x562bc6390bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55094)[0m     @     0x562bc641bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55094)[0m     @     0x562bc641c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55094)[0m     @     0x562bc6391689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55094)[0m     @     0x562bc641bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55094)[0m     @     0x562bc641c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55094)[0m     @     0x562bc6391689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55094)[0m     @     0x562bc641bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55094)[0m     @     0x562bc641c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55094)[0m     @     0x562bc6391689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55094)[0m     @     0x562bc641bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55094)[0m     @     0x562bc641c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55094)[0m     @     0x562bc6391689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55075)[0m     @     0x55bfe1015643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55075)[0m     @     0x55bfe0f8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55075)[0m     @     0x55bfe1014baf _PyEval_EvalCodeWithName
[2m[36m(pid=55075)[0m     @     0x55bfe1015643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55075)[0m     @     0x55bfe0f8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55075)[0m     @     0x55bfe1014baf _PyEval_EvalCodeWithName
[2m[36m(pid=55075)[0m     @     0x55bfe1015643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55075)[0m     @     0x55bfe0f8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55161)[0m     @     0x7f97b17604f5 at::Tensor::copy_()
[2m[36m(pid=55161)[0m     @     0x7f97b780b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55161)[0m     @     0x560bbf9a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55161)[0m     @     0x560bbf8ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55161)[0m     @     0x560bbf98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55161)[0m     @     0x560bbf98ba20 method_vectorcall
[2m[36m(pid=55161)[0m     @     0x560bbf8ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55161)[0m     @     0x560bbf98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55161)[0m     @     0x560bbf98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55161)[0m     @     0x560bbf900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55161)[0m     @     0x560bbf98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55161)[0m     @     0x560bbf98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55161)[0m     @     0x560bbf900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55161)[0m     @     0x560bbf98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55161)[0m     @     0x560bbf98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55161)[0m     @     0x560bbf900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55161)[0m     @     0x560bbf98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55161)[0m     @     0x560bbf98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55161)[0m     @     0x560bbf900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x7f478a5faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=55192)[0m     @     0x7f478a5f8388 at::native::copy_impl()
[2m[36m(pid=55187)[0m     @     0x563e4b5efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55187)[0m     @     0x563e4b67abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55187)[0m     @     0x563e4b67ba20 method_vectorcall
[2m[36m(pid=55187)[0m     @     0x563e4b5efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55187)[0m     @     0x563e4b67abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55187)[0m     @     0x563e4b67b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55187)[0m     @     0x563e4b5f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55187)[0m     @     0x563e4b67abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55187)[0m     @     0x563e4b67b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55187)[0m     @     0x563e4b5f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55187)[0m     @     0x563e4b67abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55187)[0m     @     0x563e4b67b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55187)[0m     @     0x563e4b5f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55187)[0m     @     0x563e4b67abaf _PyEval_EvalCodeWithName
[2m[36m(pid=55187)[0m     @     0x563e4b67b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55187)[0m     @     0x563e4b5f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55201)[0m     @     0x7f88e09b7388 at::native::copy_impl()
[2m[36m(pid=55201)[0m     @     0x7f88e09b95a4 at::native::copy_()
[2m[36m(pid=55201)[0m     @     0x7f88e10a44f5 at::Tensor::copy_()
[2m[36m(pid=55201)[0m     @     0x7f88e35778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55176)[0m     @     0x55d445f9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55176)[0m     @     0x55d445fa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55176)[0m     @     0x55d445f15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55176)[0m     @     0x55d445f9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55176)[0m     @     0x55d445fa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55176)[0m     @     0x55d445f15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55199)[0m     @     0x7f86d0f384f5 at::Tensor::copy_()
[2m[36m(pid=55199)[0m     @     0x7f86d6fe379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55199)[0m     @     0x565108e7afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55199)[0m     @     0x565108dd5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55199)[0m     @     0x565108e60baf _PyEval_EvalCodeWithName
[2m[36m(pid=55199)[0m     @     0x565108e61a20 method_vectorcall
[2m[36m(pid=55199)[0m     @     0x565108dd5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55199)[0m     @     0x565108e60baf _PyEval_EvalCodeWithName
[2m[36m(pid=55199)[0m     @     0x565108e61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55199)[0m     @     0x565108dd6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55199)[0m     @     0x565108e60baf _PyEval_EvalCodeWithName
[2m[36m(pid=55199)[0m     @     0x565108e61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55199)[0m     @     0x565108dd6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55199)[0m     @     0x565108e60baf _PyEval_EvalCodeWithName
[2m[36m(pid=55199)[0m     @     0x565108e61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55199)[0m     @     0x565108dd6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55199)[0m     @     0x565108e60baf _PyEval_EvalCodeWithName
[2m[36m(pid=55199)[0m     @     0x565108e61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55199)[0m     @     0x565108dd6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55163)[0m     @     0x561492b16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55163)[0m     @     0x561492ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55163)[0m     @     0x561492ba2a20 method_vectorcall
[2m[36m(pid=55163)[0m     @     0x561492b16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55163)[0m     @     0x561492ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55163)[0m     @     0x561492ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55163)[0m     @     0x561492b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55163)[0m     @     0x561492ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55163)[0m     @     0x561492ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55163)[0m     @     0x561492b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55163)[0m     @     0x561492ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55163)[0m     @     0x561492ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55163)[0m     @     0x561492b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55163)[0m     @     0x561492ba1baf _PyEval_EvalCodeWithName
[2m[36m(pid=55163)[0m     @     0x561492ba2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55163)[0m     @     0x561492b17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55114)[0m     @     0x7f1cd6db45a4 at::native::copy_()
[2m[36m(pid=55173)[0m     @     0x7fb3d7e074f5 at::Tensor::copy_()
[2m[36m(pid=55173)[0m     @     0x7fb3ddeb279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55173)[0m     @     0x560a98c41fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55173)[0m     @     0x560a98b9cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55173)[0m     @     0x560a98c27baf _PyEval_EvalCodeWithName
[2m[36m(pid=55173)[0m     @     0x560a98c28a20 method_vectorcall
[2m[36m(pid=55173)[0m     @     0x560a98b9cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55173)[0m     @     0x560a98c27baf _PyEval_EvalCodeWithName
[2m[36m(pid=55173)[0m     @     0x560a98c28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55173)[0m     @     0x560a98b9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55173)[0m     @     0x560a98c27baf _PyEval_EvalCodeWithName
[2m[36m(pid=55173)[0m     @     0x560a98c28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55173)[0m     @     0x560a98b9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55173)[0m     @     0x560a98c27baf _PyEval_EvalCodeWithName
[2m[36m(pid=55173)[0m     @     0x560a98c28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55173)[0m     @     0x560a98b9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55173)[0m     @     0x560a98c27baf _PyEval_EvalCodeWithName
[2m[36m(pid=55173)[0m     @     0x560a98c28643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55173)[0m     @     0x560a98b9d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55156)[0m     @     0x7eddc61c24f5 at::Tensor::copy_()
[2m[36m(pid=55156)[0m     @     0x7eddcc26d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55156)[0m     @     0x556913bb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55156)[0m     @     0x556913b12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55156)[0m     @     0x556913b9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55156)[0m     @     0x556913b9ea20 method_vectorcall
[2m[36m(pid=55156)[0m     @     0x556913b12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55156)[0m     @     0x556913b9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55156)[0m     @     0x556913b9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55156)[0m     @     0x556913b13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55156)[0m     @     0x556913b9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55156)[0m     @     0x556913b9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55156)[0m     @     0x556913b13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55156)[0m     @     0x556913b9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55156)[0m     @     0x556913b9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55156)[0m     @     0x556913b13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55156)[0m     @     0x556913b9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55156)[0m     @     0x556913b9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55156)[0m     @     0x556913b13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x7f478a5fa5a4 at::native::copy_()
[2m[36m(pid=55201)[0m     @     0x7f88e10a44f5 at::Tensor::copy_()
[2m[36m(pid=55201)[0m     @     0x7f88e714f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55114)[0m     @     0x7f1cd749f4f5 at::Tensor::copy_()
[2m[36m(pid=55114)[0m     @     0x7f1cd99728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55114)[0m     @     0x7f1cd749f4f5 at::Tensor::copy_()
[2m[36m(pid=55192)[0m     @     0x7f478ace54f5 at::Tensor::copy_()
[2m[36m(pid=55192)[0m     @     0x7f478d1b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=55192)[0m     @     0x7f478ace54f5 at::Tensor::copy_()
[2m[36m(pid=55192)[0m     @     0x7f4790d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55201)[0m     @     0x55fcab773fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55201)[0m     @     0x55fcab6ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55201)[0m     @     0x55fcab759baf _PyEval_EvalCodeWithName
[2m[36m(pid=55201)[0m     @     0x55fcab75aa20 method_vectorcall
[2m[36m(pid=55201)[0m     @     0x55fcab6cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55201)[0m     @     0x55fcab759baf _PyEval_EvalCodeWithName
[2m[36m(pid=55201)[0m     @     0x55fcab75a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55201)[0m     @     0x55fcab6cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55201)[0m     @     0x55fcab759baf _PyEval_EvalCodeWithName
[2m[36m(pid=55201)[0m     @     0x55fcab75a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55201)[0m     @     0x55fcab6cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55201)[0m     @     0x55fcab759baf _PyEval_EvalCodeWithName
[2m[36m(pid=55201)[0m     @     0x55fcab75a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55201)[0m     @     0x55fcab6cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55201)[0m     @     0x55fcab759baf _PyEval_EvalCodeWithName
[2m[36m(pid=55201)[0m     @     0x55fcab75a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55201)[0m     @     0x55fcab6cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55114)[0m     @     0x7f1cdd54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=55114)[0m     @     0x562ce2926fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55114)[0m     @     0x562ce2881b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55114)[0m     @     0x562ce290cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55114)[0m     @     0x562ce290da20 method_vectorcall
[2m[36m(pid=55114)[0m     @     0x562ce2881bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55114)[0m     @     0x562ce290cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55114)[0m     @     0x562ce290d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55114)[0m     @     0x562ce2882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55114)[0m     @     0x562ce290cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55114)[0m     @     0x562ce290d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55114)[0m     @     0x562ce2882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55114)[0m     @     0x562ce290cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55114)[0m     @     0x562ce290d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55114)[0m     @     0x562ce2882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55114)[0m     @     0x562ce290cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=55114)[0m     @     0x562ce290d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55114)[0m     @     0x562ce2882689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x55faeff9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=55192)[0m     @     0x55faefef9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x55faeff84baf _PyEval_EvalCodeWithName
[2m[36m(pid=55192)[0m     @     0x55faeff85a20 method_vectorcall
[2m[36m(pid=55192)[0m     @     0x55faefef9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x55faeff84baf _PyEval_EvalCodeWithName
[2m[36m(pid=55192)[0m     @     0x55faeff85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55192)[0m     @     0x55faefefa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x55faeff84baf _PyEval_EvalCodeWithName
[2m[36m(pid=55192)[0m     @     0x55faeff85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55192)[0m     @     0x55faefefa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x55faeff84baf _PyEval_EvalCodeWithName
[2m[36m(pid=55192)[0m     @     0x55faeff85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55192)[0m     @     0x55faefefa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=55192)[0m     @     0x55faeff84baf _PyEval_EvalCodeWithName
[2m[36m(pid=55192)[0m     @     0x55faeff85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=55192)[0m     @     0x55faefefa689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:47:21,456	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:47:21,456	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
2020-11-05 10:47:21,466	ERROR trial_runner.py:567 -- Trial PPO_jss_env_43fde_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=55213, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 24.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_43fde_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_43fde_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_43fde_00000_0_2020-11-05_10-47-14/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:47:21,479	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:47:21,480	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:47:21,480	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:47:21,480	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.
2020-11-05 10:47:21,480	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
== Status ==
Memory usage on this node: 24.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.01 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_43fde_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_43fde_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_43fde_00000_0_2020-11-05_10-47-14/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_43fde_00000])
