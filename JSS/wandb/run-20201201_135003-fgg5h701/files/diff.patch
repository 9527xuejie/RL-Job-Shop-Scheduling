diff --git a/JSS/.ipynb_checkpoints/sweep_ppo-checkpoint.yaml b/JSS/.ipynb_checkpoints/sweep_ppo-checkpoint.yaml
index 7bceb26..296de51 100644
--- a/JSS/.ipynb_checkpoints/sweep_ppo-checkpoint.yaml
+++ b/JSS/.ipynb_checkpoints/sweep_ppo-checkpoint.yaml
@@ -3,25 +3,22 @@ method: bayes
 metric:
   name: episode_reward_mean
   goal: maximize
-early_terminate:
-  type: hyperband
-  min_iter: 25
 parameters:
   sgd_minibatch_size:
     min: 4096
     max: 32000
   num_envs_per_worker:
     min: 1
-    max: 4
+    max: 8
   rollout_fragment_length:
     min: 256
     max: 1256
   layer_size:
     min: 500
-    max: 1000
+    max: 1200
   lr:
     min: 0.000001
-    max: 0.005
+    max: 0.001
   entropy_coeff:
     min: 0.00000001
     max: 0.01
@@ -38,8 +35,11 @@ parameters:
     min: 0.5
     max: 1.0
   kl_coeff:
-    min: 0.2
+    min: 0.1
     max: 0.6
+  kl_target:
+    min: 0.01
+    max: 0.3
   batch_mode:
     values:
       - 'truncate_episodes'
diff --git a/JSS/.ipynb_checkpoints/train_wandb-checkpoint.py b/JSS/.ipynb_checkpoints/train_wandb-checkpoint.py
index 50d92b4..cb97cfe 100644
--- a/JSS/.ipynb_checkpoints/train_wandb-checkpoint.py
+++ b/JSS/.ipynb_checkpoints/train_wandb-checkpoint.py
@@ -70,7 +70,7 @@ def train_func():
         'num_gpus': 1,
         'instance_path': '/JSS/JSS/env/instances/ta41',
         'evaluation_interval': None,
-        'metrics_smoothing_episodes': 1000,
+        'metrics_smoothing_episodes': 2000,
         'gamma': 1.0,
         'num_workers': mp.cpu_count(),
         'layer_nb': 2,
@@ -110,6 +110,7 @@ def train_func():
         "fcnet_activation": "relu",
         "custom_model": "fc_masked_model_tf",
         'fcnet_hiddens': [config['layer_size'] for k in range(config['layer_nb'])],
+        "vf_share_layers": False,
     }
     config['env_config'] = {
         'instance_path': config['instance_path']
diff --git a/JSS/sweep_ppo.yaml b/JSS/sweep_ppo.yaml
index 7bceb26..296de51 100644
--- a/JSS/sweep_ppo.yaml
+++ b/JSS/sweep_ppo.yaml
@@ -3,25 +3,22 @@ method: bayes
 metric:
   name: episode_reward_mean
   goal: maximize
-early_terminate:
-  type: hyperband
-  min_iter: 25
 parameters:
   sgd_minibatch_size:
     min: 4096
     max: 32000
   num_envs_per_worker:
     min: 1
-    max: 4
+    max: 8
   rollout_fragment_length:
     min: 256
     max: 1256
   layer_size:
     min: 500
-    max: 1000
+    max: 1200
   lr:
     min: 0.000001
-    max: 0.005
+    max: 0.001
   entropy_coeff:
     min: 0.00000001
     max: 0.01
@@ -38,8 +35,11 @@ parameters:
     min: 0.5
     max: 1.0
   kl_coeff:
-    min: 0.2
+    min: 0.1
     max: 0.6
+  kl_target:
+    min: 0.01
+    max: 0.3
   batch_mode:
     values:
       - 'truncate_episodes'
diff --git a/JSS/train_wandb.py b/JSS/train_wandb.py
index 50d92b4..c102770 100644
--- a/JSS/train_wandb.py
+++ b/JSS/train_wandb.py
@@ -70,7 +70,7 @@ def train_func():
         'num_gpus': 1,
         'instance_path': '/JSS/JSS/env/instances/ta41',
         'evaluation_interval': None,
-        'metrics_smoothing_episodes': 1000,
+        'metrics_smoothing_episodes': 2000,
         'gamma': 1.0,
         'num_workers': mp.cpu_count(),
         'layer_nb': 2,
@@ -87,7 +87,7 @@ def train_func():
         "vf_loss_coeff": 0.9394, # TO TUNE
         "kl_coeff": 0.5021, # TO TUNE
         "batch_mode": "truncate_episodes", # TO TUNE
-        'kl_target': 0.2,
+        'kl_target': 0.2, # TO TUNE
         'lambda': 1.0,
         "grad_clip": None,
         "use_critic": True,
@@ -110,6 +110,7 @@ def train_func():
         "fcnet_activation": "relu",
         "custom_model": "fc_masked_model_tf",
         'fcnet_hiddens': [config['layer_size'] for k in range(config['layer_nb'])],
+        "vf_share_layers": False,
     }
     config['env_config'] = {
         'instance_path': config['instance_path']
