2020-11-05 10:35:34,304	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a38f2_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=23992)[0m 2020-11-05 10:35:37,084	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=23992)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=23992)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=23992)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=23992)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=23992)[0m 
[2m[36m(pid=23992)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=23958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23958)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23958)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23958)[0m *** SIGSEGV (@0x0) received by PID 23958 (TID 0x7fb6291a6700) from PID 0; stack trace: ***
[2m[36m(pid=23958)[0m     @     0x7fb628d7f390 (unknown)
[2m[36m(pid=23958)[0m     @     0x7f8728c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23986)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23986)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23986)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23986)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23986)[0m *** SIGSEGV (@0x0) received by PID 23986 (TID 0x7f4d18165700) from PID 0; stack trace: ***
[2m[36m(pid=23986)[0m     @     0x7f4d17d3e390 (unknown)
[2m[36m(pid=23986)[0m     @     0x7f1e17ce0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23986)[0m     @     0x7f1e1740b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23946)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23946)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23946)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23946)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23946)[0m *** SIGSEGV (@0x0) received by PID 23946 (TID 0x7fc6d3e29700) from PID 0; stack trace: ***
[2m[36m(pid=23946)[0m     @     0x7fc6d3a02390 (unknown)
[2m[36m(pid=23946)[0m     @     0x7f97d38def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23946)[0m     @     0x7f97d30097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23970)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23970)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23970)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23970)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23970)[0m *** SIGSEGV (@0x0) received by PID 23970 (TID 0x7faa03e60700) from PID 0; stack trace: ***
[2m[36m(pid=23970)[0m     @     0x7faa03a39390 (unknown)
[2m[36m(pid=23970)[0m     @     0x7f7b038def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23970)[0m     @     0x7f7b030097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23970)[0m     @     0x7f7b0300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23970)[0m     @     0x7f7b0300cad3 at::TensorIterator::for_each()
[2m[36m(pid=23940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23940)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23940)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23940)[0m *** SIGSEGV (@0x0) received by PID 23940 (TID 0x7f9e590dd700) from PID 0; stack trace: ***
[2m[36m(pid=23940)[0m     @     0x7f9e58cb6390 (unknown)
[2m[36m(pid=23940)[0m     @     0x7f6f58a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23940)[0m     @     0x7f6f581b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23922)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23922)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23922)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23922)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23922)[0m *** SIGSEGV (@0x0) received by PID 23922 (TID 0x7f2e64112700) from PID 0; stack trace: ***
[2m[36m(pid=23922)[0m     @     0x7f2e63ceb390 (unknown)
[2m[36m(pid=23922)[0m     @     0x7eff63900f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23922)[0m     @     0x7eff6302b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23974)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23974)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23974)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23974)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23974)[0m *** SIGSEGV (@0x0) received by PID 23974 (TID 0x7f383ae92700) from PID 0; stack trace: ***
[2m[36m(pid=23974)[0m     @     0x7f383aa6b390 (unknown)
[2m[36m(pid=23974)[0m     @     0x7f093a9ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23974)[0m     @     0x7f093a0f77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23988)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23988)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23988)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23988)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23988)[0m *** SIGSEGV (@0x0) received by PID 23988 (TID 0x7fe8a2252700) from PID 0; stack trace: ***
[2m[36m(pid=23988)[0m     @     0x7fe8a1e2b390 (unknown)
[2m[36m(pid=23988)[0m     @     0x7fb9a1de4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23988)[0m     @     0x7fb9a150f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23937)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23937)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23937)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23937)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23937)[0m *** SIGSEGV (@0x0) received by PID 23937 (TID 0x7f2300940700) from PID 0; stack trace: ***
[2m[36m(pid=23937)[0m     @     0x7f2300519390 (unknown)
[2m[36m(pid=23937)[0m     @     0x7ef4003e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23937)[0m     @     0x7ef3ffb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23937)[0m     @     0x7ef3ffb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23930)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23930)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23930)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23930)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23930)[0m *** SIGSEGV (@0x0) received by PID 23930 (TID 0x7ff3a1497700) from PID 0; stack trace: ***
[2m[36m(pid=23930)[0m     @     0x7ff3a1070390 (unknown)
[2m[36m(pid=23930)[0m     @     0x7fc4a0fe3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23921)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23921)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23921)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23921)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23921)[0m *** SIGSEGV (@0x0) received by PID 23921 (TID 0x7fa9986b8700) from PID 0; stack trace: ***
[2m[36m(pid=23921)[0m     @     0x7fa998291390 (unknown)
[2m[36m(pid=23925)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23925)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23925)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23925)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23925)[0m *** SIGSEGV (@0x0) received by PID 23925 (TID 0x7fe3e3ed6700) from PID 0; stack trace: ***
[2m[36m(pid=23925)[0m     @     0x7fe3e3aaf390 (unknown)
[2m[36m(pid=23925)[0m     @     0x7fb4e3a48f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23954)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23954)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23954)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23954)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23954)[0m *** SIGSEGV (@0x0) received by PID 23954 (TID 0x7f77318ee700) from PID 0; stack trace: ***
[2m[36m(pid=23954)[0m     @     0x7f77314c7390 (unknown)
[2m[36m(pid=23954)[0m     @     0x7f4831476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23954)[0m     @     0x7f4830ba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23943)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23943)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23943)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23943)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23943)[0m *** SIGSEGV (@0x0) received by PID 23943 (TID 0x7fd1d05bf700) from PID 0; stack trace: ***
[2m[36m(pid=23943)[0m     @     0x7fd1d0198390 (unknown)
[2m[36m(pid=23943)[0m     @     0x7fa2d00cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23943)[0m     @     0x7fa2cf7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23943)[0m     @     0x7fa2cf7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23943)[0m     @     0x7fa2cf7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=23979)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23979)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23979)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23979)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23979)[0m *** SIGSEGV (@0x0) received by PID 23979 (TID 0x7fc1b1fe7700) from PID 0; stack trace: ***
[2m[36m(pid=23979)[0m     @     0x7fc1b1bc0390 (unknown)
[2m[36m(pid=23979)[0m     @     0x7f92b1b5ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23979)[0m     @     0x7f92b128a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23979)[0m     @     0x7f92b128d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23888)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23888)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23888)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23888)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23888)[0m *** SIGSEGV (@0x0) received by PID 23888 (TID 0x7f813df6f700) from PID 0; stack trace: ***
[2m[36m(pid=23888)[0m     @     0x7f813db48390 (unknown)
[2m[36m(pid=23888)[0m     @     0x7f523da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23888)[0m     @     0x7f523d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23931)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23931)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23931)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23931)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23931)[0m *** SIGSEGV (@0x0) received by PID 23931 (TID 0x7fd492143700) from PID 0; stack trace: ***
[2m[36m(pid=23931)[0m     @     0x7fd491d1c390 (unknown)
[2m[36m(pid=23931)[0m     @     0x7fa591c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23931)[0m     @     0x7fa5913387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23889)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23889)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23889)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23889)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23889)[0m *** SIGSEGV (@0x0) received by PID 23889 (TID 0x7f6415f3d700) from PID 0; stack trace: ***
[2m[36m(pid=23889)[0m     @     0x7f6415b16390 (unknown)
[2m[36m(pid=23889)[0m     @     0x7f3515a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23961)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23961)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23961)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23961)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23961)[0m *** SIGSEGV (@0x0) received by PID 23961 (TID 0x7fd3ad3fd700) from PID 0; stack trace: ***
[2m[36m(pid=23961)[0m     @     0x7fd3acfd6390 (unknown)
[2m[36m(pid=23961)[0m     @     0x7fa4acb85f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23961)[0m     @     0x7fa4ac2b07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23882)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23882)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23882)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23882)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23882)[0m *** SIGSEGV (@0x0) received by PID 23882 (TID 0x7f67887ce700) from PID 0; stack trace: ***
[2m[36m(pid=23882)[0m     @     0x7f67883a7390 (unknown)
[2m[36m(pid=23890)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23890)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23890)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23890)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23890)[0m *** SIGSEGV (@0x0) received by PID 23890 (TID 0x7fa677ad9700) from PID 0; stack trace: ***
[2m[36m(pid=23890)[0m     @     0x7fa6776b2390 (unknown)
[2m[36m(pid=23890)[0m     @     0x7f777763cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23890)[0m     @     0x7f7776d677db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23934)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23934)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23934)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23934)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23934)[0m *** SIGSEGV (@0x0) received by PID 23934 (TID 0x7fe6c6b8b700) from PID 0; stack trace: ***
[2m[36m(pid=23934)[0m     @     0x7fe6c6764390 (unknown)
[2m[36m(pid=23934)[0m     @     0x7fb7c64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23934)[0m     @     0x7fb7c5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23914)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23914)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23914)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23914)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23914)[0m *** SIGSEGV (@0x0) received by PID 23914 (TID 0x7f20cdaa6700) from PID 0; stack trace: ***
[2m[36m(pid=23914)[0m     @     0x7f20cd67f390 (unknown)
[2m[36m(pid=23914)[0m     @     0x7ef1cd4e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23914)[0m     @     0x7ef1ccc0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23914)[0m     @     0x7ef1ccc118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23914)[0m     @     0x7ef1ccc11ad3 at::TensorIterator::for_each()
[2m[36m(pid=23969)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23969)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23969)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23969)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23969)[0m *** SIGSEGV (@0x0) received by PID 23969 (TID 0x7f865ce3c700) from PID 0; stack trace: ***
[2m[36m(pid=23969)[0m     @     0x7f865ca15390 (unknown)
[2m[36m(pid=23969)[0m     @     0x7f575c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23969)[0m     @     0x7f575be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23969)[0m     @     0x7f575bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23969)[0m     @     0x7f575bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=23951)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23951)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23951)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23951)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23951)[0m *** SIGSEGV (@0x0) received by PID 23951 (TID 0x7fa8a1215700) from PID 0; stack trace: ***
[2m[36m(pid=23951)[0m     @     0x7fa8a0dee390 (unknown)
[2m[36m(pid=23951)[0m     @     0x7f79a0d64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23951)[0m     @     0x7f79a048f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23951)[0m     @     0x7f79a04928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23951)[0m     @     0x7f79a0492ad3 at::TensorIterator::for_each()
[2m[36m(pid=23873)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23873)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23873)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23873)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23873)[0m *** SIGSEGV (@0x0) received by PID 23873 (TID 0x7f8888ad0700) from PID 0; stack trace: ***
[2m[36m(pid=23873)[0m     @     0x7f88886a9390 (unknown)
[2m[36m(pid=23873)[0m     @     0x7f598865ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23873)[0m     @     0x7f5987d8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23873)[0m     @     0x7f5987d8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23944)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23944)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23944)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23944)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23944)[0m *** SIGSEGV (@0x0) received by PID 23944 (TID 0x7fbd8e659700) from PID 0; stack trace: ***
[2m[36m(pid=23944)[0m     @     0x7fbd8e232390 (unknown)
[2m[36m(pid=23944)[0m     @     0x7f8e8e13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23944)[0m     @     0x7f8e8d8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23944)[0m     @     0x7f8e8d8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23944)[0m     @     0x7f8e8d868ad3 at::TensorIterator::for_each()
[2m[36m(pid=23958)[0m     @     0x7f872839f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23958)[0m     @     0x7f87283a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23986)[0m     @     0x7f1e1740e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23986)[0m     @     0x7f1e1740ead3 at::TensorIterator::for_each()
[2m[36m(pid=23946)[0m     @     0x7f97d300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23946)[0m     @     0x7f97d300cad3 at::TensorIterator::for_each()
[2m[36m(pid=23970)[0m     @     0x7f7b0300cd91 at::TensorIterator::for_each()
[2m[36m(pid=23970)[0m     @     0x7f7b038efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23970)[0m     @     0x7f7b03912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23940)[0m     @     0x7f6f581b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23940)[0m     @     0x7f6f581b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=23922)[0m     @     0x7eff6302e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23922)[0m     @     0x7eff6302ead3 at::TensorIterator::for_each()
[2m[36m(pid=23974)[0m     @     0x7f093a0fa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23974)[0m     @     0x7f093a0faad3 at::TensorIterator::for_each()
[2m[36m(pid=23988)[0m     @     0x7fb9a15128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23937)[0m     @     0x7ef3ffb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=23930)[0m     @     0x7fc4a070e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23930)[0m     @     0x7fc4a07118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23921)[0m     @     0x7f7a980cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23921)[0m     @     0x7f7a977f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23925)[0m     @     0x7fb4e31737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23925)[0m     @     0x7fb4e31768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23954)[0m     @     0x7f4830ba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23954)[0m     @     0x7f4830ba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=23943)[0m     @     0x7fa2cf7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=23943)[0m     @     0x7fa2d00deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23943)[0m     @     0x7fa2d0101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23979)[0m     @     0x7f92b128dad3 at::TensorIterator::for_each()
[2m[36m(pid=23979)[0m     @     0x7f92b128dd91 at::TensorIterator::for_each()
[2m[36m(pid=23979)[0m     @     0x7f92b1b70b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23979)[0m     @     0x7f92b1b93c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23888)[0m     @     0x7f523d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23888)[0m     @     0x7f523d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=23931)[0m     @     0x7fa59133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23931)[0m     @     0x7fa59133bad3 at::TensorIterator::for_each()
[2m[36m(pid=23889)[0m     @     0x7f35151357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23889)[0m     @     0x7f35151388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23961)[0m     @     0x7fa4ac2b38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23961)[0m     @     0x7fa4ac2b3ad3 at::TensorIterator::for_each()
[2m[36m(pid=23961)[0m     @     0x7fa4ac2b3d91 at::TensorIterator::for_each()
[2m[36m(pid=23876)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23876)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23876)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23941)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23941)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23941)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23941)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23941)[0m *** SIGSEGV (@0x0) received by PID 23941 (TID 0x7ff3ad4e7700) from PID 0; stack trace: ***
[2m[36m(pid=23882)[0m     @     0x7f3888336f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23882)[0m     @     0x7f3887a617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23882)[0m     @     0x7f3887a648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23882)[0m     @     0x7f3887a64ad3 at::TensorIterator::for_each()
[2m[36m(pid=23890)[0m     @     0x7f7776d6a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23890)[0m     @     0x7f7776d6aad3 at::TensorIterator::for_each()
[2m[36m(pid=23890)[0m     @     0x7f7776d6ad91 at::TensorIterator::for_each()
[2m[36m(pid=23934)[0m     @     0x7fb7c5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23934)[0m     @     0x7fb7c5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=23934)[0m     @     0x7fb7c5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=23934)[0m     @     0x7fb7c650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23934)[0m     @     0x7fb7c652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23934)[0m     @     0x7fb7c59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23934)[0m     @     0x7fb7c59cd388 at::native::copy_impl()
[2m[36m(pid=23855)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23855)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23855)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23855)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23855)[0m *** SIGSEGV (@0x0) received by PID 23855 (TID 0x7f14ac8ce700) from PID 0; stack trace: ***
[2m[36m(pid=23855)[0m     @     0x7f14ac4a7390 (unknown)
[2m[36m(pid=23938)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23938)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23938)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23938)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23938)[0m *** SIGSEGV (@0x0) received by PID 23938 (TID 0x7f900a3fa700) from PID 0; stack trace: ***
[2m[36m(pid=23963)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23963)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23963)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23963)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23963)[0m *** SIGSEGV (@0x0) received by PID 23963 (TID 0x7f5b850d8700) from PID 0; stack trace: ***
[2m[36m(pid=23945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23945)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23945)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23945)[0m *** SIGSEGV (@0x0) received by PID 23945 (TID 0x7f9e222bf700) from PID 0; stack trace: ***
[2m[36m(pid=23982)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23982)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23982)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23982)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23982)[0m *** SIGSEGV (@0x0) received by PID 23982 (TID 0x7fd2aa728700) from PID 0; stack trace: ***
[2m[36m(pid=23856)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23856)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23856)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23856)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23856)[0m *** SIGSEGV (@0x0) received by PID 23856 (TID 0x7f786e41d700) from PID 0; stack trace: ***
[2m[36m(pid=23856)[0m     @     0x7f786dff6390 (unknown)
[2m[36m(pid=23856)[0m     @     0x7f496de24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23939)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23939)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23939)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23949)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23949)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23949)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23949)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23949)[0m *** SIGSEGV (@0x0) received by PID 23949 (TID 0x7fb34d62d700) from PID 0; stack trace: ***
[2m[36m(pid=23935)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23935)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23935)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23935)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23935)[0m *** SIGSEGV (@0x0) received by PID 23935 (TID 0x7f02e1ab6700) from PID 0; stack trace: ***
[2m[36m(pid=23924)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23924)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23924)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23924)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23924)[0m *** SIGSEGV (@0x0) received by PID 23924 (TID 0x7f41ae64e700) from PID 0; stack trace: ***
[2m[36m(pid=23924)[0m     @     0x7f41ae227390 (unknown)
[2m[36m(pid=23878)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23878)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23878)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23878)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23878)[0m *** SIGSEGV (@0x0) received by PID 23878 (TID 0x7fc27d3be700) from PID 0; stack trace: ***
[2m[36m(pid=23878)[0m     @     0x7fc27cf97390 (unknown)
[2m[36m(pid=23919)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23919)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23919)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23919)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23919)[0m *** SIGSEGV (@0x0) received by PID 23919 (TID 0x7fd8989da700) from PID 0; stack trace: ***
[2m[36m(pid=23919)[0m     @     0x7fd8985b3390 (unknown)
[2m[36m(pid=23919)[0m     @     0x7fa998339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23919)[0m     @     0x7fa997a647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23932)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23932)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23932)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23932)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23932)[0m *** SIGSEGV (@0x0) received by PID 23932 (TID 0x7f5203d54700) from PID 0; stack trace: ***
[2m[36m(pid=23850)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23850)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23850)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23923)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23923)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23923)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23923)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23923)[0m *** SIGSEGV (@0x0) received by PID 23923 (TID 0x7f872bba7700) from PID 0; stack trace: ***
[2m[36m(pid=23953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23953)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23871)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23871)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23871)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23871)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23871)[0m *** SIGSEGV (@0x0) received by PID 23871 (TID 0x7fea02aa5700) from PID 0; stack trace: ***
[2m[36m(pid=23852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23852)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23852)[0m *** SIGSEGV (@0x0) received by PID 23852 (TID 0x7f745652d700) from PID 0; stack trace: ***
[2m[36m(pid=23852)[0m     @     0x7f7456106390 (unknown)
[2m[36m(pid=23852)[0m     @     0x7f4555f8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23852)[0m     @     0x7f45556b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23942)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23942)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23942)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23942)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23942)[0m *** SIGSEGV (@0x0) received by PID 23942 (TID 0x7f70cb25c700) from PID 0; stack trace: ***
[2m[36m(pid=23914)[0m     @     0x7ef1ccc11d91 at::TensorIterator::for_each()
[2m[36m(pid=23914)[0m     @     0x7ef1cd4f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23914)[0m     @     0x7ef1cd517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23914)[0m     @     0x7ef1cc9b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23914)[0m     @     0x7ef1cc9b7388 at::native::copy_impl()
[2m[36m(pid=23914)[0m     @     0x7ef1cc9b95a4 at::native::copy_()
[2m[36m(pid=23969)[0m     @     0x7f575bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=23969)[0m     @     0x7f575c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23969)[0m     @     0x7f575c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23969)[0m     @     0x7f575bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23969)[0m     @     0x7f575bc48388 at::native::copy_impl()
[2m[36m(pid=23969)[0m     @     0x7f575bc4a5a4 at::native::copy_()
[2m[36m(pid=23969)[0m     @     0x7f575c3354f5 at::Tensor::copy_()
[2m[36m(pid=23969)[0m     @     0x7f575e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23857)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23857)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23857)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23857)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23857)[0m *** SIGSEGV (@0x0) received by PID 23857 (TID 0x7f7d0cb33700) from PID 0; stack trace: ***
[2m[36m(pid=23857)[0m     @     0x7f7d0c70c390 (unknown)
[2m[36m(pid=23857)[0m     @     0x7f4e0c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23857)[0m     @     0x7f4e0bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23857)[0m     @     0x7f4e0bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23861)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23861)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23861)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23861)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23861)[0m *** SIGSEGV (@0x0) received by PID 23861 (TID 0x7f8d66b04700) from PID 0; stack trace: ***
[2m[36m(pid=23861)[0m     @     0x7f8d666dd390 (unknown)
[2m[36m(pid=23861)[0m     @     0x7f5e6666bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23861)[0m     @     0x7f5e65d967db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23861)[0m     @     0x7f5e65d998f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23990)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23990)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23990)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23990)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23990)[0m *** SIGSEGV (@0x0) received by PID 23990 (TID 0x7f1ce0d58700) from PID 0; stack trace: ***
[2m[36m(pid=23990)[0m     @     0x7f1ce0931390 (unknown)
[2m[36m(pid=23990)[0m     @     0x7eede08d9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23990)[0m     @     0x7eede00047db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23967)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23967)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23967)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23967)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23967)[0m *** SIGSEGV (@0x0) received by PID 23967 (TID 0x7f438d57f700) from PID 0; stack trace: ***
[2m[36m(pid=23967)[0m     @     0x7f438d158390 (unknown)
[2m[36m(pid=23967)[0m     @     0x7f148d0f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23967)[0m     @     0x7f148c8247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23972)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23972)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23972)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23972)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23972)[0m *** SIGSEGV (@0x0) received by PID 23972 (TID 0x7f8fffa7a700) from PID 0; stack trace: ***
[2m[36m(pid=23972)[0m     @     0x7f8fff653390 (unknown)
[2m[36m(pid=23972)[0m     @     0x7f60ff5eff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23972)[0m     @     0x7f60fed1a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23866)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23866)[0m *** SIGSEGV (@0x0) received by PID 23866 (TID 0x7f59eddce700) from PID 0; stack trace: ***
[2m[36m(pid=23866)[0m     @     0x7f59ed9a7390 (unknown)
[2m[36m(pid=23866)[0m     @     0x7f2aed7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23866)[0m     @     0x7f2aecf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23867)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23867)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23867)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23867)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23867)[0m *** SIGSEGV (@0x0) received by PID 23867 (TID 0x7fde5faa7700) from PID 0; stack trace: ***
[2m[36m(pid=23867)[0m     @     0x7fde5f680390 (unknown)
[2m[36m(pid=23867)[0m     @     0x7faf5f61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23867)[0m     @     0x7faf5ed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23867)[0m     @     0x7faf5ed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23951)[0m     @     0x7f79a0492d91 at::TensorIterator::for_each()
[2m[36m(pid=23951)[0m     @     0x7f79a0d75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23951)[0m     @     0x7f79a0d98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23951)[0m     @     0x7f79a023aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23951)[0m     @     0x7f79a0238388 at::native::copy_impl()
[2m[36m(pid=23951)[0m     @     0x7f79a023a5a4 at::native::copy_()
[2m[36m(pid=23873)[0m     @     0x7f5987d8dad3 at::TensorIterator::for_each()
[2m[36m(pid=23873)[0m     @     0x7f5987d8dd91 at::TensorIterator::for_each()
[2m[36m(pid=23873)[0m     @     0x7f5988670b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23873)[0m     @     0x7f5988693c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23873)[0m     @     0x7f5987b35a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23873)[0m     @     0x7f5987b33388 at::native::copy_impl()
[2m[36m(pid=23873)[0m     @     0x7f5987b355a4 at::native::copy_()
[2m[36m(pid=23944)[0m     @     0x7f8e8d868d91 at::TensorIterator::for_each()
[2m[36m(pid=23944)[0m     @     0x7f8e8e14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23944)[0m     @     0x7f8e8e16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23944)[0m     @     0x7f8e8d610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23944)[0m     @     0x7f8e8d60e388 at::native::copy_impl()
[2m[36m(pid=23944)[0m     @     0x7f8e8d6105a4 at::native::copy_()
[2m[36m(pid=23958)[0m     @     0x7f87283a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=23958)[0m     @     0x7f87283a2d91 at::TensorIterator::for_each()
[2m[36m(pid=23958)[0m     @     0x7f8728c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23958)[0m     @     0x7f8728ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23958)[0m     @     0x7f872814aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23958)[0m     @     0x7f8728148388 at::native::copy_impl()
[2m[36m(pid=23986)[0m     @     0x7f1e1740ed91 at::TensorIterator::for_each()
[2m[36m(pid=23986)[0m     @     0x7f1e17cf1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23986)[0m     @     0x7f1e17d14c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23986)[0m     @     0x7f1e171b6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23986)[0m     @     0x7f1e171b4388 at::native::copy_impl()
[2m[36m(pid=23986)[0m     @     0x7f1e171b65a4 at::native::copy_()
[2m[36m(pid=23986)[0m     @     0x7f1e178a14f5 at::Tensor::copy_()
[2m[36m(pid=23986)[0m     @     0x7f1e19d748de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23946)[0m     @     0x7f97d300cd91 at::TensorIterator::for_each()
[2m[36m(pid=23946)[0m     @     0x7f97d38efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23946)[0m     @     0x7f97d3912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23946)[0m     @     0x7f97d2db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23946)[0m     @     0x7f97d2db2388 at::native::copy_impl()
[2m[36m(pid=23946)[0m     @     0x7f97d2db45a4 at::native::copy_()
[2m[36m(pid=23970)[0m     @     0x7f7b02db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23970)[0m     @     0x7f7b02db2388 at::native::copy_impl()
[2m[36m(pid=23970)[0m     @     0x7f7b02db45a4 at::native::copy_()
[2m[36m(pid=23970)[0m     @     0x7f7b0349f4f5 at::Tensor::copy_()
[2m[36m(pid=23970)[0m     @     0x7f7b059728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23970)[0m     @     0x7f7b0349f4f5 at::Tensor::copy_()
[2m[36m(pid=23970)[0m     @     0x7f7b0954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23970)[0m     @     0x55bb44148fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23970)[0m     @     0x55bb440a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23970)[0m     @     0x55bb4412ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23970)[0m     @     0x55bb4412fa20 method_vectorcall
[2m[36m(pid=23970)[0m     @     0x55bb440a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23970)[0m     @     0x55bb4412ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23970)[0m     @     0x55bb4412f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23970)[0m     @     0x55bb440a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23970)[0m     @     0x55bb4412ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23970)[0m     @     0x55bb4412f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23970)[0m     @     0x55bb440a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23970)[0m     @     0x55bb4412ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23970)[0m     @     0x55bb4412f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23970)[0m     @     0x55bb440a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23970)[0m     @     0x55bb4412ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23970)[0m     @     0x55bb4412f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23940)[0m     @     0x7f6f581b9d91 at::TensorIterator::for_each()
[2m[36m(pid=23940)[0m     @     0x7f6f58a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23940)[0m     @     0x7f6f58abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23940)[0m     @     0x7f6f57f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23940)[0m     @     0x7f6f57f5f388 at::native::copy_impl()
[2m[36m(pid=23940)[0m     @     0x7f6f57f615a4 at::native::copy_()
[2m[36m(pid=23940)[0m     @     0x7f6f5864c4f5 at::Tensor::copy_()
[2m[36m(pid=23964)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23964)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23964)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23964)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23964)[0m *** SIGSEGV (@0x0) received by PID 23964 (TID 0x7f8021d49700) from PID 0; stack trace: ***
[2m[36m(pid=23964)[0m     @     0x7f8021922390 (unknown)
[2m[36m(pid=23964)[0m     @     0x7f51217f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23964)[0m     @     0x7f5120f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23864)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23864)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23864)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23864)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23864)[0m *** SIGSEGV (@0x0) received by PID 23864 (TID 0x7f4c38c84700) from PID 0; stack trace: ***
[2m[36m(pid=23864)[0m     @     0x7f4c3885d390 (unknown)
[2m[36m(pid=23864)[0m     @     0x7f1d38774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23864)[0m     @     0x7f1d37e9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23863)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23863)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23863)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23863)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23863)[0m *** SIGSEGV (@0x0) received by PID 23863 (TID 0x7fdfbd5f5700) from PID 0; stack trace: ***
[2m[36m(pid=23863)[0m     @     0x7fdfbd1ce390 (unknown)
[2m[36m(pid=23863)[0m     @     0x7fb0bd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23863)[0m     @     0x7fb0bc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23863)[0m     @     0x7fb0bc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23965)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23965)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23965)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23965)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23965)[0m *** SIGSEGV (@0x0) received by PID 23965 (TID 0x7fd95b6a7700) from PID 0; stack trace: ***
[2m[36m(pid=23965)[0m     @     0x7fd95b280390 (unknown)
[2m[36m(pid=23965)[0m     @     0x7faa5b1fcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23965)[0m     @     0x7faa5a9277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23929)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23929)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23929)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23929)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23929)[0m *** SIGSEGV (@0x0) received by PID 23929 (TID 0x7fa027838700) from PID 0; stack trace: ***
[2m[36m(pid=23929)[0m     @     0x7fa027411390 (unknown)
[2m[36m(pid=23929)[0m     @     0x7f7127229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23929)[0m     @     0x7f71269547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23933)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23933)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23933)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23933)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23933)[0m *** SIGSEGV (@0x0) received by PID 23933 (TID 0x7fbb1425b700) from PID 0; stack trace: ***
[2m[36m(pid=23933)[0m     @     0x7fbb13e34390 (unknown)
[2m[36m(pid=23933)[0m     @     0x7f8c13de6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23933)[0m     @     0x7f8c135117db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23859)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23859)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23859)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23859)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23859)[0m *** SIGSEGV (@0x0) received by PID 23859 (TID 0x7f43d303b700) from PID 0; stack trace: ***
[2m[36m(pid=23859)[0m     @     0x7f43d2c14390 (unknown)
[2m[36m(pid=23859)[0m     @     0x7f14d2a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23874)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23874)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23874)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23874)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23874)[0m *** SIGSEGV (@0x0) received by PID 23874 (TID 0x7f2d2996c700) from PID 0; stack trace: ***
[2m[36m(pid=23874)[0m     @     0x7f2d29545390 (unknown)
[2m[36m(pid=23874)[0m     @     0x7efe294e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23874)[0m     @     0x7efe28c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23881)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23881)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23881)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23881)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23881)[0m *** SIGSEGV (@0x0) received by PID 23881 (TID 0x7f5c83c71700) from PID 0; stack trace: ***
[2m[36m(pid=23881)[0m     @     0x7f5c8384a390 (unknown)
[2m[36m(pid=23881)[0m     @     0x7f2d837cef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23881)[0m     @     0x7f2d82ef97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23922)[0m     @     0x7eff6302ed91 at::TensorIterator::for_each()
[2m[36m(pid=23922)[0m     @     0x7eff63911b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23922)[0m     @     0x7eff63934c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23922)[0m     @     0x7eff62dd6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23922)[0m     @     0x7eff62dd4388 at::native::copy_impl()
[2m[36m(pid=23922)[0m     @     0x7eff62dd65a4 at::native::copy_()
[2m[36m(pid=23974)[0m     @     0x7f093a0fad91 at::TensorIterator::for_each()
[2m[36m(pid=23974)[0m     @     0x7f093a9ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23974)[0m     @     0x7f093aa00c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23974)[0m     @     0x7f0939ea2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23974)[0m     @     0x7f0939ea0388 at::native::copy_impl()
[2m[36m(pid=23974)[0m     @     0x7f0939ea25a4 at::native::copy_()
[2m[36m(pid=23974)[0m     @     0x7f093a58d4f5 at::Tensor::copy_()
[2m[36m(pid=23974)[0m     @     0x7f093ca608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23928)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23928)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23928)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23928)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23928)[0m *** SIGSEGV (@0x0) received by PID 23928 (TID 0x7ff131592700) from PID 0; stack trace: ***
[2m[36m(pid=23928)[0m     @     0x7ff13116b390 (unknown)
[2m[36m(pid=23869)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23869)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23869)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23869)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23869)[0m *** SIGSEGV (@0x0) received by PID 23869 (TID 0x7f59dd211700) from PID 0; stack trace: ***
[2m[36m(pid=23988)[0m     @     0x7fb9a1512ad3 at::TensorIterator::for_each()
[2m[36m(pid=23988)[0m     @     0x7fb9a1512d91 at::TensorIterator::for_each()
[2m[36m(pid=23988)[0m     @     0x7fb9a1df5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23988)[0m     @     0x7fb9a1e18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23988)[0m     @     0x7fb9a12baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23988)[0m     @     0x7fb9a12b8388 at::native::copy_impl()
[2m[36m(pid=23937)[0m     @     0x7ef3ffb11d91 at::TensorIterator::for_each()
[2m[36m(pid=23937)[0m     @     0x7ef4003f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23937)[0m     @     0x7ef400417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23937)[0m     @     0x7ef3ff8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23937)[0m     @     0x7ef3ff8b7388 at::native::copy_impl()
[2m[36m(pid=23937)[0m     @     0x7ef3ff8b95a4 at::native::copy_()
[2m[36m(pid=23937)[0m     @     0x7ef3fffa44f5 at::Tensor::copy_()
[2m[36m(pid=23937)[0m     @     0x7ef4024778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23930)[0m     @     0x7fc4a0711ad3 at::TensorIterator::for_each()
[2m[36m(pid=23930)[0m     @     0x7fc4a0711d91 at::TensorIterator::for_each()
[2m[36m(pid=23930)[0m     @     0x7fc4a0ff4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23930)[0m     @     0x7fc4a1017c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23930)[0m     @     0x7fc4a04b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23930)[0m     @     0x7fc4a04b7388 at::native::copy_impl()
[2m[36m(pid=23930)[0m     @     0x7fc4a04b95a4 at::native::copy_()
[2m[36m(pid=23930)[0m     @     0x7fc4a0ba44f5 at::Tensor::copy_()
[2m[36m(pid=23887)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23887)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23887)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23887)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23887)[0m *** SIGSEGV (@0x0) received by PID 23887 (TID 0x7f88b8853700) from PID 0; stack trace: ***
[2m[36m(pid=23887)[0m     @     0x7f88b842c390 (unknown)
[2m[36m(pid=23887)[0m     @     0x7f59b8333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23887)[0m     @     0x7f59b7a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23887)[0m     @     0x7f59b7a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23927)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23927)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23927)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23927)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23927)[0m *** SIGSEGV (@0x0) received by PID 23927 (TID 0x7f15957a4700) from PID 0; stack trace: ***
[2m[36m(pid=23927)[0m     @     0x7f159537d390 (unknown)
[2m[36m(pid=23927)[0m     @     0x7ee694d87f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23927)[0m     @     0x7ee6944b27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23927)[0m     @     0x7ee6944b58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23978)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23978)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23978)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23978)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23978)[0m *** SIGSEGV (@0x0) received by PID 23978 (TID 0x7fc865f03700) from PID 0; stack trace: ***
[2m[36m(pid=23978)[0m     @     0x7fc865adc390 (unknown)
[2m[36m(pid=23978)[0m     @     0x7f9965a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23978)[0m     @     0x7f99651357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23978)[0m     @     0x7f99651388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23851)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23851)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23851)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23851)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23851)[0m *** SIGSEGV (@0x0) received by PID 23851 (TID 0x7f60e7e5a700) from PID 0; stack trace: ***
[2m[36m(pid=23851)[0m     @     0x7f60e7a33390 (unknown)
[2m[36m(pid=23851)[0m     @     0x7f31e7751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23851)[0m     @     0x7f31e6e7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23868)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23868)[0m *** SIGSEGV (@0x0) received by PID 23868 (TID 0x7ff94d7a7700) from PID 0; stack trace: ***
[2m[36m(pid=23868)[0m     @     0x7ff94d380390 (unknown)
[2m[36m(pid=23868)[0m     @     0x7fca4d30af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23868)[0m     @     0x7fca4ca357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23860)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23860)[0m *** SIGSEGV (@0x0) received by PID 23860 (TID 0x7f468c3b6700) from PID 0; stack trace: ***
[2m[36m(pid=23860)[0m     @     0x7f468bf8f390 (unknown)
[2m[36m(pid=23860)[0m     @     0x7f178beb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23860)[0m     @     0x7f178b5e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23860)[0m     @     0x7f178b5e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23921)[0m     @     0x7f7a977fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23921)[0m     @     0x7f7a977fbad3 at::TensorIterator::for_each()
[2m[36m(pid=23921)[0m     @     0x7f7a977fbd91 at::TensorIterator::for_each()
[2m[36m(pid=23921)[0m     @     0x7f7a980deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23921)[0m     @     0x7f7a98101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23921)[0m     @     0x7f7a975a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23921)[0m     @     0x7f7a975a1388 at::native::copy_impl()
[2m[36m(pid=23925)[0m     @     0x7fb4e3176ad3 at::TensorIterator::for_each()
[2m[36m(pid=23925)[0m     @     0x7fb4e3176d91 at::TensorIterator::for_each()
[2m[36m(pid=23925)[0m     @     0x7fb4e3a59b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23925)[0m     @     0x7fb4e3a7cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23925)[0m     @     0x7fb4e2f1ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23925)[0m     @     0x7fb4e2f1c388 at::native::copy_impl()
[2m[36m(pid=23954)[0m     @     0x7f4830ba4d91 at::TensorIterator::for_each()
[2m[36m(pid=23954)[0m     @     0x7f4831487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23954)[0m     @     0x7f48314aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23954)[0m     @     0x7f483094ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23954)[0m     @     0x7f483094a388 at::native::copy_impl()
[2m[36m(pid=23954)[0m     @     0x7f483094c5a4 at::native::copy_()
[2m[36m(pid=23954)[0m     @     0x7f48310374f5 at::Tensor::copy_()
[2m[36m(pid=23943)[0m     @     0x7fa2cf5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23943)[0m     @     0x7fa2cf5a1388 at::native::copy_impl()
[2m[36m(pid=23943)[0m     @     0x7fa2cf5a35a4 at::native::copy_()
[2m[36m(pid=23943)[0m     @     0x7fa2cfc8e4f5 at::Tensor::copy_()
[2m[36m(pid=23943)[0m     @     0x7fa2d21618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23943)[0m     @     0x7fa2cfc8e4f5 at::Tensor::copy_()
[2m[36m(pid=23943)[0m     @     0x7fa2d5d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23943)[0m     @     0x562fd0773fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23943)[0m     @     0x562fd06ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23943)[0m     @     0x562fd0759baf _PyEval_EvalCodeWithName
[2m[36m(pid=23943)[0m     @     0x562fd075aa20 method_vectorcall
[2m[36m(pid=23943)[0m     @     0x562fd06cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23943)[0m     @     0x562fd0759baf _PyEval_EvalCodeWithName
[2m[36m(pid=23943)[0m     @     0x562fd075a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23943)[0m     @     0x562fd06cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23943)[0m     @     0x562fd0759baf _PyEval_EvalCodeWithName
[2m[36m(pid=23943)[0m     @     0x562fd075a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23943)[0m     @     0x562fd06cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23943)[0m     @     0x562fd0759baf _PyEval_EvalCodeWithName
[2m[36m(pid=23943)[0m     @     0x562fd075a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23943)[0m     @     0x562fd06cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23979)[0m     @     0x7f92b1035a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23979)[0m     @     0x7f92b1033388 at::native::copy_impl()
[2m[36m(pid=23979)[0m     @     0x7f92b10355a4 at::native::copy_()
[2m[36m(pid=23979)[0m     @     0x7f92b17204f5 at::Tensor::copy_()
[2m[36m(pid=23979)[0m     @     0x7f92b3bf38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23979)[0m     @     0x7f92b17204f5 at::Tensor::copy_()
[2m[36m(pid=23926)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23926)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23926)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23926)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23926)[0m *** SIGSEGV (@0x0) received by PID 23926 (TID 0x7f3af4850700) from PID 0; stack trace: ***
[2m[36m(pid=23926)[0m     @     0x7f3af4429390 (unknown)
[2m[36m(pid=23926)[0m     @     0x7f0bf4333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23926)[0m     @     0x7f0bf3a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23926)[0m     @     0x7f0bf3a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23888)[0m     @     0x7f523d138d91 at::TensorIterator::for_each()
[2m[36m(pid=23888)[0m     @     0x7f523da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23888)[0m     @     0x7f523da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23888)[0m     @     0x7f523cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23888)[0m     @     0x7f523cede388 at::native::copy_impl()
[2m[36m(pid=23888)[0m     @     0x7f523cee05a4 at::native::copy_()
[2m[36m(pid=23854)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23854)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23854)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23854)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23854)[0m *** SIGSEGV (@0x0) received by PID 23854 (TID 0x7f14952a4700) from PID 0; stack trace: ***
[2m[36m(pid=23854)[0m     @     0x7f1494e7d390 (unknown)
[2m[36m(pid=23854)[0m     @     0x7ee594e12f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23854)[0m     @     0x7ee59453d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23854)[0m     @     0x7ee5945408f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23862)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23862)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23862)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23862)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23862)[0m *** SIGSEGV (@0x0) received by PID 23862 (TID 0x7ffa2b53d700) from PID 0; stack trace: ***
[2m[36m(pid=23862)[0m     @     0x7ffa2b116390 (unknown)
[2m[36m(pid=23862)[0m     @     0x7fcb2b0b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23862)[0m     @     0x7fcb2a7e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23862)[0m     @     0x7fcb2a7e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23931)[0m     @     0x7fa59133bd91 at::TensorIterator::for_each()
[2m[36m(pid=23931)[0m     @     0x7fa591c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23931)[0m     @     0x7fa591c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23931)[0m     @     0x7fa5910e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23931)[0m     @     0x7fa5910e1388 at::native::copy_impl()
[2m[36m(pid=23931)[0m     @     0x7fa5910e35a4 at::native::copy_()
[2m[36m(pid=23931)[0m     @     0x7fa5917ce4f5 at::Tensor::copy_()
[2m[36m(pid=23931)[0m     @     0x7fa593ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23889)[0m     @     0x7f3515138ad3 at::TensorIterator::for_each()
[2m[36m(pid=23889)[0m     @     0x7f3515138d91 at::TensorIterator::for_each()
[2m[36m(pid=23889)[0m     @     0x7f3515a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23889)[0m     @     0x7f3515a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23889)[0m     @     0x7f3514ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23889)[0m     @     0x7f3514ede388 at::native::copy_impl()
[2m[36m(pid=23889)[0m     @     0x7f3514ee05a4 at::native::copy_()
[2m[36m(pid=23889)[0m     @     0x7f35155cb4f5 at::Tensor::copy_()
[2m[36m(pid=23961)[0m     @     0x7fa4acb96b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23961)[0m     @     0x7fa4acbb9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23961)[0m     @     0x7fa4ac05ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23961)[0m     @     0x7fa4ac059388 at::native::copy_impl()
[2m[36m(pid=23961)[0m     @     0x7fa4ac05b5a4 at::native::copy_()
[2m[36m(pid=23961)[0m     @     0x7fa4ac7464f5 at::Tensor::copy_()
[2m[36m(pid=23876)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23876)[0m *** SIGSEGV (@0x0) received by PID 23876 (TID 0x7f680a51b700) from PID 0; stack trace: ***
[2m[36m(pid=23876)[0m     @     0x7f680a0f4390 (unknown)
[2m[36m(pid=23876)[0m     @     0x7f390a0a8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23876)[0m     @     0x7f39097d37db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23876)[0m     @     0x7f39097d68f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23941)[0m     @     0x7ff3ad0c0390 (unknown)
[2m[36m(pid=23941)[0m     @     0x7fc4ad048f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23941)[0m     @     0x7fc4ac7737db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23941)[0m     @     0x7fc4ac7768f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23882)[0m     @     0x7f3887a64d91 at::TensorIterator::for_each()
[2m[36m(pid=23882)[0m     @     0x7f3888347b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23882)[0m     @     0x7f388836ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23882)[0m     @     0x7f388780ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23882)[0m     @     0x7f388780a388 at::native::copy_impl()
[2m[36m(pid=23890)[0m     @     0x7f777764db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23890)[0m     @     0x7f7777670c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23890)[0m     @     0x7f7776b12a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23890)[0m     @     0x7f7776b10388 at::native::copy_impl()
[2m[36m(pid=23890)[0m     @     0x7f7776b125a4 at::native::copy_()
[2m[36m(pid=23934)[0m     @     0x7fb7c59cf5a4 at::native::copy_()
[2m[36m(pid=23934)[0m     @     0x7fb7c60ba4f5 at::Tensor::copy_()
[2m[36m(pid=23934)[0m     @     0x7fb7c858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23855)[0m     @     0x7ee5ac333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23855)[0m     @     0x7ee5aba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23855)[0m     @     0x7ee5aba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23855)[0m     @     0x7ee5aba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=23938)[0m     @     0x7f9009fd3390 (unknown)
[2m[36m(pid=23938)[0m     @     0x7f6109e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23938)[0m     @     0x7f610954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23938)[0m     @     0x7f61095528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23963)[0m     @     0x7f5b84cb1390 (unknown)
[2m[36m(pid=23963)[0m     @     0x7f2c84a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23963)[0m     @     0x7f2c841b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23963)[0m     @     0x7f2c841b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23945)[0m     @     0x7f9e21e98390 (unknown)
[2m[36m(pid=23945)[0m     @     0x7f6f21e3cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23945)[0m     @     0x7f6f215677db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23945)[0m     @     0x7f6f2156a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23982)[0m     @     0x7fd2aa301390 (unknown)
[2m[36m(pid=23982)[0m     @     0x7fa3aa2b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23982)[0m     @     0x7fa3a99e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23982)[0m     @     0x7fa3a99e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23856)[0m     @     0x7f496d54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23856)[0m     @     0x7f496d5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23856)[0m     @     0x7f496d552ad3 at::TensorIterator::for_each()
[2m[36m(pid=23936)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23936)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23936)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23936)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23936)[0m *** SIGSEGV (@0x0) received by PID 23936 (TID 0x7f32f025c700) from PID 0; stack trace: ***
[2m[36m(pid=23936)[0m     @     0x7f32efe35390 (unknown)
[2m[36m(pid=23936)[0m     @     0x7f03efddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23939)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23939)[0m *** SIGSEGV (@0x0) received by PID 23939 (TID 0x7f261036d700) from PID 0; stack trace: ***
[2m[36m(pid=23939)[0m     @     0x7f260ff46390 (unknown)
[2m[36m(pid=23939)[0m     @     0x7ef70fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23939)[0m     @     0x7ef70f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23920)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23920)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23920)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23920)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23920)[0m *** SIGSEGV (@0x0) received by PID 23920 (TID 0x7f6774c6a700) from PID 0; stack trace: ***
[2m[36m(pid=23920)[0m     @     0x7f6774843390 (unknown)
[2m[36m(pid=23865)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23865)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23865)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23865)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23865)[0m *** SIGSEGV (@0x0) received by PID 23865 (TID 0x7f7cb2c34700) from PID 0; stack trace: ***
[2m[36m(pid=23865)[0m     @     0x7f7cb280d390 (unknown)
[2m[36m(pid=23865)[0m     @     0x7f4db2601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23865)[0m     @     0x7f4db1d2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23949)[0m     @     0x7fb34d206390 (unknown)
[2m[36m(pid=23949)[0m     @     0x7f844d166f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23949)[0m     @     0x7f844c8917db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23949)[0m     @     0x7f844c8948f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23935)[0m     @     0x7f02e168f390 (unknown)
[2m[36m(pid=23935)[0m     @     0x7ed3e1607f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23935)[0m     @     0x7ed3e0d327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23935)[0m     @     0x7ed3e0d358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23924)[0m     @     0x7f12ae13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23924)[0m     @     0x7f12ad8657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23924)[0m     @     0x7f12ad8688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23924)[0m     @     0x7f12ad868ad3 at::TensorIterator::for_each()
[2m[36m(pid=23878)[0m     @     0x7f937cf22f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23878)[0m     @     0x7f937c64d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23878)[0m     @     0x7f937c6508f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23878)[0m     @     0x7f937c650ad3 at::TensorIterator::for_each()
[2m[36m(pid=23919)[0m     @     0x7fa997a678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23919)[0m     @     0x7fa997a67ad3 at::TensorIterator::for_each()
[2m[36m(pid=23919)[0m     @     0x7fa997a67d91 at::TensorIterator::for_each()
[2m[36m(pid=23932)[0m     @     0x7f520392d390 (unknown)
[2m[36m(pid=23932)[0m     @     0x7f23038b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23932)[0m     @     0x7f2302fdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23932)[0m     @     0x7f2302fdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23932)[0m     @     0x7f2302fdfad3 at::TensorIterator::for_each()
[2m[36m(pid=23850)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23850)[0m *** SIGSEGV (@0x0) received by PID 23850 (TID 0x7f7d1f1f8700) from PID 0; stack trace: ***
[2m[36m(pid=23850)[0m     @     0x7f7d1edd1390 (unknown)
[2m[36m(pid=23850)[0m     @     0x7f4e1ed5ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23850)[0m     @     0x7f4e1e4897db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23849)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=23849)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=23849)[0m *** Aborted at 1604572542 (unix time) try "date -d @1604572542" if you are using GNU date ***
[2m[36m(pid=23849)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23849)[0m *** SIGSEGV (@0x0) received by PID 23849 (TID 0x7f95fe455700) from PID 0; stack trace: ***
[2m[36m(pid=23849)[0m     @     0x7f95fe02e390 (unknown)
[2m[36m(pid=23849)[0m     @     0x7f66fdd1df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23849)[0m     @     0x7f66fd4487db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23923)[0m     @     0x7f872b780390 (unknown)
[2m[36m(pid=23923)[0m     @     0x7f582b6aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23923)[0m     @     0x7f582add97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23923)[0m     @     0x7f582addc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23923)[0m     @     0x7f582addcad3 at::TensorIterator::for_each()
[2m[36m(pid=23953)[0m PC: @                0x0 (unknown)
[2m[36m(pid=23953)[0m *** SIGSEGV (@0x0) received by PID 23953 (TID 0x7fdc03c58700) from PID 0; stack trace: ***
[2m[36m(pid=23953)[0m     @     0x7fdc03831390 (unknown)
[2m[36m(pid=23953)[0m     @     0x7fad036aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23953)[0m     @     0x7fad02dd97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23871)[0m     @     0x7fea0267e390 (unknown)
[2m[36m(pid=23871)[0m     @     0x7fbb025a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23871)[0m     @     0x7fbb01ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23871)[0m     @     0x7fbb01cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23871)[0m     @     0x7fbb01cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=23852)[0m     @     0x7f45556bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23852)[0m     @     0x7f45556bbad3 at::TensorIterator::for_each()
[2m[36m(pid=23852)[0m     @     0x7f45556bbd91 at::TensorIterator::for_each()
[2m[36m(pid=23852)[0m     @     0x7f4555f9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23942)[0m     @     0x7f70cae35390 (unknown)
[2m[36m(pid=23942)[0m     @     0x7f41cadf0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23942)[0m     @     0x7f41ca51b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23942)[0m     @     0x7f41ca51e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23942)[0m     @     0x7f41ca51ead3 at::TensorIterator::for_each()
[2m[36m(pid=23914)[0m     @     0x7ef1cd0a44f5 at::Tensor::copy_()
[2m[36m(pid=23914)[0m     @     0x7ef1cf5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23914)[0m     @     0x7ef1cd0a44f5 at::Tensor::copy_()
[2m[36m(pid=23914)[0m     @     0x7ef1d314f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23914)[0m     @     0x563d2ba07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23914)[0m     @     0x563d2b962b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23914)[0m     @     0x563d2b9edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23914)[0m     @     0x563d2b9eea20 method_vectorcall
[2m[36m(pid=23914)[0m     @     0x563d2b962bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23914)[0m     @     0x563d2b9edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23914)[0m     @     0x563d2b9ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23914)[0m     @     0x563d2b963689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23969)[0m     @     0x7f575c3354f5 at::Tensor::copy_()
[2m[36m(pid=23969)[0m     @     0x7f57623e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23969)[0m     @     0x55809d4b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23969)[0m     @     0x55809d412b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23969)[0m     @     0x55809d49dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23969)[0m     @     0x55809d49ea20 method_vectorcall
[2m[36m(pid=23969)[0m     @     0x55809d412bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23969)[0m     @     0x55809d49dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23969)[0m     @     0x55809d49e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23969)[0m     @     0x55809d413689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23969)[0m     @     0x55809d49dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23969)[0m     @     0x55809d49e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23969)[0m     @     0x55809d413689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23969)[0m     @     0x55809d49dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23969)[0m     @     0x55809d49e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23969)[0m     @     0x55809d413689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23969)[0m     @     0x55809d49dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23969)[0m     @     0x55809d49e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23969)[0m     @     0x55809d413689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23857)[0m     @     0x7f4e0bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=23857)[0m     @     0x7f4e0bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=23857)[0m     @     0x7f4e0c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23861)[0m     @     0x7f5e65d99ad3 at::TensorIterator::for_each()
[2m[36m(pid=23861)[0m     @     0x7f5e65d99d91 at::TensorIterator::for_each()
[2m[36m(pid=23861)[0m     @     0x7f5e6667cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23990)[0m     @     0x7eede00078f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23990)[0m     @     0x7eede0007ad3 at::TensorIterator::for_each()
[2m[36m(pid=23990)[0m     @     0x7eede0007d91 at::TensorIterator::for_each()
[2m[36m(pid=23967)[0m     @     0x7f148c8278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23967)[0m     @     0x7f148c827ad3 at::TensorIterator::for_each()
[2m[36m(pid=23972)[0m     @     0x7f60fed1d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23972)[0m     @     0x7f60fed1dad3 at::TensorIterator::for_each()
[2m[36m(pid=23866)[0m     @     0x7f2aecf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23866)[0m     @     0x7f2aecf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=23867)[0m     @     0x7faf5ed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=23867)[0m     @     0x7faf5ed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=23867)[0m     @     0x7faf5f630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23951)[0m     @     0x7f79a09254f5 at::Tensor::copy_()
[2m[36m(pid=23951)[0m     @     0x7f79a2df88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23951)[0m     @     0x7f79a09254f5 at::Tensor::copy_()
[2m[36m(pid=23873)[0m     @     0x7f59882204f5 at::Tensor::copy_()
[2m[36m(pid=23873)[0m     @     0x7f598a6f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23873)[0m     @     0x7f59882204f5 at::Tensor::copy_()
[2m[36m(pid=23873)[0m     @     0x7f598e2cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23944)[0m     @     0x7f8e8dcfb4f5 at::Tensor::copy_()
[2m[36m(pid=23944)[0m     @     0x7f8e901ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23944)[0m     @     0x7f8e8dcfb4f5 at::Tensor::copy_()
2020-11-05 10:35:42,667	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=23958)[0m     @     0x7f872814a5a4 at::native::copy_()
[2m[36m(pid=23958)[0m     @     0x7f87288354f5 at::Tensor::copy_()
[2m[36m(pid=23958)[0m     @     0x7f872ad088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23986)[0m     @     0x7f1e178a14f5 at::Tensor::copy_()
[2m[36m(pid=23986)[0m     @     0x7f1e1d94c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23986)[0m     @     0x55ccb53edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23986)[0m     @     0x55ccb5348b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23986)[0m     @     0x55ccb53d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23986)[0m     @     0x55ccb53d4a20 method_vectorcall
[2m[36m(pid=23986)[0m     @     0x55ccb5348bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23986)[0m     @     0x55ccb53d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23986)[0m     @     0x55ccb53d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23986)[0m     @     0x55ccb5349689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23986)[0m     @     0x55ccb53d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23986)[0m     @     0x55ccb53d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23986)[0m     @     0x55ccb5349689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23986)[0m     @     0x55ccb53d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23986)[0m     @     0x55ccb53d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23986)[0m     @     0x55ccb5349689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23986)[0m     @     0x55ccb53d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23986)[0m     @     0x55ccb53d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23986)[0m     @     0x55ccb5349689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23946)[0m     @     0x7f97d349f4f5 at::Tensor::copy_()
[2m[36m(pid=23946)[0m     @     0x7f97d59728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23946)[0m     @     0x7f97d349f4f5 at::Tensor::copy_()
[2m[36m(pid=23970)[0m     @     0x55bb440a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23940)[0m     @     0x7f6f5ab1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23940)[0m     @     0x7f6f5864c4f5 at::Tensor::copy_()
[2m[36m(pid=23940)[0m     @     0x7f6f5e6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23940)[0m     @     0x55f11016cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23940)[0m     @     0x55f1100c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23940)[0m     @     0x55f110152baf _PyEval_EvalCodeWithName
[2m[36m(pid=23940)[0m     @     0x55f110153a20 method_vectorcall
[2m[36m(pid=23940)[0m     @     0x55f1100c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23940)[0m     @     0x55f110152baf _PyEval_EvalCodeWithName
[2m[36m(pid=23940)[0m     @     0x55f110153643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23940)[0m     @     0x55f1100c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23940)[0m     @     0x55f110152baf _PyEval_EvalCodeWithName
[2m[36m(pid=23940)[0m     @     0x55f110153643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23940)[0m     @     0x55f1100c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23940)[0m     @     0x55f110152baf _PyEval_EvalCodeWithName
[2m[36m(pid=23940)[0m     @     0x55f110153643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23940)[0m     @     0x55f1100c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23940)[0m     @     0x55f110152baf _PyEval_EvalCodeWithName
[2m[36m(pid=23940)[0m     @     0x55f110153643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23940)[0m     @     0x55f1100c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x7f5120f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23964)[0m     @     0x7f5120f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=23864)[0m     @     0x7f1d37ea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23864)[0m     @     0x7f1d37ea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=23863)[0m     @     0x7fb0bc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=23863)[0m     @     0x7fb0bc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=23863)[0m     @     0x7fb0bd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23965)[0m     @     0x7faa5a92a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23965)[0m     @     0x7faa5a92aad3 at::TensorIterator::for_each()
[2m[36m(pid=23929)[0m     @     0x7f71269578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23929)[0m     @     0x7f7126957ad3 at::TensorIterator::for_each()
[2m[36m(pid=23933)[0m     @     0x7f8c135148f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23933)[0m     @     0x7f8c13514ad3 at::TensorIterator::for_each()
[2m[36m(pid=23859)[0m     @     0x7f14d214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23859)[0m     @     0x7f14d214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23874)[0m     @     0x7efe28c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23874)[0m     @     0x7efe28c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=23881)[0m     @     0x7f2d82efc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23881)[0m     @     0x7f2d82efcad3 at::TensorIterator::for_each()
[2m[36m(pid=23922)[0m     @     0x7eff634c14f5 at::Tensor::copy_()
[2m[36m(pid=23922)[0m     @     0x7eff659948de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23922)[0m     @     0x7eff634c14f5 at::Tensor::copy_()
[2m[36m(pid=23922)[0m     @     0x7eff6956c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23922)[0m     @     0x55f5db5b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23922)[0m     @     0x55f5db512b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23922)[0m     @     0x55f5db59dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23922)[0m     @     0x55f5db59ea20 method_vectorcall
[2m[36m(pid=23922)[0m     @     0x55f5db512bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23922)[0m     @     0x55f5db59dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23922)[0m     @     0x55f5db59e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23922)[0m     @     0x55f5db513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23922)[0m     @     0x55f5db59dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23922)[0m     @     0x55f5db59e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23922)[0m     @     0x55f5db513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23974)[0m     @     0x7f093a58d4f5 at::Tensor::copy_()
[2m[36m(pid=23974)[0m     @     0x7f094063879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23974)[0m     @     0x56031b5f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23974)[0m     @     0x56031b554b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23974)[0m     @     0x56031b5dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23974)[0m     @     0x56031b5e0a20 method_vectorcall
[2m[36m(pid=23974)[0m     @     0x56031b554bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23974)[0m     @     0x56031b5dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23974)[0m     @     0x56031b5e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23974)[0m     @     0x56031b555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23974)[0m     @     0x56031b5dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23974)[0m     @     0x56031b5e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23974)[0m     @     0x56031b555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23974)[0m     @     0x56031b5dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23974)[0m     @     0x56031b5e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23974)[0m     @     0x56031b555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23974)[0m     @     0x56031b5dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23974)[0m     @     0x56031b5e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23974)[0m     @     0x56031b555689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x7fc2310b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23928)[0m     @     0x7fc2307e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23928)[0m     @     0x7fc2307e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23869)[0m     @     0x7f59dcdea390 (unknown)
[2m[36m(pid=23869)[0m     @     0x7f2adc97ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23869)[0m     @     0x7f2adc0aa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23988)[0m     @     0x7fb9a12ba5a4 at::native::copy_()
[2m[36m(pid=23988)[0m     @     0x7fb9a19a54f5 at::Tensor::copy_()
[2m[36m(pid=23988)[0m     @     0x7fb9a3e788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23937)[0m     @     0x7ef3fffa44f5 at::Tensor::copy_()
[2m[36m(pid=23937)[0m     @     0x7ef40604f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23937)[0m     @     0x55a2f4128fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23937)[0m     @     0x55a2f4083b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23937)[0m     @     0x55a2f410ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23937)[0m     @     0x55a2f410fa20 method_vectorcall
[2m[36m(pid=23937)[0m     @     0x55a2f4083bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23937)[0m     @     0x55a2f410ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23937)[0m     @     0x55a2f410f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23937)[0m     @     0x55a2f4084689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23937)[0m     @     0x55a2f410ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23937)[0m     @     0x55a2f410f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23937)[0m     @     0x55a2f4084689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23937)[0m     @     0x55a2f410ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23937)[0m     @     0x55a2f410f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23937)[0m     @     0x55a2f4084689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23937)[0m     @     0x55a2f410ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23937)[0m     @     0x55a2f410f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23937)[0m     @     0x55a2f4084689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23930)[0m     @     0x7fc4a30778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23930)[0m     @     0x7fc4a0ba44f5 at::Tensor::copy_()
[2m[36m(pid=23930)[0m     @     0x7fc4a6c4f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23930)[0m     @     0x55ae84654fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23930)[0m     @     0x55ae845afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23930)[0m     @     0x55ae8463abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23930)[0m     @     0x55ae8463ba20 method_vectorcall
[2m[36m(pid=23930)[0m     @     0x55ae845afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23930)[0m     @     0x55ae8463abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23930)[0m     @     0x55ae8463b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23930)[0m     @     0x55ae845b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23930)[0m     @     0x55ae8463abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23930)[0m     @     0x55ae8463b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23930)[0m     @     0x55ae845b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23930)[0m     @     0x55ae8463abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23930)[0m     @     0x55ae8463b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23930)[0m     @     0x55ae845b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23930)[0m     @     0x55ae8463abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23930)[0m     @     0x55ae8463b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23930)[0m     @     0x55ae845b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23887)[0m     @     0x7f59b7a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=23887)[0m     @     0x7f59b7a61d91 at::TensorIterator::for_each()
[2m[36m(pid=23887)[0m     @     0x7f59b8344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23887)[0m     @     0x7f59b8367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23927)[0m     @     0x7ee6944b5ad3 at::TensorIterator::for_each()
[2m[36m(pid=23927)[0m     @     0x7ee6944b5d91 at::TensorIterator::for_each()
[2m[36m(pid=23927)[0m     @     0x7ee694d98b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23927)[0m     @     0x7ee694dbbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23927)[0m     @     0x7ee69425da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23927)[0m     @     0x7ee69425b388 at::native::copy_impl()
[2m[36m(pid=23978)[0m     @     0x7f9965138ad3 at::TensorIterator::for_each()
[2m[36m(pid=23978)[0m     @     0x7f9965138d91 at::TensorIterator::for_each()
[2m[36m(pid=23978)[0m     @     0x7f9965a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23978)[0m     @     0x7f9965a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23978)[0m     @     0x7f9964ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23978)[0m     @     0x7f9964ede388 at::native::copy_impl()
[2m[36m(pid=23851)[0m     @     0x7f31e6e7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23851)[0m     @     0x7f31e6e7fad3 at::TensorIterator::for_each()
[2m[36m(pid=23851)[0m     @     0x7f31e6e7fd91 at::TensorIterator::for_each()
[2m[36m(pid=23851)[0m     @     0x7f31e7762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23851)[0m     @     0x7f31e7785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23868)[0m     @     0x7fca4ca388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23868)[0m     @     0x7fca4ca38ad3 at::TensorIterator::for_each()
[2m[36m(pid=23868)[0m     @     0x7fca4ca38d91 at::TensorIterator::for_each()
[2m[36m(pid=23868)[0m     @     0x7fca4d31bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23868)[0m     @     0x7fca4d33ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23860)[0m     @     0x7f178b5e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=23860)[0m     @     0x7f178b5e4d91 at::TensorIterator::for_each()
[2m[36m(pid=23860)[0m     @     0x7f178bec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23860)[0m     @     0x7f178beeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23860)[0m     @     0x7f178b38ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23921)[0m     @     0x7f7a975a35a4 at::native::copy_()
[2m[36m(pid=23921)[0m     @     0x7f7a97c8e4f5 at::Tensor::copy_()
[2m[36m(pid=23921)[0m     @     0x7f7a9a1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23925)[0m     @     0x7fb4e2f1e5a4 at::native::copy_()
[2m[36m(pid=23925)[0m     @     0x7fb4e36094f5 at::Tensor::copy_()
[2m[36m(pid=23925)[0m     @     0x7fb4e5adc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23925)[0m     @     0x7fb4e36094f5 at::Tensor::copy_()
[2m[36m(pid=23954)[0m     @     0x7f483350a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23954)[0m     @     0x7f48310374f5 at::Tensor::copy_()
[2m[36m(pid=23954)[0m     @     0x7f48370e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23954)[0m     @     0x5584d2b60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23954)[0m     @     0x5584d2abbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23954)[0m     @     0x5584d2b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23954)[0m     @     0x5584d2b47a20 method_vectorcall
[2m[36m(pid=23954)[0m     @     0x5584d2abbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23954)[0m     @     0x5584d2b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23954)[0m     @     0x5584d2b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23954)[0m     @     0x5584d2abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23954)[0m     @     0x5584d2b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23954)[0m     @     0x5584d2b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23954)[0m     @     0x5584d2abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23954)[0m     @     0x5584d2b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23954)[0m     @     0x5584d2b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23954)[0m     @     0x5584d2abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23954)[0m     @     0x5584d2b46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23954)[0m     @     0x5584d2b47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23954)[0m     @     0x5584d2abc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23943)[0m     @     0x562fd0759baf _PyEval_EvalCodeWithName
[2m[36m(pid=23943)[0m     @     0x562fd075a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23943)[0m     @     0x562fd06cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23979)[0m     @     0x7f92b77cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23979)[0m     @     0x561971aadfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23979)[0m     @     0x561971a08b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23979)[0m     @     0x561971a93baf _PyEval_EvalCodeWithName
[2m[36m(pid=23979)[0m     @     0x561971a94a20 method_vectorcall
[2m[36m(pid=23979)[0m     @     0x561971a08bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23979)[0m     @     0x561971a93baf _PyEval_EvalCodeWithName
[2m[36m(pid=23979)[0m     @     0x561971a94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23979)[0m     @     0x561971a09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23979)[0m     @     0x561971a93baf _PyEval_EvalCodeWithName
[2m[36m(pid=23979)[0m     @     0x561971a94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23979)[0m     @     0x561971a09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23979)[0m     @     0x561971a93baf _PyEval_EvalCodeWithName
[2m[36m(pid=23979)[0m     @     0x561971a94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23979)[0m     @     0x561971a09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23979)[0m     @     0x561971a93baf _PyEval_EvalCodeWithName
[2m[36m(pid=23979)[0m     @     0x561971a94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23979)[0m     @     0x561971a09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x7f0bf3a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=23926)[0m     @     0x7f0bf3a61d91 at::TensorIterator::for_each()
[2m[36m(pid=23926)[0m     @     0x7f0bf4344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23926)[0m     @     0x7f0bf4367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23926)[0m     @     0x7f0bf3809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23888)[0m     @     0x7f523d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=23888)[0m     @     0x7f523fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23888)[0m     @     0x7f523d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=23888)[0m     @     0x7f524367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23888)[0m     @     0x55d136d2afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23888)[0m     @     0x55d136c85b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23888)[0m     @     0x55d136d10baf _PyEval_EvalCodeWithName
[2m[36m(pid=23888)[0m     @     0x55d136d11a20 method_vectorcall
[2m[36m(pid=23888)[0m     @     0x55d136c85bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23888)[0m     @     0x55d136d10baf _PyEval_EvalCodeWithName
[2m[36m(pid=23888)[0m     @     0x55d136d11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23888)[0m     @     0x55d136c86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23888)[0m     @     0x55d136d10baf _PyEval_EvalCodeWithName
[2m[36m(pid=23888)[0m     @     0x55d136d11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23888)[0m     @     0x55d136c86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23888)[0m     @     0x55d136d10baf _PyEval_EvalCodeWithName
[2m[36m(pid=23888)[0m     @     0x55d136d11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23888)[0m     @     0x55d136c86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23888)[0m     @     0x55d136d10baf _PyEval_EvalCodeWithName
[2m[36m(pid=23888)[0m     @     0x55d136d11643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23888)[0m     @     0x55d136c86689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23854)[0m     @     0x7ee594540ad3 at::TensorIterator::for_each()
[2m[36m(pid=23854)[0m     @     0x7ee594540d91 at::TensorIterator::for_each()
[2m[36m(pid=23854)[0m     @     0x7ee594e23b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23854)[0m     @     0x7ee594e46c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23854)[0m     @     0x7ee5942e8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23862)[0m     @     0x7fcb2a7e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=23862)[0m     @     0x7fcb2a7e5d91 at::TensorIterator::for_each()
[2m[36m(pid=23862)[0m     @     0x7fcb2b0c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23862)[0m     @     0x7fcb2b0ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23862)[0m     @     0x7fcb2a58da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23931)[0m     @     0x7fa5917ce4f5 at::Tensor::copy_()
[2m[36m(pid=23931)[0m     @     0x7fa59787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23931)[0m     @     0x56064305cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23931)[0m     @     0x560642fb7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23931)[0m     @     0x560643042baf _PyEval_EvalCodeWithName
[2m[36m(pid=23931)[0m     @     0x560643043a20 method_vectorcall
[2m[36m(pid=23931)[0m     @     0x560642fb7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23931)[0m     @     0x560643042baf _PyEval_EvalCodeWithName
[2m[36m(pid=23931)[0m     @     0x560643043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23931)[0m     @     0x560642fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23931)[0m     @     0x560643042baf _PyEval_EvalCodeWithName
[2m[36m(pid=23931)[0m     @     0x560643043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23931)[0m     @     0x560642fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23931)[0m     @     0x560643042baf _PyEval_EvalCodeWithName
[2m[36m(pid=23931)[0m     @     0x560643043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23931)[0m     @     0x560642fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23931)[0m     @     0x560643042baf _PyEval_EvalCodeWithName
[2m[36m(pid=23931)[0m     @     0x560643043643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23931)[0m     @     0x560642fb8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23889)[0m     @     0x7f3517a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23889)[0m     @     0x7f35155cb4f5 at::Tensor::copy_()
[2m[36m(pid=23889)[0m     @     0x7f351b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23889)[0m     @     0x55e48de60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23889)[0m     @     0x55e48ddbbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23889)[0m     @     0x55e48de46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23889)[0m     @     0x55e48de47a20 method_vectorcall
[2m[36m(pid=23889)[0m     @     0x55e48ddbbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23889)[0m     @     0x55e48de46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23889)[0m     @     0x55e48de47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23889)[0m     @     0x55e48ddbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23889)[0m     @     0x55e48de46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23889)[0m     @     0x55e48de47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23889)[0m     @     0x55e48ddbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23889)[0m     @     0x55e48de46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23889)[0m     @     0x55e48de47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23889)[0m     @     0x55e48ddbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23889)[0m     @     0x55e48de46baf _PyEval_EvalCodeWithName
[2m[36m(pid=23889)[0m     @     0x55e48de47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23889)[0m     @     0x55e48ddbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23961)[0m     @     0x7fa4aec198de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23961)[0m     @     0x7fa4ac7464f5 at::Tensor::copy_()
[2m[36m(pid=23961)[0m     @     0x7fa4b27f179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23961)[0m     @     0x5631b386ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23961)[0m     @     0x5631b37cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23961)[0m     @     0x5631b3855baf _PyEval_EvalCodeWithName
[2m[36m(pid=23961)[0m     @     0x5631b3856a20 method_vectorcall
[2m[36m(pid=23961)[0m     @     0x5631b37cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23961)[0m     @     0x5631b3855baf _PyEval_EvalCodeWithName
[2m[36m(pid=23961)[0m     @     0x5631b3856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23961)[0m     @     0x5631b37cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23961)[0m     @     0x5631b3855baf _PyEval_EvalCodeWithName
[2m[36m(pid=23961)[0m     @     0x5631b3856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23961)[0m     @     0x5631b37cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23961)[0m     @     0x5631b3855baf _PyEval_EvalCodeWithName
[2m[36m(pid=23961)[0m     @     0x5631b3856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23961)[0m     @     0x5631b37cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23961)[0m     @     0x5631b3855baf _PyEval_EvalCodeWithName
[2m[36m(pid=23961)[0m     @     0x5631b3856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23961)[0m     @     0x5631b37cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23876)[0m     @     0x7f39097d6ad3 at::TensorIterator::for_each()
[2m[36m(pid=23876)[0m     @     0x7f39097d6d91 at::TensorIterator::for_each()
[2m[36m(pid=23876)[0m     @     0x7f390a0b9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23876)[0m     @     0x7f390a0dcc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23876)[0m     @     0x7f390957ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23941)[0m     @     0x7fc4ac776ad3 at::TensorIterator::for_each()
[2m[36m(pid=23941)[0m     @     0x7fc4ac776d91 at::TensorIterator::for_each()
[2m[36m(pid=23941)[0m     @     0x7fc4ad059b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23941)[0m     @     0x7fc4ad07cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23941)[0m     @     0x7fc4ac51ea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23941)[0m     @     0x7fc4ac51c388 at::native::copy_impl()
[2m[36m(pid=23882)[0m     @     0x7f388780c5a4 at::native::copy_()
[2m[36m(pid=23882)[0m     @     0x7f3887ef74f5 at::Tensor::copy_()
[2m[36m(pid=23882)[0m     @     0x7f388a3ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23882)[0m     @     0x7f3887ef74f5 at::Tensor::copy_()
[2m[36m(pid=23890)[0m     @     0x7f77771fd4f5 at::Tensor::copy_()
[2m[36m(pid=23890)[0m     @     0x7f77796d08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23890)[0m     @     0x7f77771fd4f5 at::Tensor::copy_()
[2m[36m(pid=23890)[0m     @     0x7f777d2a879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23890)[0m     @     0x55a2316c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23890)[0m     @     0x55a231620b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23890)[0m     @     0x55a2316abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23890)[0m     @     0x55a2316aca20 method_vectorcall
[2m[36m(pid=23934)[0m     @     0x7fb7c60ba4f5 at::Tensor::copy_()
[2m[36m(pid=23934)[0m     @     0x7fb7cc16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23934)[0m     @     0x558f599e2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23934)[0m     @     0x558f5993db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23934)[0m     @     0x558f599c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23934)[0m     @     0x558f599c9a20 method_vectorcall
[2m[36m(pid=23934)[0m     @     0x558f5993dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23934)[0m     @     0x558f599c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23934)[0m     @     0x558f599c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23934)[0m     @     0x558f5993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23934)[0m     @     0x558f599c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23934)[0m     @     0x558f599c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23934)[0m     @     0x558f5993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23934)[0m     @     0x558f599c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23934)[0m     @     0x558f599c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23934)[0m     @     0x558f5993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23934)[0m     @     0x558f599c8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23934)[0m     @     0x558f599c9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23934)[0m     @     0x558f5993e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x7ee5aba61d91 at::TensorIterator::for_each()
[2m[36m(pid=23855)[0m     @     0x7ee5ac344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23855)[0m     @     0x7ee5ac367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23855)[0m     @     0x7ee5ab809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23855)[0m     @     0x7ee5ab807388 at::native::copy_impl()
[2m[36m(pid=23938)[0m     @     0x7f6109552ad3 at::TensorIterator::for_each()
[2m[36m(pid=23938)[0m     @     0x7f6109552d91 at::TensorIterator::for_each()
[2m[36m(pid=23938)[0m     @     0x7f6109e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23938)[0m     @     0x7f6109e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23938)[0m     @     0x7f61092faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23963)[0m     @     0x7f2c841b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=23963)[0m     @     0x7f2c841b9d91 at::TensorIterator::for_each()
[2m[36m(pid=23963)[0m     @     0x7f2c84a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23963)[0m     @     0x7f2c84abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23945)[0m     @     0x7f6f2156aad3 at::TensorIterator::for_each()
[2m[36m(pid=23945)[0m     @     0x7f6f2156ad91 at::TensorIterator::for_each()
[2m[36m(pid=23945)[0m     @     0x7f6f21e4db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23945)[0m     @     0x7f6f21e70c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23982)[0m     @     0x7fa3a99e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=23982)[0m     @     0x7fa3a99e7d91 at::TensorIterator::for_each()
[2m[36m(pid=23982)[0m     @     0x7fa3aa2cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23982)[0m     @     0x7fa3aa2edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23856)[0m     @     0x7f496d552d91 at::TensorIterator::for_each()
[2m[36m(pid=23856)[0m     @     0x7f496de35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23856)[0m     @     0x7f496de58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23856)[0m     @     0x7f496d2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23856)[0m     @     0x7f496d2f8388 at::native::copy_impl()
[2m[36m(pid=23936)[0m     @     0x7f03ef5097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23936)[0m     @     0x7f03ef50c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23939)[0m     @     0x7ef70f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23939)[0m     @     0x7ef70f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=23939)[0m     @     0x7ef70f539d91 at::TensorIterator::for_each()
[2m[36m(pid=23920)[0m     @     0x7f387460ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=23920)[0m     @     0x7f3873d397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=23920)[0m     @     0x7f3873d3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23920)[0m     @     0x7f3873d3cad3 at::TensorIterator::for_each()
[2m[36m(pid=23865)[0m     @     0x7f4db1d2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23865)[0m     @     0x7f4db1d2fad3 at::TensorIterator::for_each()
[2m[36m(pid=23865)[0m     @     0x7f4db1d2fd91 at::TensorIterator::for_each()
[2m[36m(pid=23865)[0m     @     0x7f4db2612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23949)[0m     @     0x7f844c894ad3 at::TensorIterator::for_each()
[2m[36m(pid=23949)[0m     @     0x7f844c894d91 at::TensorIterator::for_each()
[2m[36m(pid=23949)[0m     @     0x7f844d177b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23949)[0m     @     0x7f844d19ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23935)[0m     @     0x7ed3e0d35ad3 at::TensorIterator::for_each()
[2m[36m(pid=23935)[0m     @     0x7ed3e0d35d91 at::TensorIterator::for_each()
[2m[36m(pid=23935)[0m     @     0x7ed3e1618b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23935)[0m     @     0x7ed3e163bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23935)[0m     @     0x7ed3e0adda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23935)[0m     @     0x7ed3e0adb388 at::native::copy_impl()
[2m[36m(pid=23924)[0m     @     0x7f12ad868d91 at::TensorIterator::for_each()
[2m[36m(pid=23924)[0m     @     0x7f12ae14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23924)[0m     @     0x7f12ae16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23924)[0m     @     0x7f12ad610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23924)[0m     @     0x7f12ad60e388 at::native::copy_impl()
[2m[36m(pid=23878)[0m     @     0x7f937c650d91 at::TensorIterator::for_each()
[2m[36m(pid=23878)[0m     @     0x7f937cf33b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23878)[0m     @     0x7f937cf56c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23919)[0m     @     0x7fa99834ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23919)[0m     @     0x7fa99836dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23919)[0m     @     0x7fa99780fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23919)[0m     @     0x7fa99780d388 at::native::copy_impl()
[2m[36m(pid=23932)[0m     @     0x7f2302fdfd91 at::TensorIterator::for_each()
[2m[36m(pid=23932)[0m     @     0x7f23038c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23932)[0m     @     0x7f23038e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23850)[0m     @     0x7f4e1e48c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23849)[0m     @     0x7f66fd44b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23849)[0m     @     0x7f66fd44bad3 at::TensorIterator::for_each()
[2m[36m(pid=23923)[0m     @     0x7f582addcd91 at::TensorIterator::for_each()
[2m[36m(pid=23923)[0m     @     0x7f582b6bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23923)[0m     @     0x7f582b6e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23953)[0m     @     0x7fad02ddc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23953)[0m     @     0x7fad02ddcad3 at::TensorIterator::for_each()
[2m[36m(pid=23871)[0m     @     0x7fbb01cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=23871)[0m     @     0x7fbb025b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23871)[0m     @     0x7fbb025d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23871)[0m     @     0x7fbb01a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23871)[0m     @     0x7fbb01a78388 at::native::copy_impl()
[2m[36m(pid=23852)[0m     @     0x7f4555fc1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23852)[0m     @     0x7f4555463a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23852)[0m     @     0x7f4555461388 at::native::copy_impl()
[2m[36m(pid=23852)[0m     @     0x7f45554635a4 at::native::copy_()
[2m[36m(pid=23942)[0m     @     0x7f41ca51ed91 at::TensorIterator::for_each()
[2m[36m(pid=23942)[0m     @     0x7f41cae01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23942)[0m     @     0x7f41cae24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23942)[0m     @     0x7f41ca2c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23942)[0m     @     0x7f41ca2c4388 at::native::copy_impl()
[2m[36m(pid=23914)[0m     @     0x563d2b9edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23914)[0m     @     0x563d2b9ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23914)[0m     @     0x563d2b963689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23914)[0m     @     0x563d2b9edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23914)[0m     @     0x563d2b9ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23914)[0m     @     0x563d2b963689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23914)[0m     @     0x563d2b9edbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23914)[0m     @     0x563d2b9ee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23914)[0m     @     0x563d2b963689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23857)[0m     @     0x7f4e0c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23857)[0m     @     0x7f4e0ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23857)[0m     @     0x7f4e0ba37388 at::native::copy_impl()
[2m[36m(pid=23857)[0m     @     0x7f4e0ba395a4 at::native::copy_()
[2m[36m(pid=23861)[0m     @     0x7f5e6669fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23861)[0m     @     0x7f5e65b41a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23861)[0m     @     0x7f5e65b3f388 at::native::copy_impl()
[2m[36m(pid=23861)[0m     @     0x7f5e65b415a4 at::native::copy_()
[2m[36m(pid=23990)[0m     @     0x7eede08eab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23990)[0m     @     0x7eede090dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23990)[0m     @     0x7eeddfdafa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23990)[0m     @     0x7eeddfdad388 at::native::copy_impl()
[2m[36m(pid=23990)[0m     @     0x7eeddfdaf5a4 at::native::copy_()
[2m[36m(pid=23967)[0m     @     0x7f148c827d91 at::TensorIterator::for_each()
[2m[36m(pid=23967)[0m     @     0x7f148d10ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23967)[0m     @     0x7f148d12dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23967)[0m     @     0x7f148c5cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23967)[0m     @     0x7f148c5cd388 at::native::copy_impl()
[2m[36m(pid=23972)[0m     @     0x7f60fed1dd91 at::TensorIterator::for_each()
[2m[36m(pid=23972)[0m     @     0x7f60ff600b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23972)[0m     @     0x7f60ff623c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23972)[0m     @     0x7f60feac5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23972)[0m     @     0x7f60feac3388 at::native::copy_impl()
[2m[36m(pid=23972)[0m     @     0x7f60feac55a4 at::native::copy_()
[2m[36m(pid=23866)[0m     @     0x7f2aecf27d91 at::TensorIterator::for_each()
[2m[36m(pid=23866)[0m     @     0x7f2aed80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23866)[0m     @     0x7f2aed82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23866)[0m     @     0x7f2aecccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23866)[0m     @     0x7f2aecccd388 at::native::copy_impl()
[2m[36m(pid=23867)[0m     @     0x7faf5f653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23867)[0m     @     0x7faf5eaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23867)[0m     @     0x7faf5eaf3388 at::native::copy_impl()
[2m[36m(pid=23867)[0m     @     0x7faf5eaf55a4 at::native::copy_()
[2m[36m(pid=23951)[0m     @     0x7f79a69d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23951)[0m     @     0x55b1b0b4cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23951)[0m     @     0x55b1b0aa7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23951)[0m     @     0x55b1b0b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23951)[0m     @     0x55b1b0b33a20 method_vectorcall
[2m[36m(pid=23951)[0m     @     0x55b1b0aa7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23951)[0m     @     0x55b1b0b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23951)[0m     @     0x55b1b0b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23951)[0m     @     0x55b1b0aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23951)[0m     @     0x55b1b0b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23951)[0m     @     0x55b1b0b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23951)[0m     @     0x55b1b0aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23951)[0m     @     0x55b1b0b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23951)[0m     @     0x55b1b0b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23951)[0m     @     0x55b1b0aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23951)[0m     @     0x55b1b0b32baf _PyEval_EvalCodeWithName
[2m[36m(pid=23951)[0m     @     0x55b1b0b33643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23951)[0m     @     0x55b1b0aa8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23873)[0m     @     0x556b62f53fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23873)[0m     @     0x556b62eaeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23873)[0m     @     0x556b62f39baf _PyEval_EvalCodeWithName
[2m[36m(pid=23873)[0m     @     0x556b62f3aa20 method_vectorcall
[2m[36m(pid=23873)[0m     @     0x556b62eaebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23873)[0m     @     0x556b62f39baf _PyEval_EvalCodeWithName
[2m[36m(pid=23873)[0m     @     0x556b62f3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23873)[0m     @     0x556b62eaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23873)[0m     @     0x556b62f39baf _PyEval_EvalCodeWithName
[2m[36m(pid=23873)[0m     @     0x556b62f3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23873)[0m     @     0x556b62eaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23873)[0m     @     0x556b62f39baf _PyEval_EvalCodeWithName
[2m[36m(pid=23873)[0m     @     0x556b62f3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23873)[0m     @     0x556b62eaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23873)[0m     @     0x556b62f39baf _PyEval_EvalCodeWithName
[2m[36m(pid=23873)[0m     @     0x556b62f3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23873)[0m     @     0x556b62eaf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23944)[0m     @     0x7f8e93da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23944)[0m     @     0x55d72ea13fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23944)[0m     @     0x55d72e96eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23944)[0m     @     0x55d72e9f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23944)[0m     @     0x55d72e9faa20 method_vectorcall
[2m[36m(pid=23944)[0m     @     0x55d72e96ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23944)[0m     @     0x55d72e9f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23944)[0m     @     0x55d72e9fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23944)[0m     @     0x55d72e96f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23944)[0m     @     0x55d72e9f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23944)[0m     @     0x55d72e9fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23944)[0m     @     0x55d72e96f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23944)[0m     @     0x55d72e9f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23944)[0m     @     0x55d72e9fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23944)[0m     @     0x55d72e96f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23944)[0m     @     0x55d72e9f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=23944)[0m     @     0x55d72e9fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23944)[0m     @     0x55d72e96f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23958)[0m     @     0x7f87288354f5 at::Tensor::copy_()
[2m[36m(pid=23958)[0m     @     0x7f872e8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23958)[0m     @     0x55b3e8e61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23958)[0m     @     0x55b3e8dbcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23958)[0m     @     0x55b3e8e47baf _PyEval_EvalCodeWithName
[2m[36m(pid=23958)[0m     @     0x55b3e8e48a20 method_vectorcall
[2m[36m(pid=23958)[0m     @     0x55b3e8dbcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23958)[0m     @     0x55b3e8e47baf _PyEval_EvalCodeWithName
[2m[36m(pid=23958)[0m     @     0x55b3e8e48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23958)[0m     @     0x55b3e8dbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23958)[0m     @     0x55b3e8e47baf _PyEval_EvalCodeWithName
[2m[36m(pid=23958)[0m     @     0x55b3e8e48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23958)[0m     @     0x55b3e8dbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23958)[0m     @     0x55b3e8e47baf _PyEval_EvalCodeWithName
[2m[36m(pid=23958)[0m     @     0x55b3e8e48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23958)[0m     @     0x55b3e8dbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23958)[0m     @     0x55b3e8e47baf _PyEval_EvalCodeWithName
[2m[36m(pid=23958)[0m     @     0x55b3e8e48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23958)[0m     @     0x55b3e8dbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23946)[0m     @     0x7f97d954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23946)[0m     @     0x555b02d06fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23946)[0m     @     0x555b02c61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23946)[0m     @     0x555b02cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23946)[0m     @     0x555b02ceda20 method_vectorcall
[2m[36m(pid=23946)[0m     @     0x555b02c61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23946)[0m     @     0x555b02cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23946)[0m     @     0x555b02ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23946)[0m     @     0x555b02c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23946)[0m     @     0x555b02cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23946)[0m     @     0x555b02ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23946)[0m     @     0x555b02c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23946)[0m     @     0x555b02cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23946)[0m     @     0x555b02ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23946)[0m     @     0x555b02c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23946)[0m     @     0x555b02cecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23946)[0m     @     0x555b02ced643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23946)[0m     @     0x555b02c62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x7f5120f27d91 at::TensorIterator::for_each()
[2m[36m(pid=23964)[0m     @     0x7f512180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23964)[0m     @     0x7f512182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23964)[0m     @     0x7f5120ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23964)[0m     @     0x7f5120ccd388 at::native::copy_impl()
[2m[36m(pid=23964)[0m     @     0x7f5120ccf5a4 at::native::copy_()
[2m[36m(pid=23864)[0m     @     0x7f1d37ea2d91 at::TensorIterator::for_each()
[2m[36m(pid=23864)[0m     @     0x7f1d38785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23864)[0m     @     0x7f1d387a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23864)[0m     @     0x7f1d37c4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23864)[0m     @     0x7f1d37c48388 at::native::copy_impl()
[2m[36m(pid=23863)[0m     @     0x7fb0bd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23863)[0m     @     0x7fb0bc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23863)[0m     @     0x7fb0bc589388 at::native::copy_impl()
[2m[36m(pid=23863)[0m     @     0x7fb0bc58b5a4 at::native::copy_()
[2m[36m(pid=23965)[0m     @     0x7faa5a92ad91 at::TensorIterator::for_each()
[2m[36m(pid=23965)[0m     @     0x7faa5b20db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23965)[0m     @     0x7faa5b230c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23965)[0m     @     0x7faa5a6d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23965)[0m     @     0x7faa5a6d0388 at::native::copy_impl()
[2m[36m(pid=23929)[0m     @     0x7f7126957d91 at::TensorIterator::for_each()
[2m[36m(pid=23929)[0m     @     0x7f712723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23929)[0m     @     0x7f712725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23929)[0m     @     0x7f71266ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23929)[0m     @     0x7f71266fd388 at::native::copy_impl()
[2m[36m(pid=23933)[0m     @     0x7f8c13514d91 at::TensorIterator::for_each()
[2m[36m(pid=23933)[0m     @     0x7f8c13df7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23933)[0m     @     0x7f8c13e1ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23933)[0m     @     0x7f8c132bca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23933)[0m     @     0x7f8c132ba388 at::native::copy_impl()
[2m[36m(pid=23859)[0m     @     0x7f14d214fad3 at::TensorIterator::for_each()
[2m[36m(pid=23859)[0m     @     0x7f14d214fd91 at::TensorIterator::for_each()
[2m[36m(pid=23859)[0m     @     0x7f14d2a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23859)[0m     @     0x7f14d2a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23859)[0m     @     0x7f14d1ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23874)[0m     @     0x7efe28c11d91 at::TensorIterator::for_each()
[2m[36m(pid=23874)[0m     @     0x7efe294f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23874)[0m     @     0x7efe29517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23874)[0m     @     0x7efe289b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23874)[0m     @     0x7efe289b7388 at::native::copy_impl()
[2m[36m(pid=23881)[0m     @     0x7f2d82efcd91 at::TensorIterator::for_each()
[2m[36m(pid=23881)[0m     @     0x7f2d837dfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23881)[0m     @     0x7f2d83802c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23881)[0m     @     0x7f2d82ca4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23881)[0m     @     0x7f2d82ca2388 at::native::copy_impl()
[2m[36m(pid=23881)[0m     @     0x7f2d82ca45a4 at::native::copy_()
[2m[36m(pid=23922)[0m     @     0x55f5db59dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23922)[0m     @     0x55f5db59e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23922)[0m     @     0x55f5db513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23922)[0m     @     0x55f5db59dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23922)[0m     @     0x55f5db59e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23922)[0m     @     0x55f5db513689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x7fc2307e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=23928)[0m     @     0x7fc2307e3d91 at::TensorIterator::for_each()
[2m[36m(pid=23928)[0m     @     0x7fc2310c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23928)[0m     @     0x7fc2310e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23928)[0m     @     0x7fc23058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23869)[0m     @     0x7f2adc0ad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=23988)[0m     @     0x7fb9a19a54f5 at::Tensor::copy_()
[2m[36m(pid=23988)[0m     @     0x7fb9a7a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23988)[0m     @     0x5615c34fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23988)[0m     @     0x5615c3456b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23988)[0m     @     0x5615c34e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23988)[0m     @     0x5615c34e2a20 method_vectorcall
[2m[36m(pid=23988)[0m     @     0x5615c3456bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23988)[0m     @     0x5615c34e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23988)[0m     @     0x5615c34e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23988)[0m     @     0x5615c3457689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23988)[0m     @     0x5615c34e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23988)[0m     @     0x5615c34e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23988)[0m     @     0x5615c3457689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23988)[0m     @     0x5615c34e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23988)[0m     @     0x5615c34e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23988)[0m     @     0x5615c3457689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23988)[0m     @     0x5615c34e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23988)[0m     @     0x5615c34e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23988)[0m     @     0x5615c3457689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23887)[0m     @     0x7f59b7809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23887)[0m     @     0x7f59b7807388 at::native::copy_impl()
[2m[36m(pid=23887)[0m     @     0x7f59b78095a4 at::native::copy_()
[2m[36m(pid=23927)[0m     @     0x7ee69425d5a4 at::native::copy_()
[2m[36m(pid=23927)[0m     @     0x7ee6949484f5 at::Tensor::copy_()
[2m[36m(pid=23927)[0m     @     0x7ee696e1b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23978)[0m     @     0x7f9964ee05a4 at::native::copy_()
[2m[36m(pid=23978)[0m     @     0x7f99655cb4f5 at::Tensor::copy_()
[2m[36m(pid=23851)[0m     @     0x7f31e6c27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23851)[0m     @     0x7f31e6c25388 at::native::copy_impl()
[2m[36m(pid=23851)[0m     @     0x7f31e6c275a4 at::native::copy_()
[2m[36m(pid=23868)[0m     @     0x7fca4c7e0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23868)[0m     @     0x7fca4c7de388 at::native::copy_impl()
[2m[36m(pid=23868)[0m     @     0x7fca4c7e05a4 at::native::copy_()
[2m[36m(pid=23860)[0m     @     0x7f178b38a388 at::native::copy_impl()
[2m[36m(pid=23860)[0m     @     0x7f178b38c5a4 at::native::copy_()
[2m[36m(pid=23921)[0m     @     0x7f7a97c8e4f5 at::Tensor::copy_()
[2m[36m(pid=23921)[0m     @     0x7f7a9dd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23921)[0m     @     0x5644ca874fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23921)[0m     @     0x5644ca7cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23921)[0m     @     0x5644ca85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23921)[0m     @     0x5644ca85ba20 method_vectorcall
[2m[36m(pid=23921)[0m     @     0x5644ca7cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23921)[0m     @     0x5644ca85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23921)[0m     @     0x5644ca85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23921)[0m     @     0x5644ca7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23921)[0m     @     0x5644ca85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23921)[0m     @     0x5644ca85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23921)[0m     @     0x5644ca7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23921)[0m     @     0x5644ca85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23921)[0m     @     0x5644ca85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23921)[0m     @     0x5644ca7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23921)[0m     @     0x5644ca85abaf _PyEval_EvalCodeWithName
[2m[36m(pid=23921)[0m     @     0x5644ca85b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23921)[0m     @     0x5644ca7d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23925)[0m     @     0x7fb4e96b479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23925)[0m     @     0x5589d0537fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23925)[0m     @     0x5589d0492b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23925)[0m     @     0x5589d051dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23925)[0m     @     0x5589d051ea20 method_vectorcall
[2m[36m(pid=23925)[0m     @     0x5589d0492bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23925)[0m     @     0x5589d051dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23925)[0m     @     0x5589d051e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23925)[0m     @     0x5589d0493689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23925)[0m     @     0x5589d051dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23925)[0m     @     0x5589d051e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23925)[0m     @     0x5589d0493689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23925)[0m     @     0x5589d051dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23925)[0m     @     0x5589d051e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23925)[0m     @     0x5589d0493689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23925)[0m     @     0x5589d051dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23925)[0m     @     0x5589d051e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23925)[0m     @     0x5589d0493689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x7f0bf3807388 at::native::copy_impl()
[2m[36m(pid=23926)[0m     @     0x7f0bf38095a4 at::native::copy_()
[2m[36m(pid=23926)[0m     @     0x7f0bf3ef44f5 at::Tensor::copy_()
[2m[36m(pid=23854)[0m     @     0x7ee5942e6388 at::native::copy_impl()
[2m[36m(pid=23854)[0m     @     0x7ee5942e85a4 at::native::copy_()
[2m[36m(pid=23854)[0m     @     0x7ee5949d34f5 at::Tensor::copy_()
[2m[36m(pid=23862)[0m     @     0x7fcb2a58b388 at::native::copy_impl()
[2m[36m(pid=23862)[0m     @     0x7fcb2a58d5a4 at::native::copy_()
[2m[36m(pid=23876)[0m     @     0x7f390957c388 at::native::copy_impl()
[2m[36m(pid=23876)[0m     @     0x7f390957e5a4 at::native::copy_()
[2m[36m(pid=23941)[0m     @     0x7fc4ac51e5a4 at::native::copy_()
[2m[36m(pid=23941)[0m     @     0x7fc4acc094f5 at::Tensor::copy_()
[2m[36m(pid=23882)[0m     @     0x7f388dfa279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23882)[0m     @     0x559ea5202fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23882)[0m     @     0x559ea515db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23882)[0m     @     0x559ea51e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23882)[0m     @     0x559ea51e9a20 method_vectorcall
[2m[36m(pid=23882)[0m     @     0x559ea515dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23882)[0m     @     0x559ea51e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23882)[0m     @     0x559ea51e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23882)[0m     @     0x559ea515e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23882)[0m     @     0x559ea51e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23882)[0m     @     0x559ea51e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23882)[0m     @     0x559ea515e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23882)[0m     @     0x559ea51e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23882)[0m     @     0x559ea51e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23882)[0m     @     0x559ea515e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23882)[0m     @     0x559ea51e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=23882)[0m     @     0x559ea51e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23882)[0m     @     0x559ea515e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23890)[0m     @     0x55a231620bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23890)[0m     @     0x55a2316abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23890)[0m     @     0x55a2316ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23890)[0m     @     0x55a231621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23890)[0m     @     0x55a2316abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23890)[0m     @     0x55a2316ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23890)[0m     @     0x55a231621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23890)[0m     @     0x55a2316abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23890)[0m     @     0x55a2316ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23890)[0m     @     0x55a231621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23890)[0m     @     0x55a2316abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23890)[0m     @     0x55a2316ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23890)[0m     @     0x55a231621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x7ee5ab8095a4 at::native::copy_()
[2m[36m(pid=23855)[0m     @     0x7ee5abef44f5 at::Tensor::copy_()
[2m[36m(pid=23855)[0m     @     0x7ee5ae3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23938)[0m     @     0x7f61092f8388 at::native::copy_impl()
[2m[36m(pid=23938)[0m     @     0x7f61092fa5a4 at::native::copy_()
[2m[36m(pid=23945)[0m     @     0x7f6f21312a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23945)[0m     @     0x7f6f21310388 at::native::copy_impl()
[2m[36m(pid=23945)[0m     @     0x7f6f213125a4 at::native::copy_()
[2m[36m(pid=23982)[0m     @     0x7fa3a978fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23982)[0m     @     0x7fa3a978d388 at::native::copy_impl()
[2m[36m(pid=23856)[0m     @     0x7f496d2fa5a4 at::native::copy_()
[2m[36m(pid=23856)[0m     @     0x7f496d9e54f5 at::Tensor::copy_()
[2m[36m(pid=23936)[0m     @     0x7f03ef50cad3 at::TensorIterator::for_each()
[2m[36m(pid=23936)[0m     @     0x7f03ef50cd91 at::TensorIterator::for_each()
[2m[36m(pid=23939)[0m     @     0x7ef70fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23939)[0m     @     0x7ef70fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23939)[0m     @     0x7ef70f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23939)[0m     @     0x7ef70f2df388 at::native::copy_impl()
[2m[36m(pid=23939)[0m     @     0x7ef70f2e15a4 at::native::copy_()
[2m[36m(pid=23920)[0m     @     0x7f3873d3cd91 at::TensorIterator::for_each()
[2m[36m(pid=23920)[0m     @     0x7f387461fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23920)[0m     @     0x7f3874642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23920)[0m     @     0x7f3873ae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23920)[0m     @     0x7f3873ae2388 at::native::copy_impl()
[2m[36m(pid=23865)[0m     @     0x7f4db2635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23865)[0m     @     0x7f4db1ad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23865)[0m     @     0x7f4db1ad5388 at::native::copy_impl()
[2m[36m(pid=23865)[0m     @     0x7f4db1ad75a4 at::native::copy_()
[2m[36m(pid=23949)[0m     @     0x7f844c63ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23949)[0m     @     0x7f844c63a388 at::native::copy_impl()
[2m[36m(pid=23949)[0m     @     0x7f844c63c5a4 at::native::copy_()
[2m[36m(pid=23949)[0m     @     0x7f844cd274f5 at::Tensor::copy_()
[2m[36m(pid=23949)[0m     @     0x7f844f1fa8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23935)[0m     @     0x7ed3e0add5a4 at::native::copy_()
[2m[36m(pid=23935)[0m     @     0x7ed3e11c84f5 at::Tensor::copy_()
[2m[36m(pid=23935)[0m     @     0x7ed3e369b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23935)[0m     @     0x7ed3e11c84f5 at::Tensor::copy_()
[2m[36m(pid=23935)[0m     @     0x7ed3e727379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23935)[0m     @     0x557dbdedcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23935)[0m     @     0x557dbde37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23924)[0m     @     0x7f12ad6105a4 at::native::copy_()
[2m[36m(pid=23924)[0m     @     0x7f12adcfb4f5 at::Tensor::copy_()
[2m[36m(pid=23924)[0m     @     0x7f12b01ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23924)[0m     @     0x7f12adcfb4f5 at::Tensor::copy_()
[2m[36m(pid=23878)[0m     @     0x7f937c3f8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23878)[0m     @     0x7f937c3f6388 at::native::copy_impl()
[2m[36m(pid=23878)[0m     @     0x7f937c3f85a4 at::native::copy_()
[2m[36m(pid=23878)[0m     @     0x7f937cae34f5 at::Tensor::copy_()
[2m[36m(pid=23878)[0m     @     0x7f937efb68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23919)[0m     @     0x7fa99780f5a4 at::native::copy_()
[2m[36m(pid=23919)[0m     @     0x7fa997efa4f5 at::Tensor::copy_()
[2m[36m(pid=23919)[0m     @     0x7fa99a3cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23919)[0m     @     0x7fa997efa4f5 at::Tensor::copy_()
[2m[36m(pid=23919)[0m     @     0x7fa99dfa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23919)[0m     @     0x564637cd9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23919)[0m     @     0x564637c34b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23919)[0m     @     0x564637cbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23919)[0m     @     0x564637cc0a20 method_vectorcall
[2m[36m(pid=23919)[0m     @     0x564637c34bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23919)[0m     @     0x564637cbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23919)[0m     @     0x564637cc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23919)[0m     @     0x564637c35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23919)[0m     @     0x564637cbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23919)[0m     @     0x564637cc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23919)[0m     @     0x564637c35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23919)[0m     @     0x564637cbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23919)[0m     @     0x564637cc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23919)[0m     @     0x564637c35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23919)[0m     @     0x564637cbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23919)[0m     @     0x564637cc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23919)[0m     @     0x564637c35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23932)[0m     @     0x7f2302d87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23932)[0m     @     0x7f2302d85388 at::native::copy_impl()
[2m[36m(pid=23932)[0m     @     0x7f2302d875a4 at::native::copy_()
[2m[36m(pid=23932)[0m     @     0x7f23034724f5 at::Tensor::copy_()
[2m[36m(pid=23932)[0m     @     0x7f23059458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23850)[0m     @     0x7f4e1e48cad3 at::TensorIterator::for_each()
[2m[36m(pid=23849)[0m     @     0x7f66fd44bd91 at::TensorIterator::for_each()
[2m[36m(pid=23849)[0m     @     0x7f66fdd2eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23849)[0m     @     0x7f66fdd51c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23849)[0m     @     0x7f66fd1f3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23849)[0m     @     0x7f66fd1f1388 at::native::copy_impl()
[2m[36m(pid=23849)[0m     @     0x7f66fd1f35a4 at::native::copy_()
[2m[36m(pid=23923)[0m     @     0x7f582ab84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23923)[0m     @     0x7f582ab82388 at::native::copy_impl()
[2m[36m(pid=23923)[0m     @     0x7f582ab845a4 at::native::copy_()
[2m[36m(pid=23923)[0m     @     0x7f582b26f4f5 at::Tensor::copy_()
[2m[36m(pid=23923)[0m     @     0x7f582d7428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23953)[0m     @     0x7fad02ddcd91 at::TensorIterator::for_each()
[2m[36m(pid=23953)[0m     @     0x7fad036bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23953)[0m     @     0x7fad036e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23871)[0m     @     0x7fbb01a7a5a4 at::native::copy_()
[2m[36m(pid=23871)[0m     @     0x7fbb021654f5 at::Tensor::copy_()
[2m[36m(pid=23871)[0m     @     0x7fbb046388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23871)[0m     @     0x7fbb021654f5 at::Tensor::copy_()
[2m[36m(pid=23852)[0m     @     0x7f4555b4e4f5 at::Tensor::copy_()
[2m[36m(pid=23852)[0m     @     0x7f45580218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23852)[0m     @     0x7f4555b4e4f5 at::Tensor::copy_()
[2m[36m(pid=23852)[0m     @     0x7f455bbf979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23852)[0m     @     0x55857ea9afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23852)[0m     @     0x55857e9f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23852)[0m     @     0x55857ea80baf _PyEval_EvalCodeWithName
[2m[36m(pid=23852)[0m     @     0x55857ea81a20 method_vectorcall
[2m[36m(pid=23852)[0m     @     0x55857e9f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23852)[0m     @     0x55857ea80baf _PyEval_EvalCodeWithName
[2m[36m(pid=23852)[0m     @     0x55857ea81643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23852)[0m     @     0x55857e9f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23852)[0m     @     0x55857ea80baf _PyEval_EvalCodeWithName
[2m[36m(pid=23852)[0m     @     0x55857ea81643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23852)[0m     @     0x55857e9f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23852)[0m     @     0x55857ea80baf _PyEval_EvalCodeWithName
[2m[36m(pid=23852)[0m     @     0x55857ea81643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23852)[0m     @     0x55857e9f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23852)[0m     @     0x55857ea80baf _PyEval_EvalCodeWithName
[2m[36m(pid=23852)[0m     @     0x55857ea81643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23852)[0m     @     0x55857e9f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23942)[0m     @     0x7f41ca2c65a4 at::native::copy_()
[2m[36m(pid=23942)[0m     @     0x7f41ca9b14f5 at::Tensor::copy_()
[2m[36m(pid=23942)[0m     @     0x7f41cce848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23857)[0m     @     0x7f4e0c1244f5 at::Tensor::copy_()
[2m[36m(pid=23857)[0m     @     0x7f4e0e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23857)[0m     @     0x7f4e0c1244f5 at::Tensor::copy_()
[2m[36m(pid=23857)[0m     @     0x7f4e121cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23857)[0m     @     0x5595c0fa2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23857)[0m     @     0x5595c0efdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23857)[0m     @     0x5595c0f88baf _PyEval_EvalCodeWithName
[2m[36m(pid=23857)[0m     @     0x5595c0f89a20 method_vectorcall
[2m[36m(pid=23857)[0m     @     0x5595c0efdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23857)[0m     @     0x5595c0f88baf _PyEval_EvalCodeWithName
[2m[36m(pid=23857)[0m     @     0x5595c0f89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23857)[0m     @     0x5595c0efe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23857)[0m     @     0x5595c0f88baf _PyEval_EvalCodeWithName
[2m[36m(pid=23857)[0m     @     0x5595c0f89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23857)[0m     @     0x5595c0efe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23857)[0m     @     0x5595c0f88baf _PyEval_EvalCodeWithName
[2m[36m(pid=23857)[0m     @     0x5595c0f89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23857)[0m     @     0x5595c0efe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23857)[0m     @     0x5595c0f88baf _PyEval_EvalCodeWithName
[2m[36m(pid=23857)[0m     @     0x5595c0f89643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23857)[0m     @     0x5595c0efe689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23861)[0m     @     0x7f5e6622c4f5 at::Tensor::copy_()
[2m[36m(pid=23861)[0m     @     0x7f5e686ff8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23861)[0m     @     0x7f5e6622c4f5 at::Tensor::copy_()
[2m[36m(pid=23861)[0m     @     0x7f5e6c2d779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23861)[0m     @     0x564feb901fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23861)[0m     @     0x564feb85cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23861)[0m     @     0x564feb8e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23861)[0m     @     0x564feb8e8a20 method_vectorcall
[2m[36m(pid=23861)[0m     @     0x564feb85cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23861)[0m     @     0x564feb8e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23861)[0m     @     0x564feb8e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23861)[0m     @     0x564feb85d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23861)[0m     @     0x564feb8e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23861)[0m     @     0x564feb8e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23861)[0m     @     0x564feb85d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23861)[0m     @     0x564feb8e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23861)[0m     @     0x564feb8e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23861)[0m     @     0x564feb85d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23861)[0m     @     0x564feb8e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23861)[0m     @     0x564feb8e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23861)[0m     @     0x564feb85d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23990)[0m     @     0x7eede049a4f5 at::Tensor::copy_()
[2m[36m(pid=23990)[0m     @     0x7eede296d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23990)[0m     @     0x7eede049a4f5 at::Tensor::copy_()
[2m[36m(pid=23990)[0m     @     0x7eede654579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23990)[0m     @     0x55977fd82fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23990)[0m     @     0x55977fcddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23990)[0m     @     0x55977fd68baf _PyEval_EvalCodeWithName
[2m[36m(pid=23990)[0m     @     0x55977fd69a20 method_vectorcall
[2m[36m(pid=23990)[0m     @     0x55977fcddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23990)[0m     @     0x55977fd68baf _PyEval_EvalCodeWithName
[2m[36m(pid=23990)[0m     @     0x55977fd69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23990)[0m     @     0x55977fcde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23990)[0m     @     0x55977fd68baf _PyEval_EvalCodeWithName
[2m[36m(pid=23990)[0m     @     0x55977fd69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23990)[0m     @     0x55977fcde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23990)[0m     @     0x55977fd68baf _PyEval_EvalCodeWithName
[2m[36m(pid=23967)[0m     @     0x7f148c5cf5a4 at::native::copy_()
[2m[36m(pid=23967)[0m     @     0x7f148ccba4f5 at::Tensor::copy_()
[2m[36m(pid=23967)[0m     @     0x7f148f18d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23967)[0m     @     0x7f148ccba4f5 at::Tensor::copy_()
[2m[36m(pid=23967)[0m     @     0x7f1492d6579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23967)[0m     @     0x55dd31e85fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23972)[0m     @     0x7f60ff1b04f5 at::Tensor::copy_()
[2m[36m(pid=23972)[0m     @     0x7f61016838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23972)[0m     @     0x7f60ff1b04f5 at::Tensor::copy_()
[2m[36m(pid=23972)[0m     @     0x7f610525b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23972)[0m     @     0x55a801005fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23972)[0m     @     0x55a800f60b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23972)[0m     @     0x55a800febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23972)[0m     @     0x55a800feca20 method_vectorcall
[2m[36m(pid=23972)[0m     @     0x55a800f60bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23866)[0m     @     0x7f2aecccf5a4 at::native::copy_()
[2m[36m(pid=23866)[0m     @     0x7f2aed3ba4f5 at::Tensor::copy_()
[2m[36m(pid=23866)[0m     @     0x7f2aef88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23866)[0m     @     0x7f2aed3ba4f5 at::Tensor::copy_()
[2m[36m(pid=23867)[0m     @     0x7faf5f1e04f5 at::Tensor::copy_()
[2m[36m(pid=23867)[0m     @     0x7faf616b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23867)[0m     @     0x7faf5f1e04f5 at::Tensor::copy_()
[2m[36m(pid=23867)[0m     @     0x7faf6528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23867)[0m     @     0x5627038d5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23867)[0m     @     0x562703830b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23867)[0m     @     0x5627038bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23867)[0m     @     0x5627038bca20 method_vectorcall
[2m[36m(pid=23867)[0m     @     0x562703830bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23867)[0m     @     0x5627038bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23867)[0m     @     0x5627038bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23867)[0m     @     0x562703831689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23867)[0m     @     0x5627038bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23867)[0m     @     0x5627038bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23867)[0m     @     0x562703831689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23867)[0m     @     0x5627038bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23867)[0m     @     0x5627038bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23867)[0m     @     0x562703831689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23867)[0m     @     0x5627038bbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23867)[0m     @     0x5627038bc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23867)[0m     @     0x562703831689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x7f51213ba4f5 at::Tensor::copy_()
[2m[36m(pid=23964)[0m     @     0x7f512388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23964)[0m     @     0x7f51213ba4f5 at::Tensor::copy_()
[2m[36m(pid=23964)[0m     @     0x7f512746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23964)[0m     @     0x5601e8d29fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23964)[0m     @     0x5601e8c84b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x5601e8d0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23964)[0m     @     0x5601e8d10a20 method_vectorcall
[2m[36m(pid=23964)[0m     @     0x5601e8c84bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x5601e8d0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23964)[0m     @     0x5601e8d10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23964)[0m     @     0x5601e8c85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x5601e8d0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23964)[0m     @     0x5601e8d10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23964)[0m     @     0x5601e8c85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x5601e8d0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23964)[0m     @     0x5601e8d10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23964)[0m     @     0x5601e8c85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23964)[0m     @     0x5601e8d0fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23964)[0m     @     0x5601e8d10643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23964)[0m     @     0x5601e8c85689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23864)[0m     @     0x7f1d37c4a5a4 at::native::copy_()
[2m[36m(pid=23864)[0m     @     0x7f1d383354f5 at::Tensor::copy_()
[2m[36m(pid=23864)[0m     @     0x7f1d3a8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23864)[0m     @     0x7f1d383354f5 at::Tensor::copy_()
[2m[36m(pid=23864)[0m     @     0x7f1d3e3e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23864)[0m     @     0x55d1f4c35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23864)[0m     @     0x55d1f4b90b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23864)[0m     @     0x55d1f4c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23864)[0m     @     0x55d1f4c1ca20 method_vectorcall
[2m[36m(pid=23864)[0m     @     0x55d1f4b90bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23864)[0m     @     0x55d1f4c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23864)[0m     @     0x55d1f4c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23864)[0m     @     0x55d1f4b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23864)[0m     @     0x55d1f4c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23864)[0m     @     0x55d1f4c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23864)[0m     @     0x55d1f4b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23864)[0m     @     0x55d1f4c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23864)[0m     @     0x55d1f4c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23864)[0m     @     0x55d1f4b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23864)[0m     @     0x55d1f4c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23864)[0m     @     0x55d1f4c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23864)[0m     @     0x55d1f4b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23863)[0m     @     0x7fb0bcc764f5 at::Tensor::copy_()
[2m[36m(pid=23863)[0m     @     0x7fb0bf1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23863)[0m     @     0x7fb0bcc764f5 at::Tensor::copy_()
[2m[36m(pid=23863)[0m     @     0x7fb0c2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23863)[0m     @     0x5643f200afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23863)[0m     @     0x5643f1f65b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23863)[0m     @     0x5643f1ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23863)[0m     @     0x5643f1ff1a20 method_vectorcall
[2m[36m(pid=23863)[0m     @     0x5643f1f65bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23863)[0m     @     0x5643f1ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23863)[0m     @     0x5643f1ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23863)[0m     @     0x5643f1f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23863)[0m     @     0x5643f1ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23863)[0m     @     0x5643f1ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23863)[0m     @     0x5643f1f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23863)[0m     @     0x5643f1ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23863)[0m     @     0x5643f1ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23863)[0m     @     0x5643f1f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23863)[0m     @     0x5643f1ff0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23863)[0m     @     0x5643f1ff1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23863)[0m     @     0x5643f1f66689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23965)[0m     @     0x7faa5a6d25a4 at::native::copy_()
[2m[36m(pid=23965)[0m     @     0x7faa5adbd4f5 at::Tensor::copy_()
[2m[36m(pid=23965)[0m     @     0x7faa5d2908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23965)[0m     @     0x7faa5adbd4f5 at::Tensor::copy_()
[2m[36m(pid=23965)[0m     @     0x7faa60e6879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23965)[0m     @     0x558f95540fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23965)[0m     @     0x558f9549bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23965)[0m     @     0x558f95526baf _PyEval_EvalCodeWithName
[2m[36m(pid=23965)[0m     @     0x558f95527a20 method_vectorcall
[2m[36m(pid=23965)[0m     @     0x558f9549bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23965)[0m     @     0x558f95526baf _PyEval_EvalCodeWithName
[2m[36m(pid=23965)[0m     @     0x558f95527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23965)[0m     @     0x558f9549c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23965)[0m     @     0x558f95526baf _PyEval_EvalCodeWithName
[2m[36m(pid=23965)[0m     @     0x558f95527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23965)[0m     @     0x558f9549c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23965)[0m     @     0x558f95526baf _PyEval_EvalCodeWithName
[2m[36m(pid=23965)[0m     @     0x558f95527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23965)[0m     @     0x558f9549c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23929)[0m     @     0x7f71266ff5a4 at::native::copy_()
[2m[36m(pid=23929)[0m     @     0x7f7126dea4f5 at::Tensor::copy_()
[2m[36m(pid=23929)[0m     @     0x7f71292bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23929)[0m     @     0x7f7126dea4f5 at::Tensor::copy_()
[2m[36m(pid=23929)[0m     @     0x7f712ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23929)[0m     @     0x564add216fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23929)[0m     @     0x564add171b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23929)[0m     @     0x564add1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23929)[0m     @     0x564add1fda20 method_vectorcall
[2m[36m(pid=23929)[0m     @     0x564add171bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23929)[0m     @     0x564add1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23929)[0m     @     0x564add1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23929)[0m     @     0x564add172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23933)[0m     @     0x7f8c132bc5a4 at::native::copy_()
[2m[36m(pid=23933)[0m     @     0x7f8c139a74f5 at::Tensor::copy_()
[2m[36m(pid=23933)[0m     @     0x7f8c15e7a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23933)[0m     @     0x7f8c139a74f5 at::Tensor::copy_()
[2m[36m(pid=23933)[0m     @     0x7f8c19a5279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23933)[0m     @     0x56046b6f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23933)[0m     @     0x56046b64fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23933)[0m     @     0x56046b6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=23933)[0m     @     0x56046b6dba20 method_vectorcall
[2m[36m(pid=23933)[0m     @     0x56046b64fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23933)[0m     @     0x56046b6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=23933)[0m     @     0x56046b6db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23933)[0m     @     0x56046b650689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23933)[0m     @     0x56046b6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=23933)[0m     @     0x56046b6db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23933)[0m     @     0x56046b650689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23933)[0m     @     0x56046b6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=23933)[0m     @     0x56046b6db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23933)[0m     @     0x56046b650689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23933)[0m     @     0x56046b6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=23933)[0m     @     0x56046b6db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23933)[0m     @     0x56046b650689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23859)[0m     @     0x7f14d1ef5388 at::native::copy_impl()
[2m[36m(pid=23859)[0m     @     0x7f14d1ef75a4 at::native::copy_()
[2m[36m(pid=23859)[0m     @     0x7f14d25e24f5 at::Tensor::copy_()
[2m[36m(pid=23859)[0m     @     0x7f14d4ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23874)[0m     @     0x7efe289b95a4 at::native::copy_()
[2m[36m(pid=23874)[0m     @     0x7efe290a44f5 at::Tensor::copy_()
[2m[36m(pid=23874)[0m     @     0x7efe2b5778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23874)[0m     @     0x7efe290a44f5 at::Tensor::copy_()
[2m[36m(pid=23874)[0m     @     0x7efe2f14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23874)[0m     @     0x5574210a9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23881)[0m     @     0x7f2d8338f4f5 at::Tensor::copy_()
[2m[36m(pid=23881)[0m     @     0x7f2d858628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23881)[0m     @     0x7f2d8338f4f5 at::Tensor::copy_()
[2m[36m(pid=23881)[0m     @     0x7f2d8943a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23881)[0m     @     0x55aadd59afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23881)[0m     @     0x55aadd4f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23881)[0m     @     0x55aadd580baf _PyEval_EvalCodeWithName
[2m[36m(pid=23881)[0m     @     0x55aadd581a20 method_vectorcall
[2m[36m(pid=23881)[0m     @     0x55aadd4f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23881)[0m     @     0x55aadd580baf _PyEval_EvalCodeWithName
[2m[36m(pid=23881)[0m     @     0x55aadd581643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23881)[0m     @     0x55aadd4f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23881)[0m     @     0x55aadd580baf _PyEval_EvalCodeWithName
[2m[36m(pid=23881)[0m     @     0x55aadd581643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23881)[0m     @     0x55aadd4f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23881)[0m     @     0x55aadd580baf _PyEval_EvalCodeWithName
[2m[36m(pid=23881)[0m     @     0x55aadd581643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23881)[0m     @     0x55aadd4f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23881)[0m     @     0x55aadd580baf _PyEval_EvalCodeWithName
[2m[36m(pid=23881)[0m     @     0x55aadd581643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23881)[0m     @     0x55aadd4f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x7fc230589388 at::native::copy_impl()
[2m[36m(pid=23928)[0m     @     0x7fc23058b5a4 at::native::copy_()
[2m[36m(pid=23928)[0m     @     0x7fc230c764f5 at::Tensor::copy_()
[2m[36m(pid=23928)[0m     @     0x7fc2331498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23928)[0m     @     0x7fc230c764f5 at::Tensor::copy_()
[2m[36m(pid=23869)[0m     @     0x7f2adc0adad3 at::TensorIterator::for_each()
[2m[36m(pid=23869)[0m     @     0x7f2adc0add91 at::TensorIterator::for_each()
[2m[36m(pid=23869)[0m     @     0x7f2adc990b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23869)[0m     @     0x7f2adc9b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23869)[0m     @     0x7f2adbe55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23869)[0m     @     0x7f2adbe53388 at::native::copy_impl()
[2m[36m(pid=23887)[0m     @     0x7f59b7ef44f5 at::Tensor::copy_()
[2m[36m(pid=23887)[0m     @     0x7f59ba3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23887)[0m     @     0x7f59b7ef44f5 at::Tensor::copy_()
[2m[36m(pid=23887)[0m     @     0x7f59bdf9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23887)[0m     @     0x55e2bdc5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23887)[0m     @     0x55e2bdbb8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23887)[0m     @     0x55e2bdc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=23887)[0m     @     0x55e2bdc44a20 method_vectorcall
[2m[36m(pid=23887)[0m     @     0x55e2bdbb8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23887)[0m     @     0x55e2bdc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=23887)[0m     @     0x55e2bdc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23887)[0m     @     0x55e2bdbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23887)[0m     @     0x55e2bdc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=23887)[0m     @     0x55e2bdc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23887)[0m     @     0x55e2bdbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23887)[0m     @     0x55e2bdc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=23887)[0m     @     0x55e2bdc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23887)[0m     @     0x55e2bdbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23887)[0m     @     0x55e2bdc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=23887)[0m     @     0x55e2bdc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23887)[0m     @     0x55e2bdbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23927)[0m     @     0x7ee6949484f5 at::Tensor::copy_()
[2m[36m(pid=23927)[0m     @     0x7ee69a9f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23927)[0m     @     0x55c592058fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23927)[0m     @     0x55c591fb3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23927)[0m     @     0x55c59203ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23927)[0m     @     0x55c59203fa20 method_vectorcall
[2m[36m(pid=23927)[0m     @     0x55c591fb3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23927)[0m     @     0x55c59203ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23927)[0m     @     0x55c59203f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23927)[0m     @     0x55c591fb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23927)[0m     @     0x55c59203ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23927)[0m     @     0x55c59203f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23927)[0m     @     0x55c591fb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23927)[0m     @     0x55c59203ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23927)[0m     @     0x55c59203f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23927)[0m     @     0x55c591fb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23927)[0m     @     0x55c59203ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23927)[0m     @     0x55c59203f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23927)[0m     @     0x55c591fb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23978)[0m     @     0x7f9967a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23978)[0m     @     0x7f99655cb4f5 at::Tensor::copy_()
[2m[36m(pid=23978)[0m     @     0x7f996b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23978)[0m     @     0x55c1ef42dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23978)[0m     @     0x55c1ef388b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23978)[0m     @     0x55c1ef413baf _PyEval_EvalCodeWithName
[2m[36m(pid=23978)[0m     @     0x55c1ef414a20 method_vectorcall
[2m[36m(pid=23978)[0m     @     0x55c1ef388bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23978)[0m     @     0x55c1ef413baf _PyEval_EvalCodeWithName
[2m[36m(pid=23978)[0m     @     0x55c1ef414643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23978)[0m     @     0x55c1ef389689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23978)[0m     @     0x55c1ef413baf _PyEval_EvalCodeWithName
[2m[36m(pid=23978)[0m     @     0x55c1ef414643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23978)[0m     @     0x55c1ef389689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23978)[0m     @     0x55c1ef413baf _PyEval_EvalCodeWithName
[2m[36m(pid=23978)[0m     @     0x55c1ef414643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23978)[0m     @     0x55c1ef389689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23978)[0m     @     0x55c1ef413baf _PyEval_EvalCodeWithName
[2m[36m(pid=23978)[0m     @     0x55c1ef414643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23978)[0m     @     0x55c1ef389689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23851)[0m     @     0x7f31e73124f5 at::Tensor::copy_()
[2m[36m(pid=23851)[0m     @     0x7f31e97e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23851)[0m     @     0x7f31e73124f5 at::Tensor::copy_()
[2m[36m(pid=23851)[0m     @     0x7f31ed3bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23851)[0m     @     0x55e1923b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23851)[0m     @     0x55e192311b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23851)[0m     @     0x55e19239cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23851)[0m     @     0x55e19239da20 method_vectorcall
[2m[36m(pid=23851)[0m     @     0x55e192311bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23851)[0m     @     0x55e19239cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23851)[0m     @     0x55e19239d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23851)[0m     @     0x55e192312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23851)[0m     @     0x55e19239cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23851)[0m     @     0x55e19239d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23851)[0m     @     0x55e192312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23851)[0m     @     0x55e19239cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23851)[0m     @     0x55e19239d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23851)[0m     @     0x55e192312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23851)[0m     @     0x55e19239cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23851)[0m     @     0x55e19239d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23851)[0m     @     0x55e192312689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23868)[0m     @     0x7fca4cecb4f5 at::Tensor::copy_()
[2m[36m(pid=23868)[0m     @     0x7fca4f39e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23868)[0m     @     0x7fca4cecb4f5 at::Tensor::copy_()
[2m[36m(pid=23868)[0m     @     0x7fca52f7679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23868)[0m     @     0x55a0cedb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23868)[0m     @     0x55a0ced12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23868)[0m     @     0x55a0ced9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23868)[0m     @     0x55a0ced9ea20 method_vectorcall
[2m[36m(pid=23868)[0m     @     0x55a0ced12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23868)[0m     @     0x55a0ced9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23868)[0m     @     0x55a0ced9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23868)[0m     @     0x55a0ced13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23868)[0m     @     0x55a0ced9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23868)[0m     @     0x55a0ced9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23868)[0m     @     0x55a0ced13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23868)[0m     @     0x55a0ced9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23868)[0m     @     0x55a0ced9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23868)[0m     @     0x55a0ced13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23868)[0m     @     0x55a0ced9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23868)[0m     @     0x55a0ced9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23868)[0m     @     0x55a0ced13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23860)[0m     @     0x7f178ba774f5 at::Tensor::copy_()
[2m[36m(pid=23860)[0m     @     0x7f178df4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23860)[0m     @     0x7f178ba774f5 at::Tensor::copy_()
[2m[36m(pid=23860)[0m     @     0x7f1791b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23860)[0m     @     0x55bdb45fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23860)[0m     @     0x55bdb4555b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23860)[0m     @     0x55bdb45e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23860)[0m     @     0x55bdb45e1a20 method_vectorcall
[2m[36m(pid=23860)[0m     @     0x55bdb4555bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23860)[0m     @     0x55bdb45e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23860)[0m     @     0x55bdb45e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23860)[0m     @     0x55bdb4556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23860)[0m     @     0x55bdb45e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23860)[0m     @     0x55bdb45e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23860)[0m     @     0x55bdb4556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23860)[0m     @     0x55bdb45e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23860)[0m     @     0x55bdb45e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23860)[0m     @     0x55bdb4556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23860)[0m     @     0x55bdb45e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23860)[0m     @     0x55bdb45e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23860)[0m     @     0x55bdb4556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x7f0bf63c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23926)[0m     @     0x7f0bf3ef44f5 at::Tensor::copy_()
[2m[36m(pid=23926)[0m     @     0x7f0bf9f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23926)[0m     @     0x55d359a9dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23926)[0m     @     0x55d3599f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x55d359a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=23926)[0m     @     0x55d359a84a20 method_vectorcall
[2m[36m(pid=23926)[0m     @     0x55d3599f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x55d359a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=23926)[0m     @     0x55d359a84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23926)[0m     @     0x55d3599f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x55d359a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=23926)[0m     @     0x55d359a84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23926)[0m     @     0x55d3599f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x55d359a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=23926)[0m     @     0x55d359a84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23926)[0m     @     0x55d3599f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23926)[0m     @     0x55d359a83baf _PyEval_EvalCodeWithName
[2m[36m(pid=23926)[0m     @     0x55d359a84643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23926)[0m     @     0x55d3599f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23854)[0m     @     0x7ee596ea68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23854)[0m     @     0x7ee5949d34f5 at::Tensor::copy_()
[2m[36m(pid=23854)[0m     @     0x7ee59aa7e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23854)[0m     @     0x555c010b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23854)[0m     @     0x555c0100eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23854)[0m     @     0x555c01099baf _PyEval_EvalCodeWithName
[2m[36m(pid=23854)[0m     @     0x555c0109aa20 method_vectorcall
[2m[36m(pid=23854)[0m     @     0x555c0100ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23854)[0m     @     0x555c01099baf _PyEval_EvalCodeWithName
[2m[36m(pid=23854)[0m     @     0x555c0109a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23854)[0m     @     0x555c0100f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23854)[0m     @     0x555c01099baf _PyEval_EvalCodeWithName
[2m[36m(pid=23854)[0m     @     0x555c0109a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23854)[0m     @     0x555c0100f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23854)[0m     @     0x555c01099baf _PyEval_EvalCodeWithName
[2m[36m(pid=23854)[0m     @     0x555c0109a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23854)[0m     @     0x555c0100f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23854)[0m     @     0x555c01099baf _PyEval_EvalCodeWithName
[2m[36m(pid=23854)[0m     @     0x555c0109a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23854)[0m     @     0x555c0100f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23862)[0m     @     0x7fcb2ac784f5 at::Tensor::copy_()
[2m[36m(pid=23862)[0m     @     0x7fcb2d14b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23862)[0m     @     0x7fcb2ac784f5 at::Tensor::copy_()
[2m[36m(pid=23862)[0m     @     0x7fcb30d2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23862)[0m     @     0x55f4efa57fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23862)[0m     @     0x55f4ef9b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23862)[0m     @     0x55f4efa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23862)[0m     @     0x55f4efa3ea20 method_vectorcall
[2m[36m(pid=23862)[0m     @     0x55f4ef9b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23862)[0m     @     0x55f4efa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23862)[0m     @     0x55f4efa3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23862)[0m     @     0x55f4ef9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23862)[0m     @     0x55f4efa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23862)[0m     @     0x55f4efa3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23862)[0m     @     0x55f4ef9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23862)[0m     @     0x55f4efa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23862)[0m     @     0x55f4efa3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23862)[0m     @     0x55f4ef9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23862)[0m     @     0x55f4efa3dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23862)[0m     @     0x55f4efa3e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23862)[0m     @     0x55f4ef9b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23876)[0m     @     0x7f3909c694f5 at::Tensor::copy_()
[2m[36m(pid=23876)[0m     @     0x7f390c13c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23876)[0m     @     0x7f3909c694f5 at::Tensor::copy_()
[2m[36m(pid=23876)[0m     @     0x7f390fd1479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23876)[0m     @     0x55d088aaefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23876)[0m     @     0x55d088a09b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23876)[0m     @     0x55d088a94baf _PyEval_EvalCodeWithName
[2m[36m(pid=23876)[0m     @     0x55d088a95a20 method_vectorcall
[2m[36m(pid=23876)[0m     @     0x55d088a09bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23876)[0m     @     0x55d088a94baf _PyEval_EvalCodeWithName
[2m[36m(pid=23876)[0m     @     0x55d088a95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23876)[0m     @     0x55d088a0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23876)[0m     @     0x55d088a94baf _PyEval_EvalCodeWithName
[2m[36m(pid=23876)[0m     @     0x55d088a95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23876)[0m     @     0x55d088a0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23876)[0m     @     0x55d088a94baf _PyEval_EvalCodeWithName
[2m[36m(pid=23876)[0m     @     0x55d088a95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23876)[0m     @     0x55d088a0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23876)[0m     @     0x55d088a94baf _PyEval_EvalCodeWithName
[2m[36m(pid=23876)[0m     @     0x55d088a95643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23876)[0m     @     0x55d088a0a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23941)[0m     @     0x7fc4af0dc8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23941)[0m     @     0x7fc4acc094f5 at::Tensor::copy_()
[2m[36m(pid=23941)[0m     @     0x7fc4b2cb479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23941)[0m     @     0x5568d17e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23941)[0m     @     0x5568d1743b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23941)[0m     @     0x5568d17cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23941)[0m     @     0x5568d17cfa20 method_vectorcall
[2m[36m(pid=23941)[0m     @     0x5568d1743bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23941)[0m     @     0x5568d17cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23941)[0m     @     0x5568d17cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23941)[0m     @     0x5568d1744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23941)[0m     @     0x5568d17cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23941)[0m     @     0x5568d17cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23941)[0m     @     0x5568d1744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23941)[0m     @     0x5568d17cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23941)[0m     @     0x5568d17cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23941)[0m     @     0x5568d1744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23941)[0m     @     0x5568d17cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23941)[0m     @     0x5568d17cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23941)[0m     @     0x5568d1744689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x7ee5abef44f5 at::Tensor::copy_()
[2m[36m(pid=23855)[0m     @     0x7ee5b1f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23855)[0m     @     0x559f1765afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23855)[0m     @     0x559f175b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x559f17640baf _PyEval_EvalCodeWithName
[2m[36m(pid=23855)[0m     @     0x559f17641a20 method_vectorcall
[2m[36m(pid=23855)[0m     @     0x559f175b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x559f17640baf _PyEval_EvalCodeWithName
[2m[36m(pid=23855)[0m     @     0x559f17641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23855)[0m     @     0x559f175b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x559f17640baf _PyEval_EvalCodeWithName
[2m[36m(pid=23855)[0m     @     0x559f17641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23855)[0m     @     0x559f175b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x559f17640baf _PyEval_EvalCodeWithName
[2m[36m(pid=23855)[0m     @     0x559f17641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23855)[0m     @     0x559f175b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23855)[0m     @     0x559f17640baf _PyEval_EvalCodeWithName
[2m[36m(pid=23855)[0m     @     0x559f17641643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23855)[0m     @     0x559f175b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23938)[0m     @     0x7f61099e54f5 at::Tensor::copy_()
[2m[36m(pid=23938)[0m     @     0x7f610beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23938)[0m     @     0x7f61099e54f5 at::Tensor::copy_()
[2m[36m(pid=23938)[0m     @     0x7f610fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23938)[0m     @     0x55b53c4d4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23938)[0m     @     0x55b53c42fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23938)[0m     @     0x55b53c4babaf _PyEval_EvalCodeWithName
[2m[36m(pid=23938)[0m     @     0x55b53c4bba20 method_vectorcall
[2m[36m(pid=23938)[0m     @     0x55b53c42fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23938)[0m     @     0x55b53c4babaf _PyEval_EvalCodeWithName
[2m[36m(pid=23938)[0m     @     0x55b53c4bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23938)[0m     @     0x55b53c430689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23938)[0m     @     0x55b53c4babaf _PyEval_EvalCodeWithName
[2m[36m(pid=23938)[0m     @     0x55b53c4bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23938)[0m     @     0x55b53c430689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23938)[0m     @     0x55b53c4babaf _PyEval_EvalCodeWithName
[2m[36m(pid=23938)[0m     @     0x55b53c4bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23938)[0m     @     0x55b53c430689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23938)[0m     @     0x55b53c4babaf _PyEval_EvalCodeWithName
[2m[36m(pid=23938)[0m     @     0x55b53c4bb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23938)[0m     @     0x55b53c430689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23963)[0m     @     0x7f2c83f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23963)[0m     @     0x7f2c83f5f388 at::native::copy_impl()
[2m[36m(pid=23963)[0m     @     0x7f2c83f615a4 at::native::copy_()
[2m[36m(pid=23945)[0m     @     0x7f6f219fd4f5 at::Tensor::copy_()
[2m[36m(pid=23945)[0m     @     0x7f6f23ed08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23945)[0m     @     0x7f6f219fd4f5 at::Tensor::copy_()
[2m[36m(pid=23945)[0m     @     0x7f6f27aa879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23945)[0m     @     0x55917e19ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23945)[0m     @     0x55917e0fab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23945)[0m     @     0x55917e185baf _PyEval_EvalCodeWithName
[2m[36m(pid=23945)[0m     @     0x55917e186a20 method_vectorcall
[2m[36m(pid=23945)[0m     @     0x55917e0fabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23945)[0m     @     0x55917e185baf _PyEval_EvalCodeWithName
[2m[36m(pid=23945)[0m     @     0x55917e186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23945)[0m     @     0x55917e0fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23945)[0m     @     0x55917e185baf _PyEval_EvalCodeWithName
[2m[36m(pid=23945)[0m     @     0x55917e186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23945)[0m     @     0x55917e0fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23945)[0m     @     0x55917e185baf _PyEval_EvalCodeWithName
[2m[36m(pid=23945)[0m     @     0x55917e186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23945)[0m     @     0x55917e0fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23945)[0m     @     0x55917e185baf _PyEval_EvalCodeWithName
[2m[36m(pid=23945)[0m     @     0x55917e186643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23945)[0m     @     0x55917e0fb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23982)[0m     @     0x7fa3a978f5a4 at::native::copy_()
[2m[36m(pid=23982)[0m     @     0x7fa3a9e7a4f5 at::Tensor::copy_()
[2m[36m(pid=23982)[0m     @     0x7fa3ac34d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23982)[0m     @     0x7fa3a9e7a4f5 at::Tensor::copy_()
[2m[36m(pid=23982)[0m     @     0x7fa3aff2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23982)[0m     @     0x55c39f5b3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23982)[0m     @     0x55c39f50eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23982)[0m     @     0x55c39f599baf _PyEval_EvalCodeWithName
[2m[36m(pid=23982)[0m     @     0x55c39f59aa20 method_vectorcall
[2m[36m(pid=23982)[0m     @     0x55c39f50ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23982)[0m     @     0x55c39f599baf _PyEval_EvalCodeWithName
[2m[36m(pid=23982)[0m     @     0x55c39f59a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23982)[0m     @     0x55c39f50f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23982)[0m     @     0x55c39f599baf _PyEval_EvalCodeWithName
[2m[36m(pid=23982)[0m     @     0x55c39f59a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23982)[0m     @     0x55c39f50f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23982)[0m     @     0x55c39f599baf _PyEval_EvalCodeWithName
[2m[36m(pid=23982)[0m     @     0x55c39f59a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23982)[0m     @     0x55c39f50f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23982)[0m     @     0x55c39f599baf _PyEval_EvalCodeWithName
[2m[36m(pid=23982)[0m     @     0x55c39f59a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23982)[0m     @     0x55c39f50f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23856)[0m     @     0x7f496feb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23856)[0m     @     0x7f496d9e54f5 at::Tensor::copy_()
[2m[36m(pid=23856)[0m     @     0x7f4973a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23856)[0m     @     0x55eedb0eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23856)[0m     @     0x55eedb045b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23856)[0m     @     0x55eedb0d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23856)[0m     @     0x55eedb0d1a20 method_vectorcall
[2m[36m(pid=23856)[0m     @     0x55eedb045bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23856)[0m     @     0x55eedb0d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23856)[0m     @     0x55eedb0d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23856)[0m     @     0x55eedb046689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23856)[0m     @     0x55eedb0d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23856)[0m     @     0x55eedb0d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23856)[0m     @     0x55eedb046689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23856)[0m     @     0x55eedb0d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23856)[0m     @     0x55eedb0d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23856)[0m     @     0x55eedb046689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23856)[0m     @     0x55eedb0d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=23856)[0m     @     0x55eedb0d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23856)[0m     @     0x55eedb046689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23936)[0m     @     0x7f03efdefb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23936)[0m     @     0x7f03efe12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23936)[0m     @     0x7f03ef2b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23936)[0m     @     0x7f03ef2b2388 at::native::copy_impl()
[2m[36m(pid=23936)[0m     @     0x7f03ef2b45a4 at::native::copy_()
[2m[36m(pid=23939)[0m     @     0x7ef70f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=23939)[0m     @     0x7ef711e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23939)[0m     @     0x7ef70f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=23939)[0m     @     0x7ef715a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23939)[0m     @     0x5562dc6c5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23939)[0m     @     0x5562dc620b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23939)[0m     @     0x5562dc6abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23939)[0m     @     0x5562dc6aca20 method_vectorcall
[2m[36m(pid=23939)[0m     @     0x5562dc620bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23939)[0m     @     0x5562dc6abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23939)[0m     @     0x5562dc6ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23939)[0m     @     0x5562dc621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23939)[0m     @     0x5562dc6abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23939)[0m     @     0x5562dc6ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23939)[0m     @     0x5562dc621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23939)[0m     @     0x5562dc6abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23939)[0m     @     0x5562dc6ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23939)[0m     @     0x5562dc621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23939)[0m     @     0x5562dc6abbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23939)[0m     @     0x5562dc6ac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23939)[0m     @     0x5562dc621689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23920)[0m     @     0x7f3873ae45a4 at::native::copy_()
[2m[36m(pid=23920)[0m     @     0x7f38741cf4f5 at::Tensor::copy_()
[2m[36m(pid=23920)[0m     @     0x7f38766a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23920)[0m     @     0x7f38741cf4f5 at::Tensor::copy_()
[2m[36m(pid=23865)[0m     @     0x7f4db21c24f5 at::Tensor::copy_()
[2m[36m(pid=23865)[0m     @     0x7f4db46958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23865)[0m     @     0x7f4db21c24f5 at::Tensor::copy_()
[2m[36m(pid=23865)[0m     @     0x7f4db826d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23865)[0m     @     0x556450c9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23865)[0m     @     0x556450bf6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23865)[0m     @     0x556450c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23865)[0m     @     0x556450c82a20 method_vectorcall
[2m[36m(pid=23865)[0m     @     0x556450bf6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23865)[0m     @     0x556450c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23865)[0m     @     0x556450c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23865)[0m     @     0x556450bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23865)[0m     @     0x556450c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23865)[0m     @     0x556450c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23865)[0m     @     0x556450bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23865)[0m     @     0x556450c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23865)[0m     @     0x556450c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23865)[0m     @     0x556450bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23865)[0m     @     0x556450c81baf _PyEval_EvalCodeWithName
[2m[36m(pid=23865)[0m     @     0x556450c82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23865)[0m     @     0x556450bf7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23949)[0m     @     0x7f844cd274f5 at::Tensor::copy_()
[2m[36m(pid=23949)[0m     @     0x7f8452dd279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23949)[0m     @     0x5641ff897fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23949)[0m     @     0x5641ff7f2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23949)[0m     @     0x5641ff87dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23949)[0m     @     0x5641ff87ea20 method_vectorcall
[2m[36m(pid=23949)[0m     @     0x5641ff7f2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23949)[0m     @     0x5641ff87dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23949)[0m     @     0x5641ff87e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23949)[0m     @     0x5641ff7f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23949)[0m     @     0x5641ff87dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23949)[0m     @     0x5641ff87e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23949)[0m     @     0x5641ff7f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23949)[0m     @     0x5641ff87dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23949)[0m     @     0x5641ff87e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23949)[0m     @     0x5641ff7f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23949)[0m     @     0x5641ff87dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23949)[0m     @     0x5641ff87e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23949)[0m     @     0x5641ff7f3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23935)[0m     @     0x557dbdec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23935)[0m     @     0x557dbdec3a20 method_vectorcall
[2m[36m(pid=23935)[0m     @     0x557dbde37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23935)[0m     @     0x557dbdec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23935)[0m     @     0x557dbdec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23935)[0m     @     0x557dbde38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23935)[0m     @     0x557dbdec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23935)[0m     @     0x557dbdec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23935)[0m     @     0x557dbde38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23935)[0m     @     0x557dbdec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23935)[0m     @     0x557dbdec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23935)[0m     @     0x557dbde38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23935)[0m     @     0x557dbdec2baf _PyEval_EvalCodeWithName
[2m[36m(pid=23935)[0m     @     0x557dbdec3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23935)[0m     @     0x557dbde38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23924)[0m     @     0x7f12b3da679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23924)[0m     @     0x559f03bfdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23924)[0m     @     0x559f03b58b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23924)[0m     @     0x559f03be3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23924)[0m     @     0x559f03be4a20 method_vectorcall
[2m[36m(pid=23924)[0m     @     0x559f03b58bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23924)[0m     @     0x559f03be3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23924)[0m     @     0x559f03be4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23924)[0m     @     0x559f03b59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23924)[0m     @     0x559f03be3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23924)[0m     @     0x559f03be4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23924)[0m     @     0x559f03b59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23924)[0m     @     0x559f03be3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23924)[0m     @     0x559f03be4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23924)[0m     @     0x559f03b59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23924)[0m     @     0x559f03be3baf _PyEval_EvalCodeWithName
[2m[36m(pid=23924)[0m     @     0x559f03be4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23924)[0m     @     0x559f03b59689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23878)[0m     @     0x7f937cae34f5 at::Tensor::copy_()
[2m[36m(pid=23878)[0m     @     0x7f9382b8e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23878)[0m     @     0x564b07ce9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23878)[0m     @     0x564b07c44b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23878)[0m     @     0x564b07ccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23878)[0m     @     0x564b07cd0a20 method_vectorcall
[2m[36m(pid=23878)[0m     @     0x564b07c44bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23878)[0m     @     0x564b07ccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23878)[0m     @     0x564b07cd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23878)[0m     @     0x564b07c45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23878)[0m     @     0x564b07ccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23878)[0m     @     0x564b07cd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23878)[0m     @     0x564b07c45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23878)[0m     @     0x564b07ccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23878)[0m     @     0x564b07cd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23878)[0m     @     0x564b07c45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23878)[0m     @     0x564b07ccfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23878)[0m     @     0x564b07cd0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23878)[0m     @     0x564b07c45689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23932)[0m     @     0x7f23034724f5 at::Tensor::copy_()
[2m[36m(pid=23932)[0m     @     0x7f230951d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23932)[0m     @     0x5571dd9c1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23932)[0m     @     0x5571dd91cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23932)[0m     @     0x5571dd9a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23932)[0m     @     0x5571dd9a8a20 method_vectorcall
[2m[36m(pid=23932)[0m     @     0x5571dd91cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23932)[0m     @     0x5571dd9a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23932)[0m     @     0x5571dd9a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23932)[0m     @     0x5571dd91d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23932)[0m     @     0x5571dd9a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23932)[0m     @     0x5571dd9a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23932)[0m     @     0x5571dd91d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23932)[0m     @     0x5571dd9a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23932)[0m     @     0x5571dd9a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23932)[0m     @     0x5571dd91d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23932)[0m     @     0x5571dd9a7baf _PyEval_EvalCodeWithName
[2m[36m(pid=23932)[0m     @     0x5571dd9a8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23932)[0m     @     0x5571dd91d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x7f4e1e48cd91 at::TensorIterator::for_each()
[2m[36m(pid=23850)[0m     @     0x7f4e1ed6fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=23850)[0m     @     0x7f4e1ed92c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=23849)[0m     @     0x7f66fd8de4f5 at::Tensor::copy_()
[2m[36m(pid=23849)[0m     @     0x7f66ffdb18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23849)[0m     @     0x7f66fd8de4f5 at::Tensor::copy_()
[2m[36m(pid=23849)[0m     @     0x7f670398979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23849)[0m     @     0x556f9e0a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23849)[0m     @     0x556f9e001b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23849)[0m     @     0x556f9e08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23849)[0m     @     0x556f9e08da20 method_vectorcall
[2m[36m(pid=23849)[0m     @     0x556f9e001bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23849)[0m     @     0x556f9e08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23849)[0m     @     0x556f9e08d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23849)[0m     @     0x556f9e002689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23849)[0m     @     0x556f9e08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23849)[0m     @     0x556f9e08d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23849)[0m     @     0x556f9e002689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23849)[0m     @     0x556f9e08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23849)[0m     @     0x556f9e08d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23849)[0m     @     0x556f9e002689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23849)[0m     @     0x556f9e08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23849)[0m     @     0x556f9e08d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23849)[0m     @     0x556f9e002689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23923)[0m     @     0x7f582b26f4f5 at::Tensor::copy_()
[2m[36m(pid=23923)[0m     @     0x7f583131a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23923)[0m     @     0x55f14a800fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23923)[0m     @     0x55f14a75bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23923)[0m     @     0x55f14a7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23923)[0m     @     0x55f14a7e7a20 method_vectorcall
[2m[36m(pid=23923)[0m     @     0x55f14a75bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23923)[0m     @     0x55f14a7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23923)[0m     @     0x55f14a7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23923)[0m     @     0x55f14a75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23923)[0m     @     0x55f14a7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23923)[0m     @     0x55f14a7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23923)[0m     @     0x55f14a75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23923)[0m     @     0x55f14a7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23923)[0m     @     0x55f14a7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23923)[0m     @     0x55f14a75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23923)[0m     @     0x55f14a7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23923)[0m     @     0x55f14a7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23923)[0m     @     0x55f14a75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23953)[0m     @     0x7fad02b84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23953)[0m     @     0x7fad02b82388 at::native::copy_impl()
[2m[36m(pid=23953)[0m     @     0x7fad02b845a4 at::native::copy_()
[2m[36m(pid=23953)[0m     @     0x7fad0326f4f5 at::Tensor::copy_()
[2m[36m(pid=23953)[0m     @     0x7fad057428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23871)[0m     @     0x7fbb0821079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23871)[0m     @     0x55feea2cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23871)[0m     @     0x55feea226b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23871)[0m     @     0x55feea2b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23871)[0m     @     0x55feea2b2a20 method_vectorcall
[2m[36m(pid=23871)[0m     @     0x55feea226bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23871)[0m     @     0x55feea2b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23871)[0m     @     0x55feea2b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23871)[0m     @     0x55feea227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23871)[0m     @     0x55feea2b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23871)[0m     @     0x55feea2b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23871)[0m     @     0x55feea227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23871)[0m     @     0x55feea2b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23871)[0m     @     0x55feea2b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23871)[0m     @     0x55feea227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23871)[0m     @     0x55feea2b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=23871)[0m     @     0x55feea2b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23871)[0m     @     0x55feea227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23942)[0m     @     0x7f41ca9b14f5 at::Tensor::copy_()
[2m[36m(pid=23942)[0m     @     0x7f41d0a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23942)[0m     @     0x560502e28fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23942)[0m     @     0x560502d83b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23942)[0m     @     0x560502e0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23942)[0m     @     0x560502e0fa20 method_vectorcall
[2m[36m(pid=23942)[0m     @     0x560502d83bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23942)[0m     @     0x560502e0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23942)[0m     @     0x560502e0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23942)[0m     @     0x560502d84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23942)[0m     @     0x560502e0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23942)[0m     @     0x560502e0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23942)[0m     @     0x560502d84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23942)[0m     @     0x560502e0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23942)[0m     @     0x560502e0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23942)[0m     @     0x560502d84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23942)[0m     @     0x560502e0ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23942)[0m     @     0x560502e0f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23942)[0m     @     0x560502d84689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23990)[0m     @     0x55977fd69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23990)[0m     @     0x55977fcde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23990)[0m     @     0x55977fd68baf _PyEval_EvalCodeWithName
[2m[36m(pid=23990)[0m     @     0x55977fd69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23990)[0m     @     0x55977fcde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23967)[0m     @     0x55dd31de0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23967)[0m     @     0x55dd31e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23967)[0m     @     0x55dd31e6ca20 method_vectorcall
[2m[36m(pid=23967)[0m     @     0x55dd31de0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23967)[0m     @     0x55dd31e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23967)[0m     @     0x55dd31e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23967)[0m     @     0x55dd31de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23967)[0m     @     0x55dd31e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23967)[0m     @     0x55dd31e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23967)[0m     @     0x55dd31de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23967)[0m     @     0x55dd31e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23967)[0m     @     0x55dd31e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23967)[0m     @     0x55dd31de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23967)[0m     @     0x55dd31e6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23967)[0m     @     0x55dd31e6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23967)[0m     @     0x55dd31de1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23972)[0m     @     0x55a800febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23972)[0m     @     0x55a800fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23972)[0m     @     0x55a800f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23972)[0m     @     0x55a800febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23972)[0m     @     0x55a800fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23972)[0m     @     0x55a800f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23972)[0m     @     0x55a800febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23972)[0m     @     0x55a800fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23972)[0m     @     0x55a800f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23972)[0m     @     0x55a800febbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23972)[0m     @     0x55a800fec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23972)[0m     @     0x55a800f61689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23866)[0m     @     0x7f2af346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23866)[0m     @     0x55bad3c17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23866)[0m     @     0x55bad3b72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23866)[0m     @     0x55bad3bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23866)[0m     @     0x55bad3bfea20 method_vectorcall
[2m[36m(pid=23866)[0m     @     0x55bad3b72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23866)[0m     @     0x55bad3bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23866)[0m     @     0x55bad3bfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23866)[0m     @     0x55bad3b73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23866)[0m     @     0x55bad3bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23866)[0m     @     0x55bad3bfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23866)[0m     @     0x55bad3b73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23866)[0m     @     0x55bad3bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23866)[0m     @     0x55bad3bfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23866)[0m     @     0x55bad3b73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23866)[0m     @     0x55bad3bfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23866)[0m     @     0x55bad3bfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23866)[0m     @     0x55bad3b73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23965)[0m     @     0x558f95526baf _PyEval_EvalCodeWithName
[2m[36m(pid=23965)[0m     @     0x558f95527643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23965)[0m     @     0x558f9549c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23929)[0m     @     0x564add1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23929)[0m     @     0x564add1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23929)[0m     @     0x564add172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23929)[0m     @     0x564add1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23929)[0m     @     0x564add1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23929)[0m     @     0x564add172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23929)[0m     @     0x564add1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23929)[0m     @     0x564add1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23929)[0m     @     0x564add172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23859)[0m     @     0x7f14d25e24f5 at::Tensor::copy_()
[2m[36m(pid=23859)[0m     @     0x7f14d868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23859)[0m     @     0x55736f656fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23859)[0m     @     0x55736f5b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23859)[0m     @     0x55736f63cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23859)[0m     @     0x55736f63da20 method_vectorcall
[2m[36m(pid=23859)[0m     @     0x55736f5b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23859)[0m     @     0x55736f63cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23859)[0m     @     0x55736f63d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23859)[0m     @     0x55736f5b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23859)[0m     @     0x55736f63cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23859)[0m     @     0x55736f63d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23859)[0m     @     0x55736f5b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23859)[0m     @     0x55736f63cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23859)[0m     @     0x55736f63d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23859)[0m     @     0x55736f5b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23859)[0m     @     0x55736f63cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23859)[0m     @     0x55736f63d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23859)[0m     @     0x55736f5b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23874)[0m     @     0x557421004b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23874)[0m     @     0x55742108fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23874)[0m     @     0x557421090a20 method_vectorcall
[2m[36m(pid=23874)[0m     @     0x557421004bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23874)[0m     @     0x55742108fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23874)[0m     @     0x557421090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23874)[0m     @     0x557421005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23874)[0m     @     0x55742108fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23874)[0m     @     0x557421090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23874)[0m     @     0x557421005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23874)[0m     @     0x55742108fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23874)[0m     @     0x557421090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23874)[0m     @     0x557421005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23874)[0m     @     0x55742108fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23874)[0m     @     0x557421090643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23874)[0m     @     0x557421005689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x7fc236d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23928)[0m     @     0x55c7dd44ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23928)[0m     @     0x55c7dd3aab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x55c7dd435baf _PyEval_EvalCodeWithName
[2m[36m(pid=23928)[0m     @     0x55c7dd436a20 method_vectorcall
[2m[36m(pid=23928)[0m     @     0x55c7dd3aabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x55c7dd435baf _PyEval_EvalCodeWithName
[2m[36m(pid=23928)[0m     @     0x55c7dd436643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23928)[0m     @     0x55c7dd3ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x55c7dd435baf _PyEval_EvalCodeWithName
[2m[36m(pid=23928)[0m     @     0x55c7dd436643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23928)[0m     @     0x55c7dd3ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x55c7dd435baf _PyEval_EvalCodeWithName
[2m[36m(pid=23928)[0m     @     0x55c7dd436643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23928)[0m     @     0x55c7dd3ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23928)[0m     @     0x55c7dd435baf _PyEval_EvalCodeWithName
[2m[36m(pid=23928)[0m     @     0x55c7dd436643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23928)[0m     @     0x55c7dd3ab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23869)[0m     @     0x7f2adbe555a4 at::native::copy_()
[2m[36m(pid=23869)[0m     @     0x7f2adc5404f5 at::Tensor::copy_()
[2m[36m(pid=23869)[0m     @     0x7f2adea138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23963)[0m     @     0x7f2c8464c4f5 at::Tensor::copy_()
[2m[36m(pid=23963)[0m     @     0x7f2c86b1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23963)[0m     @     0x7f2c8464c4f5 at::Tensor::copy_()
[2m[36m(pid=23963)[0m     @     0x7f2c8a6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23963)[0m     @     0x55fc1b336fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23963)[0m     @     0x55fc1b291b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23963)[0m     @     0x55fc1b31cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23963)[0m     @     0x55fc1b31da20 method_vectorcall
[2m[36m(pid=23963)[0m     @     0x55fc1b291bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23963)[0m     @     0x55fc1b31cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23963)[0m     @     0x55fc1b31d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23963)[0m     @     0x55fc1b292689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23963)[0m     @     0x55fc1b31cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23963)[0m     @     0x55fc1b31d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23936)[0m     @     0x7f03ef99f4f5 at::Tensor::copy_()
[2m[36m(pid=23936)[0m     @     0x7f03f1e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23936)[0m     @     0x7f03ef99f4f5 at::Tensor::copy_()
[2m[36m(pid=23936)[0m     @     0x7f03f5a4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23936)[0m     @     0x55fc472a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23936)[0m     @     0x55fc471feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23936)[0m     @     0x55fc47289baf _PyEval_EvalCodeWithName
[2m[36m(pid=23936)[0m     @     0x55fc4728aa20 method_vectorcall
[2m[36m(pid=23936)[0m     @     0x55fc471febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23936)[0m     @     0x55fc47289baf _PyEval_EvalCodeWithName
[2m[36m(pid=23936)[0m     @     0x55fc4728a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23936)[0m     @     0x55fc471ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23936)[0m     @     0x55fc47289baf _PyEval_EvalCodeWithName
[2m[36m(pid=23936)[0m     @     0x55fc4728a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23936)[0m     @     0x55fc471ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23936)[0m     @     0x55fc47289baf _PyEval_EvalCodeWithName
[2m[36m(pid=23936)[0m     @     0x55fc4728a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23936)[0m     @     0x55fc471ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23936)[0m     @     0x55fc47289baf _PyEval_EvalCodeWithName
[2m[36m(pid=23936)[0m     @     0x55fc4728a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23936)[0m     @     0x55fc471ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23920)[0m     @     0x7f387a27a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23920)[0m     @     0x55a656ce0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23920)[0m     @     0x55a656c3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23920)[0m     @     0x55a656cc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23920)[0m     @     0x55a656cc7a20 method_vectorcall
[2m[36m(pid=23920)[0m     @     0x55a656c3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23920)[0m     @     0x55a656cc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23920)[0m     @     0x55a656cc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23920)[0m     @     0x55a656c3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23920)[0m     @     0x55a656cc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23920)[0m     @     0x55a656cc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23920)[0m     @     0x55a656c3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23920)[0m     @     0x55a656cc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23920)[0m     @     0x55a656cc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23920)[0m     @     0x55a656c3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23920)[0m     @     0x55a656cc6baf _PyEval_EvalCodeWithName
[2m[36m(pid=23920)[0m     @     0x55a656cc7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23920)[0m     @     0x55a656c3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x7f4e1e234a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=23850)[0m     @     0x7f4e1e232388 at::native::copy_impl()
[2m[36m(pid=23850)[0m     @     0x7f4e1e2345a4 at::native::copy_()
[2m[36m(pid=23953)[0m     @     0x7fad0326f4f5 at::Tensor::copy_()
[2m[36m(pid=23953)[0m     @     0x7fad0931a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23953)[0m     @     0x55cf0ad49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23953)[0m     @     0x55cf0aca4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23953)[0m     @     0x55cf0ad2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23953)[0m     @     0x55cf0ad30a20 method_vectorcall
[2m[36m(pid=23953)[0m     @     0x55cf0aca4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23953)[0m     @     0x55cf0ad2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23953)[0m     @     0x55cf0ad30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23953)[0m     @     0x55cf0aca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23953)[0m     @     0x55cf0ad2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23953)[0m     @     0x55cf0ad30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23869)[0m     @     0x7f2adc5404f5 at::Tensor::copy_()
[2m[36m(pid=23869)[0m     @     0x7f2ae25eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23869)[0m     @     0x55e00ca43fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23869)[0m     @     0x55e00c99eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23869)[0m     @     0x55e00ca29baf _PyEval_EvalCodeWithName
[2m[36m(pid=23869)[0m     @     0x55e00ca2aa20 method_vectorcall
[2m[36m(pid=23869)[0m     @     0x55e00c99ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23869)[0m     @     0x55e00ca29baf _PyEval_EvalCodeWithName
[2m[36m(pid=23869)[0m     @     0x55e00ca2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23869)[0m     @     0x55e00c99f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23869)[0m     @     0x55e00ca29baf _PyEval_EvalCodeWithName
[2m[36m(pid=23869)[0m     @     0x55e00ca2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23869)[0m     @     0x55e00c99f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23869)[0m     @     0x55e00ca29baf _PyEval_EvalCodeWithName
[2m[36m(pid=23869)[0m     @     0x55e00ca2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23869)[0m     @     0x55e00c99f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23869)[0m     @     0x55e00ca29baf _PyEval_EvalCodeWithName
[2m[36m(pid=23869)[0m     @     0x55e00ca2a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23869)[0m     @     0x55e00c99f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23963)[0m     @     0x55fc1b292689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23963)[0m     @     0x55fc1b31cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23963)[0m     @     0x55fc1b31d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23963)[0m     @     0x55fc1b292689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23963)[0m     @     0x55fc1b31cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23963)[0m     @     0x55fc1b31d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23963)[0m     @     0x55fc1b292689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x7f4e1e91f4f5 at::Tensor::copy_()
[2m[36m(pid=23850)[0m     @     0x7f4e20df28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=23953)[0m     @     0x55cf0aca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23953)[0m     @     0x55cf0ad2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23953)[0m     @     0x55cf0ad30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23953)[0m     @     0x55cf0aca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23953)[0m     @     0x55cf0ad2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=23953)[0m     @     0x55cf0ad30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23953)[0m     @     0x55cf0aca5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x7f4e1e91f4f5 at::Tensor::copy_()
[2m[36m(pid=23850)[0m     @     0x7f4e249ca79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=23850)[0m     @     0x55b930278fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=23850)[0m     @     0x55b9301d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x55b93025ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23850)[0m     @     0x55b93025fa20 method_vectorcall
[2m[36m(pid=23850)[0m     @     0x55b9301d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x55b93025ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23850)[0m     @     0x55b93025f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23850)[0m     @     0x55b9301d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x55b93025ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23850)[0m     @     0x55b93025f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23850)[0m     @     0x55b9301d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x55b93025ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23850)[0m     @     0x55b93025f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23850)[0m     @     0x55b9301d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=23850)[0m     @     0x55b93025ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=23850)[0m     @     0x55b93025f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=23850)[0m     @     0x55b9301d4689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:35:42,880	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
2020-11-05 10:35:42,882	ERROR trial_runner.py:567 -- Trial PPO_jss_env_a38f2_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=23992, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 10:35:42,901	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:35:42,901	WARNING worker.py:1072 -- A worker died or was killed while executing task fffffffffffffffff120020c01000000.
2020-11-05 10:35:42,901	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9d526f0201000000.
[2m[33m(pid=raylet)[0m E1105 10:35:42.874033 23808 23808 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:35:42.890007 23808 23808 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[36m(pid=23992)[0m E1105 10:35:42.875599 23992 25000 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=23992)[0m E1105 10:35:42.875751 23992 25000 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=23992)[0m E1105 10:35:42.890755 23992 25000 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=23992)[0m E1105 10:35:42.890870 23992 25000 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=23992)[0m E1105 10:35:42.892194 23992 25000 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=23992)[0m E1105 10:35:42.894696 23992 25000 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=ad47e6e6a1a1660b0314ce3001000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=23992)[0m E1105 10:35:42.898910 23992 25000 task_manager.cc:323] Task failed: IOError: 14: Broken pipe: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=fd45b8edfc7db2cef120020c01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=f120020c01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=23992)[0m E1105 10:35:42.899017 23992 25000 task_manager.cc:323] Task failed: IOError: 14: Broken pipe: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=409539b13596edf4f120020c01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=f120020c01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=23992)[0m E1105 10:35:42.899068 23992 25000 task_manager.cc:323] Task failed: IOError: 14: Broken pipe: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=7b1c04d217e1ff45f120020c01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=f120020c01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:35:42,911	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
== Status ==
Memory usage on this node: 23.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a38f2_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_a38f2_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_a38f2_00000_0_2020-11-05_10-35-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 23.0/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a38f2_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_a38f2_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_a38f2_00000_0_2020-11-05_10-35-35/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
2020-11-05 10:35:42,922	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_a38f2_00000])
