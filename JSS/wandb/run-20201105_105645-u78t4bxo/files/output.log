2020-11-05 10:56:49,589	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.62 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_9ba7d_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=4892)[0m 2020-11-05 10:56:52,373	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=4804)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4804)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4804)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4789)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4789)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4789)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4902)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4902)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4902)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4902)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4902)[0m *** SIGSEGV (@0x0) received by PID 4902 (TID 0x7f1631c4f700) from PID 0; stack trace: ***
[2m[36m(pid=4806)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4806)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4806)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4890)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4890)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4890)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4848)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4848)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4848)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4885)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4885)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4885)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4839)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4839)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4839)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4913)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4913)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4913)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4913)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4913)[0m *** SIGSEGV (@0x0) received by PID 4913 (TID 0x7fb9b4018700) from PID 0; stack trace: ***
[2m[36m(pid=4913)[0m     @     0x7fb9b3bf1390 (unknown)
[2m[36m(pid=4887)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4887)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4887)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4887)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4887)[0m *** SIGSEGV (@0x0) received by PID 4887 (TID 0x7fbc80fbb700) from PID 0; stack trace: ***
[2m[36m(pid=4819)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4819)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4819)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4857)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4857)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4857)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4864)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4864)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4864)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4889)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4889)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4889)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4889)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4889)[0m *** SIGSEGV (@0x0) received by PID 4889 (TID 0x7f417244a700) from PID 0; stack trace: ***
[2m[36m(pid=4781)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4781)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4781)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4900)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4900)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4900)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4900)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4900)[0m *** SIGSEGV (@0x0) received by PID 4900 (TID 0x7f810c6d7700) from PID 0; stack trace: ***
[2m[36m(pid=4785)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4785)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4785)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4793)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4793)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4793)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4894)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4894)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4894)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4894)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4894)[0m *** SIGSEGV (@0x0) received by PID 4894 (TID 0x7f8ed4d46700) from PID 0; stack trace: ***
[2m[36m(pid=4878)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4878)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4878)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4837)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4837)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4837)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4786)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4786)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4786)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4852)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4852)[0m *** SIGSEGV (@0x0) received by PID 4852 (TID 0x7fdf3335f700) from PID 0; stack trace: ***
[2m[36m(pid=4783)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4783)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4783)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4861)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4861)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4861)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4861)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4801)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4801)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4801)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4875)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4875)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4875)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4875)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4875)[0m *** SIGSEGV (@0x0) received by PID 4875 (TID 0x7f5f53a3d700) from PID 0; stack trace: ***
[2m[36m(pid=4875)[0m     @     0x7f5f53616390 (unknown)
[2m[36m(pid=4875)[0m     @     0x7f3055829fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4875)[0m     @     0x7f3052b1d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4815)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4815)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4815)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4815)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4815)[0m *** SIGSEGV (@0x0) received by PID 4815 (TID 0x7efef67c7700) from PID 0; stack trace: ***
[2m[36m(pid=4812)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4812)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4812)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4812)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4812)[0m *** SIGSEGV (@0x0) received by PID 4812 (TID 0x7f9d5f8ce700) from PID 0; stack trace: ***
[2m[36m(pid=4812)[0m     @     0x7f9d5f4a7390 (unknown)
[2m[36m(pid=4879)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4879)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4879)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4879)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4879)[0m *** SIGSEGV (@0x0) received by PID 4879 (TID 0x7f0795c87700) from PID 0; stack trace: ***
[2m[36m(pid=4879)[0m     @     0x7f0795860390 (unknown)
[2m[36m(pid=4879)[0m     @     0x7ed897a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4879)[0m     @     0x7ed894d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4870)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4870)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4870)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4870)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4870)[0m *** SIGSEGV (@0x0) received by PID 4870 (TID 0x7f22a58dd700) from PID 0; stack trace: ***
[2m[36m(pid=4870)[0m     @     0x7f22a54b6390 (unknown)
[2m[36m(pid=4870)[0m     @     0x7ef3a7643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4870)[0m     @     0x7ef3a493764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4870)[0m     @     0x7ef3a493a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4898)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4898)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4898)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4898)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4898)[0m *** SIGSEGV (@0x0) received by PID 4898 (TID 0x7f99f375d700) from PID 0; stack trace: ***
[2m[36m(pid=4898)[0m     @     0x7f99f3336390 (unknown)
[2m[36m(pid=4898)[0m     @     0x7f6af5530fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4856)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4856)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4856)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4856)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4856)[0m *** SIGSEGV (@0x0) received by PID 4856 (TID 0x7f2f9e576700) from PID 0; stack trace: ***
[2m[36m(pid=4856)[0m     @     0x7f2f9e14f390 (unknown)
[2m[36m(pid=4862)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4862)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4862)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4862)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4862)[0m *** SIGSEGV (@0x0) received by PID 4862 (TID 0x7f1eebeaf700) from PID 0; stack trace: ***
[2m[36m(pid=4862)[0m     @     0x7f1eeba88390 (unknown)
[2m[36m(pid=4862)[0m     @     0x7eefedc7ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4782)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4782)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4782)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4782)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4782)[0m *** SIGSEGV (@0x0) received by PID 4782 (TID 0x7efd558b3700) from PID 0; stack trace: ***
[2m[36m(pid=4782)[0m     @     0x7efd5548c390 (unknown)
[2m[36m(pid=4882)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4882)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4882)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4882)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4882)[0m *** SIGSEGV (@0x0) received by PID 4882 (TID 0x7f90f8dc4700) from PID 0; stack trace: ***
[2m[36m(pid=4882)[0m     @     0x7f90f899d390 (unknown)
[2m[36m(pid=4882)[0m     @     0x7f61faa9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4882)[0m     @     0x7f61f7d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4811)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4811)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4811)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4811)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4811)[0m *** SIGSEGV (@0x0) received by PID 4811 (TID 0x7fa4d18cb700) from PID 0; stack trace: ***
[2m[36m(pid=4811)[0m     @     0x7fa4d14a4390 (unknown)
[2m[36m(pid=4811)[0m     @     0x7f75d3643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4811)[0m     @     0x7f75d093764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4787)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4787)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4787)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4787)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4787)[0m *** SIGSEGV (@0x0) received by PID 4787 (TID 0x7f50b26a1700) from PID 0; stack trace: ***
[2m[36m(pid=4804)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4804)[0m *** SIGSEGV (@0x0) received by PID 4804 (TID 0x7f09774cc700) from PID 0; stack trace: ***
[2m[36m(pid=4804)[0m     @     0x7f09770a5390 (unknown)
[2m[36m(pid=4804)[0m     @     0x7eda792a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4804)[0m     @     0x7eda7659464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4789)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4789)[0m *** SIGSEGV (@0x0) received by PID 4789 (TID 0x7fe2c8f7b700) from PID 0; stack trace: ***
[2m[36m(pid=4789)[0m     @     0x7fe2c8b54390 (unknown)
[2m[36m(pid=4902)[0m     @     0x7f1631828390 (unknown)
[2m[36m(pid=4902)[0m     @     0x7ee73396bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4902)[0m     @     0x7ee730c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4806)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4806)[0m *** SIGSEGV (@0x0) received by PID 4806 (TID 0x7fd4f7809700) from PID 0; stack trace: ***
[2m[36m(pid=4806)[0m     @     0x7fd4f73e2390 (unknown)
[2m[36m(pid=4890)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4890)[0m *** SIGSEGV (@0x0) received by PID 4890 (TID 0x7f1c775ef700) from PID 0; stack trace: ***
[2m[36m(pid=4890)[0m     @     0x7f1c771c8390 (unknown)
[2m[36m(pid=4890)[0m     @     0x7eed7939bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4890)[0m     @     0x7eed7668f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4848)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4848)[0m *** SIGSEGV (@0x0) received by PID 4848 (TID 0x7f3e54eff700) from PID 0; stack trace: ***
[2m[36m(pid=4885)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4885)[0m *** SIGSEGV (@0x0) received by PID 4885 (TID 0x7f9f1e923700) from PID 0; stack trace: ***
[2m[36m(pid=4839)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4839)[0m *** SIGSEGV (@0x0) received by PID 4839 (TID 0x7f4bac3fa700) from PID 0; stack trace: ***
[2m[36m(pid=4839)[0m     @     0x7f4babfd3390 (unknown)
[2m[36m(pid=4839)[0m     @     0x7f1cae12dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4839)[0m     @     0x7f1cab42164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4913)[0m     @     0x7f8ab5d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4913)[0m     @     0x7f8ab306064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4887)[0m     @     0x7fbc80b94390 (unknown)
[2m[36m(pid=4887)[0m     @     0x7f8d82d02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4887)[0m     @     0x7f8d7fff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4887)[0m     @     0x7f8d7fff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4819)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4819)[0m *** SIGSEGV (@0x0) received by PID 4819 (TID 0x7fafe55bd700) from PID 0; stack trace: ***
[2m[36m(pid=4819)[0m     @     0x7fafe5196390 (unknown)
[2m[36m(pid=4819)[0m     @     0x7f80e732cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4819)[0m     @     0x7f80e462064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4857)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4857)[0m *** SIGSEGV (@0x0) received by PID 4857 (TID 0x7fd9df97b700) from PID 0; stack trace: ***
[2m[36m(pid=4857)[0m     @     0x7fd9df554390 (unknown)
[2m[36m(pid=4857)[0m     @     0x7faae1761fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4864)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4864)[0m *** SIGSEGV (@0x0) received by PID 4864 (TID 0x7f728d404700) from PID 0; stack trace: ***
[2m[36m(pid=4864)[0m     @     0x7f728cfdd390 (unknown)
[2m[36m(pid=4889)[0m     @     0x7f4172023390 (unknown)
[2m[36m(pid=4889)[0m     @     0x7f127409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4889)[0m     @     0x7f127138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4781)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4781)[0m *** SIGSEGV (@0x0) received by PID 4781 (TID 0x7ff1db9db700) from PID 0; stack trace: ***
[2m[36m(pid=4781)[0m     @     0x7ff1db5b4390 (unknown)
[2m[36m(pid=4900)[0m     @     0x7f810c2b0390 (unknown)
[2m[36m(pid=4900)[0m     @     0x7f520e4d5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4900)[0m     @     0x7f520b7c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4785)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4785)[0m *** SIGSEGV (@0x0) received by PID 4785 (TID 0x7ff77369e700) from PID 0; stack trace: ***
[2m[36m(pid=4785)[0m     @     0x7ff773277390 (unknown)
[2m[36m(pid=4785)[0m     @     0x7fc875473fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4785)[0m     @     0x7fc87276764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4793)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4793)[0m *** SIGSEGV (@0x0) received by PID 4793 (TID 0x7fcdda3eb700) from PID 0; stack trace: ***
[2m[36m(pid=4793)[0m     @     0x7fcdd9fc4390 (unknown)
[2m[36m(pid=4793)[0m     @     0x7f9edc09bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4894)[0m     @     0x7f8ed491f390 (unknown)
[2m[36m(pid=4894)[0m     @     0x7f5fd6a9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4894)[0m     @     0x7f5fd3d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4878)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4878)[0m *** SIGSEGV (@0x0) received by PID 4878 (TID 0x7fe59eb74700) from PID 0; stack trace: ***
[2m[36m(pid=4878)[0m     @     0x7fe59e74d390 (unknown)
[2m[36m(pid=4878)[0m     @     0x7fb6a0962fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4878)[0m     @     0x7fb69dc5664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4837)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4837)[0m *** SIGSEGV (@0x0) received by PID 4837 (TID 0x7f450077a700) from PID 0; stack trace: ***
[2m[36m(pid=4837)[0m     @     0x7f4500353390 (unknown)
[2m[36m(pid=4786)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4786)[0m *** SIGSEGV (@0x0) received by PID 4786 (TID 0x7f31f538c700) from PID 0; stack trace: ***
[2m[36m(pid=4786)[0m     @     0x7f31f4f65390 (unknown)
[2m[36m(pid=4852)[0m     @     0x7fdf32f38390 (unknown)
[2m[36m(pid=4852)[0m     @     0x7fb03514afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4852)[0m     @     0x7fb03243e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4852)[0m     @     0x7fb032441977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4783)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4783)[0m *** SIGSEGV (@0x0) received by PID 4783 (TID 0x7f6aa8001700) from PID 0; stack trace: ***
[2m[36m(pid=4783)[0m     @     0x7f6aa7bda390 (unknown)
[2m[36m(pid=4861)[0m *** SIGSEGV (@0x0) received by PID 4861 (TID 0x7fb4e6219700) from PID 0; stack trace: ***
[2m[36m(pid=4861)[0m     @     0x7fb4e5df2390 (unknown)
[2m[36m(pid=4861)[0m     @     0x7f85e7feefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4861)[0m     @     0x7f85e52e264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4801)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4801)[0m *** SIGSEGV (@0x0) received by PID 4801 (TID 0x7fea54237700) from PID 0; stack trace: ***
[2m[36m(pid=4801)[0m     @     0x7fea53e10390 (unknown)
[2m[36m(pid=4859)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4859)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4859)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4859)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4859)[0m *** SIGSEGV (@0x0) received by PID 4859 (TID 0x7f733911d700) from PID 0; stack trace: ***
[2m[36m(pid=4859)[0m     @     0x7f7338cf6390 (unknown)
[2m[36m(pid=4859)[0m     @     0x7f443ae48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4859)[0m     @     0x7f443813c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4835)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4835)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4835)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4835)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4835)[0m *** SIGSEGV (@0x0) received by PID 4835 (TID 0x7f1a5d927700) from PID 0; stack trace: ***
[2m[36m(pid=4835)[0m     @     0x7f1a5d500390 (unknown)
[2m[36m(pid=4835)[0m     @     0x7eeb5f71afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4835)[0m     @     0x7eeb5ca0e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4835)[0m     @     0x7eeb5ca11977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4842)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4842)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4842)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4842)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4842)[0m *** SIGSEGV (@0x0) received by PID 4842 (TID 0x7f695c274700) from PID 0; stack trace: ***
[2m[36m(pid=4842)[0m     @     0x7f695be4d390 (unknown)
[2m[36m(pid=4842)[0m     @     0x7f3a5e05bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4842)[0m     @     0x7f3a5b34f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4838)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4838)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4838)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4838)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4838)[0m *** SIGSEGV (@0x0) received by PID 4838 (TID 0x7f9a5429f700) from PID 0; stack trace: ***
[2m[36m(pid=4838)[0m     @     0x7f9a53e78390 (unknown)
[2m[36m(pid=4838)[0m     @     0x7f6b56055fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4838)[0m     @     0x7f6b5334964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4838)[0m     @     0x7f6b5334c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4875)[0m     @     0x7f3052b20977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4875)[0m     @     0x7f3052b20b53 at::TensorIterator::for_each()
[2m[36m(pid=4875)[0m     @     0x7f3052b20e11 at::TensorIterator::for_each()
[2m[36m(pid=4875)[0m     @     0x7f3055839c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4875)[0m     @     0x7f305585ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4875)[0m     @     0x7f305289a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4875)[0m     @     0x7f3052898c3f at::native::copy_impl()
[2m[36m(pid=4875)[0m     @     0x7f3052899ed4 at::native::copy_()
[2m[36m(pid=4875)[0m     @     0x7f3052fdc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4875)[0m     @     0x7f30530e4148 at::Tensor::copy_()
[2m[36m(pid=4875)[0m     @     0x7f3054cdb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4815)[0m     @     0x7efef63a0390 (unknown)
[2m[36m(pid=4815)[0m     @     0x7ecff8575fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4815)[0m     @     0x7ecff586964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4815)[0m     @     0x7ecff586c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4815)[0m     @     0x7ecff586cb53 at::TensorIterator::for_each()
[2m[36m(pid=4815)[0m     @     0x7ecff586ce11 at::TensorIterator::for_each()
[2m[36m(pid=4815)[0m     @     0x7ecff8585c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4815)[0m     @     0x7ecff85a8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4815)[0m     @     0x7ecff55e6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4815)[0m     @     0x7ecff55e4c3f at::native::copy_impl()
[2m[36m(pid=4815)[0m     @     0x7ecff55e5ed4 at::native::copy_()
[2m[36m(pid=4812)[0m     @     0x7f6e614a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4812)[0m     @     0x7f6e5e79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4812)[0m     @     0x7f6e5e797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4812)[0m     @     0x7f6e5e797b53 at::TensorIterator::for_each()
[2m[36m(pid=4812)[0m     @     0x7f6e5e797e11 at::TensorIterator::for_each()
[2m[36m(pid=4812)[0m     @     0x7f6e614b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4812)[0m     @     0x7f6e614d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4812)[0m     @     0x7f6e5e511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4812)[0m     @     0x7f6e5e50fc3f at::native::copy_impl()
[2m[36m(pid=4812)[0m     @     0x7f6e5e510ed4 at::native::copy_()
[2m[36m(pid=4879)[0m     @     0x7ed894d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4879)[0m     @     0x7ed894d67b53 at::TensorIterator::for_each()
[2m[36m(pid=4879)[0m     @     0x7ed894d67e11 at::TensorIterator::for_each()
[2m[36m(pid=4879)[0m     @     0x7ed897a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4879)[0m     @     0x7ed897aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4879)[0m     @     0x7ed894ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4879)[0m     @     0x7ed894adfc3f at::native::copy_impl()
[2m[36m(pid=4879)[0m     @     0x7ed894ae0ed4 at::native::copy_()
[2m[36m(pid=4879)[0m     @     0x7ed8952235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4870)[0m     @     0x7ef3a493ab53 at::TensorIterator::for_each()
[2m[36m(pid=4870)[0m     @     0x7ef3a493ae11 at::TensorIterator::for_each()
[2m[36m(pid=4870)[0m     @     0x7ef3a7653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4870)[0m     @     0x7ef3a7676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4870)[0m     @     0x7ef3a46b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4870)[0m     @     0x7ef3a46b2c3f at::native::copy_impl()
[2m[36m(pid=4870)[0m     @     0x7ef3a46b3ed4 at::native::copy_()
[2m[36m(pid=4870)[0m     @     0x7ef3a4df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4870)[0m     @     0x7ef3a4efe148 at::Tensor::copy_()
[2m[36m(pid=4870)[0m     @     0x7ef3a6af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4870)[0m     @     0x7ef3a4df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4898)[0m     @     0x7f6af282464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4898)[0m     @     0x7f6af2827977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4898)[0m     @     0x7f6af2827b53 at::TensorIterator::for_each()
[2m[36m(pid=4898)[0m     @     0x7f6af2827e11 at::TensorIterator::for_each()
[2m[36m(pid=4898)[0m     @     0x7f6af5540c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4898)[0m     @     0x7f6af5563cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4898)[0m     @     0x7f6af25a1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4898)[0m     @     0x7f6af259fc3f at::native::copy_impl()
[2m[36m(pid=4898)[0m     @     0x7f6af25a0ed4 at::native::copy_()
[2m[36m(pid=4856)[0m     @     0x7f00a0384fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4856)[0m     @     0x7f009d67864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4856)[0m     @     0x7f009d67b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4856)[0m     @     0x7f009d67bb53 at::TensorIterator::for_each()
[2m[36m(pid=4856)[0m     @     0x7f009d67be11 at::TensorIterator::for_each()
[2m[36m(pid=4856)[0m     @     0x7f00a0394c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4856)[0m     @     0x7f00a03b7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4856)[0m     @     0x7f009d3f5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4856)[0m     @     0x7f009d3f3c3f at::native::copy_impl()
[2m[36m(pid=4856)[0m     @     0x7f009d3f4ed4 at::native::copy_()
[2m[36m(pid=4862)[0m     @     0x7eefeaf7364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4862)[0m     @     0x7eefeaf76977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4862)[0m     @     0x7eefeaf76b53 at::TensorIterator::for_each()
[2m[36m(pid=4862)[0m     @     0x7eefeaf76e11 at::TensorIterator::for_each()
[2m[36m(pid=4862)[0m     @     0x7eefedc8fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4862)[0m     @     0x7eefedcb2cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4862)[0m     @     0x7eefeacf0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4862)[0m     @     0x7eefeaceec3f at::native::copy_impl()
[2m[36m(pid=4862)[0m     @     0x7eefeacefed4 at::native::copy_()
[2m[36m(pid=4862)[0m     @     0x7eefeb4325cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4862)[0m     @     0x7eefeb53a148 at::Tensor::copy_()
[2m[36m(pid=4862)[0m     @     0x7eefed131989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4782)[0m     @     0x7ece56bc9fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4782)[0m     @     0x7ece53ebd64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4782)[0m     @     0x7ece53ec0977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4782)[0m     @     0x7ece53ec0b53 at::TensorIterator::for_each()
[2m[36m(pid=4782)[0m     @     0x7ece53ec0e11 at::TensorIterator::for_each()
[2m[36m(pid=4782)[0m     @     0x7ece56bd9c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4782)[0m     @     0x7ece56bfccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4782)[0m     @     0x7ece53c3a009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4782)[0m     @     0x7ece53c38c3f at::native::copy_impl()
[2m[36m(pid=4782)[0m     @     0x7ece53c39ed4 at::native::copy_()
[2m[36m(pid=4782)[0m     @     0x7ece5437c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4882)[0m     @     0x7f61f7d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4882)[0m     @     0x7f61f7d93b53 at::TensorIterator::for_each()
[2m[36m(pid=4882)[0m     @     0x7f61f7d93e11 at::TensorIterator::for_each()
[2m[36m(pid=4882)[0m     @     0x7f61faaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4882)[0m     @     0x7f61faacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4882)[0m     @     0x7f61f7b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4882)[0m     @     0x7f61f7b0bc3f at::native::copy_impl()
[2m[36m(pid=4882)[0m     @     0x7f61f7b0ced4 at::native::copy_()
[2m[36m(pid=4882)[0m     @     0x7f61f824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4882)[0m     @     0x7f61f8357148 at::Tensor::copy_()
[2m[36m(pid=4882)[0m     @     0x7f61f9f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4811)[0m     @     0x7f75d093a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4811)[0m     @     0x7f75d093ab53 at::TensorIterator::for_each()
[2m[36m(pid=4811)[0m     @     0x7f75d093ae11 at::TensorIterator::for_each()
[2m[36m(pid=4811)[0m     @     0x7f75d3653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4811)[0m     @     0x7f75d3676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4811)[0m     @     0x7f75d06b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4811)[0m     @     0x7f75d06b2c3f at::native::copy_impl()
[2m[36m(pid=4811)[0m     @     0x7f75d06b3ed4 at::native::copy_()
[2m[36m(pid=4811)[0m     @     0x7f75d0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4811)[0m     @     0x7f75d0efe148 at::Tensor::copy_()
[2m[36m(pid=4811)[0m     @     0x7f75d2af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4787)[0m     @     0x7f50b227a390 (unknown)
[2m[36m(pid=4787)[0m     @     0x7f21b43b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4787)[0m     @     0x7f21b16a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4787)[0m     @     0x7f21b16a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4787)[0m     @     0x7f21b16a8b53 at::TensorIterator::for_each()
[2m[36m(pid=4787)[0m     @     0x7f21b16a8e11 at::TensorIterator::for_each()
[2m[36m(pid=4787)[0m     @     0x7f21b43c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4787)[0m     @     0x7f21b43e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4787)[0m     @     0x7f21b1422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4787)[0m     @     0x7f21b1420c3f at::native::copy_impl()
[2m[36m(pid=4787)[0m     @     0x7f21b1421ed4 at::native::copy_()
[2m[36m(pid=4787)[0m     @     0x7f21b1b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4860)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4860)[0m *** SIGSEGV (@0x0) received by PID 4860 (TID 0x7f0f39353700) from PID 0; stack trace: ***
[2m[36m(pid=4860)[0m     @     0x7f0f38f2c390 (unknown)
[2m[36m(pid=4860)[0m     @     0x7ee03b123fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4860)[0m     @     0x7ee03841764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4860)[0m     @     0x7ee03841a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4873)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4873)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4873)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4873)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4873)[0m *** SIGSEGV (@0x0) received by PID 4873 (TID 0x7facc3f76700) from PID 0; stack trace: ***
[2m[36m(pid=4873)[0m     @     0x7facc3b4f390 (unknown)
[2m[36m(pid=4873)[0m     @     0x7f7dc5d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4873)[0m     @     0x7f7dc306064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4873)[0m     @     0x7f7dc3063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4804)[0m     @     0x7eda76597977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4804)[0m     @     0x7eda76597b53 at::TensorIterator::for_each()
[2m[36m(pid=4804)[0m     @     0x7eda76597e11 at::TensorIterator::for_each()
[2m[36m(pid=4804)[0m     @     0x7eda792b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4804)[0m     @     0x7eda792d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4804)[0m     @     0x7eda76311009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4804)[0m     @     0x7eda7630fc3f at::native::copy_impl()
[2m[36m(pid=4804)[0m     @     0x7eda76310ed4 at::native::copy_()
[2m[36m(pid=4804)[0m     @     0x7eda76a535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4804)[0m     @     0x7eda76b5b148 at::Tensor::copy_()
[2m[36m(pid=4804)[0m     @     0x7eda78752989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4804)[0m     @     0x7eda76a535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4789)[0m     @     0x7fb3cad86fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4789)[0m     @     0x7fb3c807a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4789)[0m     @     0x7fb3c807d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4789)[0m     @     0x7fb3c807db53 at::TensorIterator::for_each()
[2m[36m(pid=4789)[0m     @     0x7fb3c807de11 at::TensorIterator::for_each()
[2m[36m(pid=4789)[0m     @     0x7fb3cad96c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4789)[0m     @     0x7fb3cadb9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4789)[0m     @     0x7fb3c7df7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4789)[0m     @     0x7fb3c7df5c3f at::native::copy_impl()
[2m[36m(pid=4789)[0m     @     0x7fb3c7df6ed4 at::native::copy_()
[2m[36m(pid=4789)[0m     @     0x7fb3c85395cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4789)[0m     @     0x7fb3c8641148 at::Tensor::copy_()
[2m[36m(pid=4902)[0m     @     0x7ee730c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4902)[0m     @     0x7ee730c62b53 at::TensorIterator::for_each()
[2m[36m(pid=4902)[0m     @     0x7ee730c62e11 at::TensorIterator::for_each()
[2m[36m(pid=4902)[0m     @     0x7ee73397bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4902)[0m     @     0x7ee73399ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4902)[0m     @     0x7ee7309dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4902)[0m     @     0x7ee7309dac3f at::native::copy_impl()
[2m[36m(pid=4902)[0m     @     0x7ee7309dbed4 at::native::copy_()
[2m[36m(pid=4902)[0m     @     0x7ee73111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4902)[0m     @     0x7ee731226148 at::Tensor::copy_()
[2m[36m(pid=4902)[0m     @     0x7ee732e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4902)[0m     @     0x7ee73111e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4805)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4805)[0m *** SIGSEGV (@0x0) received by PID 4805 (TID 0x7f972c0c1700) from PID 0; stack trace: ***
[2m[36m(pid=4805)[0m     @     0x7f972bc9a390 (unknown)
[2m[36m(pid=4805)[0m     @     0x7f682dd6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4805)[0m     @     0x7f682b06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4805)[0m     @     0x7f682b063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4866)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4866)[0m *** SIGSEGV (@0x0) received by PID 4866 (TID 0x7fb213909700) from PID 0; stack trace: ***
[2m[36m(pid=4866)[0m     @     0x7fb2134e2390 (unknown)
[2m[36m(pid=4899)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4899)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4899)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4899)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4899)[0m *** SIGSEGV (@0x0) received by PID 4899 (TID 0x7f64e825f700) from PID 0; stack trace: ***
[2m[36m(pid=4899)[0m     @     0x7f64e7e38390 (unknown)
[2m[36m(pid=4821)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4821)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4821)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4821)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4821)[0m *** SIGSEGV (@0x0) received by PID 4821 (TID 0x7fc4f2dd2700) from PID 0; stack trace: ***
[2m[36m(pid=4821)[0m     @     0x7fc4f29ab390 (unknown)
[2m[36m(pid=4821)[0m     @     0x7f95f4bb2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4821)[0m     @     0x7f95f1ea664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4792)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4792)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4792)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4792)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4792)[0m *** SIGSEGV (@0x0) received by PID 4792 (TID 0x7f6c30929700) from PID 0; stack trace: ***
[2m[36m(pid=4792)[0m     @     0x7f6c30502390 (unknown)
[2m[36m(pid=4792)[0m     @     0x7f3d325aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4792)[0m     @     0x7f3d2f89e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4909)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4909)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4909)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4909)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4909)[0m *** SIGSEGV (@0x0) received by PID 4909 (TID 0x7f4d093b3700) from PID 0; stack trace: ***
[2m[36m(pid=4909)[0m     @     0x7f4d08f8c390 (unknown)
[2m[36m(pid=4909)[0m     @     0x7f1e0b11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4909)[0m     @     0x7f1e0840f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4806)[0m     @     0x7fa5f94a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4806)[0m     @     0x7fa5f679464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4806)[0m     @     0x7fa5f6797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4806)[0m     @     0x7fa5f6797b53 at::TensorIterator::for_each()
[2m[36m(pid=4806)[0m     @     0x7fa5f6797e11 at::TensorIterator::for_each()
[2m[36m(pid=4806)[0m     @     0x7fa5f94b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4806)[0m     @     0x7fa5f94d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4806)[0m     @     0x7fa5f6511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4806)[0m     @     0x7fa5f650fc3f at::native::copy_impl()
[2m[36m(pid=4806)[0m     @     0x7fa5f6510ed4 at::native::copy_()
[2m[36m(pid=4890)[0m     @     0x7eed76692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4890)[0m     @     0x7eed76692b53 at::TensorIterator::for_each()
[2m[36m(pid=4890)[0m     @     0x7eed76692e11 at::TensorIterator::for_each()
[2m[36m(pid=4890)[0m     @     0x7eed793abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4890)[0m     @     0x7eed793cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4890)[0m     @     0x7eed7640c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4890)[0m     @     0x7eed7640ac3f at::native::copy_impl()
[2m[36m(pid=4890)[0m     @     0x7eed7640bed4 at::native::copy_()
[2m[36m(pid=4890)[0m     @     0x7eed76b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4890)[0m     @     0x7eed76c56148 at::Tensor::copy_()
[2m[36m(pid=4890)[0m     @     0x7eed7884d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4799)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4799)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4799)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4799)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4799)[0m *** SIGSEGV (@0x0) received by PID 4799 (TID 0x7f5e96fdc700) from PID 0; stack trace: ***
[2m[36m(pid=4799)[0m     @     0x7f5e96bb5390 (unknown)
[2m[36m(pid=4799)[0m     @     0x7f2f98c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4799)[0m     @     0x7f2f95f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4799)[0m     @     0x7f2f95f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4790)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4790)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4790)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4790)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4790)[0m *** SIGSEGV (@0x0) received by PID 4790 (TID 0x7f8d208ba700) from PID 0; stack trace: ***
[2m[36m(pid=4790)[0m     @     0x7f8d20493390 (unknown)
[2m[36m(pid=4790)[0m     @     0x7f5e2257bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4790)[0m     @     0x7f5e1f86f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4877)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4877)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4877)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4877)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4877)[0m *** SIGSEGV (@0x0) received by PID 4877 (TID 0x7fcb85bee700) from PID 0; stack trace: ***
[2m[36m(pid=4877)[0m     @     0x7fcb857c7390 (unknown)
[2m[36m(pid=4877)[0m     @     0x7f9c8796bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4877)[0m     @     0x7f9c84c5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4848)[0m     @     0x7f3e54ad8390 (unknown)
[2m[36m(pid=4848)[0m     @     0x7f0f56d0cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4848)[0m     @     0x7f0f5400064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4848)[0m     @     0x7f0f54003977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4848)[0m     @     0x7f0f54003b53 at::TensorIterator::for_each()
[2m[36m(pid=4848)[0m     @     0x7f0f54003e11 at::TensorIterator::for_each()
[2m[36m(pid=4848)[0m     @     0x7f0f56d1cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4848)[0m     @     0x7f0f56d3fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4848)[0m     @     0x7f0f53d7d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4848)[0m     @     0x7f0f53d7bc3f at::native::copy_impl()
[2m[36m(pid=4848)[0m     @     0x7f0f53d7ced4 at::native::copy_()
[2m[36m(pid=4885)[0m     @     0x7f9f1e4fc390 (unknown)
[2m[36m(pid=4885)[0m     @     0x7f702070bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4885)[0m     @     0x7f701d9ff64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4885)[0m     @     0x7f701da02977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4885)[0m     @     0x7f701da02b53 at::TensorIterator::for_each()
[2m[36m(pid=4885)[0m     @     0x7f701da02e11 at::TensorIterator::for_each()
[2m[36m(pid=4885)[0m     @     0x7f702071bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4885)[0m     @     0x7f702073ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4885)[0m     @     0x7f701d77c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4885)[0m     @     0x7f701d77ac3f at::native::copy_impl()
[2m[36m(pid=4885)[0m     @     0x7f701d77bed4 at::native::copy_()
[2m[36m(pid=4853)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4853)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4853)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4853)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4853)[0m *** SIGSEGV (@0x0) received by PID 4853 (TID 0x7f7b0e5b9700) from PID 0; stack trace: ***
[2m[36m(pid=4853)[0m     @     0x7f7b0e192390 (unknown)
[2m[36m(pid=4853)[0m     @     0x7f4c103b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4853)[0m     @     0x7f4c0d6a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4853)[0m     @     0x7f4c0d6a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4905)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4905)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4905)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4905)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4905)[0m *** SIGSEGV (@0x0) received by PID 4905 (TID 0x7f730be11700) from PID 0; stack trace: ***
[2m[36m(pid=4905)[0m     @     0x7f730b9ea390 (unknown)
[2m[36m(pid=4905)[0m     @     0x7f440d9c8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4905)[0m     @     0x7f440acbc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4905)[0m     @     0x7f440acbf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4839)[0m     @     0x7f1cab424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4839)[0m     @     0x7f1cab424b53 at::TensorIterator::for_each()
[2m[36m(pid=4839)[0m     @     0x7f1cab424e11 at::TensorIterator::for_each()
[2m[36m(pid=4839)[0m     @     0x7f1cae13dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4839)[0m     @     0x7f1cae160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4839)[0m     @     0x7f1cab19e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4839)[0m     @     0x7f1cab19cc3f at::native::copy_impl()
[2m[36m(pid=4839)[0m     @     0x7f1cab19ded4 at::native::copy_()
[2m[36m(pid=4839)[0m     @     0x7f1cab8e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4839)[0m     @     0x7f1cab9e8148 at::Tensor::copy_()
[2m[36m(pid=4839)[0m     @     0x7f1cad5df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4839)[0m     @     0x7f1cab8e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4913)[0m     @     0x7f8ab3063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4913)[0m     @     0x7f8ab3063b53 at::TensorIterator::for_each()
[2m[36m(pid=4913)[0m     @     0x7f8ab3063e11 at::TensorIterator::for_each()
[2m[36m(pid=4913)[0m     @     0x7f8ab5d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4913)[0m     @     0x7f8ab5d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4913)[0m     @     0x7f8ab2ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4913)[0m     @     0x7f8ab2ddbc3f at::native::copy_impl()
[2m[36m(pid=4913)[0m     @     0x7f8ab2ddced4 at::native::copy_()
[2m[36m(pid=4913)[0m     @     0x7f8ab351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4887)[0m     @     0x7f8d7fff9b53 at::TensorIterator::for_each()
[2m[36m(pid=4887)[0m     @     0x7f8d7fff9e11 at::TensorIterator::for_each()
[2m[36m(pid=4887)[0m     @     0x7f8d82d12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4887)[0m     @     0x7f8d82d35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4887)[0m     @     0x7f8d7fd73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4887)[0m     @     0x7f8d7fd71c3f at::native::copy_impl()
[2m[36m(pid=4887)[0m     @     0x7f8d7fd72ed4 at::native::copy_()
[2m[36m(pid=4887)[0m     @     0x7f8d804b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4887)[0m     @     0x7f8d805bd148 at::Tensor::copy_()
[2m[36m(pid=4887)[0m     @     0x7f8d821b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4887)[0m     @     0x7f8d804b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4819)[0m     @     0x7f80e4623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4819)[0m     @     0x7f80e4623b53 at::TensorIterator::for_each()
[2m[36m(pid=4819)[0m     @     0x7f80e4623e11 at::TensorIterator::for_each()
[2m[36m(pid=4819)[0m     @     0x7f80e733cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4819)[0m     @     0x7f80e735fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4819)[0m     @     0x7f80e439d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4819)[0m     @     0x7f80e439bc3f at::native::copy_impl()
[2m[36m(pid=4819)[0m     @     0x7f80e439ced4 at::native::copy_()
[2m[36m(pid=4819)[0m     @     0x7f80e4adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4819)[0m     @     0x7f80e4be7148 at::Tensor::copy_()
[2m[36m(pid=4819)[0m     @     0x7f80e67de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4857)[0m     @     0x7faadea5564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4857)[0m     @     0x7faadea58977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4857)[0m     @     0x7faadea58b53 at::TensorIterator::for_each()
[2m[36m(pid=4857)[0m     @     0x7faadea58e11 at::TensorIterator::for_each()
[2m[36m(pid=4857)[0m     @     0x7faae1771c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4857)[0m     @     0x7faae1794cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4857)[0m     @     0x7faade7d2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4857)[0m     @     0x7faade7d0c3f at::native::copy_impl()
[2m[36m(pid=4857)[0m     @     0x7faade7d1ed4 at::native::copy_()
[2m[36m(pid=4857)[0m     @     0x7faadef145cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4857)[0m     @     0x7faadf01c148 at::Tensor::copy_()
[2m[36m(pid=4864)[0m     @     0x7f438f11bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4864)[0m     @     0x7f438c40f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4864)[0m     @     0x7f438c412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4864)[0m     @     0x7f438c412b53 at::TensorIterator::for_each()
[2m[36m(pid=4864)[0m     @     0x7f438c412e11 at::TensorIterator::for_each()
[2m[36m(pid=4864)[0m     @     0x7f438f12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4864)[0m     @     0x7f438f14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4864)[0m     @     0x7f438c18c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4864)[0m     @     0x7f438c18ac3f at::native::copy_impl()
[2m[36m(pid=4864)[0m     @     0x7f438c18bed4 at::native::copy_()
[2m[36m(pid=4889)[0m     @     0x7f1271392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4889)[0m     @     0x7f1271392b53 at::TensorIterator::for_each()
[2m[36m(pid=4889)[0m     @     0x7f1271392e11 at::TensorIterator::for_each()
[2m[36m(pid=4889)[0m     @     0x7f12740abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4889)[0m     @     0x7f12740cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4889)[0m     @     0x7f127110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4889)[0m     @     0x7f127110ac3f at::native::copy_impl()
[2m[36m(pid=4889)[0m     @     0x7f127110bed4 at::native::copy_()
[2m[36m(pid=4889)[0m     @     0x7f127184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4889)[0m     @     0x7f1271956148 at::Tensor::copy_()
[2m[36m(pid=4889)[0m     @     0x7f127354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4889)[0m     @     0x7f127184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4781)[0m     @     0x7fc2dd7c4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4781)[0m     @     0x7fc2daab864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4781)[0m     @     0x7fc2daabb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4781)[0m     @     0x7fc2daabbb53 at::TensorIterator::for_each()
[2m[36m(pid=4781)[0m     @     0x7fc2daabbe11 at::TensorIterator::for_each()
[2m[36m(pid=4781)[0m     @     0x7fc2dd7d4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4781)[0m     @     0x7fc2dd7f7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4781)[0m     @     0x7fc2da835009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4781)[0m     @     0x7fc2da833c3f at::native::copy_impl()
[2m[36m(pid=4781)[0m     @     0x7fc2da834ed4 at::native::copy_()
[2m[36m(pid=4900)[0m     @     0x7f520b7cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4900)[0m     @     0x7f520b7ccb53 at::TensorIterator::for_each()
[2m[36m(pid=4900)[0m     @     0x7f520b7cce11 at::TensorIterator::for_each()
[2m[36m(pid=4900)[0m     @     0x7f520e4e5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4900)[0m     @     0x7f520e508cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4900)[0m     @     0x7f520b546009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4900)[0m     @     0x7f520b544c3f at::native::copy_impl()
[2m[36m(pid=4900)[0m     @     0x7f520b545ed4 at::native::copy_()
[2m[36m(pid=4900)[0m     @     0x7f520bc885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4900)[0m     @     0x7f520bd90148 at::Tensor::copy_()
[2m[36m(pid=4900)[0m     @     0x7f520d987989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4900)[0m     @     0x7f520bc885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4785)[0m     @     0x7fc87276a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4785)[0m     @     0x7fc87276ab53 at::TensorIterator::for_each()
[2m[36m(pid=4785)[0m     @     0x7fc87276ae11 at::TensorIterator::for_each()
[2m[36m(pid=4785)[0m     @     0x7fc875483c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4785)[0m     @     0x7fc8754a6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4785)[0m     @     0x7fc8724e4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4785)[0m     @     0x7fc8724e2c3f at::native::copy_impl()
[2m[36m(pid=4785)[0m     @     0x7fc8724e3ed4 at::native::copy_()
[2m[36m(pid=4785)[0m     @     0x7fc872c265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4785)[0m     @     0x7fc872d2e148 at::Tensor::copy_()
[2m[36m(pid=4785)[0m     @     0x7fc874925989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4793)[0m     @     0x7f9ed938f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4793)[0m     @     0x7f9ed9392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4793)[0m     @     0x7f9ed9392b53 at::TensorIterator::for_each()
[2m[36m(pid=4793)[0m     @     0x7f9ed9392e11 at::TensorIterator::for_each()
[2m[36m(pid=4793)[0m     @     0x7f9edc0abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4793)[0m     @     0x7f9edc0cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4793)[0m     @     0x7f9ed910c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4793)[0m     @     0x7f9ed910ac3f at::native::copy_impl()
[2m[36m(pid=4793)[0m     @     0x7f9ed910bed4 at::native::copy_()
[2m[36m(pid=4793)[0m     @     0x7f9ed984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4793)[0m     @     0x7f9ed9956148 at::Tensor::copy_()
[2m[36m(pid=4894)[0m     @     0x7f5fd3d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4894)[0m     @     0x7f5fd3d93b53 at::TensorIterator::for_each()
[2m[36m(pid=4894)[0m     @     0x7f5fd3d93e11 at::TensorIterator::for_each()
[2m[36m(pid=4894)[0m     @     0x7f5fd6aacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4894)[0m     @     0x7f5fd6acfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4894)[0m     @     0x7f5fd3b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4894)[0m     @     0x7f5fd3b0bc3f at::native::copy_impl()
[2m[36m(pid=4894)[0m     @     0x7f5fd3b0ced4 at::native::copy_()
[2m[36m(pid=4894)[0m     @     0x7f5fd424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4894)[0m     @     0x7f5fd4357148 at::Tensor::copy_()
[2m[36m(pid=4894)[0m     @     0x7f5fd5f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4894)[0m     @     0x7f5fd424f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4878)[0m     @     0x7fb69dc59977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4878)[0m     @     0x7fb69dc59b53 at::TensorIterator::for_each()
[2m[36m(pid=4878)[0m     @     0x7fb69dc59e11 at::TensorIterator::for_each()
[2m[36m(pid=4878)[0m     @     0x7fb6a0972c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4878)[0m     @     0x7fb6a0995cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4878)[0m     @     0x7fb69d9d3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4878)[0m     @     0x7fb69d9d1c3f at::native::copy_impl()
[2m[36m(pid=4878)[0m     @     0x7fb69d9d2ed4 at::native::copy_()
[2m[36m(pid=4878)[0m     @     0x7fb69e1155cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4878)[0m     @     0x7fb69e21d148 at::Tensor::copy_()
[2m[36m(pid=4878)[0m     @     0x7fb69fe14989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4837)[0m     @     0x7f16021a6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4837)[0m     @     0x7f15ff49a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4837)[0m     @     0x7f15ff49d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4837)[0m     @     0x7f15ff49db53 at::TensorIterator::for_each()
[2m[36m(pid=4837)[0m     @     0x7f15ff49de11 at::TensorIterator::for_each()
[2m[36m(pid=4837)[0m     @     0x7f16021b6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4837)[0m     @     0x7f16021d9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4837)[0m     @     0x7f15ff217009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4837)[0m     @     0x7f15ff215c3f at::native::copy_impl()
[2m[36m(pid=4837)[0m     @     0x7f15ff216ed4 at::native::copy_()
[2m[36m(pid=4837)[0m     @     0x7f15ff9595cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4837)[0m     @     0x7f15ffa61148 at::Tensor::copy_()
[2m[36m(pid=4837)[0m     @     0x7f1601658989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4786)[0m     @     0x7f02f711bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4786)[0m     @     0x7f02f440f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4786)[0m     @     0x7f02f4412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4786)[0m     @     0x7f02f4412b53 at::TensorIterator::for_each()
[2m[36m(pid=4786)[0m     @     0x7f02f4412e11 at::TensorIterator::for_each()
[2m[36m(pid=4786)[0m     @     0x7f02f712bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4786)[0m     @     0x7f02f714ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4786)[0m     @     0x7f02f418c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4786)[0m     @     0x7f02f418ac3f at::native::copy_impl()
[2m[36m(pid=4786)[0m     @     0x7f02f418bed4 at::native::copy_()
[2m[36m(pid=4852)[0m     @     0x7fb032441b53 at::TensorIterator::for_each()
[2m[36m(pid=4852)[0m     @     0x7fb032441e11 at::TensorIterator::for_each()
[2m[36m(pid=4852)[0m     @     0x7fb03515ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4852)[0m     @     0x7fb03517dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4852)[0m     @     0x7fb0321bb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4852)[0m     @     0x7fb0321b9c3f at::native::copy_impl()
[2m[36m(pid=4852)[0m     @     0x7fb0321baed4 at::native::copy_()
[2m[36m(pid=4852)[0m     @     0x7fb0328fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4852)[0m     @     0x7fb032a05148 at::Tensor::copy_()
[2m[36m(pid=4852)[0m     @     0x7fb0345fc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4852)[0m     @     0x7fb0328fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4852)[0m     @     0x7fb032a05148 at::Tensor::copy_()
[2m[36m(pid=4852)[0m     @     0x7fb038cbbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4852)[0m     @     0x55f051728fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4852)[0m     @     0x55f051683b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4852)[0m     @     0x55f05170ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4852)[0m     @     0x55f05170fa20 method_vectorcall
[2m[36m(pid=4852)[0m     @     0x55f051683bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4852)[0m     @     0x55f05170ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4852)[0m     @     0x55f05170f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4852)[0m     @     0x55f051684689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4852)[0m     @     0x55f05170ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4852)[0m     @     0x55f05170f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4852)[0m     @     0x55f051684689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4852)[0m     @     0x55f05170ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4852)[0m     @     0x55f05170f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4783)[0m     @     0x7f3ba9c3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4783)[0m     @     0x7f3ba6f3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4783)[0m     @     0x7f3ba6f33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4783)[0m     @     0x7f3ba6f33b53 at::TensorIterator::for_each()
[2m[36m(pid=4783)[0m     @     0x7f3ba6f33e11 at::TensorIterator::for_each()
[2m[36m(pid=4783)[0m     @     0x7f3ba9c4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4783)[0m     @     0x7f3ba9c6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4783)[0m     @     0x7f3ba6cad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4783)[0m     @     0x7f3ba6cabc3f at::native::copy_impl()
[2m[36m(pid=4783)[0m     @     0x7f3ba6caced4 at::native::copy_()
[2m[36m(pid=4783)[0m     @     0x7f3ba73ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4783)[0m     @     0x7f3ba74f7148 at::Tensor::copy_()
[2m[36m(pid=4861)[0m     @     0x7f85e52e5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4861)[0m     @     0x7f85e52e5b53 at::TensorIterator::for_each()
[2m[36m(pid=4861)[0m     @     0x7f85e52e5e11 at::TensorIterator::for_each()
[2m[36m(pid=4861)[0m     @     0x7f85e7ffec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4861)[0m     @     0x7f85e8021cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4861)[0m     @     0x7f85e505f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4861)[0m     @     0x7f85e505dc3f at::native::copy_impl()
[2m[36m(pid=4861)[0m     @     0x7f85e505eed4 at::native::copy_()
[2m[36m(pid=4861)[0m     @     0x7f85e57a15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4861)[0m     @     0x7f85e58a9148 at::Tensor::copy_()
[2m[36m(pid=4861)[0m     @     0x7f85e74a0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4809)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4809)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4809)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4809)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4809)[0m *** SIGSEGV (@0x0) received by PID 4809 (TID 0x7f3a51fd9700) from PID 0; stack trace: ***
[2m[36m(pid=4809)[0m     @     0x7f3a51bb2390 (unknown)
[2m[36m(pid=4809)[0m     @     0x7f0b53dd6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4809)[0m     @     0x7f0b510ca64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4809)[0m     @     0x7f0b510cd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4801)[0m     @     0x7fbb5601dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4801)[0m     @     0x7fbb5331164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4801)[0m     @     0x7fbb53314977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4801)[0m     @     0x7fbb53314b53 at::TensorIterator::for_each()
[2m[36m(pid=4801)[0m     @     0x7fbb53314e11 at::TensorIterator::for_each()
[2m[36m(pid=4801)[0m     @     0x7fbb5602dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4801)[0m     @     0x7fbb56050cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4801)[0m     @     0x7fbb5308e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4801)[0m     @     0x7fbb5308cc3f at::native::copy_impl()
[2m[36m(pid=4801)[0m     @     0x7fbb5308ded4 at::native::copy_()
[2m[36m(pid=4801)[0m     @     0x7fbb537d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4801)[0m     @     0x7fbb538d8148 at::Tensor::copy_()
[2m[36m(pid=4801)[0m     @     0x7fbb554cf989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4795)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4795)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4795)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4795)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4795)[0m *** SIGSEGV (@0x0) received by PID 4795 (TID 0x7eff653b3700) from PID 0; stack trace: ***
[2m[36m(pid=4795)[0m     @     0x7eff64f8c390 (unknown)
[2m[36m(pid=4795)[0m     @     0x7ed06711bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4795)[0m     @     0x7ed06440f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4795)[0m     @     0x7ed064412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4795)[0m     @     0x7ed064412b53 at::TensorIterator::for_each()
[2m[36m(pid=4869)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4869)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4869)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4869)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4869)[0m *** SIGSEGV (@0x0) received by PID 4869 (TID 0x7f7354653700) from PID 0; stack trace: ***
[2m[36m(pid=4869)[0m     @     0x7f735422c390 (unknown)
[2m[36m(pid=4869)[0m     @     0x7f4455fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4869)[0m     @     0x7f445329764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4888)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4888)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4888)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4888)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4888)[0m *** SIGSEGV (@0x0) received by PID 4888 (TID 0x7f16547eb700) from PID 0; stack trace: ***
[2m[36m(pid=4888)[0m     @     0x7f16543c4390 (unknown)
[2m[36m(pid=4888)[0m     @     0x7ee7565dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4888)[0m     @     0x7ee7538ce64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4888)[0m     @     0x7ee7538d1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4888)[0m     @     0x7ee7538d1b53 at::TensorIterator::for_each()
[2m[36m(pid=4896)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4896)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4896)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4896)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4896)[0m *** SIGSEGV (@0x0) received by PID 4896 (TID 0x7f379a424700) from PID 0; stack trace: ***
[2m[36m(pid=4896)[0m     @     0x7f3799ffd390 (unknown)
[2m[36m(pid=4896)[0m     @     0x7f089c09bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4896)[0m     @     0x7f089938f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4896)[0m     @     0x7f0899392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4798)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4798)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4798)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4798)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4798)[0m *** SIGSEGV (@0x0) received by PID 4798 (TID 0x7fc8ae6d9700) from PID 0; stack trace: ***
[2m[36m(pid=4798)[0m     @     0x7fc8ae2b2390 (unknown)
[2m[36m(pid=4798)[0m     @     0x7f99b04d5fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4798)[0m     @     0x7f99ad7c964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4798)[0m     @     0x7f99ad7cc977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4881)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4881)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4881)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4881)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4881)[0m *** SIGSEGV (@0x0) received by PID 4881 (TID 0x7fd11ba63700) from PID 0; stack trace: ***
[2m[36m(pid=4881)[0m     @     0x7fd11b63c390 (unknown)
[2m[36m(pid=4881)[0m     @     0x7fa21d869fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4881)[0m     @     0x7fa21ab5d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4881)[0m     @     0x7fa21ab60977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4868)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4868)[0m *** SIGSEGV (@0x0) received by PID 4868 (TID 0x7f815470f700) from PID 0; stack trace: ***
[2m[36m(pid=4868)[0m     @     0x7f81542e8390 (unknown)
[2m[36m(pid=4868)[0m     @     0x7f52564e8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4868)[0m     @     0x7f52537dc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4796)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4796)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4796)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4796)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4796)[0m *** SIGSEGV (@0x0) received by PID 4796 (TID 0x7f4d8d989700) from PID 0; stack trace: ***
[2m[36m(pid=4843)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4843)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4843)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4843)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4843)[0m *** SIGSEGV (@0x0) received by PID 4843 (TID 0x7fb540b3e700) from PID 0; stack trace: ***
[2m[36m(pid=4843)[0m     @     0x7fb540717390 (unknown)
[2m[36m(pid=4843)[0m     @     0x7f86427dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4843)[0m     @     0x7f863face64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4794)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4794)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4794)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4794)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4794)[0m *** SIGSEGV (@0x0) received by PID 4794 (TID 0x7f0d93409700) from PID 0; stack trace: ***
[2m[36m(pid=4794)[0m     @     0x7f0d92fe2390 (unknown)
[2m[36m(pid=4794)[0m     @     0x7ede9518afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4794)[0m     @     0x7ede9247e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4865)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4865)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4865)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4865)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4865)[0m *** SIGSEGV (@0x0) received by PID 4865 (TID 0x7f02727a4700) from PID 0; stack trace: ***
[2m[36m(pid=4865)[0m     @     0x7f027237d390 (unknown)
[2m[36m(pid=4865)[0m     @     0x7ed3743b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4865)[0m     @     0x7ed3716a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4780)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4780)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4780)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4780)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4780)[0m *** SIGSEGV (@0x0) received by PID 4780 (TID 0x7f7806af6700) from PID 0; stack trace: ***
[2m[36m(pid=4780)[0m     @     0x7f78066cf390 (unknown)
[2m[36m(pid=4780)[0m     @     0x7f490860cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4780)[0m     @     0x7f490590064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4780)[0m     @     0x7f4905903977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4780)[0m     @     0x7f4905903b53 at::TensorIterator::for_each()
[2m[36m(pid=4893)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4893)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4893)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4893)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4893)[0m *** SIGSEGV (@0x0) received by PID 4893 (TID 0x7f3953ca3700) from PID 0; stack trace: ***
[2m[36m(pid=4893)[0m     @     0x7f395387c390 (unknown)
[2m[36m(pid=4893)[0m     @     0x7f0a55ab2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4893)[0m     @     0x7f0a52da664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4893)[0m     @     0x7f0a52da9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4849)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4849)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4849)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4849)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4849)[0m *** SIGSEGV (@0x0) received by PID 4849 (TID 0x7f790d2f5700) from PID 0; stack trace: ***
[2m[36m(pid=4849)[0m     @     0x7f790cece390 (unknown)
[2m[36m(pid=4849)[0m     @     0x7f4a0f0f0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4849)[0m     @     0x7f4a0c3e464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4849)[0m     @     0x7f4a0c3e7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4849)[0m     @     0x7f4a0c3e7b53 at::TensorIterator::for_each()
[2m[36m(pid=4846)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4846)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4846)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4846)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4846)[0m *** SIGSEGV (@0x0) received by PID 4846 (TID 0x7efc7f892700) from PID 0; stack trace: ***
[2m[36m(pid=4846)[0m     @     0x7efc7f46b390 (unknown)
[2m[36m(pid=4846)[0m     @     0x7ecd814a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4846)[0m     @     0x7ecd7e79464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4846)[0m     @     0x7ecd7e797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4846)[0m     @     0x7ecd7e797b53 at::TensorIterator::for_each()
[2m[36m(pid=4846)[0m     @     0x7ecd7e797e11 at::TensorIterator::for_each()
[2m[36m(pid=4846)[0m     @     0x7ecd814b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4846)[0m     @     0x7ecd814d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4858)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4858)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4858)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4858)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4858)[0m *** SIGSEGV (@0x0) received by PID 4858 (TID 0x7f9792ad7700) from PID 0; stack trace: ***
[2m[36m(pid=4858)[0m     @     0x7f97926b0390 (unknown)
[2m[36m(pid=4858)[0m     @     0x7f689481bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4858)[0m     @     0x7f6891b0f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4858)[0m     @     0x7f6891b12977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4867)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4867)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4867)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4867)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4867)[0m *** SIGSEGV (@0x0) received by PID 4867 (TID 0x7f345358c700) from PID 0; stack trace: ***
[2m[36m(pid=4867)[0m     @     0x7f3453165390 (unknown)
[2m[36m(pid=4867)[0m     @     0x7f055536efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4867)[0m     @     0x7f055266264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4867)[0m     @     0x7f0552665977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4845)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4845)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4845)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4845)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4845)[0m *** SIGSEGV (@0x0) received by PID 4845 (TID 0x7ff72c345700) from PID 0; stack trace: ***
[2m[36m(pid=4845)[0m     @     0x7ff72bf1e390 (unknown)
[2m[36m(pid=4784)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4784)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4784)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4784)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4784)[0m *** SIGSEGV (@0x0) received by PID 4784 (TID 0x7f4cf68e6700) from PID 0; stack trace: ***
[2m[36m(pid=4784)[0m     @     0x7f4cf64bf390 (unknown)
[2m[36m(pid=4784)[0m     @     0x7f1df86e6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4784)[0m     @     0x7f1df59da64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4784)[0m     @     0x7f1df59dd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4784)[0m     @     0x7f1df59ddb53 at::TensorIterator::for_each()
[2m[36m(pid=4784)[0m     @     0x7f1df59dde11 at::TensorIterator::for_each()
[2m[36m(pid=4784)[0m     @     0x7f1df86f6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4822)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4822)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4822)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4822)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4822)[0m *** SIGSEGV (@0x0) received by PID 4822 (TID 0x7f2ab45a0700) from PID 0; stack trace: ***
[2m[36m(pid=4822)[0m     @     0x7f2ab4179390 (unknown)
[2m[36m(pid=4822)[0m     @     0x7efbb5fa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4822)[0m     @     0x7efbb329764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4822)[0m     @     0x7efbb329a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4822)[0m     @     0x7efbb329ab53 at::TensorIterator::for_each()
[2m[36m(pid=4797)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4797)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4797)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4797)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4797)[0m *** SIGSEGV (@0x0) received by PID 4797 (TID 0x7fc699509700) from PID 0; stack trace: ***
[2m[36m(pid=4797)[0m     @     0x7fc6990e2390 (unknown)
[2m[36m(pid=4797)[0m     @     0x7f979b2fffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4797)[0m     @     0x7f97985f364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4797)[0m     @     0x7f97985f6977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4817)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4817)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4817)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4817)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4817)[0m *** SIGSEGV (@0x0) received by PID 4817 (TID 0x7fbe0a80f700) from PID 0; stack trace: ***
[2m[36m(pid=4817)[0m     @     0x7fbe0a3e8390 (unknown)
[2m[36m(pid=4817)[0m     @     0x7f8f0c5c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4817)[0m     @     0x7f8f098b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4817)[0m     @     0x7f8f098b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4817)[0m     @     0x7f8f098b9b53 at::TensorIterator::for_each()
[2m[36m(pid=4817)[0m     @     0x7f8f098b9e11 at::TensorIterator::for_each()
[2m[36m(pid=4817)[0m     @     0x7f8f0c5d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4863)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=4863)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=4863)[0m *** Aborted at 1604573818 (unix time) try "date -d @1604573818" if you are using GNU date ***
[2m[36m(pid=4863)[0m PC: @                0x0 (unknown)
[2m[36m(pid=4863)[0m *** SIGSEGV (@0x0) received by PID 4863 (TID 0x7fd6e3780700) from PID 0; stack trace: ***
[2m[36m(pid=4863)[0m     @     0x7fd6e3359390 (unknown)
[2m[36m(pid=4863)[0m     @     0x7fa7e54a0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4863)[0m     @     0x7fa7e279464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4863)[0m     @     0x7fa7e2797977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4863)[0m     @     0x7fa7e2797b53 at::TensorIterator::for_each()
[2m[36m(pid=4859)[0m     @     0x7f443813f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4859)[0m     @     0x7f443813fb53 at::TensorIterator::for_each()
[2m[36m(pid=4835)[0m     @     0x7eeb5ca11b53 at::TensorIterator::for_each()
[2m[36m(pid=4835)[0m     @     0x7eeb5ca11e11 at::TensorIterator::for_each()
[2m[36m(pid=4835)[0m     @     0x7eeb5f72ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4842)[0m     @     0x7f3a5b352977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4842)[0m     @     0x7f3a5b352b53 at::TensorIterator::for_each()
[2m[36m(pid=4838)[0m     @     0x7f6b5334cb53 at::TensorIterator::for_each()
[2m[36m(pid=4838)[0m     @     0x7f6b5334ce11 at::TensorIterator::for_each()
[2m[36m(pid=4838)[0m     @     0x7f6b56065c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4875)[0m     @     0x7f3052fdc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4875)[0m     @     0x7f30530e4148 at::Tensor::copy_()
[2m[36m(pid=4875)[0m     @     0x7f305939abd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4875)[0m     @     0x5569ea035fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4875)[0m     @     0x5569e9f90b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4875)[0m     @     0x5569ea01bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4875)[0m     @     0x5569ea01ca20 method_vectorcall
[2m[36m(pid=4875)[0m     @     0x5569e9f90bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4875)[0m     @     0x5569ea01bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4875)[0m     @     0x5569ea01c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4875)[0m     @     0x5569e9f91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4815)[0m     @     0x7ecff5d285cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4815)[0m     @     0x7ecff5e30148 at::Tensor::copy_()
[2m[36m(pid=4812)[0m     @     0x7f6e5ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4812)[0m     @     0x7f6e5ed5b148 at::Tensor::copy_()
[2m[36m(pid=4812)[0m     @     0x7f6e60952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4879)[0m     @     0x7ed89532b148 at::Tensor::copy_()
[2m[36m(pid=4879)[0m     @     0x7ed896f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4879)[0m     @     0x7ed8952235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4870)[0m     @     0x7ef3a4efe148 at::Tensor::copy_()
[2m[36m(pid=4870)[0m     @     0x7ef3ab1b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4870)[0m     @     0x564c36e87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4870)[0m     @     0x564c36de2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4870)[0m     @     0x564c36e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4870)[0m     @     0x564c36e6ea20 method_vectorcall
[2m[36m(pid=4870)[0m     @     0x564c36de2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4870)[0m     @     0x564c36e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4870)[0m     @     0x564c36e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4870)[0m     @     0x564c36de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4870)[0m     @     0x564c36e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4870)[0m     @     0x564c36e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4870)[0m     @     0x564c36de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4870)[0m     @     0x564c36e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4870)[0m     @     0x564c36e6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4870)[0m     @     0x564c36de3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4870)[0m     @     0x564c36e6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4898)[0m     @     0x7f6af2ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4898)[0m     @     0x7f6af2deb148 at::Tensor::copy_()
[2m[36m(pid=4898)[0m     @     0x7f6af49e2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4856)[0m     @     0x7f009db375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4856)[0m     @     0x7f009dc3f148 at::Tensor::copy_()
[2m[36m(pid=4856)[0m     @     0x7f009f836989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4862)[0m     @     0x7eefeb4325cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4862)[0m     @     0x7eefeb53a148 at::Tensor::copy_()
[2m[36m(pid=4862)[0m     @     0x7eeff17f0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4862)[0m     @     0x5623e949afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4862)[0m     @     0x5623e93f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4862)[0m     @     0x5623e9480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4862)[0m     @     0x5623e9481a20 method_vectorcall
[2m[36m(pid=4862)[0m     @     0x5623e93f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4862)[0m     @     0x5623e9480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4862)[0m     @     0x5623e9481643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4862)[0m     @     0x5623e93f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4862)[0m     @     0x5623e9480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4862)[0m     @     0x5623e9481643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4862)[0m     @     0x5623e93f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4862)[0m     @     0x5623e9480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4862)[0m     @     0x5623e9481643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4862)[0m     @     0x5623e93f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4862)[0m     @     0x5623e9480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4782)[0m     @     0x7ece54484148 at::Tensor::copy_()
[2m[36m(pid=4782)[0m     @     0x7ece5607b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4782)[0m     @     0x7ece5437c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4882)[0m     @     0x7f61f824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4882)[0m     @     0x7f61f8357148 at::Tensor::copy_()
[2m[36m(pid=4882)[0m     @     0x7f61fe60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4882)[0m     @     0x55dba779efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4882)[0m     @     0x55dba76f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4882)[0m     @     0x55dba7784baf _PyEval_EvalCodeWithName
[2m[36m(pid=4882)[0m     @     0x55dba7785a20 method_vectorcall
[2m[36m(pid=4882)[0m     @     0x55dba76f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4882)[0m     @     0x55dba7784baf _PyEval_EvalCodeWithName
[2m[36m(pid=4882)[0m     @     0x55dba7785643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4882)[0m     @     0x55dba76fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4811)[0m     @     0x7f75d0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4811)[0m     @     0x7f75d0efe148 at::Tensor::copy_()
[2m[36m(pid=4811)[0m     @     0x7f75d71b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4811)[0m     @     0x5589eb816fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4811)[0m     @     0x5589eb771b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4811)[0m     @     0x5589eb7fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4811)[0m     @     0x5589eb7fda20 method_vectorcall
[2m[36m(pid=4811)[0m     @     0x5589eb771bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4811)[0m     @     0x5589eb7fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4811)[0m     @     0x5589eb7fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4811)[0m     @     0x5589eb772689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4811)[0m     @     0x5589eb7fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4811)[0m     @     0x5589eb7fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4811)[0m     @     0x5589eb772689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4811)[0m     @     0x5589eb7fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4811)[0m     @     0x5589eb7fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4811)[0m     @     0x5589eb772689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4811)[0m     @     0x5589eb7fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4787)[0m     @     0x7f21b1c6c148 at::Tensor::copy_()
[2m[36m(pid=4787)[0m     @     0x7f21b3863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4787)[0m     @     0x7f21b1b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4860)[0m     @     0x7ee03841ab53 at::TensorIterator::for_each()
[2m[36m(pid=4860)[0m     @     0x7ee03841ae11 at::TensorIterator::for_each()
[2m[36m(pid=4873)[0m     @     0x7f7dc3063b53 at::TensorIterator::for_each()
[2m[36m(pid=4873)[0m     @     0x7f7dc3063e11 at::TensorIterator::for_each()
[2m[36m(pid=4873)[0m     @     0x7f7dc5d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4804)[0m     @     0x7eda76b5b148 at::Tensor::copy_()
[2m[36m(pid=4804)[0m     @     0x7eda7ce11bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4804)[0m     @     0x55e39c8dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4804)[0m     @     0x55e39c836b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4804)[0m     @     0x55e39c8c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4804)[0m     @     0x55e39c8c2a20 method_vectorcall
[2m[36m(pid=4804)[0m     @     0x55e39c836bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4804)[0m     @     0x55e39c8c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4804)[0m     @     0x55e39c8c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4804)[0m     @     0x55e39c837689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4804)[0m     @     0x55e39c8c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4804)[0m     @     0x55e39c8c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4804)[0m     @     0x55e39c837689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4804)[0m     @     0x55e39c8c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4804)[0m     @     0x55e39c8c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4804)[0m     @     0x55e39c837689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4804)[0m     @     0x55e39c8c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4789)[0m     @     0x7fb3ca238989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4789)[0m     @     0x7fb3c85395cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4789)[0m     @     0x7fb3c8641148 at::Tensor::copy_()
[2m[36m(pid=4902)[0m     @     0x7ee731226148 at::Tensor::copy_()
[2m[36m(pid=4902)[0m     @     0x7ee7374dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4902)[0m     @     0x55a3452f3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4902)[0m     @     0x55a34524eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4902)[0m     @     0x55a3452d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4902)[0m     @     0x55a3452daa20 method_vectorcall
[2m[36m(pid=4902)[0m     @     0x55a34524ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4902)[0m     @     0x55a3452d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4902)[0m     @     0x55a3452da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4902)[0m     @     0x55a34524f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4902)[0m     @     0x55a3452d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4902)[0m     @     0x55a3452da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4902)[0m     @     0x55a34524f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4902)[0m     @     0x55a3452d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4902)[0m     @     0x55a3452da643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4902)[0m     @     0x55a34524f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4902)[0m     @     0x55a3452d9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4805)[0m     @     0x7f682b063b53 at::TensorIterator::for_each()
[2m[36m(pid=4805)[0m     @     0x7f682b063e11 at::TensorIterator::for_each()
[2m[36m(pid=4805)[0m     @     0x7f682dd7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4866)[0m     @     0x7f83156b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4866)[0m     @     0x7f83129a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4866)[0m     @     0x7f83129a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4899)[0m     @     0x7f35ea05dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4899)[0m     @     0x7f35e735164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4899)[0m     @     0x7f35e7354977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4821)[0m     @     0x7f95f1ea9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4821)[0m     @     0x7f95f1ea9b53 at::TensorIterator::for_each()
[2m[36m(pid=4792)[0m     @     0x7f3d2f8a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4792)[0m     @     0x7f3d2f8a1b53 at::TensorIterator::for_each()
[2m[36m(pid=4909)[0m     @     0x7f1e08412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4909)[0m     @     0x7f1e08412b53 at::TensorIterator::for_each()
[2m[36m(pid=4806)[0m     @     0x7fa5f6c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4806)[0m     @     0x7fa5f6d5b148 at::Tensor::copy_()
[2m[36m(pid=4806)[0m     @     0x7fa5f8952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4890)[0m     @     0x7eed76b4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4890)[0m     @     0x7eed76c56148 at::Tensor::copy_()
[2m[36m(pid=4890)[0m     @     0x7eed7cf0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4890)[0m     @     0x55b8c14c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4890)[0m     @     0x55b8c1423b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4890)[0m     @     0x55b8c14aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4890)[0m     @     0x55b8c14afa20 method_vectorcall
[2m[36m(pid=4890)[0m     @     0x55b8c1423bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4890)[0m     @     0x55b8c14aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4890)[0m     @     0x55b8c14af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4890)[0m     @     0x55b8c1424689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4890)[0m     @     0x55b8c14aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4890)[0m     @     0x55b8c14af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4890)[0m     @     0x55b8c1424689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4890)[0m     @     0x55b8c14aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4890)[0m     @     0x55b8c14af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4890)[0m     @     0x55b8c1424689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4890)[0m     @     0x55b8c14aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4799)[0m     @     0x7f2f95f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=4799)[0m     @     0x7f2f95f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=4799)[0m     @     0x7f2f98ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4799)[0m     @     0x7f2f98ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4790)[0m     @     0x7f5e1f872977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4790)[0m     @     0x7f5e1f872b53 at::TensorIterator::for_each()
[2m[36m(pid=4877)[0m     @     0x7f9c84c62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4877)[0m     @     0x7f9c84c62b53 at::TensorIterator::for_each()
[2m[36m(pid=4877)[0m     @     0x7f9c84c62e11 at::TensorIterator::for_each()
[2m[36m(pid=4848)[0m     @     0x7f0f544bf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4848)[0m     @     0x7f0f545c7148 at::Tensor::copy_()
[2m[36m(pid=4848)[0m     @     0x7f0f561be989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4885)[0m     @     0x7f701debe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4885)[0m     @     0x7f701dfc6148 at::Tensor::copy_()
[2m[36m(pid=4885)[0m     @     0x7f701fbbd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4853)[0m     @     0x7f4c0d6a8b53 at::TensorIterator::for_each()
[2m[36m(pid=4853)[0m     @     0x7f4c0d6a8e11 at::TensorIterator::for_each()
[2m[36m(pid=4905)[0m     @     0x7f440acbfb53 at::TensorIterator::for_each()
[2m[36m(pid=4905)[0m     @     0x7f440acbfe11 at::TensorIterator::for_each()
[2m[36m(pid=4905)[0m     @     0x7f440d9d8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4839)[0m     @     0x7f1cab9e8148 at::Tensor::copy_()
[2m[36m(pid=4839)[0m     @     0x7f1cb1c9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4839)[0m     @     0x55fbd2449fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4839)[0m     @     0x55fbd23a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4839)[0m     @     0x55fbd242fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4839)[0m     @     0x55fbd2430a20 method_vectorcall
[2m[36m(pid=4839)[0m     @     0x55fbd23a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4839)[0m     @     0x55fbd242fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4839)[0m     @     0x55fbd2430643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4839)[0m     @     0x55fbd23a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4839)[0m     @     0x55fbd242fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4839)[0m     @     0x55fbd2430643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4839)[0m     @     0x55fbd23a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4839)[0m     @     0x55fbd242fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4839)[0m     @     0x55fbd2430643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4839)[0m     @     0x55fbd23a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4839)[0m     @     0x55fbd242fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4913)[0m     @     0x7f8ab3627148 at::Tensor::copy_()
[2m[36m(pid=4913)[0m     @     0x7f8ab521e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4913)[0m     @     0x7f8ab351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4887)[0m     @     0x7f8d805bd148 at::Tensor::copy_()
[2m[36m(pid=4887)[0m     @     0x7f8d86873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4887)[0m     @     0x56332b799fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4887)[0m     @     0x56332b6f4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4887)[0m     @     0x56332b77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4887)[0m     @     0x56332b780a20 method_vectorcall
[2m[36m(pid=4887)[0m     @     0x56332b6f4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4887)[0m     @     0x56332b77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4887)[0m     @     0x56332b780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4887)[0m     @     0x56332b6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4887)[0m     @     0x56332b77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4887)[0m     @     0x56332b780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4887)[0m     @     0x56332b6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4887)[0m     @     0x56332b77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4887)[0m     @     0x56332b780643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4887)[0m     @     0x56332b6f5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4887)[0m     @     0x56332b77fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4819)[0m     @     0x7f80e4adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4819)[0m     @     0x7f80e4be7148 at::Tensor::copy_()
[2m[36m(pid=4819)[0m     @     0x7f80eae9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4819)[0m     @     0x5611922c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4819)[0m     @     0x56119221db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4819)[0m     @     0x5611922a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4819)[0m     @     0x5611922a9a20 method_vectorcall
[2m[36m(pid=4819)[0m     @     0x56119221dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4819)[0m     @     0x5611922a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4819)[0m     @     0x5611922a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4819)[0m     @     0x56119221e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4819)[0m     @     0x5611922a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4819)[0m     @     0x5611922a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4819)[0m     @     0x56119221e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4819)[0m     @     0x5611922a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4819)[0m     @     0x5611922a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4819)[0m     @     0x56119221e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4819)[0m     @     0x5611922a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4857)[0m     @     0x7faae0c13989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4857)[0m     @     0x7faadef145cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4857)[0m     @     0x7faadf01c148 at::Tensor::copy_()
[2m[36m(pid=4857)[0m     @     0x7faae52d2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4857)[0m     @     0x556463e5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4857)[0m     @     0x556463db6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4857)[0m     @     0x556463e41baf _PyEval_EvalCodeWithName
[2m[36m(pid=4857)[0m     @     0x556463e42a20 method_vectorcall
[2m[36m(pid=4857)[0m     @     0x556463db6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4857)[0m     @     0x556463e41baf _PyEval_EvalCodeWithName
[2m[36m(pid=4857)[0m     @     0x556463e42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4857)[0m     @     0x556463db7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4857)[0m     @     0x556463e41baf _PyEval_EvalCodeWithName
[2m[36m(pid=4857)[0m     @     0x556463e42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4857)[0m     @     0x556463db7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4857)[0m     @     0x556463e41baf _PyEval_EvalCodeWithName
[2m[36m(pid=4857)[0m     @     0x556463e42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4857)[0m     @     0x556463db7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4857)[0m     @     0x556463e41baf _PyEval_EvalCodeWithName
[2m[36m(pid=4864)[0m     @     0x7f438c8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4864)[0m     @     0x7f438c9d6148 at::Tensor::copy_()
[2m[36m(pid=4864)[0m     @     0x7f438e5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4864)[0m     @     0x7f438c8ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4889)[0m     @     0x7f1271956148 at::Tensor::copy_()
[2m[36m(pid=4889)[0m     @     0x7f1277c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4889)[0m     @     0x55c4ebb07fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4889)[0m     @     0x55c4eba62b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4889)[0m     @     0x55c4ebaedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4889)[0m     @     0x55c4ebaeea20 method_vectorcall
[2m[36m(pid=4889)[0m     @     0x55c4eba62bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4889)[0m     @     0x55c4ebaedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4889)[0m     @     0x55c4ebaee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4889)[0m     @     0x55c4eba63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4889)[0m     @     0x55c4ebaedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4889)[0m     @     0x55c4ebaee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4889)[0m     @     0x55c4eba63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4889)[0m     @     0x55c4ebaedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4889)[0m     @     0x55c4ebaee643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4889)[0m     @     0x55c4eba63689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4889)[0m     @     0x55c4ebaedbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4781)[0m     @     0x7fc2daf775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4781)[0m     @     0x7fc2db07f148 at::Tensor::copy_()
[2m[36m(pid=4781)[0m     @     0x7fc2dcc76989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4781)[0m     @     0x7fc2daf775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4900)[0m     @     0x7f520bd90148 at::Tensor::copy_()
[2m[36m(pid=4900)[0m     @     0x7f5212046bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4900)[0m     @     0x560706cb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4900)[0m     @     0x560706c0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4900)[0m     @     0x560706c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4900)[0m     @     0x560706c9ba20 method_vectorcall
[2m[36m(pid=4900)[0m     @     0x560706c0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4900)[0m     @     0x560706c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4900)[0m     @     0x560706c9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4900)[0m     @     0x560706c10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4900)[0m     @     0x560706c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4900)[0m     @     0x560706c9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4900)[0m     @     0x560706c10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4900)[0m     @     0x560706c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4900)[0m     @     0x560706c9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4900)[0m     @     0x560706c10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4900)[0m     @     0x560706c9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4785)[0m     @     0x7fc872c265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4785)[0m     @     0x7fc872d2e148 at::Tensor::copy_()
[2m[36m(pid=4785)[0m     @     0x7fc878fe4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4785)[0m     @     0x560159564fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4785)[0m     @     0x5601594bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4785)[0m     @     0x56015954abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4785)[0m     @     0x56015954ba20 method_vectorcall
[2m[36m(pid=4785)[0m     @     0x5601594bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4785)[0m     @     0x56015954abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4785)[0m     @     0x56015954b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4785)[0m     @     0x5601594c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4785)[0m     @     0x56015954abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4785)[0m     @     0x56015954b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4785)[0m     @     0x5601594c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4785)[0m     @     0x56015954abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4785)[0m     @     0x56015954b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4785)[0m     @     0x5601594c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4785)[0m     @     0x56015954abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4793)[0m     @     0x7f9edb54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4793)[0m     @     0x7f9ed984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4793)[0m     @     0x7f9ed9956148 at::Tensor::copy_()
[2m[36m(pid=4793)[0m     @     0x7f9edfc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4793)[0m     @     0x55d19249afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4793)[0m     @     0x55d1923f5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4793)[0m     @     0x55d192480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4793)[0m     @     0x55d192481a20 method_vectorcall
[2m[36m(pid=4793)[0m     @     0x55d1923f5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4793)[0m     @     0x55d192480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4793)[0m     @     0x55d192481643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4793)[0m     @     0x55d1923f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4793)[0m     @     0x55d192480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4793)[0m     @     0x55d192481643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4793)[0m     @     0x55d1923f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4793)[0m     @     0x55d192480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4793)[0m     @     0x55d192481643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4793)[0m     @     0x55d1923f6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4793)[0m     @     0x55d192480baf _PyEval_EvalCodeWithName
[2m[36m(pid=4894)[0m     @     0x7f5fd4357148 at::Tensor::copy_()
[2m[36m(pid=4894)[0m     @     0x7f5fda60dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4894)[0m     @     0x55ce67b38fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4894)[0m     @     0x55ce67a93b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4894)[0m     @     0x55ce67b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4894)[0m     @     0x55ce67b1fa20 method_vectorcall
[2m[36m(pid=4894)[0m     @     0x55ce67a93bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4894)[0m     @     0x55ce67b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4894)[0m     @     0x55ce67b1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4894)[0m     @     0x55ce67a94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4894)[0m     @     0x55ce67b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4894)[0m     @     0x55ce67b1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4894)[0m     @     0x55ce67a94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4894)[0m     @     0x55ce67b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4894)[0m     @     0x55ce67b1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4894)[0m     @     0x55ce67a94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4894)[0m     @     0x55ce67b1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4878)[0m     @     0x7fb69e1155cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4878)[0m     @     0x7fb69e21d148 at::Tensor::copy_()
[2m[36m(pid=4878)[0m     @     0x7fb6a44d3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4878)[0m     @     0x55bc80383fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4878)[0m     @     0x55bc802deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4878)[0m     @     0x55bc80369baf _PyEval_EvalCodeWithName
[2m[36m(pid=4878)[0m     @     0x55bc8036aa20 method_vectorcall
[2m[36m(pid=4878)[0m     @     0x55bc802debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4878)[0m     @     0x55bc80369baf _PyEval_EvalCodeWithName
[2m[36m(pid=4878)[0m     @     0x55bc8036a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4878)[0m     @     0x55bc802df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4878)[0m     @     0x55bc80369baf _PyEval_EvalCodeWithName
[2m[36m(pid=4878)[0m     @     0x55bc8036a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4878)[0m     @     0x55bc802df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4878)[0m     @     0x55bc80369baf _PyEval_EvalCodeWithName
[2m[36m(pid=4878)[0m     @     0x55bc8036a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4878)[0m     @     0x55bc802df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4878)[0m     @     0x55bc80369baf _PyEval_EvalCodeWithName
[2m[36m(pid=4837)[0m     @     0x7f15ff9595cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4837)[0m     @     0x7f15ffa61148 at::Tensor::copy_()
[2m[36m(pid=4837)[0m     @     0x7f1605d17bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4837)[0m     @     0x55b8b935bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4837)[0m     @     0x55b8b92b6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4837)[0m     @     0x55b8b9341baf _PyEval_EvalCodeWithName
[2m[36m(pid=4837)[0m     @     0x55b8b9342a20 method_vectorcall
[2m[36m(pid=4837)[0m     @     0x55b8b92b6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4837)[0m     @     0x55b8b9341baf _PyEval_EvalCodeWithName
[2m[36m(pid=4837)[0m     @     0x55b8b9342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4837)[0m     @     0x55b8b92b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4837)[0m     @     0x55b8b9341baf _PyEval_EvalCodeWithName
[2m[36m(pid=4837)[0m     @     0x55b8b9342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4837)[0m     @     0x55b8b92b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4837)[0m     @     0x55b8b9341baf _PyEval_EvalCodeWithName
[2m[36m(pid=4837)[0m     @     0x55b8b9342643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4837)[0m     @     0x55b8b92b7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4837)[0m     @     0x55b8b9341baf _PyEval_EvalCodeWithName
[2m[36m(pid=4786)[0m     @     0x7f02f48ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4786)[0m     @     0x7f02f49d6148 at::Tensor::copy_()
[2m[36m(pid=4786)[0m     @     0x7f02f65cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4786)[0m     @     0x7f02f48ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4852)[0m     @     0x55f051684689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4852)[0m     @     0x55f05170ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4783)[0m     @     0x7f3ba90ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4783)[0m     @     0x7f3ba73ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4783)[0m     @     0x7f3ba74f7148 at::Tensor::copy_()
[2m[36m(pid=4783)[0m     @     0x7f3bad7adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4783)[0m     @     0x563c34c11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4783)[0m     @     0x563c34b6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4783)[0m     @     0x563c34bf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4783)[0m     @     0x563c34bf8a20 method_vectorcall
[2m[36m(pid=4783)[0m     @     0x563c34b6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4783)[0m     @     0x563c34bf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4783)[0m     @     0x563c34bf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4783)[0m     @     0x563c34b6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4783)[0m     @     0x563c34bf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4783)[0m     @     0x563c34bf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4783)[0m     @     0x563c34b6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4783)[0m     @     0x563c34bf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4783)[0m     @     0x563c34bf8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4783)[0m     @     0x563c34b6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4783)[0m     @     0x563c34bf7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4861)[0m     @     0x7f85e57a15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4861)[0m     @     0x7f85e58a9148 at::Tensor::copy_()
[2m[36m(pid=4861)[0m     @     0x7f85ebb5fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4861)[0m     @     0x563f37179fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4861)[0m     @     0x563f370d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4861)[0m     @     0x563f3715fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4861)[0m     @     0x563f37160a20 method_vectorcall
[2m[36m(pid=4861)[0m     @     0x563f370d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4861)[0m     @     0x563f3715fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4861)[0m     @     0x563f37160643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4861)[0m     @     0x563f370d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4861)[0m     @     0x563f3715fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4861)[0m     @     0x563f37160643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4861)[0m     @     0x563f370d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4861)[0m     @     0x563f3715fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4861)[0m     @     0x563f37160643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4861)[0m     @     0x563f370d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4861)[0m     @     0x563f3715fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4809)[0m     @     0x7f0b510cdb53 at::TensorIterator::for_each()
[2m[36m(pid=4809)[0m     @     0x7f0b510cde11 at::TensorIterator::for_each()
[2m[36m(pid=4809)[0m     @     0x7f0b53de6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4809)[0m     @     0x7f0b53e09cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4809)[0m     @     0x7f0b50e47009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4809)[0m     @     0x7f0b50e45c3f at::native::copy_impl()
[2m[36m(pid=4801)[0m     @     0x7fbb537d05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4801)[0m     @     0x7fbb538d8148 at::Tensor::copy_()
[2m[36m(pid=4801)[0m     @     0x7fbb59b8ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4801)[0m     @     0x564fbff35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4801)[0m     @     0x564fbfe90b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4801)[0m     @     0x564fbff1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4801)[0m     @     0x564fbff1ca20 method_vectorcall
[2m[36m(pid=4801)[0m     @     0x564fbfe90bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4801)[0m     @     0x564fbff1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4801)[0m     @     0x564fbff1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4801)[0m     @     0x564fbfe91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4801)[0m     @     0x564fbff1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4801)[0m     @     0x564fbff1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4801)[0m     @     0x564fbfe91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4801)[0m     @     0x564fbff1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4801)[0m     @     0x564fbff1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4801)[0m     @     0x564fbfe91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4801)[0m     @     0x564fbff1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4795)[0m     @     0x7ed064412e11 at::TensorIterator::for_each()
[2m[36m(pid=4795)[0m     @     0x7ed06712bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4795)[0m     @     0x7ed06714ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4795)[0m     @     0x7ed06418c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4795)[0m     @     0x7ed06418ac3f at::native::copy_impl()
[2m[36m(pid=4869)[0m     @     0x7f445329a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4869)[0m     @     0x7f445329ab53 at::TensorIterator::for_each()
[2m[36m(pid=4869)[0m     @     0x7f445329ae11 at::TensorIterator::for_each()
[2m[36m(pid=4869)[0m     @     0x7f4455fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4869)[0m     @     0x7f4455fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4888)[0m     @     0x7ee7538d1e11 at::TensorIterator::for_each()
[2m[36m(pid=4888)[0m     @     0x7ee7565eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4888)[0m     @     0x7ee75660dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4888)[0m     @     0x7ee75364b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4888)[0m     @     0x7ee753649c3f at::native::copy_impl()
[2m[36m(pid=4896)[0m     @     0x7f0899392b53 at::TensorIterator::for_each()
[2m[36m(pid=4896)[0m     @     0x7f0899392e11 at::TensorIterator::for_each()
[2m[36m(pid=4896)[0m     @     0x7f089c0abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4896)[0m     @     0x7f089c0cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4896)[0m     @     0x7f089910c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4896)[0m     @     0x7f089910ac3f at::native::copy_impl()
[2m[36m(pid=4798)[0m     @     0x7f99ad7ccb53 at::TensorIterator::for_each()
[2m[36m(pid=4798)[0m     @     0x7f99ad7cce11 at::TensorIterator::for_each()
[2m[36m(pid=4798)[0m     @     0x7f99b04e5c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4798)[0m     @     0x7f99b0508cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4798)[0m     @     0x7f99ad546009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4881)[0m     @     0x7fa21ab60b53 at::TensorIterator::for_each()
[2m[36m(pid=4881)[0m     @     0x7fa21ab60e11 at::TensorIterator::for_each()
[2m[36m(pid=4881)[0m     @     0x7fa21d879c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4881)[0m     @     0x7fa21d89ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4868)[0m     @     0x7f52537df977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4868)[0m     @     0x7f52537dfb53 at::TensorIterator::for_each()
[2m[36m(pid=4868)[0m     @     0x7f52537dfe11 at::TensorIterator::for_each()
[2m[36m(pid=4868)[0m     @     0x7f52564f8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4868)[0m     @     0x7f525651bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4796)[0m     @     0x7f4d8d562390 (unknown)
[2m[36m(pid=4796)[0m     @     0x7f1e8f75afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4796)[0m     @     0x7f1e8ca4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4796)[0m     @     0x7f1e8ca51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4843)[0m     @     0x7f863fad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4843)[0m     @     0x7f863fad1b53 at::TensorIterator::for_each()
[2m[36m(pid=4843)[0m     @     0x7f863fad1e11 at::TensorIterator::for_each()
[2m[36m(pid=4843)[0m     @     0x7f86427eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4794)[0m     @     0x7ede92481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4794)[0m     @     0x7ede92481b53 at::TensorIterator::for_each()
[2m[36m(pid=4794)[0m     @     0x7ede92481e11 at::TensorIterator::for_each()
[2m[36m(pid=4794)[0m     @     0x7ede9519ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4794)[0m     @     0x7ede951bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4865)[0m     @     0x7ed3716a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4865)[0m     @     0x7ed3716a8b53 at::TensorIterator::for_each()
[2m[36m(pid=4865)[0m     @     0x7ed3716a8e11 at::TensorIterator::for_each()
[2m[36m(pid=4865)[0m     @     0x7ed3743c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4780)[0m     @     0x7f4905903e11 at::TensorIterator::for_each()
[2m[36m(pid=4780)[0m     @     0x7f490861cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4780)[0m     @     0x7f490863fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4780)[0m     @     0x7f490567d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4780)[0m     @     0x7f490567bc3f at::native::copy_impl()
[2m[36m(pid=4893)[0m     @     0x7f0a52da9b53 at::TensorIterator::for_each()
[2m[36m(pid=4893)[0m     @     0x7f0a52da9e11 at::TensorIterator::for_each()
[2m[36m(pid=4893)[0m     @     0x7f0a55ac2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4893)[0m     @     0x7f0a55ae5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4849)[0m     @     0x7f4a0c3e7e11 at::TensorIterator::for_each()
[2m[36m(pid=4849)[0m     @     0x7f4a0f100c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4849)[0m     @     0x7f4a0f123cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4849)[0m     @     0x7f4a0c161009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4849)[0m     @     0x7f4a0c15fc3f at::native::copy_impl()
[2m[36m(pid=4846)[0m     @     0x7ecd7e511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4846)[0m     @     0x7ecd7e50fc3f at::native::copy_impl()
[2m[36m(pid=4846)[0m     @     0x7ecd7e510ed4 at::native::copy_()
[2m[36m(pid=4858)[0m     @     0x7f6891b12b53 at::TensorIterator::for_each()
[2m[36m(pid=4858)[0m     @     0x7f6891b12e11 at::TensorIterator::for_each()
[2m[36m(pid=4858)[0m     @     0x7f689482bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4867)[0m     @     0x7f0552665b53 at::TensorIterator::for_each()
[2m[36m(pid=4867)[0m     @     0x7f0552665e11 at::TensorIterator::for_each()
[2m[36m(pid=4867)[0m     @     0x7f055537ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4867)[0m     @     0x7f05553a1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4845)[0m     @     0x7fc82e082fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=4845)[0m     @     0x7fc82b37664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=4784)[0m     @     0x7f1df8719cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4784)[0m     @     0x7f1df5757009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4784)[0m     @     0x7f1df5755c3f at::native::copy_impl()
[2m[36m(pid=4784)[0m     @     0x7f1df5756ed4 at::native::copy_()
[2m[36m(pid=4784)[0m     @     0x7f1df5e995cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4822)[0m     @     0x7efbb329ae11 at::TensorIterator::for_each()
[2m[36m(pid=4822)[0m     @     0x7efbb5fb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4822)[0m     @     0x7efbb5fd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4822)[0m     @     0x7efbb3014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4822)[0m     @     0x7efbb3012c3f at::native::copy_impl()
[2m[36m(pid=4797)[0m     @     0x7f97985f6b53 at::TensorIterator::for_each()
[2m[36m(pid=4797)[0m     @     0x7f97985f6e11 at::TensorIterator::for_each()
[2m[36m(pid=4797)[0m     @     0x7f979b30fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4797)[0m     @     0x7f979b332cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4817)[0m     @     0x7f8f0c5f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4817)[0m     @     0x7f8f09633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4817)[0m     @     0x7f8f09631c3f at::native::copy_impl()
[2m[36m(pid=4817)[0m     @     0x7f8f09632ed4 at::native::copy_()
[2m[36m(pid=4817)[0m     @     0x7f8f09d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4863)[0m     @     0x7fa7e2797e11 at::TensorIterator::for_each()
[2m[36m(pid=4863)[0m     @     0x7fa7e54b0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4863)[0m     @     0x7fa7e54d3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4863)[0m     @     0x7fa7e2511009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4863)[0m     @     0x7fa7e250fc3f at::native::copy_impl()
[2m[36m(pid=4863)[0m     @     0x7fa7e2510ed4 at::native::copy_()
[2m[36m(pid=4859)[0m     @     0x7f443813fe11 at::TensorIterator::for_each()
[2m[36m(pid=4859)[0m     @     0x7f443ae58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4859)[0m     @     0x7f443ae7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4859)[0m     @     0x7f4437eb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4859)[0m     @     0x7f4437eb7c3f at::native::copy_impl()
[2m[36m(pid=4835)[0m     @     0x7eeb5f74dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4835)[0m     @     0x7eeb5c78b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4835)[0m     @     0x7eeb5c789c3f at::native::copy_impl()
[2m[36m(pid=4835)[0m     @     0x7eeb5c78aed4 at::native::copy_()
[2m[36m(pid=4835)[0m     @     0x7eeb5cecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4842)[0m     @     0x7f3a5b352e11 at::TensorIterator::for_each()
[2m[36m(pid=4842)[0m     @     0x7f3a5e06bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4842)[0m     @     0x7f3a5e08ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4842)[0m     @     0x7f3a5b0cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4842)[0m     @     0x7f3a5b0cac3f at::native::copy_impl()
[2m[36m(pid=4842)[0m     @     0x7f3a5b0cbed4 at::native::copy_()
[2m[36m(pid=4838)[0m     @     0x7f6b56088cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4838)[0m     @     0x7f6b530c6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4838)[0m     @     0x7f6b530c4c3f at::native::copy_impl()
[2m[36m(pid=4838)[0m     @     0x7f6b530c5ed4 at::native::copy_()
[2m[36m(pid=4875)[0m     @     0x5569ea01bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4875)[0m     @     0x5569ea01c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4875)[0m     @     0x5569e9f91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4875)[0m     @     0x5569ea01bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4875)[0m     @     0x5569ea01c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4875)[0m     @     0x5569e9f91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4875)[0m     @     0x5569ea01bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4815)[0m     @     0x7ecff7a27989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4815)[0m     @     0x7ecff5d285cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4815)[0m     @     0x7ecff5e30148 at::Tensor::copy_()
[2m[36m(pid=4815)[0m     @     0x7ecffc0e6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4815)[0m     @     0x560eae494fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4815)[0m     @     0x560eae3efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4815)[0m     @     0x560eae47abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4815)[0m     @     0x560eae47ba20 method_vectorcall
[2m[36m(pid=4815)[0m     @     0x560eae3efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4815)[0m     @     0x560eae47abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4815)[0m     @     0x560eae47b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4815)[0m     @     0x560eae3f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4815)[0m     @     0x560eae47abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4815)[0m     @     0x560eae47b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4815)[0m     @     0x560eae3f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4815)[0m     @     0x560eae47abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4815)[0m     @     0x560eae47b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4815)[0m     @     0x560eae3f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4815)[0m     @     0x560eae47abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4812)[0m     @     0x7f6e5ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4812)[0m     @     0x7f6e5ed5b148 at::Tensor::copy_()
[2m[36m(pid=4812)[0m     @     0x7f6e65011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4812)[0m     @     0x563279adbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4812)[0m     @     0x563279a36b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4812)[0m     @     0x563279ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4812)[0m     @     0x563279ac2a20 method_vectorcall
[2m[36m(pid=4812)[0m     @     0x563279a36bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4812)[0m     @     0x563279ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4812)[0m     @     0x563279ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4812)[0m     @     0x563279a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4812)[0m     @     0x563279ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4812)[0m     @     0x563279ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4812)[0m     @     0x563279a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4812)[0m     @     0x563279ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4812)[0m     @     0x563279ac2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4812)[0m     @     0x563279a37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4812)[0m     @     0x563279ac1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4879)[0m     @     0x7ed89532b148 at::Tensor::copy_()
[2m[36m(pid=4879)[0m     @     0x7ed89b5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4879)[0m     @     0x55b7325e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4879)[0m     @     0x55b73253fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4879)[0m     @     0x55b7325cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4879)[0m     @     0x55b7325cba20 method_vectorcall
[2m[36m(pid=4879)[0m     @     0x55b73253fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4879)[0m     @     0x55b7325cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4879)[0m     @     0x55b7325cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4879)[0m     @     0x55b732540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4879)[0m     @     0x55b7325cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4879)[0m     @     0x55b7325cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4879)[0m     @     0x55b732540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4879)[0m     @     0x55b7325cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4879)[0m     @     0x55b7325cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4879)[0m     @     0x55b732540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4879)[0m     @     0x55b7325cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4898)[0m     @     0x7f6af2ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4898)[0m     @     0x7f6af2deb148 at::Tensor::copy_()
[2m[36m(pid=4898)[0m     @     0x7f6af90a1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4898)[0m     @     0x556a1dc56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4898)[0m     @     0x556a1dbb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4898)[0m     @     0x556a1dc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4898)[0m     @     0x556a1dc3da20 method_vectorcall
[2m[36m(pid=4898)[0m     @     0x556a1dbb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4898)[0m     @     0x556a1dc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4898)[0m     @     0x556a1dc3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4898)[0m     @     0x556a1dbb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4898)[0m     @     0x556a1dc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4898)[0m     @     0x556a1dc3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4898)[0m     @     0x556a1dbb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4898)[0m     @     0x556a1dc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4898)[0m     @     0x556a1dc3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4898)[0m     @     0x556a1dbb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4898)[0m     @     0x556a1dc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4856)[0m     @     0x7f009db375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4856)[0m     @     0x7f009dc3f148 at::Tensor::copy_()
[2m[36m(pid=4856)[0m     @     0x7f00a3ef5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4856)[0m     @     0x561cfd6e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4856)[0m     @     0x561cfd640b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4856)[0m     @     0x561cfd6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4856)[0m     @     0x561cfd6cca20 method_vectorcall
[2m[36m(pid=4856)[0m     @     0x561cfd640bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4856)[0m     @     0x561cfd6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4856)[0m     @     0x561cfd6cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4856)[0m     @     0x561cfd641689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4856)[0m     @     0x561cfd6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4856)[0m     @     0x561cfd6cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4856)[0m     @     0x561cfd641689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4856)[0m     @     0x561cfd6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4856)[0m     @     0x561cfd6cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4856)[0m     @     0x561cfd641689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4856)[0m     @     0x561cfd6cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4782)[0m     @     0x7ece54484148 at::Tensor::copy_()
[2m[36m(pid=4782)[0m     @     0x7ece5a31ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4782)[0m     @     0x5613cb8f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4782)[0m     @     0x5613cb84db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4782)[0m     @     0x5613cb8d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4782)[0m     @     0x5613cb8d9a20 method_vectorcall
[2m[36m(pid=4782)[0m     @     0x5613cb84dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4782)[0m     @     0x5613cb8d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4782)[0m     @     0x5613cb8d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4782)[0m     @     0x5613cb84e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4782)[0m     @     0x5613cb8d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4782)[0m     @     0x5613cb8d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4782)[0m     @     0x5613cb84e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4782)[0m     @     0x5613cb8d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4782)[0m     @     0x5613cb8d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4782)[0m     @     0x5613cb84e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4782)[0m     @     0x5613cb8d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4882)[0m     @     0x55dba7784baf _PyEval_EvalCodeWithName
[2m[36m(pid=4882)[0m     @     0x55dba7785643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4882)[0m     @     0x55dba76fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4882)[0m     @     0x55dba7784baf _PyEval_EvalCodeWithName
[2m[36m(pid=4882)[0m     @     0x55dba7785643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4882)[0m     @     0x55dba76fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4882)[0m     @     0x55dba7784baf _PyEval_EvalCodeWithName
[2m[36m(pid=4787)[0m     @     0x7f21b1c6c148 at::Tensor::copy_()
[2m[36m(pid=4787)[0m     @     0x7f21b7f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4787)[0m     @     0x557429160fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4787)[0m     @     0x5574290bbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4787)[0m     @     0x557429146baf _PyEval_EvalCodeWithName
[2m[36m(pid=4787)[0m     @     0x557429147a20 method_vectorcall
[2m[36m(pid=4787)[0m     @     0x5574290bbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4787)[0m     @     0x557429146baf _PyEval_EvalCodeWithName
[2m[36m(pid=4787)[0m     @     0x557429147643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4787)[0m     @     0x5574290bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4787)[0m     @     0x557429146baf _PyEval_EvalCodeWithName
[2m[36m(pid=4787)[0m     @     0x557429147643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4787)[0m     @     0x5574290bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4787)[0m     @     0x557429146baf _PyEval_EvalCodeWithName
[2m[36m(pid=4787)[0m     @     0x557429147643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4787)[0m     @     0x5574290bc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4787)[0m     @     0x557429146baf _PyEval_EvalCodeWithName
[2m[36m(pid=4860)[0m     @     0x7ee03b133c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4860)[0m     @     0x7ee03b156cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4860)[0m     @     0x7ee038194009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4860)[0m     @     0x7ee038192c3f at::native::copy_impl()
[2m[36m(pid=4860)[0m     @     0x7ee038193ed4 at::native::copy_()
[2m[36m(pid=4873)[0m     @     0x7f7dc5d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4873)[0m     @     0x7f7dc2ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4873)[0m     @     0x7f7dc2ddbc3f at::native::copy_impl()
[2m[36m(pid=4873)[0m     @     0x7f7dc2ddced4 at::native::copy_()
[2m[36m(pid=4873)[0m     @     0x7f7dc351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4789)[0m     @     0x7fb3ce8f7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4789)[0m     @     0x55b5c6976fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4789)[0m     @     0x55b5c68d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4789)[0m     @     0x55b5c695cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4789)[0m     @     0x55b5c695da20 method_vectorcall
[2m[36m(pid=4789)[0m     @     0x55b5c68d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4789)[0m     @     0x55b5c695cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4789)[0m     @     0x55b5c695d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4789)[0m     @     0x55b5c68d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4789)[0m     @     0x55b5c695cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4789)[0m     @     0x55b5c695d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4789)[0m     @     0x55b5c68d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4789)[0m     @     0x55b5c695cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4789)[0m     @     0x55b5c695d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4789)[0m     @     0x55b5c68d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4789)[0m     @     0x55b5c695cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4805)[0m     @     0x7f682dd9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4805)[0m     @     0x7f682addd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4805)[0m     @     0x7f682addbc3f at::native::copy_impl()
[2m[36m(pid=4805)[0m     @     0x7f682addced4 at::native::copy_()
[2m[36m(pid=4805)[0m     @     0x7f682b51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4866)[0m     @     0x7f83129a8b53 at::TensorIterator::for_each()
[2m[36m(pid=4866)[0m     @     0x7f83129a8e11 at::TensorIterator::for_each()
[2m[36m(pid=4866)[0m     @     0x7f83156c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4866)[0m     @     0x7f83156e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4866)[0m     @     0x7f8312722009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4866)[0m     @     0x7f8312720c3f at::native::copy_impl()
[2m[36m(pid=4899)[0m     @     0x7f35e7354b53 at::TensorIterator::for_each()
[2m[36m(pid=4899)[0m     @     0x7f35e7354e11 at::TensorIterator::for_each()
[2m[36m(pid=4899)[0m     @     0x7f35ea06dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4899)[0m     @     0x7f35ea090cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4821)[0m     @     0x7f95f1ea9e11 at::TensorIterator::for_each()
[2m[36m(pid=4821)[0m     @     0x7f95f4bc2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4821)[0m     @     0x7f95f4be5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4821)[0m     @     0x7f95f1c23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4821)[0m     @     0x7f95f1c21c3f at::native::copy_impl()
[2m[36m(pid=4821)[0m     @     0x7f95f1c22ed4 at::native::copy_()
[2m[36m(pid=4792)[0m     @     0x7f3d2f8a1e11 at::TensorIterator::for_each()
[2m[36m(pid=4792)[0m     @     0x7f3d325bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4792)[0m     @     0x7f3d325ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4792)[0m     @     0x7f3d2f61b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4792)[0m     @     0x7f3d2f619c3f at::native::copy_impl()
[2m[36m(pid=4909)[0m     @     0x7f1e08412e11 at::TensorIterator::for_each()
[2m[36m(pid=4909)[0m     @     0x7f1e0b12bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4909)[0m     @     0x7f1e0b14ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4909)[0m     @     0x7f1e0818c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4909)[0m     @     0x7f1e0818ac3f at::native::copy_impl()
[2m[36m(pid=4909)[0m     @     0x7f1e0818bed4 at::native::copy_()
[2m[36m(pid=4806)[0m     @     0x7fa5f6c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4806)[0m     @     0x7fa5f6d5b148 at::Tensor::copy_()
[2m[36m(pid=4806)[0m     @     0x7fa5fd011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4806)[0m     @     0x560f1c1b6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4806)[0m     @     0x560f1c111b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4806)[0m     @     0x560f1c19cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4806)[0m     @     0x560f1c19da20 method_vectorcall
[2m[36m(pid=4806)[0m     @     0x560f1c111bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4806)[0m     @     0x560f1c19cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4806)[0m     @     0x560f1c19d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4806)[0m     @     0x560f1c112689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4806)[0m     @     0x560f1c19cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4806)[0m     @     0x560f1c19d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4806)[0m     @     0x560f1c112689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4806)[0m     @     0x560f1c19cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4806)[0m     @     0x560f1c19d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4806)[0m     @     0x560f1c112689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4806)[0m     @     0x560f1c19cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4799)[0m     @     0x7f2f95d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4799)[0m     @     0x7f2f95d07c3f at::native::copy_impl()
[2m[36m(pid=4799)[0m     @     0x7f2f95d08ed4 at::native::copy_()
[2m[36m(pid=4799)[0m     @     0x7f2f9644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4790)[0m     @     0x7f5e1f872e11 at::TensorIterator::for_each()
[2m[36m(pid=4790)[0m     @     0x7f5e2258bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4790)[0m     @     0x7f5e225aecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4790)[0m     @     0x7f5e1f5ec009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4790)[0m     @     0x7f5e1f5eac3f at::native::copy_impl()
[2m[36m(pid=4790)[0m     @     0x7f5e1f5ebed4 at::native::copy_()
[2m[36m(pid=4877)[0m     @     0x7f9c8797bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4877)[0m     @     0x7f9c8799ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4877)[0m     @     0x7f9c849dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4877)[0m     @     0x7f9c849dac3f at::native::copy_impl()
[2m[36m(pid=4877)[0m     @     0x7f9c849dbed4 at::native::copy_()
[2m[36m(pid=4848)[0m     @     0x7f0f544bf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4848)[0m     @     0x7f0f545c7148 at::Tensor::copy_()
[2m[36m(pid=4848)[0m     @     0x7f0f5a87dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4848)[0m     @     0x5566b57cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4848)[0m     @     0x5566b5728b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4848)[0m     @     0x5566b57b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=4848)[0m     @     0x5566b57b4a20 method_vectorcall
[2m[36m(pid=4848)[0m     @     0x5566b5728bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4848)[0m     @     0x5566b57b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=4848)[0m     @     0x5566b57b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4848)[0m     @     0x5566b5729689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4848)[0m     @     0x5566b57b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=4848)[0m     @     0x5566b57b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4848)[0m     @     0x5566b5729689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4848)[0m     @     0x5566b57b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=4848)[0m     @     0x5566b57b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4848)[0m     @     0x5566b5729689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4848)[0m     @     0x5566b57b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=4885)[0m     @     0x7f701debe5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4885)[0m     @     0x7f701dfc6148 at::Tensor::copy_()
[2m[36m(pid=4885)[0m     @     0x7f702427cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4885)[0m     @     0x559aa3b55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4885)[0m     @     0x559aa3ab0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4885)[0m     @     0x559aa3b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4885)[0m     @     0x559aa3b3ca20 method_vectorcall
[2m[36m(pid=4885)[0m     @     0x559aa3ab0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4885)[0m     @     0x559aa3b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4885)[0m     @     0x559aa3b3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4885)[0m     @     0x559aa3ab1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4885)[0m     @     0x559aa3b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4885)[0m     @     0x559aa3b3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4885)[0m     @     0x559aa3ab1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4885)[0m     @     0x559aa3b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4885)[0m     @     0x559aa3b3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4885)[0m     @     0x559aa3ab1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4885)[0m     @     0x559aa3b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4853)[0m     @     0x7f4c103c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4853)[0m     @     0x7f4c103e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4853)[0m     @     0x7f4c0d422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4853)[0m     @     0x7f4c0d420c3f at::native::copy_impl()
[2m[36m(pid=4853)[0m     @     0x7f4c0d421ed4 at::native::copy_()
[2m[36m(pid=4905)[0m     @     0x7f440d9fbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4905)[0m     @     0x7f440aa39009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4905)[0m     @     0x7f440aa37c3f at::native::copy_impl()
[2m[36m(pid=4905)[0m     @     0x7f440aa38ed4 at::native::copy_()
[2m[36m(pid=4913)[0m     @     0x7f8ab3627148 at::Tensor::copy_()
[2m[36m(pid=4913)[0m     @     0x7f8ab98ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4913)[0m     @     0x55b4bce30fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4913)[0m     @     0x55b4bcd8bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4913)[0m     @     0x55b4bce16baf _PyEval_EvalCodeWithName
[2m[36m(pid=4913)[0m     @     0x55b4bce17a20 method_vectorcall
[2m[36m(pid=4913)[0m     @     0x55b4bcd8bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4913)[0m     @     0x55b4bce16baf _PyEval_EvalCodeWithName
[2m[36m(pid=4913)[0m     @     0x55b4bce17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4913)[0m     @     0x55b4bcd8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4913)[0m     @     0x55b4bce16baf _PyEval_EvalCodeWithName
[2m[36m(pid=4913)[0m     @     0x55b4bce17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4913)[0m     @     0x55b4bcd8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4913)[0m     @     0x55b4bce16baf _PyEval_EvalCodeWithName
[2m[36m(pid=4913)[0m     @     0x55b4bce17643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4913)[0m     @     0x55b4bcd8c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4913)[0m     @     0x55b4bce16baf _PyEval_EvalCodeWithName
[2m[36m(pid=4864)[0m     @     0x7f438c9d6148 at::Tensor::copy_()
[2m[36m(pid=4864)[0m     @     0x7f4392c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4864)[0m     @     0x55853340efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4864)[0m     @     0x558533369b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4864)[0m     @     0x5585333f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4864)[0m     @     0x5585333f5a20 method_vectorcall
[2m[36m(pid=4864)[0m     @     0x558533369bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4864)[0m     @     0x5585333f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4864)[0m     @     0x5585333f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4864)[0m     @     0x55853336a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4864)[0m     @     0x5585333f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4864)[0m     @     0x5585333f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4864)[0m     @     0x55853336a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4864)[0m     @     0x5585333f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4864)[0m     @     0x5585333f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4864)[0m     @     0x55853336a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4864)[0m     @     0x5585333f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4781)[0m     @     0x7fc2db07f148 at::Tensor::copy_()
[2m[36m(pid=4781)[0m     @     0x7fc2e1335bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4781)[0m     @     0x5572e8940fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4781)[0m     @     0x5572e889bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4781)[0m     @     0x5572e8926baf _PyEval_EvalCodeWithName
[2m[36m(pid=4781)[0m     @     0x5572e8927a20 method_vectorcall
[2m[36m(pid=4781)[0m     @     0x5572e889bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4781)[0m     @     0x5572e8926baf _PyEval_EvalCodeWithName
[2m[36m(pid=4781)[0m     @     0x5572e8927643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4781)[0m     @     0x5572e889c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4781)[0m     @     0x5572e8926baf _PyEval_EvalCodeWithName
[2m[36m(pid=4781)[0m     @     0x5572e8927643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4781)[0m     @     0x5572e889c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4781)[0m     @     0x5572e8926baf _PyEval_EvalCodeWithName
[2m[36m(pid=4781)[0m     @     0x5572e8927643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4781)[0m     @     0x5572e889c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4781)[0m     @     0x5572e8926baf _PyEval_EvalCodeWithName
[2m[36m(pid=4786)[0m     @     0x7f02f49d6148 at::Tensor::copy_()
[2m[36m(pid=4786)[0m     @     0x7f02fac8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4786)[0m     @     0x55cf6a457fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4786)[0m     @     0x55cf6a3b2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4786)[0m     @     0x55cf6a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4786)[0m     @     0x55cf6a43ea20 method_vectorcall
[2m[36m(pid=4786)[0m     @     0x55cf6a3b2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4786)[0m     @     0x55cf6a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4786)[0m     @     0x55cf6a43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4786)[0m     @     0x55cf6a3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4786)[0m     @     0x55cf6a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4786)[0m     @     0x55cf6a43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4786)[0m     @     0x55cf6a3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4786)[0m     @     0x55cf6a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4786)[0m     @     0x55cf6a43e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4786)[0m     @     0x55cf6a3b3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4786)[0m     @     0x55cf6a43dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4809)[0m     @     0x7f0b50e46ed4 at::native::copy_()
[2m[36m(pid=4809)[0m     @     0x7f0b515895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4795)[0m     @     0x7ed06418bed4 at::native::copy_()
[2m[36m(pid=4795)[0m     @     0x7ed0648ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4869)[0m     @     0x7f4453014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4869)[0m     @     0x7f4453012c3f at::native::copy_impl()
[2m[36m(pid=4888)[0m     @     0x7ee75364aed4 at::native::copy_()
[2m[36m(pid=4888)[0m     @     0x7ee753d8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4896)[0m     @     0x7f089910bed4 at::native::copy_()
[2m[36m(pid=4896)[0m     @     0x7f089984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4798)[0m     @     0x7f99ad544c3f at::native::copy_impl()
[2m[36m(pid=4798)[0m     @     0x7f99ad545ed4 at::native::copy_()
[2m[36m(pid=4881)[0m     @     0x7fa21a8da009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4881)[0m     @     0x7fa21a8d8c3f at::native::copy_impl()
[2m[36m(pid=4881)[0m     @     0x7fa21a8d9ed4 at::native::copy_()
[2m[36m(pid=4868)[0m     @     0x7f5253559009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4868)[0m     @     0x7f5253557c3f at::native::copy_impl()
[2m[36m(pid=4868)[0m     @     0x7f5253558ed4 at::native::copy_()
[2m[36m(pid=4868)[0m     @     0x7f5253c9b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4796)[0m     @     0x7f1e8ca51b53 at::TensorIterator::for_each()
[2m[36m(pid=4843)[0m     @     0x7f864280dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4843)[0m     @     0x7f863f84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4843)[0m     @     0x7f863f849c3f at::native::copy_impl()
[2m[36m(pid=4843)[0m     @     0x7f863f84aed4 at::native::copy_()
[2m[36m(pid=4794)[0m     @     0x7ede921fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4794)[0m     @     0x7ede921f9c3f at::native::copy_impl()
[2m[36m(pid=4794)[0m     @     0x7ede921faed4 at::native::copy_()
[2m[36m(pid=4865)[0m     @     0x7ed3743e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4865)[0m     @     0x7ed371422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4865)[0m     @     0x7ed371420c3f at::native::copy_impl()
[2m[36m(pid=4865)[0m     @     0x7ed371421ed4 at::native::copy_()
[2m[36m(pid=4780)[0m     @     0x7f490567ced4 at::native::copy_()
[2m[36m(pid=4780)[0m     @     0x7f4905dbf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4780)[0m     @     0x7f4905ec7148 at::Tensor::copy_()
[2m[36m(pid=4780)[0m     @     0x7f4907abe989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4893)[0m     @     0x7f0a52b23009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4893)[0m     @     0x7f0a52b21c3f at::native::copy_impl()
[2m[36m(pid=4893)[0m     @     0x7f0a52b22ed4 at::native::copy_()
[2m[36m(pid=4893)[0m     @     0x7f0a532655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4849)[0m     @     0x7f4a0c160ed4 at::native::copy_()
[2m[36m(pid=4849)[0m     @     0x7f4a0c8a35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4849)[0m     @     0x7f4a0c9ab148 at::Tensor::copy_()
[2m[36m(pid=4849)[0m     @     0x7f4a0e5a2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4846)[0m     @     0x7ecd7ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4846)[0m     @     0x7ecd7ed5b148 at::Tensor::copy_()
[2m[36m(pid=4846)[0m     @     0x7ecd80952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4846)[0m     @     0x7ecd7ec535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4858)[0m     @     0x7f689484ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4858)[0m     @     0x7f689188c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4858)[0m     @     0x7f689188ac3f at::native::copy_impl()
[2m[36m(pid=4858)[0m     @     0x7f689188bed4 at::native::copy_()
[2m[36m(pid=4867)[0m     @     0x7f05523df009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4867)[0m     @     0x7f05523ddc3f at::native::copy_impl()
[2m[36m(pid=4867)[0m     @     0x7f05523deed4 at::native::copy_()
[2m[36m(pid=4867)[0m     @     0x7f0552b215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4845)[0m     @     0x7fc82b379977 at::TensorIterator::serial_for_each()
[2m[36m(pid=4845)[0m     @     0x7fc82b379b53 at::TensorIterator::for_each()
[2m[36m(pid=4784)[0m     @     0x7f1df5fa1148 at::Tensor::copy_()
[2m[36m(pid=4784)[0m     @     0x7f1df7b98989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4784)[0m     @     0x7f1df5e995cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4822)[0m     @     0x7efbb3013ed4 at::native::copy_()
[2m[36m(pid=4822)[0m     @     0x7efbb37565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4797)[0m     @     0x7f9798370009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4797)[0m     @     0x7f979836ec3f at::native::copy_impl()
[2m[36m(pid=4797)[0m     @     0x7f979836fed4 at::native::copy_()
[2m[36m(pid=4817)[0m     @     0x7f8f09e7d148 at::Tensor::copy_()
[2m[36m(pid=4817)[0m     @     0x7f8f0ba74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4817)[0m     @     0x7f8f09d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4863)[0m     @     0x7fa7e2c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4863)[0m     @     0x7fa7e2d5b148 at::Tensor::copy_()
[2m[36m(pid=4863)[0m     @     0x7fa7e4952989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4859)[0m     @     0x7f4437eb8ed4 at::native::copy_()
[2m[36m(pid=4859)[0m     @     0x7f44385fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4859)[0m     @     0x7f4438703148 at::Tensor::copy_()
[2m[36m(pid=4835)[0m     @     0x7eeb5cfd5148 at::Tensor::copy_()
[2m[36m(pid=4835)[0m     @     0x7eeb5ebcc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4835)[0m     @     0x7eeb5cecd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4842)[0m     @     0x7f3a5b80e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4842)[0m     @     0x7f3a5b916148 at::Tensor::copy_()
[2m[36m(pid=4842)[0m     @     0x7f3a5d50d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4838)[0m     @     0x7f6b538085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4838)[0m     @     0x7f6b53910148 at::Tensor::copy_()
[2m[36m(pid=4838)[0m     @     0x7f6b55507989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4860)[0m     @     0x7ee0388d65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4860)[0m     @     0x7ee0389de148 at::Tensor::copy_()
[2m[36m(pid=4860)[0m     @     0x7ee03a5d5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4873)[0m     @     0x7f7dc3627148 at::Tensor::copy_()
[2m[36m(pid=4873)[0m     @     0x7f7dc521e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4873)[0m     @     0x7f7dc351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4805)[0m     @     0x7f682b627148 at::Tensor::copy_()
[2m[36m(pid=4805)[0m     @     0x7f682d21e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4805)[0m     @     0x7f682b51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4866)[0m     @     0x7f8312721ed4 at::native::copy_()
[2m[36m(pid=4866)[0m     @     0x7f8312e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4899)[0m     @     0x7f35e70ce009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4899)[0m     @     0x7f35e70ccc3f at::native::copy_impl()
[2m[36m(pid=4899)[0m     @     0x7f35e70cded4 at::native::copy_()
[2m[36m(pid=4899)[0m     @     0x7f35e78105cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4821)[0m     @     0x7f95f23655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4821)[0m     @     0x7f95f246d148 at::Tensor::copy_()
[2m[36m(pid=4821)[0m     @     0x7f95f4064989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4821)[0m     @     0x7f95f23655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4792)[0m     @     0x7f3d2f61aed4 at::native::copy_()
[2m[36m(pid=4792)[0m     @     0x7f3d2fd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4792)[0m     @     0x7f3d2fe65148 at::Tensor::copy_()
[2m[36m(pid=4909)[0m     @     0x7f1e088ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4909)[0m     @     0x7f1e089d6148 at::Tensor::copy_()
[2m[36m(pid=4909)[0m     @     0x7f1e0a5cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4799)[0m     @     0x7f2f96553148 at::Tensor::copy_()
[2m[36m(pid=4799)[0m     @     0x7f2f9814a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4799)[0m     @     0x7f2f9644b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4799)[0m     @     0x7f2f96553148 at::Tensor::copy_()
[2m[36m(pid=4790)[0m     @     0x7f5e1fd2e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4790)[0m     @     0x7f5e1fe36148 at::Tensor::copy_()
[2m[36m(pid=4790)[0m     @     0x7f5e21a2d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4877)[0m     @     0x7f9c8511e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4877)[0m     @     0x7f9c85226148 at::Tensor::copy_()
[2m[36m(pid=4877)[0m     @     0x7f9c86e1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4877)[0m     @     0x7f9c8511e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4853)[0m     @     0x7f4c0db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4853)[0m     @     0x7f4c0dc6c148 at::Tensor::copy_()
[2m[36m(pid=4853)[0m     @     0x7f4c0f863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4905)[0m     @     0x7f440b17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4905)[0m     @     0x7f440b283148 at::Tensor::copy_()
[2m[36m(pid=4905)[0m     @     0x7f440ce7a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4809)[0m     @     0x7f0b51691148 at::Tensor::copy_()
[2m[36m(pid=4809)[0m     @     0x7f0b53288989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4809)[0m     @     0x7f0b515895cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4795)[0m     @     0x7ed0649d6148 at::Tensor::copy_()
[2m[36m(pid=4795)[0m     @     0x7ed0665cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4795)[0m     @     0x7ed0648ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4869)[0m     @     0x7f4453013ed4 at::native::copy_()
[2m[36m(pid=4869)[0m     @     0x7f44537565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4869)[0m     @     0x7f445385e148 at::Tensor::copy_()
[2m[36m(pid=4869)[0m     @     0x7f4455455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4888)[0m     @     0x7ee753e95148 at::Tensor::copy_()
[2m[36m(pid=4888)[0m     @     0x7ee755a8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4888)[0m     @     0x7ee753d8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4896)[0m     @     0x7f0899956148 at::Tensor::copy_()
[2m[36m(pid=4896)[0m     @     0x7f089b54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4896)[0m     @     0x7f089984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4798)[0m     @     0x7f99adc885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4798)[0m     @     0x7f99add90148 at::Tensor::copy_()
[2m[36m(pid=4798)[0m     @     0x7f99af987989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4881)[0m     @     0x7fa21b01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4881)[0m     @     0x7fa21b124148 at::Tensor::copy_()
[2m[36m(pid=4881)[0m     @     0x7fa21cd1b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4868)[0m     @     0x7f5253da3148 at::Tensor::copy_()
[2m[36m(pid=4868)[0m     @     0x7f525599a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4843)[0m     @     0x7f863ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4843)[0m     @     0x7f8640095148 at::Tensor::copy_()
[2m[36m(pid=4843)[0m     @     0x7f8641c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4794)[0m     @     0x7ede9293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4794)[0m     @     0x7ede92a45148 at::Tensor::copy_()
[2m[36m(pid=4865)[0m     @     0x7ed371b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4780)[0m     @     0x7f4905dbf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4780)[0m     @     0x7f4905ec7148 at::Tensor::copy_()
[2m[36m(pid=4780)[0m     @     0x7f490c17dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4780)[0m     @     0x5649d6b84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4780)[0m     @     0x5649d6adfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4780)[0m     @     0x5649d6b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4780)[0m     @     0x5649d6b6ba20 method_vectorcall
[2m[36m(pid=4780)[0m     @     0x5649d6adfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4780)[0m     @     0x5649d6b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4780)[0m     @     0x5649d6b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4780)[0m     @     0x5649d6ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4780)[0m     @     0x5649d6b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4780)[0m     @     0x5649d6b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4780)[0m     @     0x5649d6ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4780)[0m     @     0x5649d6b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4780)[0m     @     0x5649d6b6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4780)[0m     @     0x5649d6ae0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4780)[0m     @     0x5649d6b6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4893)[0m     @     0x7f0a5336d148 at::Tensor::copy_()
[2m[36m(pid=4893)[0m     @     0x7f0a54f64989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4893)[0m     @     0x7f0a532655cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4849)[0m     @     0x7f4a0c8a35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4849)[0m     @     0x7f4a0c9ab148 at::Tensor::copy_()
[2m[36m(pid=4849)[0m     @     0x7f4a12c61bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4849)[0m     @     0x561fa3ad8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4849)[0m     @     0x561fa3a33b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4849)[0m     @     0x561fa3abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4849)[0m     @     0x561fa3abfa20 method_vectorcall
[2m[36m(pid=4849)[0m     @     0x561fa3a33bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4849)[0m     @     0x561fa3abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4849)[0m     @     0x561fa3abf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4849)[0m     @     0x561fa3a34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4849)[0m     @     0x561fa3abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4849)[0m     @     0x561fa3abf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4846)[0m     @     0x7ecd7ed5b148 at::Tensor::copy_()
[2m[36m(pid=4846)[0m     @     0x7ecd85011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4846)[0m     @     0x563b80113fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4846)[0m     @     0x563b8006eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4846)[0m     @     0x563b800f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4846)[0m     @     0x563b800faa20 method_vectorcall
[2m[36m(pid=4846)[0m     @     0x563b8006ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4846)[0m     @     0x563b800f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4846)[0m     @     0x563b800fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4846)[0m     @     0x563b8006f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4846)[0m     @     0x563b800f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4846)[0m     @     0x563b800fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4846)[0m     @     0x563b8006f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4846)[0m     @     0x563b800f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4846)[0m     @     0x563b800fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4846)[0m     @     0x563b8006f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4846)[0m     @     0x563b800f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4858)[0m     @     0x7f6891fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4858)[0m     @     0x7f68920d6148 at::Tensor::copy_()
[2m[36m(pid=4858)[0m     @     0x7f6893ccd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4867)[0m     @     0x7f0552c29148 at::Tensor::copy_()
[2m[36m(pid=4867)[0m     @     0x7f0554820989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4867)[0m     @     0x7f0552b215cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4845)[0m     @     0x7fc82b379e11 at::TensorIterator::for_each()
[2m[36m(pid=4845)[0m     @     0x7fc82e092c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4784)[0m     @     0x7f1df5fa1148 at::Tensor::copy_()
[2m[36m(pid=4784)[0m     @     0x7f1dfc257bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4784)[0m     @     0x55d34bcccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4784)[0m     @     0x55d34bc27b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4784)[0m     @     0x55d34bcb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4784)[0m     @     0x55d34bcb3a20 method_vectorcall
[2m[36m(pid=4784)[0m     @     0x55d34bc27bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4784)[0m     @     0x55d34bcb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4784)[0m     @     0x55d34bcb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4784)[0m     @     0x55d34bc28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4784)[0m     @     0x55d34bcb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4784)[0m     @     0x55d34bcb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4784)[0m     @     0x55d34bc28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4784)[0m     @     0x55d34bcb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4784)[0m     @     0x55d34bcb3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4784)[0m     @     0x55d34bc28689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4784)[0m     @     0x55d34bcb2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4822)[0m     @     0x7efbb385e148 at::Tensor::copy_()
[2m[36m(pid=4822)[0m     @     0x7efbb5455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4822)[0m     @     0x7efbb37565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4797)[0m     @     0x7f9798ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4797)[0m     @     0x7f9798bba148 at::Tensor::copy_()
[2m[36m(pid=4797)[0m     @     0x7f979a7b1989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4817)[0m     @     0x7f8f09e7d148 at::Tensor::copy_()
[2m[36m(pid=4817)[0m     @     0x7f8f10133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4817)[0m     @     0x562391b11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4817)[0m     @     0x562391a6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4817)[0m     @     0x562391af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4817)[0m     @     0x562391af8a20 method_vectorcall
[2m[36m(pid=4817)[0m     @     0x562391a6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4817)[0m     @     0x562391af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4817)[0m     @     0x562391af8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4817)[0m     @     0x562391a6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4817)[0m     @     0x562391af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4817)[0m     @     0x562391af8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4817)[0m     @     0x562391a6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4817)[0m     @     0x562391af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4817)[0m     @     0x562391af8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4817)[0m     @     0x562391a6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4817)[0m     @     0x562391af7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4863)[0m     @     0x7fa7e2c535cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4863)[0m     @     0x7fa7e2d5b148 at::Tensor::copy_()
[2m[36m(pid=4863)[0m     @     0x7fa7e9011bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4863)[0m     @     0x560331f65fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4863)[0m     @     0x560331ec0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4863)[0m     @     0x560331f4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4863)[0m     @     0x560331f4ca20 method_vectorcall
[2m[36m(pid=4863)[0m     @     0x560331ec0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4863)[0m     @     0x560331f4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4863)[0m     @     0x560331f4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4863)[0m     @     0x560331ec1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4863)[0m     @     0x560331f4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4863)[0m     @     0x560331f4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4863)[0m     @     0x560331ec1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4863)[0m     @     0x560331f4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4863)[0m     @     0x560331f4c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4859)[0m     @     0x7f443a2fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4859)[0m     @     0x7f44385fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4859)[0m     @     0x7f4438703148 at::Tensor::copy_()
[2m[36m(pid=4859)[0m     @     0x7f443e9b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4835)[0m     @     0x7eeb5cfd5148 at::Tensor::copy_()
[2m[36m(pid=4835)[0m     @     0x7eeb6328bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4835)[0m     @     0x555de51c2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4835)[0m     @     0x555de511db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4835)[0m     @     0x555de51a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4835)[0m     @     0x555de51a9a20 method_vectorcall
[2m[36m(pid=4835)[0m     @     0x555de511dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4835)[0m     @     0x555de51a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4835)[0m     @     0x555de51a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4835)[0m     @     0x555de511e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4835)[0m     @     0x555de51a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4835)[0m     @     0x555de51a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4835)[0m     @     0x555de511e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4835)[0m     @     0x555de51a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4835)[0m     @     0x555de51a9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4835)[0m     @     0x555de511e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4835)[0m     @     0x555de51a8baf _PyEval_EvalCodeWithName
[2m[36m(pid=4842)[0m     @     0x7f3a5b80e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4842)[0m     @     0x7f3a5b916148 at::Tensor::copy_()
[2m[36m(pid=4842)[0m     @     0x7f3a61bccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4842)[0m     @     0x55dda4d73fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4842)[0m     @     0x55dda4cceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4842)[0m     @     0x55dda4d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=4842)[0m     @     0x55dda4d5aa20 method_vectorcall
[2m[36m(pid=4842)[0m     @     0x55dda4ccebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4842)[0m     @     0x55dda4d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=4838)[0m     @     0x7f6b538085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4838)[0m     @     0x7f6b53910148 at::Tensor::copy_()
[2m[36m(pid=4838)[0m     @     0x7f6b59bc6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4838)[0m     @     0x562aec6affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4838)[0m     @     0x562aec60ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4838)[0m     @     0x562aec695baf _PyEval_EvalCodeWithName
[2m[36m(pid=4838)[0m     @     0x562aec696a20 method_vectorcall
[2m[36m(pid=4838)[0m     @     0x562aec60abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4838)[0m     @     0x562aec695baf _PyEval_EvalCodeWithName
[2m[36m(pid=4838)[0m     @     0x562aec696643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4838)[0m     @     0x562aec60b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4838)[0m     @     0x562aec695baf _PyEval_EvalCodeWithName
[2m[36m(pid=4838)[0m     @     0x562aec696643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4838)[0m     @     0x562aec60b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4838)[0m     @     0x562aec695baf _PyEval_EvalCodeWithName
[2m[36m(pid=4838)[0m     @     0x562aec696643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4838)[0m     @     0x562aec60b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4838)[0m     @     0x562aec695baf _PyEval_EvalCodeWithName
[2m[36m(pid=4860)[0m     @     0x7ee0388d65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4860)[0m     @     0x7ee0389de148 at::Tensor::copy_()
[2m[36m(pid=4873)[0m     @     0x7f7dc3627148 at::Tensor::copy_()
[2m[36m(pid=4873)[0m     @     0x7f7dc98ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4873)[0m     @     0x555c592b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4873)[0m     @     0x555c59210b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4873)[0m     @     0x555c5929bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4873)[0m     @     0x555c5929ca20 method_vectorcall
[2m[36m(pid=4873)[0m     @     0x555c59210bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4873)[0m     @     0x555c5929bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4873)[0m     @     0x555c5929c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4873)[0m     @     0x555c59211689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4873)[0m     @     0x555c5929bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4873)[0m     @     0x555c5929c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4873)[0m     @     0x555c59211689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4873)[0m     @     0x555c5929bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4873)[0m     @     0x555c5929c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4873)[0m     @     0x555c59211689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4873)[0m     @     0x555c5929bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4805)[0m     @     0x7f682b627148 at::Tensor::copy_()
[2m[36m(pid=4805)[0m     @     0x7f68318ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4805)[0m     @     0x55a95c5d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4805)[0m     @     0x55a95c52bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4805)[0m     @     0x55a95c5b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=4805)[0m     @     0x55a95c5b7a20 method_vectorcall
[2m[36m(pid=4805)[0m     @     0x55a95c52bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4805)[0m     @     0x55a95c5b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=4805)[0m     @     0x55a95c5b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4805)[0m     @     0x55a95c52c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4805)[0m     @     0x55a95c5b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=4805)[0m     @     0x55a95c5b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4805)[0m     @     0x55a95c52c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4805)[0m     @     0x55a95c5b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=4805)[0m     @     0x55a95c5b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4805)[0m     @     0x55a95c52c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4805)[0m     @     0x55a95c5b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=4866)[0m     @     0x7f8312f6c148 at::Tensor::copy_()
[2m[36m(pid=4866)[0m     @     0x7f8314b63989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4866)[0m     @     0x7f8312e645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4899)[0m     @     0x7f35e7918148 at::Tensor::copy_()
[2m[36m(pid=4899)[0m     @     0x7f35e950f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4821)[0m     @     0x7f95f246d148 at::Tensor::copy_()
[2m[36m(pid=4821)[0m     @     0x7f95f8723bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4821)[0m     @     0x5585e2952fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4821)[0m     @     0x5585e28adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4821)[0m     @     0x5585e2938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4821)[0m     @     0x5585e2939a20 method_vectorcall
[2m[36m(pid=4821)[0m     @     0x5585e28adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4821)[0m     @     0x5585e2938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4821)[0m     @     0x5585e2939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4821)[0m     @     0x5585e28ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4821)[0m     @     0x5585e2938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4821)[0m     @     0x5585e2939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4821)[0m     @     0x5585e28ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4821)[0m     @     0x5585e2938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4821)[0m     @     0x5585e2939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4821)[0m     @     0x5585e28ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4821)[0m     @     0x5585e2938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4792)[0m     @     0x7f3d31a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4792)[0m     @     0x7f3d2fd5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4909)[0m     @     0x7f1e088ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4909)[0m     @     0x7f1e089d6148 at::Tensor::copy_()
[2m[36m(pid=4909)[0m     @     0x7f1e0ec8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4909)[0m     @     0x55906ae04fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4909)[0m     @     0x55906ad5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4909)[0m     @     0x55906adeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4909)[0m     @     0x55906adeba20 method_vectorcall
[2m[36m(pid=4909)[0m     @     0x55906ad5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4909)[0m     @     0x55906adeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4909)[0m     @     0x55906adeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4909)[0m     @     0x55906ad60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4799)[0m     @     0x7f2f9c809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4799)[0m     @     0x55ab0ed18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4799)[0m     @     0x55ab0ec73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4799)[0m     @     0x55ab0ecfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4799)[0m     @     0x55ab0ecffa20 method_vectorcall
[2m[36m(pid=4799)[0m     @     0x55ab0ec73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4799)[0m     @     0x55ab0ecfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4799)[0m     @     0x55ab0ecff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4799)[0m     @     0x55ab0ec74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4799)[0m     @     0x55ab0ecfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4799)[0m     @     0x55ab0ecff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4799)[0m     @     0x55ab0ec74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4799)[0m     @     0x55ab0ecfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4799)[0m     @     0x55ab0ecff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4799)[0m     @     0x55ab0ec74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4799)[0m     @     0x55ab0ecfebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4790)[0m     @     0x7f5e1fd2e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4877)[0m     @     0x7f9c85226148 at::Tensor::copy_()
[2m[36m(pid=4877)[0m     @     0x7f9c8b4dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4877)[0m     @     0x559c6bac3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4877)[0m     @     0x559c6ba1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4877)[0m     @     0x559c6baa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4877)[0m     @     0x559c6baaaa20 method_vectorcall
[2m[36m(pid=4877)[0m     @     0x559c6ba1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4877)[0m     @     0x559c6baa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4877)[0m     @     0x559c6baaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4877)[0m     @     0x559c6ba1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4877)[0m     @     0x559c6baa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4877)[0m     @     0x559c6baaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4877)[0m     @     0x559c6ba1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4877)[0m     @     0x559c6baa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4877)[0m     @     0x559c6baaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4877)[0m     @     0x559c6ba1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4877)[0m     @     0x559c6baa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4853)[0m     @     0x7f4c0db645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4853)[0m     @     0x7f4c0dc6c148 at::Tensor::copy_()
[2m[36m(pid=4853)[0m     @     0x7f4c13f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4853)[0m     @     0x55b0ff69efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4853)[0m     @     0x55b0ff5f9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4853)[0m     @     0x55b0ff684baf _PyEval_EvalCodeWithName
[2m[36m(pid=4853)[0m     @     0x55b0ff685a20 method_vectorcall
[2m[36m(pid=4853)[0m     @     0x55b0ff5f9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4853)[0m     @     0x55b0ff684baf _PyEval_EvalCodeWithName
[2m[36m(pid=4853)[0m     @     0x55b0ff685643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4853)[0m     @     0x55b0ff5fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4853)[0m     @     0x55b0ff684baf _PyEval_EvalCodeWithName
[2m[36m(pid=4853)[0m     @     0x55b0ff685643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4853)[0m     @     0x55b0ff5fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4905)[0m     @     0x7f440b17b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4905)[0m     @     0x7f440b283148 at::Tensor::copy_()
[2m[36m(pid=4905)[0m     @     0x7f4411539bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4905)[0m     @     0x55c53217efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4905)[0m     @     0x55c5320d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4905)[0m     @     0x55c532164baf _PyEval_EvalCodeWithName
[2m[36m(pid=4905)[0m     @     0x55c532165a20 method_vectorcall
[2m[36m(pid=4905)[0m     @     0x55c5320d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4905)[0m     @     0x55c532164baf _PyEval_EvalCodeWithName
[2m[36m(pid=4905)[0m     @     0x55c532165643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4905)[0m     @     0x55c5320da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4905)[0m     @     0x55c532164baf _PyEval_EvalCodeWithName
[2m[36m(pid=4905)[0m     @     0x55c532165643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4905)[0m     @     0x55c5320da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4905)[0m     @     0x55c532164baf _PyEval_EvalCodeWithName
[2m[36m(pid=4905)[0m     @     0x55c532165643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4905)[0m     @     0x55c5320da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4905)[0m     @     0x55c532164baf _PyEval_EvalCodeWithName
[2m[36m(pid=4809)[0m     @     0x7f0b51691148 at::Tensor::copy_()
[2m[36m(pid=4809)[0m     @     0x7f0b57947bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4809)[0m     @     0x556e1e364fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4809)[0m     @     0x556e1e2bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4809)[0m     @     0x556e1e34abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4809)[0m     @     0x556e1e34ba20 method_vectorcall
[2m[36m(pid=4809)[0m     @     0x556e1e2bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4809)[0m     @     0x556e1e34abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4809)[0m     @     0x556e1e34b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4809)[0m     @     0x556e1e2c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4809)[0m     @     0x556e1e34abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4809)[0m     @     0x556e1e34b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4809)[0m     @     0x556e1e2c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4809)[0m     @     0x556e1e34abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4809)[0m     @     0x556e1e34b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4809)[0m     @     0x556e1e2c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4809)[0m     @     0x556e1e34abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4795)[0m     @     0x7ed0649d6148 at::Tensor::copy_()
[2m[36m(pid=4795)[0m     @     0x7ed06ac8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4795)[0m     @     0x55e0f8e21fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4795)[0m     @     0x55e0f8d7cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4795)[0m     @     0x55e0f8e07baf _PyEval_EvalCodeWithName
[2m[36m(pid=4795)[0m     @     0x55e0f8e08a20 method_vectorcall
[2m[36m(pid=4795)[0m     @     0x55e0f8d7cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4795)[0m     @     0x55e0f8e07baf _PyEval_EvalCodeWithName
[2m[36m(pid=4795)[0m     @     0x55e0f8e08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4795)[0m     @     0x55e0f8d7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4795)[0m     @     0x55e0f8e07baf _PyEval_EvalCodeWithName
[2m[36m(pid=4795)[0m     @     0x55e0f8e08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4795)[0m     @     0x55e0f8d7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4795)[0m     @     0x55e0f8e07baf _PyEval_EvalCodeWithName
[2m[36m(pid=4795)[0m     @     0x55e0f8e08643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4795)[0m     @     0x55e0f8d7d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4795)[0m     @     0x55e0f8e07baf _PyEval_EvalCodeWithName
[2m[36m(pid=4869)[0m     @     0x7f44537565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4869)[0m     @     0x7f445385e148 at::Tensor::copy_()
[2m[36m(pid=4869)[0m     @     0x7f4459b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4869)[0m     @     0x5626c3dc3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4869)[0m     @     0x5626c3d1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4869)[0m     @     0x5626c3da9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4869)[0m     @     0x5626c3daaa20 method_vectorcall
[2m[36m(pid=4869)[0m     @     0x5626c3d1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4869)[0m     @     0x5626c3da9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4869)[0m     @     0x5626c3daa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4869)[0m     @     0x5626c3d1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4869)[0m     @     0x5626c3da9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4869)[0m     @     0x5626c3daa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4869)[0m     @     0x5626c3d1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4869)[0m     @     0x5626c3da9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4869)[0m     @     0x5626c3daa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4869)[0m     @     0x5626c3d1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4869)[0m     @     0x5626c3da9baf _PyEval_EvalCodeWithName
[2m[36m(pid=4888)[0m     @     0x7ee753e95148 at::Tensor::copy_()
[2m[36m(pid=4888)[0m     @     0x7ee75a14bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4888)[0m     @     0x5620727b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4888)[0m     @     0x56207270fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4888)[0m     @     0x56207279abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4888)[0m     @     0x56207279ba20 method_vectorcall
[2m[36m(pid=4888)[0m     @     0x56207270fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4888)[0m     @     0x56207279abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4888)[0m     @     0x56207279b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4888)[0m     @     0x562072710689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4888)[0m     @     0x56207279abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4888)[0m     @     0x56207279b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4888)[0m     @     0x562072710689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4888)[0m     @     0x56207279abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4888)[0m     @     0x56207279b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4888)[0m     @     0x562072710689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4888)[0m     @     0x56207279abaf _PyEval_EvalCodeWithName
[2m[36m(pid=4896)[0m     @     0x7f0899956148 at::Tensor::copy_()
[2m[36m(pid=4896)[0m     @     0x7f089fc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4896)[0m     @     0x560d5c7dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4896)[0m     @     0x560d5c73ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4896)[0m     @     0x560d5c7c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=4896)[0m     @     0x560d5c7c6a20 method_vectorcall
[2m[36m(pid=4896)[0m     @     0x560d5c73abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4896)[0m     @     0x560d5c7c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=4896)[0m     @     0x560d5c7c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4896)[0m     @     0x560d5c73b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4896)[0m     @     0x560d5c7c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=4896)[0m     @     0x560d5c7c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4896)[0m     @     0x560d5c73b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4896)[0m     @     0x560d5c7c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=4896)[0m     @     0x560d5c7c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4896)[0m     @     0x560d5c73b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4896)[0m     @     0x560d5c7c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=4798)[0m     @     0x7f99adc885cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4798)[0m     @     0x7f99add90148 at::Tensor::copy_()
[2m[36m(pid=4798)[0m     @     0x7f99b4046bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4798)[0m     @     0x5609a7893fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4798)[0m     @     0x5609a77eeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4798)[0m     @     0x5609a7879baf _PyEval_EvalCodeWithName
[2m[36m(pid=4798)[0m     @     0x5609a787aa20 method_vectorcall
[2m[36m(pid=4798)[0m     @     0x5609a77eebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4798)[0m     @     0x5609a7879baf _PyEval_EvalCodeWithName
[2m[36m(pid=4798)[0m     @     0x5609a787a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4798)[0m     @     0x5609a77ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4798)[0m     @     0x5609a7879baf _PyEval_EvalCodeWithName
[2m[36m(pid=4798)[0m     @     0x5609a787a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4798)[0m     @     0x5609a77ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4798)[0m     @     0x5609a7879baf _PyEval_EvalCodeWithName
[2m[36m(pid=4798)[0m     @     0x5609a787a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4798)[0m     @     0x5609a77ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4798)[0m     @     0x5609a7879baf _PyEval_EvalCodeWithName
[2m[36m(pid=4881)[0m     @     0x7fa21b01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4881)[0m     @     0x7fa21b124148 at::Tensor::copy_()
[2m[36m(pid=4881)[0m     @     0x7fa2213dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4881)[0m     @     0x55f94afdbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4881)[0m     @     0x55f94af36b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4881)[0m     @     0x55f94afc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4881)[0m     @     0x55f94afc2a20 method_vectorcall
[2m[36m(pid=4881)[0m     @     0x55f94af36bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4881)[0m     @     0x55f94afc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4881)[0m     @     0x55f94afc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4881)[0m     @     0x55f94af37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4881)[0m     @     0x55f94afc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4881)[0m     @     0x55f94afc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4881)[0m     @     0x55f94af37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4881)[0m     @     0x55f94afc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4881)[0m     @     0x55f94afc2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4881)[0m     @     0x55f94af37689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4881)[0m     @     0x55f94afc1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4868)[0m     @     0x7f5253c9b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4868)[0m     @     0x7f5253da3148 at::Tensor::copy_()
[2m[36m(pid=4868)[0m     @     0x7f525a059bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4868)[0m     @     0x556aeb20cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4868)[0m     @     0x556aeb167b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4868)[0m     @     0x556aeb1f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4868)[0m     @     0x556aeb1f3a20 method_vectorcall
[2m[36m(pid=4868)[0m     @     0x556aeb167bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4868)[0m     @     0x556aeb1f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4868)[0m     @     0x556aeb1f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4868)[0m     @     0x556aeb168689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4868)[0m     @     0x556aeb1f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4868)[0m     @     0x556aeb1f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4868)[0m     @     0x556aeb168689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4868)[0m     @     0x556aeb1f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4868)[0m     @     0x556aeb1f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4868)[0m     @     0x556aeb168689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4868)[0m     @     0x556aeb1f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=4796)[0m     @     0x7f1e8ca51e11 at::TensorIterator::for_each()
[2m[36m(pid=4796)[0m     @     0x7f1e8f76ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=4796)[0m     @     0x7f1e8f78dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4796)[0m     @     0x7f1e8c7cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4796)[0m     @     0x7f1e8c7c9c3f at::native::copy_impl()
[2m[36m(pid=4843)[0m     @     0x7f863ff8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4843)[0m     @     0x7f8640095148 at::Tensor::copy_()
[2m[36m(pid=4843)[0m     @     0x7f864634bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4843)[0m     @     0x5650915c8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4843)[0m     @     0x565091523b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4843)[0m     @     0x5650915aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4843)[0m     @     0x5650915afa20 method_vectorcall
[2m[36m(pid=4843)[0m     @     0x565091523bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4843)[0m     @     0x5650915aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4843)[0m     @     0x5650915af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4843)[0m     @     0x565091524689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4843)[0m     @     0x5650915aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4843)[0m     @     0x5650915af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4843)[0m     @     0x565091524689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4843)[0m     @     0x5650915aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4843)[0m     @     0x5650915af643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4843)[0m     @     0x565091524689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4843)[0m     @     0x5650915aebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4794)[0m     @     0x7ede9463c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4794)[0m     @     0x7ede9293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4794)[0m     @     0x7ede92a45148 at::Tensor::copy_()
[2m[36m(pid=4865)[0m     @     0x7ed371c6c148 at::Tensor::copy_()
[2m[36m(pid=4865)[0m     @     0x7ed373863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4865)[0m     @     0x7ed371b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4865)[0m     @     0x7ed371c6c148 at::Tensor::copy_()
[2m[36m(pid=4865)[0m     @     0x7ed377f22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4865)[0m     @     0x5654aaa40fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4865)[0m     @     0x5654aa99bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4893)[0m     @     0x7f0a5336d148 at::Tensor::copy_()
[2m[36m(pid=4893)[0m     @     0x7f0a59623bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4893)[0m     @     0x555c3e9a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4893)[0m     @     0x555c3e901b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4893)[0m     @     0x555c3e98cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4893)[0m     @     0x555c3e98da20 method_vectorcall
[2m[36m(pid=4893)[0m     @     0x555c3e901bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4893)[0m     @     0x555c3e98cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4893)[0m     @     0x555c3e98d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4893)[0m     @     0x555c3e902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4893)[0m     @     0x555c3e98cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4893)[0m     @     0x555c3e98d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4893)[0m     @     0x555c3e902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4893)[0m     @     0x555c3e98cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4893)[0m     @     0x555c3e98d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4893)[0m     @     0x555c3e902689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4893)[0m     @     0x555c3e98cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4849)[0m     @     0x561fa3a34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4849)[0m     @     0x561fa3abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4849)[0m     @     0x561fa3abf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4849)[0m     @     0x561fa3a34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4849)[0m     @     0x561fa3abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=4858)[0m     @     0x7f6891fce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4858)[0m     @     0x7f68920d6148 at::Tensor::copy_()
[2m[36m(pid=4858)[0m     @     0x7f689838cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4858)[0m     @     0x55d5e12cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4858)[0m     @     0x55d5e1226b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4858)[0m     @     0x55d5e12b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4858)[0m     @     0x55d5e12b2a20 method_vectorcall
[2m[36m(pid=4858)[0m     @     0x55d5e1226bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4867)[0m     @     0x7f0552c29148 at::Tensor::copy_()
[2m[36m(pid=4867)[0m     @     0x7f0558edfbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4867)[0m     @     0x558045169fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4867)[0m     @     0x5580450c4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4867)[0m     @     0x55804514fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4867)[0m     @     0x558045150a20 method_vectorcall
[2m[36m(pid=4867)[0m     @     0x5580450c4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4867)[0m     @     0x55804514fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4867)[0m     @     0x558045150643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4867)[0m     @     0x5580450c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4867)[0m     @     0x55804514fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4867)[0m     @     0x558045150643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4867)[0m     @     0x5580450c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4867)[0m     @     0x55804514fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4867)[0m     @     0x558045150643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4867)[0m     @     0x5580450c5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4867)[0m     @     0x55804514fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4845)[0m     @     0x7fc82e0b5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=4845)[0m     @     0x7fc82b0f3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=4845)[0m     @     0x7fc82b0f1c3f at::native::copy_impl()
[2m[36m(pid=4822)[0m     @     0x7efbb385e148 at::Tensor::copy_()
[2m[36m(pid=4822)[0m     @     0x7efbb9b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4822)[0m     @     0x55a259bb5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4822)[0m     @     0x55a259b10b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4822)[0m     @     0x55a259b9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4822)[0m     @     0x55a259b9ca20 method_vectorcall
[2m[36m(pid=4822)[0m     @     0x55a259b10bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4822)[0m     @     0x55a259b9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4822)[0m     @     0x55a259b9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4822)[0m     @     0x55a259b11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4822)[0m     @     0x55a259b9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4822)[0m     @     0x55a259b9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4822)[0m     @     0x55a259b11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4822)[0m     @     0x55a259b9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4822)[0m     @     0x55a259b9c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4822)[0m     @     0x55a259b11689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4822)[0m     @     0x55a259b9bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4797)[0m     @     0x7f9798ab25cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4863)[0m     @     0x560331ec1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4863)[0m     @     0x560331f4bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4859)[0m     @     0x55fe87d23fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4859)[0m     @     0x55fe87c7eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4859)[0m     @     0x55fe87d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=4859)[0m     @     0x55fe87d0aa20 method_vectorcall
[2m[36m(pid=4859)[0m     @     0x55fe87c7ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4859)[0m     @     0x55fe87d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=4859)[0m     @     0x55fe87d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4859)[0m     @     0x55fe87c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4859)[0m     @     0x55fe87d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=4859)[0m     @     0x55fe87d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4859)[0m     @     0x55fe87c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4859)[0m     @     0x55fe87d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=4859)[0m     @     0x55fe87d0a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4859)[0m     @     0x55fe87c7f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4859)[0m     @     0x55fe87d09baf _PyEval_EvalCodeWithName
[2m[36m(pid=4842)[0m     @     0x55dda4d5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4842)[0m     @     0x55dda4ccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4842)[0m     @     0x55dda4d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=4842)[0m     @     0x55dda4d5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4842)[0m     @     0x55dda4ccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4842)[0m     @     0x55dda4d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=4842)[0m     @     0x55dda4d5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4842)[0m     @     0x55dda4ccf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4842)[0m     @     0x55dda4d59baf _PyEval_EvalCodeWithName
[2m[36m(pid=4860)[0m     @     0x7ee03ec94bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4860)[0m     @     0x55eec68b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4860)[0m     @     0x55eec6812b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4860)[0m     @     0x55eec689dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4860)[0m     @     0x55eec689ea20 method_vectorcall
[2m[36m(pid=4860)[0m     @     0x55eec6812bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4860)[0m     @     0x55eec689dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4860)[0m     @     0x55eec689e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4860)[0m     @     0x55eec6813689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4860)[0m     @     0x55eec689dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4860)[0m     @     0x55eec689e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4860)[0m     @     0x55eec6813689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4860)[0m     @     0x55eec689dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4860)[0m     @     0x55eec689e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4860)[0m     @     0x55eec6813689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4860)[0m     @     0x55eec689dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4866)[0m     @     0x7f8312f6c148 at::Tensor::copy_()
[2m[36m(pid=4866)[0m     @     0x7f8319222bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4866)[0m     @     0x558f8e2b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4866)[0m     @     0x558f8e20cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4866)[0m     @     0x558f8e297baf _PyEval_EvalCodeWithName
[2m[36m(pid=4866)[0m     @     0x558f8e298a20 method_vectorcall
[2m[36m(pid=4866)[0m     @     0x558f8e20cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4866)[0m     @     0x558f8e297baf _PyEval_EvalCodeWithName
[2m[36m(pid=4866)[0m     @     0x558f8e298643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4866)[0m     @     0x558f8e20d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4866)[0m     @     0x558f8e297baf _PyEval_EvalCodeWithName
[2m[36m(pid=4866)[0m     @     0x558f8e298643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4866)[0m     @     0x558f8e20d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4866)[0m     @     0x558f8e297baf _PyEval_EvalCodeWithName
[2m[36m(pid=4866)[0m     @     0x558f8e298643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4866)[0m     @     0x558f8e20d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4866)[0m     @     0x558f8e297baf _PyEval_EvalCodeWithName
[2m[36m(pid=4899)[0m     @     0x7f35e78105cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4899)[0m     @     0x7f35e7918148 at::Tensor::copy_()
[2m[36m(pid=4899)[0m     @     0x7f35edbcebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4899)[0m     @     0x55ed11a01fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4899)[0m     @     0x55ed1195cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4899)[0m     @     0x55ed119e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4899)[0m     @     0x55ed119e8a20 method_vectorcall
[2m[36m(pid=4899)[0m     @     0x55ed1195cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4899)[0m     @     0x55ed119e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4899)[0m     @     0x55ed119e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4899)[0m     @     0x55ed1195d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4899)[0m     @     0x55ed119e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4899)[0m     @     0x55ed119e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4899)[0m     @     0x55ed1195d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4899)[0m     @     0x55ed119e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4899)[0m     @     0x55ed119e8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4899)[0m     @     0x55ed1195d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4899)[0m     @     0x55ed119e7baf _PyEval_EvalCodeWithName
[2m[36m(pid=4792)[0m     @     0x7f3d2fe65148 at::Tensor::copy_()
[2m[36m(pid=4792)[0m     @     0x7f3d3611bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4792)[0m     @     0x560fec952fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4792)[0m     @     0x560fec8adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4792)[0m     @     0x560fec938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4792)[0m     @     0x560fec939a20 method_vectorcall
[2m[36m(pid=4792)[0m     @     0x560fec8adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4792)[0m     @     0x560fec938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4792)[0m     @     0x560fec939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4792)[0m     @     0x560fec8ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4792)[0m     @     0x560fec938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4792)[0m     @     0x560fec939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4792)[0m     @     0x560fec8ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4792)[0m     @     0x560fec938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4792)[0m     @     0x560fec939643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4792)[0m     @     0x560fec8ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4792)[0m     @     0x560fec938baf _PyEval_EvalCodeWithName
[2m[36m(pid=4909)[0m     @     0x55906adeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4909)[0m     @     0x55906adeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4909)[0m     @     0x55906ad60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4909)[0m     @     0x55906adeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4909)[0m     @     0x55906adeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4909)[0m     @     0x55906ad60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4909)[0m     @     0x55906adeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=4790)[0m     @     0x7f5e1fe36148 at::Tensor::copy_()
[2m[36m(pid=4790)[0m     @     0x7f5e260ecbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4790)[0m     @     0x559ce9a6cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4790)[0m     @     0x559ce99c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4790)[0m     @     0x559ce9a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=4790)[0m     @     0x559ce9a53a20 method_vectorcall
[2m[36m(pid=4790)[0m     @     0x559ce99c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4853)[0m     @     0x55b0ff684baf _PyEval_EvalCodeWithName
[2m[36m(pid=4853)[0m     @     0x55b0ff685643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4853)[0m     @     0x55b0ff5fa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4853)[0m     @     0x55b0ff684baf _PyEval_EvalCodeWithName
[2m[36m(pid=4796)[0m     @     0x7f1e8c7caed4 at::native::copy_()
[2m[36m(pid=4794)[0m     @     0x7ede98cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4794)[0m     @     0x55d0531defd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4794)[0m     @     0x55d053139b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4794)[0m     @     0x55d0531c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4794)[0m     @     0x55d0531c5a20 method_vectorcall
[2m[36m(pid=4794)[0m     @     0x55d053139bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4794)[0m     @     0x55d0531c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4794)[0m     @     0x55d0531c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4794)[0m     @     0x55d05313a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4794)[0m     @     0x55d0531c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4794)[0m     @     0x55d0531c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4794)[0m     @     0x55d05313a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4794)[0m     @     0x55d0531c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4794)[0m     @     0x55d0531c5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4794)[0m     @     0x55d05313a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4794)[0m     @     0x55d0531c4baf _PyEval_EvalCodeWithName
[2m[36m(pid=4865)[0m     @     0x5654aaa26baf _PyEval_EvalCodeWithName
[2m[36m(pid=4865)[0m     @     0x5654aaa27a20 method_vectorcall
[2m[36m(pid=4865)[0m     @     0x5654aa99bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4865)[0m     @     0x5654aaa26baf _PyEval_EvalCodeWithName
[2m[36m(pid=4865)[0m     @     0x5654aaa27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4865)[0m     @     0x5654aa99c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4865)[0m     @     0x5654aaa26baf _PyEval_EvalCodeWithName
[2m[36m(pid=4865)[0m     @     0x5654aaa27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4865)[0m     @     0x5654aa99c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4865)[0m     @     0x5654aaa26baf _PyEval_EvalCodeWithName
[2m[36m(pid=4865)[0m     @     0x5654aaa27643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4865)[0m     @     0x5654aa99c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4865)[0m     @     0x5654aaa26baf _PyEval_EvalCodeWithName
[2m[36m(pid=4858)[0m     @     0x55d5e12b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4858)[0m     @     0x55d5e12b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4858)[0m     @     0x55d5e1227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4858)[0m     @     0x55d5e12b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4858)[0m     @     0x55d5e12b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4858)[0m     @     0x55d5e1227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4858)[0m     @     0x55d5e12b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4858)[0m     @     0x55d5e12b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4858)[0m     @     0x55d5e1227689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4858)[0m     @     0x55d5e12b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=4845)[0m     @     0x7fc82b0f2ed4 at::native::copy_()
[2m[36m(pid=4845)[0m     @     0x7fc82b8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4797)[0m     @     0x7f9798bba148 at::Tensor::copy_()
[2m[36m(pid=4797)[0m     @     0x7f979ee70bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4797)[0m     @     0x55ec07537fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4797)[0m     @     0x55ec07492b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4797)[0m     @     0x55ec0751dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4797)[0m     @     0x55ec0751ea20 method_vectorcall
[2m[36m(pid=4797)[0m     @     0x55ec07492bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4797)[0m     @     0x55ec0751dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4797)[0m     @     0x55ec0751e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4797)[0m     @     0x55ec07493689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4797)[0m     @     0x55ec0751dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4797)[0m     @     0x55ec0751e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4797)[0m     @     0x55ec07493689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4797)[0m     @     0x55ec0751dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4797)[0m     @     0x55ec0751e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4797)[0m     @     0x55ec07493689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4797)[0m     @     0x55ec0751dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=4790)[0m     @     0x559ce9a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=4790)[0m     @     0x559ce9a53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4790)[0m     @     0x559ce99c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4790)[0m     @     0x559ce9a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=4790)[0m     @     0x559ce9a53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4790)[0m     @     0x559ce99c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4790)[0m     @     0x559ce9a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=4790)[0m     @     0x559ce9a53643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4790)[0m     @     0x559ce99c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4790)[0m     @     0x559ce9a52baf _PyEval_EvalCodeWithName
[2m[36m(pid=4796)[0m     @     0x7f1e8cf0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4845)[0m     @     0x7fc82b93d148 at::Tensor::copy_()
[2m[36m(pid=4845)[0m     @     0x7fc82d534989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4796)[0m     @     0x7f1e8d015148 at::Tensor::copy_()
[2m[36m(pid=4845)[0m     @     0x7fc82b8355cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4845)[0m     @     0x7fc82b93d148 at::Tensor::copy_()
[2m[36m(pid=4845)[0m     @     0x7fc831bf3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=4845)[0m     @     0x55c4da89dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=4845)[0m     @     0x55c4da7f8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4845)[0m     @     0x55c4da883baf _PyEval_EvalCodeWithName
[2m[36m(pid=4845)[0m     @     0x55c4da884a20 method_vectorcall
[2m[36m(pid=4845)[0m     @     0x55c4da7f8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4845)[0m     @     0x55c4da883baf _PyEval_EvalCodeWithName
[2m[36m(pid=4845)[0m     @     0x55c4da884643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4845)[0m     @     0x55c4da7f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4845)[0m     @     0x55c4da883baf _PyEval_EvalCodeWithName
[2m[36m(pid=4845)[0m     @     0x55c4da884643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4845)[0m     @     0x55c4da7f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4845)[0m     @     0x55c4da883baf _PyEval_EvalCodeWithName
[2m[36m(pid=4845)[0m     @     0x55c4da884643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=4845)[0m     @     0x55c4da7f9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=4845)[0m     @     0x55c4da883baf _PyEval_EvalCodeWithName
[2m[36m(pid=4796)[0m     @     0x7f1e8ec0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=4796)[0m     @     0x7f1e8cf0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=4796)[0m     @     0x7f1e8d015148 at::Tensor::copy_()
2020-11-05 10:56:58,510	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 10:56:58,510	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 10:56:58,516	ERROR trial_runner.py:567 -- Trial PPO_jss_env_9ba7d_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=4892, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 23.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.62 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_9ba7d_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_9ba7d_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_9ba7d_00000_0_2020-11-05_10-56-50/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:56:58,532	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
2020-11-05 10:56:58,533	WARNING worker.py:1072 -- A worker died or was killed while executing task fffffffffffffffff257d30801000000.
2020-11-05 10:56:58,533	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.
== Status ==
Memory usage on this node: 23.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.62 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_9ba7d_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_9ba7d_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_9ba7d_00000_0_2020-11-05_10-56-50/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 10:56:58,543	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff75f329e601000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_9ba7d_00000])
