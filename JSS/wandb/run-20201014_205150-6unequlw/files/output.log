2020-10-14 20:51:54,814	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 11.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1887f_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=463)[0m 2020-10-14 20:51:58,269	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=458)[0m 2020-10-14 20:52:00,491	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=461)[0m 2020-10-14 20:52:00,461	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=460)[0m 2020-10-14 20:52:00,499	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=420)[0m 2020-10-14 20:52:00,528	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=475)[0m 2020-10-14 20:52:00,540	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=459)[0m 2020-10-14 20:52:00,585	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=426)[0m 2020-10-14 20:52:00,579	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=346)[0m 2020-10-14 20:52:00,635	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=456)[0m 2020-10-14 20:52:00,676	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=441)[0m 2020-10-14 20:52:00,673	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=467)[0m 2020-10-14 20:52:00,672	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=446)[0m 2020-10-14 20:52:00,696	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=485)[0m 2020-10-14 20:52:00,698	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=470)[0m 2020-10-14 20:52:00,724	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=367)[0m 2020-10-14 20:52:00,704	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=451)[0m 2020-10-14 20:52:00,707	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=445)[0m 2020-10-14 20:52:00,702	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=415)[0m 2020-10-14 20:52:00,759	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=409)[0m 2020-10-14 20:52:00,801	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=349)[0m 2020-10-14 20:52:00,802	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=399)[0m 2020-10-14 20:52:00,810	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=348)[0m 2020-10-14 20:52:00,811	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=431)[0m 2020-10-14 20:52:00,811	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=447)[0m 2020-10-14 20:52:00,766	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=356)[0m 2020-10-14 20:52:00,759	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=427)[0m 2020-10-14 20:52:00,886	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=408)[0m 2020-10-14 20:52:00,868	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=368)[0m 2020-10-14 20:52:00,850	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=358)[0m 2020-10-14 20:52:00,851	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=416)[0m 2020-10-14 20:52:00,888	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=359)[0m 2020-10-14 20:52:00,894	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=433)[0m 2020-10-14 20:52:00,869	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=413)[0m 2020-10-14 20:52:00,878	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=478)[0m 2020-10-14 20:52:00,856	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=357)[0m 2020-10-14 20:52:00,842	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=429)[0m 2020-10-14 20:52:00,892	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=364)[0m 2020-10-14 20:52:00,848	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=376)[0m 2020-10-14 20:52:00,867	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=432)[0m 2020-10-14 20:52:00,854	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=361)[0m 2020-10-14 20:52:00,908	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=375)[0m 2020-10-14 20:52:00,899	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=377)[0m 2020-10-14 20:52:00,910	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=418)[0m 2020-10-14 20:52:00,917	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=350)[0m 2020-10-14 20:52:00,922	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=394)[0m 2020-10-14 20:52:00,920	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=363)[0m 2020-10-14 20:52:00,933	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=372)[0m 2020-10-14 20:52:00,931	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=465)[0m 2020-10-14 20:52:00,941	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=450)[0m 2020-10-14 20:52:01,004	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=373)[0m 2020-10-14 20:52:00,981	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=404)[0m 2020-10-14 20:52:00,976	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=345)[0m 2020-10-14 20:52:00,957	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=435)[0m 2020-10-14 20:52:00,969	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=352)[0m 2020-10-14 20:52:00,963	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=354)[0m 2020-10-14 20:52:01,006	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=417)[0m 2020-10-14 20:52:00,994	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=355)[0m 2020-10-14 20:52:00,994	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=365)[0m 2020-10-14 20:52:00,996	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=380)[0m 2020-10-14 20:52:00,969	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=476)[0m 2020-10-14 20:52:00,954	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=428)[0m 2020-10-14 20:52:01,009	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=425)[0m 2020-10-14 20:52:01,013	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=442)[0m 2020-10-14 20:52:01,025	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=371)[0m 2020-10-14 20:52:01,008	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=360)[0m 2020-10-14 20:52:01,023	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=351)[0m 2020-10-14 20:52:01,036	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=437)[0m 2020-10-14 20:52:01,036	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=397)[0m 2020-10-14 20:52:01,036	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=401)[0m 2020-10-14 20:52:01,050	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=378)[0m 2020-10-14 20:52:01,044	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=436)[0m 2020-10-14 20:52:01,039	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=396)[0m 2020-10-14 20:52:01,055	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=411)[0m 2020-10-14 20:52:01,070	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=381)[0m 2020-10-14 20:52:01,089	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=464)[0m 2020-10-14 20:52:01,092	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=430)[0m 2020-10-14 20:52:01,124	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=438)[0m 2020-10-14 20:52:01,139	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=347)[0m 2020-10-14 20:52:01,184	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=423)[0m 2020-10-14 20:52:01,190	INFO catalog.py:306 -- Wrapping <class 'JSS.models.FCMaskedActionsModel'> as None
[2m[36m(pid=463)[0m 2020-10-14 20:52:03,052	INFO rollout_worker.py:1012 -- Built policy map: {'default_policy': <ray.rllib.policy.torch_policy_template.PPOTorchPolicy object at 0x7f67973ce8b0>}
[2m[36m(pid=463)[0m 2020-10-14 20:52:03,053	INFO rollout_worker.py:1013 -- Built preprocessor map: {'default_policy': <ray.rllib.models.preprocessors.DictFlatteningPreprocessor object at 0x7f67973ce640>}
[2m[36m(pid=463)[0m 2020-10-14 20:52:03,053	INFO rollout_worker.py:457 -- Built filter map: {'default_policy': <ray.rllib.utils.filter.NoFilter object at 0x7f67973ce610>}
[2m[36m(pid=368)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=368)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=478)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=478)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=432)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=432)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=470)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=470)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=367)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=367)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=445)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=445)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=415)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=415)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=450)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=450)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=435)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=435)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=418)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=418)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=394)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=394)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=458)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=458)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=461)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=461)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=460)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=460)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=420)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=420)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=475)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=475)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=459)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=459)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=426)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=426)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=361)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=361)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=377)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=377)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=346)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=346)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=456)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=456)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=467)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=467)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=446)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=446)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=485)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=485)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=408)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=408)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=416)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=416)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=376)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=376)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=349)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=349)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=399)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=399)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=348)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=348)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=431)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=431)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=356)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=356)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=363)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=363)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=372)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=372)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=428)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=428)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=425)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=425)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=371)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=371)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=360)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=360)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=396)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=396)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=350)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=350)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=373)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=373)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=404)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=404)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=345)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=345)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=352)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=352)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=354)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=354)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=355)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=355)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=365)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=365)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=380)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=380)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=476)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=476)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=430)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=430)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=381)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=381)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=401)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=401)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=378)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=378)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=436)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=436)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=375)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=375)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=427)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=427)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=423)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=423)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=358)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=358)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=359)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=359)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=433)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=433)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=413)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=413)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=357)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=357)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=364)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=364)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=451)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=451)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=465)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=465)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=351)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=351)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=411)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=411)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=447)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=447)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=347)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=347)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=464)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=464)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=438)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=438)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=458)[0m 2020-10-14 20:52:03,186	INFO rollout_worker.py:576 -- Generating sample batch of size 2048
[2m[36m(pid=458)[0m 2020-10-14 20:52:03,188	INFO sampler.py:552 -- Raw obs from env: { 0: { 'agent0': { 'action_mask': np.ndarray((51,), dtype=bool, min=0.0, max=1.0, mean=0.98),
[2m[36m(pid=458)[0m                    'real_obs': np.ndarray((350,), dtype=float64, min=0.0, max=0.0, mean=0.0)}},
[2m[36m(pid=458)[0m   1: { 'agent0': { 'action_mask': np.ndarray((51,), dtype=bool, min=0.0, max=1.0, mean=0.98),
[2m[36m(pid=458)[0m                    'real_obs': np.ndarray((350,), dtype=float64, min=0.0, max=0.0, mean=0.0)}}}
[2m[36m(pid=458)[0m 2020-10-14 20:52:03,188	INFO sampler.py:554 -- Info return from env: {0: {'agent0': None}, 1: {'agent0': None}}
[2m[36m(pid=458)[0m 2020-10-14 20:52:03,189	INFO sampler.py:800 -- Preprocessed obs: np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125)
[2m[36m(pid=458)[0m 2020-10-14 20:52:03,189	INFO sampler.py:805 -- Filtered obs: np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125)
[2m[36m(pid=458)[0m 2020-10-14 20:52:03,195	INFO sampler.py:1222 -- Inputs to compute_actions():
[2m[36m(pid=458)[0m 
[2m[36m(pid=458)[0m { 'default_policy': [ { 'data': { 'agent_id': 'agent0',
[2m[36m(pid=458)[0m                                   'env_id': 0,
[2m[36m(pid=458)[0m                                   'info': None,
[2m[36m(pid=458)[0m                                   'obs': np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125),
[2m[36m(pid=458)[0m                                   'prev_action': np.ndarray((), dtype=int64, min=0.0, max=0.0, mean=0.0),
[2m[36m(pid=458)[0m                                   'prev_reward': 0.0,
[2m[36m(pid=458)[0m                                   'rnn_state': []},
[2m[36m(pid=458)[0m                         'type': 'PolicyEvalData'},
[2m[36m(pid=458)[0m                       { 'data': { 'agent_id': 'agent0',
[2m[36m(pid=458)[0m                                   'env_id': 1,
[2m[36m(pid=458)[0m                                   'info': None,
[2m[36m(pid=458)[0m                                   'obs': np.ndarray((401,), dtype=float64, min=0.0, max=1.0, mean=0.125),
[2m[36m(pid=458)[0m                                   'prev_action': np.ndarray((), dtype=int64, min=0.0, max=0.0, mean=0.0),
[2m[36m(pid=458)[0m                                   'prev_reward': 0.0,
[2m[36m(pid=458)[0m                                   'rnn_state': []},
[2m[36m(pid=458)[0m                         'type': 'PolicyEvalData'}]}
[2m[36m(pid=458)[0m 
[2m[36m(pid=458)[0m 2020-10-14 20:52:03,206	INFO sampler.py:1268 -- Outputs of compute_actions():
[2m[36m(pid=458)[0m 
[2m[36m(pid=458)[0m { 'default_policy': ( np.ndarray((2,), dtype=int64, min=7.0, max=20.0, mean=13.5),
[2m[36m(pid=458)[0m                       [],
[2m[36m(pid=458)[0m                       { 'action_dist_inputs': np.ndarray((2, 51), dtype=float32, min=-10000000000.0, max=0.0, mean=-196078432.0),
[2m[36m(pid=458)[0m                         'action_logp': np.ndarray((2,), dtype=float32, min=-3.912, max=-3.912, mean=-3.912),
[2m[36m(pid=458)[0m                         'action_prob': np.ndarray((2,), dtype=float32, min=0.02, max=0.02, mean=0.02),
[2m[36m(pid=458)[0m                         'vf_preds': np.ndarray((2,), dtype=float32, min=0.0, max=0.0, mean=0.0)})}
[2m[36m(pid=458)[0m 
2020-10-14 20:52:07,137	ERROR trial_runner.py:567 -- Trial PPO_jss_env_1887f_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError(ValueError): [36mray::PPO.train()[39m (pid=463, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 471, in base_iterator
    yield ray.get(futures, timeout=timeout)
ray.exceptions.RayTaskError(ValueError): [36mray::RolloutWorker.par_iter_next()[39m (pid=459, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1152, in par_iter_next
    return next(self.local_it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py", line 288, in gen_rollouts
    yield self.sample()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/rollout_worker.py", line 579, in sample
    batches = [self.input_reader.next()]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 93, in next
    batches = [self.get_data()]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 209, in get_data
    item = next(self.rollout_provider)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 585, in _env_runner
    active_envs, to_eval, outputs = _process_observations(
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/evaluation/sampler.py", line 797, in _process_observations
    prep_obs: EnvObsType = _get_or_raise(preprocessors,
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py", line 233, in transform
    self.check_shape(observation)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/models/preprocessors.py", line 61, in check_shape
    raise ValueError(
ValueError: ('Observation outside expected value range', Dict(action_mask:Box(0.0, 1.0, (51,), float32), real_obs:Box(0.0, 1.0, (350,), float64)), {'real_obs': array([1.00000000e+00, 0.00000000e+00, 8.00000000e-01, 5.23076923e-01,
       8.28282828e-01, 3.30256410e-03, 0.00000000e+00, 0.00000000e+00,
       4.24242424e-01, 6.66666667e-01, 5.10769231e-01, 9.09090909e-02,
       3.28205128e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       6.00000000e-01, 6.07179487e-01, 2.62626263e-01, 2.87179487e-03,
       0.00000000e+00, 0.00000000e+00, 4.64646465e-01, 6.66666667e-01,
       7.17948718e-01, 1.31313131e-01, 3.89743590e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 3.25128205e-01,
       5.25252525e-01, 2.01025641e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 9.33333333e-01, 5.28205128e-01, 2.02020202e-02,
       9.84615385e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       5.33333333e-01, 4.08205128e-01, 7.37373737e-01, 1.13846154e-02,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 8.00000000e-01,
       6.07179487e-01, 2.52525253e-01, 2.50256410e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 6.00000000e-01, 3.72307692e-01,
       8.08080808e-02, 2.76923077e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 5.33333333e-01, 3.63076923e-01, 1.11111111e-01,
       5.74358974e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       9.33333333e-01, 6.54358974e-01, 4.64646465e-01, 1.29230769e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 5.33333333e-01,
       4.07179487e-01, 3.33333333e-01, 4.20512821e-03, 0.00000000e+00,
       0.00000000e+00, 2.72727273e-01, 3.33333333e-01, 3.46666667e-01,
       1.01010101e-01, 2.05128205e-03, 0.00000000e+00, 0.00000000e+00,
       5.35353535e-01, 4.66666667e-01, 3.29230769e-01, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       1.00000000e+00, 7.06666667e-01, 1.00000000e+00, 8.61538462e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,
       6.96410256e-01, 1.00000000e+00, 5.18974359e-03, 0.00000000e+00,
       1.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.90256410e-01,
       0.00000000e+00, 5.74358974e-04, 0.00000000e+00, 0.00000000e+00,
       4.04040404e-02, 6.00000000e-01, 5.98974359e-01, 7.37373737e-01,
       4.84102564e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       9.33333333e-01, 5.46666667e-01, 4.54545455e-01, 3.07692308e-04,
       0.00000000e+00, 0.00000000e+00, 5.05050505e-02, 6.66666667e-01,
       5.35384615e-01, 2.82828283e-01, 2.52307692e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 5.06666667e-01,
       5.05050505e-01, 3.44615385e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 6.00000000e-01, 4.48205128e-01, 4.64646465e-01,
       1.36205128e-02, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,
       4.00000000e-01, 2.78974359e-01, 6.96969697e-01, 3.03589744e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 4.00000000e-01,
       3.61025641e-01, 7.07070707e-02, 7.17948718e-04, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.02564103e-01,
       5.25252525e-01, 1.64102564e-03, 0.00000000e+00, 0.00000000e+00,
       3.03030303e-01, 3.33333333e-01, 4.11282051e-01, 4.34343434e-01,
       5.94871795e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       5.33333333e-01, 4.98461538e-01, 2.52525253e-01, 6.76923077e-04,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 7.33333333e-01,
       6.85128205e-01, 4.04040404e-01, 1.64102564e-04, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 7.38461538e-01,
       2.02020202e-02, 3.48717949e-04, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,
       3.48717949e-04, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       4.66666667e-01, 3.24102564e-01, 8.58585859e-01, 6.56410256e-04,
       0.00000000e+00, 0.00000000e+00, 4.14141414e-01, 6.66666667e-01,
       6.56410256e-01, 2.02020202e-01, 7.24102564e-03, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 4.66666667e-01, 4.41025641e-01,
       6.46464646e-01, 1.98974359e-03, 0.00000000e+00, 1.00000000e+00,
       0.00000000e+00, 8.66666667e-01, 5.18974359e-01, 6.26262626e-01,
       1.27179487e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       8.00000000e-01, 5.88717949e-01, 9.89898990e-01, 9.23076923e-04,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00,
       9.70256410e-01, 1.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 6.66666667e-01, 5.09743590e-01,
       5.15151515e-01, 2.33846154e-03, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 4.00000000e-01, 4.22564103e-01, 7.57575758e-01,
       2.11282051e-03, 0.00000000e+00, 1.00000000e+00, 0.00000000e+00,
       8.00000000e-01, 7.56923077e-01, 3.73737374e-01, 4.69743590e-03,
       0.00000000e+00, 1.00000000e+00, 0.00000000e+00, 8.00000000e-01,
       5.06666667e-01, 2.02020202e-02, 4.10256410e-05, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 1.00000000e+00, 7.58974359e-01,
       1.00000000e+00, 3.38461538e-03, 0.00000000e+00, 0.00000000e+00,
       2.62626263e-01, 5.33333333e-01, 4.99487179e-01, 3.73737374e-01,
       6.89230769e-03, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
       8.66666667e-01, 5.56923077e-01, 4.14141414e-01, 1.76410256e-03,
       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.66666667e-01,
       5.56923077e-01, 8.98989899e-01, 1.01538462e-02, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 9.33333333e-01, 8.03076923e-01,
       5.15151515e-01, 1.84615385e-04, 0.00000000e+00, 0.00000000e+00,
       0.00000000e+00, 6.66666667e-01, 5.24102564e-01, 4.54545455e-01,
       1.64102564e-03, 0.00000000e+00, 0.00000000e+00, 3.53535354e-01,
       8.66666667e-01, 7.44615385e-01, 5.25252525e-01, 1.06666667e-03,
       0.00000000e+00, 0.00000000e+00, 3.23232323e-01, 8.00000000e-01,
       7.57948718e-01, 2.92929293e-01, 5.94871795e-04, 0.00000000e+00,
       0.00000000e+00, 0.00000000e+00, 5.33333333e-01, 4.76923077e-01,
       5.65656566e-01, 3.83589744e-03, 0.00000000e+00, 0.00000000e+00,
       6.56565657e-01, 6.66666667e-01, 4.69743590e-01, 4.04040404e-01,
       8.20512821e-04, 0.00000000e+00]), 'action_mask': array([ True, False, False, False, False, False, False, False, False,
       False, False, False, False, False, False, False,  True, False,
       False, False, False, False,  True, False, False, False, False,
       False, False, False, False, False, False,  True, False, False,
       False, False,  True,  True, False, False, False, False, False,
       False, False, False, False, False, False])})
== Status ==
Memory usage on this node: 24.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1887f_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1887f_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1887f_00000_0_2020-10-14_20-51-56/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 24.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_1887f_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_1887f_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_1887f_00000_0_2020-10-14_20-51-56/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_1887f_00000])
