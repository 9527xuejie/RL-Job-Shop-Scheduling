2020-11-05 10:18:57,559	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 15.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_516a6_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=12908)[0m 2020-11-05 10:19:00,360	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=12869)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12869)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12869)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12869)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12869)[0m *** SIGSEGV (@0x0) received by PID 12869 (TID 0x7f343a047700) from PID 0; stack trace: ***
[2m[36m(pid=12898)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12898)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12898)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12898)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12898)[0m *** SIGSEGV (@0x0) received by PID 12898 (TID 0x7fb89bb8a700) from PID 0; stack trace: ***
[2m[36m(pid=12925)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12925)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12925)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12925)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12925)[0m *** SIGSEGV (@0x0) received by PID 12925 (TID 0x7f717ebdf700) from PID 0; stack trace: ***
[2m[36m(pid=12925)[0m     @     0x7f717e7b8390 (unknown)
[2m[36m(pid=12925)[0m     @     0x7f427e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12925)[0m     @     0x7f427dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12863)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12863)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12863)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12863)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12863)[0m *** SIGSEGV (@0x0) received by PID 12863 (TID 0x7f17945de700) from PID 0; stack trace: ***
[2m[36m(pid=12863)[0m     @     0x7f17941b7390 (unknown)
[2m[36m(pid=12863)[0m     @     0x7ee893ed8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12863)[0m     @     0x7ee8936037db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12863)[0m     @     0x7ee8936068f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12923)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12923)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12923)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12923)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12923)[0m *** SIGSEGV (@0x0) received by PID 12923 (TID 0x7f9417ff7700) from PID 0; stack trace: ***
[2m[36m(pid=12923)[0m     @     0x7f9417bd0390 (unknown)
[2m[36m(pid=12923)[0m     @     0x7f6517af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12923)[0m     @     0x7f65172207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12843)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12843)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12843)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12843)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12843)[0m *** SIGSEGV (@0x0) received by PID 12843 (TID 0x7f35ad7c5700) from PID 0; stack trace: ***
[2m[36m(pid=12843)[0m     @     0x7f35ad39e390 (unknown)
[2m[36m(pid=12843)[0m     @     0x7f06ad33af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12843)[0m     @     0x7f06aca657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12882)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12882)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12882)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12882)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12882)[0m *** SIGSEGV (@0x0) received by PID 12882 (TID 0x7fd5e080f700) from PID 0; stack trace: ***
[2m[36m(pid=12882)[0m     @     0x7fd5e03e8390 (unknown)
[2m[36m(pid=12882)[0m     @     0x7fa6e0333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12882)[0m     @     0x7fa6dfa5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12905)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12905)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12905)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12905)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12905)[0m *** SIGSEGV (@0x0) received by PID 12905 (TID 0x7f67d44cb700) from PID 0; stack trace: ***
[2m[36m(pid=12905)[0m     @     0x7f67d40a4390 (unknown)
[2m[36m(pid=12905)[0m     @     0x7f38d401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12905)[0m     @     0x7f38d37477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12905)[0m     @     0x7f38d374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12891)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12891)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12891)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12891)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12891)[0m *** SIGSEGV (@0x0) received by PID 12891 (TID 0x7f0d3776c700) from PID 0; stack trace: ***
[2m[36m(pid=12891)[0m     @     0x7f0d37345390 (unknown)
[2m[36m(pid=12891)[0m     @     0x7ede37124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12891)[0m     @     0x7ede3684f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12910)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12910)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12910)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12910)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12910)[0m *** SIGSEGV (@0x0) received by PID 12910 (TID 0x7f66585ca700) from PID 0; stack trace: ***
[2m[36m(pid=12910)[0m     @     0x7f66581a3390 (unknown)
[2m[36m(pid=12910)[0m     @     0x7f375801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12910)[0m     @     0x7f37577477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12910)[0m     @     0x7f375774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12866)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12866)[0m *** SIGSEGV (@0x0) received by PID 12866 (TID 0x7f6d35f73700) from PID 0; stack trace: ***
[2m[36m(pid=12866)[0m     @     0x7f6d35b4c390 (unknown)
[2m[36m(pid=12866)[0m     @     0x7f3e35a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12866)[0m     @     0x7f3e351357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12866)[0m     @     0x7f3e351388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12862)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12862)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12862)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12862)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12862)[0m *** SIGSEGV (@0x0) received by PID 12862 (TID 0x7f37f398e700) from PID 0; stack trace: ***
[2m[36m(pid=12862)[0m     @     0x7f37f3567390 (unknown)
[2m[36m(pid=12862)[0m     @     0x7f08f350df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12862)[0m     @     0x7f08f2c387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12862)[0m     @     0x7f08f2c3b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12920)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12920)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12920)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12920)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12920)[0m *** SIGSEGV (@0x0) received by PID 12920 (TID 0x7f3e6fdf0700) from PID 0; stack trace: ***
[2m[36m(pid=12920)[0m     @     0x7f3e6f9c9390 (unknown)
[2m[36m(pid=12920)[0m     @     0x7f0f6f751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12920)[0m     @     0x7f0f6ee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12920)[0m     @     0x7f0f6ee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12917)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12917)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12917)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12917)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12917)[0m *** SIGSEGV (@0x0) received by PID 12917 (TID 0x7fe3cc489700) from PID 0; stack trace: ***
[2m[36m(pid=12917)[0m     @     0x7fe3cc062390 (unknown)
[2m[36m(pid=12917)[0m     @     0x7fb4cbfeff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12917)[0m     @     0x7fb4cb71a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12917)[0m     @     0x7fb4cb71d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12875)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12875)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12875)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12875)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12875)[0m *** SIGSEGV (@0x0) received by PID 12875 (TID 0x7f96a6367700) from PID 0; stack trace: ***
[2m[36m(pid=12875)[0m     @     0x7f96a5f40390 (unknown)
[2m[36m(pid=12875)[0m     @     0x7f67a5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12875)[0m     @     0x7f67a554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12875)[0m     @     0x7f67a55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12875)[0m     @     0x7f67a5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=12789)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12789)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12789)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12854)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12854)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12854)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12790)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12790)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12790)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12799)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12799)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12799)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12808)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12808)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12808)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12803)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12803)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12803)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12797)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12797)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12797)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12832)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12832)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12832)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12832)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12832)[0m *** SIGSEGV (@0x0) received by PID 12832 (TID 0x7f561d558700) from PID 0; stack trace: ***
[2m[36m(pid=12869)[0m     @     0x7f3439c20390 (unknown)
[2m[36m(pid=12869)[0m     @     0x7f0539a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12869)[0m     @     0x7f05391357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12869)[0m     @     0x7f05391388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12869)[0m     @     0x7f0539138ad3 at::TensorIterator::for_each()
[2m[36m(pid=12898)[0m     @     0x7fb89b763390 (unknown)
[2m[36m(pid=12898)[0m     @     0x7f899b71ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12898)[0m     @     0x7f899ae497db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12898)[0m     @     0x7f899ae4c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12898)[0m     @     0x7f899ae4cad3 at::TensorIterator::for_each()
[2m[36m(pid=12830)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12830)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12830)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12830)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12830)[0m *** SIGSEGV (@0x0) received by PID 12830 (TID 0x7ff721be7700) from PID 0; stack trace: ***
[2m[36m(pid=12845)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12845)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12845)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12845)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12845)[0m *** SIGSEGV (@0x0) received by PID 12845 (TID 0x7f475c000700) from PID 0; stack trace: ***
[2m[36m(pid=12925)[0m     @     0x7f427dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12925)[0m     @     0x7f427dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=12863)[0m     @     0x7ee893606ad3 at::TensorIterator::for_each()
[2m[36m(pid=12863)[0m     @     0x7ee893606d91 at::TensorIterator::for_each()
[2m[36m(pid=12863)[0m     @     0x7ee893ee9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12863)[0m     @     0x7ee893f0cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12923)[0m     @     0x7f65172238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12923)[0m     @     0x7f6517223ad3 at::TensorIterator::for_each()
[2m[36m(pid=12773)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12773)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12773)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12773)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12773)[0m *** SIGSEGV (@0x0) received by PID 12773 (TID 0x7fc9a2cae700) from PID 0; stack trace: ***
[2m[36m(pid=12788)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12788)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12788)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12781)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12781)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12781)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12781)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12781)[0m *** SIGSEGV (@0x0) received by PID 12781 (TID 0x7fa3b1fdf700) from PID 0; stack trace: ***
[2m[36m(pid=12795)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12795)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12795)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12795)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12795)[0m *** SIGSEGV (@0x0) received by PID 12795 (TID 0x7f34a4ea9700) from PID 0; stack trace: ***
[2m[36m(pid=12795)[0m     @     0x7f34a4a82390 (unknown)
[2m[36m(pid=12849)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12849)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12849)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12907)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12907)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12907)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12907)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12907)[0m *** SIGSEGV (@0x0) received by PID 12907 (TID 0x7f5301ca6700) from PID 0; stack trace: ***
[2m[36m(pid=12890)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12890)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12890)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12890)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12890)[0m *** SIGSEGV (@0x0) received by PID 12890 (TID 0x7fab349d3700) from PID 0; stack trace: ***
[2m[36m(pid=12791)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12791)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12791)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12791)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12791)[0m *** SIGSEGV (@0x0) received by PID 12791 (TID 0x7f81ed212700) from PID 0; stack trace: ***
[2m[36m(pid=12791)[0m     @     0x7f81ecdeb390 (unknown)
[2m[36m(pid=12791)[0m     @     0x7f52ecd64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12791)[0m     @     0x7f52ec48f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12776)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12776)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12776)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12776)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12776)[0m *** SIGSEGV (@0x0) received by PID 12776 (TID 0x7f17edde3700) from PID 0; stack trace: ***
[2m[36m(pid=12776)[0m     @     0x7f17ed9bc390 (unknown)
[2m[36m(pid=12776)[0m     @     0x7ee8ed7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12776)[0m     @     0x7ee8ecf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12838)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12838)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12838)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12872)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12872)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12872)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12872)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12872)[0m *** SIGSEGV (@0x0) received by PID 12872 (TID 0x7f2255a8c700) from PID 0; stack trace: ***
[2m[36m(pid=12872)[0m     @     0x7f2255665390 (unknown)
[2m[36m(pid=12872)[0m     @     0x7ef3555e2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12872)[0m     @     0x7ef354d0d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12860)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12860)[0m *** SIGSEGV (@0x0) received by PID 12860 (TID 0x7f5464f2b700) from PID 0; stack trace: ***
[2m[36m(pid=12860)[0m     @     0x7f5464b04390 (unknown)
[2m[36m(pid=12860)[0m     @     0x7f2564a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12860)[0m     @     0x7f25641617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12884)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12884)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12884)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12884)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12884)[0m *** SIGSEGV (@0x0) received by PID 12884 (TID 0x7f038a57e700) from PID 0; stack trace: ***
[2m[36m(pid=12884)[0m     @     0x7f038a157390 (unknown)
[2m[36m(pid=12884)[0m     @     0x7ed48a10df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12884)[0m     @     0x7ed4898387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12884)[0m     @     0x7ed48983b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12884)[0m     @     0x7ed48983bad3 at::TensorIterator::for_each()
[2m[36m(pid=12793)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12793)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12793)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12793)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12793)[0m *** SIGSEGV (@0x0) received by PID 12793 (TID 0x7f7918fb4700) from PID 0; stack trace: ***
[2m[36m(pid=12793)[0m     @     0x7f7918b8d390 (unknown)
[2m[36m(pid=12793)[0m     @     0x7f4a18b15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12793)[0m     @     0x7f4a182407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12843)[0m     @     0x7f06aca688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12843)[0m     @     0x7f06aca68ad3 at::TensorIterator::for_each()
[2m[36m(pid=12843)[0m     @     0x7f06aca68d91 at::TensorIterator::for_each()
[2m[36m(pid=12843)[0m     @     0x7f06ad34bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12843)[0m     @     0x7f06ad36ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12843)[0m     @     0x7f06ac810a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12851)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12851)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12851)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12851)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12851)[0m *** SIGSEGV (@0x0) received by PID 12851 (TID 0x7f472c6f5700) from PID 0; stack trace: ***
[2m[36m(pid=12851)[0m     @     0x7f472c2ce390 (unknown)
[2m[36m(pid=12851)[0m     @     0x7f182c271f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12851)[0m     @     0x7f182b99c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12851)[0m     @     0x7f182b99f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12851)[0m     @     0x7f182b99fad3 at::TensorIterator::for_each()
[2m[36m(pid=12774)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12774)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12774)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12774)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12774)[0m *** SIGSEGV (@0x0) received by PID 12774 (TID 0x7f82f4727700) from PID 0; stack trace: ***
[2m[36m(pid=12774)[0m     @     0x7f82f4300390 (unknown)
[2m[36m(pid=12774)[0m     @     0x7f53f42a1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12774)[0m     @     0x7f53f39cc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12882)[0m     @     0x7fa6dfa618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12882)[0m     @     0x7fa6dfa61ad3 at::TensorIterator::for_each()
[2m[36m(pid=12882)[0m     @     0x7fa6dfa61d91 at::TensorIterator::for_each()
[2m[36m(pid=12882)[0m     @     0x7fa6e0344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12882)[0m     @     0x7fa6e0367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12882)[0m     @     0x7fa6df809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12882)[0m     @     0x7fa6df807388 at::native::copy_impl()
[2m[36m(pid=12881)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12881)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12881)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12881)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12881)[0m *** SIGSEGV (@0x0) received by PID 12881 (TID 0x7f7c50f2e700) from PID 0; stack trace: ***
[2m[36m(pid=12881)[0m     @     0x7f7c50b07390 (unknown)
[2m[36m(pid=12881)[0m     @     0x7f4d50aaaf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12881)[0m     @     0x7f4d501d57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12881)[0m     @     0x7f4d501d88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12905)[0m     @     0x7f38d374aad3 at::TensorIterator::for_each()
[2m[36m(pid=12905)[0m     @     0x7f38d374ad91 at::TensorIterator::for_each()
[2m[36m(pid=12905)[0m     @     0x7f38d402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12905)[0m     @     0x7f38d4050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12905)[0m     @     0x7f38d34f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12905)[0m     @     0x7f38d34f0388 at::native::copy_impl()
[2m[36m(pid=12905)[0m     @     0x7f38d34f25a4 at::native::copy_()
[2m[36m(pid=12905)[0m     @     0x7f38d3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=12905)[0m     @     0x7f38d60b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12891)[0m     @     0x7ede368528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12891)[0m     @     0x7ede36852ad3 at::TensorIterator::for_each()
[2m[36m(pid=12891)[0m     @     0x7ede36852d91 at::TensorIterator::for_each()
[2m[36m(pid=12891)[0m     @     0x7ede37135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12891)[0m     @     0x7ede37158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12891)[0m     @     0x7ede365faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12891)[0m     @     0x7ede365f8388 at::native::copy_impl()
[2m[36m(pid=12867)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12867)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12867)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12867)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12867)[0m *** SIGSEGV (@0x0) received by PID 12867 (TID 0x7fbab2715700) from PID 0; stack trace: ***
[2m[36m(pid=12867)[0m     @     0x7fbab22ee390 (unknown)
[2m[36m(pid=12867)[0m     @     0x7f8bb2279f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12867)[0m     @     0x7f8bb19a47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12867)[0m     @     0x7f8bb19a78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12778)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12778)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12778)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12778)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12778)[0m *** SIGSEGV (@0x0) received by PID 12778 (TID 0x7f5ee40c8700) from PID 0; stack trace: ***
[2m[36m(pid=12778)[0m     @     0x7f5ee3ca1390 (unknown)
[2m[36m(pid=12778)[0m     @     0x7f2fe39c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12778)[0m     @     0x7f2fe30f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12842)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12842)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12842)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12842)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12842)[0m *** SIGSEGV (@0x0) received by PID 12842 (TID 0x7f64226be700) from PID 0; stack trace: ***
[2m[36m(pid=12842)[0m     @     0x7f6422297390 (unknown)
[2m[36m(pid=12842)[0m     @     0x7f3522239f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12842)[0m     @     0x7f35219647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12842)[0m     @     0x7f35219678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12910)[0m     @     0x7f375774aad3 at::TensorIterator::for_each()
[2m[36m(pid=12910)[0m     @     0x7f375774ad91 at::TensorIterator::for_each()
[2m[36m(pid=12910)[0m     @     0x7f375802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12910)[0m     @     0x7f3758050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12910)[0m     @     0x7f37574f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12910)[0m     @     0x7f37574f0388 at::native::copy_impl()
[2m[36m(pid=12910)[0m     @     0x7f37574f25a4 at::native::copy_()
[2m[36m(pid=12910)[0m     @     0x7f3757bdd4f5 at::Tensor::copy_()
[2m[36m(pid=12783)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12783)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12783)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12783)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12783)[0m *** SIGSEGV (@0x0) received by PID 12783 (TID 0x7f1e2cd25700) from PID 0; stack trace: ***
[2m[36m(pid=12783)[0m     @     0x7f1e2c8fe390 (unknown)
[2m[36m(pid=12783)[0m     @     0x7eef2c73ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12783)[0m     @     0x7eef2be697db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12783)[0m     @     0x7eef2be6c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12783)[0m     @     0x7eef2be6cad3 at::TensorIterator::for_each()
[2m[36m(pid=12866)[0m     @     0x7f3e35138ad3 at::TensorIterator::for_each()
[2m[36m(pid=12866)[0m     @     0x7f3e35138d91 at::TensorIterator::for_each()
[2m[36m(pid=12866)[0m     @     0x7f3e35a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12866)[0m     @     0x7f3e35a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12866)[0m     @     0x7f3e34ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12866)[0m     @     0x7f3e34ede388 at::native::copy_impl()
[2m[36m(pid=12866)[0m     @     0x7f3e34ee05a4 at::native::copy_()
[2m[36m(pid=12866)[0m     @     0x7f3e355cb4f5 at::Tensor::copy_()
[2m[36m(pid=12779)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12779)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12779)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12779)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12779)[0m *** SIGSEGV (@0x0) received by PID 12779 (TID 0x7fe58c1f0700) from PID 0; stack trace: ***
[2m[36m(pid=12779)[0m     @     0x7fe58bdc9390 (unknown)
[2m[36m(pid=12779)[0m     @     0x7fb68b900f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12779)[0m     @     0x7fb68b02b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12779)[0m     @     0x7fb68b02e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12895)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12895)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12895)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12895)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12895)[0m *** SIGSEGV (@0x0) received by PID 12895 (TID 0x7f7183913700) from PID 0; stack trace: ***
[2m[36m(pid=12895)[0m     @     0x7f71834ec390 (unknown)
[2m[36m(pid=12895)[0m     @     0x7f42833edf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12895)[0m     @     0x7f4282b187db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12895)[0m     @     0x7f4282b1b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12839)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12839)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12839)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12839)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12839)[0m *** SIGSEGV (@0x0) received by PID 12839 (TID 0x7f2b076c0700) from PID 0; stack trace: ***
[2m[36m(pid=12839)[0m     @     0x7f2b07299390 (unknown)
[2m[36m(pid=12839)[0m     @     0x7efc07229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12829)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12829)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12829)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12848)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12848)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12848)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12848)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12848)[0m *** SIGSEGV (@0x0) received by PID 12848 (TID 0x7fc6e7eab700) from PID 0; stack trace: ***
[2m[36m(pid=12802)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12802)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12802)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12802)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12802)[0m *** SIGSEGV (@0x0) received by PID 12802 (TID 0x7f559bb00700) from PID 0; stack trace: ***
[2m[36m(pid=12802)[0m     @     0x7f559b6d9390 (unknown)
[2m[36m(pid=12855)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12855)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12855)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12855)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12855)[0m *** SIGSEGV (@0x0) received by PID 12855 (TID 0x7fe1c6443700) from PID 0; stack trace: ***
[2m[36m(pid=12855)[0m     @     0x7fe1c601c390 (unknown)
[2m[36m(pid=12855)[0m     @     0x7fb2c5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12855)[0m     @     0x7fb2c554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12855)[0m     @     0x7fb2c55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12852)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12852)[0m *** SIGSEGV (@0x0) received by PID 12852 (TID 0x7f8d29a4e700) from PID 0; stack trace: ***
[2m[36m(pid=12852)[0m     @     0x7f8d29627390 (unknown)
[2m[36m(pid=12852)[0m     @     0x7f5e295bff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12852)[0m     @     0x7f5e28cea7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12852)[0m     @     0x7f5e28ced8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12785)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12785)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12785)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12785)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12785)[0m *** SIGSEGV (@0x0) received by PID 12785 (TID 0x7f6104421700) from PID 0; stack trace: ***
[2m[36m(pid=12785)[0m     @     0x7f6103ffa390 (unknown)
[2m[36m(pid=12785)[0m     @     0x7f3203d2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12785)[0m     @     0x7f32034577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12785)[0m     @     0x7f320345a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12785)[0m     @     0x7f320345aad3 at::TensorIterator::for_each()
[2m[36m(pid=12775)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12775)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12775)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12775)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12775)[0m *** SIGSEGV (@0x0) received by PID 12775 (TID 0x7fd9a6baa700) from PID 0; stack trace: ***
[2m[36m(pid=12775)[0m     @     0x7fd9a6783390 (unknown)
[2m[36m(pid=12775)[0m     @     0x7faaa64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12775)[0m     @     0x7faaa5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12775)[0m     @     0x7faaa5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12775)[0m     @     0x7faaa5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=12901)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12901)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12901)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12901)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12901)[0m *** SIGSEGV (@0x0) received by PID 12901 (TID 0x7f61fe47e700) from PID 0; stack trace: ***
[2m[36m(pid=12901)[0m     @     0x7f61fe057390 (unknown)
[2m[36m(pid=12901)[0m     @     0x7f32fde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12901)[0m     @     0x7f32fd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12901)[0m     @     0x7f32fd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12901)[0m     @     0x7f32fd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=12853)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12853)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12853)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12853)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12853)[0m *** SIGSEGV (@0x0) received by PID 12853 (TID 0x7ff21a579700) from PID 0; stack trace: ***
[2m[36m(pid=12853)[0m     @     0x7ff21a152390 (unknown)
[2m[36m(pid=12853)[0m     @     0x7fc31a10df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12853)[0m     @     0x7fc3198387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12853)[0m     @     0x7fc31983b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12853)[0m     @     0x7fc31983bad3 at::TensorIterator::for_each()
[2m[36m(pid=12853)[0m     @     0x7fc31983bd91 at::TensorIterator::for_each()
[2m[36m(pid=12853)[0m     @     0x7fc31a11eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12862)[0m     @     0x7f08f2c3bad3 at::TensorIterator::for_each()
[2m[36m(pid=12862)[0m     @     0x7f08f2c3bd91 at::TensorIterator::for_each()
[2m[36m(pid=12862)[0m     @     0x7f08f351eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12862)[0m     @     0x7f08f3541c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12862)[0m     @     0x7f08f29e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12862)[0m     @     0x7f08f29e1388 at::native::copy_impl()
[2m[36m(pid=12862)[0m     @     0x7f08f29e35a4 at::native::copy_()
[2m[36m(pid=12862)[0m     @     0x7f08f30ce4f5 at::Tensor::copy_()
[2m[36m(pid=12862)[0m     @     0x7f08f55a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12862)[0m     @     0x7f08f30ce4f5 at::Tensor::copy_()
[2m[36m(pid=12862)[0m     @     0x7f08f917979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12862)[0m     @     0x558b3fbc3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12862)[0m     @     0x558b3fb1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12862)[0m     @     0x558b3fba9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12862)[0m     @     0x558b3fbaaa20 method_vectorcall
[2m[36m(pid=12862)[0m     @     0x558b3fb1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12862)[0m     @     0x558b3fba9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12862)[0m     @     0x558b3fbaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12862)[0m     @     0x558b3fb1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12862)[0m     @     0x558b3fba9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12862)[0m     @     0x558b3fbaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12862)[0m     @     0x558b3fb1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12862)[0m     @     0x558b3fba9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12862)[0m     @     0x558b3fbaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12862)[0m     @     0x558b3fb1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12862)[0m     @     0x558b3fba9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12862)[0m     @     0x558b3fbaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12862)[0m     @     0x558b3fb1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12920)[0m     @     0x7f0f6ee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=12920)[0m     @     0x7f0f6ee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=12920)[0m     @     0x7f0f6f762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12920)[0m     @     0x7f0f6f785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12920)[0m     @     0x7f0f6ec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12920)[0m     @     0x7f0f6ec25388 at::native::copy_impl()
[2m[36m(pid=12920)[0m     @     0x7f0f6ec275a4 at::native::copy_()
[2m[36m(pid=12920)[0m     @     0x7f0f6f3124f5 at::Tensor::copy_()
[2m[36m(pid=12920)[0m     @     0x7f0f717e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12920)[0m     @     0x7f0f6f3124f5 at::Tensor::copy_()
[2m[36m(pid=12920)[0m     @     0x7f0f753bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12920)[0m     @     0x56036a9f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12920)[0m     @     0x56036a94cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12920)[0m     @     0x56036a9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12920)[0m     @     0x56036a9d8a20 method_vectorcall
[2m[36m(pid=12920)[0m     @     0x56036a94cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12920)[0m     @     0x56036a9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12920)[0m     @     0x56036a9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12920)[0m     @     0x56036a94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12920)[0m     @     0x56036a9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12920)[0m     @     0x56036a9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12920)[0m     @     0x56036a94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12920)[0m     @     0x56036a9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12920)[0m     @     0x56036a9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12920)[0m     @     0x56036a94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12920)[0m     @     0x56036a9d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12920)[0m     @     0x56036a9d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12920)[0m     @     0x56036a94d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12917)[0m     @     0x7fb4cb71dad3 at::TensorIterator::for_each()
[2m[36m(pid=12917)[0m     @     0x7fb4cb71dd91 at::TensorIterator::for_each()
[2m[36m(pid=12917)[0m     @     0x7fb4cc000b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12917)[0m     @     0x7fb4cc023c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12917)[0m     @     0x7fb4cb4c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12917)[0m     @     0x7fb4cb4c3388 at::native::copy_impl()
[2m[36m(pid=12917)[0m     @     0x7fb4cb4c55a4 at::native::copy_()
[2m[36m(pid=12917)[0m     @     0x7fb4cbbb04f5 at::Tensor::copy_()
[2m[36m(pid=12917)[0m     @     0x7fb4ce0838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12917)[0m     @     0x7fb4cbbb04f5 at::Tensor::copy_()
[2m[36m(pid=12917)[0m     @     0x7fb4d1c5b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12917)[0m     @     0x561148bb4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12917)[0m     @     0x561148b0fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12917)[0m     @     0x561148b9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12917)[0m     @     0x561148b9ba20 method_vectorcall
[2m[36m(pid=12917)[0m     @     0x561148b0fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12917)[0m     @     0x561148b9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12917)[0m     @     0x561148b9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12917)[0m     @     0x561148b10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12917)[0m     @     0x561148b9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12917)[0m     @     0x561148b9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12917)[0m     @     0x561148b10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12917)[0m     @     0x561148b9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12917)[0m     @     0x561148b9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12917)[0m     @     0x561148b10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12917)[0m     @     0x561148b9abaf _PyEval_EvalCodeWithName
[2m[36m(pid=12917)[0m     @     0x561148b9b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12917)[0m     @     0x561148b10689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12875)[0m     @     0x7f67a5552d91 at::TensorIterator::for_each()
[2m[36m(pid=12875)[0m     @     0x7f67a5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12875)[0m     @     0x7f67a5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12875)[0m     @     0x7f67a52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12875)[0m     @     0x7f67a52f8388 at::native::copy_impl()
[2m[36m(pid=12875)[0m     @     0x7f67a52fa5a4 at::native::copy_()
[2m[36m(pid=12875)[0m     @     0x7f67a59e54f5 at::Tensor::copy_()
[2m[36m(pid=12875)[0m     @     0x7f67a7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12875)[0m     @     0x7f67a59e54f5 at::Tensor::copy_()
[2m[36m(pid=12875)[0m     @     0x7f67aba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12875)[0m     @     0x555b68fc6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12875)[0m     @     0x555b68f21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12875)[0m     @     0x555b68facbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12875)[0m     @     0x555b68fada20 method_vectorcall
[2m[36m(pid=12875)[0m     @     0x555b68f21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12875)[0m     @     0x555b68facbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12875)[0m     @     0x555b68fad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12875)[0m     @     0x555b68f22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12875)[0m     @     0x555b68facbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12875)[0m     @     0x555b68fad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12875)[0m     @     0x555b68f22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12875)[0m     @     0x555b68facbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12875)[0m     @     0x555b68fad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12875)[0m     @     0x555b68f22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12875)[0m     @     0x555b68facbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12875)[0m     @     0x555b68fad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12875)[0m     @     0x555b68f22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12846)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12846)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12846)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12846)[0m *** SIGSEGV (@0x0) received by PID 12846 (TID 0x7f1676248700) from PID 0; stack trace: ***
[2m[36m(pid=12846)[0m     @     0x7f1675e21390 (unknown)
[2m[36m(pid=12846)[0m     @     0x7ee775c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12846)[0m     @     0x7ee7753387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12846)[0m     @     0x7ee77533b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12846)[0m     @     0x7ee77533bad3 at::TensorIterator::for_each()
[2m[36m(pid=12846)[0m     @     0x7ee77533bd91 at::TensorIterator::for_each()
[2m[36m(pid=12792)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12792)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12792)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12792)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12792)[0m *** SIGSEGV (@0x0) received by PID 12792 (TID 0x7f379d68f700) from PID 0; stack trace: ***
[2m[36m(pid=12792)[0m     @     0x7f379d268390 (unknown)
[2m[36m(pid=12792)[0m     @     0x7f089d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12792)[0m     @     0x7f089c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12792)[0m     @     0x7f089c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12792)[0m     @     0x7f089c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=12792)[0m     @     0x7f089c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=12792)[0m     @     0x7f089d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12782)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12782)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12782)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12782)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12782)[0m *** SIGSEGV (@0x0) received by PID 12782 (TID 0x7f4a8abcb700) from PID 0; stack trace: ***
[2m[36m(pid=12782)[0m     @     0x7f4a8a7a4390 (unknown)
[2m[36m(pid=12782)[0m     @     0x7f1b8a729f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12782)[0m     @     0x7f1b89e547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12782)[0m     @     0x7f1b89e578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12782)[0m     @     0x7f1b89e57ad3 at::TensorIterator::for_each()
[2m[36m(pid=12782)[0m     @     0x7f1b89e57d91 at::TensorIterator::for_each()
[2m[36m(pid=12782)[0m     @     0x7f1b8a73ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12786)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12786)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12786)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12786)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12786)[0m *** SIGSEGV (@0x0) received by PID 12786 (TID 0x7f0169f12700) from PID 0; stack trace: ***
[2m[36m(pid=12786)[0m     @     0x7f0169aeb390 (unknown)
[2m[36m(pid=12786)[0m     @     0x7ed2697f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12786)[0m     @     0x7ed268f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12786)[0m     @     0x7ed268f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12786)[0m     @     0x7ed268f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=12786)[0m     @     0x7ed268f27d91 at::TensorIterator::for_each()
[2m[36m(pid=12786)[0m     @     0x7ed26980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12786)[0m     @     0x7ed26982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12807)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12807)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12807)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12807)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12807)[0m *** SIGSEGV (@0x0) received by PID 12807 (TID 0x7f5223775700) from PID 0; stack trace: ***
[2m[36m(pid=12807)[0m     @     0x7f522334e390 (unknown)
[2m[36m(pid=12801)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12801)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12801)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12801)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12801)[0m *** SIGSEGV (@0x0) received by PID 12801 (TID 0x7f03df07d700) from PID 0; stack trace: ***
[2m[36m(pid=12801)[0m     @     0x7f03dec56390 (unknown)
[2m[36m(pid=12801)[0m     @     0x7ed4dead1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12801)[0m     @     0x7ed4de1fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12801)[0m     @     0x7ed4de1ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12801)[0m     @     0x7ed4de1ffad3 at::TensorIterator::for_each()
[2m[36m(pid=12801)[0m     @     0x7ed4de1ffd91 at::TensorIterator::for_each()
[2m[36m(pid=12801)[0m     @     0x7ed4deae2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12801)[0m     @     0x7ed4deb05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12861)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12861)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12861)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12861)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12861)[0m *** SIGSEGV (@0x0) received by PID 12861 (TID 0x7f3155769700) from PID 0; stack trace: ***
[2m[36m(pid=12861)[0m     @     0x7f3155342390 (unknown)
[2m[36m(pid=12861)[0m     @     0x7f02552b7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12861)[0m     @     0x7f02549e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12861)[0m     @     0x7f02549e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12861)[0m     @     0x7f02549e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=12861)[0m     @     0x7f02549e5d91 at::TensorIterator::for_each()
[2m[36m(pid=12861)[0m     @     0x7f02552c8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12861)[0m     @     0x7f02552ebc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12904)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12904)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12904)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12904)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12904)[0m *** SIGSEGV (@0x0) received by PID 12904 (TID 0x7fd2dcec2700) from PID 0; stack trace: ***
[2m[36m(pid=12904)[0m     @     0x7fd2dca9b390 (unknown)
[2m[36m(pid=12878)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12878)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12878)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12878)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12878)[0m *** SIGSEGV (@0x0) received by PID 12878 (TID 0x7efe4f6e0700) from PID 0; stack trace: ***
[2m[36m(pid=12878)[0m     @     0x7efe4f2b9390 (unknown)
[2m[36m(pid=12878)[0m     @     0x7ecf4f229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12878)[0m     @     0x7ecf4e9547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12847)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12847)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12847)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12847)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12847)[0m *** SIGSEGV (@0x0) received by PID 12847 (TID 0x7f5d1c792700) from PID 0; stack trace: ***
[2m[36m(pid=12847)[0m     @     0x7f5d1c36b390 (unknown)
[2m[36m(pid=12847)[0m     @     0x7f2e1c2def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12847)[0m     @     0x7f2e1ba097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12847)[0m     @     0x7f2e1ba0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12787)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12787)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12787)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12787)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12787)[0m *** SIGSEGV (@0x0) received by PID 12787 (TID 0x7f5e3c321700) from PID 0; stack trace: ***
[2m[36m(pid=12787)[0m     @     0x7f5e3befa390 (unknown)
[2m[36m(pid=12787)[0m     @     0x7f2f3bd2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12888)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12888)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12888)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12888)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12888)[0m *** SIGSEGV (@0x0) received by PID 12888 (TID 0x7f6cdb0b7700) from PID 0; stack trace: ***
[2m[36m(pid=12888)[0m     @     0x7f6cdac90390 (unknown)
[2m[36m(pid=12888)[0m     @     0x7f3ddaa21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12888)[0m     @     0x7f3dda14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12789)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12789)[0m *** SIGSEGV (@0x0) received by PID 12789 (TID 0x7fe110783700) from PID 0; stack trace: ***
[2m[36m(pid=12789)[0m     @     0x7fe11035c390 (unknown)
[2m[36m(pid=12789)[0m     @     0x7fb2102def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12789)[0m     @     0x7fb20fa097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12789)[0m     @     0x7fb20fa0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12789)[0m     @     0x7fb20fa0cad3 at::TensorIterator::for_each()
[2m[36m(pid=12789)[0m     @     0x7fb20fa0cd91 at::TensorIterator::for_each()
[2m[36m(pid=12789)[0m     @     0x7fb2102efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12805)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12805)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12805)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12805)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12805)[0m *** SIGSEGV (@0x0) received by PID 12805 (TID 0x7f022696d700) from PID 0; stack trace: ***
[2m[36m(pid=12805)[0m     @     0x7f0226546390 (unknown)
[2m[36m(pid=12805)[0m     @     0x7ed3264f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12805)[0m     @     0x7ed325c227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12805)[0m     @     0x7ed325c258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12854)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12854)[0m *** SIGSEGV (@0x0) received by PID 12854 (TID 0x7f56f992e700) from PID 0; stack trace: ***
[2m[36m(pid=12854)[0m     @     0x7f56f9507390 (unknown)
[2m[36m(pid=12854)[0m     @     0x7f27f94a3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12854)[0m     @     0x7f27f8bce7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12854)[0m     @     0x7f27f8bd18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12854)[0m     @     0x7f27f8bd1ad3 at::TensorIterator::for_each()
[2m[36m(pid=12880)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12880)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12880)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12880)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12880)[0m *** SIGSEGV (@0x0) received by PID 12880 (TID 0x7f1945a31700) from PID 0; stack trace: ***
[2m[36m(pid=12880)[0m     @     0x7f194560a390 (unknown)
[2m[36m(pid=12880)[0m     @     0x7eea454e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12880)[0m     @     0x7eea44c0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12880)[0m     @     0x7eea44c118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12790)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12790)[0m *** SIGSEGV (@0x0) received by PID 12790 (TID 0x7fabf0ce6700) from PID 0; stack trace: ***
[2m[36m(pid=12790)[0m     @     0x7fabf08bf390 (unknown)
[2m[36m(pid=12790)[0m     @     0x7f7cf0774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12790)[0m     @     0x7f7cefe9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12790)[0m     @     0x7f7cefea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12790)[0m     @     0x7f7cefea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=12790)[0m     @     0x7f7cefea2d91 at::TensorIterator::for_each()
[2m[36m(pid=12790)[0m     @     0x7f7cf0785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12780)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12780)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12780)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12780)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12780)[0m *** SIGSEGV (@0x0) received by PID 12780 (TID 0x7f18b5f73700) from PID 0; stack trace: ***
[2m[36m(pid=12780)[0m     @     0x7f18b5b4c390 (unknown)
[2m[36m(pid=12780)[0m     @     0x7ee9b5a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12780)[0m     @     0x7ee9b51357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12780)[0m     @     0x7ee9b51388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12780)[0m     @     0x7ee9b5138ad3 at::TensorIterator::for_each()
[2m[36m(pid=12796)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12796)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12796)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12796)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12796)[0m *** SIGSEGV (@0x0) received by PID 12796 (TID 0x7fc877960700) from PID 0; stack trace: ***
[2m[36m(pid=12796)[0m     @     0x7fc877539390 (unknown)
[2m[36m(pid=12796)[0m     @     0x7f99774cff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12796)[0m     @     0x7f9976bfa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12873)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12873)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12873)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12873)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12873)[0m *** SIGSEGV (@0x0) received by PID 12873 (TID 0x7f8025744700) from PID 0; stack trace: ***
[2m[36m(pid=12873)[0m     @     0x7f802531d390 (unknown)
[2m[36m(pid=12873)[0m     @     0x7f512528af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12873)[0m     @     0x7f51249b57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12873)[0m     @     0x7f51249b88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12799)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12799)[0m *** SIGSEGV (@0x0) received by PID 12799 (TID 0x7f1ef678a700) from PID 0; stack trace: ***
[2m[36m(pid=12799)[0m     @     0x7f1ef6363390 (unknown)
[2m[36m(pid=12799)[0m     @     0x7eeff630bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12799)[0m     @     0x7eeff5a367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12799)[0m     @     0x7eeff5a398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12799)[0m     @     0x7eeff5a39ad3 at::TensorIterator::for_each()
[2m[36m(pid=12799)[0m     @     0x7eeff5a39d91 at::TensorIterator::for_each()
[2m[36m(pid=12799)[0m     @     0x7eeff631cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12864)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12864)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12864)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12864)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12864)[0m *** SIGSEGV (@0x0) received by PID 12864 (TID 0x7f979ce32700) from PID 0; stack trace: ***
[2m[36m(pid=12864)[0m     @     0x7f979ca0b390 (unknown)
[2m[36m(pid=12864)[0m     @     0x7f689c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12864)[0m     @     0x7f689be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12864)[0m     @     0x7f689bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12864)[0m     @     0x7f689bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=12808)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12808)[0m *** SIGSEGV (@0x0) received by PID 12808 (TID 0x7f060c6e3700) from PID 0; stack trace: ***
[2m[36m(pid=12808)[0m     @     0x7f060c2bc390 (unknown)
[2m[36m(pid=12808)[0m     @     0x7ed70bf2ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12808)[0m     @     0x7ed70b65a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12808)[0m     @     0x7ed70b65d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12808)[0m     @     0x7ed70b65dad3 at::TensorIterator::for_each()
[2m[36m(pid=12808)[0m     @     0x7ed70b65dd91 at::TensorIterator::for_each()
[2m[36m(pid=12808)[0m     @     0x7ed70bf40b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12808)[0m     @     0x7ed70bf63c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12844)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12844)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12844)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12844)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12844)[0m *** SIGSEGV (@0x0) received by PID 12844 (TID 0x7fa07ce98700) from PID 0; stack trace: ***
[2m[36m(pid=12844)[0m     @     0x7fa07ca71390 (unknown)
[2m[36m(pid=12844)[0m     @     0x7f717c774f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12844)[0m     @     0x7f717be9f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12844)[0m     @     0x7f717bea28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12803)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12803)[0m *** SIGSEGV (@0x0) received by PID 12803 (TID 0x7f2d50bab700) from PID 0; stack trace: ***
[2m[36m(pid=12803)[0m     @     0x7f2d50784390 (unknown)
[2m[36m(pid=12803)[0m     @     0x7efe5071ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12803)[0m     @     0x7efe4fe4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12803)[0m     @     0x7efe4fe4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12803)[0m     @     0x7efe4fe4dad3 at::TensorIterator::for_each()
[2m[36m(pid=12803)[0m     @     0x7efe4fe4dd91 at::TensorIterator::for_each()
[2m[36m(pid=12803)[0m     @     0x7efe50730b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12803)[0m     @     0x7efe50753c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12803)[0m     @     0x7efe4fbf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12803)[0m     @     0x7efe4fbf3388 at::native::copy_impl()
[2m[36m(pid=12794)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12794)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12794)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12794)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12794)[0m *** SIGSEGV (@0x0) received by PID 12794 (TID 0x7f5ced729700) from PID 0; stack trace: ***
[2m[36m(pid=12794)[0m     @     0x7f5ced302390 (unknown)
[2m[36m(pid=12797)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12797)[0m *** SIGSEGV (@0x0) received by PID 12797 (TID 0x7ff81f581700) from PID 0; stack trace: ***
[2m[36m(pid=12797)[0m     @     0x7ff81f15a390 (unknown)
[2m[36m(pid=12797)[0m     @     0x7fc91f0f7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12797)[0m     @     0x7fc91e8227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12797)[0m     @     0x7fc91e8258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12797)[0m     @     0x7fc91e825ad3 at::TensorIterator::for_each()
[2m[36m(pid=12797)[0m     @     0x7fc91e825d91 at::TensorIterator::for_each()
[2m[36m(pid=12797)[0m     @     0x7fc91f108b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12797)[0m     @     0x7fc91f12bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12797)[0m     @     0x7fc91e5cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12797)[0m     @     0x7fc91e5cb388 at::native::copy_impl()
[2m[36m(pid=12832)[0m     @     0x7f561d131390 (unknown)
[2m[36m(pid=12832)[0m     @     0x7f271d0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12832)[0m     @     0x7f271c7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12832)[0m     @     0x7f271c7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12832)[0m     @     0x7f271c7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=12832)[0m     @     0x7f271c7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=12832)[0m     @     0x7f271d0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12832)[0m     @     0x7f271d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12832)[0m     @     0x7f271c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12832)[0m     @     0x7f271c589388 at::native::copy_impl()
[2m[36m(pid=12832)[0m     @     0x7f271c58b5a4 at::native::copy_()
[2m[36m(pid=12869)[0m     @     0x7f0539138d91 at::TensorIterator::for_each()
[2m[36m(pid=12869)[0m     @     0x7f0539a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12869)[0m     @     0x7f0539a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12869)[0m     @     0x7f0538ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12869)[0m     @     0x7f0538ede388 at::native::copy_impl()
[2m[36m(pid=12869)[0m     @     0x7f0538ee05a4 at::native::copy_()
[2m[36m(pid=12869)[0m     @     0x7f05395cb4f5 at::Tensor::copy_()
[2m[36m(pid=12869)[0m     @     0x7f053ba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12869)[0m     @     0x7f05395cb4f5 at::Tensor::copy_()
[2m[36m(pid=12869)[0m     @     0x7f053f67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12869)[0m     @     0x55934fc5efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12869)[0m     @     0x55934fbb9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12869)[0m     @     0x55934fc44baf _PyEval_EvalCodeWithName
[2m[36m(pid=12869)[0m     @     0x55934fc45a20 method_vectorcall
[2m[36m(pid=12869)[0m     @     0x55934fbb9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12869)[0m     @     0x55934fc44baf _PyEval_EvalCodeWithName
[2m[36m(pid=12869)[0m     @     0x55934fc45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12869)[0m     @     0x55934fbba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12869)[0m     @     0x55934fc44baf _PyEval_EvalCodeWithName
[2m[36m(pid=12869)[0m     @     0x55934fc45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12869)[0m     @     0x55934fbba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12869)[0m     @     0x55934fc44baf _PyEval_EvalCodeWithName
[2m[36m(pid=12898)[0m     @     0x7f899ae4cd91 at::TensorIterator::for_each()
[2m[36m(pid=12898)[0m     @     0x7f899b72fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12898)[0m     @     0x7f899b752c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12898)[0m     @     0x7f899abf4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12898)[0m     @     0x7f899abf2388 at::native::copy_impl()
[2m[36m(pid=12898)[0m     @     0x7f899abf45a4 at::native::copy_()
[2m[36m(pid=12898)[0m     @     0x7f899b2df4f5 at::Tensor::copy_()
[2m[36m(pid=12898)[0m     @     0x7f899d7b28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12898)[0m     @     0x7f899b2df4f5 at::Tensor::copy_()
[2m[36m(pid=12898)[0m     @     0x7f89a138a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12898)[0m     @     0x55a4ebf85fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12898)[0m     @     0x55a4ebee0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12898)[0m     @     0x55a4ebf6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12898)[0m     @     0x55a4ebf6ca20 method_vectorcall
[2m[36m(pid=12898)[0m     @     0x55a4ebee0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12898)[0m     @     0x55a4ebf6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12898)[0m     @     0x55a4ebf6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12898)[0m     @     0x55a4ebee1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12898)[0m     @     0x55a4ebf6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12898)[0m     @     0x55a4ebf6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12898)[0m     @     0x55a4ebee1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12898)[0m     @     0x55a4ebf6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12898)[0m     @     0x55a4ebf6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12898)[0m     @     0x55a4ebee1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12898)[0m     @     0x55a4ebf6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12898)[0m     @     0x55a4ebf6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12898)[0m     @     0x55a4ebee1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x7ff7217c0390 (unknown)
[2m[36m(pid=12830)[0m     @     0x7fc8216f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12830)[0m     @     0x7fc820e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12830)[0m     @     0x7fc820e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12830)[0m     @     0x7fc820e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=12830)[0m     @     0x7fc820e22d91 at::TensorIterator::for_each()
[2m[36m(pid=12830)[0m     @     0x7fc821705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12830)[0m     @     0x7fc821728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12830)[0m     @     0x7fc820bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12830)[0m     @     0x7fc820bc8388 at::native::copy_impl()
[2m[36m(pid=12830)[0m     @     0x7fc820bca5a4 at::native::copy_()
[2m[36m(pid=12845)[0m     @     0x7f475bbd9390 (unknown)
[2m[36m(pid=12845)[0m     @     0x7f185b9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12845)[0m     @     0x7f185b0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12845)[0m     @     0x7f185b0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12845)[0m     @     0x7f185b0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=12845)[0m     @     0x7f185b0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=12845)[0m     @     0x7f185b9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12845)[0m     @     0x7f185b9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12845)[0m     @     0x7f185ae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12845)[0m     @     0x7f185ae99388 at::native::copy_impl()
[2m[36m(pid=12925)[0m     @     0x7f427dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=12925)[0m     @     0x7f427e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12925)[0m     @     0x7f427e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12925)[0m     @     0x7f427d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12925)[0m     @     0x7f427d9cd388 at::native::copy_impl()
[2m[36m(pid=12925)[0m     @     0x7f427d9cf5a4 at::native::copy_()
[2m[36m(pid=12925)[0m     @     0x7f427e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=12925)[0m     @     0x7f428058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12925)[0m     @     0x7f427e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=12925)[0m     @     0x7f428416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12925)[0m     @     0x55b904895fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12925)[0m     @     0x55b9047f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12925)[0m     @     0x55b90487bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12925)[0m     @     0x55b90487ca20 method_vectorcall
[2m[36m(pid=12925)[0m     @     0x55b9047f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12925)[0m     @     0x55b90487bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12925)[0m     @     0x55b90487c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12925)[0m     @     0x55b9047f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12925)[0m     @     0x55b90487bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12925)[0m     @     0x55b90487c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12925)[0m     @     0x55b9047f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12925)[0m     @     0x55b90487bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12925)[0m     @     0x55b90487c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12925)[0m     @     0x55b9047f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12925)[0m     @     0x55b90487bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12925)[0m     @     0x55b90487c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12925)[0m     @     0x55b9047f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12863)[0m     @     0x7ee8933aea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12863)[0m     @     0x7ee8933ac388 at::native::copy_impl()
[2m[36m(pid=12863)[0m     @     0x7ee8933ae5a4 at::native::copy_()
[2m[36m(pid=12863)[0m     @     0x7ee893a994f5 at::Tensor::copy_()
[2m[36m(pid=12863)[0m     @     0x7ee895f6c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12863)[0m     @     0x7ee893a994f5 at::Tensor::copy_()
[2m[36m(pid=12863)[0m     @     0x7ee899b4479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12863)[0m     @     0x563022cf3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12863)[0m     @     0x563022c4eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12863)[0m     @     0x563022cd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12863)[0m     @     0x563022cdaa20 method_vectorcall
[2m[36m(pid=12863)[0m     @     0x563022c4ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12863)[0m     @     0x563022cd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12863)[0m     @     0x563022cda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12863)[0m     @     0x563022c4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12863)[0m     @     0x563022cd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12863)[0m     @     0x563022cda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12863)[0m     @     0x563022c4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12863)[0m     @     0x563022cd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12863)[0m     @     0x563022cda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12863)[0m     @     0x563022c4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12863)[0m     @     0x563022cd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=12863)[0m     @     0x563022cda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12863)[0m     @     0x563022c4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12923)[0m     @     0x7f6517223d91 at::TensorIterator::for_each()
[2m[36m(pid=12923)[0m     @     0x7f6517b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12923)[0m     @     0x7f6517b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12923)[0m     @     0x7f6516fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12923)[0m     @     0x7f6516fc9388 at::native::copy_impl()
[2m[36m(pid=12923)[0m     @     0x7f6516fcb5a4 at::native::copy_()
[2m[36m(pid=12923)[0m     @     0x7f65176b64f5 at::Tensor::copy_()
[2m[36m(pid=12923)[0m     @     0x7f6519b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12923)[0m     @     0x7f65176b64f5 at::Tensor::copy_()
[2m[36m(pid=12923)[0m     @     0x7f651d76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12923)[0m     @     0x5652c2080fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12923)[0m     @     0x5652c1fdbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12923)[0m     @     0x5652c2066baf _PyEval_EvalCodeWithName
[2m[36m(pid=12923)[0m     @     0x5652c2067a20 method_vectorcall
[2m[36m(pid=12923)[0m     @     0x5652c1fdbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12923)[0m     @     0x5652c2066baf _PyEval_EvalCodeWithName
[2m[36m(pid=12923)[0m     @     0x5652c2067643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12923)[0m     @     0x5652c1fdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12923)[0m     @     0x5652c2066baf _PyEval_EvalCodeWithName
[2m[36m(pid=12923)[0m     @     0x5652c2067643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12923)[0m     @     0x5652c1fdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12923)[0m     @     0x5652c2066baf _PyEval_EvalCodeWithName
[2m[36m(pid=12923)[0m     @     0x5652c2067643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12923)[0m     @     0x5652c1fdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12923)[0m     @     0x5652c2066baf _PyEval_EvalCodeWithName
[2m[36m(pid=12923)[0m     @     0x5652c2067643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12923)[0m     @     0x5652c1fdc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12773)[0m     @     0x7fc9a2887390 (unknown)
[2m[36m(pid=12773)[0m     @     0x7f9aa2817f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12773)[0m     @     0x7f9aa1f427db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12773)[0m     @     0x7f9aa1f458f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12773)[0m     @     0x7f9aa1f45ad3 at::TensorIterator::for_each()
[2m[36m(pid=12773)[0m     @     0x7f9aa1f45d91 at::TensorIterator::for_each()
[2m[36m(pid=12773)[0m     @     0x7f9aa2828b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12773)[0m     @     0x7f9aa284bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12773)[0m     @     0x7f9aa1ceda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12773)[0m     @     0x7f9aa1ceb388 at::native::copy_impl()
[2m[36m(pid=12773)[0m     @     0x7f9aa1ced5a4 at::native::copy_()
[2m[36m(pid=12788)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12788)[0m *** SIGSEGV (@0x0) received by PID 12788 (TID 0x7f9de4a56700) from PID 0; stack trace: ***
[2m[36m(pid=12788)[0m     @     0x7f9de462f390 (unknown)
[2m[36m(pid=12788)[0m     @     0x7f6ee43e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12788)[0m     @     0x7f6ee3b0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12788)[0m     @     0x7f6ee3b118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12788)[0m     @     0x7f6ee3b11ad3 at::TensorIterator::for_each()
[2m[36m(pid=12788)[0m     @     0x7f6ee3b11d91 at::TensorIterator::for_each()
[2m[36m(pid=12788)[0m     @     0x7f6ee43f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12788)[0m     @     0x7f6ee4417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12788)[0m     @     0x7f6ee38b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12788)[0m     @     0x7f6ee38b7388 at::native::copy_impl()
[2m[36m(pid=12781)[0m     @     0x7fa3b1bb8390 (unknown)
[2m[36m(pid=12781)[0m     @     0x7f74b1b5ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12781)[0m     @     0x7f74b128a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12781)[0m     @     0x7f74b128d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12781)[0m     @     0x7f74b128dad3 at::TensorIterator::for_each()
[2m[36m(pid=12781)[0m     @     0x7f74b128dd91 at::TensorIterator::for_each()
[2m[36m(pid=12781)[0m     @     0x7f74b1b70b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12781)[0m     @     0x7f74b1b93c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12781)[0m     @     0x7f74b1035a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12781)[0m     @     0x7f74b1033388 at::native::copy_impl()
[2m[36m(pid=12781)[0m     @     0x7f74b10355a4 at::native::copy_()
[2m[36m(pid=12870)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=12870)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=12870)[0m *** Aborted at 1604571545 (unix time) try "date -d @1604571545" if you are using GNU date ***
[2m[36m(pid=12870)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12870)[0m *** SIGSEGV (@0x0) received by PID 12870 (TID 0x7f45d432c700) from PID 0; stack trace: ***
[2m[36m(pid=12870)[0m     @     0x7f45d3f05390 (unknown)
[2m[36m(pid=12870)[0m     @     0x7f16d3e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12870)[0m     @     0x7f16d35367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12870)[0m     @     0x7f16d35398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12870)[0m     @     0x7f16d3539ad3 at::TensorIterator::for_each()
[2m[36m(pid=12870)[0m     @     0x7f16d3539d91 at::TensorIterator::for_each()
[2m[36m(pid=12870)[0m     @     0x7f16d3e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12870)[0m     @     0x7f16d3e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12870)[0m     @     0x7f16d32e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12795)[0m     @     0x7f05a4a30f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12795)[0m     @     0x7f05a415b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12795)[0m     @     0x7f05a415e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12795)[0m     @     0x7f05a415ead3 at::TensorIterator::for_each()
[2m[36m(pid=12795)[0m     @     0x7f05a415ed91 at::TensorIterator::for_each()
[2m[36m(pid=12795)[0m     @     0x7f05a4a41b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12795)[0m     @     0x7f05a4a64c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12795)[0m     @     0x7f05a3f06a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12795)[0m     @     0x7f05a3f04388 at::native::copy_impl()
[2m[36m(pid=12795)[0m     @     0x7f05a3f065a4 at::native::copy_()
[2m[36m(pid=12849)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12849)[0m *** SIGSEGV (@0x0) received by PID 12849 (TID 0x7fe09be6f700) from PID 0; stack trace: ***
[2m[36m(pid=12849)[0m     @     0x7fe09ba48390 (unknown)
[2m[36m(pid=12849)[0m     @     0x7fb19b751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12849)[0m     @     0x7fb19ae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12849)[0m     @     0x7fb19ae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12849)[0m     @     0x7fb19ae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=12849)[0m     @     0x7fb19ae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=12849)[0m     @     0x7fb19b762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12849)[0m     @     0x7fb19b785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12849)[0m     @     0x7fb19ac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12849)[0m     @     0x7fb19ac25388 at::native::copy_impl()
[2m[36m(pid=12907)[0m     @     0x7f530187f390 (unknown)
[2m[36m(pid=12907)[0m     @     0x7f24017f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12907)[0m     @     0x7f2400f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12907)[0m     @     0x7f2400f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12907)[0m     @     0x7f2400f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=12907)[0m     @     0x7f2400f27d91 at::TensorIterator::for_each()
[2m[36m(pid=12907)[0m     @     0x7f240180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12907)[0m     @     0x7f240182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12907)[0m     @     0x7f2400ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12907)[0m     @     0x7f2400ccd388 at::native::copy_impl()
[2m[36m(pid=12907)[0m     @     0x7f2400ccf5a4 at::native::copy_()
[2m[36m(pid=12890)[0m     @     0x7fab345ac390 (unknown)
[2m[36m(pid=12890)[0m     @     0x7f7c34536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12890)[0m     @     0x7f7c33c617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12890)[0m     @     0x7f7c33c648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12890)[0m     @     0x7f7c33c64ad3 at::TensorIterator::for_each()
[2m[36m(pid=12890)[0m     @     0x7f7c33c64d91 at::TensorIterator::for_each()
[2m[36m(pid=12890)[0m     @     0x7f7c34547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12890)[0m     @     0x7f7c3456ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12890)[0m     @     0x7f7c33a0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12890)[0m     @     0x7f7c33a0a388 at::native::copy_impl()
[2m[36m(pid=12791)[0m     @     0x7f52ec4928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12791)[0m     @     0x7f52ec492ad3 at::TensorIterator::for_each()
[2m[36m(pid=12791)[0m     @     0x7f52ec492d91 at::TensorIterator::for_each()
[2m[36m(pid=12791)[0m     @     0x7f52ecd75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12791)[0m     @     0x7f52ecd98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12791)[0m     @     0x7f52ec23aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12791)[0m     @     0x7f52ec238388 at::native::copy_impl()
[2m[36m(pid=12791)[0m     @     0x7f52ec23a5a4 at::native::copy_()
[2m[36m(pid=12791)[0m     @     0x7f52ec9254f5 at::Tensor::copy_()
[2m[36m(pid=12791)[0m     @     0x7f52eedf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12776)[0m     @     0x7ee8ecf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12776)[0m     @     0x7ee8ecf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=12776)[0m     @     0x7ee8ecf27d91 at::TensorIterator::for_each()
[2m[36m(pid=12776)[0m     @     0x7ee8ed80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12776)[0m     @     0x7ee8ed82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12776)[0m     @     0x7ee8ecccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12776)[0m     @     0x7ee8ecccd388 at::native::copy_impl()
[2m[36m(pid=12838)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12838)[0m *** SIGSEGV (@0x0) received by PID 12838 (TID 0x7fd9efcb1700) from PID 0; stack trace: ***
[2m[36m(pid=12838)[0m     @     0x7fd9ef88a390 (unknown)
[2m[36m(pid=12838)[0m     @     0x7faaef83bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12838)[0m     @     0x7faaeef667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12872)[0m     @     0x7ef354d108f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12872)[0m     @     0x7ef354d10ad3 at::TensorIterator::for_each()
[2m[36m(pid=12872)[0m     @     0x7ef354d10d91 at::TensorIterator::for_each()
[2m[36m(pid=12872)[0m     @     0x7ef3555f3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12872)[0m     @     0x7ef355616c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12872)[0m     @     0x7ef354ab8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12872)[0m     @     0x7ef354ab6388 at::native::copy_impl()
[2m[36m(pid=12860)[0m     @     0x7f25641648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12860)[0m     @     0x7f2564164ad3 at::TensorIterator::for_each()
[2m[36m(pid=12860)[0m     @     0x7f2564164d91 at::TensorIterator::for_each()
[2m[36m(pid=12860)[0m     @     0x7f2564a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12860)[0m     @     0x7f2564a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12860)[0m     @     0x7f2563f0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12860)[0m     @     0x7f2563f0a388 at::native::copy_impl()
[2m[36m(pid=12884)[0m     @     0x7ed48983bd91 at::TensorIterator::for_each()
[2m[36m(pid=12884)[0m     @     0x7ed48a11eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12884)[0m     @     0x7ed48a141c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12884)[0m     @     0x7ed4895e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12884)[0m     @     0x7ed4895e1388 at::native::copy_impl()
[2m[36m(pid=12884)[0m     @     0x7ed4895e35a4 at::native::copy_()
[2m[36m(pid=12884)[0m     @     0x7ed489cce4f5 at::Tensor::copy_()
[2m[36m(pid=12884)[0m     @     0x7ed48c1a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12793)[0m     @     0x7f4a182438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12793)[0m     @     0x7f4a18243ad3 at::TensorIterator::for_each()
[2m[36m(pid=12793)[0m     @     0x7f4a18243d91 at::TensorIterator::for_each()
[2m[36m(pid=12793)[0m     @     0x7f4a18b26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12793)[0m     @     0x7f4a18b49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12793)[0m     @     0x7f4a17feba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12793)[0m     @     0x7f4a17fe9388 at::native::copy_impl()
[2m[36m(pid=12843)[0m     @     0x7f06ac80e388 at::native::copy_impl()
[2m[36m(pid=12843)[0m     @     0x7f06ac8105a4 at::native::copy_()
[2m[36m(pid=12843)[0m     @     0x7f06acefb4f5 at::Tensor::copy_()
[2m[36m(pid=12843)[0m     @     0x7f06af3ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12843)[0m     @     0x7f06acefb4f5 at::Tensor::copy_()
[2m[36m(pid=12843)[0m     @     0x7f06b2fa679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12843)[0m     @     0x55ffa260afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12843)[0m     @     0x55ffa2565b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12843)[0m     @     0x55ffa25f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12843)[0m     @     0x55ffa25f1a20 method_vectorcall
[2m[36m(pid=12843)[0m     @     0x55ffa2565bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12843)[0m     @     0x55ffa25f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12843)[0m     @     0x55ffa25f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12843)[0m     @     0x55ffa2566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12843)[0m     @     0x55ffa25f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12843)[0m     @     0x55ffa25f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12843)[0m     @     0x55ffa2566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12843)[0m     @     0x55ffa25f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12843)[0m     @     0x55ffa25f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12843)[0m     @     0x55ffa2566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12843)[0m     @     0x55ffa25f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12843)[0m     @     0x55ffa25f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12843)[0m     @     0x55ffa2566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12851)[0m     @     0x7f182b99fd91 at::TensorIterator::for_each()
[2m[36m(pid=12851)[0m     @     0x7f182c282b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12851)[0m     @     0x7f182c2a5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12851)[0m     @     0x7f182b747a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12851)[0m     @     0x7f182b745388 at::native::copy_impl()
[2m[36m(pid=12851)[0m     @     0x7f182b7475a4 at::native::copy_()
[2m[36m(pid=12851)[0m     @     0x7f182be324f5 at::Tensor::copy_()
[2m[36m(pid=12774)[0m     @     0x7f53f39cf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12774)[0m     @     0x7f53f39cfad3 at::TensorIterator::for_each()
[2m[36m(pid=12774)[0m     @     0x7f53f39cfd91 at::TensorIterator::for_each()
[2m[36m(pid=12774)[0m     @     0x7f53f42b2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12774)[0m     @     0x7f53f42d5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12774)[0m     @     0x7f53f3777a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12774)[0m     @     0x7f53f3775388 at::native::copy_impl()
[2m[36m(pid=12774)[0m     @     0x7f53f37775a4 at::native::copy_()
[2m[36m(pid=12882)[0m     @     0x7fa6df8095a4 at::native::copy_()
[2m[36m(pid=12882)[0m     @     0x7fa6dfef44f5 at::Tensor::copy_()
[2m[36m(pid=12882)[0m     @     0x7fa6e23c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12882)[0m     @     0x7fa6dfef44f5 at::Tensor::copy_()
[2m[36m(pid=12882)[0m     @     0x7fa6e5f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12882)[0m     @     0x55c154bd1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12882)[0m     @     0x55c154b2cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12882)[0m     @     0x55c154bb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12882)[0m     @     0x55c154bb8a20 method_vectorcall
[2m[36m(pid=12882)[0m     @     0x55c154b2cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12882)[0m     @     0x55c154bb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12882)[0m     @     0x55c154bb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12882)[0m     @     0x55c154b2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12882)[0m     @     0x55c154bb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12882)[0m     @     0x55c154bb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12882)[0m     @     0x55c154b2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12882)[0m     @     0x55c154bb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12882)[0m     @     0x55c154bb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12882)[0m     @     0x55c154b2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12882)[0m     @     0x55c154bb7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12882)[0m     @     0x55c154bb8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12882)[0m     @     0x55c154b2d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12881)[0m     @     0x7f4d501d8ad3 at::TensorIterator::for_each()
[2m[36m(pid=12881)[0m     @     0x7f4d501d8d91 at::TensorIterator::for_each()
[2m[36m(pid=12881)[0m     @     0x7f4d50abbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12881)[0m     @     0x7f4d50adec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12881)[0m     @     0x7f4d4ff80a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12881)[0m     @     0x7f4d4ff7e388 at::native::copy_impl()
[2m[36m(pid=12881)[0m     @     0x7f4d4ff805a4 at::native::copy_()
[2m[36m(pid=12881)[0m     @     0x7f4d5066b4f5 at::Tensor::copy_()
[2m[36m(pid=12905)[0m     @     0x7f38d3bdd4f5 at::Tensor::copy_()
[2m[36m(pid=12905)[0m     @     0x7f38d9c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12905)[0m     @     0x5616bd44bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12905)[0m     @     0x5616bd3a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12905)[0m     @     0x5616bd431baf _PyEval_EvalCodeWithName
[2m[36m(pid=12905)[0m     @     0x5616bd432a20 method_vectorcall
[2m[36m(pid=12905)[0m     @     0x5616bd3a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12905)[0m     @     0x5616bd431baf _PyEval_EvalCodeWithName
[2m[36m(pid=12905)[0m     @     0x5616bd432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12905)[0m     @     0x5616bd3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12905)[0m     @     0x5616bd431baf _PyEval_EvalCodeWithName
[2m[36m(pid=12905)[0m     @     0x5616bd432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12905)[0m     @     0x5616bd3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12905)[0m     @     0x5616bd431baf _PyEval_EvalCodeWithName
[2m[36m(pid=12905)[0m     @     0x5616bd432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12905)[0m     @     0x5616bd3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12905)[0m     @     0x5616bd431baf _PyEval_EvalCodeWithName
[2m[36m(pid=12905)[0m     @     0x5616bd432643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12905)[0m     @     0x5616bd3a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12891)[0m     @     0x7ede365fa5a4 at::native::copy_()
[2m[36m(pid=12891)[0m     @     0x7ede36ce54f5 at::Tensor::copy_()
[2m[36m(pid=12891)[0m     @     0x7ede391b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12891)[0m     @     0x7ede36ce54f5 at::Tensor::copy_()
[2m[36m(pid=12891)[0m     @     0x7ede3cd9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12891)[0m     @     0x55aa0a37ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12891)[0m     @     0x55aa0a2dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12891)[0m     @     0x55aa0a365baf _PyEval_EvalCodeWithName
[2m[36m(pid=12891)[0m     @     0x55aa0a366a20 method_vectorcall
[2m[36m(pid=12891)[0m     @     0x55aa0a2dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12891)[0m     @     0x55aa0a365baf _PyEval_EvalCodeWithName
[2m[36m(pid=12891)[0m     @     0x55aa0a366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12891)[0m     @     0x55aa0a2db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12891)[0m     @     0x55aa0a365baf _PyEval_EvalCodeWithName
[2m[36m(pid=12891)[0m     @     0x55aa0a366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12891)[0m     @     0x55aa0a2db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12891)[0m     @     0x55aa0a365baf _PyEval_EvalCodeWithName
[2m[36m(pid=12891)[0m     @     0x55aa0a366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12891)[0m     @     0x55aa0a2db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12891)[0m     @     0x55aa0a365baf _PyEval_EvalCodeWithName
[2m[36m(pid=12891)[0m     @     0x55aa0a366643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12891)[0m     @     0x55aa0a2db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12867)[0m     @     0x7f8bb19a7ad3 at::TensorIterator::for_each()
[2m[36m(pid=12867)[0m     @     0x7f8bb19a7d91 at::TensorIterator::for_each()
[2m[36m(pid=12867)[0m     @     0x7f8bb228ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12867)[0m     @     0x7f8bb22adc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12867)[0m     @     0x7f8bb174fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12867)[0m     @     0x7f8bb174d388 at::native::copy_impl()
[2m[36m(pid=12867)[0m     @     0x7f8bb174f5a4 at::native::copy_()
[2m[36m(pid=12778)[0m     @     0x7f2fe30f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12778)[0m     @     0x7f2fe30f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=12778)[0m     @     0x7f2fe30f3d91 at::TensorIterator::for_each()
[2m[36m(pid=12778)[0m     @     0x7f2fe39d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12778)[0m     @     0x7f2fe39f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12778)[0m     @     0x7f2fe2e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12778)[0m     @     0x7f2fe2e99388 at::native::copy_impl()
[2m[36m(pid=12778)[0m     @     0x7f2fe2e9b5a4 at::native::copy_()
[2m[36m(pid=12842)[0m     @     0x7f3521967ad3 at::TensorIterator::for_each()
[2m[36m(pid=12842)[0m     @     0x7f3521967d91 at::TensorIterator::for_each()
[2m[36m(pid=12842)[0m     @     0x7f352224ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12842)[0m     @     0x7f352226dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12842)[0m     @     0x7f352170fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12842)[0m     @     0x7f352170d388 at::native::copy_impl()
[2m[36m(pid=12842)[0m     @     0x7f352170f5a4 at::native::copy_()
[2m[36m(pid=12910)[0m     @     0x7f375a0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12910)[0m     @     0x7f3757bdd4f5 at::Tensor::copy_()
[2m[36m(pid=12910)[0m     @     0x7f375dc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12910)[0m     @     0x556f0a1fcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12910)[0m     @     0x556f0a157b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12910)[0m     @     0x556f0a1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12910)[0m     @     0x556f0a1e3a20 method_vectorcall
[2m[36m(pid=12910)[0m     @     0x556f0a157bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12910)[0m     @     0x556f0a1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12910)[0m     @     0x556f0a1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12910)[0m     @     0x556f0a158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12910)[0m     @     0x556f0a1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12910)[0m     @     0x556f0a1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12910)[0m     @     0x556f0a158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12910)[0m     @     0x556f0a1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12910)[0m     @     0x556f0a1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12910)[0m     @     0x556f0a158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12910)[0m     @     0x556f0a1e2baf _PyEval_EvalCodeWithName
[2m[36m(pid=12910)[0m     @     0x556f0a1e3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12910)[0m     @     0x556f0a158689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12783)[0m     @     0x7eef2be6cd91 at::TensorIterator::for_each()
[2m[36m(pid=12783)[0m     @     0x7eef2c74fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12783)[0m     @     0x7eef2c772c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12783)[0m     @     0x7eef2bc14a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12783)[0m     @     0x7eef2bc12388 at::native::copy_impl()
[2m[36m(pid=12783)[0m     @     0x7eef2bc145a4 at::native::copy_()
[2m[36m(pid=12783)[0m     @     0x7eef2c2ff4f5 at::Tensor::copy_()
[2m[36m(pid=12783)[0m     @     0x7eef2e7d28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12783)[0m     @     0x7eef2c2ff4f5 at::Tensor::copy_()
[2m[36m(pid=12783)[0m     @     0x7eef321a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12783)[0m     @     0x558343027fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12783)[0m     @     0x558342f82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12783)[0m     @     0x55834300dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12783)[0m     @     0x55834300ea20 method_vectorcall
[2m[36m(pid=12783)[0m     @     0x558342f82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12783)[0m     @     0x55834300dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12783)[0m     @     0x55834300e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12783)[0m     @     0x558342f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12783)[0m     @     0x55834300dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12783)[0m     @     0x55834300e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12783)[0m     @     0x558342f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12783)[0m     @     0x55834300dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12783)[0m     @     0x55834300e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12783)[0m     @     0x558342f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12783)[0m     @     0x55834300dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12783)[0m     @     0x55834300e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12783)[0m     @     0x558342f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12866)[0m     @     0x7f3e37a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12866)[0m     @     0x7f3e355cb4f5 at::Tensor::copy_()
[2m[36m(pid=12866)[0m     @     0x7f3e3b67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12866)[0m     @     0x561a7fe59fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12866)[0m     @     0x561a7fdb4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12866)[0m     @     0x561a7fe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12866)[0m     @     0x561a7fe40a20 method_vectorcall
[2m[36m(pid=12866)[0m     @     0x561a7fdb4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12866)[0m     @     0x561a7fe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12866)[0m     @     0x561a7fe40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12866)[0m     @     0x561a7fdb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12866)[0m     @     0x561a7fe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12866)[0m     @     0x561a7fe40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12866)[0m     @     0x561a7fdb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12866)[0m     @     0x561a7fe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12866)[0m     @     0x561a7fe40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12866)[0m     @     0x561a7fdb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12866)[0m     @     0x561a7fe3fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12866)[0m     @     0x561a7fe40643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12866)[0m     @     0x561a7fdb5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12779)[0m     @     0x7fb68b02ead3 at::TensorIterator::for_each()
[2m[36m(pid=12779)[0m     @     0x7fb68b02ed91 at::TensorIterator::for_each()
[2m[36m(pid=12779)[0m     @     0x7fb68b911b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12779)[0m     @     0x7fb68b934c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12779)[0m     @     0x7fb68add6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12779)[0m     @     0x7fb68add4388 at::native::copy_impl()
[2m[36m(pid=12779)[0m     @     0x7fb68add65a4 at::native::copy_()
[2m[36m(pid=12779)[0m     @     0x7fb68b4c14f5 at::Tensor::copy_()
[2m[36m(pid=12779)[0m     @     0x7fb68d9948de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12895)[0m     @     0x7f4282b1bad3 at::TensorIterator::for_each()
[2m[36m(pid=12895)[0m     @     0x7f4282b1bd91 at::TensorIterator::for_each()
[2m[36m(pid=12895)[0m     @     0x7f42833feb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12895)[0m     @     0x7f4283421c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12895)[0m     @     0x7f42828c3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12895)[0m     @     0x7f42828c1388 at::native::copy_impl()
[2m[36m(pid=12895)[0m     @     0x7f42828c35a4 at::native::copy_()
[2m[36m(pid=12839)[0m     @     0x7efc069547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12839)[0m     @     0x7efc069578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12839)[0m     @     0x7efc06957ad3 at::TensorIterator::for_each()
[2m[36m(pid=12839)[0m     @     0x7efc06957d91 at::TensorIterator::for_each()
[2m[36m(pid=12839)[0m     @     0x7efc0723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12839)[0m     @     0x7efc0725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12839)[0m     @     0x7efc066ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12839)[0m     @     0x7efc066fd388 at::native::copy_impl()
[2m[36m(pid=12829)[0m PC: @                0x0 (unknown)
[2m[36m(pid=12829)[0m *** SIGSEGV (@0x0) received by PID 12829 (TID 0x7fdf681ba700) from PID 0; stack trace: ***
[2m[36m(pid=12829)[0m     @     0x7fdf67d93390 (unknown)
[2m[36m(pid=12829)[0m     @     0x7fb067d1ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12829)[0m     @     0x7fb0674497db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12829)[0m     @     0x7fb06744c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12829)[0m     @     0x7fb06744cad3 at::TensorIterator::for_each()
[2m[36m(pid=12829)[0m     @     0x7fb06744cd91 at::TensorIterator::for_each()
[2m[36m(pid=12829)[0m     @     0x7fb067d2fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12829)[0m     @     0x7fb067d52c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12848)[0m     @     0x7fc6e7a84390 (unknown)
[2m[36m(pid=12848)[0m     @     0x7f97e7a08f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12848)[0m     @     0x7f97e71337db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12848)[0m     @     0x7f97e71368f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12848)[0m     @     0x7f97e7136ad3 at::TensorIterator::for_each()
[2m[36m(pid=12848)[0m     @     0x7f97e7136d91 at::TensorIterator::for_each()
[2m[36m(pid=12848)[0m     @     0x7f97e7a19b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12848)[0m     @     0x7f97e7a3cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12802)[0m     @     0x7f269b61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12802)[0m     @     0x7f269ad4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12802)[0m     @     0x7f269ad4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12802)[0m     @     0x7f269ad4dad3 at::TensorIterator::for_each()
[2m[36m(pid=12802)[0m     @     0x7f269ad4dd91 at::TensorIterator::for_each()
[2m[36m(pid=12802)[0m     @     0x7f269b630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12802)[0m     @     0x7f269b653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12802)[0m     @     0x7f269aaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12802)[0m     @     0x7f269aaf3388 at::native::copy_impl()
[2m[36m(pid=12855)[0m     @     0x7fb2c5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=12855)[0m     @     0x7fb2c5552d91 at::TensorIterator::for_each()
[2m[36m(pid=12855)[0m     @     0x7fb2c5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12855)[0m     @     0x7fb2c5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12855)[0m     @     0x7fb2c52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12855)[0m     @     0x7fb2c52f8388 at::native::copy_impl()
[2m[36m(pid=12855)[0m     @     0x7fb2c52fa5a4 at::native::copy_()
[2m[36m(pid=12852)[0m     @     0x7f5e28cedad3 at::TensorIterator::for_each()
[2m[36m(pid=12852)[0m     @     0x7f5e28cedd91 at::TensorIterator::for_each()
[2m[36m(pid=12852)[0m     @     0x7f5e295d0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12852)[0m     @     0x7f5e295f3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12852)[0m     @     0x7f5e28a95a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12852)[0m     @     0x7f5e28a93388 at::native::copy_impl()
[2m[36m(pid=12785)[0m     @     0x7f320345ad91 at::TensorIterator::for_each()
[2m[36m(pid=12785)[0m     @     0x7f3203d3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12785)[0m     @     0x7f3203d60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12785)[0m     @     0x7f3203202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12785)[0m     @     0x7f3203200388 at::native::copy_impl()
[2m[36m(pid=12785)[0m     @     0x7f32032025a4 at::native::copy_()
[2m[36m(pid=12775)[0m     @     0x7faaa5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=12775)[0m     @     0x7faaa650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12775)[0m     @     0x7faaa652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12775)[0m     @     0x7faaa59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12775)[0m     @     0x7faaa59cd388 at::native::copy_impl()
[2m[36m(pid=12775)[0m     @     0x7faaa59cf5a4 at::native::copy_()
[2m[36m(pid=12901)[0m     @     0x7f32fd552d91 at::TensorIterator::for_each()
[2m[36m(pid=12901)[0m     @     0x7f32fde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12901)[0m     @     0x7f32fde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12901)[0m     @     0x7f32fd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12901)[0m     @     0x7f32fd2f8388 at::native::copy_impl()
[2m[36m(pid=12901)[0m     @     0x7f32fd2fa5a4 at::native::copy_()
[2m[36m(pid=12853)[0m     @     0x7fc31a141c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12853)[0m     @     0x7fc3195e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12853)[0m     @     0x7fc3195e1388 at::native::copy_impl()
[2m[36m(pid=12853)[0m     @     0x7fc3195e35a4 at::native::copy_()
[2m[36m(pid=12846)[0m     @     0x7ee775c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12846)[0m     @     0x7ee775c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12846)[0m     @     0x7ee7750e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12846)[0m     @     0x7ee7750e1388 at::native::copy_impl()
[2m[36m(pid=12846)[0m     @     0x7ee7750e35a4 at::native::copy_()
[2m[36m(pid=12792)[0m     @     0x7f089d0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12792)[0m     @     0x7f089c58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12792)[0m     @     0x7f089c589388 at::native::copy_impl()
[2m[36m(pid=12792)[0m     @     0x7f089c58b5a4 at::native::copy_()
[2m[36m(pid=12782)[0m     @     0x7f1b8a75dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12782)[0m     @     0x7f1b89bffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12782)[0m     @     0x7f1b89bfd388 at::native::copy_impl()
[2m[36m(pid=12782)[0m     @     0x7f1b89bff5a4 at::native::copy_()
[2m[36m(pid=12786)[0m     @     0x7ed268ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12786)[0m     @     0x7ed268ccd388 at::native::copy_impl()
[2m[36m(pid=12786)[0m     @     0x7ed268ccf5a4 at::native::copy_()
[2m[36m(pid=12807)[0m     @     0x7f23232e6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12807)[0m     @     0x7f2322a117db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12801)[0m     @     0x7ed4ddfa7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12801)[0m     @     0x7ed4ddfa5388 at::native::copy_impl()
[2m[36m(pid=12801)[0m     @     0x7ed4ddfa75a4 at::native::copy_()
[2m[36m(pid=12861)[0m     @     0x7f025478da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12861)[0m     @     0x7f025478b388 at::native::copy_impl()
[2m[36m(pid=12861)[0m     @     0x7f025478d5a4 at::native::copy_()
[2m[36m(pid=12904)[0m     @     0x7fa3dc9e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12904)[0m     @     0x7fa3dc1137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12904)[0m     @     0x7fa3dc1168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12878)[0m     @     0x7ecf4e9578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12847)[0m     @     0x7f2e1ba0cad3 at::TensorIterator::for_each()
[2m[36m(pid=12847)[0m     @     0x7f2e1ba0cd91 at::TensorIterator::for_each()
[2m[36m(pid=12847)[0m     @     0x7f2e1c2efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12847)[0m     @     0x7f2e1c312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12847)[0m     @     0x7f2e1b7b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12847)[0m     @     0x7f2e1b7b2388 at::native::copy_impl()
[2m[36m(pid=12847)[0m     @     0x7f2e1b7b45a4 at::native::copy_()
[2m[36m(pid=12787)[0m     @     0x7f2f3b4577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12787)[0m     @     0x7f2f3b45a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12787)[0m     @     0x7f2f3b45aad3 at::TensorIterator::for_each()
[2m[36m(pid=12888)[0m     @     0x7f3dda14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12888)[0m     @     0x7f3dda14fad3 at::TensorIterator::for_each()
[2m[36m(pid=12888)[0m     @     0x7f3dda14fd91 at::TensorIterator::for_each()
[2m[36m(pid=12888)[0m     @     0x7f3ddaa32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12888)[0m     @     0x7f3ddaa55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12888)[0m     @     0x7f3dd9ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12789)[0m     @     0x7fb210312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12789)[0m     @     0x7fb20f7b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12789)[0m     @     0x7fb20f7b2388 at::native::copy_impl()
[2m[36m(pid=12789)[0m     @     0x7fb20f7b45a4 at::native::copy_()
[2m[36m(pid=12789)[0m     @     0x7fb20fe9f4f5 at::Tensor::copy_()
[2m[36m(pid=12805)[0m     @     0x7ed325c25ad3 at::TensorIterator::for_each()
[2m[36m(pid=12805)[0m     @     0x7ed325c25d91 at::TensorIterator::for_each()
[2m[36m(pid=12805)[0m     @     0x7ed326508b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12805)[0m     @     0x7ed32652bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12805)[0m     @     0x7ed3259cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12805)[0m     @     0x7ed3259cb388 at::native::copy_impl()
[2m[36m(pid=12854)[0m     @     0x7f27f8bd1d91 at::TensorIterator::for_each()
[2m[36m(pid=12854)[0m     @     0x7f27f94b4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12854)[0m     @     0x7f27f94d7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12854)[0m     @     0x7f27f8979a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12854)[0m     @     0x7f27f8977388 at::native::copy_impl()
[2m[36m(pid=12854)[0m     @     0x7f27f89795a4 at::native::copy_()
[2m[36m(pid=12880)[0m     @     0x7eea44c11ad3 at::TensorIterator::for_each()
[2m[36m(pid=12880)[0m     @     0x7eea44c11d91 at::TensorIterator::for_each()
[2m[36m(pid=12880)[0m     @     0x7eea454f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12880)[0m     @     0x7eea45517c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12880)[0m     @     0x7eea449b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12880)[0m     @     0x7eea449b7388 at::native::copy_impl()
[2m[36m(pid=12790)[0m     @     0x7f7cf07a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12790)[0m     @     0x7f7cefc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12790)[0m     @     0x7f7cefc48388 at::native::copy_impl()
[2m[36m(pid=12790)[0m     @     0x7f7cefc4a5a4 at::native::copy_()
[2m[36m(pid=12790)[0m     @     0x7f7cf03354f5 at::Tensor::copy_()
[2m[36m(pid=12780)[0m     @     0x7ee9b5138d91 at::TensorIterator::for_each()
[2m[36m(pid=12780)[0m     @     0x7ee9b5a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12780)[0m     @     0x7ee9b5a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12780)[0m     @     0x7ee9b4ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12780)[0m     @     0x7ee9b4ede388 at::native::copy_impl()
[2m[36m(pid=12796)[0m     @     0x7f9976bfd8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12873)[0m     @     0x7f51249b8ad3 at::TensorIterator::for_each()
[2m[36m(pid=12873)[0m     @     0x7f51249b8d91 at::TensorIterator::for_each()
[2m[36m(pid=12873)[0m     @     0x7f512529bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12873)[0m     @     0x7f51252bec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12873)[0m     @     0x7f5124760a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12873)[0m     @     0x7f512475e388 at::native::copy_impl()
[2m[36m(pid=12799)[0m     @     0x7eeff633fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12799)[0m     @     0x7eeff57e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12799)[0m     @     0x7eeff57df388 at::native::copy_impl()
[2m[36m(pid=12799)[0m     @     0x7eeff57e15a4 at::native::copy_()
[2m[36m(pid=12799)[0m     @     0x7eeff5ecc4f5 at::Tensor::copy_()
[2m[36m(pid=12864)[0m     @     0x7f689bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=12864)[0m     @     0x7f689c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12864)[0m     @     0x7f689c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12864)[0m     @     0x7f689bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12864)[0m     @     0x7f689bc48388 at::native::copy_impl()
[2m[36m(pid=12864)[0m     @     0x7f689bc4a5a4 at::native::copy_()
[2m[36m(pid=12808)[0m     @     0x7ed70b405a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12808)[0m     @     0x7ed70b403388 at::native::copy_impl()
[2m[36m(pid=12808)[0m     @     0x7ed70b4055a4 at::native::copy_()
[2m[36m(pid=12808)[0m     @     0x7ed70baf04f5 at::Tensor::copy_()
[2m[36m(pid=12844)[0m     @     0x7f717bea2ad3 at::TensorIterator::for_each()
[2m[36m(pid=12803)[0m     @     0x7efe4fbf55a4 at::native::copy_()
[2m[36m(pid=12803)[0m     @     0x7efe502e04f5 at::Tensor::copy_()
[2m[36m(pid=12794)[0m     @     0x7f2de9940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=12794)[0m     @     0x7f2de906b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=12797)[0m     @     0x7fc91e5cd5a4 at::native::copy_()
[2m[36m(pid=12797)[0m     @     0x7fc91ecb84f5 at::Tensor::copy_()
[2m[36m(pid=12832)[0m     @     0x7f271cc764f5 at::Tensor::copy_()
[2m[36m(pid=12832)[0m     @     0x7f271f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12869)[0m     @     0x55934fc45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12869)[0m     @     0x55934fbba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12869)[0m     @     0x55934fc44baf _PyEval_EvalCodeWithName
[2m[36m(pid=12869)[0m     @     0x55934fc45643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12869)[0m     @     0x55934fbba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x7fc8212b54f5 at::Tensor::copy_()
[2m[36m(pid=12830)[0m     @     0x7fc8237888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12845)[0m     @     0x7f185ae9b5a4 at::native::copy_()
[2m[36m(pid=12845)[0m     @     0x7f185b5864f5 at::Tensor::copy_()
[2m[36m(pid=12845)[0m     @     0x7f185da598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12773)[0m     @     0x7f9aa23d84f5 at::Tensor::copy_()
[2m[36m(pid=12773)[0m     @     0x7f9aa48ab8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12788)[0m     @     0x7f6ee38b95a4 at::native::copy_()
[2m[36m(pid=12788)[0m     @     0x7f6ee3fa44f5 at::Tensor::copy_()
[2m[36m(pid=12781)[0m     @     0x7f74b17204f5 at::Tensor::copy_()
[2m[36m(pid=12781)[0m     @     0x7f74b3bf38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12870)[0m     @     0x7f16d32df388 at::native::copy_impl()
[2m[36m(pid=12870)[0m     @     0x7f16d32e15a4 at::native::copy_()
[2m[36m(pid=12795)[0m     @     0x7f05a45f14f5 at::Tensor::copy_()
[2m[36m(pid=12795)[0m     @     0x7f05a6ac48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12795)[0m     @     0x7f05a45f14f5 at::Tensor::copy_()
[2m[36m(pid=12849)[0m     @     0x7fb19ac275a4 at::native::copy_()
[2m[36m(pid=12849)[0m     @     0x7fb19b3124f5 at::Tensor::copy_()
[2m[36m(pid=12907)[0m     @     0x7f24013ba4f5 at::Tensor::copy_()
[2m[36m(pid=12890)[0m     @     0x7f7c33a0c5a4 at::native::copy_()
[2m[36m(pid=12890)[0m     @     0x7f7c340f74f5 at::Tensor::copy_()
[2m[36m(pid=12890)[0m     @     0x7f7c365ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12791)[0m     @     0x7f52ec9254f5 at::Tensor::copy_()
[2m[36m(pid=12791)[0m     @     0x7f52f29d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12791)[0m     @     0x55b83d86cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12791)[0m     @     0x55b83d7c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12791)[0m     @     0x55b83d852baf _PyEval_EvalCodeWithName
[2m[36m(pid=12791)[0m     @     0x55b83d853a20 method_vectorcall
[2m[36m(pid=12791)[0m     @     0x55b83d7c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12791)[0m     @     0x55b83d852baf _PyEval_EvalCodeWithName
[2m[36m(pid=12791)[0m     @     0x55b83d853643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12791)[0m     @     0x55b83d7c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12791)[0m     @     0x55b83d852baf _PyEval_EvalCodeWithName
[2m[36m(pid=12791)[0m     @     0x55b83d853643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12791)[0m     @     0x55b83d7c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12791)[0m     @     0x55b83d852baf _PyEval_EvalCodeWithName
[2m[36m(pid=12791)[0m     @     0x55b83d853643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12791)[0m     @     0x55b83d7c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12791)[0m     @     0x55b83d852baf _PyEval_EvalCodeWithName
[2m[36m(pid=12791)[0m     @     0x55b83d853643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12791)[0m     @     0x55b83d7c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12776)[0m     @     0x7ee8ecccf5a4 at::native::copy_()
[2m[36m(pid=12776)[0m     @     0x7ee8ed3ba4f5 at::Tensor::copy_()
[2m[36m(pid=12872)[0m     @     0x7ef354ab85a4 at::native::copy_()
[2m[36m(pid=12872)[0m     @     0x7ef3551a34f5 at::Tensor::copy_()
[2m[36m(pid=12872)[0m     @     0x7ef3576768de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12860)[0m     @     0x7f2563f0c5a4 at::native::copy_()
[2m[36m(pid=12860)[0m     @     0x7f25645f74f5 at::Tensor::copy_()
[2m[36m(pid=12884)[0m     @     0x7ed489cce4f5 at::Tensor::copy_()
[2m[36m(pid=12884)[0m     @     0x7ed48fd7979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12884)[0m     @     0x5572697d6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12884)[0m     @     0x557269731b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12884)[0m     @     0x5572697bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12884)[0m     @     0x5572697bda20 method_vectorcall
[2m[36m(pid=12884)[0m     @     0x557269731bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12884)[0m     @     0x5572697bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12884)[0m     @     0x5572697bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12884)[0m     @     0x557269732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12884)[0m     @     0x5572697bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12884)[0m     @     0x5572697bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12884)[0m     @     0x557269732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12884)[0m     @     0x5572697bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12884)[0m     @     0x5572697bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12884)[0m     @     0x557269732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12884)[0m     @     0x5572697bcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12884)[0m     @     0x5572697bd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12884)[0m     @     0x557269732689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12793)[0m     @     0x7f4a17feb5a4 at::native::copy_()
[2m[36m(pid=12793)[0m     @     0x7f4a186d64f5 at::Tensor::copy_()
[2m[36m(pid=12793)[0m     @     0x7f4a1aba98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12851)[0m     @     0x7f182e3058de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12851)[0m     @     0x7f182be324f5 at::Tensor::copy_()
[2m[36m(pid=12851)[0m     @     0x7f1831edd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12851)[0m     @     0x562a8c83bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12851)[0m     @     0x562a8c796b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12851)[0m     @     0x562a8c821baf _PyEval_EvalCodeWithName
[2m[36m(pid=12851)[0m     @     0x562a8c822a20 method_vectorcall
[2m[36m(pid=12851)[0m     @     0x562a8c796bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12851)[0m     @     0x562a8c821baf _PyEval_EvalCodeWithName
[2m[36m(pid=12851)[0m     @     0x562a8c822643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12851)[0m     @     0x562a8c797689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12851)[0m     @     0x562a8c821baf _PyEval_EvalCodeWithName
[2m[36m(pid=12851)[0m     @     0x562a8c822643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12851)[0m     @     0x562a8c797689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12851)[0m     @     0x562a8c821baf _PyEval_EvalCodeWithName
[2m[36m(pid=12851)[0m     @     0x562a8c822643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12851)[0m     @     0x562a8c797689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12851)[0m     @     0x562a8c821baf _PyEval_EvalCodeWithName
[2m[36m(pid=12851)[0m     @     0x562a8c822643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12851)[0m     @     0x562a8c797689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12774)[0m     @     0x7f53f3e624f5 at::Tensor::copy_()
[2m[36m(pid=12774)[0m     @     0x7f53f63358de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12774)[0m     @     0x7f53f3e624f5 at::Tensor::copy_()
[2m[36m(pid=12774)[0m     @     0x7f53f9f0d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12774)[0m     @     0x559d2c50afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12774)[0m     @     0x559d2c465b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12774)[0m     @     0x559d2c4f0baf _PyEval_EvalCodeWithName
2020-11-05 10:19:05,980	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=12881)[0m     @     0x7f4d52b3e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12881)[0m     @     0x7f4d5066b4f5 at::Tensor::copy_()
[2m[36m(pid=12881)[0m     @     0x7f4d5671679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12881)[0m     @     0x5592b62aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12881)[0m     @     0x5592b6209b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12881)[0m     @     0x5592b6294baf _PyEval_EvalCodeWithName
[2m[36m(pid=12881)[0m     @     0x5592b6295a20 method_vectorcall
[2m[36m(pid=12881)[0m     @     0x5592b6209bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12881)[0m     @     0x5592b6294baf _PyEval_EvalCodeWithName
[2m[36m(pid=12881)[0m     @     0x5592b6295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12881)[0m     @     0x5592b620a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12881)[0m     @     0x5592b6294baf _PyEval_EvalCodeWithName
[2m[36m(pid=12881)[0m     @     0x5592b6295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12881)[0m     @     0x5592b620a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12881)[0m     @     0x5592b6294baf _PyEval_EvalCodeWithName
[2m[36m(pid=12881)[0m     @     0x5592b6295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12881)[0m     @     0x5592b620a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12881)[0m     @     0x5592b6294baf _PyEval_EvalCodeWithName
[2m[36m(pid=12881)[0m     @     0x5592b6295643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12881)[0m     @     0x5592b620a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12867)[0m     @     0x7f8bb1e3a4f5 at::Tensor::copy_()
[2m[36m(pid=12867)[0m     @     0x7f8bb430d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12867)[0m     @     0x7f8bb1e3a4f5 at::Tensor::copy_()
[2m[36m(pid=12867)[0m     @     0x7f8bb7ee579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12867)[0m     @     0x55df7673efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12867)[0m     @     0x55df76699b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12867)[0m     @     0x55df76724baf _PyEval_EvalCodeWithName
[2m[36m(pid=12867)[0m     @     0x55df76725a20 method_vectorcall
[2m[36m(pid=12867)[0m     @     0x55df76699bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12867)[0m     @     0x55df76724baf _PyEval_EvalCodeWithName
[2m[36m(pid=12867)[0m     @     0x55df76725643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12867)[0m     @     0x55df7669a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12867)[0m     @     0x55df76724baf _PyEval_EvalCodeWithName
[2m[36m(pid=12867)[0m     @     0x55df76725643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12867)[0m     @     0x55df7669a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12867)[0m     @     0x55df76724baf _PyEval_EvalCodeWithName
[2m[36m(pid=12867)[0m     @     0x55df76725643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12867)[0m     @     0x55df7669a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12867)[0m     @     0x55df76724baf _PyEval_EvalCodeWithName
[2m[36m(pid=12867)[0m     @     0x55df76725643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12867)[0m     @     0x55df7669a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12778)[0m     @     0x7f2fe35864f5 at::Tensor::copy_()
[2m[36m(pid=12778)[0m     @     0x7f2fe5a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12778)[0m     @     0x7f2fe35864f5 at::Tensor::copy_()
[2m[36m(pid=12778)[0m     @     0x7f2fe963179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12778)[0m     @     0x563a8f47bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12778)[0m     @     0x563a8f3d6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12778)[0m     @     0x563a8f461baf _PyEval_EvalCodeWithName
[2m[36m(pid=12778)[0m     @     0x563a8f462a20 method_vectorcall
[2m[36m(pid=12778)[0m     @     0x563a8f3d6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12778)[0m     @     0x563a8f461baf _PyEval_EvalCodeWithName
[2m[36m(pid=12778)[0m     @     0x563a8f462643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12778)[0m     @     0x563a8f3d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12778)[0m     @     0x563a8f461baf _PyEval_EvalCodeWithName
[2m[36m(pid=12778)[0m     @     0x563a8f462643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12778)[0m     @     0x563a8f3d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12778)[0m     @     0x563a8f461baf _PyEval_EvalCodeWithName
[2m[36m(pid=12842)[0m     @     0x7f3521dfa4f5 at::Tensor::copy_()
[2m[36m(pid=12842)[0m     @     0x7f35242cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12842)[0m     @     0x7f3521dfa4f5 at::Tensor::copy_()
[2m[36m(pid=12842)[0m     @     0x7f3527ea579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12842)[0m     @     0x559e69031fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12842)[0m     @     0x559e68f8cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12842)[0m     @     0x559e69017baf _PyEval_EvalCodeWithName
[2m[36m(pid=12842)[0m     @     0x559e69018a20 method_vectorcall
[2m[36m(pid=12842)[0m     @     0x559e68f8cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12842)[0m     @     0x559e69017baf _PyEval_EvalCodeWithName
[2m[36m(pid=12842)[0m     @     0x559e69018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12842)[0m     @     0x559e68f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12842)[0m     @     0x559e69017baf _PyEval_EvalCodeWithName
[2m[36m(pid=12842)[0m     @     0x559e69018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12842)[0m     @     0x559e68f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12779)[0m     @     0x7fb68b4c14f5 at::Tensor::copy_()
[2m[36m(pid=12779)[0m     @     0x7fb69156c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12779)[0m     @     0x55691c298fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12779)[0m     @     0x55691c1f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12779)[0m     @     0x55691c27ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12779)[0m     @     0x55691c27fa20 method_vectorcall
[2m[36m(pid=12779)[0m     @     0x55691c1f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12779)[0m     @     0x55691c27ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12779)[0m     @     0x55691c27f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12779)[0m     @     0x55691c1f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12779)[0m     @     0x55691c27ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12779)[0m     @     0x55691c27f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12779)[0m     @     0x55691c1f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12779)[0m     @     0x55691c27ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12779)[0m     @     0x55691c27f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12779)[0m     @     0x55691c1f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12779)[0m     @     0x55691c27ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12779)[0m     @     0x55691c27f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12779)[0m     @     0x55691c1f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12895)[0m     @     0x7f4282fae4f5 at::Tensor::copy_()
[2m[36m(pid=12895)[0m     @     0x7f42854818de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12895)[0m     @     0x7f4282fae4f5 at::Tensor::copy_()
[2m[36m(pid=12895)[0m     @     0x7f428905979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12895)[0m     @     0x563b9d27dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12895)[0m     @     0x563b9d1d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12895)[0m     @     0x563b9d263baf _PyEval_EvalCodeWithName
[2m[36m(pid=12895)[0m     @     0x563b9d264a20 method_vectorcall
[2m[36m(pid=12895)[0m     @     0x563b9d1d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12895)[0m     @     0x563b9d263baf _PyEval_EvalCodeWithName
[2m[36m(pid=12895)[0m     @     0x563b9d264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12895)[0m     @     0x563b9d1d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12895)[0m     @     0x563b9d263baf _PyEval_EvalCodeWithName
[2m[36m(pid=12895)[0m     @     0x563b9d264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12895)[0m     @     0x563b9d1d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12895)[0m     @     0x563b9d263baf _PyEval_EvalCodeWithName
[2m[36m(pid=12895)[0m     @     0x563b9d264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12895)[0m     @     0x563b9d1d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12895)[0m     @     0x563b9d263baf _PyEval_EvalCodeWithName
[2m[36m(pid=12839)[0m     @     0x7efc066ff5a4 at::native::copy_()
[2m[36m(pid=12839)[0m     @     0x7efc06dea4f5 at::Tensor::copy_()
[2m[36m(pid=12839)[0m     @     0x7efc092bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12829)[0m     @     0x7fb0671f4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12829)[0m     @     0x7fb0671f2388 at::native::copy_impl()
[2m[36m(pid=12829)[0m     @     0x7fb0671f45a4 at::native::copy_()
[2m[36m(pid=12829)[0m     @     0x7fb0678df4f5 at::Tensor::copy_()
[2m[36m(pid=12848)[0m     @     0x7f97e6edea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12848)[0m     @     0x7f97e6edc388 at::native::copy_impl()
[2m[36m(pid=12848)[0m     @     0x7f97e6ede5a4 at::native::copy_()
[2m[36m(pid=12848)[0m     @     0x7f97e75c94f5 at::Tensor::copy_()
[2m[36m(pid=12802)[0m     @     0x7f269aaf55a4 at::native::copy_()
[2m[36m(pid=12802)[0m     @     0x7f269b1e04f5 at::Tensor::copy_()
[2m[36m(pid=12802)[0m     @     0x7f269d6b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12855)[0m     @     0x7fb2c59e54f5 at::Tensor::copy_()
[2m[36m(pid=12855)[0m     @     0x7fb2c7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12855)[0m     @     0x7fb2c59e54f5 at::Tensor::copy_()
[2m[36m(pid=12855)[0m     @     0x7fb2cba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12855)[0m     @     0x55bcfc9bafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12855)[0m     @     0x55bcfc915b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12855)[0m     @     0x55bcfc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12855)[0m     @     0x55bcfc9a1a20 method_vectorcall
[2m[36m(pid=12855)[0m     @     0x55bcfc915bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12855)[0m     @     0x55bcfc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12855)[0m     @     0x55bcfc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12855)[0m     @     0x55bcfc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12855)[0m     @     0x55bcfc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12855)[0m     @     0x55bcfc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12855)[0m     @     0x55bcfc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12855)[0m     @     0x55bcfc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12855)[0m     @     0x55bcfc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12852)[0m     @     0x7f5e28a955a4 at::native::copy_()
[2m[36m(pid=12852)[0m     @     0x7f5e291804f5 at::Tensor::copy_()
[2m[36m(pid=12852)[0m     @     0x7f5e2b6538de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12852)[0m     @     0x7f5e291804f5 at::Tensor::copy_()
[2m[36m(pid=12785)[0m     @     0x7f32038ed4f5 at::Tensor::copy_()
[2m[36m(pid=12785)[0m     @     0x7f3205dc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12785)[0m     @     0x7f32038ed4f5 at::Tensor::copy_()
[2m[36m(pid=12785)[0m     @     0x7f320999879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12785)[0m     @     0x55bfb23f6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12785)[0m     @     0x55bfb2351b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12785)[0m     @     0x55bfb23dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12785)[0m     @     0x55bfb23dda20 method_vectorcall
[2m[36m(pid=12785)[0m     @     0x55bfb2351bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12775)[0m     @     0x7faaa60ba4f5 at::Tensor::copy_()
[2m[36m(pid=12775)[0m     @     0x7faaa858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12775)[0m     @     0x7faaa60ba4f5 at::Tensor::copy_()
[2m[36m(pid=12775)[0m     @     0x7faaac16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12901)[0m     @     0x7f32fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=12901)[0m     @     0x7f32ffeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12901)[0m     @     0x7f32fd9e54f5 at::Tensor::copy_()
[2m[36m(pid=12901)[0m     @     0x7f3303a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12901)[0m     @     0x556633bf0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12901)[0m     @     0x556633b4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12901)[0m     @     0x556633bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12901)[0m     @     0x556633bd7a20 method_vectorcall
[2m[36m(pid=12901)[0m     @     0x556633b4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12853)[0m     @     0x7fc319cce4f5 at::Tensor::copy_()
[2m[36m(pid=12853)[0m     @     0x7fc31c1a18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12853)[0m     @     0x7fc319cce4f5 at::Tensor::copy_()
[2m[36m(pid=12853)[0m     @     0x7fc31fd7979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12853)[0m     @     0x56275e075fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12853)[0m     @     0x56275dfd0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m     @     0x7ee7757ce4f5 at::Tensor::copy_()
[2m[36m(pid=12846)[0m     @     0x7ee777ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12792)[0m     @     0x7f089cc764f5 at::Tensor::copy_()
[2m[36m(pid=12792)[0m     @     0x7f089f1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12792)[0m     @     0x7f089cc764f5 at::Tensor::copy_()
[2m[36m(pid=12792)[0m     @     0x7f08a2d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12792)[0m     @     0x55b3dbdcefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12792)[0m     @     0x55b3dbd29b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12792)[0m     @     0x55b3dbdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=12792)[0m     @     0x55b3dbdb5a20 method_vectorcall
[2m[36m(pid=12792)[0m     @     0x55b3dbd29bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12792)[0m     @     0x55b3dbdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=12792)[0m     @     0x55b3dbdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12792)[0m     @     0x55b3dbd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12792)[0m     @     0x55b3dbdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=12792)[0m     @     0x55b3dbdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12792)[0m     @     0x55b3dbd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12792)[0m     @     0x55b3dbdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=12792)[0m     @     0x55b3dbdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12792)[0m     @     0x55b3dbd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12792)[0m     @     0x55b3dbdb4baf _PyEval_EvalCodeWithName
[2m[36m(pid=12792)[0m     @     0x55b3dbdb5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12792)[0m     @     0x55b3dbd2a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12782)[0m     @     0x7f1b8a2ea4f5 at::Tensor::copy_()
[2m[36m(pid=12782)[0m     @     0x7f1b8c7bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12782)[0m     @     0x7f1b8a2ea4f5 at::Tensor::copy_()
[2m[36m(pid=12782)[0m     @     0x7f1b9039579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12782)[0m     @     0x5643247aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12782)[0m     @     0x564324705b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12782)[0m     @     0x564324790baf _PyEval_EvalCodeWithName
[2m[36m(pid=12782)[0m     @     0x564324791a20 method_vectorcall
[2m[36m(pid=12782)[0m     @     0x564324705bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12782)[0m     @     0x564324790baf _PyEval_EvalCodeWithName
[2m[36m(pid=12782)[0m     @     0x564324791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12782)[0m     @     0x564324706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12782)[0m     @     0x564324790baf _PyEval_EvalCodeWithName
[2m[36m(pid=12782)[0m     @     0x564324791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12782)[0m     @     0x564324706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12782)[0m     @     0x564324790baf _PyEval_EvalCodeWithName
[2m[36m(pid=12782)[0m     @     0x564324791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12782)[0m     @     0x564324706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12782)[0m     @     0x564324790baf _PyEval_EvalCodeWithName
[2m[36m(pid=12782)[0m     @     0x564324791643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12782)[0m     @     0x564324706689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12786)[0m     @     0x7ed2693ba4f5 at::Tensor::copy_()
[2m[36m(pid=12786)[0m     @     0x7ed26b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12786)[0m     @     0x7ed2693ba4f5 at::Tensor::copy_()
[2m[36m(pid=12786)[0m     @     0x7ed26f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12786)[0m     @     0x561e081f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12786)[0m     @     0x561e08152b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12786)[0m     @     0x561e081ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12786)[0m     @     0x561e081dea20 method_vectorcall
[2m[36m(pid=12786)[0m     @     0x561e08152bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12786)[0m     @     0x561e081ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12786)[0m     @     0x561e081de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12786)[0m     @     0x561e08153689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12786)[0m     @     0x561e081ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12786)[0m     @     0x561e081de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12786)[0m     @     0x561e08153689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12786)[0m     @     0x561e081ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12786)[0m     @     0x561e081de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12786)[0m     @     0x561e08153689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12786)[0m     @     0x561e081ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12786)[0m     @     0x561e081de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12786)[0m     @     0x561e08153689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x7f2322a148f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12807)[0m     @     0x7f2322a14ad3 at::TensorIterator::for_each()
[2m[36m(pid=12801)[0m     @     0x7ed4de6924f5 at::Tensor::copy_()
[2m[36m(pid=12801)[0m     @     0x7ed4e0b658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12801)[0m     @     0x7ed4de6924f5 at::Tensor::copy_()
[2m[36m(pid=12801)[0m     @     0x7ed4e473d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12801)[0m     @     0x55706de5ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12801)[0m     @     0x55706ddbab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12801)[0m     @     0x55706de45baf _PyEval_EvalCodeWithName
[2m[36m(pid=12801)[0m     @     0x55706de46a20 method_vectorcall
[2m[36m(pid=12801)[0m     @     0x55706ddbabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12801)[0m     @     0x55706de45baf _PyEval_EvalCodeWithName
[2m[36m(pid=12801)[0m     @     0x55706de46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12801)[0m     @     0x55706ddbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12801)[0m     @     0x55706de45baf _PyEval_EvalCodeWithName
[2m[36m(pid=12801)[0m     @     0x55706de46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12801)[0m     @     0x55706ddbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12801)[0m     @     0x55706de45baf _PyEval_EvalCodeWithName
[2m[36m(pid=12801)[0m     @     0x55706de46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12801)[0m     @     0x55706ddbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12801)[0m     @     0x55706de45baf _PyEval_EvalCodeWithName
[2m[36m(pid=12801)[0m     @     0x55706de46643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12801)[0m     @     0x55706ddbb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12861)[0m     @     0x7f0254e784f5 at::Tensor::copy_()
[2m[36m(pid=12861)[0m     @     0x7f025734b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12861)[0m     @     0x7f0254e784f5 at::Tensor::copy_()
[2m[36m(pid=12861)[0m     @     0x7f025af2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12861)[0m     @     0x55e11ab8efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12861)[0m     @     0x55e11aae9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12861)[0m     @     0x55e11ab74baf _PyEval_EvalCodeWithName
[2m[36m(pid=12861)[0m     @     0x55e11ab75a20 method_vectorcall
[2m[36m(pid=12861)[0m     @     0x55e11aae9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12861)[0m     @     0x55e11ab74baf _PyEval_EvalCodeWithName
[2m[36m(pid=12861)[0m     @     0x55e11ab75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12861)[0m     @     0x55e11aaea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12861)[0m     @     0x55e11ab74baf _PyEval_EvalCodeWithName
[2m[36m(pid=12861)[0m     @     0x55e11ab75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12861)[0m     @     0x55e11aaea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12861)[0m     @     0x55e11ab74baf _PyEval_EvalCodeWithName
[2m[36m(pid=12861)[0m     @     0x55e11ab75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12861)[0m     @     0x55e11aaea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12861)[0m     @     0x55e11ab74baf _PyEval_EvalCodeWithName
[2m[36m(pid=12861)[0m     @     0x55e11ab75643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12861)[0m     @     0x55e11aaea689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12904)[0m     @     0x7fa3dc116ad3 at::TensorIterator::for_each()
[2m[36m(pid=12878)[0m     @     0x7ecf4e957ad3 at::TensorIterator::for_each()
[2m[36m(pid=12847)[0m     @     0x7f2e1be9f4f5 at::Tensor::copy_()
[2m[36m(pid=12847)[0m     @     0x7f2e1e3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12787)[0m     @     0x7f2f3b45ad91 at::TensorIterator::for_each()
[2m[36m(pid=12787)[0m     @     0x7f2f3bd3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12787)[0m     @     0x7f2f3bd60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12888)[0m     @     0x7f3dd9ef5388 at::native::copy_impl()
[2m[36m(pid=12888)[0m     @     0x7f3dd9ef75a4 at::native::copy_()
[2m[36m(pid=12888)[0m     @     0x7f3dda5e24f5 at::Tensor::copy_()
[2m[36m(pid=12888)[0m     @     0x7f3ddcab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12789)[0m     @     0x7fb2123728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12789)[0m     @     0x7fb20fe9f4f5 at::Tensor::copy_()
[2m[36m(pid=12789)[0m     @     0x7fb215f4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12789)[0m     @     0x55d305605fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12789)[0m     @     0x55d305560b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12789)[0m     @     0x55d3055ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12789)[0m     @     0x55d3055eca20 method_vectorcall
[2m[36m(pid=12789)[0m     @     0x55d305560bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12789)[0m     @     0x55d3055ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12789)[0m     @     0x55d3055ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12789)[0m     @     0x55d305561689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12789)[0m     @     0x55d3055ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12789)[0m     @     0x55d3055ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12789)[0m     @     0x55d305561689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12789)[0m     @     0x55d3055ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12789)[0m     @     0x55d3055ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12789)[0m     @     0x55d305561689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12789)[0m     @     0x55d3055ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12789)[0m     @     0x55d3055ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12789)[0m     @     0x55d305561689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12805)[0m     @     0x7ed3259cd5a4 at::native::copy_()
[2m[36m(pid=12805)[0m     @     0x7ed3260b84f5 at::Tensor::copy_()
[2m[36m(pid=12805)[0m     @     0x7ed32858b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12854)[0m     @     0x7f27f90644f5 at::Tensor::copy_()
[2m[36m(pid=12854)[0m     @     0x7f27fb5378de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12854)[0m     @     0x7f27f90644f5 at::Tensor::copy_()
[2m[36m(pid=12854)[0m     @     0x7f27ff10f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12854)[0m     @     0x558da2c3efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12854)[0m     @     0x558da2b99b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12854)[0m     @     0x558da2c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=12854)[0m     @     0x558da2c25a20 method_vectorcall
[2m[36m(pid=12854)[0m     @     0x558da2b99bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12854)[0m     @     0x558da2c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=12854)[0m     @     0x558da2c25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12854)[0m     @     0x558da2b9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12854)[0m     @     0x558da2c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=12854)[0m     @     0x558da2c25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12854)[0m     @     0x558da2b9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12854)[0m     @     0x558da2c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=12854)[0m     @     0x558da2c25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12854)[0m     @     0x558da2b9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12854)[0m     @     0x558da2c24baf _PyEval_EvalCodeWithName
[2m[36m(pid=12854)[0m     @     0x558da2c25643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12854)[0m     @     0x558da2b9a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12880)[0m     @     0x7eea449b95a4 at::native::copy_()
[2m[36m(pid=12880)[0m     @     0x7eea450a44f5 at::Tensor::copy_()
[2m[36m(pid=12880)[0m     @     0x7eea475778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12880)[0m     @     0x7eea450a44f5 at::Tensor::copy_()
[2m[36m(pid=12880)[0m     @     0x7eea4b14f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12880)[0m     @     0x55c0246d7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12880)[0m     @     0x55c024632b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12880)[0m     @     0x55c0246bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12880)[0m     @     0x55c0246bea20 method_vectorcall
[2m[36m(pid=12790)[0m     @     0x7f7cf28088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12790)[0m     @     0x7f7cf03354f5 at::Tensor::copy_()
[2m[36m(pid=12790)[0m     @     0x7f7cf63e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12790)[0m     @     0x563bb6050fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12790)[0m     @     0x563bb5fabb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12790)[0m     @     0x563bb6036baf _PyEval_EvalCodeWithName
[2m[36m(pid=12790)[0m     @     0x563bb6037a20 method_vectorcall
[2m[36m(pid=12790)[0m     @     0x563bb5fabbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12790)[0m     @     0x563bb6036baf _PyEval_EvalCodeWithName
[2m[36m(pid=12790)[0m     @     0x563bb6037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12790)[0m     @     0x563bb5fac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12790)[0m     @     0x563bb6036baf _PyEval_EvalCodeWithName
[2m[36m(pid=12790)[0m     @     0x563bb6037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12790)[0m     @     0x563bb5fac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12790)[0m     @     0x563bb6036baf _PyEval_EvalCodeWithName
[2m[36m(pid=12790)[0m     @     0x563bb6037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12790)[0m     @     0x563bb5fac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12790)[0m     @     0x563bb6036baf _PyEval_EvalCodeWithName
[2m[36m(pid=12790)[0m     @     0x563bb6037643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12790)[0m     @     0x563bb5fac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12780)[0m     @     0x7ee9b4ee05a4 at::native::copy_()
[2m[36m(pid=12780)[0m     @     0x7ee9b55cb4f5 at::Tensor::copy_()
[2m[36m(pid=12780)[0m     @     0x7ee9b7a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12780)[0m     @     0x7ee9b55cb4f5 at::Tensor::copy_()
[2m[36m(pid=12780)[0m     @     0x7ee9bb67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12780)[0m     @     0x55996c620fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12780)[0m     @     0x55996c57bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12780)[0m     @     0x55996c606baf _PyEval_EvalCodeWithName
[2m[36m(pid=12780)[0m     @     0x55996c607a20 method_vectorcall
[2m[36m(pid=12780)[0m     @     0x55996c57bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12780)[0m     @     0x55996c606baf _PyEval_EvalCodeWithName
[2m[36m(pid=12780)[0m     @     0x55996c607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12780)[0m     @     0x55996c57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12780)[0m     @     0x55996c606baf _PyEval_EvalCodeWithName
[2m[36m(pid=12780)[0m     @     0x55996c607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12780)[0m     @     0x55996c57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12780)[0m     @     0x55996c606baf _PyEval_EvalCodeWithName
[2m[36m(pid=12780)[0m     @     0x55996c607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12780)[0m     @     0x55996c57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x7f9976bfdad3 at::TensorIterator::for_each()
[2m[36m(pid=12873)[0m     @     0x7f51247605a4 at::native::copy_()
[2m[36m(pid=12873)[0m     @     0x7f5124e4b4f5 at::Tensor::copy_()
[2m[36m(pid=12873)[0m     @     0x7f512731e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12799)[0m     @     0x7eeff839f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12799)[0m     @     0x7eeff5ecc4f5 at::Tensor::copy_()
[2m[36m(pid=12799)[0m     @     0x7eeffbf7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12799)[0m     @     0x55a44fe9efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12799)[0m     @     0x55a44fdf9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12799)[0m     @     0x55a44fe84baf _PyEval_EvalCodeWithName
[2m[36m(pid=12799)[0m     @     0x55a44fe85a20 method_vectorcall
[2m[36m(pid=12799)[0m     @     0x55a44fdf9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12799)[0m     @     0x55a44fe84baf _PyEval_EvalCodeWithName
[2m[36m(pid=12799)[0m     @     0x55a44fe85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12799)[0m     @     0x55a44fdfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12799)[0m     @     0x55a44fe84baf _PyEval_EvalCodeWithName
[2m[36m(pid=12799)[0m     @     0x55a44fe85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12799)[0m     @     0x55a44fdfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12799)[0m     @     0x55a44fe84baf _PyEval_EvalCodeWithName
[2m[36m(pid=12799)[0m     @     0x55a44fe85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12799)[0m     @     0x55a44fdfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12799)[0m     @     0x55a44fe84baf _PyEval_EvalCodeWithName
[2m[36m(pid=12799)[0m     @     0x55a44fe85643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12799)[0m     @     0x55a44fdfa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12864)[0m     @     0x7f689c3354f5 at::Tensor::copy_()
[2m[36m(pid=12864)[0m     @     0x7f689e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12864)[0m     @     0x7f689c3354f5 at::Tensor::copy_()
[2m[36m(pid=12864)[0m     @     0x7f68a23e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12864)[0m     @     0x564d437a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12864)[0m     @     0x564d436fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12864)[0m     @     0x564d43787baf _PyEval_EvalCodeWithName
[2m[36m(pid=12864)[0m     @     0x564d43788a20 method_vectorcall
[2m[36m(pid=12864)[0m     @     0x564d436fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12864)[0m     @     0x564d43787baf _PyEval_EvalCodeWithName
[2m[36m(pid=12864)[0m     @     0x564d43788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12864)[0m     @     0x564d436fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12864)[0m     @     0x564d43787baf _PyEval_EvalCodeWithName
[2m[36m(pid=12864)[0m     @     0x564d43788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12864)[0m     @     0x564d436fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12864)[0m     @     0x564d43787baf _PyEval_EvalCodeWithName
[2m[36m(pid=12864)[0m     @     0x564d43788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12864)[0m     @     0x564d436fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12864)[0m     @     0x564d43787baf _PyEval_EvalCodeWithName
[2m[36m(pid=12864)[0m     @     0x564d43788643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12864)[0m     @     0x564d436fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12808)[0m     @     0x7ed70dfc38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12808)[0m     @     0x7ed70baf04f5 at::Tensor::copy_()
[2m[36m(pid=12808)[0m     @     0x7ed711b9b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12808)[0m     @     0x563eb3b83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12808)[0m     @     0x563eb3adeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12808)[0m     @     0x563eb3b69baf _PyEval_EvalCodeWithName
[2m[36m(pid=12808)[0m     @     0x563eb3b6aa20 method_vectorcall
[2m[36m(pid=12808)[0m     @     0x563eb3adebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12808)[0m     @     0x563eb3b69baf _PyEval_EvalCodeWithName
[2m[36m(pid=12808)[0m     @     0x563eb3b6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12808)[0m     @     0x563eb3adf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12808)[0m     @     0x563eb3b69baf _PyEval_EvalCodeWithName
[2m[36m(pid=12808)[0m     @     0x563eb3b6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12808)[0m     @     0x563eb3adf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12808)[0m     @     0x563eb3b69baf _PyEval_EvalCodeWithName
[2m[36m(pid=12808)[0m     @     0x563eb3b6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12808)[0m     @     0x563eb3adf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12808)[0m     @     0x563eb3b69baf _PyEval_EvalCodeWithName
[2m[36m(pid=12808)[0m     @     0x563eb3b6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12808)[0m     @     0x563eb3adf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x7f717bea2d91 at::TensorIterator::for_each()
[2m[36m(pid=12844)[0m     @     0x7f717c785b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12844)[0m     @     0x7f717c7a8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12803)[0m     @     0x7efe527b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12803)[0m     @     0x7efe502e04f5 at::Tensor::copy_()
[2m[36m(pid=12803)[0m     @     0x7efe5638b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12803)[0m     @     0x5645cf5cafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12803)[0m     @     0x5645cf525b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12803)[0m     @     0x5645cf5b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12803)[0m     @     0x5645cf5b1a20 method_vectorcall
[2m[36m(pid=12803)[0m     @     0x5645cf525bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12803)[0m     @     0x5645cf5b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12803)[0m     @     0x5645cf5b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12803)[0m     @     0x5645cf526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12803)[0m     @     0x5645cf5b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12803)[0m     @     0x5645cf5b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12803)[0m     @     0x5645cf526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12803)[0m     @     0x5645cf5b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12803)[0m     @     0x5645cf5b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12803)[0m     @     0x5645cf526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12803)[0m     @     0x5645cf5b0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12803)[0m     @     0x5645cf5b1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12803)[0m     @     0x5645cf526689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x7f2de906e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12797)[0m     @     0x7fc92118b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12797)[0m     @     0x7fc91ecb84f5 at::Tensor::copy_()
[2m[36m(pid=12797)[0m     @     0x7fc924d6379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12797)[0m     @     0x55a8cdeeffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12797)[0m     @     0x55a8cde4ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12797)[0m     @     0x55a8cded5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12797)[0m     @     0x55a8cded6a20 method_vectorcall
[2m[36m(pid=12797)[0m     @     0x55a8cde4abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12797)[0m     @     0x55a8cded5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12797)[0m     @     0x55a8cded6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12797)[0m     @     0x55a8cde4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12797)[0m     @     0x55a8cded5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12797)[0m     @     0x55a8cded6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12797)[0m     @     0x55a8cde4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12797)[0m     @     0x55a8cded5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12797)[0m     @     0x55a8cded6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12797)[0m     @     0x55a8cde4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12797)[0m     @     0x55a8cded5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12797)[0m     @     0x55a8cded6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12797)[0m     @     0x55a8cde4b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12832)[0m     @     0x7f271cc764f5 at::Tensor::copy_()
[2m[36m(pid=12832)[0m     @     0x7f2722d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12832)[0m     @     0x55634d065fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12832)[0m     @     0x55634cfc0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12832)[0m     @     0x55634d04bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12832)[0m     @     0x55634d04ca20 method_vectorcall
[2m[36m(pid=12832)[0m     @     0x55634cfc0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12832)[0m     @     0x55634d04bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12832)[0m     @     0x55634d04c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12832)[0m     @     0x55634cfc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12832)[0m     @     0x55634d04bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12832)[0m     @     0x55634d04c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12832)[0m     @     0x55634cfc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12832)[0m     @     0x55634d04bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12832)[0m     @     0x55634d04c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12832)[0m     @     0x55634cfc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12832)[0m     @     0x55634d04bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12832)[0m     @     0x55634d04c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12832)[0m     @     0x55634cfc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x7fc8212b54f5 at::Tensor::copy_()
[2m[36m(pid=12830)[0m     @     0x7fc82736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12830)[0m     @     0x5634cbf38fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12830)[0m     @     0x5634cbe93b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x5634cbf1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12830)[0m     @     0x5634cbf1fa20 method_vectorcall
[2m[36m(pid=12830)[0m     @     0x5634cbe93bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x5634cbf1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12830)[0m     @     0x5634cbf1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12830)[0m     @     0x5634cbe94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x5634cbf1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12830)[0m     @     0x5634cbf1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12830)[0m     @     0x5634cbe94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x5634cbf1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12830)[0m     @     0x5634cbf1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12830)[0m     @     0x5634cbe94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12830)[0m     @     0x5634cbf1ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12830)[0m     @     0x5634cbf1f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12830)[0m     @     0x5634cbe94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12845)[0m     @     0x7f185b5864f5 at::Tensor::copy_()
[2m[36m(pid=12845)[0m     @     0x7f186163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12845)[0m     @     0x556f33627fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12845)[0m     @     0x556f33582b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12845)[0m     @     0x556f3360dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12845)[0m     @     0x556f3360ea20 method_vectorcall
[2m[36m(pid=12845)[0m     @     0x556f33582bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12845)[0m     @     0x556f3360dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12845)[0m     @     0x556f3360e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12845)[0m     @     0x556f33583689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12845)[0m     @     0x556f3360dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12845)[0m     @     0x556f3360e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12845)[0m     @     0x556f33583689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12845)[0m     @     0x556f3360dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12845)[0m     @     0x556f3360e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12845)[0m     @     0x556f33583689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12845)[0m     @     0x556f3360dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12845)[0m     @     0x556f3360e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12845)[0m     @     0x556f33583689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12773)[0m     @     0x7f9aa23d84f5 at::Tensor::copy_()
[2m[36m(pid=12773)[0m     @     0x7f9aa848379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12773)[0m     @     0x55fb73a9bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12773)[0m     @     0x55fb739f6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12773)[0m     @     0x55fb73a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=12773)[0m     @     0x55fb73a82a20 method_vectorcall
[2m[36m(pid=12773)[0m     @     0x55fb739f6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12773)[0m     @     0x55fb73a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=12773)[0m     @     0x55fb73a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12773)[0m     @     0x55fb739f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12773)[0m     @     0x55fb73a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=12773)[0m     @     0x55fb73a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12773)[0m     @     0x55fb739f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12773)[0m     @     0x55fb73a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=12773)[0m     @     0x55fb73a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12773)[0m     @     0x55fb739f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12773)[0m     @     0x55fb73a81baf _PyEval_EvalCodeWithName
[2m[36m(pid=12773)[0m     @     0x55fb73a82643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12773)[0m     @     0x55fb739f7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12788)[0m     @     0x7f6ee64778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12788)[0m     @     0x7f6ee3fa44f5 at::Tensor::copy_()
[2m[36m(pid=12788)[0m     @     0x7f6eea04f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12788)[0m     @     0x5598cdd87fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12788)[0m     @     0x5598cdce2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12788)[0m     @     0x5598cdd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12788)[0m     @     0x5598cdd6ea20 method_vectorcall
[2m[36m(pid=12788)[0m     @     0x5598cdce2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12788)[0m     @     0x5598cdd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12788)[0m     @     0x5598cdd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12788)[0m     @     0x5598cdce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12788)[0m     @     0x5598cdd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12788)[0m     @     0x5598cdd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12788)[0m     @     0x5598cdce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12788)[0m     @     0x5598cdd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12788)[0m     @     0x5598cdd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12788)[0m     @     0x5598cdce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12788)[0m     @     0x5598cdd6dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12788)[0m     @     0x5598cdd6e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12788)[0m     @     0x5598cdce3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12781)[0m     @     0x7f74b17204f5 at::Tensor::copy_()
[2m[36m(pid=12781)[0m     @     0x7f74b77cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12781)[0m     @     0x5637d6485fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12781)[0m     @     0x5637d63e0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12781)[0m     @     0x5637d646bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12781)[0m     @     0x5637d646ca20 method_vectorcall
[2m[36m(pid=12781)[0m     @     0x5637d63e0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12781)[0m     @     0x5637d646bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12781)[0m     @     0x5637d646c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12781)[0m     @     0x5637d63e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12781)[0m     @     0x5637d646bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12781)[0m     @     0x5637d646c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12781)[0m     @     0x5637d63e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12781)[0m     @     0x5637d646bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12781)[0m     @     0x5637d646c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12781)[0m     @     0x5637d63e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12781)[0m     @     0x5637d646bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12781)[0m     @     0x5637d646c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12781)[0m     @     0x5637d63e1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12870)[0m     @     0x7f16d39cc4f5 at::Tensor::copy_()
[2m[36m(pid=12870)[0m     @     0x7f16d5e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12870)[0m     @     0x7f16d39cc4f5 at::Tensor::copy_()
[2m[36m(pid=12870)[0m     @     0x7f16d9a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12870)[0m     @     0x560bfff7afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12870)[0m     @     0x560bffed5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12870)[0m     @     0x560bfff60baf _PyEval_EvalCodeWithName
[2m[36m(pid=12870)[0m     @     0x560bfff61a20 method_vectorcall
[2m[36m(pid=12870)[0m     @     0x560bffed5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12870)[0m     @     0x560bfff60baf _PyEval_EvalCodeWithName
[2m[36m(pid=12870)[0m     @     0x560bfff61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12870)[0m     @     0x560bffed6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12870)[0m     @     0x560bfff60baf _PyEval_EvalCodeWithName
[2m[36m(pid=12870)[0m     @     0x560bfff61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12870)[0m     @     0x560bffed6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12870)[0m     @     0x560bfff60baf _PyEval_EvalCodeWithName
[2m[36m(pid=12870)[0m     @     0x560bfff61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12870)[0m     @     0x560bffed6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12870)[0m     @     0x560bfff60baf _PyEval_EvalCodeWithName
[2m[36m(pid=12870)[0m     @     0x560bfff61643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12870)[0m     @     0x560bffed6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12795)[0m     @     0x7f05aa69c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12795)[0m     @     0x56134591efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12795)[0m     @     0x561345879b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12795)[0m     @     0x561345904baf _PyEval_EvalCodeWithName
[2m[36m(pid=12795)[0m     @     0x561345905a20 method_vectorcall
[2m[36m(pid=12795)[0m     @     0x561345879bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12795)[0m     @     0x561345904baf _PyEval_EvalCodeWithName
[2m[36m(pid=12795)[0m     @     0x561345905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12795)[0m     @     0x56134587a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12795)[0m     @     0x561345904baf _PyEval_EvalCodeWithName
[2m[36m(pid=12795)[0m     @     0x561345905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12795)[0m     @     0x56134587a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12795)[0m     @     0x561345904baf _PyEval_EvalCodeWithName
[2m[36m(pid=12795)[0m     @     0x561345905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12795)[0m     @     0x56134587a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12795)[0m     @     0x561345904baf _PyEval_EvalCodeWithName
[2m[36m(pid=12795)[0m     @     0x561345905643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12795)[0m     @     0x56134587a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12849)[0m     @     0x7fb19d7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12849)[0m     @     0x7fb19b3124f5 at::Tensor::copy_()
[2m[36m(pid=12849)[0m     @     0x7fb1a13bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12849)[0m     @     0x55c03b6aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12849)[0m     @     0x55c03b605b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12849)[0m     @     0x55c03b690baf _PyEval_EvalCodeWithName
[2m[36m(pid=12849)[0m     @     0x55c03b691a20 method_vectorcall
[2m[36m(pid=12849)[0m     @     0x55c03b605bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12849)[0m     @     0x55c03b690baf _PyEval_EvalCodeWithName
[2m[36m(pid=12849)[0m     @     0x55c03b691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12849)[0m     @     0x55c03b606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12849)[0m     @     0x55c03b690baf _PyEval_EvalCodeWithName
[2m[36m(pid=12849)[0m     @     0x55c03b691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12849)[0m     @     0x55c03b606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12849)[0m     @     0x55c03b690baf _PyEval_EvalCodeWithName
[2m[36m(pid=12849)[0m     @     0x55c03b691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12849)[0m     @     0x55c03b606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12849)[0m     @     0x55c03b690baf _PyEval_EvalCodeWithName
[2m[36m(pid=12849)[0m     @     0x55c03b691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12849)[0m     @     0x55c03b606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12907)[0m     @     0x7f240388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12907)[0m     @     0x7f24013ba4f5 at::Tensor::copy_()
[2m[36m(pid=12907)[0m     @     0x7f240746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12907)[0m     @     0x55b2222c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12907)[0m     @     0x55b22221fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12907)[0m     @     0x55b2222aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=12907)[0m     @     0x55b2222aba20 method_vectorcall
[2m[36m(pid=12907)[0m     @     0x55b22221fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12907)[0m     @     0x55b2222aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=12907)[0m     @     0x55b2222ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12907)[0m     @     0x55b222220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12907)[0m     @     0x55b2222aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=12907)[0m     @     0x55b2222ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12907)[0m     @     0x55b222220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12907)[0m     @     0x55b2222aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=12907)[0m     @     0x55b2222ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12907)[0m     @     0x55b222220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12907)[0m     @     0x55b2222aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=12907)[0m     @     0x55b2222ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12907)[0m     @     0x55b222220689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12890)[0m     @     0x7f7c340f74f5 at::Tensor::copy_()
[2m[36m(pid=12890)[0m     @     0x7f7c3a1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12890)[0m     @     0x560222c5bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12890)[0m     @     0x560222bb6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12890)[0m     @     0x560222c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=12890)[0m     @     0x560222c42a20 method_vectorcall
[2m[36m(pid=12890)[0m     @     0x560222bb6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12890)[0m     @     0x560222c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=12890)[0m     @     0x560222c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12890)[0m     @     0x560222bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12890)[0m     @     0x560222c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=12890)[0m     @     0x560222c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12890)[0m     @     0x560222bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12890)[0m     @     0x560222c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=12890)[0m     @     0x560222c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12890)[0m     @     0x560222bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12890)[0m     @     0x560222c41baf _PyEval_EvalCodeWithName
[2m[36m(pid=12890)[0m     @     0x560222c42643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12890)[0m     @     0x560222bb7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12776)[0m     @     0x7ee8ef88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12776)[0m     @     0x7ee8ed3ba4f5 at::Tensor::copy_()
[2m[36m(pid=12776)[0m     @     0x7ee8f346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12776)[0m     @     0x564715e98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12776)[0m     @     0x564715df3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12776)[0m     @     0x564715e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12776)[0m     @     0x564715e7fa20 method_vectorcall
[2m[36m(pid=12776)[0m     @     0x564715df3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12776)[0m     @     0x564715e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12776)[0m     @     0x564715e7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12776)[0m     @     0x564715df4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12776)[0m     @     0x564715e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12776)[0m     @     0x564715e7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12776)[0m     @     0x564715df4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12776)[0m     @     0x564715e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12776)[0m     @     0x564715e7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12776)[0m     @     0x564715df4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12776)[0m     @     0x564715e7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12776)[0m     @     0x564715e7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12776)[0m     @     0x564715df4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12838)[0m     @     0x7faaeef698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=12838)[0m     @     0x7faaeef69ad3 at::TensorIterator::for_each()
[2m[36m(pid=12872)[0m     @     0x7ef3551a34f5 at::Tensor::copy_()
[2m[36m(pid=12872)[0m     @     0x7ef35b24e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12872)[0m     @     0x557af3d99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12872)[0m     @     0x557af3cf4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12872)[0m     @     0x557af3d7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12872)[0m     @     0x557af3d80a20 method_vectorcall
[2m[36m(pid=12872)[0m     @     0x557af3cf4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12872)[0m     @     0x557af3d7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12872)[0m     @     0x557af3d80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12872)[0m     @     0x557af3cf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12872)[0m     @     0x557af3d7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12872)[0m     @     0x557af3d80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12872)[0m     @     0x557af3cf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12872)[0m     @     0x557af3d7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12872)[0m     @     0x557af3d80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12872)[0m     @     0x557af3cf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12872)[0m     @     0x557af3d7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12872)[0m     @     0x557af3d80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12872)[0m     @     0x557af3cf5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12860)[0m     @     0x7f2566aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12860)[0m     @     0x7f25645f74f5 at::Tensor::copy_()
[2m[36m(pid=12860)[0m     @     0x7f256a6a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12860)[0m     @     0x564360ca8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12860)[0m     @     0x564360c03b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12860)[0m     @     0x564360c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12860)[0m     @     0x564360c8fa20 method_vectorcall
[2m[36m(pid=12860)[0m     @     0x564360c03bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12860)[0m     @     0x564360c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12860)[0m     @     0x564360c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12860)[0m     @     0x564360c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12860)[0m     @     0x564360c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12860)[0m     @     0x564360c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12860)[0m     @     0x564360c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12860)[0m     @     0x564360c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12860)[0m     @     0x564360c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12860)[0m     @     0x564360c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12860)[0m     @     0x564360c8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12860)[0m     @     0x564360c8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12860)[0m     @     0x564360c04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12793)[0m     @     0x7f4a186d64f5 at::Tensor::copy_()
[2m[36m(pid=12793)[0m     @     0x7f4a1e78179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12793)[0m     @     0x55d8eb202fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12793)[0m     @     0x55d8eb15db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12793)[0m     @     0x55d8eb1e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12793)[0m     @     0x55d8eb1e9a20 method_vectorcall
[2m[36m(pid=12793)[0m     @     0x55d8eb15dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12793)[0m     @     0x55d8eb1e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12793)[0m     @     0x55d8eb1e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12793)[0m     @     0x55d8eb15e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12793)[0m     @     0x55d8eb1e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12793)[0m     @     0x55d8eb1e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12793)[0m     @     0x55d8eb15e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12793)[0m     @     0x55d8eb1e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12793)[0m     @     0x55d8eb1e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12793)[0m     @     0x55d8eb15e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12793)[0m     @     0x55d8eb1e8baf _PyEval_EvalCodeWithName
[2m[36m(pid=12793)[0m     @     0x55d8eb1e9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12793)[0m     @     0x55d8eb15e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12774)[0m     @     0x559d2c4f1a20 method_vectorcall
[2m[36m(pid=12774)[0m     @     0x559d2c465bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12774)[0m     @     0x559d2c4f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12774)[0m     @     0x559d2c4f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12774)[0m     @     0x559d2c466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12774)[0m     @     0x559d2c4f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12774)[0m     @     0x559d2c4f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12774)[0m     @     0x559d2c466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12774)[0m     @     0x559d2c4f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12774)[0m     @     0x559d2c4f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12774)[0m     @     0x559d2c466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12774)[0m     @     0x559d2c4f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12774)[0m     @     0x559d2c4f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12774)[0m     @     0x559d2c466689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12778)[0m     @     0x563a8f462643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12778)[0m     @     0x563a8f3d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12778)[0m     @     0x563a8f461baf _PyEval_EvalCodeWithName
[2m[36m(pid=12778)[0m     @     0x563a8f462643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12778)[0m     @     0x563a8f3d7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12842)[0m     @     0x559e69017baf _PyEval_EvalCodeWithName
[2m[36m(pid=12842)[0m     @     0x559e69018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12842)[0m     @     0x559e68f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12842)[0m     @     0x559e69017baf _PyEval_EvalCodeWithName
[2m[36m(pid=12842)[0m     @     0x559e69018643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12842)[0m     @     0x559e68f8d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12895)[0m     @     0x563b9d264643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12895)[0m     @     0x563b9d1d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12839)[0m     @     0x7efc06dea4f5 at::Tensor::copy_()
[2m[36m(pid=12839)[0m     @     0x7efc0ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12839)[0m     @     0x55d6be25efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12839)[0m     @     0x55d6be1b9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12839)[0m     @     0x55d6be244baf _PyEval_EvalCodeWithName
[2m[36m(pid=12839)[0m     @     0x55d6be245a20 method_vectorcall
[2m[36m(pid=12839)[0m     @     0x55d6be1b9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12839)[0m     @     0x55d6be244baf _PyEval_EvalCodeWithName
[2m[36m(pid=12839)[0m     @     0x55d6be245643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12839)[0m     @     0x55d6be1ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12839)[0m     @     0x55d6be244baf _PyEval_EvalCodeWithName
[2m[36m(pid=12839)[0m     @     0x55d6be245643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12839)[0m     @     0x55d6be1ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12839)[0m     @     0x55d6be244baf _PyEval_EvalCodeWithName
[2m[36m(pid=12839)[0m     @     0x55d6be245643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12839)[0m     @     0x55d6be1ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12839)[0m     @     0x55d6be244baf _PyEval_EvalCodeWithName
[2m[36m(pid=12839)[0m     @     0x55d6be245643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12839)[0m     @     0x55d6be1ba689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12829)[0m     @     0x7fb069db28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12829)[0m     @     0x7fb0678df4f5 at::Tensor::copy_()
[2m[36m(pid=12829)[0m     @     0x7fb06d98a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12829)[0m     @     0x55565eefbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12829)[0m     @     0x55565ee56b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12829)[0m     @     0x55565eee1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12829)[0m     @     0x55565eee2a20 method_vectorcall
[2m[36m(pid=12829)[0m     @     0x55565ee56bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12829)[0m     @     0x55565eee1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12829)[0m     @     0x55565eee2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12829)[0m     @     0x55565ee57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12829)[0m     @     0x55565eee1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12829)[0m     @     0x55565eee2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12829)[0m     @     0x55565ee57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12829)[0m     @     0x55565eee1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12829)[0m     @     0x55565eee2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12829)[0m     @     0x55565ee57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12848)[0m     @     0x7f97e9a9c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12848)[0m     @     0x7f97e75c94f5 at::Tensor::copy_()
[2m[36m(pid=12848)[0m     @     0x7f97ed67479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12848)[0m     @     0x558ca9259fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12848)[0m     @     0x558ca91b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12848)[0m     @     0x558ca923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12848)[0m     @     0x558ca9240a20 method_vectorcall
[2m[36m(pid=12848)[0m     @     0x558ca91b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12848)[0m     @     0x558ca923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12848)[0m     @     0x558ca9240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12848)[0m     @     0x558ca91b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12848)[0m     @     0x558ca923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12848)[0m     @     0x558ca9240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12848)[0m     @     0x558ca91b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12848)[0m     @     0x558ca923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12848)[0m     @     0x558ca9240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12848)[0m     @     0x558ca91b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12848)[0m     @     0x558ca923fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12848)[0m     @     0x558ca9240643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12848)[0m     @     0x558ca91b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12802)[0m     @     0x7f269b1e04f5 at::Tensor::copy_()
[2m[36m(pid=12802)[0m     @     0x7f26a128b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12802)[0m     @     0x556a3d589fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12802)[0m     @     0x556a3d4e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12802)[0m     @     0x556a3d56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12802)[0m     @     0x556a3d570a20 method_vectorcall
[2m[36m(pid=12802)[0m     @     0x556a3d4e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12802)[0m     @     0x556a3d56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12802)[0m     @     0x556a3d570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12802)[0m     @     0x556a3d4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12802)[0m     @     0x556a3d56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12802)[0m     @     0x556a3d570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12802)[0m     @     0x556a3d4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12802)[0m     @     0x556a3d56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12802)[0m     @     0x556a3d570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12802)[0m     @     0x556a3d4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12802)[0m     @     0x556a3d56fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12802)[0m     @     0x556a3d570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12802)[0m     @     0x556a3d4e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12855)[0m     @     0x55bcfc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12855)[0m     @     0x55bcfc9a0baf _PyEval_EvalCodeWithName
[2m[36m(pid=12855)[0m     @     0x55bcfc9a1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12855)[0m     @     0x55bcfc916689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12852)[0m     @     0x7f5e2f22b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12852)[0m     @     0x55f72ce19fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12852)[0m     @     0x55f72cd74b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12852)[0m     @     0x55f72cdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12852)[0m     @     0x55f72ce00a20 method_vectorcall
[2m[36m(pid=12852)[0m     @     0x55f72cd74bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12852)[0m     @     0x55f72cdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12852)[0m     @     0x55f72ce00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12852)[0m     @     0x55f72cd75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12852)[0m     @     0x55f72cdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12852)[0m     @     0x55f72ce00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12852)[0m     @     0x55f72cd75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12852)[0m     @     0x55f72cdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12852)[0m     @     0x55f72ce00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12852)[0m     @     0x55f72cd75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12852)[0m     @     0x55f72cdffbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12852)[0m     @     0x55f72ce00643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12852)[0m     @     0x55f72cd75689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12785)[0m     @     0x55bfb23dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12785)[0m     @     0x55bfb23dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12785)[0m     @     0x55bfb2352689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12785)[0m     @     0x55bfb23dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12785)[0m     @     0x55bfb23dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12785)[0m     @     0x55bfb2352689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12785)[0m     @     0x55bfb23dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12785)[0m     @     0x55bfb23dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12785)[0m     @     0x55bfb2352689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12785)[0m     @     0x55bfb23dcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12785)[0m     @     0x55bfb23dd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12785)[0m     @     0x55bfb2352689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12775)[0m     @     0x55f809e0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12775)[0m     @     0x55f809d66b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12775)[0m     @     0x55f809df1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12775)[0m     @     0x55f809df2a20 method_vectorcall
[2m[36m(pid=12775)[0m     @     0x55f809d66bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12775)[0m     @     0x55f809df1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12775)[0m     @     0x55f809df2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12775)[0m     @     0x55f809d67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12775)[0m     @     0x55f809df1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12775)[0m     @     0x55f809df2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12775)[0m     @     0x55f809d67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12775)[0m     @     0x55f809df1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12775)[0m     @     0x55f809df2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12775)[0m     @     0x55f809d67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12775)[0m     @     0x55f809df1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12775)[0m     @     0x55f809df2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12775)[0m     @     0x55f809d67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12901)[0m     @     0x556633bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12901)[0m     @     0x556633bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12901)[0m     @     0x556633b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12901)[0m     @     0x556633bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12901)[0m     @     0x556633bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12901)[0m     @     0x556633b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12901)[0m     @     0x556633bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12901)[0m     @     0x556633bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12901)[0m     @     0x556633b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12901)[0m     @     0x556633bd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=12901)[0m     @     0x556633bd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12901)[0m     @     0x556633b4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12853)[0m     @     0x56275e05bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12853)[0m     @     0x56275e05ca20 method_vectorcall
[2m[36m(pid=12853)[0m     @     0x56275dfd0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12853)[0m     @     0x56275e05bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12853)[0m     @     0x56275e05c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12853)[0m     @     0x56275dfd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12853)[0m     @     0x56275e05bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12853)[0m     @     0x56275e05c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12853)[0m     @     0x56275dfd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12853)[0m     @     0x56275e05bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12853)[0m     @     0x56275e05c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12853)[0m     @     0x56275dfd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12853)[0m     @     0x56275e05bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12853)[0m     @     0x56275e05c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12853)[0m     @     0x56275dfd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m     @     0x7ee7757ce4f5 at::Tensor::copy_()
[2m[36m(pid=12846)[0m     @     0x7ee77b87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12846)[0m     @     0x5559a7195fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12846)[0m     @     0x5559a70f0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m     @     0x5559a717bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12846)[0m     @     0x5559a717ca20 method_vectorcall
[2m[36m(pid=12846)[0m     @     0x5559a70f0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m     @     0x5559a717bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12846)[0m     @     0x5559a717c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12846)[0m     @     0x5559a70f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m     @     0x5559a717bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12846)[0m     @     0x5559a717c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12846)[0m     @     0x5559a70f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m     @     0x5559a717bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12846)[0m     @     0x5559a717c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12846)[0m     @     0x5559a70f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12846)[0m     @     0x5559a717bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12846)[0m     @     0x5559a717c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12846)[0m     @     0x5559a70f1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x7f2322a14d91 at::TensorIterator::for_each()
[2m[36m(pid=12807)[0m     @     0x7f23232f7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12904)[0m     @     0x7fa3dc116d91 at::TensorIterator::for_each()
[2m[36m(pid=12904)[0m     @     0x7fa3dc9f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12904)[0m     @     0x7fa3dca1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12878)[0m     @     0x7ecf4e957d91 at::TensorIterator::for_each()
[2m[36m(pid=12878)[0m     @     0x7ecf4f23ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12878)[0m     @     0x7ecf4f25dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12878)[0m     @     0x7ecf4e6ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12878)[0m     @     0x7ecf4e6fd388 at::native::copy_impl()
[2m[36m(pid=12847)[0m     @     0x7f2e1be9f4f5 at::Tensor::copy_()
[2m[36m(pid=12847)[0m     @     0x7f2e21f4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12847)[0m     @     0x557bfa858fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12847)[0m     @     0x557bfa7b3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12847)[0m     @     0x557bfa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12847)[0m     @     0x557bfa83fa20 method_vectorcall
[2m[36m(pid=12847)[0m     @     0x557bfa7b3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12847)[0m     @     0x557bfa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12847)[0m     @     0x557bfa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12847)[0m     @     0x557bfa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12847)[0m     @     0x557bfa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12847)[0m     @     0x557bfa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12847)[0m     @     0x557bfa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12847)[0m     @     0x557bfa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12847)[0m     @     0x557bfa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12847)[0m     @     0x557bfa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12847)[0m     @     0x557bfa83ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12847)[0m     @     0x557bfa83f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12847)[0m     @     0x557bfa7b4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12787)[0m     @     0x7f2f3b202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12787)[0m     @     0x7f2f3b200388 at::native::copy_impl()
[2m[36m(pid=12787)[0m     @     0x7f2f3b2025a4 at::native::copy_()
[2m[36m(pid=12888)[0m     @     0x7f3dda5e24f5 at::Tensor::copy_()
[2m[36m(pid=12888)[0m     @     0x7f3de068d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12888)[0m     @     0x564fd3521fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12888)[0m     @     0x564fd347cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12888)[0m     @     0x564fd3507baf _PyEval_EvalCodeWithName
[2m[36m(pid=12888)[0m     @     0x564fd3508a20 method_vectorcall
[2m[36m(pid=12888)[0m     @     0x564fd347cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12888)[0m     @     0x564fd3507baf _PyEval_EvalCodeWithName
[2m[36m(pid=12888)[0m     @     0x564fd3508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12888)[0m     @     0x564fd347d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12888)[0m     @     0x564fd3507baf _PyEval_EvalCodeWithName
[2m[36m(pid=12888)[0m     @     0x564fd3508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12888)[0m     @     0x564fd347d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12888)[0m     @     0x564fd3507baf _PyEval_EvalCodeWithName
[2m[36m(pid=12888)[0m     @     0x564fd3508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12888)[0m     @     0x564fd347d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12888)[0m     @     0x564fd3507baf _PyEval_EvalCodeWithName
[2m[36m(pid=12888)[0m     @     0x564fd3508643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12888)[0m     @     0x564fd347d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12805)[0m     @     0x7ed3260b84f5 at::Tensor::copy_()
[2m[36m(pid=12805)[0m     @     0x7ed32c16379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12805)[0m     @     0x562b65a98fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12805)[0m     @     0x562b659f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12805)[0m     @     0x562b65a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12805)[0m     @     0x562b65a7fa20 method_vectorcall
[2m[36m(pid=12805)[0m     @     0x562b659f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12805)[0m     @     0x562b65a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12805)[0m     @     0x562b65a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12805)[0m     @     0x562b659f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12805)[0m     @     0x562b65a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12805)[0m     @     0x562b65a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12805)[0m     @     0x562b659f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12805)[0m     @     0x562b65a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12805)[0m     @     0x562b65a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12805)[0m     @     0x562b659f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12805)[0m     @     0x562b65a7ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12805)[0m     @     0x562b65a7f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12805)[0m     @     0x562b659f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12880)[0m     @     0x55c024632bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12880)[0m     @     0x55c0246bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12880)[0m     @     0x55c0246be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12880)[0m     @     0x55c024633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12880)[0m     @     0x55c0246bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12880)[0m     @     0x55c0246be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12880)[0m     @     0x55c024633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12880)[0m     @     0x55c0246bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12880)[0m     @     0x55c0246be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12880)[0m     @     0x55c024633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12880)[0m     @     0x55c0246bdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=12880)[0m     @     0x55c0246be643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12880)[0m     @     0x55c024633689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12780)[0m     @     0x55996c606baf _PyEval_EvalCodeWithName
[2m[36m(pid=12780)[0m     @     0x55996c607643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12780)[0m     @     0x55996c57c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x7f9976bfdd91 at::TensorIterator::for_each()
[2m[36m(pid=12796)[0m     @     0x7f99774e0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12796)[0m     @     0x7f9977503c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12796)[0m     @     0x7f99769a5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12796)[0m     @     0x7f99769a3388 at::native::copy_impl()
[2m[36m(pid=12873)[0m     @     0x7f5124e4b4f5 at::Tensor::copy_()
[2m[36m(pid=12873)[0m     @     0x7f512aef679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12873)[0m     @     0x55d71b808fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12873)[0m     @     0x55d71b763b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12873)[0m     @     0x55d71b7eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12873)[0m     @     0x55d71b7efa20 method_vectorcall
[2m[36m(pid=12873)[0m     @     0x55d71b763bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12873)[0m     @     0x55d71b7eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12873)[0m     @     0x55d71b7ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12873)[0m     @     0x55d71b764689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12873)[0m     @     0x55d71b7eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12873)[0m     @     0x55d71b7ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12873)[0m     @     0x55d71b764689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12873)[0m     @     0x55d71b7eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12873)[0m     @     0x55d71b7ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12873)[0m     @     0x55d71b764689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12873)[0m     @     0x55d71b7eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=12873)[0m     @     0x55d71b7ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12873)[0m     @     0x55d71b764689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x7f717bc4aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12794)[0m     @     0x7f2de906ead3 at::TensorIterator::for_each()
[2m[36m(pid=12838)[0m     @     0x7faaeef69d91 at::TensorIterator::for_each()
[2m[36m(pid=12838)[0m     @     0x7faaef84cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12838)[0m     @     0x7faaef86fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12838)[0m     @     0x7faaeed11a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12838)[0m     @     0x7faaeed0f388 at::native::copy_impl()
[2m[36m(pid=12838)[0m     @     0x7faaeed115a4 at::native::copy_()
[2m[36m(pid=12829)[0m     @     0x55565eee1baf _PyEval_EvalCodeWithName
[2m[36m(pid=12829)[0m     @     0x55565eee2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12829)[0m     @     0x55565ee57689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x7f232331ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12807)[0m     @     0x7f23227bca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12807)[0m     @     0x7f23227ba388 at::native::copy_impl()
[2m[36m(pid=12807)[0m     @     0x7f23227bc5a4 at::native::copy_()
[2m[36m(pid=12878)[0m     @     0x7ecf4e6ff5a4 at::native::copy_()
[2m[36m(pid=12878)[0m     @     0x7ecf4edea4f5 at::Tensor::copy_()
[2m[36m(pid=12787)[0m     @     0x7f2f3b8ed4f5 at::Tensor::copy_()
[2m[36m(pid=12787)[0m     @     0x7f2f3ddc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12787)[0m     @     0x7f2f3b8ed4f5 at::Tensor::copy_()
[2m[36m(pid=12796)[0m     @     0x7f99769a55a4 at::native::copy_()
[2m[36m(pid=12796)[0m     @     0x7f99770904f5 at::Tensor::copy_()
[2m[36m(pid=12796)[0m     @     0x7f99795638de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12844)[0m     @     0x7f717bc48388 at::native::copy_impl()
[2m[36m(pid=12844)[0m     @     0x7f717bc4a5a4 at::native::copy_()
[2m[36m(pid=12844)[0m     @     0x7f717c3354f5 at::Tensor::copy_()
[2m[36m(pid=12844)[0m     @     0x7f717e8088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12794)[0m     @     0x7f2de906ed91 at::TensorIterator::for_each()
[2m[36m(pid=12794)[0m     @     0x7f2de9951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=12794)[0m     @     0x7f2de9974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=12838)[0m     @     0x7faaef3fc4f5 at::Tensor::copy_()
[2m[36m(pid=12807)[0m     @     0x7f2322ea74f5 at::Tensor::copy_()
[2m[36m(pid=12807)[0m     @     0x7f232537a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12904)[0m     @     0x7fa3dbebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12878)[0m     @     0x7ecf512bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12878)[0m     @     0x7ecf4edea4f5 at::Tensor::copy_()
[2m[36m(pid=12878)[0m     @     0x7ecf54e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12878)[0m     @     0x56065a91dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12878)[0m     @     0x56065a878b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12878)[0m     @     0x56065a903baf _PyEval_EvalCodeWithName
[2m[36m(pid=12878)[0m     @     0x56065a904a20 method_vectorcall
[2m[36m(pid=12878)[0m     @     0x56065a878bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12878)[0m     @     0x56065a903baf _PyEval_EvalCodeWithName
[2m[36m(pid=12878)[0m     @     0x56065a904643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12878)[0m     @     0x56065a879689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12878)[0m     @     0x56065a903baf _PyEval_EvalCodeWithName
[2m[36m(pid=12878)[0m     @     0x56065a904643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12878)[0m     @     0x56065a879689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12878)[0m     @     0x56065a903baf _PyEval_EvalCodeWithName
[2m[36m(pid=12878)[0m     @     0x56065a904643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12878)[0m     @     0x56065a879689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12878)[0m     @     0x56065a903baf _PyEval_EvalCodeWithName
[2m[36m(pid=12878)[0m     @     0x56065a904643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12878)[0m     @     0x56065a879689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12787)[0m     @     0x7f2f4199879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12787)[0m     @     0x5565a5892fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12787)[0m     @     0x5565a57edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12787)[0m     @     0x5565a5878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12787)[0m     @     0x5565a5879a20 method_vectorcall
[2m[36m(pid=12787)[0m     @     0x5565a57edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12787)[0m     @     0x5565a5878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12787)[0m     @     0x5565a5879643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12787)[0m     @     0x5565a57ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12787)[0m     @     0x5565a5878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12787)[0m     @     0x5565a5879643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12787)[0m     @     0x5565a57ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12787)[0m     @     0x5565a5878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12787)[0m     @     0x5565a5879643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12787)[0m     @     0x5565a57ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12787)[0m     @     0x5565a5878baf _PyEval_EvalCodeWithName
[2m[36m(pid=12787)[0m     @     0x5565a5879643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12787)[0m     @     0x5565a57ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x7f99770904f5 at::Tensor::copy_()
[2m[36m(pid=12796)[0m     @     0x7f997d13b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12796)[0m     @     0x558d2e193fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12796)[0m     @     0x558d2e0eeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x558d2e179baf _PyEval_EvalCodeWithName
[2m[36m(pid=12796)[0m     @     0x558d2e17aa20 method_vectorcall
[2m[36m(pid=12796)[0m     @     0x558d2e0eebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x558d2e179baf _PyEval_EvalCodeWithName
[2m[36m(pid=12796)[0m     @     0x558d2e17a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12796)[0m     @     0x558d2e0ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x558d2e179baf _PyEval_EvalCodeWithName
[2m[36m(pid=12796)[0m     @     0x558d2e17a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12796)[0m     @     0x558d2e0ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x558d2e179baf _PyEval_EvalCodeWithName
[2m[36m(pid=12796)[0m     @     0x558d2e17a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12796)[0m     @     0x558d2e0ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12796)[0m     @     0x558d2e179baf _PyEval_EvalCodeWithName
[2m[36m(pid=12796)[0m     @     0x558d2e17a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12796)[0m     @     0x558d2e0ef689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x7f717c3354f5 at::Tensor::copy_()
[2m[36m(pid=12844)[0m     @     0x7f71823e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12844)[0m     @     0x55bfcb66dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12844)[0m     @     0x55bfcb5c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x55bfcb653baf _PyEval_EvalCodeWithName
[2m[36m(pid=12844)[0m     @     0x55bfcb654a20 method_vectorcall
[2m[36m(pid=12844)[0m     @     0x55bfcb5c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x55bfcb653baf _PyEval_EvalCodeWithName
[2m[36m(pid=12844)[0m     @     0x55bfcb654643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12844)[0m     @     0x55bfcb5c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x55bfcb653baf _PyEval_EvalCodeWithName
[2m[36m(pid=12844)[0m     @     0x55bfcb654643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12844)[0m     @     0x55bfcb5c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x55bfcb653baf _PyEval_EvalCodeWithName
[2m[36m(pid=12844)[0m     @     0x55bfcb654643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12844)[0m     @     0x55bfcb5c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12844)[0m     @     0x55bfcb653baf _PyEval_EvalCodeWithName
[2m[36m(pid=12844)[0m     @     0x55bfcb654643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12844)[0m     @     0x55bfcb5c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x7f2de8e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=12838)[0m     @     0x7faaf18cf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12838)[0m     @     0x7faaef3fc4f5 at::Tensor::copy_()
[2m[36m(pid=12838)[0m     @     0x7faaf54a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12838)[0m     @     0x563991acffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12838)[0m     @     0x563991a2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12838)[0m     @     0x563991ab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12838)[0m     @     0x563991ab6a20 method_vectorcall
[2m[36m(pid=12838)[0m     @     0x563991a2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12838)[0m     @     0x563991ab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12838)[0m     @     0x563991ab6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12838)[0m     @     0x563991a2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12838)[0m     @     0x563991ab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12838)[0m     @     0x563991ab6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12838)[0m     @     0x563991a2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12838)[0m     @     0x563991ab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12838)[0m     @     0x563991ab6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12838)[0m     @     0x563991a2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12838)[0m     @     0x563991ab5baf _PyEval_EvalCodeWithName
[2m[36m(pid=12838)[0m     @     0x563991ab6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12838)[0m     @     0x563991a2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x7f2322ea74f5 at::Tensor::copy_()
[2m[36m(pid=12807)[0m     @     0x7f2328f5279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12807)[0m     @     0x56535c692fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12807)[0m     @     0x56535c5edb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x56535c678baf _PyEval_EvalCodeWithName
[2m[36m(pid=12807)[0m     @     0x56535c679a20 method_vectorcall
[2m[36m(pid=12807)[0m     @     0x56535c5edbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x56535c678baf _PyEval_EvalCodeWithName
[2m[36m(pid=12807)[0m     @     0x56535c679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12807)[0m     @     0x56535c5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x56535c678baf _PyEval_EvalCodeWithName
[2m[36m(pid=12807)[0m     @     0x56535c679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12807)[0m     @     0x56535c5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x56535c678baf _PyEval_EvalCodeWithName
[2m[36m(pid=12807)[0m     @     0x56535c679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12807)[0m     @     0x56535c5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12807)[0m     @     0x56535c678baf _PyEval_EvalCodeWithName
[2m[36m(pid=12807)[0m     @     0x56535c679643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12807)[0m     @     0x56535c5ee689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12904)[0m     @     0x7fa3dbebc388 at::native::copy_impl()
[2m[36m(pid=12794)[0m     @     0x7f2de8e14388 at::native::copy_impl()
[2m[36m(pid=12794)[0m     @     0x7f2de8e165a4 at::native::copy_()
[2m[36m(pid=12904)[0m     @     0x7fa3dbebe5a4 at::native::copy_()
[2m[36m(pid=12904)[0m     @     0x7fa3dc5a94f5 at::Tensor::copy_()
2020-11-05 10:19:06,112	ERROR trial_runner.py:567 -- Trial PPO_jss_env_516a6_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=12908, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=12794)[0m     @     0x7f2de95014f5 at::Tensor::copy_()
[2m[36m(pid=12794)[0m     @     0x7f2deb9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12908)[0m E1105 10:19:06.103467 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=1e9c16c25b494a4a43fb47bd01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=12908)[0m E1105 10:19:06.103634 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=61afdfe40390d0a343fb47bd01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=12908)[0m E1105 10:19:06.115600 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=12908)[0m E1105 10:19:06.115759 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=12908)[0m E1105 10:19:06.117105 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=3e4916e36cb3ce60252160a301000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=12908)[0m E1105 10:19:06.117214 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c2d663ba592886f5252160a301000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:19:06.106379 12732 12732 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:19:06.116394 12732 12732 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
== Status ==
Memory usage on this node: 27.6/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_516a6_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_516a6_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_516a6_00000_0_2020-11-05_10-18-58/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 10:19:06,130	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 10:19:06,131	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:19:06,131	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
2020-11-05 10:19:06,131	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff0314ce3001000000.

== Status ==
Memory usage on this node: 27.4/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.2 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_516a6_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_516a6_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_516a6_00000_0_2020-11-05_10-18-58/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

[2m[36m(pid=12904)[0m     @     0x7fa3dea7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=12904)[0m     @     0x7fa3dc5a94f5 at::Tensor::copy_()
[2m[36m(pid=12904)[0m     @     0x7fa3e265479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12904)[0m     @     0x559a600f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12904)[0m     @     0x559a6004cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12904)[0m     @     0x559a600d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12904)[0m     @     0x559a600d8a20 method_vectorcall
[2m[36m(pid=12904)[0m     @     0x559a6004cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12904)[0m     @     0x559a600d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12904)[0m     @     0x559a600d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12904)[0m     @     0x559a6004d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12904)[0m     @     0x559a600d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12904)[0m     @     0x559a600d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12904)[0m     @     0x559a6004d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12904)[0m     @     0x559a600d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12904)[0m     @     0x559a600d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12904)[0m     @     0x559a6004d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12904)[0m     @     0x559a600d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=12904)[0m     @     0x559a600d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12904)[0m     @     0x559a6004d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x7f2de95014f5 at::Tensor::copy_()
[2m[36m(pid=12794)[0m     @     0x7f5cb4dbe79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=12794)[0m     @     0x55d69f96cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=12794)[0m     @     0x55d69f8c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x55d69f952baf _PyEval_EvalCodeWithName
[2m[36m(pid=12794)[0m     @     0x55d69f953a20 method_vectorcall
[2m[36m(pid=12794)[0m     @     0x55d69f8c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x55d69f952baf _PyEval_EvalCodeWithName
[2m[36m(pid=12794)[0m     @     0x55d69f953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12794)[0m     @     0x55d69f8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x55d69f952baf _PyEval_EvalCodeWithName
[2m[36m(pid=12794)[0m     @     0x55d69f953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12794)[0m     @     0x55d69f8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x55d69f952baf _PyEval_EvalCodeWithName
[2m[36m(pid=12794)[0m     @     0x55d69f953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12794)[0m     @     0x55d69f8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12794)[0m     @     0x55d69f952baf _PyEval_EvalCodeWithName
[2m[36m(pid=12794)[0m     @     0x55d69f953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=12794)[0m     @     0x55d69f8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=12908)[0m E1105 10:19:06.123239 12908 14036 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=12908)[0m E1105 10:19:06.127506 12908 14036 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=10a4a4113c6c36ea43fb47bd01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=43fb47bd01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=12908)[0m E1105 10:19:06.127771 12908 14036 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=457f03c785986c89252160a301000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=252160a301000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=12908)[0m E1105 10:19:06.129791 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=f4d9d8a5e202b0910314ce3001000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=12908)[0m E1105 10:19:06.129943 12908 14036 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=8b0b449b9f08d0430314ce3001000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=12908)[0m E1105 10:19:06.130487 12908 14036 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=ad47e6e6a1a1660b0314ce3001000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=0314ce3001000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
2020-11-05 10:19:06,141	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
2020-11-05 10:19:06,142	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff091d563401000000.
2020-11-05 10:19:06,142	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff821ddf4301000000.
2020-11-05 10:19:06,142	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_516a6_00000])
