2020-11-05 11:01:59,347	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_54445_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=18971)[0m 2020-11-05 11:02:02,053	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=18905)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18905)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18905)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18905)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18905)[0m *** SIGSEGV (@0x0) received by PID 18905 (TID 0x7f12f05ff700) from PID 0; stack trace: ***
[2m[36m(pid=18905)[0m     @     0x7f12f01d8390 (unknown)
[2m[36m(pid=18905)[0m     @     0x7ee3f2293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18905)[0m     @     0x7ee3ef58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18921)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18921)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18921)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18921)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18921)[0m *** SIGSEGV (@0x0) received by PID 18921 (TID 0x7f71fbbbc700) from PID 0; stack trace: ***
[2m[36m(pid=18921)[0m     @     0x7f71fb795390 (unknown)
[2m[36m(pid=18921)[0m     @     0x7f42fd925fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18921)[0m     @     0x7f42fac1964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18921)[0m     @     0x7f42fac1c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18935)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18935)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18935)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18935)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18935)[0m *** SIGSEGV (@0x0) received by PID 18935 (TID 0x7f5ffb007700) from PID 0; stack trace: ***
[2m[36m(pid=18935)[0m     @     0x7f5ffabe0390 (unknown)
[2m[36m(pid=18935)[0m     @     0x7f30fcc98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18935)[0m     @     0x7f30f9f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18935)[0m     @     0x7f30f9f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18890)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18890)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18890)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18890)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18890)[0m *** SIGSEGV (@0x0) received by PID 18890 (TID 0x7fb73f499700) from PID 0; stack trace: ***
[2m[36m(pid=18890)[0m     @     0x7fb73f072390 (unknown)
[2m[36m(pid=18890)[0m     @     0x7f884128bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18890)[0m     @     0x7f883e57f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18890)[0m     @     0x7f883e582977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18906)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18906)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18906)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18906)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18906)[0m *** SIGSEGV (@0x0) received by PID 18906 (TID 0x7fdd0cfbb700) from PID 0; stack trace: ***
[2m[36m(pid=18906)[0m     @     0x7fdd0cb94390 (unknown)
[2m[36m(pid=18906)[0m     @     0x7fae0ed02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18906)[0m     @     0x7fae0bff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18968)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18968)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18968)[0m *** Aborted at 1604574127 (unix time) try "date -d @1604574127" if you are using GNU date ***
[2m[36m(pid=18968)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18968)[0m *** SIGSEGV (@0x0) received by PID 18968 (TID 0x7f7498722700) from PID 0; stack trace: ***
[2m[36m(pid=18968)[0m     @     0x7f74982fb390 (unknown)
[2m[36m(pid=18968)[0m     @     0x7f459a507fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18968)[0m     @     0x7f45977fb64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18968)[0m     @     0x7f45977fe977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18968)[0m     @     0x7f45977feb53 at::TensorIterator::for_each()
[2m[36m(pid=18902)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18902)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18902)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18902)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18902)[0m *** SIGSEGV (@0x0) received by PID 18902 (TID 0x7f71a2bf4700) from PID 0; stack trace: ***
[2m[36m(pid=18902)[0m     @     0x7f71a27cd390 (unknown)
[2m[36m(pid=18902)[0m     @     0x7f42a4770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18902)[0m     @     0x7f42a1a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18902)[0m     @     0x7f42a1a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18958)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18958)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18958)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18958)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18958)[0m *** SIGSEGV (@0x0) received by PID 18958 (TID 0x7f65c6932700) from PID 0; stack trace: ***
[2m[36m(pid=18958)[0m     @     0x7f65c650b390 (unknown)
[2m[36m(pid=18958)[0m     @     0x7f36c8703fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18958)[0m     @     0x7f36c59f764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18958)[0m     @     0x7f36c59fa977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18948)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18948)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18948)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18948)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18948)[0m *** SIGSEGV (@0x0) received by PID 18948 (TID 0x7f25b4231700) from PID 0; stack trace: ***
[2m[36m(pid=18948)[0m     @     0x7f25b3e0a390 (unknown)
[2m[36m(pid=18948)[0m     @     0x7ef6b6015fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18948)[0m     @     0x7ef6b330964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18948)[0m     @     0x7ef6b330c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18947)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18947)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18947)[0m *** Aborted at 1604574127 (unix time) try "date -d @1604574127" if you are using GNU date ***
[2m[36m(pid=18947)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18947)[0m *** SIGSEGV (@0x0) received by PID 18947 (TID 0x7fa780a27700) from PID 0; stack trace: ***
[2m[36m(pid=18947)[0m     @     0x7fa780600390 (unknown)
[2m[36m(pid=18947)[0m     @     0x7f7882818fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18947)[0m     @     0x7f787fb0c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18947)[0m     @     0x7f787fb0f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18947)[0m     @     0x7f787fb0fb53 at::TensorIterator::for_each()
[2m[36m(pid=18955)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18955)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18955)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18955)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18955)[0m *** SIGSEGV (@0x0) received by PID 18955 (TID 0x7f33b6c35700) from PID 0; stack trace: ***
[2m[36m(pid=18955)[0m     @     0x7f33b680e390 (unknown)
[2m[36m(pid=18955)[0m     @     0x7f04b8981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18955)[0m     @     0x7f04b5c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18955)[0m     @     0x7f04b5c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18952)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18952)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18952)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18952)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18952)[0m *** SIGSEGV (@0x0) received by PID 18952 (TID 0x7f873fec3700) from PID 0; stack trace: ***
[2m[36m(pid=18952)[0m     @     0x7f873fa9c390 (unknown)
[2m[36m(pid=18952)[0m     @     0x7f5841c9afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18952)[0m     @     0x7f583ef8e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18952)[0m     @     0x7f583ef91977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18930)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18930)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18930)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18930)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18930)[0m *** SIGSEGV (@0x0) received by PID 18930 (TID 0x7fa6c863f700) from PID 0; stack trace: ***
[2m[36m(pid=18930)[0m     @     0x7fa6c8218390 (unknown)
[2m[36m(pid=18930)[0m     @     0x7f77ca344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18930)[0m     @     0x7f77c763864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18930)[0m     @     0x7f77c763b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18886)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18886)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18886)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18886)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18886)[0m *** SIGSEGV (@0x0) received by PID 18886 (TID 0x7f8b5e949700) from PID 0; stack trace: ***
[2m[36m(pid=18886)[0m     @     0x7f8b5e522390 (unknown)
[2m[36m(pid=18886)[0m     @     0x7f5c605dcfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18886)[0m     @     0x7f5c5d8d064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18899)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18899)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18899)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18899)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18899)[0m *** SIGSEGV (@0x0) received by PID 18899 (TID 0x7fecc697c700) from PID 0; stack trace: ***
[2m[36m(pid=18899)[0m     @     0x7fecc6555390 (unknown)
[2m[36m(pid=18899)[0m     @     0x7fbdc8743fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18899)[0m     @     0x7fbdc5a3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18899)[0m     @     0x7fbdc5a3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18914)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18914)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18914)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18914)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18914)[0m *** SIGSEGV (@0x0) received by PID 18914 (TID 0x7fca10f62700) from PID 0; stack trace: ***
[2m[36m(pid=18914)[0m     @     0x7fca10b3b390 (unknown)
[2m[36m(pid=18914)[0m     @     0x7f9b12cadfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18914)[0m     @     0x7f9b0ffa164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18914)[0m     @     0x7f9b0ffa4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18932)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18932)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18932)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18932)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18932)[0m *** SIGSEGV (@0x0) received by PID 18932 (TID 0x7fccb2e2c700) from PID 0; stack trace: ***
[2m[36m(pid=18932)[0m     @     0x7fccb2a05390 (unknown)
[2m[36m(pid=18932)[0m     @     0x7f9db4981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18932)[0m     @     0x7f9db1c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18932)[0m     @     0x7f9db1c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18951)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18951)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18951)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18851)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18851)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18851)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18834)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18834)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18834)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18833)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18833)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18833)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18872)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18872)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18872)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18905)[0m     @     0x7ee3ef58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18905)[0m     @     0x7ee3ef58ab53 at::TensorIterator::for_each()
[2m[36m(pid=18939)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18939)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18939)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18939)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18939)[0m *** SIGSEGV (@0x0) received by PID 18939 (TID 0x7fa0ef663700) from PID 0; stack trace: ***
[2m[36m(pid=18898)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18898)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18898)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18921)[0m     @     0x7f42fac1cb53 at::TensorIterator::for_each()
[2m[36m(pid=18921)[0m     @     0x7f42fac1ce11 at::TensorIterator::for_each()
[2m[36m(pid=18921)[0m     @     0x7f42fd935c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18921)[0m     @     0x7f42fd958cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18935)[0m     @     0x7f30f9f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=18935)[0m     @     0x7f30f9f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=18935)[0m     @     0x7f30fcca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18935)[0m     @     0x7f30fcccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18890)[0m     @     0x7f883e582b53 at::TensorIterator::for_each()
[2m[36m(pid=18890)[0m     @     0x7f883e582e11 at::TensorIterator::for_each()
[2m[36m(pid=18890)[0m     @     0x7f884129bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18906)[0m     @     0x7fae0bff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18906)[0m     @     0x7fae0bff9b53 at::TensorIterator::for_each()
[2m[36m(pid=18968)[0m     @     0x7f45977fee11 at::TensorIterator::for_each()
[2m[36m(pid=18968)[0m     @     0x7f459a517c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18968)[0m     @     0x7f459a53acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18902)[0m     @     0x7f42a1a67b53 at::TensorIterator::for_each()
[2m[36m(pid=18902)[0m     @     0x7f42a1a67e11 at::TensorIterator::for_each()
[2m[36m(pid=18902)[0m     @     0x7f42a4780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18902)[0m     @     0x7f42a47a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18958)[0m     @     0x7f36c59fab53 at::TensorIterator::for_each()
[2m[36m(pid=18958)[0m     @     0x7f36c59fae11 at::TensorIterator::for_each()
[2m[36m(pid=18958)[0m     @     0x7f36c8713c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18958)[0m     @     0x7f36c8736cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18835)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18835)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18835)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18948)[0m     @     0x7ef6b330cb53 at::TensorIterator::for_each()
[2m[36m(pid=18948)[0m     @     0x7ef6b330ce11 at::TensorIterator::for_each()
[2m[36m(pid=18948)[0m     @     0x7ef6b6025c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18948)[0m     @     0x7ef6b6048cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18947)[0m     @     0x7f787fb0fe11 at::TensorIterator::for_each()
[2m[36m(pid=18947)[0m     @     0x7f7882828c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18947)[0m     @     0x7f788284bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18947)[0m     @     0x7f787f889009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18955)[0m     @     0x7f04b5c78b53 at::TensorIterator::for_each()
[2m[36m(pid=18955)[0m     @     0x7f04b5c78e11 at::TensorIterator::for_each()
[2m[36m(pid=18955)[0m     @     0x7f04b8991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18955)[0m     @     0x7f04b89b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18875)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18875)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18875)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18843)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18843)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18843)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18842)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18842)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18952)[0m     @     0x7f583ef91b53 at::TensorIterator::for_each()
[2m[36m(pid=18952)[0m     @     0x7f583ef91e11 at::TensorIterator::for_each()
[2m[36m(pid=18952)[0m     @     0x7f5841caac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18952)[0m     @     0x7f5841ccdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18901)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18901)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18901)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18901)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18901)[0m *** SIGSEGV (@0x0) received by PID 18901 (TID 0x7ff7d8a0f700) from PID 0; stack trace: ***
[2m[36m(pid=18901)[0m     @     0x7ff7d85e8390 (unknown)
[2m[36m(pid=18901)[0m     @     0x7fc8da7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18930)[0m     @     0x7f77c763bb53 at::TensorIterator::for_each()
[2m[36m(pid=18930)[0m     @     0x7f77c763be11 at::TensorIterator::for_each()
[2m[36m(pid=18930)[0m     @     0x7f77ca354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18930)[0m     @     0x7f77ca377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18886)[0m     @     0x7f5c5d8d3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18886)[0m     @     0x7f5c5d8d3b53 at::TensorIterator::for_each()
[2m[36m(pid=18940)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18940)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18940)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18940)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18940)[0m *** SIGSEGV (@0x0) received by PID 18940 (TID 0x7f2d32986700) from PID 0; stack trace: ***
[2m[36m(pid=18940)[0m     @     0x7f2d3255f390 (unknown)
[2m[36m(pid=18940)[0m     @     0x7efe34789fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18850)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18850)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18850)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18850)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18850)[0m *** SIGSEGV (@0x0) received by PID 18850 (TID 0x7f3bbabcb700) from PID 0; stack trace: ***
[2m[36m(pid=18850)[0m     @     0x7f3bba7a4390 (unknown)
[2m[36m(pid=18850)[0m     @     0x7f0cbc770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18850)[0m     @     0x7f0cb9a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18897)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18897)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18897)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18897)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18897)[0m *** SIGSEGV (@0x0) received by PID 18897 (TID 0x7f09dae49700) from PID 0; stack trace: ***
[2m[36m(pid=18897)[0m     @     0x7f09daa22390 (unknown)
[2m[36m(pid=18897)[0m     @     0x7edadca32fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18897)[0m     @     0x7edad9d2664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18897)[0m     @     0x7edad9d29977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18942)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18942)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18942)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18942)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18942)[0m *** SIGSEGV (@0x0) received by PID 18942 (TID 0x7fa9b64a6700) from PID 0; stack trace: ***
[2m[36m(pid=18942)[0m     @     0x7fa9b607f390 (unknown)
[2m[36m(pid=18942)[0m     @     0x7f7ab829ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18942)[0m     @     0x7f7ab559364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18945)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18945)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18945)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18945)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18945)[0m *** SIGSEGV (@0x0) received by PID 18945 (TID 0x7f6d98d59700) from PID 0; stack trace: ***
[2m[36m(pid=18945)[0m     @     0x7f6d98932390 (unknown)
[2m[36m(pid=18945)[0m     @     0x7f3e9ab42fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18945)[0m     @     0x7f3e97e3664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18928)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18928)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18928)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18928)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18928)[0m *** SIGSEGV (@0x0) received by PID 18928 (TID 0x7f8e8a637700) from PID 0; stack trace: ***
[2m[36m(pid=18928)[0m     @     0x7f8e8a210390 (unknown)
[2m[36m(pid=18928)[0m     @     0x7f5f8c3b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18928)[0m     @     0x7f5f896a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18899)[0m     @     0x7fbdc5a3ab53 at::TensorIterator::for_each()
[2m[36m(pid=18899)[0m     @     0x7fbdc5a3ae11 at::TensorIterator::for_each()
[2m[36m(pid=18899)[0m     @     0x7fbdc8753c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18899)[0m     @     0x7fbdc8776cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18899)[0m     @     0x7fbdc57b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18899)[0m     @     0x7fbdc57b2c3f at::native::copy_impl()
[2m[36m(pid=18848)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18848)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18848)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18848)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18848)[0m *** SIGSEGV (@0x0) received by PID 18848 (TID 0x7f0760eac700) from PID 0; stack trace: ***
[2m[36m(pid=18848)[0m     @     0x7f0760a85390 (unknown)
[2m[36m(pid=18848)[0m     @     0x7ed862bd4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18848)[0m     @     0x7ed85fec864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18837)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18837)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18837)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18837)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18837)[0m *** SIGSEGV (@0x0) received by PID 18837 (TID 0x7fabf4f87700) from PID 0; stack trace: ***
[2m[36m(pid=18837)[0m     @     0x7fabf4b60390 (unknown)
[2m[36m(pid=18837)[0m     @     0x7f7cf6d69fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18837)[0m     @     0x7f7cf405d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18907)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18907)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18907)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18907)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18907)[0m *** SIGSEGV (@0x0) received by PID 18907 (TID 0x7fea97d2c700) from PID 0; stack trace: ***
[2m[36m(pid=18907)[0m     @     0x7fea97905390 (unknown)
[2m[36m(pid=18907)[0m     @     0x7fbb99b15fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18907)[0m     @     0x7fbb96e0964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18907)[0m     @     0x7fbb96e0c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18919)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18919)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18919)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18919)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18919)[0m *** SIGSEGV (@0x0) received by PID 18919 (TID 0x7fdec0acc700) from PID 0; stack trace: ***
[2m[36m(pid=18919)[0m     @     0x7fdec06a5390 (unknown)
[2m[36m(pid=18919)[0m     @     0x7fafc2885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18919)[0m     @     0x7fafbfb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18919)[0m     @     0x7fafbfb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18923)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18923)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18923)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18923)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18923)[0m *** SIGSEGV (@0x0) received by PID 18923 (TID 0x7fd3fcc33700) from PID 0; stack trace: ***
[2m[36m(pid=18923)[0m     @     0x7fd3fc80c390 (unknown)
[2m[36m(pid=18923)[0m     @     0x7fa4fe885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18923)[0m     @     0x7fa4fbb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18914)[0m     @     0x7f9b0ffa4b53 at::TensorIterator::for_each()
[2m[36m(pid=18914)[0m     @     0x7f9b0ffa4e11 at::TensorIterator::for_each()
[2m[36m(pid=18914)[0m     @     0x7f9b12cbdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18914)[0m     @     0x7f9b12ce0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18914)[0m     @     0x7f9b0fd1e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18914)[0m     @     0x7f9b0fd1cc3f at::native::copy_impl()
[2m[36m(pid=18914)[0m     @     0x7f9b0fd1ded4 at::native::copy_()
[2m[36m(pid=18922)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18922)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18922)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18922)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18922)[0m *** SIGSEGV (@0x0) received by PID 18922 (TID 0x7f9facd22700) from PID 0; stack trace: ***
[2m[36m(pid=18922)[0m     @     0x7f9fac8fb390 (unknown)
[2m[36m(pid=18922)[0m     @     0x7f70aea9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18922)[0m     @     0x7f70abd9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18946)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18946)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18946)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18946)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18946)[0m *** SIGSEGV (@0x0) received by PID 18946 (TID 0x7f4ea11ed700) from PID 0; stack trace: ***
[2m[36m(pid=18946)[0m     @     0x7f4ea0dc6390 (unknown)
[2m[36m(pid=18946)[0m     @     0x7f1fa2eebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18946)[0m     @     0x7f1fa01df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18860)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18860)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18860)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18860)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18860)[0m *** SIGSEGV (@0x0) received by PID 18860 (TID 0x7fa09e429700) from PID 0; stack trace: ***
[2m[36m(pid=18860)[0m     @     0x7fa09e002390 (unknown)
[2m[36m(pid=18860)[0m     @     0x7f71a009bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18860)[0m     @     0x7f719d38f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18852)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18852)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18852)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18852)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18852)[0m *** SIGSEGV (@0x0) received by PID 18852 (TID 0x7fdf433f3700) from PID 0; stack trace: ***
[2m[36m(pid=18852)[0m     @     0x7fdf42fcc390 (unknown)
[2m[36m(pid=18852)[0m     @     0x7fb04518afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18852)[0m     @     0x7fb04247e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18932)[0m     @     0x7f9db1c78b53 at::TensorIterator::for_each()
[2m[36m(pid=18932)[0m     @     0x7f9db1c78e11 at::TensorIterator::for_each()
[2m[36m(pid=18932)[0m     @     0x7f9db4991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18932)[0m     @     0x7f9db49b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18932)[0m     @     0x7f9db19f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18932)[0m     @     0x7f9db19f0c3f at::native::copy_impl()
[2m[36m(pid=18840)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18840)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18840)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18840)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18840)[0m *** SIGSEGV (@0x0) received by PID 18840 (TID 0x7f202110a700) from PID 0; stack trace: ***
[2m[36m(pid=18840)[0m     @     0x7f2020ce3390 (unknown)
[2m[36m(pid=18840)[0m     @     0x7ef122e48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18840)[0m     @     0x7ef12013c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18840)[0m     @     0x7ef12013f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18849)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18849)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18849)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18849)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18849)[0m *** SIGSEGV (@0x0) received by PID 18849 (TID 0x7f94fa070700) from PID 0; stack trace: ***
[2m[36m(pid=18849)[0m     @     0x7f94f9c49390 (unknown)
[2m[36m(pid=18849)[0m     @     0x7f65fbb7efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18849)[0m     @     0x7f65f8e7264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18844)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18844)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18844)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18844)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18844)[0m *** SIGSEGV (@0x0) received by PID 18844 (TID 0x7f399dc8a700) from PID 0; stack trace: ***
[2m[36m(pid=18844)[0m     @     0x7f399d863390 (unknown)
[2m[36m(pid=18844)[0m     @     0x7f0a9fa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18844)[0m     @     0x7f0a9cd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18844)[0m     @     0x7f0a9cd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18966)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18966)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18966)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18966)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18966)[0m *** SIGSEGV (@0x0) received by PID 18966 (TID 0x7f78aa99d700) from PID 0; stack trace: ***
[2m[36m(pid=18966)[0m     @     0x7f78aa576390 (unknown)
[2m[36m(pid=18966)[0m     @     0x7f49ac770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18966)[0m     @     0x7f49a9a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18966)[0m     @     0x7f49a9a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18859)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18859)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18859)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18918)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18918)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18918)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18918)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18918)[0m *** SIGSEGV (@0x0) received by PID 18918 (TID 0x7f1f2b472700) from PID 0; stack trace: ***
[2m[36m(pid=18912)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18912)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18912)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18896)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18896)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18896)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18896)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18896)[0m *** SIGSEGV (@0x0) received by PID 18896 (TID 0x7fa46b39d700) from PID 0; stack trace: ***
[2m[36m(pid=18917)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18917)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18917)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18917)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18917)[0m *** SIGSEGV (@0x0) received by PID 18917 (TID 0x7fc14114c700) from PID 0; stack trace: ***
[2m[36m(pid=18917)[0m     @     0x7fc140d25390 (unknown)
[2m[36m(pid=18917)[0m     @     0x7f9242e48fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18917)[0m     @     0x7f924013c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18857)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18857)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18857)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18857)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18857)[0m *** SIGSEGV (@0x0) received by PID 18857 (TID 0x7f2a3e0f1700) from PID 0; stack trace: ***
[2m[36m(pid=18857)[0m     @     0x7f2a3dcca390 (unknown)
[2m[36m(pid=18838)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18838)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18838)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18838)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18838)[0m *** SIGSEGV (@0x0) received by PID 18838 (TID 0x7f51ea548700) from PID 0; stack trace: ***
[2m[36m(pid=18838)[0m     @     0x7f51ea121390 (unknown)
[2m[36m(pid=18846)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18846)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18846)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18876)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18876)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18876)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18876)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18876)[0m *** SIGSEGV (@0x0) received by PID 18876 (TID 0x7f97920d1700) from PID 0; stack trace: ***
[2m[36m(pid=18836)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18836)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18836)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18836)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18836)[0m *** SIGSEGV (@0x0) received by PID 18836 (TID 0x7f6204d8a700) from PID 0; stack trace: ***
[2m[36m(pid=18836)[0m     @     0x7f6204963390 (unknown)
[2m[36m(pid=18868)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18868)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18868)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18868)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18868)[0m *** SIGSEGV (@0x0) received by PID 18868 (TID 0x7f2366543700) from PID 0; stack trace: ***
[2m[36m(pid=18868)[0m     @     0x7f236611c390 (unknown)
[2m[36m(pid=18894)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18894)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18894)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18894)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18894)[0m *** SIGSEGV (@0x0) received by PID 18894 (TID 0x7f274b725700) from PID 0; stack trace: ***
[2m[36m(pid=18894)[0m     @     0x7f274b2fe390 (unknown)
[2m[36m(pid=18959)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18959)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18959)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18959)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18959)[0m *** SIGSEGV (@0x0) received by PID 18959 (TID 0x7f8e22c17700) from PID 0; stack trace: ***
[2m[36m(pid=18959)[0m     @     0x7f8e227f0390 (unknown)
[2m[36m(pid=18959)[0m     @     0x7f5f249f2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18892)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18892)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18892)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18892)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18892)[0m *** SIGSEGV (@0x0) received by PID 18892 (TID 0x7f28f6ab5700) from PID 0; stack trace: ***
[2m[36m(pid=18892)[0m     @     0x7f28f668e390 (unknown)
[2m[36m(pid=18892)[0m     @     0x7ef9f8770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18892)[0m     @     0x7ef9f5a6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18865)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18865)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18865)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18865)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18865)[0m *** SIGSEGV (@0x0) received by PID 18865 (TID 0x7f4547741700) from PID 0; stack trace: ***
[2m[36m(pid=18862)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18862)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18862)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18862)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18862)[0m *** SIGSEGV (@0x0) received by PID 18862 (TID 0x7fe99473c700) from PID 0; stack trace: ***
[2m[36m(pid=18862)[0m     @     0x7fe994315390 (unknown)
[2m[36m(pid=18862)[0m     @     0x7fba963adfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18951)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18951)[0m *** SIGSEGV (@0x0) received by PID 18951 (TID 0x7fc0eed22700) from PID 0; stack trace: ***
[2m[36m(pid=18951)[0m     @     0x7fc0ee8fb390 (unknown)
[2m[36m(pid=18951)[0m     @     0x7f91f0981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18951)[0m     @     0x7f91edc7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18951)[0m     @     0x7f91edc78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18866)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18866)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18866)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18866)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18866)[0m *** SIGSEGV (@0x0) received by PID 18866 (TID 0x7f11da643700) from PID 0; stack trace: ***
[2m[36m(pid=18866)[0m     @     0x7f11da21c390 (unknown)
[2m[36m(pid=18866)[0m     @     0x7ee2dc42dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18866)[0m     @     0x7ee2d972164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18911)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18911)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18911)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18911)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18911)[0m *** SIGSEGV (@0x0) received by PID 18911 (TID 0x7f9ef85d1700) from PID 0; stack trace: ***
[2m[36m(pid=18911)[0m     @     0x7f9ef81aa390 (unknown)
[2m[36m(pid=18851)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18851)[0m *** SIGSEGV (@0x0) received by PID 18851 (TID 0x7f59ef045700) from PID 0; stack trace: ***
[2m[36m(pid=18851)[0m     @     0x7f59eec1e390 (unknown)
[2m[36m(pid=18851)[0m     @     0x7f2af0c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18851)[0m     @     0x7f2aedf3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18851)[0m     @     0x7f2aedf3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18870)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18870)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18870)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18870)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18870)[0m *** SIGSEGV (@0x0) received by PID 18870 (TID 0x7fd131ca7700) from PID 0; stack trace: ***
[2m[36m(pid=18916)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18916)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18916)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18916)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18916)[0m *** SIGSEGV (@0x0) received by PID 18916 (TID 0x7f8da52bf700) from PID 0; stack trace: ***
[2m[36m(pid=18916)[0m     @     0x7f8da4e98390 (unknown)
[2m[36m(pid=18916)[0m     @     0x7f5ea70aefb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18916)[0m     @     0x7f5ea43a264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18853)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18853)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18853)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18853)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18853)[0m *** SIGSEGV (@0x0) received by PID 18853 (TID 0x7f9a77dcf700) from PID 0; stack trace: ***
[2m[36m(pid=18853)[0m     @     0x7f9a779a8390 (unknown)
[2m[36m(pid=18853)[0m     @     0x7f6b79b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18853)[0m     @     0x7f6b76e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18841)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18841)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18841)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18841)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18841)[0m *** SIGSEGV (@0x0) received by PID 18841 (TID 0x7f8b5b37b700) from PID 0; stack trace: ***
[2m[36m(pid=18841)[0m     @     0x7f8b5af54390 (unknown)
[2m[36m(pid=18841)[0m     @     0x7f5c5d14afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18915)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18915)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18915)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18915)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18915)[0m *** SIGSEGV (@0x0) received by PID 18915 (TID 0x7f60de8f5700) from PID 0; stack trace: ***
[2m[36m(pid=18953)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18953)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18953)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18953)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18953)[0m *** SIGSEGV (@0x0) received by PID 18953 (TID 0x7f75d920c700) from PID 0; stack trace: ***
[2m[36m(pid=18953)[0m     @     0x7f75d8de5390 (unknown)
[2m[36m(pid=18903)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18903)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18903)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18913)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18913)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18913)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18913)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18913)[0m *** SIGSEGV (@0x0) received by PID 18913 (TID 0x7fb0fb147700) from PID 0; stack trace: ***
[2m[36m(pid=18913)[0m     @     0x7fb0fad20390 (unknown)
[2m[36m(pid=18913)[0m     @     0x7f81fcf46fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18913)[0m     @     0x7f81fa23a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18834)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18834)[0m *** SIGSEGV (@0x0) received by PID 18834 (TID 0x7ffa8c5c2700) from PID 0; stack trace: ***
[2m[36m(pid=18834)[0m     @     0x7ffa8c19b390 (unknown)
[2m[36m(pid=18834)[0m     @     0x7fcb8bb66fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18834)[0m     @     0x7fcb88e5a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18834)[0m     @     0x7fcb88e5d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18834)[0m     @     0x7fcb88e5db53 at::TensorIterator::for_each()
[2m[36m(pid=18833)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18833)[0m *** SIGSEGV (@0x0) received by PID 18833 (TID 0x7f9b6faf3700) from PID 0; stack trace: ***
[2m[36m(pid=18833)[0m     @     0x7f9b6f6cc390 (unknown)
[2m[36m(pid=18833)[0m     @     0x7f6c70e9efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18833)[0m     @     0x7f6c6e19264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18833)[0m     @     0x7f6c6e195977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18872)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18872)[0m *** SIGSEGV (@0x0) received by PID 18872 (TID 0x7fb55fec2700) from PID 0; stack trace: ***
[2m[36m(pid=18872)[0m     @     0x7fb55fa9b390 (unknown)
[2m[36m(pid=18872)[0m     @     0x7f8661c9afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18872)[0m     @     0x7f865ef8e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18872)[0m     @     0x7f865ef91977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18872)[0m     @     0x7f865ef91b53 at::TensorIterator::for_each()
[2m[36m(pid=18905)[0m     @     0x7ee3ef58ae11 at::TensorIterator::for_each()
[2m[36m(pid=18905)[0m     @     0x7ee3f22a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18905)[0m     @     0x7ee3f22c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18905)[0m     @     0x7ee3ef304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18905)[0m     @     0x7ee3ef302c3f at::native::copy_impl()
[2m[36m(pid=18905)[0m     @     0x7ee3ef303ed4 at::native::copy_()
[2m[36m(pid=18939)[0m     @     0x7fa0ef23c390 (unknown)
[2m[36m(pid=18939)[0m     @     0x7f71f139bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18939)[0m     @     0x7f71ee68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18939)[0m     @     0x7f71ee692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18939)[0m     @     0x7f71ee692b53 at::TensorIterator::for_each()
[2m[36m(pid=18939)[0m     @     0x7f71ee692e11 at::TensorIterator::for_each()
[2m[36m(pid=18898)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18898)[0m *** SIGSEGV (@0x0) received by PID 18898 (TID 0x7fea6fa75700) from PID 0; stack trace: ***
[2m[36m(pid=18898)[0m     @     0x7fea6f64e390 (unknown)
[2m[36m(pid=18898)[0m     @     0x7fbb71869fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18898)[0m     @     0x7fbb6eb5d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18898)[0m     @     0x7fbb6eb60977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18898)[0m     @     0x7fbb6eb60b53 at::TensorIterator::for_each()
[2m[36m(pid=18921)[0m     @     0x7f42fa996009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18921)[0m     @     0x7f42fa994c3f at::native::copy_impl()
[2m[36m(pid=18921)[0m     @     0x7f42fa995ed4 at::native::copy_()
[2m[36m(pid=18921)[0m     @     0x7f42fb0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18921)[0m     @     0x7f42fb1e0148 at::Tensor::copy_()
[2m[36m(pid=18935)[0m     @     0x7f30f9d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18935)[0m     @     0x7f30f9d07c3f at::native::copy_impl()
[2m[36m(pid=18935)[0m     @     0x7f30f9d08ed4 at::native::copy_()
[2m[36m(pid=18935)[0m     @     0x7f30fa44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18935)[0m     @     0x7f30fa553148 at::Tensor::copy_()
[2m[36m(pid=18935)[0m     @     0x7f30fc14a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18890)[0m     @     0x7f88412becfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18890)[0m     @     0x7f883e2fc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18890)[0m     @     0x7f883e2fac3f at::native::copy_impl()
[2m[36m(pid=18890)[0m     @     0x7f883e2fbed4 at::native::copy_()
[2m[36m(pid=18890)[0m     @     0x7f883ea3e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18906)[0m     @     0x7fae0bff9e11 at::TensorIterator::for_each()
[2m[36m(pid=18906)[0m     @     0x7fae0ed12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18906)[0m     @     0x7fae0ed35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18906)[0m     @     0x7fae0bd73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18906)[0m     @     0x7fae0bd71c3f at::native::copy_impl()
[2m[36m(pid=18906)[0m     @     0x7fae0bd72ed4 at::native::copy_()
[2m[36m(pid=18968)[0m     @     0x7f4597578009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18968)[0m     @     0x7f4597576c3f at::native::copy_impl()
[2m[36m(pid=18968)[0m     @     0x7f4597577ed4 at::native::copy_()
[2m[36m(pid=18968)[0m     @     0x7f4597cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18968)[0m     @     0x7f4597dc2148 at::Tensor::copy_()
[2m[36m(pid=18968)[0m     @     0x7f45999b9989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18902)[0m     @     0x7f42a17e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18902)[0m     @     0x7f42a17dfc3f at::native::copy_impl()
[2m[36m(pid=18902)[0m     @     0x7f42a17e0ed4 at::native::copy_()
[2m[36m(pid=18902)[0m     @     0x7f42a1f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18902)[0m     @     0x7f42a202b148 at::Tensor::copy_()
[2m[36m(pid=18958)[0m     @     0x7f36c5774009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18958)[0m     @     0x7f36c5772c3f at::native::copy_impl()
[2m[36m(pid=18958)[0m     @     0x7f36c5773ed4 at::native::copy_()
[2m[36m(pid=18958)[0m     @     0x7f36c5eb65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18958)[0m     @     0x7f36c5fbe148 at::Tensor::copy_()
[2m[36m(pid=18958)[0m     @     0x7f36c7bb5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18835)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18835)[0m *** SIGSEGV (@0x0) received by PID 18835 (TID 0x7f5bdd944700) from PID 0; stack trace: ***
[2m[36m(pid=18835)[0m     @     0x7f5bdd51d390 (unknown)
[2m[36m(pid=18835)[0m     @     0x7f2cdf551fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18835)[0m     @     0x7f2cdc84564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18835)[0m     @     0x7f2cdc848977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18835)[0m     @     0x7f2cdc848b53 at::TensorIterator::for_each()
[2m[36m(pid=18948)[0m     @     0x7ef6b3086009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18948)[0m     @     0x7ef6b3084c3f at::native::copy_impl()
[2m[36m(pid=18948)[0m     @     0x7ef6b3085ed4 at::native::copy_()
[2m[36m(pid=18948)[0m     @     0x7ef6b37c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18948)[0m     @     0x7ef6b38d0148 at::Tensor::copy_()
[2m[36m(pid=18948)[0m     @     0x7ef6b54c7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18947)[0m     @     0x7f787f887c3f at::native::copy_impl()
[2m[36m(pid=18947)[0m     @     0x7f787f888ed4 at::native::copy_()
[2m[36m(pid=18947)[0m     @     0x7f787ffcb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18947)[0m     @     0x7f78800d3148 at::Tensor::copy_()
[2m[36m(pid=18947)[0m     @     0x7f7881cca989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18955)[0m     @     0x7f04b59f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18955)[0m     @     0x7f04b59f0c3f at::native::copy_impl()
[2m[36m(pid=18955)[0m     @     0x7f04b59f1ed4 at::native::copy_()
[2m[36m(pid=18955)[0m     @     0x7f04b61345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18955)[0m     @     0x7f04b623c148 at::Tensor::copy_()
[2m[36m(pid=18955)[0m     @     0x7f04b7e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18847)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18847)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18847)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18847)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18847)[0m *** SIGSEGV (@0x0) received by PID 18847 (TID 0x7f811f421700) from PID 0; stack trace: ***
[2m[36m(pid=18847)[0m     @     0x7f811effa390 (unknown)
[2m[36m(pid=18847)[0m     @     0x7f522120bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18847)[0m     @     0x7f521e4ff64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18875)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18875)[0m *** SIGSEGV (@0x0) received by PID 18875 (TID 0x7fdee8c57700) from PID 0; stack trace: ***
[2m[36m(pid=18875)[0m     @     0x7fdee8830390 (unknown)
[2m[36m(pid=18875)[0m     @     0x7fafea885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18875)[0m     @     0x7fafe7b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18944)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18944)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18944)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18944)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18944)[0m *** SIGSEGV (@0x0) received by PID 18944 (TID 0x7f2b4ffc4700) from PID 0; stack trace: ***
[2m[36m(pid=18944)[0m     @     0x7f2b4fb9d390 (unknown)
[2m[36m(pid=18944)[0m     @     0x7efc51d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18944)[0m     @     0x7efc4f06064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18944)[0m     @     0x7efc4f063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18938)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18938)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18938)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18938)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18938)[0m *** SIGSEGV (@0x0) received by PID 18938 (TID 0x7f5f1da5a700) from PID 0; stack trace: ***
[2m[36m(pid=18938)[0m     @     0x7f5f1d633390 (unknown)
[2m[36m(pid=18938)[0m     @     0x7f301f85bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18938)[0m     @     0x7f301cb4f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18938)[0m     @     0x7f301cb52977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18961)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18961)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18961)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18961)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18961)[0m *** SIGSEGV (@0x0) received by PID 18961 (TID 0x7fb8c09de700) from PID 0; stack trace: ***
[2m[36m(pid=18961)[0m     @     0x7fb8c05b7390 (unknown)
[2m[36m(pid=18843)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18843)[0m *** SIGSEGV (@0x0) received by PID 18843 (TID 0x7f30d3ab6700) from PID 0; stack trace: ***
[2m[36m(pid=18843)[0m     @     0x7f30d368f390 (unknown)
[2m[36m(pid=18843)[0m     @     0x7f01d5896fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18843)[0m     @     0x7f01d2b8a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18843)[0m     @     0x7f01d2b8d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18963)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=18963)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=18963)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18963)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18963)[0m *** SIGSEGV (@0x0) received by PID 18963 (TID 0x7fb12da6c700) from PID 0; stack trace: ***
[2m[36m(pid=18963)[0m     @     0x7fb12d645390 (unknown)
[2m[36m(pid=18963)[0m     @     0x7f822f756fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18963)[0m     @     0x7f822ca4a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18842)[0m *** Aborted at 1604574128 (unix time) try "date -d @1604574128" if you are using GNU date ***
[2m[36m(pid=18842)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18842)[0m *** SIGSEGV (@0x0) received by PID 18842 (TID 0x7fc76d75f700) from PID 0; stack trace: ***
[2m[36m(pid=18842)[0m     @     0x7fc76d338390 (unknown)
[2m[36m(pid=18842)[0m     @     0x7f986f501fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18842)[0m     @     0x7f986c7f564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18842)[0m     @     0x7f986c7f8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18952)[0m     @     0x7f583ed0b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18952)[0m     @     0x7f583ed09c3f at::native::copy_impl()
[2m[36m(pid=18952)[0m     @     0x7f583ed0aed4 at::native::copy_()
[2m[36m(pid=18952)[0m     @     0x7f583f44d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18952)[0m     @     0x7f583f555148 at::Tensor::copy_()
[2m[36m(pid=18952)[0m     @     0x7f584114c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18901)[0m     @     0x7fc8d7ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18901)[0m     @     0x7fc8d7ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18901)[0m     @     0x7fc8d7ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=18901)[0m     @     0x7fc8d7ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=18901)[0m     @     0x7fc8da7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18930)[0m     @     0x7f77c73b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18930)[0m     @     0x7f77c73b3c3f at::native::copy_impl()
[2m[36m(pid=18930)[0m     @     0x7f77c73b4ed4 at::native::copy_()
[2m[36m(pid=18930)[0m     @     0x7f77c7af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18930)[0m     @     0x7f77c7bff148 at::Tensor::copy_()
[2m[36m(pid=18886)[0m     @     0x7f5c5d8d3e11 at::TensorIterator::for_each()
[2m[36m(pid=18886)[0m     @     0x7f5c605ecc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18886)[0m     @     0x7f5c6060fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18886)[0m     @     0x7f5c5d64d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18886)[0m     @     0x7f5c5d64bc3f at::native::copy_impl()
[2m[36m(pid=18886)[0m     @     0x7f5c5d64ced4 at::native::copy_()
[2m[36m(pid=18940)[0m     @     0x7efe31a7d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18940)[0m     @     0x7efe31a80977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18940)[0m     @     0x7efe31a80b53 at::TensorIterator::for_each()
[2m[36m(pid=18850)[0m     @     0x7f0cb9a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18850)[0m     @     0x7f0cb9a67b53 at::TensorIterator::for_each()
[2m[36m(pid=18850)[0m     @     0x7f0cb9a67e11 at::TensorIterator::for_each()
[2m[36m(pid=18897)[0m     @     0x7edad9d29b53 at::TensorIterator::for_each()
[2m[36m(pid=18897)[0m     @     0x7edad9d29e11 at::TensorIterator::for_each()
[2m[36m(pid=18897)[0m     @     0x7edadca42c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18897)[0m     @     0x7edadca65cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18942)[0m     @     0x7f7ab5596977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18942)[0m     @     0x7f7ab5596b53 at::TensorIterator::for_each()
[2m[36m(pid=18942)[0m     @     0x7f7ab5596e11 at::TensorIterator::for_each()
[2m[36m(pid=18945)[0m     @     0x7f3e97e39977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18945)[0m     @     0x7f3e97e39b53 at::TensorIterator::for_each()
[2m[36m(pid=18928)[0m     @     0x7f5f896a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18928)[0m     @     0x7f5f896a8b53 at::TensorIterator::for_each()
[2m[36m(pid=18928)[0m     @     0x7f5f896a8e11 at::TensorIterator::for_each()
[2m[36m(pid=18928)[0m     @     0x7f5f8c3c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18928)[0m     @     0x7f5f8c3e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18899)[0m     @     0x7fbdc57b3ed4 at::native::copy_()
[2m[36m(pid=18899)[0m     @     0x7fbdc5ef65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18899)[0m     @     0x7fbdc5ffe148 at::Tensor::copy_()
[2m[36m(pid=18848)[0m     @     0x7ed85fecb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18848)[0m     @     0x7ed85fecbb53 at::TensorIterator::for_each()
[2m[36m(pid=18848)[0m     @     0x7ed85fecbe11 at::TensorIterator::for_each()
[2m[36m(pid=18848)[0m     @     0x7ed862be4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18837)[0m     @     0x7f7cf4060977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18837)[0m     @     0x7f7cf4060b53 at::TensorIterator::for_each()
[2m[36m(pid=18837)[0m     @     0x7f7cf4060e11 at::TensorIterator::for_each()
[2m[36m(pid=18907)[0m     @     0x7fbb96e0cb53 at::TensorIterator::for_each()
[2m[36m(pid=18907)[0m     @     0x7fbb96e0ce11 at::TensorIterator::for_each()
[2m[36m(pid=18907)[0m     @     0x7fbb99b25c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18907)[0m     @     0x7fbb99b48cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18919)[0m     @     0x7fafbfb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=18919)[0m     @     0x7fafbfb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=18919)[0m     @     0x7fafc2895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18923)[0m     @     0x7fa4fbb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18923)[0m     @     0x7fa4fbb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=18923)[0m     @     0x7fa4fbb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=18914)[0m     @     0x7f9b104605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18914)[0m     @     0x7f9b10568148 at::Tensor::copy_()
[2m[36m(pid=18914)[0m     @     0x7f9b1215f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18922)[0m     @     0x7f70abd93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18922)[0m     @     0x7f70abd93b53 at::TensorIterator::for_each()
[2m[36m(pid=18922)[0m     @     0x7f70abd93e11 at::TensorIterator::for_each()
[2m[36m(pid=18946)[0m     @     0x7f1fa01e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18946)[0m     @     0x7f1fa01e2b53 at::TensorIterator::for_each()
[2m[36m(pid=18946)[0m     @     0x7f1fa01e2e11 at::TensorIterator::for_each()
[2m[36m(pid=18860)[0m     @     0x7f719d392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18860)[0m     @     0x7f719d392b53 at::TensorIterator::for_each()
[2m[36m(pid=18860)[0m     @     0x7f719d392e11 at::TensorIterator::for_each()
[2m[36m(pid=18852)[0m     @     0x7fb042481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18852)[0m     @     0x7fb042481b53 at::TensorIterator::for_each()
[2m[36m(pid=18932)[0m     @     0x7f9db19f1ed4 at::native::copy_()
[2m[36m(pid=18932)[0m     @     0x7f9db21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18932)[0m     @     0x7f9db223c148 at::Tensor::copy_()
[2m[36m(pid=18840)[0m     @     0x7ef12013fb53 at::TensorIterator::for_each()
[2m[36m(pid=18840)[0m     @     0x7ef12013fe11 at::TensorIterator::for_each()
[2m[36m(pid=18840)[0m     @     0x7ef122e58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18849)[0m     @     0x7f65f8e75977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18849)[0m     @     0x7f65f8e75b53 at::TensorIterator::for_each()
2020-11-05 11:02:08,138	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=18844)[0m     @     0x7f0a9cd67b53 at::TensorIterator::for_each()
[2m[36m(pid=18844)[0m     @     0x7f0a9cd67e11 at::TensorIterator::for_each()
[2m[36m(pid=18844)[0m     @     0x7f0a9fa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18966)[0m     @     0x7f49a9a67b53 at::TensorIterator::for_each()
[2m[36m(pid=18966)[0m     @     0x7f49a9a67e11 at::TensorIterator::for_each()
[2m[36m(pid=18966)[0m     @     0x7f49ac780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18966)[0m     @     0x7f49ac7a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18859)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18859)[0m *** SIGSEGV (@0x0) received by PID 18859 (TID 0x7f49b1599700) from PID 0; stack trace: ***
[2m[36m(pid=18859)[0m     @     0x7f49b1172390 (unknown)
[2m[36m(pid=18918)[0m     @     0x7f1f2b04b390 (unknown)
[2m[36m(pid=18918)[0m     @     0x7ef02d18afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18918)[0m     @     0x7ef02a47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18918)[0m     @     0x7ef02a481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18912)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18912)[0m *** SIGSEGV (@0x0) received by PID 18912 (TID 0x7f281348a700) from PID 0; stack trace: ***
[2m[36m(pid=18912)[0m     @     0x7f2813063390 (unknown)
[2m[36m(pid=18912)[0m     @     0x7ef91528bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18912)[0m     @     0x7ef91257f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18896)[0m     @     0x7fa46af76390 (unknown)
[2m[36m(pid=18896)[0m     @     0x7f756d18afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18896)[0m     @     0x7f756a47e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18896)[0m     @     0x7f756a481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18917)[0m     @     0x7f924013f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18917)[0m     @     0x7f924013fb53 at::TensorIterator::for_each()
[2m[36m(pid=18857)[0m     @     0x7efb3fe84fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18857)[0m     @     0x7efb3d17864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18857)[0m     @     0x7efb3d17b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18838)[0m     @     0x7f22ec344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18838)[0m     @     0x7f22e963864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18838)[0m     @     0x7f22e963b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18838)[0m     @     0x7f22e963bb53 at::TensorIterator::for_each()
[2m[36m(pid=18846)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18846)[0m *** SIGSEGV (@0x0) received by PID 18846 (TID 0x7fe417d2c700) from PID 0; stack trace: ***
[2m[36m(pid=18846)[0m     @     0x7fe417905390 (unknown)
[2m[36m(pid=18876)[0m     @     0x7f9791caa390 (unknown)
[2m[36m(pid=18876)[0m     @     0x7f6893e36fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18876)[0m     @     0x7f689112a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18836)[0m     @     0x7f33065b0fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18836)[0m     @     0x7f33038a464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18836)[0m     @     0x7f33038a7977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18868)[0m     @     0x7ef468344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18868)[0m     @     0x7ef46563864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18868)[0m     @     0x7ef46563b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18894)[0m     @     0x7ef84d39bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18894)[0m     @     0x7ef84a68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18894)[0m     @     0x7ef84a692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18959)[0m     @     0x7f5f21ce664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18959)[0m     @     0x7f5f21ce9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18959)[0m     @     0x7f5f21ce9b53 at::TensorIterator::for_each()
[2m[36m(pid=18892)[0m     @     0x7ef9f5a67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18892)[0m     @     0x7ef9f5a67b53 at::TensorIterator::for_each()
[2m[36m(pid=18865)[0m     @     0x7f454731a390 (unknown)
[2m[36m(pid=18865)[0m     @     0x7f1649530fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18865)[0m     @     0x7f164682464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18862)[0m     @     0x7fba936a164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18862)[0m     @     0x7fba936a4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18862)[0m     @     0x7fba936a4b53 at::TensorIterator::for_each()
[2m[36m(pid=18862)[0m     @     0x7fba936a4e11 at::TensorIterator::for_each()
[2m[36m(pid=18951)[0m     @     0x7f91edc78b53 at::TensorIterator::for_each()
[2m[36m(pid=18951)[0m     @     0x7f91edc78e11 at::TensorIterator::for_each()
[2m[36m(pid=18951)[0m     @     0x7f91f0991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18951)[0m     @     0x7f91f09b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18866)[0m     @     0x7ee2d9724977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18866)[0m     @     0x7ee2d9724b53 at::TensorIterator::for_each()
[2m[36m(pid=18866)[0m     @     0x7ee2d9724e11 at::TensorIterator::for_each()
[2m[36m(pid=18866)[0m     @     0x7ee2dc43dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18866)[0m     @     0x7ee2dc460cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18911)[0m     @     0x7f6ffa344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18911)[0m     @     0x7f6ff763864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18911)[0m     @     0x7f6ff763b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18911)[0m     @     0x7f6ff763bb53 at::TensorIterator::for_each()
[2m[36m(pid=18851)[0m     @     0x7f2aedf3ab53 at::TensorIterator::for_each()
[2m[36m(pid=18851)[0m     @     0x7f2aedf3ae11 at::TensorIterator::for_each()
[2m[36m(pid=18851)[0m     @     0x7f2af0c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18851)[0m     @     0x7f2af0c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18851)[0m     @     0x7f2aedcb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18870)[0m     @     0x7fd131880390 (unknown)
[2m[36m(pid=18870)[0m     @     0x7fa233a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18870)[0m     @     0x7fa230d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18870)[0m     @     0x7fa230d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18916)[0m     @     0x7f5ea43a5977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18916)[0m     @     0x7f5ea43a5b53 at::TensorIterator::for_each()
[2m[36m(pid=18916)[0m     @     0x7f5ea43a5e11 at::TensorIterator::for_each()
[2m[36m(pid=18916)[0m     @     0x7f5ea70bec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18916)[0m     @     0x7f5ea70e1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18853)[0m     @     0x7f6b76e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18853)[0m     @     0x7f6b76e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=18853)[0m     @     0x7f6b76e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=18853)[0m     @     0x7f6b79b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18853)[0m     @     0x7f6b79b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18841)[0m     @     0x7f5c5a43e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18841)[0m     @     0x7f5c5a441977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18841)[0m     @     0x7f5c5a441b53 at::TensorIterator::for_each()
[2m[36m(pid=18841)[0m     @     0x7f5c5a441e11 at::TensorIterator::for_each()
[2m[36m(pid=18915)[0m     @     0x7f60de4ce390 (unknown)
[2m[36m(pid=18915)[0m     @     0x7f31e06e6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18915)[0m     @     0x7f31dd9da64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18915)[0m     @     0x7f31dd9dd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18915)[0m     @     0x7f31dd9ddb53 at::TensorIterator::for_each()
[2m[36m(pid=18953)[0m     @     0x7f46dafdbfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18953)[0m     @     0x7f46d82cf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18953)[0m     @     0x7f46d82d2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18953)[0m     @     0x7f46d82d2b53 at::TensorIterator::for_each()
[2m[36m(pid=18953)[0m     @     0x7f46d82d2e11 at::TensorIterator::for_each()
[2m[36m(pid=18903)[0m PC: @                0x0 (unknown)
[2m[36m(pid=18903)[0m *** SIGSEGV (@0x0) received by PID 18903 (TID 0x7fcb95db8700) from PID 0; stack trace: ***
[2m[36m(pid=18903)[0m     @     0x7fcb95991390 (unknown)
[2m[36m(pid=18903)[0m     @     0x7f9c97a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18903)[0m     @     0x7f9c94d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18913)[0m     @     0x7f81fa23d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18913)[0m     @     0x7f81fa23db53 at::TensorIterator::for_each()
[2m[36m(pid=18913)[0m     @     0x7f81fa23de11 at::TensorIterator::for_each()
[2m[36m(pid=18913)[0m     @     0x7f81fcf56c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18913)[0m     @     0x7f81fcf79cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18834)[0m     @     0x7fcb88e5de11 at::TensorIterator::for_each()
[2m[36m(pid=18834)[0m     @     0x7fcb8bb76c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18834)[0m     @     0x7fcb8bb99cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18834)[0m     @     0x7fcb88bd7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18834)[0m     @     0x7fcb88bd5c3f at::native::copy_impl()
[2m[36m(pid=18833)[0m     @     0x7f6c6e195b53 at::TensorIterator::for_each()
[2m[36m(pid=18833)[0m     @     0x7f6c6e195e11 at::TensorIterator::for_each()
[2m[36m(pid=18833)[0m     @     0x7f6c70eaec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18833)[0m     @     0x7f6c70ed1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18872)[0m     @     0x7f865ef91e11 at::TensorIterator::for_each()
[2m[36m(pid=18872)[0m     @     0x7f8661caac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18872)[0m     @     0x7f8661ccdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18872)[0m     @     0x7f865ed0b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18872)[0m     @     0x7f865ed09c3f at::native::copy_impl()
[2m[36m(pid=18905)[0m     @     0x7ee3efa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18905)[0m     @     0x7ee3efb4e148 at::Tensor::copy_()
[2m[36m(pid=18905)[0m     @     0x7ee3f1745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18905)[0m     @     0x7ee3efa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18939)[0m     @     0x7f71f13abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18939)[0m     @     0x7f71f13cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18939)[0m     @     0x7f71ee40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18939)[0m     @     0x7f71ee40ac3f at::native::copy_impl()
[2m[36m(pid=18898)[0m     @     0x7fbb6eb60e11 at::TensorIterator::for_each()
[2m[36m(pid=18898)[0m     @     0x7fbb71879c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18898)[0m     @     0x7fbb7189ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18898)[0m     @     0x7fbb6e8da009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18921)[0m     @     0x7f42fcdd7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18921)[0m     @     0x7f42fb0d85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18921)[0m     @     0x7f42fb1e0148 at::Tensor::copy_()
[2m[36m(pid=18921)[0m     @     0x7f4301496bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18921)[0m     @     0x55e77a6f4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18921)[0m     @     0x55e77a64fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18921)[0m     @     0x55e77a6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18921)[0m     @     0x55e77a6dba20 method_vectorcall
[2m[36m(pid=18921)[0m     @     0x55e77a64fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18921)[0m     @     0x55e77a6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18921)[0m     @     0x55e77a6db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18921)[0m     @     0x55e77a650689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18921)[0m     @     0x55e77a6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18921)[0m     @     0x55e77a6db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18935)[0m     @     0x7f30fa44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18935)[0m     @     0x7f30fa553148 at::Tensor::copy_()
[2m[36m(pid=18935)[0m     @     0x7f3100809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18935)[0m     @     0x55893d8cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18935)[0m     @     0x55893d826b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18935)[0m     @     0x55893d8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18935)[0m     @     0x55893d8b2a20 method_vectorcall
[2m[36m(pid=18935)[0m     @     0x55893d826bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18935)[0m     @     0x55893d8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18935)[0m     @     0x55893d8b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18935)[0m     @     0x55893d827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18935)[0m     @     0x55893d8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18935)[0m     @     0x55893d8b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18935)[0m     @     0x55893d827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18935)[0m     @     0x55893d8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18935)[0m     @     0x55893d8b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18890)[0m     @     0x7f883eb46148 at::Tensor::copy_()
[2m[36m(pid=18890)[0m     @     0x7f884073d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18890)[0m     @     0x7f883ea3e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18906)[0m     @     0x7fae0c4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18906)[0m     @     0x7fae0c5bd148 at::Tensor::copy_()
[2m[36m(pid=18906)[0m     @     0x7fae0e1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18906)[0m     @     0x7fae0c4b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18968)[0m     @     0x7f4597cba5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18968)[0m     @     0x7f4597dc2148 at::Tensor::copy_()
[2m[36m(pid=18968)[0m     @     0x7f459e078bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18968)[0m     @     0x560414ad2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18968)[0m     @     0x560414a2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18968)[0m     @     0x560414ab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=18968)[0m     @     0x560414ab9a20 method_vectorcall
[2m[36m(pid=18968)[0m     @     0x560414a2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18968)[0m     @     0x560414ab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=18968)[0m     @     0x560414ab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18968)[0m     @     0x560414a2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18968)[0m     @     0x560414ab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=18968)[0m     @     0x560414ab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18968)[0m     @     0x560414a2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18968)[0m     @     0x560414ab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=18968)[0m     @     0x560414ab9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18968)[0m     @     0x560414a2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18968)[0m     @     0x560414ab8baf _PyEval_EvalCodeWithName
[2m[36m(pid=18902)[0m     @     0x7f42a3c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18902)[0m     @     0x7f42a1f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18902)[0m     @     0x7f42a202b148 at::Tensor::copy_()
[2m[36m(pid=18902)[0m     @     0x7f42a82e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18902)[0m     @     0x55cfa9472fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18902)[0m     @     0x55cfa93cdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18902)[0m     @     0x55cfa9458baf _PyEval_EvalCodeWithName
[2m[36m(pid=18902)[0m     @     0x55cfa9459a20 method_vectorcall
[2m[36m(pid=18902)[0m     @     0x55cfa93cdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18902)[0m     @     0x55cfa9458baf _PyEval_EvalCodeWithName
[2m[36m(pid=18902)[0m     @     0x55cfa9459643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18902)[0m     @     0x55cfa93ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18902)[0m     @     0x55cfa9458baf _PyEval_EvalCodeWithName
[2m[36m(pid=18902)[0m     @     0x55cfa9459643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18902)[0m     @     0x55cfa93ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18902)[0m     @     0x55cfa9458baf _PyEval_EvalCodeWithName
[2m[36m(pid=18902)[0m     @     0x55cfa9459643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18902)[0m     @     0x55cfa93ce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18902)[0m     @     0x55cfa9458baf _PyEval_EvalCodeWithName
[2m[36m(pid=18958)[0m     @     0x7f36c5eb65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18958)[0m     @     0x7f36c5fbe148 at::Tensor::copy_()
[2m[36m(pid=18958)[0m     @     0x7f36cc274bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18958)[0m     @     0x564cb0135fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18958)[0m     @     0x564cb0090b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18958)[0m     @     0x564cb011bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18958)[0m     @     0x564cb011ca20 method_vectorcall
[2m[36m(pid=18958)[0m     @     0x564cb0090bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18958)[0m     @     0x564cb011bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18958)[0m     @     0x564cb011c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18958)[0m     @     0x564cb0091689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18958)[0m     @     0x564cb011bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18958)[0m     @     0x564cb011c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18958)[0m     @     0x564cb0091689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18958)[0m     @     0x564cb011bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18958)[0m     @     0x564cb011c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18958)[0m     @     0x564cb0091689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18958)[0m     @     0x564cb011bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18835)[0m     @     0x7f2cdc848e11 at::TensorIterator::for_each()
[2m[36m(pid=18835)[0m     @     0x7f2cdf561c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18835)[0m     @     0x7f2cdf584cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18835)[0m     @     0x7f2cdc5c2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18835)[0m     @     0x7f2cdc5c0c3f at::native::copy_impl()
[2m[36m(pid=18835)[0m     @     0x7f2cdc5c1ed4 at::native::copy_()
[2m[36m(pid=18948)[0m     @     0x7ef6b37c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18948)[0m     @     0x7ef6b38d0148 at::Tensor::copy_()
[2m[36m(pid=18948)[0m     @     0x7ef6b9b86bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18948)[0m     @     0x55e2cf888fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18948)[0m     @     0x55e2cf7e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18948)[0m     @     0x55e2cf86ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18948)[0m     @     0x55e2cf86fa20 method_vectorcall
[2m[36m(pid=18948)[0m     @     0x55e2cf7e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18948)[0m     @     0x55e2cf86ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18948)[0m     @     0x55e2cf86f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18948)[0m     @     0x55e2cf7e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18948)[0m     @     0x55e2cf86ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18948)[0m     @     0x55e2cf86f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18948)[0m     @     0x55e2cf7e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18948)[0m     @     0x55e2cf86ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18948)[0m     @     0x55e2cf86f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18948)[0m     @     0x55e2cf7e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18948)[0m     @     0x55e2cf86ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18947)[0m     @     0x7f787ffcb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18947)[0m     @     0x7f78800d3148 at::Tensor::copy_()
[2m[36m(pid=18947)[0m     @     0x7f7886389bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18947)[0m     @     0x558c35218fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18947)[0m     @     0x558c35173b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18947)[0m     @     0x558c351febaf _PyEval_EvalCodeWithName
[2m[36m(pid=18947)[0m     @     0x558c351ffa20 method_vectorcall
[2m[36m(pid=18947)[0m     @     0x558c35173bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18947)[0m     @     0x558c351febaf _PyEval_EvalCodeWithName
[2m[36m(pid=18947)[0m     @     0x558c351ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18947)[0m     @     0x558c35174689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18947)[0m     @     0x558c351febaf _PyEval_EvalCodeWithName
[2m[36m(pid=18947)[0m     @     0x558c351ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18947)[0m     @     0x558c35174689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18947)[0m     @     0x558c351febaf _PyEval_EvalCodeWithName
[2m[36m(pid=18947)[0m     @     0x558c351ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18947)[0m     @     0x558c35174689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18947)[0m     @     0x558c351febaf _PyEval_EvalCodeWithName
[2m[36m(pid=18955)[0m     @     0x7f04b61345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18955)[0m     @     0x7f04b623c148 at::Tensor::copy_()
[2m[36m(pid=18955)[0m     @     0x7f04bc4f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18955)[0m     @     0x561be8990fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18955)[0m     @     0x561be88ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18955)[0m     @     0x561be8976baf _PyEval_EvalCodeWithName
[2m[36m(pid=18955)[0m     @     0x561be8977a20 method_vectorcall
[2m[36m(pid=18955)[0m     @     0x561be88ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18955)[0m     @     0x561be8976baf _PyEval_EvalCodeWithName
[2m[36m(pid=18955)[0m     @     0x561be8977643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18955)[0m     @     0x561be88ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18955)[0m     @     0x561be8976baf _PyEval_EvalCodeWithName
[2m[36m(pid=18955)[0m     @     0x561be8977643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18955)[0m     @     0x561be88ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18955)[0m     @     0x561be8976baf _PyEval_EvalCodeWithName
[2m[36m(pid=18955)[0m     @     0x561be8977643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18955)[0m     @     0x561be88ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18955)[0m     @     0x561be8976baf _PyEval_EvalCodeWithName
[2m[36m(pid=18847)[0m     @     0x7f521e502977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18847)[0m     @     0x7f521e502b53 at::TensorIterator::for_each()
[2m[36m(pid=18847)[0m     @     0x7f521e502e11 at::TensorIterator::for_each()
[2m[36m(pid=18847)[0m     @     0x7f522121bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18847)[0m     @     0x7f522123ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18875)[0m     @     0x7fafe7b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18875)[0m     @     0x7fafe7b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=18875)[0m     @     0x7fafe7b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=18875)[0m     @     0x7fafea895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18875)[0m     @     0x7fafea8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18944)[0m     @     0x7efc4f063b53 at::TensorIterator::for_each()
[2m[36m(pid=18944)[0m     @     0x7efc4f063e11 at::TensorIterator::for_each()
[2m[36m(pid=18944)[0m     @     0x7efc51d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18944)[0m     @     0x7efc51d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18944)[0m     @     0x7efc4eddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18944)[0m     @     0x7efc4eddbc3f at::native::copy_impl()
[2m[36m(pid=18938)[0m     @     0x7f301cb52b53 at::TensorIterator::for_each()
[2m[36m(pid=18938)[0m     @     0x7f301cb52e11 at::TensorIterator::for_each()
[2m[36m(pid=18938)[0m     @     0x7f301f86bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18938)[0m     @     0x7f301f88ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18961)[0m     @     0x7f89c27adfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18961)[0m     @     0x7f89bfaa164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18961)[0m     @     0x7f89bfaa4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18961)[0m     @     0x7f89bfaa4b53 at::TensorIterator::for_each()
[2m[36m(pid=18843)[0m     @     0x7f01d2b8db53 at::TensorIterator::for_each()
[2m[36m(pid=18843)[0m     @     0x7f01d2b8de11 at::TensorIterator::for_each()
[2m[36m(pid=18843)[0m     @     0x7f01d58a6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18843)[0m     @     0x7f01d58c9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18843)[0m     @     0x7f01d2907009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18843)[0m     @     0x7f01d2905c3f at::native::copy_impl()
[2m[36m(pid=18963)[0m     @     0x7f822ca4d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18963)[0m     @     0x7f822ca4db53 at::TensorIterator::for_each()
[2m[36m(pid=18963)[0m     @     0x7f822ca4de11 at::TensorIterator::for_each()
[2m[36m(pid=18963)[0m     @     0x7f822f766c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18963)[0m     @     0x7f822f789cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18842)[0m     @     0x7f986c7f8b53 at::TensorIterator::for_each()
[2m[36m(pid=18842)[0m     @     0x7f986c7f8e11 at::TensorIterator::for_each()
[2m[36m(pid=18842)[0m     @     0x7f986f511c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18842)[0m     @     0x7f986f534cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18842)[0m     @     0x7f986c572009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18952)[0m     @     0x7f583f44d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18952)[0m     @     0x7f583f555148 at::Tensor::copy_()
[2m[36m(pid=18952)[0m     @     0x7f584580bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18952)[0m     @     0x55f3f49dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18952)[0m     @     0x55f3f4937b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18952)[0m     @     0x55f3f49c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18952)[0m     @     0x55f3f49c3a20 method_vectorcall
[2m[36m(pid=18952)[0m     @     0x55f3f4937bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18952)[0m     @     0x55f3f49c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18952)[0m     @     0x55f3f49c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18952)[0m     @     0x55f3f4938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18952)[0m     @     0x55f3f49c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18952)[0m     @     0x55f3f49c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18952)[0m     @     0x55f3f4938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18952)[0m     @     0x55f3f49c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18952)[0m     @     0x55f3f49c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18952)[0m     @     0x55f3f4938689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18952)[0m     @     0x55f3f49c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18901)[0m     @     0x7fc8da80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18901)[0m     @     0x7fc8d784b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18901)[0m     @     0x7fc8d7849c3f at::native::copy_impl()
[2m[36m(pid=18901)[0m     @     0x7fc8d784aed4 at::native::copy_()
[2m[36m(pid=18901)[0m     @     0x7fc8d7f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18930)[0m     @     0x7f77c97f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18930)[0m     @     0x7f77c7af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18930)[0m     @     0x7f77c7bff148 at::Tensor::copy_()
[2m[36m(pid=18930)[0m     @     0x7f77cdeb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18930)[0m     @     0x55729d173fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18930)[0m     @     0x55729d0ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18930)[0m     @     0x55729d159baf _PyEval_EvalCodeWithName
[2m[36m(pid=18930)[0m     @     0x55729d15aa20 method_vectorcall
[2m[36m(pid=18930)[0m     @     0x55729d0cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18930)[0m     @     0x55729d159baf _PyEval_EvalCodeWithName
[2m[36m(pid=18930)[0m     @     0x55729d15a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18930)[0m     @     0x55729d0cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18930)[0m     @     0x55729d159baf _PyEval_EvalCodeWithName
[2m[36m(pid=18930)[0m     @     0x55729d15a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18930)[0m     @     0x55729d0cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18930)[0m     @     0x55729d159baf _PyEval_EvalCodeWithName
[2m[36m(pid=18930)[0m     @     0x55729d15a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18930)[0m     @     0x55729d0cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18930)[0m     @     0x55729d159baf _PyEval_EvalCodeWithName
[2m[36m(pid=18886)[0m     @     0x7f5c5dd8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18886)[0m     @     0x7f5c5de97148 at::Tensor::copy_()
[2m[36m(pid=18886)[0m     @     0x7f5c5fa8e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18886)[0m     @     0x7f5c5dd8f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18940)[0m     @     0x7efe31a80e11 at::TensorIterator::for_each()
[2m[36m(pid=18940)[0m     @     0x7efe34799c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18940)[0m     @     0x7efe347bccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18940)[0m     @     0x7efe317fa009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18940)[0m     @     0x7efe317f8c3f at::native::copy_impl()
[2m[36m(pid=18850)[0m     @     0x7f0cbc780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18850)[0m     @     0x7f0cbc7a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18850)[0m     @     0x7f0cb97e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18850)[0m     @     0x7f0cb97dfc3f at::native::copy_impl()
[2m[36m(pid=18850)[0m     @     0x7f0cb97e0ed4 at::native::copy_()
[2m[36m(pid=18850)[0m     @     0x7f0cb9f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18897)[0m     @     0x7edad9aa3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18897)[0m     @     0x7edad9aa1c3f at::native::copy_impl()
[2m[36m(pid=18897)[0m     @     0x7edad9aa2ed4 at::native::copy_()
[2m[36m(pid=18897)[0m     @     0x7edada1e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18897)[0m     @     0x7edada2ed148 at::Tensor::copy_()
[2m[36m(pid=18942)[0m     @     0x7f7ab82afc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18942)[0m     @     0x7f7ab82d2cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18942)[0m     @     0x7f7ab5310009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18942)[0m     @     0x7f7ab530ec3f at::native::copy_impl()
[2m[36m(pid=18942)[0m     @     0x7f7ab530fed4 at::native::copy_()
[2m[36m(pid=18945)[0m     @     0x7f3e97e39e11 at::TensorIterator::for_each()
[2m[36m(pid=18945)[0m     @     0x7f3e9ab52c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18945)[0m     @     0x7f3e9ab75cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18945)[0m     @     0x7f3e97bb3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18945)[0m     @     0x7f3e97bb1c3f at::native::copy_impl()
[2m[36m(pid=18945)[0m     @     0x7f3e97bb2ed4 at::native::copy_()
[2m[36m(pid=18928)[0m     @     0x7f5f89422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18928)[0m     @     0x7f5f89420c3f at::native::copy_impl()
[2m[36m(pid=18928)[0m     @     0x7f5f89421ed4 at::native::copy_()
[2m[36m(pid=18928)[0m     @     0x7f5f89b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18928)[0m     @     0x7f5f89c6c148 at::Tensor::copy_()
[2m[36m(pid=18899)[0m     @     0x7fbdc7bf5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18899)[0m     @     0x7fbdc5ef65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18899)[0m     @     0x7fbdc5ffe148 at::Tensor::copy_()
[2m[36m(pid=18899)[0m     @     0x7fbdcc2b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18899)[0m     @     0x559eb32f9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18899)[0m     @     0x559eb3254b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18899)[0m     @     0x559eb32dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18899)[0m     @     0x559eb32e0a20 method_vectorcall
[2m[36m(pid=18899)[0m     @     0x559eb3254bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18899)[0m     @     0x559eb32dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18899)[0m     @     0x559eb32e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18899)[0m     @     0x559eb3255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18899)[0m     @     0x559eb32dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18899)[0m     @     0x559eb32e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18899)[0m     @     0x559eb3255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18899)[0m     @     0x559eb32dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18899)[0m     @     0x559eb32e0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18899)[0m     @     0x559eb3255689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18899)[0m     @     0x559eb32dfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18848)[0m     @     0x7ed862c07cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18848)[0m     @     0x7ed85fc45009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18848)[0m     @     0x7ed85fc43c3f at::native::copy_impl()
[2m[36m(pid=18848)[0m     @     0x7ed85fc44ed4 at::native::copy_()
[2m[36m(pid=18848)[0m     @     0x7ed8603875cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18837)[0m     @     0x7f7cf6d79c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18837)[0m     @     0x7f7cf6d9ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18837)[0m     @     0x7f7cf3dda009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18837)[0m     @     0x7f7cf3dd8c3f at::native::copy_impl()
[2m[36m(pid=18837)[0m     @     0x7f7cf3dd9ed4 at::native::copy_()
[2m[36m(pid=18837)[0m     @     0x7f7cf451c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18907)[0m     @     0x7fbb96b86009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18907)[0m     @     0x7fbb96b84c3f at::native::copy_impl()
[2m[36m(pid=18907)[0m     @     0x7fbb96b85ed4 at::native::copy_()
[2m[36m(pid=18907)[0m     @     0x7fbb972c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18919)[0m     @     0x7fafc28b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18919)[0m     @     0x7fafbf8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18919)[0m     @     0x7fafbf8f4c3f at::native::copy_impl()
[2m[36m(pid=18919)[0m     @     0x7fafbf8f5ed4 at::native::copy_()
[2m[36m(pid=18919)[0m     @     0x7fafc00385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18923)[0m     @     0x7fa4fe895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18923)[0m     @     0x7fa4fe8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18923)[0m     @     0x7fa4fb8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18923)[0m     @     0x7fa4fb8f4c3f at::native::copy_impl()
[2m[36m(pid=18923)[0m     @     0x7fa4fb8f5ed4 at::native::copy_()
[2m[36m(pid=18923)[0m     @     0x7fa4fc0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18914)[0m     @     0x7f9b104605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18914)[0m     @     0x7f9b10568148 at::Tensor::copy_()
[2m[36m(pid=18914)[0m     @     0x7f9b1681ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18914)[0m     @     0x55570baecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18914)[0m     @     0x55570ba47b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18914)[0m     @     0x55570bad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18914)[0m     @     0x55570bad3a20 method_vectorcall
[2m[36m(pid=18914)[0m     @     0x55570ba47bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18914)[0m     @     0x55570bad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18914)[0m     @     0x55570bad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18914)[0m     @     0x55570ba48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18914)[0m     @     0x55570bad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18914)[0m     @     0x55570bad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18914)[0m     @     0x55570ba48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18914)[0m     @     0x55570bad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18914)[0m     @     0x55570bad3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18914)[0m     @     0x55570ba48689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18914)[0m     @     0x55570bad2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18922)[0m     @     0x7f70aeaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18922)[0m     @     0x7f70aeacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18922)[0m     @     0x7f70abb0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18922)[0m     @     0x7f70abb0bc3f at::native::copy_impl()
[2m[36m(pid=18922)[0m     @     0x7f70abb0ced4 at::native::copy_()
[2m[36m(pid=18946)[0m     @     0x7f1fa2efbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18946)[0m     @     0x7f1fa2f1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18946)[0m     @     0x7f1f9ff5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18946)[0m     @     0x7f1f9ff5ac3f at::native::copy_impl()
[2m[36m(pid=18946)[0m     @     0x7f1f9ff5bed4 at::native::copy_()
[2m[36m(pid=18860)[0m     @     0x7f71a00abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18860)[0m     @     0x7f71a00cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18860)[0m     @     0x7f719d10c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18860)[0m     @     0x7f719d10ac3f at::native::copy_impl()
[2m[36m(pid=18860)[0m     @     0x7f719d10bed4 at::native::copy_()
[2m[36m(pid=18852)[0m     @     0x7fb042481e11 at::TensorIterator::for_each()
[2m[36m(pid=18852)[0m     @     0x7fb04519ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18852)[0m     @     0x7fb0451bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18852)[0m     @     0x7fb0421fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18852)[0m     @     0x7fb0421f9c3f at::native::copy_impl()
[2m[36m(pid=18852)[0m     @     0x7fb0421faed4 at::native::copy_()
[2m[36m(pid=18932)[0m     @     0x7f9db3e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18932)[0m     @     0x7f9db21345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18932)[0m     @     0x7f9db223c148 at::Tensor::copy_()
[2m[36m(pid=18932)[0m     @     0x7f9db84f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18932)[0m     @     0x55fb9564bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18932)[0m     @     0x55fb955a6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18932)[0m     @     0x55fb95631baf _PyEval_EvalCodeWithName
[2m[36m(pid=18932)[0m     @     0x55fb95632a20 method_vectorcall
[2m[36m(pid=18932)[0m     @     0x55fb955a6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18932)[0m     @     0x55fb95631baf _PyEval_EvalCodeWithName
[2m[36m(pid=18932)[0m     @     0x55fb95632643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18932)[0m     @     0x55fb955a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18932)[0m     @     0x55fb95631baf _PyEval_EvalCodeWithName
[2m[36m(pid=18932)[0m     @     0x55fb95632643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18932)[0m     @     0x55fb955a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18932)[0m     @     0x55fb95631baf _PyEval_EvalCodeWithName
[2m[36m(pid=18932)[0m     @     0x55fb95632643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18932)[0m     @     0x55fb955a7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18932)[0m     @     0x55fb95631baf _PyEval_EvalCodeWithName
[2m[36m(pid=18840)[0m     @     0x7ef122e7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18840)[0m     @     0x7ef11feb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18840)[0m     @     0x7ef11feb7c3f at::native::copy_impl()
[2m[36m(pid=18840)[0m     @     0x7ef11feb8ed4 at::native::copy_()
[2m[36m(pid=18840)[0m     @     0x7ef1205fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18849)[0m     @     0x7f65f8e75e11 at::TensorIterator::for_each()
[2m[36m(pid=18849)[0m     @     0x7f65fbb8ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18849)[0m     @     0x7f65fbbb1cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18849)[0m     @     0x7f65f8bef009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18849)[0m     @     0x7f65f8bedc3f at::native::copy_impl()
[2m[36m(pid=18849)[0m     @     0x7f65f8beeed4 at::native::copy_()
[2m[36m(pid=18844)[0m     @     0x7f0a9faa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18844)[0m     @     0x7f0a9cae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18844)[0m     @     0x7f0a9cadfc3f at::native::copy_impl()
[2m[36m(pid=18844)[0m     @     0x7f0a9cae0ed4 at::native::copy_()
[2m[36m(pid=18844)[0m     @     0x7f0a9d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18966)[0m     @     0x7f49a97e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18966)[0m     @     0x7f49a97dfc3f at::native::copy_impl()
[2m[36m(pid=18966)[0m     @     0x7f49a97e0ed4 at::native::copy_()
[2m[36m(pid=18966)[0m     @     0x7f49a9f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18966)[0m     @     0x7f49aa02b148 at::Tensor::copy_()
[2m[36m(pid=18859)[0m     @     0x7f1ab332cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18859)[0m     @     0x7f1ab062064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18859)[0m     @     0x7f1ab0623977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18918)[0m     @     0x7ef02a481b53 at::TensorIterator::for_each()
[2m[36m(pid=18918)[0m     @     0x7ef02a481e11 at::TensorIterator::for_each()
[2m[36m(pid=18918)[0m     @     0x7ef02d19ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18918)[0m     @     0x7ef02d1bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18918)[0m     @     0x7ef02a1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18912)[0m     @     0x7ef912582977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18912)[0m     @     0x7ef912582b53 at::TensorIterator::for_each()
[2m[36m(pid=18912)[0m     @     0x7ef912582e11 at::TensorIterator::for_each()
[2m[36m(pid=18896)[0m     @     0x7f756a481b53 at::TensorIterator::for_each()
[2m[36m(pid=18896)[0m     @     0x7f756a481e11 at::TensorIterator::for_each()
[2m[36m(pid=18896)[0m     @     0x7f756d19ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18896)[0m     @     0x7f756d1bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18896)[0m     @     0x7f756a1fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18917)[0m     @     0x7f924013fe11 at::TensorIterator::for_each()
[2m[36m(pid=18917)[0m     @     0x7f9242e58c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18917)[0m     @     0x7f9242e7bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18917)[0m     @     0x7f923feb9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18917)[0m     @     0x7f923feb7c3f at::native::copy_impl()
[2m[36m(pid=18917)[0m     @     0x7f923feb8ed4 at::native::copy_()
[2m[36m(pid=18857)[0m     @     0x7efb3d17bb53 at::TensorIterator::for_each()
[2m[36m(pid=18857)[0m     @     0x7efb3d17be11 at::TensorIterator::for_each()
[2m[36m(pid=18857)[0m     @     0x7efb3fe94c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18857)[0m     @     0x7efb3feb7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18857)[0m     @     0x7efb3cef5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18857)[0m     @     0x7efb3cef3c3f at::native::copy_impl()
[2m[36m(pid=18838)[0m     @     0x7f22e963be11 at::TensorIterator::for_each()
[2m[36m(pid=18838)[0m     @     0x7f22ec354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18838)[0m     @     0x7f22ec377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18838)[0m     @     0x7f22e93b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18838)[0m     @     0x7f22e93b3c3f at::native::copy_impl()
[2m[36m(pid=18846)[0m     @     0x7fb519b15fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=18846)[0m     @     0x7fb516e0964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=18846)[0m     @     0x7fb516e0c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18876)[0m     @     0x7f689112d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18876)[0m     @     0x7f689112db53 at::TensorIterator::for_each()
[2m[36m(pid=18876)[0m     @     0x7f689112de11 at::TensorIterator::for_each()
[2m[36m(pid=18876)[0m     @     0x7f6893e46c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18876)[0m     @     0x7f6893e69cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18836)[0m     @     0x7f33038a7b53 at::TensorIterator::for_each()
[2m[36m(pid=18836)[0m     @     0x7f33038a7e11 at::TensorIterator::for_each()
[2m[36m(pid=18836)[0m     @     0x7f33065c0c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18836)[0m     @     0x7f33065e3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18836)[0m     @     0x7f3303621009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18836)[0m     @     0x7f330361fc3f at::native::copy_impl()
[2m[36m(pid=18868)[0m     @     0x7ef46563bb53 at::TensorIterator::for_each()
[2m[36m(pid=18868)[0m     @     0x7ef46563be11 at::TensorIterator::for_each()
[2m[36m(pid=18868)[0m     @     0x7ef468354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18868)[0m     @     0x7ef468377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18868)[0m     @     0x7ef4653b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18868)[0m     @     0x7ef4653b3c3f at::native::copy_impl()
[2m[36m(pid=18894)[0m     @     0x7ef84a692b53 at::TensorIterator::for_each()
[2m[36m(pid=18894)[0m     @     0x7ef84a692e11 at::TensorIterator::for_each()
[2m[36m(pid=18894)[0m     @     0x7ef84d3abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18894)[0m     @     0x7ef84d3cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18894)[0m     @     0x7ef84a40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18894)[0m     @     0x7ef84a40ac3f at::native::copy_impl()
[2m[36m(pid=18959)[0m     @     0x7f5f21ce9e11 at::TensorIterator::for_each()
[2m[36m(pid=18959)[0m     @     0x7f5f24a02c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18959)[0m     @     0x7f5f24a25cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18959)[0m     @     0x7f5f21a63009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18959)[0m     @     0x7f5f21a61c3f at::native::copy_impl()
[2m[36m(pid=18959)[0m     @     0x7f5f21a62ed4 at::native::copy_()
[2m[36m(pid=18892)[0m     @     0x7ef9f5a67e11 at::TensorIterator::for_each()
[2m[36m(pid=18892)[0m     @     0x7ef9f8780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18892)[0m     @     0x7ef9f87a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18892)[0m     @     0x7ef9f57e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18892)[0m     @     0x7ef9f57dfc3f at::native::copy_impl()
[2m[36m(pid=18892)[0m     @     0x7ef9f57e0ed4 at::native::copy_()
[2m[36m(pid=18865)[0m     @     0x7f1646827977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18865)[0m     @     0x7f1646827b53 at::TensorIterator::for_each()
[2m[36m(pid=18862)[0m     @     0x7fba963bdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18862)[0m     @     0x7fba963e0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18862)[0m     @     0x7fba9341e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18862)[0m     @     0x7fba9341cc3f at::native::copy_impl()
[2m[36m(pid=18862)[0m     @     0x7fba9341ded4 at::native::copy_()
[2m[36m(pid=18951)[0m     @     0x7f91ed9f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18951)[0m     @     0x7f91ed9f0c3f at::native::copy_impl()
[2m[36m(pid=18951)[0m     @     0x7f91ed9f1ed4 at::native::copy_()
[2m[36m(pid=18866)[0m     @     0x7ee2d949e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18866)[0m     @     0x7ee2d949cc3f at::native::copy_impl()
[2m[36m(pid=18866)[0m     @     0x7ee2d949ded4 at::native::copy_()
[2m[36m(pid=18911)[0m     @     0x7f6ff763be11 at::TensorIterator::for_each()
[2m[36m(pid=18911)[0m     @     0x7f6ffa354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18911)[0m     @     0x7f6ffa377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18911)[0m     @     0x7f6ff73b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18911)[0m     @     0x7f6ff73b3c3f at::native::copy_impl()
[2m[36m(pid=18851)[0m     @     0x7f2aedcb2c3f at::native::copy_impl()
[2m[36m(pid=18851)[0m     @     0x7f2aedcb3ed4 at::native::copy_()
[2m[36m(pid=18851)[0m     @     0x7f2aee3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18870)[0m     @     0x7fa230d67b53 at::TensorIterator::for_each()
[2m[36m(pid=18870)[0m     @     0x7fa230d67e11 at::TensorIterator::for_each()
[2m[36m(pid=18870)[0m     @     0x7fa233a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18870)[0m     @     0x7fa233aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18916)[0m     @     0x7f5ea411f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18916)[0m     @     0x7f5ea411dc3f at::native::copy_impl()
[2m[36m(pid=18916)[0m     @     0x7f5ea411eed4 at::native::copy_()
[2m[36m(pid=18853)[0m     @     0x7f6b76bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18853)[0m     @     0x7f6b76bc4c3f at::native::copy_impl()
[2m[36m(pid=18853)[0m     @     0x7f6b76bc5ed4 at::native::copy_()
[2m[36m(pid=18841)[0m     @     0x7f5c5d15ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18841)[0m     @     0x7f5c5d17dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18841)[0m     @     0x7f5c5a1bb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18841)[0m     @     0x7f5c5a1b9c3f at::native::copy_impl()
[2m[36m(pid=18915)[0m     @     0x7f31dd9dde11 at::TensorIterator::for_each()
[2m[36m(pid=18915)[0m     @     0x7f31e06f6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18915)[0m     @     0x7f31e0719cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18915)[0m     @     0x7f31dd757009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18915)[0m     @     0x7f31dd755c3f at::native::copy_impl()
[2m[36m(pid=18915)[0m     @     0x7f31dd756ed4 at::native::copy_()
[2m[36m(pid=18953)[0m     @     0x7f46dafebc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18953)[0m     @     0x7f46db00ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18953)[0m     @     0x7f46d804c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18953)[0m     @     0x7f46d804ac3f at::native::copy_impl()
[2m[36m(pid=18953)[0m     @     0x7f46d804bed4 at::native::copy_()
[2m[36m(pid=18903)[0m     @     0x7f9c94d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=18903)[0m     @     0x7f9c94d67b53 at::TensorIterator::for_each()
[2m[36m(pid=18913)[0m     @     0x7f81f9fb7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18913)[0m     @     0x7f81f9fb5c3f at::native::copy_impl()
[2m[36m(pid=18913)[0m     @     0x7f81f9fb6ed4 at::native::copy_()
[2m[36m(pid=18913)[0m     @     0x7f81fa6f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18834)[0m     @     0x7fcb88bd6ed4 at::native::copy_()
[2m[36m(pid=18834)[0m     @     0x7fcb893195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18834)[0m     @     0x7fcb89421148 at::Tensor::copy_()
[2m[36m(pid=18834)[0m     @     0x7fcb8b018989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18833)[0m     @     0x7f6c6df0f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18833)[0m     @     0x7f6c6df0dc3f at::native::copy_impl()
[2m[36m(pid=18833)[0m     @     0x7f6c6df0eed4 at::native::copy_()
[2m[36m(pid=18833)[0m     @     0x7f6c6e6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18872)[0m     @     0x7f865ed0aed4 at::native::copy_()
[2m[36m(pid=18872)[0m     @     0x7f865f44d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18872)[0m     @     0x7f865f555148 at::Tensor::copy_()
[2m[36m(pid=18872)[0m     @     0x7f866114c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18905)[0m     @     0x7ee3efb4e148 at::Tensor::copy_()
[2m[36m(pid=18905)[0m     @     0x7ee3f5e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18905)[0m     @     0x55dff3097fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18905)[0m     @     0x55dff2ff2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18905)[0m     @     0x55dff307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18905)[0m     @     0x55dff307ea20 method_vectorcall
[2m[36m(pid=18905)[0m     @     0x55dff2ff2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18905)[0m     @     0x55dff307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18905)[0m     @     0x55dff307e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18905)[0m     @     0x55dff2ff3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18905)[0m     @     0x55dff307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18905)[0m     @     0x55dff307e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18905)[0m     @     0x55dff2ff3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18905)[0m     @     0x55dff307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18905)[0m     @     0x55dff307e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18905)[0m     @     0x55dff2ff3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18905)[0m     @     0x55dff307dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18939)[0m     @     0x7f71ee40bed4 at::native::copy_()
[2m[36m(pid=18939)[0m     @     0x7f71eeb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18939)[0m     @     0x7f71eec56148 at::Tensor::copy_()
[2m[36m(pid=18939)[0m     @     0x7f71f084d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18898)[0m     @     0x7fbb6e8d8c3f at::native::copy_impl()
[2m[36m(pid=18898)[0m     @     0x7fbb6e8d9ed4 at::native::copy_()
[2m[36m(pid=18898)[0m     @     0x7fbb6f01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18921)[0m     @     0x55e77a650689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18921)[0m     @     0x55e77a6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18921)[0m     @     0x55e77a6db643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18921)[0m     @     0x55e77a650689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18921)[0m     @     0x55e77a6dabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18935)[0m     @     0x55893d827689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18935)[0m     @     0x55893d8b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18890)[0m     @     0x7f883eb46148 at::Tensor::copy_()
[2m[36m(pid=18890)[0m     @     0x7f8844dfcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18890)[0m     @     0x559778d03fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18890)[0m     @     0x559778c5eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18890)[0m     @     0x559778ce9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18890)[0m     @     0x559778ceaa20 method_vectorcall
[2m[36m(pid=18890)[0m     @     0x559778c5ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18890)[0m     @     0x559778ce9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18890)[0m     @     0x559778cea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18890)[0m     @     0x559778c5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18890)[0m     @     0x559778ce9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18890)[0m     @     0x559778cea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18890)[0m     @     0x559778c5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18890)[0m     @     0x559778ce9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18890)[0m     @     0x559778cea643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18890)[0m     @     0x559778c5f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18890)[0m     @     0x559778ce9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18906)[0m     @     0x7fae0c5bd148 at::Tensor::copy_()
[2m[36m(pid=18906)[0m     @     0x7fae12873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18906)[0m     @     0x560276dd7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18906)[0m     @     0x560276d32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18906)[0m     @     0x560276dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18906)[0m     @     0x560276dbea20 method_vectorcall
[2m[36m(pid=18906)[0m     @     0x560276d32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18906)[0m     @     0x560276dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18906)[0m     @     0x560276dbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18906)[0m     @     0x560276d33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18906)[0m     @     0x560276dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18906)[0m     @     0x560276dbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18906)[0m     @     0x560276d33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18906)[0m     @     0x560276dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18906)[0m     @     0x560276dbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18906)[0m     @     0x560276d33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18906)[0m     @     0x560276dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18835)[0m     @     0x7f2cdcd045cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18835)[0m     @     0x7f2cdce0c148 at::Tensor::copy_()
[2m[36m(pid=18835)[0m     @     0x7f2cdea03989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18847)[0m     @     0x7f521e27c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18847)[0m     @     0x7f521e27ac3f at::native::copy_impl()
[2m[36m(pid=18847)[0m     @     0x7f521e27bed4 at::native::copy_()
[2m[36m(pid=18875)[0m     @     0x7fafe78f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18875)[0m     @     0x7fafe78f4c3f at::native::copy_impl()
[2m[36m(pid=18875)[0m     @     0x7fafe78f5ed4 at::native::copy_()
[2m[36m(pid=18944)[0m     @     0x7efc4eddced4 at::native::copy_()
[2m[36m(pid=18944)[0m     @     0x7efc4f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18938)[0m     @     0x7f301c8cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18938)[0m     @     0x7f301c8cac3f at::native::copy_impl()
[2m[36m(pid=18938)[0m     @     0x7f301c8cbed4 at::native::copy_()
[2m[36m(pid=18961)[0m     @     0x7f89bfaa4e11 at::TensorIterator::for_each()
[2m[36m(pid=18961)[0m     @     0x7f89c27bdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18961)[0m     @     0x7f89c27e0cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18843)[0m     @     0x7f01d2906ed4 at::native::copy_()
[2m[36m(pid=18843)[0m     @     0x7f01d30495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18963)[0m     @     0x7f822c7c7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18963)[0m     @     0x7f822c7c5c3f at::native::copy_impl()
[2m[36m(pid=18963)[0m     @     0x7f822c7c6ed4 at::native::copy_()
[2m[36m(pid=18842)[0m     @     0x7f986c570c3f at::native::copy_impl()
[2m[36m(pid=18842)[0m     @     0x7f986c571ed4 at::native::copy_()
[2m[36m(pid=18842)[0m     @     0x7f986ccb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18901)[0m     @     0x7fc8d8095148 at::Tensor::copy_()
[2m[36m(pid=18901)[0m     @     0x7fc8d9c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18901)[0m     @     0x7fc8d7f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18901)[0m     @     0x7fc8d8095148 at::Tensor::copy_()
[2m[36m(pid=18886)[0m     @     0x7f5c5de97148 at::Tensor::copy_()
[2m[36m(pid=18886)[0m     @     0x7f5c6414dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18886)[0m     @     0x56483a8f7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18886)[0m     @     0x56483a852b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18886)[0m     @     0x56483a8ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18886)[0m     @     0x56483a8dea20 method_vectorcall
[2m[36m(pid=18886)[0m     @     0x56483a852bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18886)[0m     @     0x56483a8ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18886)[0m     @     0x56483a8de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18886)[0m     @     0x56483a853689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18886)[0m     @     0x56483a8ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18886)[0m     @     0x56483a8de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18886)[0m     @     0x56483a853689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18886)[0m     @     0x56483a8ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18886)[0m     @     0x56483a8de643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18886)[0m     @     0x56483a853689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18886)[0m     @     0x56483a8ddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18940)[0m     @     0x7efe317f9ed4 at::native::copy_()
[2m[36m(pid=18940)[0m     @     0x7efe31f3c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18940)[0m     @     0x7efe32044148 at::Tensor::copy_()
[2m[36m(pid=18850)[0m     @     0x7f0cba02b148 at::Tensor::copy_()
[2m[36m(pid=18850)[0m     @     0x7f0cbbc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18850)[0m     @     0x7f0cb9f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18897)[0m     @     0x7edadbee4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18897)[0m     @     0x7edada1e55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18897)[0m     @     0x7edada2ed148 at::Tensor::copy_()
[2m[36m(pid=18897)[0m     @     0x7edae05a3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18897)[0m     @     0x560872589fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18897)[0m     @     0x5608724e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18897)[0m     @     0x56087256fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18897)[0m     @     0x560872570a20 method_vectorcall
[2m[36m(pid=18897)[0m     @     0x5608724e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18897)[0m     @     0x56087256fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18897)[0m     @     0x560872570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18942)[0m     @     0x7f7ab5a525cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18942)[0m     @     0x7f7ab5b5a148 at::Tensor::copy_()
[2m[36m(pid=18942)[0m     @     0x7f7ab7751989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18942)[0m     @     0x7f7ab5a525cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18945)[0m     @     0x7f3e982f55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18945)[0m     @     0x7f3e983fd148 at::Tensor::copy_()
[2m[36m(pid=18945)[0m     @     0x7f3e99ff4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18928)[0m     @     0x7f5f8b863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18928)[0m     @     0x7f5f89b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18928)[0m     @     0x7f5f89c6c148 at::Tensor::copy_()
[2m[36m(pid=18848)[0m     @     0x7ed86048f148 at::Tensor::copy_()
[2m[36m(pid=18848)[0m     @     0x7ed862086989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18848)[0m     @     0x7ed8603875cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18837)[0m     @     0x7f7cf4624148 at::Tensor::copy_()
[2m[36m(pid=18837)[0m     @     0x7f7cf621b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18907)[0m     @     0x7fbb973d0148 at::Tensor::copy_()
[2m[36m(pid=18907)[0m     @     0x7fbb98fc7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18907)[0m     @     0x7fbb972c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18919)[0m     @     0x7fafc0140148 at::Tensor::copy_()
[2m[36m(pid=18919)[0m     @     0x7fafc1d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18919)[0m     @     0x7fafc00385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18923)[0m     @     0x7fa4fc140148 at::Tensor::copy_()
[2m[36m(pid=18923)[0m     @     0x7fa4fdd37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18922)[0m     @     0x7f70ac24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18922)[0m     @     0x7f70ac357148 at::Tensor::copy_()
[2m[36m(pid=18922)[0m     @     0x7f70adf4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18946)[0m     @     0x7f1fa069e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18946)[0m     @     0x7f1fa07a6148 at::Tensor::copy_()
[2m[36m(pid=18946)[0m     @     0x7f1fa239d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18860)[0m     @     0x7f719d84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18860)[0m     @     0x7f719d956148 at::Tensor::copy_()
[2m[36m(pid=18860)[0m     @     0x7f719f54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18852)[0m     @     0x7fb04293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18852)[0m     @     0x7fb042a45148 at::Tensor::copy_()
[2m[36m(pid=18852)[0m     @     0x7fb04463c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18840)[0m     @     0x7ef120703148 at::Tensor::copy_()
[2m[36m(pid=18840)[0m     @     0x7ef1222fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18840)[0m     @     0x7ef1205fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18849)[0m     @     0x7f65f93315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18849)[0m     @     0x7f65f9439148 at::Tensor::copy_()
[2m[36m(pid=18849)[0m     @     0x7f65fb030989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18844)[0m     @     0x7f0a9d32b148 at::Tensor::copy_()
[2m[36m(pid=18844)[0m     @     0x7f0a9ef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18844)[0m     @     0x7f0a9d2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18844)[0m     @     0x7f0a9d32b148 at::Tensor::copy_()
[2m[36m(pid=18966)[0m     @     0x7f49abc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18966)[0m     @     0x7f49a9f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18966)[0m     @     0x7f49aa02b148 at::Tensor::copy_()
[2m[36m(pid=18966)[0m     @     0x7f49b02e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18966)[0m     @     0x55c2be10cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18966)[0m     @     0x55c2be067b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18966)[0m     @     0x55c2be0f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18966)[0m     @     0x55c2be0f3a20 method_vectorcall
[2m[36m(pid=18966)[0m     @     0x55c2be067bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18966)[0m     @     0x55c2be0f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18966)[0m     @     0x55c2be0f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18966)[0m     @     0x55c2be068689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18966)[0m     @     0x55c2be0f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18966)[0m     @     0x55c2be0f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18966)[0m     @     0x55c2be068689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18966)[0m     @     0x55c2be0f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18966)[0m     @     0x55c2be0f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18966)[0m     @     0x55c2be068689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18966)[0m     @     0x55c2be0f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x7f1ab0623b53 at::TensorIterator::for_each()
[2m[36m(pid=18918)[0m     @     0x7ef02a1f9c3f at::native::copy_impl()
[2m[36m(pid=18918)[0m     @     0x7ef02a1faed4 at::native::copy_()
[2m[36m(pid=18918)[0m     @     0x7ef02a93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18918)[0m     @     0x7ef02aa45148 at::Tensor::copy_()
[2m[36m(pid=18912)[0m     @     0x7ef91529bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18912)[0m     @     0x7ef9152becfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18912)[0m     @     0x7ef9122fc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18912)[0m     @     0x7ef9122fac3f at::native::copy_impl()
[2m[36m(pid=18912)[0m     @     0x7ef9122fbed4 at::native::copy_()
[2m[36m(pid=18896)[0m     @     0x7f756a1f9c3f at::native::copy_impl()
[2m[36m(pid=18896)[0m     @     0x7f756a1faed4 at::native::copy_()
[2m[36m(pid=18896)[0m     @     0x7f756a93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18896)[0m     @     0x7f756aa45148 at::Tensor::copy_()
[2m[36m(pid=18917)[0m     @     0x7f92405fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18917)[0m     @     0x7f9240703148 at::Tensor::copy_()
[2m[36m(pid=18917)[0m     @     0x7f92422fa989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18917)[0m     @     0x7f92405fb5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18857)[0m     @     0x7efb3cef4ed4 at::native::copy_()
[2m[36m(pid=18857)[0m     @     0x7efb3d6375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18857)[0m     @     0x7efb3d73f148 at::Tensor::copy_()
[2m[36m(pid=18838)[0m     @     0x7f22e93b4ed4 at::native::copy_()
[2m[36m(pid=18838)[0m     @     0x7f22e9af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18838)[0m     @     0x7f22e9bff148 at::Tensor::copy_()
[2m[36m(pid=18838)[0m     @     0x7f22eb7f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18846)[0m     @     0x7fb516e0cb53 at::TensorIterator::for_each()
[2m[36m(pid=18846)[0m     @     0x7fb516e0ce11 at::TensorIterator::for_each()
[2m[36m(pid=18846)[0m     @     0x7fb519b25c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18846)[0m     @     0x7fb519b48cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18876)[0m     @     0x7f6890ea7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18876)[0m     @     0x7f6890ea5c3f at::native::copy_impl()
[2m[36m(pid=18876)[0m     @     0x7f6890ea6ed4 at::native::copy_()
[2m[36m(pid=18876)[0m     @     0x7f68915e95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18836)[0m     @     0x7f3303620ed4 at::native::copy_()
[2m[36m(pid=18836)[0m     @     0x7f3303d635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18836)[0m     @     0x7f3303e6b148 at::Tensor::copy_()
[2m[36m(pid=18836)[0m     @     0x7f3305a62989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18868)[0m     @     0x7ef4653b4ed4 at::native::copy_()
[2m[36m(pid=18868)[0m     @     0x7ef465af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18868)[0m     @     0x7ef465bff148 at::Tensor::copy_()
[2m[36m(pid=18868)[0m     @     0x7ef4677f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18894)[0m     @     0x7ef84a40bed4 at::native::copy_()
[2m[36m(pid=18894)[0m     @     0x7ef84ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18894)[0m     @     0x7ef84ac56148 at::Tensor::copy_()
[2m[36m(pid=18959)[0m     @     0x7f5f221a55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18959)[0m     @     0x7f5f222ad148 at::Tensor::copy_()
[2m[36m(pid=18959)[0m     @     0x7f5f23ea4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18959)[0m     @     0x7f5f221a55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18959)[0m     @     0x7f5f222ad148 at::Tensor::copy_()
[2m[36m(pid=18892)[0m     @     0x7ef9f5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18892)[0m     @     0x7ef9f602b148 at::Tensor::copy_()
[2m[36m(pid=18892)[0m     @     0x7ef9f7c22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18892)[0m     @     0x7ef9f5f235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18865)[0m     @     0x7f1646827e11 at::TensorIterator::for_each()
[2m[36m(pid=18865)[0m     @     0x7f1649540c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18865)[0m     @     0x7f1649563cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18865)[0m     @     0x7f16465a1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18865)[0m     @     0x7f164659fc3f at::native::copy_impl()
[2m[36m(pid=18862)[0m     @     0x7fba93b605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18862)[0m     @     0x7fba93c68148 at::Tensor::copy_()
[2m[36m(pid=18862)[0m     @     0x7fba9585f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18951)[0m     @     0x7f91ee1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18951)[0m     @     0x7f91ee23c148 at::Tensor::copy_()
[2m[36m(pid=18951)[0m     @     0x7f91efe33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18951)[0m     @     0x7f91ee1345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18866)[0m     @     0x7ee2d9be05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18866)[0m     @     0x7ee2d9ce8148 at::Tensor::copy_()
[2m[36m(pid=18866)[0m     @     0x7ee2db8df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18911)[0m     @     0x7f6ff73b4ed4 at::native::copy_()
[2m[36m(pid=18911)[0m     @     0x7f6ff7af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18911)[0m     @     0x7f6ff7bff148 at::Tensor::copy_()
[2m[36m(pid=18911)[0m     @     0x7f6ff97f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18851)[0m     @     0x7f2aee4fe148 at::Tensor::copy_()
[2m[36m(pid=18851)[0m     @     0x7f2af00f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18851)[0m     @     0x7f2aee3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18851)[0m     @     0x7f2aee4fe148 at::Tensor::copy_()
[2m[36m(pid=18851)[0m     @     0x7f2af47b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18870)[0m     @     0x7fa230ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18870)[0m     @     0x7fa230adfc3f at::native::copy_impl()
[2m[36m(pid=18870)[0m     @     0x7fa230ae0ed4 at::native::copy_()
[2m[36m(pid=18870)[0m     @     0x7fa2312235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18916)[0m     @     0x7f5ea48615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18916)[0m     @     0x7f5ea4969148 at::Tensor::copy_()
[2m[36m(pid=18916)[0m     @     0x7f5ea6560989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18916)[0m     @     0x7f5ea48615cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18853)[0m     @     0x7f6b773085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18853)[0m     @     0x7f6b77410148 at::Tensor::copy_()
[2m[36m(pid=18853)[0m     @     0x7f6b79007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18853)[0m     @     0x7f6b773085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18841)[0m     @     0x7f5c5a1baed4 at::native::copy_()
[2m[36m(pid=18841)[0m     @     0x7f5c5a8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18841)[0m     @     0x7f5c5aa05148 at::Tensor::copy_()
[2m[36m(pid=18915)[0m     @     0x7f31dde995cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18915)[0m     @     0x7f31ddfa1148 at::Tensor::copy_()
[2m[36m(pid=18953)[0m     @     0x7f46d878e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18953)[0m     @     0x7f46d8896148 at::Tensor::copy_()
[2m[36m(pid=18953)[0m     @     0x7f46da48d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18903)[0m     @     0x7f9c94d67e11 at::TensorIterator::for_each()
[2m[36m(pid=18903)[0m     @     0x7f9c97a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18903)[0m     @     0x7f9c97aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18913)[0m     @     0x7f81fa801148 at::Tensor::copy_()
[2m[36m(pid=18913)[0m     @     0x7f81fc3f8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18913)[0m     @     0x7f81fa6f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18834)[0m     @     0x7fcb893195cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18834)[0m     @     0x7fcb89421148 at::Tensor::copy_()
[2m[36m(pid=18834)[0m     @     0x7fcbb8a2ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18834)[0m     @     0x5588043e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18834)[0m     @     0x55880433fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18834)[0m     @     0x5588043cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18834)[0m     @     0x5588043cba20 method_vectorcall
[2m[36m(pid=18834)[0m     @     0x55880433fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18834)[0m     @     0x5588043cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18834)[0m     @     0x5588043cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18834)[0m     @     0x558804340689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18833)[0m     @     0x7f6c6e759148 at::Tensor::copy_()
[2m[36m(pid=18833)[0m     @     0x7f6c70350989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18833)[0m     @     0x7f6c6e6515cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18872)[0m     @     0x7f865f44d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18872)[0m     @     0x7f865f555148 at::Tensor::copy_()
[2m[36m(pid=18872)[0m     @     0x7f866580bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18872)[0m     @     0x56482a6abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18872)[0m     @     0x56482a606b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18872)[0m     @     0x56482a691baf _PyEval_EvalCodeWithName
[2m[36m(pid=18872)[0m     @     0x56482a692a20 method_vectorcall
[2m[36m(pid=18872)[0m     @     0x56482a606bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18872)[0m     @     0x56482a691baf _PyEval_EvalCodeWithName
[2m[36m(pid=18872)[0m     @     0x56482a692643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18872)[0m     @     0x56482a607689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18872)[0m     @     0x56482a691baf _PyEval_EvalCodeWithName
[2m[36m(pid=18872)[0m     @     0x56482a692643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18872)[0m     @     0x56482a607689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18872)[0m     @     0x56482a691baf _PyEval_EvalCodeWithName
[2m[36m(pid=18872)[0m     @     0x56482a692643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18872)[0m     @     0x56482a607689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18872)[0m     @     0x56482a691baf _PyEval_EvalCodeWithName
[2m[36m(pid=18939)[0m     @     0x7f71eeb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18939)[0m     @     0x7f71eec56148 at::Tensor::copy_()
[2m[36m(pid=18939)[0m     @     0x7f71f4f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18939)[0m     @     0x55d222c85fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18939)[0m     @     0x55d222be0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18939)[0m     @     0x55d222c6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18939)[0m     @     0x55d222c6ca20 method_vectorcall
[2m[36m(pid=18939)[0m     @     0x55d222be0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18939)[0m     @     0x55d222c6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18939)[0m     @     0x55d222c6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18939)[0m     @     0x55d222be1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18939)[0m     @     0x55d222c6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18939)[0m     @     0x55d222c6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18939)[0m     @     0x55d222be1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18939)[0m     @     0x55d222c6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18939)[0m     @     0x55d222c6c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18939)[0m     @     0x55d222be1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18939)[0m     @     0x55d222c6bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18898)[0m     @     0x7fbb6f124148 at::Tensor::copy_()
[2m[36m(pid=18898)[0m     @     0x7fbb70d1b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18898)[0m     @     0x7fbb6f01c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18898)[0m     @     0x7fbb6f124148 at::Tensor::copy_()
[2m[36m(pid=18898)[0m     @     0x7fbb753dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18898)[0m     @     0x55c701188fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18898)[0m     @     0x55c7010e3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18898)[0m     @     0x55c70116ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18898)[0m     @     0x55c70116fa20 method_vectorcall
[2m[36m(pid=18835)[0m     @     0x7f2cdcd045cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18835)[0m     @     0x7f2cdce0c148 at::Tensor::copy_()
[2m[36m(pid=18835)[0m     @     0x7f2ce30c2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18835)[0m     @     0x5610e21d8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18835)[0m     @     0x5610e2133b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18835)[0m     @     0x5610e21bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18835)[0m     @     0x5610e21bfa20 method_vectorcall
[2m[36m(pid=18835)[0m     @     0x5610e2133bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18835)[0m     @     0x5610e21bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18835)[0m     @     0x5610e21bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18835)[0m     @     0x5610e2134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18835)[0m     @     0x5610e21bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18835)[0m     @     0x5610e21bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18835)[0m     @     0x5610e2134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18835)[0m     @     0x5610e21bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18835)[0m     @     0x5610e21bf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18835)[0m     @     0x5610e2134689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18835)[0m     @     0x5610e21bebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18847)[0m     @     0x7f521e9be5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18847)[0m     @     0x7f521eac6148 at::Tensor::copy_()
[2m[36m(pid=18847)[0m     @     0x7f52206bd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18875)[0m     @     0x7fafe80385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18875)[0m     @     0x7fafe8140148 at::Tensor::copy_()
[2m[36m(pid=18875)[0m     @     0x7fafe9d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18875)[0m     @     0x7fafe80385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18944)[0m     @     0x7efc4f627148 at::Tensor::copy_()
[2m[36m(pid=18944)[0m     @     0x7efc5121e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18944)[0m     @     0x7efc4f51f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18938)[0m     @     0x7f301d00e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18938)[0m     @     0x7f301d116148 at::Tensor::copy_()
[2m[36m(pid=18938)[0m     @     0x7f301ed0d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18938)[0m     @     0x7f301d00e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18961)[0m     @     0x7f89bf81e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18961)[0m     @     0x7f89bf81cc3f at::native::copy_impl()
[2m[36m(pid=18961)[0m     @     0x7f89bf81ded4 at::native::copy_()
[2m[36m(pid=18843)[0m     @     0x7f01d3151148 at::Tensor::copy_()
[2m[36m(pid=18843)[0m     @     0x7f01d4d48989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18843)[0m     @     0x7f01d30495cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18843)[0m     @     0x7f01d3151148 at::Tensor::copy_()
[2m[36m(pid=18963)[0m     @     0x7f822cf095cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18963)[0m     @     0x7f822d011148 at::Tensor::copy_()
[2m[36m(pid=18963)[0m     @     0x7f822ec08989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18842)[0m     @     0x7f986cdbc148 at::Tensor::copy_()
[2m[36m(pid=18842)[0m     @     0x7f986e9b3989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18842)[0m     @     0x7f986ccb45cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18901)[0m     @     0x7fc8de34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18901)[0m     @     0x55c400242fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18901)[0m     @     0x55c40019db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18901)[0m     @     0x55c400228baf _PyEval_EvalCodeWithName
[2m[36m(pid=18901)[0m     @     0x55c400229a20 method_vectorcall
[2m[36m(pid=18901)[0m     @     0x55c40019dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18901)[0m     @     0x55c400228baf _PyEval_EvalCodeWithName
[2m[36m(pid=18901)[0m     @     0x55c400229643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18901)[0m     @     0x55c40019e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18901)[0m     @     0x55c400228baf _PyEval_EvalCodeWithName
[2m[36m(pid=18901)[0m     @     0x55c400229643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18901)[0m     @     0x55c40019e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18901)[0m     @     0x55c400228baf _PyEval_EvalCodeWithName
[2m[36m(pid=18901)[0m     @     0x55c400229643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18901)[0m     @     0x55c40019e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18901)[0m     @     0x55c400228baf _PyEval_EvalCodeWithName
[2m[36m(pid=18940)[0m     @     0x7efe33c3b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18940)[0m     @     0x7efe31f3c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18940)[0m     @     0x7efe32044148 at::Tensor::copy_()
[2m[36m(pid=18940)[0m     @     0x7efe382fabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18940)[0m     @     0x558730cf9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18940)[0m     @     0x558730c54b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18940)[0m     @     0x558730cdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18940)[0m     @     0x558730ce0a20 method_vectorcall
[2m[36m(pid=18940)[0m     @     0x558730c54bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18940)[0m     @     0x558730cdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18850)[0m     @     0x7f0cba02b148 at::Tensor::copy_()
[2m[36m(pid=18850)[0m     @     0x7f0cc02e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18850)[0m     @     0x556a2a058fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18850)[0m     @     0x556a29fb3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18850)[0m     @     0x556a2a03ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18850)[0m     @     0x556a2a03fa20 method_vectorcall
[2m[36m(pid=18850)[0m     @     0x556a29fb3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18850)[0m     @     0x556a2a03ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18850)[0m     @     0x556a2a03f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18850)[0m     @     0x556a29fb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18850)[0m     @     0x556a2a03ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18850)[0m     @     0x556a2a03f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18850)[0m     @     0x556a29fb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18850)[0m     @     0x556a2a03ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18850)[0m     @     0x556a2a03f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18850)[0m     @     0x556a29fb4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18850)[0m     @     0x556a2a03ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18897)[0m     @     0x5608724e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18897)[0m     @     0x56087256fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18897)[0m     @     0x560872570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18897)[0m     @     0x5608724e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18897)[0m     @     0x56087256fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18897)[0m     @     0x560872570643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18897)[0m     @     0x5608724e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18897)[0m     @     0x56087256fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18942)[0m     @     0x7f7ab5b5a148 at::Tensor::copy_()
[2m[36m(pid=18942)[0m     @     0x7f7abbe10bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18942)[0m     @     0x55f538389fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18942)[0m     @     0x55f5382e4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18942)[0m     @     0x55f53836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18942)[0m     @     0x55f538370a20 method_vectorcall
[2m[36m(pid=18942)[0m     @     0x55f5382e4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18942)[0m     @     0x55f53836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18942)[0m     @     0x55f538370643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18942)[0m     @     0x55f5382e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18942)[0m     @     0x55f53836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18942)[0m     @     0x55f538370643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18942)[0m     @     0x55f5382e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18942)[0m     @     0x55f53836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18942)[0m     @     0x55f538370643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18942)[0m     @     0x55f5382e5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18942)[0m     @     0x55f53836fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18945)[0m     @     0x7f3e982f55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18945)[0m     @     0x7f3e983fd148 at::Tensor::copy_()
[2m[36m(pid=18945)[0m     @     0x7f3e9e6b3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18945)[0m     @     0x561ecff17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18945)[0m     @     0x561ecfe72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18945)[0m     @     0x561ecfefdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18945)[0m     @     0x561ecfefea20 method_vectorcall
[2m[36m(pid=18945)[0m     @     0x561ecfe72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18945)[0m     @     0x561ecfefdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18945)[0m     @     0x561ecfefe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18945)[0m     @     0x561ecfe73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18945)[0m     @     0x561ecfefdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18945)[0m     @     0x561ecfefe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18945)[0m     @     0x561ecfe73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18945)[0m     @     0x561ecfefdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18945)[0m     @     0x561ecfefe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18945)[0m     @     0x561ecfe73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18945)[0m     @     0x561ecfefdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18928)[0m     @     0x7f5f8ff22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18928)[0m     @     0x55dd123d9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18928)[0m     @     0x55dd12334b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18928)[0m     @     0x55dd123bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18928)[0m     @     0x55dd123c0a20 method_vectorcall
[2m[36m(pid=18928)[0m     @     0x55dd12334bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18928)[0m     @     0x55dd123bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18928)[0m     @     0x55dd123c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18928)[0m     @     0x55dd12335689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18928)[0m     @     0x55dd123bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18928)[0m     @     0x55dd123c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18928)[0m     @     0x55dd12335689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18928)[0m     @     0x55dd123bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18928)[0m     @     0x55dd123c0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18928)[0m     @     0x55dd12335689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18928)[0m     @     0x55dd123bfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18848)[0m     @     0x7ed86048f148 at::Tensor::copy_()
[2m[36m(pid=18848)[0m     @     0x7ed866745bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18848)[0m     @     0x564456e69fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18848)[0m     @     0x564456dc4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18848)[0m     @     0x564456e4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18848)[0m     @     0x564456e50a20 method_vectorcall
[2m[36m(pid=18848)[0m     @     0x564456dc4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18848)[0m     @     0x564456e4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18848)[0m     @     0x564456e50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18848)[0m     @     0x564456dc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18848)[0m     @     0x564456e4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18848)[0m     @     0x564456e50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18848)[0m     @     0x564456dc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18848)[0m     @     0x564456e4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18848)[0m     @     0x564456e50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18848)[0m     @     0x564456dc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18848)[0m     @     0x564456e4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18837)[0m     @     0x7f7cf451c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18837)[0m     @     0x7f7cf4624148 at::Tensor::copy_()
[2m[36m(pid=18837)[0m     @     0x7f7cfa8dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18837)[0m     @     0x563951e8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18837)[0m     @     0x563951de5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18837)[0m     @     0x563951e70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18837)[0m     @     0x563951e71a20 method_vectorcall
[2m[36m(pid=18837)[0m     @     0x563951de5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18837)[0m     @     0x563951e70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18837)[0m     @     0x563951e71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18837)[0m     @     0x563951de6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18837)[0m     @     0x563951e70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18837)[0m     @     0x563951e71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18837)[0m     @     0x563951de6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18837)[0m     @     0x563951e70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18837)[0m     @     0x563951e71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18837)[0m     @     0x563951de6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18837)[0m     @     0x563951e70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18907)[0m     @     0x7fbb973d0148 at::Tensor::copy_()
[2m[36m(pid=18907)[0m     @     0x7fbb9d686bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18907)[0m     @     0x5646063bdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18907)[0m     @     0x564606318b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18907)[0m     @     0x5646063a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=18907)[0m     @     0x5646063a4a20 method_vectorcall
[2m[36m(pid=18907)[0m     @     0x564606318bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18907)[0m     @     0x5646063a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=18907)[0m     @     0x5646063a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18907)[0m     @     0x564606319689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18907)[0m     @     0x5646063a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=18907)[0m     @     0x5646063a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18907)[0m     @     0x564606319689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18907)[0m     @     0x5646063a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=18907)[0m     @     0x5646063a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18907)[0m     @     0x564606319689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18907)[0m     @     0x5646063a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=18919)[0m     @     0x7fafc0140148 at::Tensor::copy_()
[2m[36m(pid=18919)[0m     @     0x7fafc63f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18919)[0m     @     0x5590123c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18919)[0m     @     0x55901231eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18919)[0m     @     0x5590123a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18919)[0m     @     0x5590123aaa20 method_vectorcall
[2m[36m(pid=18919)[0m     @     0x55901231ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18919)[0m     @     0x5590123a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18919)[0m     @     0x5590123aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18919)[0m     @     0x55901231f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18919)[0m     @     0x5590123a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18919)[0m     @     0x5590123aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18919)[0m     @     0x55901231f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18919)[0m     @     0x5590123a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18919)[0m     @     0x5590123aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18919)[0m     @     0x55901231f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18919)[0m     @     0x5590123a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18923)[0m     @     0x7fa4fc0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18923)[0m     @     0x7fa4fc140148 at::Tensor::copy_()
[2m[36m(pid=18923)[0m     @     0x7fa5023f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18923)[0m     @     0x5622a88e9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18923)[0m     @     0x5622a8844b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18923)[0m     @     0x5622a88cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18923)[0m     @     0x5622a88d0a20 method_vectorcall
[2m[36m(pid=18923)[0m     @     0x5622a8844bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18923)[0m     @     0x5622a88cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18923)[0m     @     0x5622a88d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18923)[0m     @     0x5622a8845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18923)[0m     @     0x5622a88cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18923)[0m     @     0x5622a88d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18923)[0m     @     0x5622a8845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18923)[0m     @     0x5622a88cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18923)[0m     @     0x5622a88d0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18923)[0m     @     0x5622a8845689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18923)[0m     @     0x5622a88cfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18922)[0m     @     0x7f70ac24f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18922)[0m     @     0x7f70ac357148 at::Tensor::copy_()
[2m[36m(pid=18922)[0m     @     0x7f70b260dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18922)[0m     @     0x5599dc004fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18922)[0m     @     0x5599dbf5fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18922)[0m     @     0x5599dbfeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18922)[0m     @     0x5599dbfeba20 method_vectorcall
[2m[36m(pid=18922)[0m     @     0x5599dbf5fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18922)[0m     @     0x5599dbfeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18922)[0m     @     0x5599dbfeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18922)[0m     @     0x5599dbf60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18922)[0m     @     0x5599dbfeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18922)[0m     @     0x5599dbfeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18922)[0m     @     0x5599dbf60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18922)[0m     @     0x5599dbfeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18922)[0m     @     0x5599dbfeb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18922)[0m     @     0x5599dbf60689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18922)[0m     @     0x5599dbfeabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18946)[0m     @     0x7f1fa069e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18946)[0m     @     0x7f1fa07a6148 at::Tensor::copy_()
[2m[36m(pid=18946)[0m     @     0x7f1fa6a5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18946)[0m     @     0x55fd9e9b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18946)[0m     @     0x55fd9e90fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18946)[0m     @     0x55fd9e99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18946)[0m     @     0x55fd9e99ba20 method_vectorcall
[2m[36m(pid=18946)[0m     @     0x55fd9e90fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18946)[0m     @     0x55fd9e99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18946)[0m     @     0x55fd9e99b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18946)[0m     @     0x55fd9e910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18946)[0m     @     0x55fd9e99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18946)[0m     @     0x55fd9e99b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18946)[0m     @     0x55fd9e910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18946)[0m     @     0x55fd9e99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18946)[0m     @     0x55fd9e99b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18946)[0m     @     0x55fd9e910689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18946)[0m     @     0x55fd9e99abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18860)[0m     @     0x7f719d84e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18860)[0m     @     0x7f719d956148 at::Tensor::copy_()
[2m[36m(pid=18860)[0m     @     0x7f71a3c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18860)[0m     @     0x55d08a474fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18860)[0m     @     0x55d08a3cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18860)[0m     @     0x55d08a45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18860)[0m     @     0x55d08a45ba20 method_vectorcall
[2m[36m(pid=18860)[0m     @     0x55d08a3cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18860)[0m     @     0x55d08a45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18860)[0m     @     0x55d08a45b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18860)[0m     @     0x55d08a3d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18860)[0m     @     0x55d08a45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18860)[0m     @     0x55d08a45b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18860)[0m     @     0x55d08a3d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18860)[0m     @     0x55d08a45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18860)[0m     @     0x55d08a45b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18860)[0m     @     0x55d08a3d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18860)[0m     @     0x55d08a45abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18852)[0m     @     0x7fb04293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18852)[0m     @     0x7fb042a45148 at::Tensor::copy_()
[2m[36m(pid=18852)[0m     @     0x7fb048cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18852)[0m     @     0x560523b25fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18852)[0m     @     0x560523a80b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18852)[0m     @     0x560523b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18852)[0m     @     0x560523b0ca20 method_vectorcall
[2m[36m(pid=18852)[0m     @     0x560523a80bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18852)[0m     @     0x560523b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18852)[0m     @     0x560523b0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18852)[0m     @     0x560523a81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18852)[0m     @     0x560523b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18852)[0m     @     0x560523b0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18852)[0m     @     0x560523a81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18852)[0m     @     0x560523b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18852)[0m     @     0x560523b0c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18852)[0m     @     0x560523a81689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18852)[0m     @     0x560523b0bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18840)[0m     @     0x7ef120703148 at::Tensor::copy_()
[2m[36m(pid=18840)[0m     @     0x7ef1269b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18840)[0m     @     0x560158604fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18840)[0m     @     0x56015855fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18840)[0m     @     0x5601585eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18840)[0m     @     0x5601585eba20 method_vectorcall
[2m[36m(pid=18840)[0m     @     0x56015855fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18840)[0m     @     0x5601585eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18840)[0m     @     0x5601585eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18840)[0m     @     0x560158560689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18840)[0m     @     0x5601585eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18840)[0m     @     0x5601585eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18840)[0m     @     0x560158560689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18840)[0m     @     0x5601585eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18840)[0m     @     0x5601585eb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18840)[0m     @     0x560158560689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18840)[0m     @     0x5601585eabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18849)[0m     @     0x7f65f93315cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18849)[0m     @     0x7f65f9439148 at::Tensor::copy_()
[2m[36m(pid=18849)[0m     @     0x7f65ff6efbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18849)[0m     @     0x55ab7db49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18849)[0m     @     0x55ab7daa4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18849)[0m     @     0x55ab7db2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18849)[0m     @     0x55ab7db30a20 method_vectorcall
[2m[36m(pid=18849)[0m     @     0x55ab7daa4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18849)[0m     @     0x55ab7db2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18849)[0m     @     0x55ab7db30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18849)[0m     @     0x55ab7daa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18849)[0m     @     0x55ab7db2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18849)[0m     @     0x55ab7db30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18849)[0m     @     0x55ab7daa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18849)[0m     @     0x55ab7db2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18849)[0m     @     0x55ab7db30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18849)[0m     @     0x55ab7daa5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18849)[0m     @     0x55ab7db2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18844)[0m     @     0x7f0aa35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18844)[0m     @     0x55d9e8223fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18844)[0m     @     0x55d9e817eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18844)[0m     @     0x55d9e8209baf _PyEval_EvalCodeWithName
[2m[36m(pid=18844)[0m     @     0x55d9e820aa20 method_vectorcall
[2m[36m(pid=18844)[0m     @     0x55d9e817ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18844)[0m     @     0x55d9e8209baf _PyEval_EvalCodeWithName
[2m[36m(pid=18844)[0m     @     0x55d9e820a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18844)[0m     @     0x55d9e817f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18844)[0m     @     0x55d9e8209baf _PyEval_EvalCodeWithName
[2m[36m(pid=18844)[0m     @     0x55d9e820a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18844)[0m     @     0x55d9e817f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18844)[0m     @     0x55d9e8209baf _PyEval_EvalCodeWithName
[2m[36m(pid=18844)[0m     @     0x55d9e820a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18844)[0m     @     0x55d9e817f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18844)[0m     @     0x55d9e8209baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x7f1ab0623e11 at::TensorIterator::for_each()
[2m[36m(pid=18918)[0m     @     0x7ef02c63c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18918)[0m     @     0x7ef02a93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18912)[0m     @     0x7ef912a3e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18912)[0m     @     0x7ef912b46148 at::Tensor::copy_()
[2m[36m(pid=18912)[0m     @     0x7ef91473d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18896)[0m     @     0x7f756c63c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18896)[0m     @     0x7f756a93d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18917)[0m     @     0x7f9240703148 at::Tensor::copy_()
[2m[36m(pid=18917)[0m     @     0x7f92469b9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18917)[0m     @     0x564dd1fb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18917)[0m     @     0x564dd1f12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18917)[0m     @     0x564dd1f9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18917)[0m     @     0x564dd1f9ea20 method_vectorcall
[2m[36m(pid=18917)[0m     @     0x564dd1f12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18917)[0m     @     0x564dd1f9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18917)[0m     @     0x564dd1f9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18917)[0m     @     0x564dd1f13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18917)[0m     @     0x564dd1f9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18917)[0m     @     0x564dd1f9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18917)[0m     @     0x564dd1f13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18917)[0m     @     0x564dd1f9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18917)[0m     @     0x564dd1f9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18917)[0m     @     0x564dd1f13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18917)[0m     @     0x564dd1f9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18857)[0m     @     0x7efb3f336989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18857)[0m     @     0x7efb3d6375cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18838)[0m     @     0x7f22e9af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18838)[0m     @     0x7f22e9bff148 at::Tensor::copy_()
[2m[36m(pid=18838)[0m     @     0x7f22efeb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18838)[0m     @     0x558f654c9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18838)[0m     @     0x558f65424b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18838)[0m     @     0x558f654afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18838)[0m     @     0x558f654b0a20 method_vectorcall
[2m[36m(pid=18838)[0m     @     0x558f65424bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18838)[0m     @     0x558f654afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18846)[0m     @     0x7fb516b86009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18846)[0m     @     0x7fb516b84c3f at::native::copy_impl()
[2m[36m(pid=18846)[0m     @     0x7fb516b85ed4 at::native::copy_()
[2m[36m(pid=18876)[0m     @     0x7f68916f1148 at::Tensor::copy_()
[2m[36m(pid=18876)[0m     @     0x7f68932e8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18836)[0m     @     0x7f3303d635cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18836)[0m     @     0x7f3303e6b148 at::Tensor::copy_()
[2m[36m(pid=18868)[0m     @     0x7ef465af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18868)[0m     @     0x7ef465bff148 at::Tensor::copy_()
[2m[36m(pid=18894)[0m     @     0x7ef84c84d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18959)[0m     @     0x7f5f28563bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18959)[0m     @     0x55f40b5eafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18959)[0m     @     0x55f40b545b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18959)[0m     @     0x55f40b5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=18959)[0m     @     0x55f40b5d1a20 method_vectorcall
[2m[36m(pid=18959)[0m     @     0x55f40b545bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18959)[0m     @     0x55f40b5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=18959)[0m     @     0x55f40b5d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18959)[0m     @     0x55f40b546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18959)[0m     @     0x55f40b5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=18959)[0m     @     0x55f40b5d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18959)[0m     @     0x55f40b546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18959)[0m     @     0x55f40b5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=18959)[0m     @     0x55f40b5d1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18959)[0m     @     0x55f40b546689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18959)[0m     @     0x55f40b5d0baf _PyEval_EvalCodeWithName
[2m[36m(pid=18892)[0m     @     0x7ef9f602b148 at::Tensor::copy_()
[2m[36m(pid=18892)[0m     @     0x7ef9fc2e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18892)[0m     @     0x5573faed3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18892)[0m     @     0x5573fae2eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18892)[0m     @     0x5573faeb9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18892)[0m     @     0x5573faebaa20 method_vectorcall
[2m[36m(pid=18892)[0m     @     0x5573fae2ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18892)[0m     @     0x5573faeb9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18892)[0m     @     0x5573faeba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18892)[0m     @     0x5573fae2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18892)[0m     @     0x5573faeb9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18892)[0m     @     0x5573faeba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18892)[0m     @     0x5573fae2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18892)[0m     @     0x5573faeb9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18892)[0m     @     0x5573faeba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18892)[0m     @     0x5573fae2f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18892)[0m     @     0x5573faeb9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18865)[0m     @     0x7f16465a0ed4 at::native::copy_()
[2m[36m(pid=18865)[0m     @     0x7f1646ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18862)[0m     @     0x7fba93b605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18862)[0m     @     0x7fba93c68148 at::Tensor::copy_()
[2m[36m(pid=18862)[0m     @     0x7fba99f1ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18862)[0m     @     0x55f8dad0bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18862)[0m     @     0x55f8dac66b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18862)[0m     @     0x55f8dacf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18862)[0m     @     0x55f8dacf2a20 method_vectorcall
[2m[36m(pid=18862)[0m     @     0x55f8dac66bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18862)[0m     @     0x55f8dacf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18862)[0m     @     0x55f8dacf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18862)[0m     @     0x55f8dac67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18862)[0m     @     0x55f8dacf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18862)[0m     @     0x55f8dacf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18862)[0m     @     0x55f8dac67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18862)[0m     @     0x55f8dacf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18862)[0m     @     0x55f8dacf2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18862)[0m     @     0x55f8dac67689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18862)[0m     @     0x55f8dacf1baf _PyEval_EvalCodeWithName
[2m[36m(pid=18951)[0m     @     0x7f91ee23c148 at::Tensor::copy_()
[2m[36m(pid=18951)[0m     @     0x7f91f44f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18951)[0m     @     0x5595dcbb7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18951)[0m     @     0x5595dcb12b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18951)[0m     @     0x5595dcb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18951)[0m     @     0x5595dcb9ea20 method_vectorcall
[2m[36m(pid=18951)[0m     @     0x5595dcb12bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18951)[0m     @     0x5595dcb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18951)[0m     @     0x5595dcb9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18951)[0m     @     0x5595dcb13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18951)[0m     @     0x5595dcb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18951)[0m     @     0x5595dcb9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18951)[0m     @     0x5595dcb13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18951)[0m     @     0x5595dcb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18951)[0m     @     0x5595dcb9e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18951)[0m     @     0x5595dcb13689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18951)[0m     @     0x5595dcb9dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18866)[0m     @     0x7ee2d9be05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18866)[0m     @     0x7ee2d9ce8148 at::Tensor::copy_()
[2m[36m(pid=18866)[0m     @     0x7ee2dff9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18866)[0m     @     0x55b9d99e3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18866)[0m     @     0x55b9d993eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18866)[0m     @     0x55b9d99c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18866)[0m     @     0x55b9d99caa20 method_vectorcall
[2m[36m(pid=18866)[0m     @     0x55b9d993ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18866)[0m     @     0x55b9d99c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18866)[0m     @     0x55b9d99ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18866)[0m     @     0x55b9d993f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18866)[0m     @     0x55b9d99c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18866)[0m     @     0x55b9d99ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18866)[0m     @     0x55b9d993f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18866)[0m     @     0x55b9d99c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18866)[0m     @     0x55b9d99ca643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18866)[0m     @     0x55b9d993f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18866)[0m     @     0x55b9d99c9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18911)[0m     @     0x7f6ff7af75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18911)[0m     @     0x7f6ff7bff148 at::Tensor::copy_()
[2m[36m(pid=18911)[0m     @     0x7f6ffdeb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18911)[0m     @     0x5601e4c86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18911)[0m     @     0x5601e4be1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18911)[0m     @     0x5601e4c6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18911)[0m     @     0x5601e4c6da20 method_vectorcall
[2m[36m(pid=18911)[0m     @     0x5601e4be1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18911)[0m     @     0x5601e4c6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18911)[0m     @     0x5601e4c6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18911)[0m     @     0x5601e4be2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18911)[0m     @     0x5601e4c6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18911)[0m     @     0x5601e4c6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18911)[0m     @     0x5601e4be2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18911)[0m     @     0x5601e4c6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18911)[0m     @     0x5601e4c6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18911)[0m     @     0x5601e4be2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18911)[0m     @     0x5601e4c6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18851)[0m     @     0x562531de5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18851)[0m     @     0x562531d40b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18851)[0m     @     0x562531dcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18851)[0m     @     0x562531dcca20 method_vectorcall
[2m[36m(pid=18851)[0m     @     0x562531d40bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18851)[0m     @     0x562531dcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18851)[0m     @     0x562531dcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18851)[0m     @     0x562531d41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18851)[0m     @     0x562531dcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18851)[0m     @     0x562531dcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18851)[0m     @     0x562531d41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18851)[0m     @     0x562531dcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18851)[0m     @     0x562531dcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18851)[0m     @     0x562531d41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18851)[0m     @     0x562531dcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18870)[0m     @     0x7fa23132b148 at::Tensor::copy_()
[2m[36m(pid=18870)[0m     @     0x7fa232f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18870)[0m     @     0x7fa2312235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18916)[0m     @     0x7f5ea4969148 at::Tensor::copy_()
[2m[36m(pid=18916)[0m     @     0x7f5eaac1fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18916)[0m     @     0x564801a8afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18916)[0m     @     0x5648019e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18916)[0m     @     0x564801a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18916)[0m     @     0x564801a71a20 method_vectorcall
[2m[36m(pid=18916)[0m     @     0x5648019e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18916)[0m     @     0x564801a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18916)[0m     @     0x564801a71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18916)[0m     @     0x5648019e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18916)[0m     @     0x564801a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18916)[0m     @     0x564801a71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18916)[0m     @     0x5648019e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18916)[0m     @     0x564801a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18916)[0m     @     0x564801a71643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18916)[0m     @     0x5648019e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18916)[0m     @     0x564801a70baf _PyEval_EvalCodeWithName
[2m[36m(pid=18853)[0m     @     0x7f6b77410148 at::Tensor::copy_()
[2m[36m(pid=18853)[0m     @     0x7f6b7d6c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18853)[0m     @     0x55b5f2c4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18853)[0m     @     0x55b5f2baab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18853)[0m     @     0x55b5f2c35baf _PyEval_EvalCodeWithName
[2m[36m(pid=18853)[0m     @     0x55b5f2c36a20 method_vectorcall
[2m[36m(pid=18853)[0m     @     0x55b5f2baabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18853)[0m     @     0x55b5f2c35baf _PyEval_EvalCodeWithName
[2m[36m(pid=18853)[0m     @     0x55b5f2c36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18853)[0m     @     0x55b5f2bab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18853)[0m     @     0x55b5f2c35baf _PyEval_EvalCodeWithName
[2m[36m(pid=18853)[0m     @     0x55b5f2c36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18853)[0m     @     0x55b5f2bab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18853)[0m     @     0x55b5f2c35baf _PyEval_EvalCodeWithName
[2m[36m(pid=18853)[0m     @     0x55b5f2c36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18853)[0m     @     0x55b5f2bab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18853)[0m     @     0x55b5f2c35baf _PyEval_EvalCodeWithName
[2m[36m(pid=18841)[0m     @     0x7f5c5c5fc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18841)[0m     @     0x7f5c5a8fd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18841)[0m     @     0x7f5c5aa05148 at::Tensor::copy_()
[2m[36m(pid=18841)[0m     @     0x7f5c60cbbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18841)[0m     @     0x55dcb1fc3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18841)[0m     @     0x55dcb1f1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18841)[0m     @     0x55dcb1fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18841)[0m     @     0x55dcb1faaa20 method_vectorcall
[2m[36m(pid=18841)[0m     @     0x55dcb1f1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18841)[0m     @     0x55dcb1fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18841)[0m     @     0x55dcb1faa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18841)[0m     @     0x55dcb1f1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18841)[0m     @     0x55dcb1fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18841)[0m     @     0x55dcb1faa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18841)[0m     @     0x55dcb1f1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18841)[0m     @     0x55dcb1fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18841)[0m     @     0x55dcb1faa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18841)[0m     @     0x55dcb1f1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18841)[0m     @     0x55dcb1fa9baf _PyEval_EvalCodeWithName
[2m[36m(pid=18915)[0m     @     0x7f31dfb98989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18915)[0m     @     0x7f31dde995cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18915)[0m     @     0x7f31ddfa1148 at::Tensor::copy_()
[2m[36m(pid=18915)[0m     @     0x7f31e4257bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18915)[0m     @     0x564e3e651fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18915)[0m     @     0x564e3e5acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18915)[0m     @     0x564e3e637baf _PyEval_EvalCodeWithName
[2m[36m(pid=18915)[0m     @     0x564e3e638a20 method_vectorcall
[2m[36m(pid=18915)[0m     @     0x564e3e5acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18915)[0m     @     0x564e3e637baf _PyEval_EvalCodeWithName
[2m[36m(pid=18915)[0m     @     0x564e3e638643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18915)[0m     @     0x564e3e5ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18915)[0m     @     0x564e3e637baf _PyEval_EvalCodeWithName
[2m[36m(pid=18915)[0m     @     0x564e3e638643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18915)[0m     @     0x564e3e5ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18915)[0m     @     0x564e3e637baf _PyEval_EvalCodeWithName
[2m[36m(pid=18915)[0m     @     0x564e3e638643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18915)[0m     @     0x564e3e5ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18915)[0m     @     0x564e3e637baf _PyEval_EvalCodeWithName
[2m[36m(pid=18953)[0m     @     0x7f46d878e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18953)[0m     @     0x7f46d8896148 at::Tensor::copy_()
[2m[36m(pid=18953)[0m     @     0x7f46deb4cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18953)[0m     @     0x564052b55fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18953)[0m     @     0x564052ab0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18953)[0m     @     0x564052b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18953)[0m     @     0x564052b3ca20 method_vectorcall
[2m[36m(pid=18953)[0m     @     0x564052ab0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18953)[0m     @     0x564052b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18953)[0m     @     0x564052b3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18953)[0m     @     0x564052ab1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18953)[0m     @     0x564052b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18953)[0m     @     0x564052b3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18953)[0m     @     0x564052ab1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18953)[0m     @     0x564052b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18953)[0m     @     0x564052b3c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18953)[0m     @     0x564052ab1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18953)[0m     @     0x564052b3bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x7f9c94ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18903)[0m     @     0x7f9c94adfc3f at::native::copy_impl()
[2m[36m(pid=18913)[0m     @     0x7f81fa801148 at::Tensor::copy_()
[2m[36m(pid=18913)[0m     @     0x7f8200ab7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18913)[0m     @     0x55dd194aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18913)[0m     @     0x55dd19409b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18913)[0m     @     0x55dd19494baf _PyEval_EvalCodeWithName
[2m[36m(pid=18913)[0m     @     0x55dd19495a20 method_vectorcall
[2m[36m(pid=18913)[0m     @     0x55dd19409bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18913)[0m     @     0x55dd19494baf _PyEval_EvalCodeWithName
[2m[36m(pid=18913)[0m     @     0x55dd19495643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18913)[0m     @     0x55dd1940a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18913)[0m     @     0x55dd19494baf _PyEval_EvalCodeWithName
[2m[36m(pid=18913)[0m     @     0x55dd19495643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18913)[0m     @     0x55dd1940a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18913)[0m     @     0x55dd19494baf _PyEval_EvalCodeWithName
[2m[36m(pid=18913)[0m     @     0x55dd19495643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18913)[0m     @     0x55dd1940a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18913)[0m     @     0x55dd19494baf _PyEval_EvalCodeWithName
[2m[36m(pid=18834)[0m     @     0x5588043cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18834)[0m     @     0x5588043cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18834)[0m     @     0x558804340689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18834)[0m     @     0x5588043cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18834)[0m     @     0x5588043cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18834)[0m     @     0x558804340689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18834)[0m     @     0x5588043cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=18833)[0m     @     0x7f6c6e759148 at::Tensor::copy_()
[2m[36m(pid=18833)[0m     @     0x7f6c745f3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18833)[0m     @     0x5572e97d1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18833)[0m     @     0x5572e972cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18833)[0m     @     0x5572e97b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18833)[0m     @     0x5572e97b8a20 method_vectorcall
[2m[36m(pid=18833)[0m     @     0x5572e972cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18833)[0m     @     0x5572e97b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18833)[0m     @     0x5572e97b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18833)[0m     @     0x5572e972d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18833)[0m     @     0x5572e97b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18833)[0m     @     0x5572e97b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18833)[0m     @     0x5572e972d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18833)[0m     @     0x5572e97b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18833)[0m     @     0x5572e97b8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18833)[0m     @     0x5572e972d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18833)[0m     @     0x5572e97b7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18898)[0m     @     0x55c7010e3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18898)[0m     @     0x55c70116ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18898)[0m     @     0x55c70116f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18898)[0m     @     0x55c7010e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18898)[0m     @     0x55c70116ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18898)[0m     @     0x55c70116f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18898)[0m     @     0x55c7010e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18898)[0m     @     0x55c70116ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18898)[0m     @     0x55c70116f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18898)[0m     @     0x55c7010e4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18898)[0m     @     0x55c70116ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18847)[0m     @     0x7f521e9be5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18847)[0m     @     0x7f521eac6148 at::Tensor::copy_()
[2m[36m(pid=18847)[0m     @     0x7f5224d7cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18847)[0m     @     0x5576e5f11fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18847)[0m     @     0x5576e5e6cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18847)[0m     @     0x5576e5ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18847)[0m     @     0x5576e5ef8a20 method_vectorcall
[2m[36m(pid=18847)[0m     @     0x5576e5e6cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18847)[0m     @     0x5576e5ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18847)[0m     @     0x5576e5ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18847)[0m     @     0x5576e5e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18847)[0m     @     0x5576e5ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18847)[0m     @     0x5576e5ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18847)[0m     @     0x5576e5e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18847)[0m     @     0x5576e5ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18847)[0m     @     0x5576e5ef8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18847)[0m     @     0x5576e5e6d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18847)[0m     @     0x5576e5ef7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18875)[0m     @     0x7fafe8140148 at::Tensor::copy_()
[2m[36m(pid=18875)[0m     @     0x7fafee3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18875)[0m     @     0x5615520b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18875)[0m     @     0x561552010b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18875)[0m     @     0x56155209bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18875)[0m     @     0x56155209ca20 method_vectorcall
[2m[36m(pid=18875)[0m     @     0x561552010bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18875)[0m     @     0x56155209bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18875)[0m     @     0x56155209c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18875)[0m     @     0x561552011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18875)[0m     @     0x56155209bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18875)[0m     @     0x56155209c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18875)[0m     @     0x561552011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18875)[0m     @     0x56155209bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18875)[0m     @     0x56155209c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18875)[0m     @     0x561552011689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18875)[0m     @     0x56155209bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18944)[0m     @     0x7efc4f627148 at::Tensor::copy_()
[2m[36m(pid=18944)[0m     @     0x7efc558ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18944)[0m     @     0x5578b3638fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18944)[0m     @     0x5578b3593b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18944)[0m     @     0x5578b361ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18944)[0m     @     0x5578b361fa20 method_vectorcall
[2m[36m(pid=18944)[0m     @     0x5578b3593bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18944)[0m     @     0x5578b361ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18944)[0m     @     0x5578b361f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18944)[0m     @     0x5578b3594689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18944)[0m     @     0x5578b361ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18944)[0m     @     0x5578b361f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18944)[0m     @     0x5578b3594689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18944)[0m     @     0x5578b361ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18944)[0m     @     0x5578b361f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18944)[0m     @     0x5578b3594689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18944)[0m     @     0x5578b361ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18938)[0m     @     0x7f301d116148 at::Tensor::copy_()
[2m[36m(pid=18938)[0m     @     0x7f30233ccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18938)[0m     @     0x56229f72efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18938)[0m     @     0x56229f689b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18938)[0m     @     0x56229f714baf _PyEval_EvalCodeWithName
[2m[36m(pid=18938)[0m     @     0x56229f715a20 method_vectorcall
[2m[36m(pid=18938)[0m     @     0x56229f689bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18938)[0m     @     0x56229f714baf _PyEval_EvalCodeWithName
[2m[36m(pid=18938)[0m     @     0x56229f715643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18938)[0m     @     0x56229f68a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18938)[0m     @     0x56229f714baf _PyEval_EvalCodeWithName
[2m[36m(pid=18938)[0m     @     0x56229f715643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18938)[0m     @     0x56229f68a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18938)[0m     @     0x56229f714baf _PyEval_EvalCodeWithName
[2m[36m(pid=18938)[0m     @     0x56229f715643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18938)[0m     @     0x56229f68a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18938)[0m     @     0x56229f714baf _PyEval_EvalCodeWithName
[2m[36m(pid=18961)[0m     @     0x7f89bff605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18961)[0m     @     0x7f89c0068148 at::Tensor::copy_()
[2m[36m(pid=18961)[0m     @     0x7f89c1c5f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18843)[0m     @     0x7f01d9407bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18843)[0m     @     0x55665f2e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18843)[0m     @     0x55665f23cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18843)[0m     @     0x55665f2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18843)[0m     @     0x55665f2c8a20 method_vectorcall
[2m[36m(pid=18843)[0m     @     0x55665f23cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18843)[0m     @     0x55665f2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18843)[0m     @     0x55665f2c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18843)[0m     @     0x55665f23d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18843)[0m     @     0x55665f2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18843)[0m     @     0x55665f2c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18843)[0m     @     0x55665f23d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18843)[0m     @     0x55665f2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18843)[0m     @     0x55665f2c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18843)[0m     @     0x55665f23d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18843)[0m     @     0x55665f2c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=18963)[0m     @     0x7f822cf095cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18963)[0m     @     0x7f822d011148 at::Tensor::copy_()
[2m[36m(pid=18963)[0m     @     0x7f82332c7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18963)[0m     @     0x5642a88adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18963)[0m     @     0x5642a8808b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18963)[0m     @     0x5642a8893baf _PyEval_EvalCodeWithName
[2m[36m(pid=18963)[0m     @     0x5642a8894a20 method_vectorcall
[2m[36m(pid=18963)[0m     @     0x5642a8808bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18963)[0m     @     0x5642a8893baf _PyEval_EvalCodeWithName
[2m[36m(pid=18963)[0m     @     0x5642a8894643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18963)[0m     @     0x5642a8809689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18963)[0m     @     0x5642a8893baf _PyEval_EvalCodeWithName
[2m[36m(pid=18963)[0m     @     0x5642a8894643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18963)[0m     @     0x5642a8809689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18963)[0m     @     0x5642a8893baf _PyEval_EvalCodeWithName
[2m[36m(pid=18963)[0m     @     0x5642a8894643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18963)[0m     @     0x5642a8809689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18963)[0m     @     0x5642a8893baf _PyEval_EvalCodeWithName
[2m[36m(pid=18842)[0m     @     0x7f986cdbc148 at::Tensor::copy_()
[2m[36m(pid=18842)[0m     @     0x7f9873072bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18842)[0m     @     0x55c819864fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18842)[0m     @     0x55c8197bfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18842)[0m     @     0x55c81984abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18842)[0m     @     0x55c81984ba20 method_vectorcall
[2m[36m(pid=18842)[0m     @     0x55c8197bfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18842)[0m     @     0x55c81984abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18842)[0m     @     0x55c81984b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18842)[0m     @     0x55c8197c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18842)[0m     @     0x55c81984abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18842)[0m     @     0x55c81984b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18842)[0m     @     0x55c8197c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18842)[0m     @     0x55c81984abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18842)[0m     @     0x55c81984b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18842)[0m     @     0x55c8197c0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18842)[0m     @     0x55c81984abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18940)[0m     @     0x558730ce0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18940)[0m     @     0x558730c55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18940)[0m     @     0x558730cdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18940)[0m     @     0x558730ce0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18940)[0m     @     0x558730c55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18940)[0m     @     0x558730cdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18940)[0m     @     0x558730ce0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18940)[0m     @     0x558730c55689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18940)[0m     @     0x558730cdfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x7f1ab333cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=18859)[0m     @     0x7f1ab335fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=18859)[0m     @     0x7f1ab039d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=18859)[0m     @     0x7f1ab039bc3f at::native::copy_impl()
[2m[36m(pid=18918)[0m     @     0x7ef02aa45148 at::Tensor::copy_()
[2m[36m(pid=18918)[0m     @     0x7ef030cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18918)[0m     @     0x5601189a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18918)[0m     @     0x5601188fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18918)[0m     @     0x560118986baf _PyEval_EvalCodeWithName
[2m[36m(pid=18918)[0m     @     0x560118987a20 method_vectorcall
[2m[36m(pid=18918)[0m     @     0x5601188fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18918)[0m     @     0x560118986baf _PyEval_EvalCodeWithName
[2m[36m(pid=18918)[0m     @     0x560118987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18918)[0m     @     0x5601188fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18918)[0m     @     0x560118986baf _PyEval_EvalCodeWithName
[2m[36m(pid=18918)[0m     @     0x560118987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18918)[0m     @     0x5601188fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18918)[0m     @     0x560118986baf _PyEval_EvalCodeWithName
[2m[36m(pid=18918)[0m     @     0x560118987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18918)[0m     @     0x5601188fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18918)[0m     @     0x560118986baf _PyEval_EvalCodeWithName
[2m[36m(pid=18912)[0m     @     0x7ef912a3e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18912)[0m     @     0x7ef912b46148 at::Tensor::copy_()
[2m[36m(pid=18912)[0m     @     0x7ef918dfcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18912)[0m     @     0x5570d6ad8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18912)[0m     @     0x5570d6a33b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18912)[0m     @     0x5570d6abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18912)[0m     @     0x5570d6abfa20 method_vectorcall
[2m[36m(pid=18912)[0m     @     0x5570d6a33bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18912)[0m     @     0x5570d6abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18912)[0m     @     0x5570d6abf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18912)[0m     @     0x5570d6a34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18912)[0m     @     0x5570d6abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18912)[0m     @     0x5570d6abf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18912)[0m     @     0x5570d6a34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18912)[0m     @     0x5570d6abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18912)[0m     @     0x5570d6abf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18912)[0m     @     0x5570d6a34689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18912)[0m     @     0x5570d6abebaf _PyEval_EvalCodeWithName
[2m[36m(pid=18896)[0m     @     0x7f756aa45148 at::Tensor::copy_()
[2m[36m(pid=18896)[0m     @     0x7f7570cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18896)[0m     @     0x5575815a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18896)[0m     @     0x5575814ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18896)[0m     @     0x55758158abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18896)[0m     @     0x55758158ba20 method_vectorcall
[2m[36m(pid=18896)[0m     @     0x5575814ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18896)[0m     @     0x55758158abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18896)[0m     @     0x55758158b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18896)[0m     @     0x557581500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18896)[0m     @     0x55758158abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18896)[0m     @     0x55758158b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18896)[0m     @     0x557581500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18896)[0m     @     0x55758158abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18896)[0m     @     0x55758158b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18896)[0m     @     0x557581500689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18896)[0m     @     0x55758158abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18857)[0m     @     0x7efb3d73f148 at::Tensor::copy_()
[2m[36m(pid=18857)[0m     @     0x7efb439f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18857)[0m     @     0x556bea034fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18857)[0m     @     0x556be9f8fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18857)[0m     @     0x556bea01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18857)[0m     @     0x556bea01ba20 method_vectorcall
[2m[36m(pid=18857)[0m     @     0x556be9f8fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18857)[0m     @     0x556bea01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18857)[0m     @     0x556bea01b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18857)[0m     @     0x556be9f90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18857)[0m     @     0x556bea01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18857)[0m     @     0x556bea01b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18857)[0m     @     0x556be9f90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18857)[0m     @     0x556bea01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18857)[0m     @     0x556bea01b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18857)[0m     @     0x556be9f90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18857)[0m     @     0x556bea01abaf _PyEval_EvalCodeWithName
[2m[36m(pid=18838)[0m     @     0x558f654b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18838)[0m     @     0x558f65425689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18838)[0m     @     0x558f654afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18838)[0m     @     0x558f654b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18838)[0m     @     0x558f65425689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18838)[0m     @     0x558f654afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18838)[0m     @     0x558f654b0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18838)[0m     @     0x558f65425689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18838)[0m     @     0x558f654afbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18846)[0m     @     0x7fb5172c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18846)[0m     @     0x7fb5173d0148 at::Tensor::copy_()
[2m[36m(pid=18846)[0m     @     0x7fb518fc7989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18876)[0m     @     0x7f68915e95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18876)[0m     @     0x7f68916f1148 at::Tensor::copy_()
[2m[36m(pid=18876)[0m     @     0x7f68979a7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18876)[0m     @     0x56141e476fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18876)[0m     @     0x56141e3d1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18876)[0m     @     0x56141e45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18876)[0m     @     0x56141e45da20 method_vectorcall
[2m[36m(pid=18876)[0m     @     0x56141e3d1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18876)[0m     @     0x56141e45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18876)[0m     @     0x56141e45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18876)[0m     @     0x56141e3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18876)[0m     @     0x56141e45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18876)[0m     @     0x56141e45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18876)[0m     @     0x56141e3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18876)[0m     @     0x56141e45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18876)[0m     @     0x56141e45d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18876)[0m     @     0x56141e3d2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18876)[0m     @     0x56141e45cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18836)[0m     @     0x7f330a121bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18836)[0m     @     0x55b85d82efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18836)[0m     @     0x55b85d789b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18836)[0m     @     0x55b85d814baf _PyEval_EvalCodeWithName
[2m[36m(pid=18836)[0m     @     0x55b85d815a20 method_vectorcall
[2m[36m(pid=18836)[0m     @     0x55b85d789bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18836)[0m     @     0x55b85d814baf _PyEval_EvalCodeWithName
[2m[36m(pid=18836)[0m     @     0x55b85d815643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18836)[0m     @     0x55b85d78a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18836)[0m     @     0x55b85d814baf _PyEval_EvalCodeWithName
[2m[36m(pid=18836)[0m     @     0x55b85d815643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18836)[0m     @     0x55b85d78a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18836)[0m     @     0x55b85d814baf _PyEval_EvalCodeWithName
[2m[36m(pid=18836)[0m     @     0x55b85d815643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18836)[0m     @     0x55b85d78a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18836)[0m     @     0x55b85d814baf _PyEval_EvalCodeWithName
[2m[36m(pid=18868)[0m     @     0x7ef46beb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18868)[0m     @     0x55db2fafefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18868)[0m     @     0x55db2fa59b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18868)[0m     @     0x55db2fae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=18868)[0m     @     0x55db2fae5a20 method_vectorcall
[2m[36m(pid=18868)[0m     @     0x55db2fa59bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18868)[0m     @     0x55db2fae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=18868)[0m     @     0x55db2fae5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18868)[0m     @     0x55db2fa5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18868)[0m     @     0x55db2fae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=18868)[0m     @     0x55db2fae5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18868)[0m     @     0x55db2fa5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18868)[0m     @     0x55db2fae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=18868)[0m     @     0x55db2fae5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18868)[0m     @     0x55db2fa5a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18868)[0m     @     0x55db2fae4baf _PyEval_EvalCodeWithName
[2m[36m(pid=18894)[0m     @     0x7ef84ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18894)[0m     @     0x7ef84ac56148 at::Tensor::copy_()
[2m[36m(pid=18894)[0m     @     0x7ef850f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18894)[0m     @     0x563de1adcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18894)[0m     @     0x563de1a37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18894)[0m     @     0x563de1ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18894)[0m     @     0x563de1ac3a20 method_vectorcall
[2m[36m(pid=18894)[0m     @     0x563de1a37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18894)[0m     @     0x563de1ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18894)[0m     @     0x563de1ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18894)[0m     @     0x563de1a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18894)[0m     @     0x563de1ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18894)[0m     @     0x563de1ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18894)[0m     @     0x563de1a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18894)[0m     @     0x563de1ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18894)[0m     @     0x563de1ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18894)[0m     @     0x563de1a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18894)[0m     @     0x563de1ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=18865)[0m     @     0x7f1646deb148 at::Tensor::copy_()
[2m[36m(pid=18865)[0m     @     0x7f16489e2989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18865)[0m     @     0x7f1646ce35cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18870)[0m     @     0x7fa23132b148 at::Tensor::copy_()
[2m[36m(pid=18870)[0m     @     0x7fa2375e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18870)[0m     @     0x56106b853fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18870)[0m     @     0x56106b7aeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18870)[0m     @     0x56106b839baf _PyEval_EvalCodeWithName
[2m[36m(pid=18870)[0m     @     0x56106b83aa20 method_vectorcall
[2m[36m(pid=18870)[0m     @     0x56106b7aebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18870)[0m     @     0x56106b839baf _PyEval_EvalCodeWithName
[2m[36m(pid=18870)[0m     @     0x56106b83a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18870)[0m     @     0x56106b7af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18870)[0m     @     0x56106b839baf _PyEval_EvalCodeWithName
[2m[36m(pid=18870)[0m     @     0x56106b83a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18870)[0m     @     0x56106b7af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18870)[0m     @     0x56106b839baf _PyEval_EvalCodeWithName
[2m[36m(pid=18870)[0m     @     0x56106b83a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18870)[0m     @     0x56106b7af689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18870)[0m     @     0x56106b839baf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x7f9c94ae0ed4 at::native::copy_()
[2m[36m(pid=18961)[0m     @     0x7f89bff605cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18961)[0m     @     0x7f89c0068148 at::Tensor::copy_()
[2m[36m(pid=18961)[0m     @     0x7f89c631ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18961)[0m     @     0x55b214bbffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18961)[0m     @     0x55b214b1ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18961)[0m     @     0x55b214ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=18961)[0m     @     0x55b214ba6a20 method_vectorcall
[2m[36m(pid=18961)[0m     @     0x55b214b1abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18961)[0m     @     0x55b214ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=18961)[0m     @     0x55b214ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18961)[0m     @     0x55b214b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18961)[0m     @     0x55b214ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=18961)[0m     @     0x55b214ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18961)[0m     @     0x55b214b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18961)[0m     @     0x55b214ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=18961)[0m     @     0x55b214ba6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18961)[0m     @     0x55b214b1b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18961)[0m     @     0x55b214ba5baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x7f1ab039ced4 at::native::copy_()
[2m[36m(pid=18846)[0m     @     0x7fb5172c85cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18865)[0m     @     0x7f1646deb148 at::Tensor::copy_()
[2m[36m(pid=18865)[0m     @     0x7f164d0a1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18865)[0m     @     0x558d3cc56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18865)[0m     @     0x558d3cbb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18865)[0m     @     0x558d3cc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18865)[0m     @     0x558d3cc3da20 method_vectorcall
[2m[36m(pid=18865)[0m     @     0x558d3cbb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18865)[0m     @     0x558d3cc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18865)[0m     @     0x558d3cc3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18865)[0m     @     0x558d3cbb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18865)[0m     @     0x558d3cc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18865)[0m     @     0x558d3cc3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18865)[0m     @     0x558d3cbb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18865)[0m     @     0x558d3cc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18865)[0m     @     0x558d3cc3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18865)[0m     @     0x558d3cbb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18865)[0m     @     0x558d3cc3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x7f9c952235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18903)[0m     @     0x7f9c9532b148 at::Tensor::copy_()
[2m[36m(pid=18903)[0m     @     0x7f9c96f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18859)[0m     @     0x7f1ab0adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18859)[0m     @     0x7f1ab0be7148 at::Tensor::copy_()
[2m[36m(pid=18859)[0m     @     0x7f1ab27de989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=18846)[0m     @     0x7fb5173d0148 at::Tensor::copy_()
[2m[36m(pid=18846)[0m     @     0x7fb51d686bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18846)[0m     @     0x55d81f0a6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18846)[0m     @     0x55d81f001b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18846)[0m     @     0x55d81f08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18846)[0m     @     0x55d81f08da20 method_vectorcall
[2m[36m(pid=18846)[0m     @     0x55d81f001bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18846)[0m     @     0x55d81f08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18846)[0m     @     0x55d81f08d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18846)[0m     @     0x55d81f002689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18846)[0m     @     0x55d81f08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18846)[0m     @     0x55d81f08d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18846)[0m     @     0x55d81f002689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18846)[0m     @     0x55d81f08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18846)[0m     @     0x55d81f08d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18846)[0m     @     0x55d81f002689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18846)[0m     @     0x55d81f08cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x7f9c952235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18859)[0m     @     0x7f1ab0adf5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=18859)[0m     @     0x7f1ab0be7148 at::Tensor::copy_()
[2m[36m(pid=18903)[0m     @     0x7f9c9532b148 at::Tensor::copy_()
[2m[36m(pid=18903)[0m     @     0x7f9c9b5e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18903)[0m     @     0x558d8ac8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18903)[0m     @     0x558d8abeab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18903)[0m     @     0x558d8ac75baf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x558d8ac76a20 method_vectorcall
[2m[36m(pid=18903)[0m     @     0x558d8abeabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18903)[0m     @     0x558d8ac75baf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x558d8ac76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18903)[0m     @     0x558d8abeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18903)[0m     @     0x558d8ac75baf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x558d8ac76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18903)[0m     @     0x558d8abeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18903)[0m     @     0x558d8ac75baf _PyEval_EvalCodeWithName
[2m[36m(pid=18903)[0m     @     0x558d8ac76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18903)[0m     @     0x558d8abeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18903)[0m     @     0x558d8ac75baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x7f1ab6e9dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=18859)[0m     @     0x560c3c3aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=18859)[0m     @     0x560c3c309b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18859)[0m     @     0x560c3c394baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x560c3c395a20 method_vectorcall
[2m[36m(pid=18859)[0m     @     0x560c3c309bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18859)[0m     @     0x560c3c394baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x560c3c395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18859)[0m     @     0x560c3c30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18859)[0m     @     0x560c3c394baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x560c3c395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18859)[0m     @     0x560c3c30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18859)[0m     @     0x560c3c394baf _PyEval_EvalCodeWithName
[2m[36m(pid=18859)[0m     @     0x560c3c395643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=18859)[0m     @     0x560c3c30a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=18859)[0m     @     0x560c3c394baf _PyEval_EvalCodeWithName
2020-11-05 11:02:08,403	ERROR trial_runner.py:567 -- Trial PPO_jss_env_54445_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=18971, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
2020-11-05 11:02:08,405	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff59d91ef301000000.
== Status ==
Memory usage on this node: 24.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_54445_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_54445_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_54445_00000_0_2020-11-05_11-02-00/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
2020-11-05 11:02:08,416	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.

2020-11-05 11:02:08,417	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffa97540c201000000.
2020-11-05 11:02:08,417	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4100f4fd01000000.
== Status ==
Memory usage on this node: 24.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_54445_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_54445_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_54445_00000_0_2020-11-05_11-02-00/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 11:02:08,427	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff43fb47bd01000000.
2020-11-05 11:02:08,428	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 11:02:08,428	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff9f3cc57a01000000.
2020-11-05 11:02:08,428	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff90aded9101000000.
2020-11-05 11:02:08,428	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff252160a301000000.
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_54445_00000])
