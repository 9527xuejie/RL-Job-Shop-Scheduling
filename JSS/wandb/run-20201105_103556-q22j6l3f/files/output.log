2020-11-05 10:36:00,441	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b316e_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=25527)[0m 2020-11-05 10:36:03,199	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=25527)[0m /root/miniconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:125: UserWarning: 
[2m[36m(pid=25527)[0m GeForce RTX 2080 Ti with CUDA capability sm_75 is not compatible with the current PyTorch installation.
[2m[36m(pid=25527)[0m The current PyTorch install supports CUDA capabilities sm_37 sm_50 sm_60 sm_61 sm_70 compute_37.
[2m[36m(pid=25527)[0m If you want to use the GeForce RTX 2080 Ti GPU with PyTorch, please check the instructions at https://pytorch.org/get-started/locally/
[2m[36m(pid=25527)[0m 
[2m[36m(pid=25527)[0m   warnings.warn(incompatible_device_warn.format(device_name, capability, " ".join(arch_list), device_name))
[2m[36m(pid=25531)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25531)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25531)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25531)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25531)[0m *** SIGSEGV (@0x0) received by PID 25531 (TID 0x7f3f61ff0700) from PID 0; stack trace: ***
[2m[36m(pid=25515)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25515)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25515)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25515)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25515)[0m *** SIGSEGV (@0x0) received by PID 25515 (TID 0x7fe74467d700) from PID 0; stack trace: ***
[2m[36m(pid=25473)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25473)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25473)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25519)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25519)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25519)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25519)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25519)[0m *** SIGSEGV (@0x0) received by PID 25519 (TID 0x7fbcefffa700) from PID 0; stack trace: ***
[2m[36m(pid=25485)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25485)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25485)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25485)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25485)[0m *** SIGSEGV (@0x0) received by PID 25485 (TID 0x7f4d97e93700) from PID 0; stack trace: ***
[2m[36m(pid=25495)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25495)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25495)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25495)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25500)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25500)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25500)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25500)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25500)[0m *** SIGSEGV (@0x0) received by PID 25500 (TID 0x7f548df99700) from PID 0; stack trace: ***
[2m[36m(pid=25503)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25503)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25503)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25503)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25503)[0m *** SIGSEGV (@0x0) received by PID 25503 (TID 0x7f214532c700) from PID 0; stack trace: ***
[2m[36m(pid=25533)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25533)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25533)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25533)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25533)[0m *** SIGSEGV (@0x0) received by PID 25533 (TID 0x7f0ed920c700) from PID 0; stack trace: ***
[2m[36m(pid=25533)[0m     @     0x7f0ed8de5390 (unknown)
[2m[36m(pid=25483)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25483)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25483)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25483)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25483)[0m *** SIGSEGV (@0x0) received by PID 25483 (TID 0x7f13c98c6700) from PID 0; stack trace: ***
[2m[36m(pid=25483)[0m     @     0x7f13c949f390 (unknown)
[2m[36m(pid=25506)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25506)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25506)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25506)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25506)[0m *** SIGSEGV (@0x0) received by PID 25506 (TID 0x7f3643bb6700) from PID 0; stack trace: ***
[2m[36m(pid=25506)[0m     @     0x7f364378f390 (unknown)
[2m[36m(pid=25506)[0m     @     0x7f074361ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25502)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25502)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25502)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25502)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25502)[0m *** SIGSEGV (@0x0) received by PID 25502 (TID 0x7f7d675e4700) from PID 0; stack trace: ***
[2m[36m(pid=25502)[0m     @     0x7f7d671bd390 (unknown)
[2m[36m(pid=25502)[0m     @     0x7f4e67115f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25488)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25488)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25488)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25488)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25488)[0m *** SIGSEGV (@0x0) received by PID 25488 (TID 0x7fb0d8fdf700) from PID 0; stack trace: ***
[2m[36m(pid=25488)[0m     @     0x7fb0d8bb8390 (unknown)
[2m[36m(pid=25531)[0m     @     0x7f3f61bc9390 (unknown)
[2m[36m(pid=25531)[0m     @     0x7f1061a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25531)[0m     @     0x7f10611357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25531)[0m     @     0x7f10611388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25515)[0m     @     0x7fe744256390 (unknown)
[2m[36m(pid=25515)[0m     @     0x7fb84401cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25515)[0m     @     0x7fb8437477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25515)[0m     @     0x7fb84374a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25473)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25473)[0m *** SIGSEGV (@0x0) received by PID 25473 (TID 0x7ff573257700) from PID 0; stack trace: ***
[2m[36m(pid=25473)[0m     @     0x7ff572e30390 (unknown)
[2m[36m(pid=25473)[0m     @     0x7fc672df0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25473)[0m     @     0x7fc67251b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25519)[0m     @     0x7fbcefbd3390 (unknown)
[2m[36m(pid=25519)[0m     @     0x7f8defaf5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25519)[0m     @     0x7f8def2207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25519)[0m     @     0x7f8def2238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25485)[0m     @     0x7f4d97a6c390 (unknown)
[2m[36m(pid=25485)[0m     @     0x7f1e979c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25485)[0m     @     0x7f1e970f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25495)[0m *** SIGSEGV (@0x0) received by PID 25495 (TID 0x7fe89367c700) from PID 0; stack trace: ***
[2m[36m(pid=25495)[0m     @     0x7fe893255390 (unknown)
[2m[36m(pid=25495)[0m     @     0x7fb993124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25495)[0m     @     0x7fb99284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25500)[0m     @     0x7f548db72390 (unknown)
[2m[36m(pid=25500)[0m     @     0x7f258da0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25500)[0m     @     0x7f258d1357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25503)[0m     @     0x7f2144f05390 (unknown)
[2m[36m(pid=25503)[0m     @     0x7ef244ea6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25503)[0m     @     0x7ef2445d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25503)[0m     @     0x7ef2445d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25533)[0m     @     0x7edfd8d64f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25533)[0m     @     0x7edfd848f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25483)[0m     @     0x7ee4c93ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25483)[0m     @     0x7ee4c8af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25506)[0m     @     0x7f0742d4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25502)[0m     @     0x7f4e668407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25488)[0m     @     0x7f81d8a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25488)[0m     @     0x7f81d81b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25531)[0m     @     0x7f1061138ad3 at::TensorIterator::for_each()
[2m[36m(pid=25515)[0m     @     0x7fb84374aad3 at::TensorIterator::for_each()
[2m[36m(pid=25473)[0m     @     0x7fc67251e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25519)[0m     @     0x7f8def223ad3 at::TensorIterator::for_each()
[2m[36m(pid=25485)[0m     @     0x7f1e970f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25495)[0m     @     0x7fb9928528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25495)[0m     @     0x7fb992852ad3 at::TensorIterator::for_each()
[2m[36m(pid=25500)[0m     @     0x7f258d1388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25500)[0m     @     0x7f258d138ad3 at::TensorIterator::for_each()
[2m[36m(pid=25503)[0m     @     0x7ef2445d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=25533)[0m     @     0x7edfd84928f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25533)[0m     @     0x7edfd8492ad3 at::TensorIterator::for_each()
[2m[36m(pid=25483)[0m     @     0x7ee4c8afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25483)[0m     @     0x7ee4c8afaad3 at::TensorIterator::for_each()
[2m[36m(pid=25506)[0m     @     0x7f0742d4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25506)[0m     @     0x7f0742d4dad3 at::TensorIterator::for_each()
[2m[36m(pid=25502)[0m     @     0x7f4e668438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25502)[0m     @     0x7f4e66843ad3 at::TensorIterator::for_each()
[2m[36m(pid=25488)[0m     @     0x7f81d81b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25488)[0m     @     0x7f81d81b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=25531)[0m     @     0x7f1061138d91 at::TensorIterator::for_each()
[2m[36m(pid=25531)[0m     @     0x7f1061a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25531)[0m     @     0x7f1061a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25515)[0m     @     0x7fb84374ad91 at::TensorIterator::for_each()
[2m[36m(pid=25515)[0m     @     0x7fb84402db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25515)[0m     @     0x7fb844050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25473)[0m     @     0x7fc67251ead3 at::TensorIterator::for_each()
[2m[36m(pid=25519)[0m     @     0x7f8def223d91 at::TensorIterator::for_each()
[2m[36m(pid=25519)[0m     @     0x7f8defb06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25519)[0m     @     0x7f8defb29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25485)[0m     @     0x7f1e970f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=25485)[0m     @     0x7f1e970f3d91 at::TensorIterator::for_each()
[2m[36m(pid=25485)[0m     @     0x7f1e979d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25466)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25466)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25466)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25495)[0m     @     0x7fb992852d91 at::TensorIterator::for_each()
[2m[36m(pid=25495)[0m     @     0x7fb993135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25500)[0m     @     0x7f258d138d91 at::TensorIterator::for_each()
[2m[36m(pid=25490)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25490)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25490)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25503)[0m     @     0x7ef2445d4d91 at::TensorIterator::for_each()
[2m[36m(pid=25503)[0m     @     0x7ef244eb7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25533)[0m     @     0x7edfd8492d91 at::TensorIterator::for_each()
[2m[36m(pid=25483)[0m     @     0x7ee4c8afad91 at::TensorIterator::for_each()
[2m[36m(pid=25506)[0m     @     0x7f0742d4dd91 at::TensorIterator::for_each()
[2m[36m(pid=25506)[0m     @     0x7f0743630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25502)[0m     @     0x7f4e66843d91 at::TensorIterator::for_each()
[2m[36m(pid=25502)[0m     @     0x7f4e67126b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25488)[0m     @     0x7f81d81b9d91 at::TensorIterator::for_each()
[2m[36m(pid=25525)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25525)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25525)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25484)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25484)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25484)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25486)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25486)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25405)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25405)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25421)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25421)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25421)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25403)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25403)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25403)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25432)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25432)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25432)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25508)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25508)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25508)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25505)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25505)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25505)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25430)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25430)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25430)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25430)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25430)[0m *** SIGSEGV (@0x0) received by PID 25430 (TID 0x7fa0be428700) from PID 0; stack trace: ***
[2m[36m(pid=25402)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25402)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25402)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25408)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25408)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25492)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25492)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25492)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25507)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25507)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25507)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25507)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25507)[0m *** SIGSEGV (@0x0) received by PID 25507 (TID 0x7f4e2548f700) from PID 0; stack trace: ***
[2m[36m(pid=25471)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25471)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25471)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25439)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25439)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25439)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25439)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25439)[0m *** SIGSEGV (@0x0) received by PID 25439 (TID 0x7f68c0afc700) from PID 0; stack trace: ***
[2m[36m(pid=25406)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25406)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25406)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25406)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25406)[0m *** SIGSEGV (@0x0) received by PID 25406 (TID 0x7f26b532d700) from PID 0; stack trace: ***
[2m[36m(pid=25531)[0m     @     0x7f1060ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25531)[0m     @     0x7f1060ede388 at::native::copy_impl()
[2m[36m(pid=25531)[0m     @     0x7f1060ee05a4 at::native::copy_()
[2m[36m(pid=25515)[0m     @     0x7fb8434f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25515)[0m     @     0x7fb8434f0388 at::native::copy_impl()
[2m[36m(pid=25515)[0m     @     0x7fb8434f25a4 at::native::copy_()
[2m[36m(pid=25473)[0m     @     0x7fc67251ed91 at::TensorIterator::for_each()
[2m[36m(pid=25473)[0m     @     0x7fc672e01b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25473)[0m     @     0x7fc672e24c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25473)[0m     @     0x7fc6722c6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25473)[0m     @     0x7fc6722c4388 at::native::copy_impl()
[2m[36m(pid=25519)[0m     @     0x7f8deefcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25519)[0m     @     0x7f8deefc9388 at::native::copy_impl()
[2m[36m(pid=25519)[0m     @     0x7f8deefcb5a4 at::native::copy_()
[2m[36m(pid=25519)[0m     @     0x7f8def6b64f5 at::Tensor::copy_()
[2m[36m(pid=25485)[0m     @     0x7f1e979f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25485)[0m     @     0x7f1e96e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25485)[0m     @     0x7f1e96e99388 at::native::copy_impl()
[2m[36m(pid=25485)[0m     @     0x7f1e96e9b5a4 at::native::copy_()
[2m[36m(pid=25466)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25466)[0m *** SIGSEGV (@0x0) received by PID 25466 (TID 0x7efd278c2700) from PID 0; stack trace: ***
[2m[36m(pid=25466)[0m     @     0x7efd2749b390 (unknown)
[2m[36m(pid=25466)[0m     @     0x7ece27229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25466)[0m     @     0x7ece269547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25495)[0m     @     0x7fb993158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25495)[0m     @     0x7fb9925faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25495)[0m     @     0x7fb9925f8388 at::native::copy_impl()
[2m[36m(pid=25495)[0m     @     0x7fb9925fa5a4 at::native::copy_()
[2m[36m(pid=25500)[0m     @     0x7f258da1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25500)[0m     @     0x7f258da3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25500)[0m     @     0x7f258cee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25500)[0m     @     0x7f258cede388 at::native::copy_impl()
[2m[36m(pid=25500)[0m     @     0x7f258cee05a4 at::native::copy_()
[2m[36m(pid=25412)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25412)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25412)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25412)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25412)[0m *** SIGSEGV (@0x0) received by PID 25412 (TID 0x7f1776998700) from PID 0; stack trace: ***
[2m[36m(pid=25412)[0m     @     0x7f1776571390 (unknown)
[2m[36m(pid=25412)[0m     @     0x7ee8764f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25412)[0m     @     0x7ee875c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25419)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25419)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25419)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25419)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25419)[0m *** SIGSEGV (@0x0) received by PID 25419 (TID 0x7f18a57b1700) from PID 0; stack trace: ***
[2m[36m(pid=25419)[0m     @     0x7f18a538a390 (unknown)
[2m[36m(pid=25419)[0m     @     0x7ee9a533af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25419)[0m     @     0x7ee9a4a657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25523)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25523)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25523)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25523)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25523)[0m *** SIGSEGV (@0x0) received by PID 25523 (TID 0x7fe4c6409700) from PID 0; stack trace: ***
[2m[36m(pid=25537)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25537)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25537)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25537)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25537)[0m *** SIGSEGV (@0x0) received by PID 25537 (TID 0x7f8632329700) from PID 0; stack trace: ***
[2m[36m(pid=25537)[0m     @     0x7f8631f02390 (unknown)
[2m[36m(pid=25537)[0m     @     0x7f5731e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25537)[0m     @     0x7f573154f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25424)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25424)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25424)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25424)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25424)[0m *** SIGSEGV (@0x0) received by PID 25424 (TID 0x7fcfca77b700) from PID 0; stack trace: ***
[2m[36m(pid=25424)[0m     @     0x7fcfca354390 (unknown)
[2m[36m(pid=25424)[0m     @     0x7fa0ca2def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25424)[0m     @     0x7fa0c9a097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25530)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25530)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25530)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25530)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25530)[0m *** SIGSEGV (@0x0) received by PID 25530 (TID 0x7ff2e0225700) from PID 0; stack trace: ***
[2m[36m(pid=25510)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25510)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25510)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25510)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25418)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25418)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25418)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25418)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25418)[0m *** SIGSEGV (@0x0) received by PID 25418 (TID 0x7f7bb7cbd700) from PID 0; stack trace: ***
[2m[36m(pid=25418)[0m     @     0x7f7bb7896390 (unknown)
[2m[36m(pid=25418)[0m     @     0x7f4cb783bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25418)[0m     @     0x7f4cb6f667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25410)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25410)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25410)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25410)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25410)[0m *** SIGSEGV (@0x0) received by PID 25410 (TID 0x7fc640ba3700) from PID 0; stack trace: ***
[2m[36m(pid=25410)[0m     @     0x7fc64077c390 (unknown)
[2m[36m(pid=25410)[0m     @     0x7f974060ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25417)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25417)[0m *** SIGSEGV (@0x0) received by PID 25417 (TID 0x7f7349f56700) from PID 0; stack trace: ***
[2m[36m(pid=25476)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25476)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25476)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25476)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25476)[0m *** SIGSEGV (@0x0) received by PID 25476 (TID 0x7f8f0fd43700) from PID 0; stack trace: ***
[2m[36m(pid=25476)[0m     @     0x7f8f0f91c390 (unknown)
[2m[36m(pid=25476)[0m     @     0x7f600f8b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25476)[0m     @     0x7f600efdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25476)[0m     @     0x7f600efdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25441)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25441)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25441)[0m *** SIGSEGV (@0x0) received by PID 25441 (TID 0x7f04395e3700) from PID 0; stack trace: ***
[2m[36m(pid=25441)[0m     @     0x7f04391bc390 (unknown)
[2m[36m(pid=25441)[0m     @     0x7ed5390b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25441)[0m     @     0x7ed5387e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25407)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25407)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25407)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25407)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25407)[0m *** SIGSEGV (@0x0) received by PID 25407 (TID 0x7f0209d56700) from PID 0; stack trace: ***
[2m[36m(pid=25407)[0m     @     0x7f020992f390 (unknown)
[2m[36m(pid=25407)[0m     @     0x7ed3097f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25407)[0m     @     0x7ed308f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25489)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25489)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25489)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25489)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25489)[0m *** SIGSEGV (@0x0) received by PID 25489 (TID 0x7fa243820700) from PID 0; stack trace: ***
[2m[36m(pid=25489)[0m     @     0x7fa2433f9390 (unknown)
[2m[36m(pid=25489)[0m     @     0x7f7343229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25489)[0m     @     0x7f73429547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25521)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25521)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25521)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25521)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25521)[0m *** SIGSEGV (@0x0) received by PID 25521 (TID 0x7f5dfad07700) from PID 0; stack trace: ***
[2m[36m(pid=25521)[0m     @     0x7f5dfa8e0390 (unknown)
[2m[36m(pid=25521)[0m     @     0x7f2efa70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25521)[0m     @     0x7f2ef9e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25490)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25490)[0m *** SIGSEGV (@0x0) received by PID 25490 (TID 0x7f293d8f0700) from PID 0; stack trace: ***
[2m[36m(pid=25490)[0m     @     0x7f293d4c9390 (unknown)
[2m[36m(pid=25490)[0m     @     0x7efa3d476f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25490)[0m     @     0x7efa3cba17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25503)[0m     @     0x7ef244edac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25503)[0m     @     0x7ef24437ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25503)[0m     @     0x7ef24437a388 at::native::copy_impl()
[2m[36m(pid=25503)[0m     @     0x7ef24437c5a4 at::native::copy_()
[2m[36m(pid=25503)[0m     @     0x7ef244a674f5 at::Tensor::copy_()
[2m[36m(pid=25533)[0m     @     0x7edfd8d75b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25533)[0m     @     0x7edfd8d98c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25533)[0m     @     0x7edfd823aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25533)[0m     @     0x7edfd8238388 at::native::copy_impl()
[2m[36m(pid=25533)[0m     @     0x7edfd823a5a4 at::native::copy_()
[2m[36m(pid=25483)[0m     @     0x7ee4c93ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25483)[0m     @     0x7ee4c9400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25483)[0m     @     0x7ee4c88a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25483)[0m     @     0x7ee4c88a0388 at::native::copy_impl()
[2m[36m(pid=25483)[0m     @     0x7ee4c88a25a4 at::native::copy_()
[2m[36m(pid=25506)[0m     @     0x7f0743653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25506)[0m     @     0x7f0742af5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25506)[0m     @     0x7f0742af3388 at::native::copy_impl()
[2m[36m(pid=25506)[0m     @     0x7f0742af55a4 at::native::copy_()
[2m[36m(pid=25506)[0m     @     0x7f07431e04f5 at::Tensor::copy_()
[2m[36m(pid=25502)[0m     @     0x7f4e67149c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25502)[0m     @     0x7f4e665eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25502)[0m     @     0x7f4e665e9388 at::native::copy_impl()
[2m[36m(pid=25502)[0m     @     0x7f4e665eb5a4 at::native::copy_()
[2m[36m(pid=25502)[0m     @     0x7f4e66cd64f5 at::Tensor::copy_()
[2m[36m(pid=25488)[0m     @     0x7f81d8a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25488)[0m     @     0x7f81d8abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25488)[0m     @     0x7f81d7f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25488)[0m     @     0x7f81d7f5f388 at::native::copy_impl()
[2m[36m(pid=25488)[0m     @     0x7f81d7f615a4 at::native::copy_()
[2m[36m(pid=25525)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25525)[0m *** SIGSEGV (@0x0) received by PID 25525 (TID 0x7fe3f4ee6700) from PID 0; stack trace: ***
[2m[36m(pid=25525)[0m     @     0x7fe3f4abf390 (unknown)
[2m[36m(pid=25525)[0m     @     0x7fb4f49e8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25525)[0m     @     0x7fb4f41137db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25525)[0m     @     0x7fb4f41168f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25484)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25484)[0m *** SIGSEGV (@0x0) received by PID 25484 (TID 0x7fa0ae429700) from PID 0; stack trace: ***
[2m[36m(pid=25484)[0m     @     0x7fa0ae002390 (unknown)
[2m[36m(pid=25484)[0m     @     0x7f71ade24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25484)[0m     @     0x7f71ad54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25484)[0m     @     0x7f71ad5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25486)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25486)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25486)[0m *** SIGSEGV (@0x0) received by PID 25486 (TID 0x7fae00e1c700) from PID 0; stack trace: ***
[2m[36m(pid=25486)[0m     @     0x7fae009f5390 (unknown)
[2m[36m(pid=25486)[0m     @     0x7f7f00825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25486)[0m     @     0x7f7efff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25509)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25509)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25509)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25509)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25509)[0m *** SIGSEGV (@0x0) received by PID 25509 (TID 0x7f71222ce700) from PID 0; stack trace: ***
[2m[36m(pid=25509)[0m     @     0x7f7121ea7390 (unknown)
[2m[36m(pid=25509)[0m     @     0x7f4221c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25509)[0m     @     0x7f42213387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25405)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25405)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25405)[0m *** SIGSEGV (@0x0) received by PID 25405 (TID 0x7f5595995700) from PID 0; stack trace: ***
[2m[36m(pid=25405)[0m     @     0x7f559556e390 (unknown)
[2m[36m(pid=25405)[0m     @     0x7f2695432f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25405)[0m     @     0x7f2694b5d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25405)[0m     @     0x7f2694b608f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25409)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25409)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25409)[0m *** SIGSEGV (@0x0) received by PID 25409 (TID 0x7f07287c0700) from PID 0; stack trace: ***
[2m[36m(pid=25409)[0m     @     0x7f0728399390 (unknown)
[2m[36m(pid=25409)[0m     @     0x7ed82832cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25409)[0m     @     0x7ed827a577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25477)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25477)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25477)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25477)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25477)[0m *** SIGSEGV (@0x0) received by PID 25477 (TID 0x7f3351a1f700) from PID 0; stack trace: ***
[2m[36m(pid=25491)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25491)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25491)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25491)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25491)[0m *** SIGSEGV (@0x0) received by PID 25491 (TID 0x7f5bbbfca700) from PID 0; stack trace: ***
[2m[36m(pid=25491)[0m     @     0x7f5bbbba3390 (unknown)
[2m[36m(pid=25491)[0m     @     0x7f2cbb9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25491)[0m     @     0x7f2cbb0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25491)[0m     @     0x7f2cbb0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25422)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25422)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25422)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25422)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25422)[0m *** SIGSEGV (@0x0) received by PID 25422 (TID 0x7fef664f0700) from PID 0; stack trace: ***
[2m[36m(pid=25422)[0m     @     0x7fef660c9390 (unknown)
[2m[36m(pid=25422)[0m     @     0x7fc06607af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25422)[0m     @     0x7fc0657a57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25422)[0m     @     0x7fc0657a88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25413)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25413)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25413)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25413)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25413)[0m *** SIGSEGV (@0x0) received by PID 25413 (TID 0x7f13fbd22700) from PID 0; stack trace: ***
[2m[36m(pid=25413)[0m     @     0x7f13fb8fb390 (unknown)
[2m[36m(pid=25413)[0m     @     0x7ee4fb751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25413)[0m     @     0x7ee4fae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25520)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25520)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25520)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25520)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25520)[0m *** SIGSEGV (@0x0) received by PID 25520 (TID 0x7fcc30c56700) from PID 0; stack trace: ***
[2m[36m(pid=25520)[0m     @     0x7fcc3082f390 (unknown)
[2m[36m(pid=25520)[0m     @     0x7f9d307caf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25520)[0m     @     0x7f9d2fef57db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25482)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25482)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25482)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25482)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25482)[0m *** SIGSEGV (@0x0) received by PID 25482 (TID 0x7f257fa49700) from PID 0; stack trace: ***
[2m[36m(pid=25482)[0m     @     0x7f257f622390 (unknown)
[2m[36m(pid=25482)[0m     @     0x7ef67f5b2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25482)[0m     @     0x7ef67ecdd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25497)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25497)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25497)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25497)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25497)[0m *** SIGSEGV (@0x0) received by PID 25497 (TID 0x7f287ebe8700) from PID 0; stack trace: ***
[2m[36m(pid=25497)[0m     @     0x7f287e7c1390 (unknown)
[2m[36m(pid=25497)[0m     @     0x7ef97e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25497)[0m     @     0x7ef97dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25497)[0m     @     0x7ef97dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25487)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25487)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25487)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25487)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25487)[0m *** SIGSEGV (@0x0) received by PID 25487 (TID 0x7f9fd8969700) from PID 0; stack trace: ***
[2m[36m(pid=25487)[0m     @     0x7f9fd8542390 (unknown)
[2m[36m(pid=25487)[0m     @     0x7f70d84d9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25487)[0m     @     0x7f70d7c047db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25487)[0m     @     0x7f70d7c078f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25421)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25421)[0m *** SIGSEGV (@0x0) received by PID 25421 (TID 0x7feeafb88700) from PID 0; stack trace: ***
[2m[36m(pid=25421)[0m     @     0x7feeaf761390 (unknown)
[2m[36m(pid=25421)[0m     @     0x7fbfaf61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25421)[0m     @     0x7fbfaed4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25421)[0m     @     0x7fbfaed4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25518)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25518)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25518)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25518)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25518)[0m *** SIGSEGV (@0x0) received by PID 25518 (TID 0x7fde921a8700) from PID 0; stack trace: ***
[2m[36m(pid=25518)[0m     @     0x7fde91d81390 (unknown)
[2m[36m(pid=25518)[0m     @     0x7faf91d37f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25518)[0m     @     0x7faf914627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25403)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25403)[0m *** SIGSEGV (@0x0) received by PID 25403 (TID 0x7f38c2f67700) from PID 0; stack trace: ***
[2m[36m(pid=25403)[0m     @     0x7f38c2b40390 (unknown)
[2m[36m(pid=25403)[0m     @     0x7f09c280bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25403)[0m     @     0x7f09c1f367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25403)[0m     @     0x7f09c1f398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25432)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25432)[0m *** SIGSEGV (@0x0) received by PID 25432 (TID 0x7feeca246700) from PID 0; stack trace: ***
[2m[36m(pid=25432)[0m     @     0x7feec9e1f390 (unknown)
[2m[36m(pid=25432)[0m     @     0x7fbfc9db7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25432)[0m     @     0x7fbfc94e27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25508)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25508)[0m *** SIGSEGV (@0x0) received by PID 25508 (TID 0x7f2ca9804700) from PID 0; stack trace: ***
[2m[36m(pid=25508)[0m     @     0x7f2ca93dd390 (unknown)
[2m[36m(pid=25508)[0m     @     0x7efda9377f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25508)[0m     @     0x7efda8aa27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25508)[0m     @     0x7efda8aa58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25505)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25505)[0m *** SIGSEGV (@0x0) received by PID 25505 (TID 0x7f8331e9e700) from PID 0; stack trace: ***
[2m[36m(pid=25505)[0m     @     0x7f8331a77390 (unknown)
[2m[36m(pid=25505)[0m     @     0x7f54317f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25505)[0m     @     0x7f5430f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25505)[0m     @     0x7f5430f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25430)[0m     @     0x7fa0be001390 (unknown)
[2m[36m(pid=25430)[0m     @     0x7f71bde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25430)[0m     @     0x7f71bd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25430)[0m     @     0x7f71bd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25538)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25538)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25538)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25538)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25538)[0m *** SIGSEGV (@0x0) received by PID 25538 (TID 0x7f372033d700) from PID 0; stack trace: ***
[2m[36m(pid=25538)[0m     @     0x7f371ff16390 (unknown)
[2m[36m(pid=25538)[0m     @     0x7f081fe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25538)[0m     @     0x7f081f5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25470)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25470)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25470)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25470)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25470)[0m *** SIGSEGV (@0x0) received by PID 25470 (TID 0x7f476be40700) from PID 0; stack trace: ***
[2m[36m(pid=25442)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25442)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25442)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25442)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25442)[0m *** SIGSEGV (@0x0) received by PID 25442 (TID 0x7fbd1cc03700) from PID 0; stack trace: ***
[2m[36m(pid=25442)[0m     @     0x7fbd1c7dc390 (unknown)
[2m[36m(pid=25442)[0m     @     0x7f8e1c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25420)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25420)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25420)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25443)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25443)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25443)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25443)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25443)[0m *** SIGSEGV (@0x0) received by PID 25443 (TID 0x7f0a53012700) from PID 0; stack trace: ***
[2m[36m(pid=25443)[0m     @     0x7f0a52beb390 (unknown)
[2m[36m(pid=25443)[0m     @     0x7edb52b6df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25443)[0m     @     0x7edb522987db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25464)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25464)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25464)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25464)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25464)[0m *** SIGSEGV (@0x0) received by PID 25464 (TID 0x7fc3920ae700) from PID 0; stack trace: ***
[2m[36m(pid=25464)[0m     @     0x7fc391c87390 (unknown)
[2m[36m(pid=25467)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25467)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25467)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25467)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25467)[0m *** SIGSEGV (@0x0) received by PID 25467 (TID 0x7fd65c181700) from PID 0; stack trace: ***
[2m[36m(pid=25467)[0m     @     0x7fd65bd5a390 (unknown)
[2m[36m(pid=25467)[0m     @     0x7fa75bd01f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25467)[0m     @     0x7fa75b42c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25402)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25402)[0m *** SIGSEGV (@0x0) received by PID 25402 (TID 0x7f257db36700) from PID 0; stack trace: ***
[2m[36m(pid=25402)[0m     @     0x7f257d70f390 (unknown)
[2m[36m(pid=25402)[0m     @     0x7ef67d6b4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25402)[0m     @     0x7ef67cddf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25534)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25534)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25534)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25534)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25534)[0m *** SIGSEGV (@0x0) received by PID 25534 (TID 0x7fdd512ed700) from PID 0; stack trace: ***
[2m[36m(pid=25534)[0m     @     0x7fdd50ec6390 (unknown)
[2m[36m(pid=25534)[0m     @     0x7fae50e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25534)[0m     @     0x7fae505a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25416)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25416)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25416)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25416)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25416)[0m *** SIGSEGV (@0x0) received by PID 25416 (TID 0x7fe026102700) from PID 0; stack trace: ***
[2m[36m(pid=25416)[0m     @     0x7fe025cdb390 (unknown)
[2m[36m(pid=25416)[0m     @     0x7fb125c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25416)[0m     @     0x7fb1253387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25416)[0m     @     0x7fb12533b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25408)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25408)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25408)[0m *** SIGSEGV (@0x0) received by PID 25408 (TID 0x7f66a86ee700) from PID 0; stack trace: ***
[2m[36m(pid=25408)[0m     @     0x7f66a82c7390 (unknown)
[2m[36m(pid=25408)[0m     @     0x7f37a8271f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25408)[0m     @     0x7f37a799c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25408)[0m     @     0x7f37a799f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25475)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25475)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25475)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25475)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25475)[0m *** SIGSEGV (@0x0) received by PID 25475 (TID 0x7fe20530d700) from PID 0; stack trace: ***
[2m[36m(pid=25475)[0m     @     0x7fe204ee6390 (unknown)
[2m[36m(pid=25475)[0m     @     0x7fb304e77f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25475)[0m     @     0x7fb3045a27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25475)[0m     @     0x7fb3045a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25434)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25434)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25434)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25434)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25434)[0m *** SIGSEGV (@0x0) received by PID 25434 (TID 0x7f1238a05700) from PID 0; stack trace: ***
[2m[36m(pid=25434)[0m     @     0x7f12385de390 (unknown)
[2m[36m(pid=25434)[0m     @     0x7ee338339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25434)[0m     @     0x7ee337a647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25435)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25435)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25435)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25435)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25435)[0m *** SIGSEGV (@0x0) received by PID 25435 (TID 0x7f0dad4c2700) from PID 0; stack trace: ***
[2m[36m(pid=25435)[0m     @     0x7f0dad09b390 (unknown)
[2m[36m(pid=25435)[0m     @     0x7edeacd87f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25435)[0m     @     0x7edeac4b27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25435)[0m     @     0x7edeac4b58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25433)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25433)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25433)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25433)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25433)[0m *** SIGSEGV (@0x0) received by PID 25433 (TID 0x7f7c5c063700) from PID 0; stack trace: ***
[2m[36m(pid=25433)[0m     @     0x7f7c5bc3c390 (unknown)
[2m[36m(pid=25433)[0m     @     0x7f4d5b9c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25433)[0m     @     0x7f4d5b0f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25433)[0m     @     0x7f4d5b0f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25437)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25437)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25437)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25437)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25437)[0m *** SIGSEGV (@0x0) received by PID 25437 (TID 0x7fb7637d5700) from PID 0; stack trace: ***
[2m[36m(pid=25437)[0m     @     0x7fb7633ae390 (unknown)
[2m[36m(pid=25437)[0m     @     0x7f8863229f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25437)[0m     @     0x7f88629547db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25437)[0m     @     0x7f88629578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25404)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25404)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25404)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25404)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25404)[0m *** SIGSEGV (@0x0) received by PID 25404 (TID 0x7f2655e04700) from PID 0; stack trace: ***
[2m[36m(pid=25493)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25493)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25493)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25493)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25493)[0m *** SIGSEGV (@0x0) received by PID 25493 (TID 0x7f063da3d700) from PID 0; stack trace: ***
[2m[36m(pid=25512)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25512)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25512)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25512)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25512)[0m *** SIGSEGV (@0x0) received by PID 25512 (TID 0x7fa31a207700) from PID 0; stack trace: ***
[2m[36m(pid=25512)[0m     @     0x7fa319de0390 (unknown)
[2m[36m(pid=25512)[0m     @     0x7f7419d73f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25512)[0m     @     0x7f741949e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25512)[0m     @     0x7f74194a18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25494)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25494)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25494)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25494)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25494)[0m *** SIGSEGV (@0x0) received by PID 25494 (TID 0x7f204319a700) from PID 0; stack trace: ***
[2m[36m(pid=25494)[0m     @     0x7f2042d73390 (unknown)
[2m[36m(pid=25494)[0m     @     0x7ef142cfcf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25494)[0m     @     0x7ef1424277db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25469)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25469)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25469)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25469)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25469)[0m *** SIGSEGV (@0x0) received by PID 25469 (TID 0x7feacc17c700) from PID 0; stack trace: ***
[2m[36m(pid=25469)[0m     @     0x7feacbd55390 (unknown)
[2m[36m(pid=25469)[0m     @     0x7fbbcbcd6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25469)[0m     @     0x7fbbcb4017db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25414)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25414)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25414)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25414)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25414)[0m *** SIGSEGV (@0x0) received by PID 25414 (TID 0x7fae28589700) from PID 0; stack trace: ***
[2m[36m(pid=25414)[0m     @     0x7fae28162390 (unknown)
[2m[36m(pid=25414)[0m     @     0x7f7f280cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25492)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25492)[0m *** SIGSEGV (@0x0) received by PID 25492 (TID 0x7f5e058b1700) from PID 0; stack trace: ***
[2m[36m(pid=25492)[0m     @     0x7f5e0548a390 (unknown)
[2m[36m(pid=25492)[0m     @     0x7f2f053ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25492)[0m     @     0x7f2f04af77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25492)[0m     @     0x7f2f04afa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25472)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=25472)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=25472)[0m *** Aborted at 1604572568 (unix time) try "date -d @1604572568" if you are using GNU date ***
[2m[36m(pid=25472)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25472)[0m *** SIGSEGV (@0x0) received by PID 25472 (TID 0x7f2a573a5700) from PID 0; stack trace: ***
[2m[36m(pid=25472)[0m     @     0x7f2a56f7e390 (unknown)
[2m[36m(pid=25507)[0m     @     0x7f4e25068390 (unknown)
[2m[36m(pid=25507)[0m     @     0x7f1f24fe3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25507)[0m     @     0x7f1f2470e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25507)[0m     @     0x7f1f247118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25471)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25471)[0m *** SIGSEGV (@0x0) received by PID 25471 (TID 0x7fb74f0a0700) from PID 0; stack trace: ***
[2m[36m(pid=25471)[0m     @     0x7fb74ec79390 (unknown)
[2m[36m(pid=25471)[0m     @     0x7f884ec10f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25471)[0m     @     0x7f884e33b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25471)[0m     @     0x7f884e33e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25439)[0m     @     0x7f68c06d5390 (unknown)
[2m[36m(pid=25439)[0m     @     0x7f39c0563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25439)[0m     @     0x7f39bfc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25439)[0m     @     0x7f39bfc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25406)[0m     @     0x7f26b4f06390 (unknown)
[2m[36m(pid=25406)[0m     @     0x7ef7b4940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25406)[0m     @     0x7ef7b406b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25406)[0m     @     0x7ef7b406e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25406)[0m     @     0x7ef7b406ead3 at::TensorIterator::for_each()
[2m[36m(pid=25531)[0m     @     0x7f10615cb4f5 at::Tensor::copy_()
[2m[36m(pid=25531)[0m     @     0x7f1063a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25531)[0m     @     0x7f10615cb4f5 at::Tensor::copy_()
[2m[36m(pid=25531)[0m     @     0x7f106767679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25531)[0m     @     0x562ffcbb0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25531)[0m     @     0x562ffcb0bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25531)[0m     @     0x562ffcb96baf _PyEval_EvalCodeWithName
[2m[36m(pid=25531)[0m     @     0x562ffcb97a20 method_vectorcall
[2m[36m(pid=25531)[0m     @     0x562ffcb0bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25531)[0m     @     0x562ffcb96baf _PyEval_EvalCodeWithName
[2m[36m(pid=25531)[0m     @     0x562ffcb97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25531)[0m     @     0x562ffcb0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25531)[0m     @     0x562ffcb96baf _PyEval_EvalCodeWithName
[2m[36m(pid=25531)[0m     @     0x562ffcb97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25531)[0m     @     0x562ffcb0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25531)[0m     @     0x562ffcb96baf _PyEval_EvalCodeWithName
[2m[36m(pid=25531)[0m     @     0x562ffcb97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25531)[0m     @     0x562ffcb0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25531)[0m     @     0x562ffcb96baf _PyEval_EvalCodeWithName
[2m[36m(pid=25531)[0m     @     0x562ffcb97643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25531)[0m     @     0x562ffcb0c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25515)[0m     @     0x7fb843bdd4f5 at::Tensor::copy_()
[2m[36m(pid=25515)[0m     @     0x7fb8460b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25515)[0m     @     0x7fb843bdd4f5 at::Tensor::copy_()
[2m[36m(pid=25515)[0m     @     0x7fb849c8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25515)[0m     @     0x55a63e48dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25515)[0m     @     0x55a63e3e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25515)[0m     @     0x55a63e473baf _PyEval_EvalCodeWithName
[2m[36m(pid=25515)[0m     @     0x55a63e474a20 method_vectorcall
[2m[36m(pid=25515)[0m     @     0x55a63e3e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25515)[0m     @     0x55a63e473baf _PyEval_EvalCodeWithName
[2m[36m(pid=25515)[0m     @     0x55a63e474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25515)[0m     @     0x55a63e3e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25515)[0m     @     0x55a63e473baf _PyEval_EvalCodeWithName
[2m[36m(pid=25515)[0m     @     0x55a63e474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25515)[0m     @     0x55a63e3e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25515)[0m     @     0x55a63e473baf _PyEval_EvalCodeWithName
[2m[36m(pid=25515)[0m     @     0x55a63e474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25515)[0m     @     0x55a63e3e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25515)[0m     @     0x55a63e473baf _PyEval_EvalCodeWithName
[2m[36m(pid=25515)[0m     @     0x55a63e474643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25515)[0m     @     0x55a63e3e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25473)[0m     @     0x7fc6722c65a4 at::native::copy_()
[2m[36m(pid=25473)[0m     @     0x7fc6729b14f5 at::Tensor::copy_()
[2m[36m(pid=25473)[0m     @     0x7fc674e848de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25519)[0m     @     0x7f8df1b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25519)[0m     @     0x7f8def6b64f5 at::Tensor::copy_()
[2m[36m(pid=25519)[0m     @     0x7f8df576179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25519)[0m     @     0x5577db38dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25519)[0m     @     0x5577db2e8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25519)[0m     @     0x5577db373baf _PyEval_EvalCodeWithName
[2m[36m(pid=25519)[0m     @     0x5577db374a20 method_vectorcall
[2m[36m(pid=25519)[0m     @     0x5577db2e8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25519)[0m     @     0x5577db373baf _PyEval_EvalCodeWithName
[2m[36m(pid=25519)[0m     @     0x5577db374643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25519)[0m     @     0x5577db2e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25519)[0m     @     0x5577db373baf _PyEval_EvalCodeWithName
[2m[36m(pid=25519)[0m     @     0x5577db374643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25519)[0m     @     0x5577db2e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25519)[0m     @     0x5577db373baf _PyEval_EvalCodeWithName
[2m[36m(pid=25519)[0m     @     0x5577db374643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25519)[0m     @     0x5577db2e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25519)[0m     @     0x5577db373baf _PyEval_EvalCodeWithName
[2m[36m(pid=25519)[0m     @     0x5577db374643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25519)[0m     @     0x5577db2e9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25485)[0m     @     0x7f1e975864f5 at::Tensor::copy_()
[2m[36m(pid=25485)[0m     @     0x7f1e99a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25485)[0m     @     0x7f1e975864f5 at::Tensor::copy_()
[2m[36m(pid=25485)[0m     @     0x7f1e9d63179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25485)[0m     @     0x562f954d3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25485)[0m     @     0x562f9542eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25485)[0m     @     0x562f954b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25485)[0m     @     0x562f954baa20 method_vectorcall
[2m[36m(pid=25485)[0m     @     0x562f9542ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x7ece269578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25466)[0m     @     0x7ece26957ad3 at::TensorIterator::for_each()
[2m[36m(pid=25495)[0m     @     0x7fb992ce54f5 at::Tensor::copy_()
[2m[36m(pid=25495)[0m     @     0x7fb9951b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25495)[0m     @     0x7fb992ce54f5 at::Tensor::copy_()
[2m[36m(pid=25495)[0m     @     0x7fb998d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25495)[0m     @     0x55f4bfa7efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25495)[0m     @     0x55f4bf9d9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25495)[0m     @     0x55f4bfa64baf _PyEval_EvalCodeWithName
[2m[36m(pid=25495)[0m     @     0x55f4bfa65a20 method_vectorcall
[2m[36m(pid=25495)[0m     @     0x55f4bf9d9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25495)[0m     @     0x55f4bfa64baf _PyEval_EvalCodeWithName
[2m[36m(pid=25495)[0m     @     0x55f4bfa65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25495)[0m     @     0x55f4bf9da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25500)[0m     @     0x7f258d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=25500)[0m     @     0x7f258fa9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25500)[0m     @     0x7f258d5cb4f5 at::Tensor::copy_()
[2m[36m(pid=25412)[0m     @     0x7ee875c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25412)[0m     @     0x7ee875c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=25419)[0m     @     0x7ee9a4a688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25419)[0m     @     0x7ee9a4a68ad3 at::TensorIterator::for_each()
[2m[36m(pid=25523)[0m     @     0x7fe4c5fe2390 (unknown)
[2m[36m(pid=25523)[0m     @     0x7fb5c5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25523)[0m     @     0x7fb5c554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25523)[0m     @     0x7fb5c55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25523)[0m     @     0x7fb5c5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=25537)[0m     @     0x7f57315528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25537)[0m     @     0x7f5731552ad3 at::TensorIterator::for_each()
[2m[36m(pid=25424)[0m     @     0x7fa0c9a0c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25424)[0m     @     0x7fa0c9a0cad3 at::TensorIterator::for_each()
[2m[36m(pid=25424)[0m     @     0x7fa0c9a0cd91 at::TensorIterator::for_each()
[2m[36m(pid=25530)[0m     @     0x7ff2dfdfe390 (unknown)
[2m[36m(pid=25530)[0m     @     0x7fc3dfd9ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25530)[0m     @     0x7fc3df4c97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25530)[0m     @     0x7fc3df4cc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25510)[0m *** SIGSEGV (@0x0) received by PID 25510 (TID 0x7f30cb344700) from PID 0; stack trace: ***
[2m[36m(pid=25510)[0m     @     0x7f30caf1d390 (unknown)
[2m[36m(pid=25510)[0m     @     0x7f01caea6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25510)[0m     @     0x7f01ca5d17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25510)[0m     @     0x7f01ca5d48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25418)[0m     @     0x7f4cb6f698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25418)[0m     @     0x7f4cb6f69ad3 at::TensorIterator::for_each()
[2m[36m(pid=25410)[0m     @     0x7f973fd397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25410)[0m     @     0x7f973fd3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25410)[0m     @     0x7f973fd3cad3 at::TensorIterator::for_each()
[2m[36m(pid=25417)[0m     @     0x7f7349b2f390 (unknown)
[2m[36m(pid=25417)[0m     @     0x7f4449a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25417)[0m     @     0x7f44491357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25417)[0m     @     0x7f44491388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25476)[0m     @     0x7f600efdfad3 at::TensorIterator::for_each()
[2m[36m(pid=25476)[0m     @     0x7f600efdfd91 at::TensorIterator::for_each()
[2m[36m(pid=25476)[0m     @     0x7f600f8c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25441)[0m     @     0x7ed5387e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25441)[0m     @     0x7ed5387e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=25407)[0m     @     0x7ed308f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25407)[0m     @     0x7ed308f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=25489)[0m     @     0x7f73429578f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25489)[0m     @     0x7f7342957ad3 at::TensorIterator::for_each()
[2m[36m(pid=25521)[0m     @     0x7f2ef9e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25521)[0m     @     0x7f2ef9e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=25490)[0m     @     0x7efa3cba48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25490)[0m     @     0x7efa3cba4ad3 at::TensorIterator::for_each()
[2m[36m(pid=25490)[0m     @     0x7efa3cba4d91 at::TensorIterator::for_each()
[2m[36m(pid=25503)[0m     @     0x7ef246f3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25503)[0m     @     0x7ef244a674f5 at::Tensor::copy_()
[2m[36m(pid=25503)[0m     @     0x7ef24ab1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25503)[0m     @     0x559431a4afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25503)[0m     @     0x5594319a5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25503)[0m     @     0x559431a30baf _PyEval_EvalCodeWithName
[2m[36m(pid=25503)[0m     @     0x559431a31a20 method_vectorcall
[2m[36m(pid=25503)[0m     @     0x5594319a5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25503)[0m     @     0x559431a30baf _PyEval_EvalCodeWithName
[2m[36m(pid=25503)[0m     @     0x559431a31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25503)[0m     @     0x5594319a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25503)[0m     @     0x559431a30baf _PyEval_EvalCodeWithName
[2m[36m(pid=25503)[0m     @     0x559431a31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25503)[0m     @     0x5594319a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25503)[0m     @     0x559431a30baf _PyEval_EvalCodeWithName
[2m[36m(pid=25503)[0m     @     0x559431a31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25503)[0m     @     0x5594319a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25503)[0m     @     0x559431a30baf _PyEval_EvalCodeWithName
[2m[36m(pid=25503)[0m     @     0x559431a31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25503)[0m     @     0x5594319a6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25533)[0m     @     0x7edfd89254f5 at::Tensor::copy_()
[2m[36m(pid=25533)[0m     @     0x7edfdadf88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25533)[0m     @     0x7edfd89254f5 at::Tensor::copy_()
[2m[36m(pid=25533)[0m     @     0x7edfde9d079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25533)[0m     @     0x55dd02528fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25533)[0m     @     0x55dd02483b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25533)[0m     @     0x55dd0250ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25533)[0m     @     0x55dd0250fa20 method_vectorcall
[2m[36m(pid=25533)[0m     @     0x55dd02483bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25533)[0m     @     0x55dd0250ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25533)[0m     @     0x55dd0250f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25533)[0m     @     0x55dd02484689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25533)[0m     @     0x55dd0250ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25533)[0m     @     0x55dd0250f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25533)[0m     @     0x55dd02484689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25533)[0m     @     0x55dd0250ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25533)[0m     @     0x55dd0250f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25533)[0m     @     0x55dd02484689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25533)[0m     @     0x55dd0250ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25533)[0m     @     0x55dd0250f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25533)[0m     @     0x55dd02484689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25483)[0m     @     0x7ee4c8f8d4f5 at::Tensor::copy_()
[2m[36m(pid=25483)[0m     @     0x7ee4cb4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25483)[0m     @     0x7ee4c8f8d4f5 at::Tensor::copy_()
[2m[36m(pid=25483)[0m     @     0x7ee4cf03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25483)[0m     @     0x5617fa55cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25483)[0m     @     0x5617fa4b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25483)[0m     @     0x5617fa542baf _PyEval_EvalCodeWithName
[2m[36m(pid=25483)[0m     @     0x5617fa543a20 method_vectorcall
[2m[36m(pid=25483)[0m     @     0x5617fa4b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25483)[0m     @     0x5617fa542baf _PyEval_EvalCodeWithName
[2m[36m(pid=25483)[0m     @     0x5617fa543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25483)[0m     @     0x5617fa4b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25483)[0m     @     0x5617fa542baf _PyEval_EvalCodeWithName
[2m[36m(pid=25483)[0m     @     0x5617fa543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25483)[0m     @     0x5617fa4b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25483)[0m     @     0x5617fa542baf _PyEval_EvalCodeWithName
[2m[36m(pid=25483)[0m     @     0x5617fa543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25483)[0m     @     0x5617fa4b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25483)[0m     @     0x5617fa542baf _PyEval_EvalCodeWithName
[2m[36m(pid=25483)[0m     @     0x5617fa543643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25483)[0m     @     0x5617fa4b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25506)[0m     @     0x7f07456b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25506)[0m     @     0x7f07431e04f5 at::Tensor::copy_()
[2m[36m(pid=25506)[0m     @     0x7f074928b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25506)[0m     @     0x563012927fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25506)[0m     @     0x563012882b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25506)[0m     @     0x56301290dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25506)[0m     @     0x56301290ea20 method_vectorcall
[2m[36m(pid=25506)[0m     @     0x563012882bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25506)[0m     @     0x56301290dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25506)[0m     @     0x56301290e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25506)[0m     @     0x563012883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25506)[0m     @     0x56301290dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25506)[0m     @     0x56301290e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25506)[0m     @     0x563012883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25506)[0m     @     0x56301290dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25506)[0m     @     0x56301290e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25506)[0m     @     0x563012883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25506)[0m     @     0x56301290dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25506)[0m     @     0x56301290e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25506)[0m     @     0x563012883689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25502)[0m     @     0x7f4e691a98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25502)[0m     @     0x7f4e66cd64f5 at::Tensor::copy_()
[2m[36m(pid=25502)[0m     @     0x7f4e6cd8179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25502)[0m     @     0x55b1d9c44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25502)[0m     @     0x55b1d9b9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25502)[0m     @     0x55b1d9c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25502)[0m     @     0x55b1d9c2ba20 method_vectorcall
[2m[36m(pid=25502)[0m     @     0x55b1d9b9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25502)[0m     @     0x55b1d9c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25502)[0m     @     0x55b1d9c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25502)[0m     @     0x55b1d9ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25502)[0m     @     0x55b1d9c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25502)[0m     @     0x55b1d9c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25502)[0m     @     0x55b1d9ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25502)[0m     @     0x55b1d9c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25502)[0m     @     0x55b1d9c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25502)[0m     @     0x55b1d9ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25502)[0m     @     0x55b1d9c2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25502)[0m     @     0x55b1d9c2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25502)[0m     @     0x55b1d9ba0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25488)[0m     @     0x7f81d864c4f5 at::Tensor::copy_()
[2m[36m(pid=25488)[0m     @     0x7f81dab1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25488)[0m     @     0x7f81d864c4f5 at::Tensor::copy_()
[2m[36m(pid=25488)[0m     @     0x7f81de6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25488)[0m     @     0x555f9e186fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25488)[0m     @     0x555f9e0e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25488)[0m     @     0x555f9e16cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25488)[0m     @     0x555f9e16da20 method_vectorcall
[2m[36m(pid=25488)[0m     @     0x555f9e0e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25488)[0m     @     0x555f9e16cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25488)[0m     @     0x555f9e16d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25488)[0m     @     0x555f9e0e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25488)[0m     @     0x555f9e16cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25488)[0m     @     0x555f9e16d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25488)[0m     @     0x555f9e0e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25488)[0m     @     0x555f9e16cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25488)[0m     @     0x555f9e16d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25488)[0m     @     0x555f9e0e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25488)[0m     @     0x555f9e16cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25488)[0m     @     0x555f9e16d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25488)[0m     @     0x555f9e0e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25525)[0m     @     0x7fb4f4116ad3 at::TensorIterator::for_each()
[2m[36m(pid=25525)[0m     @     0x7fb4f4116d91 at::TensorIterator::for_each()
[2m[36m(pid=25525)[0m     @     0x7fb4f49f9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25525)[0m     @     0x7fb4f4a1cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25525)[0m     @     0x7fb4f3ebea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25525)[0m     @     0x7fb4f3ebc388 at::native::copy_impl()
[2m[36m(pid=25484)[0m     @     0x7f71ad552ad3 at::TensorIterator::for_each()
[2m[36m(pid=25484)[0m     @     0x7f71ad552d91 at::TensorIterator::for_each()
[2m[36m(pid=25484)[0m     @     0x7f71ade35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25484)[0m     @     0x7f71ade58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25484)[0m     @     0x7f71ad2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25484)[0m     @     0x7f71ad2f8388 at::native::copy_impl()
[2m[36m(pid=25486)[0m     @     0x7f7efff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25486)[0m     @     0x7f7efff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=25486)[0m     @     0x7f7efff53d91 at::TensorIterator::for_each()
[2m[36m(pid=25486)[0m     @     0x7f7f00836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25486)[0m     @     0x7f7f00859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25509)[0m     @     0x7f422133b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25509)[0m     @     0x7f422133bad3 at::TensorIterator::for_each()
[2m[36m(pid=25509)[0m     @     0x7f422133bd91 at::TensorIterator::for_each()
[2m[36m(pid=25509)[0m     @     0x7f4221c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25509)[0m     @     0x7f4221c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25405)[0m     @     0x7f2694b60ad3 at::TensorIterator::for_each()
[2m[36m(pid=25405)[0m     @     0x7f2694b60d91 at::TensorIterator::for_each()
[2m[36m(pid=25405)[0m     @     0x7f2695443b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25405)[0m     @     0x7f2695466c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25405)[0m     @     0x7f2694908a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25405)[0m     @     0x7f2694906388 at::native::copy_impl()
[2m[36m(pid=25409)[0m     @     0x7ed827a5a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25409)[0m     @     0x7ed827a5aad3 at::TensorIterator::for_each()
[2m[36m(pid=25409)[0m     @     0x7ed827a5ad91 at::TensorIterator::for_each()
[2m[36m(pid=25409)[0m     @     0x7ed82833db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25409)[0m     @     0x7ed828360c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25477)[0m     @     0x7f33515f8390 (unknown)
[2m[36m(pid=25477)[0m     @     0x7f045157ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25477)[0m     @     0x7f0450caa7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25477)[0m     @     0x7f0450cad8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25477)[0m     @     0x7f0450cadad3 at::TensorIterator::for_each()
[2m[36m(pid=25491)[0m     @     0x7f2cbb0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=25491)[0m     @     0x7f2cbb0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=25491)[0m     @     0x7f2cbb9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25491)[0m     @     0x7f2cbb9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25491)[0m     @     0x7f2cbae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25422)[0m     @     0x7fc0657a8ad3 at::TensorIterator::for_each()
[2m[36m(pid=25422)[0m     @     0x7fc0657a8d91 at::TensorIterator::for_each()
[2m[36m(pid=25422)[0m     @     0x7fc06608bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25422)[0m     @     0x7fc0660aec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25413)[0m     @     0x7ee4fae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25413)[0m     @     0x7ee4fae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=25413)[0m     @     0x7ee4fae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=25413)[0m     @     0x7ee4fb762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25413)[0m     @     0x7ee4fb785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25520)[0m     @     0x7f9d2fef88f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25520)[0m     @     0x7f9d2fef8ad3 at::TensorIterator::for_each()
[2m[36m(pid=25520)[0m     @     0x7f9d2fef8d91 at::TensorIterator::for_each()
[2m[36m(pid=25520)[0m     @     0x7f9d307dbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25520)[0m     @     0x7f9d307fec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25482)[0m     @     0x7ef67ece08f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25482)[0m     @     0x7ef67ece0ad3 at::TensorIterator::for_each()
[2m[36m(pid=25482)[0m     @     0x7ef67ece0d91 at::TensorIterator::for_each()
[2m[36m(pid=25482)[0m     @     0x7ef67f5c3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25482)[0m     @     0x7ef67f5e6c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25497)[0m     @     0x7ef97dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=25497)[0m     @     0x7ef97dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=25497)[0m     @     0x7ef97e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25497)[0m     @     0x7ef97e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25497)[0m     @     0x7ef97d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25497)[0m     @     0x7ef97d9cd388 at::native::copy_impl()
[2m[36m(pid=25487)[0m     @     0x7f70d7c07ad3 at::TensorIterator::for_each()
[2m[36m(pid=25487)[0m     @     0x7f70d7c07d91 at::TensorIterator::for_each()
[2m[36m(pid=25487)[0m     @     0x7f70d84eab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25487)[0m     @     0x7f70d850dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25487)[0m     @     0x7f70d79afa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25421)[0m     @     0x7fbfaed4dad3 at::TensorIterator::for_each()
[2m[36m(pid=25421)[0m     @     0x7fbfaed4dd91 at::TensorIterator::for_each()
[2m[36m(pid=25421)[0m     @     0x7fbfaf630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25421)[0m     @     0x7fbfaf653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25518)[0m     @     0x7faf914658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25518)[0m     @     0x7faf91465ad3 at::TensorIterator::for_each()
[2m[36m(pid=25518)[0m     @     0x7faf91465d91 at::TensorIterator::for_each()
[2m[36m(pid=25518)[0m     @     0x7faf91d48b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25518)[0m     @     0x7faf91d6bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25403)[0m     @     0x7f09c1f39ad3 at::TensorIterator::for_each()
[2m[36m(pid=25403)[0m     @     0x7f09c1f39d91 at::TensorIterator::for_each()
[2m[36m(pid=25403)[0m     @     0x7f09c281cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25403)[0m     @     0x7f09c283fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25432)[0m     @     0x7fbfc94e58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25432)[0m     @     0x7fbfc94e5ad3 at::TensorIterator::for_each()
[2m[36m(pid=25432)[0m     @     0x7fbfc94e5d91 at::TensorIterator::for_each()
[2m[36m(pid=25432)[0m     @     0x7fbfc9dc8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25432)[0m     @     0x7fbfc9debc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25508)[0m     @     0x7efda8aa5ad3 at::TensorIterator::for_each()
[2m[36m(pid=25508)[0m     @     0x7efda8aa5d91 at::TensorIterator::for_each()
[2m[36m(pid=25508)[0m     @     0x7efda9388b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25508)[0m     @     0x7efda93abc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25505)[0m     @     0x7f5430f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=25505)[0m     @     0x7f5430f27d91 at::TensorIterator::for_each()
[2m[36m(pid=25505)[0m     @     0x7f543180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25505)[0m     @     0x7f543182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25430)[0m     @     0x7f71bd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=25430)[0m     @     0x7f71bd552d91 at::TensorIterator::for_each()
[2m[36m(pid=25430)[0m     @     0x7f71bde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25430)[0m     @     0x7f71bde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25430)[0m     @     0x7f71bd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25430)[0m     @     0x7f71bd2f8388 at::native::copy_impl()
[2m[36m(pid=25538)[0m     @     0x7f081f5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25538)[0m     @     0x7f081f539ad3 at::TensorIterator::for_each()
[2m[36m(pid=25470)[0m     @     0x7f476ba19390 (unknown)
[2m[36m(pid=25470)[0m     @     0x7f186b8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25470)[0m     @     0x7f186b0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25470)[0m     @     0x7f186b00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25470)[0m     @     0x7f186b00cad3 at::TensorIterator::for_each()
[2m[36m(pid=25442)[0m     @     0x7f8e1bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25442)[0m     @     0x7f8e1bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25442)[0m     @     0x7f8e1bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=25420)[0m PC: @                0x0 (unknown)
[2m[36m(pid=25420)[0m *** SIGSEGV (@0x0) received by PID 25420 (TID 0x7effc1d98700) from PID 0; stack trace: ***
[2m[36m(pid=25420)[0m     @     0x7effc1971390 (unknown)
[2m[36m(pid=25420)[0m     @     0x7ed0c17f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25420)[0m     @     0x7ed0c0f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25443)[0m     @     0x7edb5229b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25443)[0m     @     0x7edb5229bad3 at::TensorIterator::for_each()
[2m[36m(pid=25443)[0m     @     0x7edb5229bd91 at::TensorIterator::for_each()
[2m[36m(pid=25464)[0m     @     0x7f9491c11f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25464)[0m     @     0x7f949133c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25464)[0m     @     0x7f949133f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25464)[0m     @     0x7f949133fad3 at::TensorIterator::for_each()
[2m[36m(pid=25467)[0m     @     0x7fa75b42f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25467)[0m     @     0x7fa75b42fad3 at::TensorIterator::for_each()
[2m[36m(pid=25467)[0m     @     0x7fa75b42fd91 at::TensorIterator::for_each()
[2m[36m(pid=25402)[0m     @     0x7ef67cde28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25402)[0m     @     0x7ef67cde2ad3 at::TensorIterator::for_each()
[2m[36m(pid=25402)[0m     @     0x7ef67cde2d91 at::TensorIterator::for_each()
[2m[36m(pid=25402)[0m     @     0x7ef67d6c5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25402)[0m     @     0x7ef67d6e8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25534)[0m     @     0x7fae505a58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25534)[0m     @     0x7fae505a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=25534)[0m     @     0x7fae505a5d91 at::TensorIterator::for_each()
[2m[36m(pid=25416)[0m     @     0x7fb12533bad3 at::TensorIterator::for_each()
[2m[36m(pid=25416)[0m     @     0x7fb12533bd91 at::TensorIterator::for_each()
[2m[36m(pid=25416)[0m     @     0x7fb125c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25416)[0m     @     0x7fb125c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25408)[0m     @     0x7f37a799fad3 at::TensorIterator::for_each()
[2m[36m(pid=25408)[0m     @     0x7f37a799fd91 at::TensorIterator::for_each()
[2m[36m(pid=25408)[0m     @     0x7f37a8282b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25408)[0m     @     0x7f37a82a5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25475)[0m     @     0x7fb3045a5ad3 at::TensorIterator::for_each()
[2m[36m(pid=25475)[0m     @     0x7fb3045a5d91 at::TensorIterator::for_each()
[2m[36m(pid=25475)[0m     @     0x7fb304e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25434)[0m     @     0x7ee337a678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25434)[0m     @     0x7ee337a67ad3 at::TensorIterator::for_each()
[2m[36m(pid=25435)[0m     @     0x7edeac4b5ad3 at::TensorIterator::for_each()
[2m[36m(pid=25435)[0m     @     0x7edeac4b5d91 at::TensorIterator::for_each()
[2m[36m(pid=25435)[0m     @     0x7edeacd98b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25433)[0m     @     0x7f4d5b0f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=25437)[0m     @     0x7f8862957ad3 at::TensorIterator::for_each()
[2m[36m(pid=25404)[0m     @     0x7f26559dd390 (unknown)
[2m[36m(pid=25404)[0m     @     0x7ef755701f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25493)[0m     @     0x7f063d616390 (unknown)
[2m[36m(pid=25493)[0m     @     0x7ed73d5a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25493)[0m     @     0x7ed73cccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25493)[0m     @     0x7ed73ccd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25512)[0m     @     0x7f74194a1ad3 at::TensorIterator::for_each()
[2m[36m(pid=25512)[0m     @     0x7f74194a1d91 at::TensorIterator::for_each()
[2m[36m(pid=25512)[0m     @     0x7f7419d84b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25494)[0m     @     0x7ef14242a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25494)[0m     @     0x7ef14242aad3 at::TensorIterator::for_each()
[2m[36m(pid=25414)[0m     @     0x7f7f277f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25414)[0m     @     0x7f7f277fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25492)[0m     @     0x7f2f04afaad3 at::TensorIterator::for_each()
[2m[36m(pid=25492)[0m     @     0x7f2f04afad91 at::TensorIterator::for_each()
[2m[36m(pid=25492)[0m     @     0x7f2f053ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25492)[0m     @     0x7f2f05400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25492)[0m     @     0x7f2f048a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25472)[0m     @     0x7efb56ee6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=25472)[0m     @     0x7efb566117db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25472)[0m     @     0x7efb566148f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25507)[0m     @     0x7f1f24711ad3 at::TensorIterator::for_each()
[2m[36m(pid=25507)[0m     @     0x7f1f24711d91 at::TensorIterator::for_each()
[2m[36m(pid=25507)[0m     @     0x7f1f24ff4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25507)[0m     @     0x7f1f25017c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25507)[0m     @     0x7f1f244b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25507)[0m     @     0x7f1f244b7388 at::native::copy_impl()
[2m[36m(pid=25471)[0m     @     0x7f884e33ead3 at::TensorIterator::for_each()
[2m[36m(pid=25471)[0m     @     0x7f884e33ed91 at::TensorIterator::for_each()
[2m[36m(pid=25471)[0m     @     0x7f884ec21b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25471)[0m     @     0x7f884ec44c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25439)[0m     @     0x7f39bfc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=25439)[0m     @     0x7f39bfc91d91 at::TensorIterator::for_each()
[2m[36m(pid=25439)[0m     @     0x7f39c0574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25439)[0m     @     0x7f39c0597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25439)[0m     @     0x7f39bfa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25439)[0m     @     0x7f39bfa37388 at::native::copy_impl()
[2m[36m(pid=25406)[0m     @     0x7ef7b406ed91 at::TensorIterator::for_each()
[2m[36m(pid=25406)[0m     @     0x7ef7b4951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25406)[0m     @     0x7ef7b4974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25406)[0m     @     0x7ef7b3e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25406)[0m     @     0x7ef7b3e14388 at::native::copy_impl()
[2m[36m(pid=25473)[0m     @     0x7fc6729b14f5 at::Tensor::copy_()
[2m[36m(pid=25473)[0m     @     0x7fc678a5c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25473)[0m     @     0x5603413dcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25473)[0m     @     0x560341337b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25473)[0m     @     0x5603413c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25473)[0m     @     0x5603413c3a20 method_vectorcall
[2m[36m(pid=25473)[0m     @     0x560341337bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25473)[0m     @     0x5603413c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25473)[0m     @     0x5603413c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25473)[0m     @     0x560341338689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25473)[0m     @     0x5603413c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25473)[0m     @     0x5603413c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25473)[0m     @     0x560341338689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25473)[0m     @     0x5603413c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25473)[0m     @     0x5603413c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25473)[0m     @     0x560341338689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25473)[0m     @     0x5603413c2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25473)[0m     @     0x5603413c3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25473)[0m     @     0x560341338689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25485)[0m     @     0x562f954b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25485)[0m     @     0x562f954ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25485)[0m     @     0x562f9542f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25485)[0m     @     0x562f954b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25485)[0m     @     0x562f954ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25485)[0m     @     0x562f9542f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25485)[0m     @     0x562f954b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25485)[0m     @     0x562f954ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25485)[0m     @     0x562f9542f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25485)[0m     @     0x562f954b9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25485)[0m     @     0x562f954ba643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25485)[0m     @     0x562f9542f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x7ece26957d91 at::TensorIterator::for_each()
[2m[36m(pid=25466)[0m     @     0x7ece2723ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25466)[0m     @     0x7ece2725dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25466)[0m     @     0x7ece266ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25466)[0m     @     0x7ece266fd388 at::native::copy_impl()
[2m[36m(pid=25495)[0m     @     0x55f4bfa64baf _PyEval_EvalCodeWithName
[2m[36m(pid=25495)[0m     @     0x55f4bfa65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25495)[0m     @     0x55f4bf9da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25495)[0m     @     0x55f4bfa64baf _PyEval_EvalCodeWithName
[2m[36m(pid=25495)[0m     @     0x55f4bfa65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25495)[0m     @     0x55f4bf9da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25495)[0m     @     0x55f4bfa64baf _PyEval_EvalCodeWithName
[2m[36m(pid=25495)[0m     @     0x55f4bfa65643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25495)[0m     @     0x55f4bf9da689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25500)[0m     @     0x7f259367679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25500)[0m     @     0x5649f8a9cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25500)[0m     @     0x5649f89f7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25500)[0m     @     0x5649f8a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=25500)[0m     @     0x5649f8a83a20 method_vectorcall
[2m[36m(pid=25500)[0m     @     0x5649f89f7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25500)[0m     @     0x5649f8a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=25500)[0m     @     0x5649f8a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25500)[0m     @     0x5649f89f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25500)[0m     @     0x5649f8a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=25500)[0m     @     0x5649f8a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25500)[0m     @     0x5649f89f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25500)[0m     @     0x5649f8a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=25500)[0m     @     0x5649f8a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25500)[0m     @     0x5649f89f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25500)[0m     @     0x5649f8a82baf _PyEval_EvalCodeWithName
[2m[36m(pid=25500)[0m     @     0x5649f8a83643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25500)[0m     @     0x5649f89f8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25412)[0m     @     0x7ee875c27d91 at::TensorIterator::for_each()
[2m[36m(pid=25412)[0m     @     0x7ee87650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25412)[0m     @     0x7ee87652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25412)[0m     @     0x7ee8759cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25412)[0m     @     0x7ee8759cd388 at::native::copy_impl()
[2m[36m(pid=25419)[0m     @     0x7ee9a4a68d91 at::TensorIterator::for_each()
[2m[36m(pid=25419)[0m     @     0x7ee9a534bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25419)[0m     @     0x7ee9a536ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25419)[0m     @     0x7ee9a4810a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25419)[0m     @     0x7ee9a480e388 at::native::copy_impl()
[2m[36m(pid=25523)[0m     @     0x7fb5c5552d91 at::TensorIterator::for_each()
[2m[36m(pid=25523)[0m     @     0x7fb5c5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25523)[0m     @     0x7fb5c5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25523)[0m     @     0x7fb5c52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25523)[0m     @     0x7fb5c52f8388 at::native::copy_impl()
[2m[36m(pid=25537)[0m     @     0x7f5731552d91 at::TensorIterator::for_each()
[2m[36m(pid=25537)[0m     @     0x7f5731e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25537)[0m     @     0x7f5731e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25537)[0m     @     0x7f57312faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25537)[0m     @     0x7f57312f8388 at::native::copy_impl()
[2m[36m(pid=25537)[0m     @     0x7f57312fa5a4 at::native::copy_()
[2m[36m(pid=25424)[0m     @     0x7fa0ca2efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25424)[0m     @     0x7fa0ca312c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25424)[0m     @     0x7fa0c97b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25424)[0m     @     0x7fa0c97b2388 at::native::copy_impl()
[2m[36m(pid=25424)[0m     @     0x7fa0c97b45a4 at::native::copy_()
[2m[36m(pid=25530)[0m     @     0x7fc3df4ccad3 at::TensorIterator::for_each()
[2m[36m(pid=25530)[0m     @     0x7fc3df4ccd91 at::TensorIterator::for_each()
[2m[36m(pid=25530)[0m     @     0x7fc3dfdafb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25530)[0m     @     0x7fc3dfdd2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25510)[0m     @     0x7f01ca5d4ad3 at::TensorIterator::for_each()
[2m[36m(pid=25510)[0m     @     0x7f01ca5d4d91 at::TensorIterator::for_each()
[2m[36m(pid=25510)[0m     @     0x7f01caeb7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25418)[0m     @     0x7f4cb6f69d91 at::TensorIterator::for_each()
[2m[36m(pid=25418)[0m     @     0x7f4cb784cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25418)[0m     @     0x7f4cb786fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25418)[0m     @     0x7f4cb6d11a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25418)[0m     @     0x7f4cb6d0f388 at::native::copy_impl()
[2m[36m(pid=25410)[0m     @     0x7f973fd3cd91 at::TensorIterator::for_each()
[2m[36m(pid=25410)[0m     @     0x7f974061fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25410)[0m     @     0x7f9740642c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25410)[0m     @     0x7f973fae4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25410)[0m     @     0x7f973fae2388 at::native::copy_impl()
[2m[36m(pid=25417)[0m     @     0x7f4449138ad3 at::TensorIterator::for_each()
[2m[36m(pid=25417)[0m     @     0x7f4449138d91 at::TensorIterator::for_each()
[2m[36m(pid=25417)[0m     @     0x7f4449a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25417)[0m     @     0x7f4449a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25476)[0m     @     0x7f600f8e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25476)[0m     @     0x7f600ed87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25476)[0m     @     0x7f600ed85388 at::native::copy_impl()
[2m[36m(pid=25476)[0m     @     0x7f600ed875a4 at::native::copy_()
[2m[36m(pid=25441)[0m     @     0x7ed5387e3d91 at::TensorIterator::for_each()
[2m[36m(pid=25441)[0m     @     0x7ed5390c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25441)[0m     @     0x7ed5390e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25441)[0m     @     0x7ed53858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25441)[0m     @     0x7ed538589388 at::native::copy_impl()
[2m[36m(pid=25407)[0m     @     0x7ed308f27d91 at::TensorIterator::for_each()
[2m[36m(pid=25407)[0m     @     0x7ed30980ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25407)[0m     @     0x7ed30982dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25407)[0m     @     0x7ed308ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25407)[0m     @     0x7ed308ccd388 at::native::copy_impl()
[2m[36m(pid=25489)[0m     @     0x7f7342957d91 at::TensorIterator::for_each()
[2m[36m(pid=25489)[0m     @     0x7f734323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25489)[0m     @     0x7f734325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25489)[0m     @     0x7f73426ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25489)[0m     @     0x7f73426fd388 at::native::copy_impl()
[2m[36m(pid=25521)[0m     @     0x7f2ef9e38d91 at::TensorIterator::for_each()
[2m[36m(pid=25521)[0m     @     0x7f2efa71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25521)[0m     @     0x7f2efa73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25521)[0m     @     0x7f2ef9be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25521)[0m     @     0x7f2ef9bde388 at::native::copy_impl()
[2m[36m(pid=25490)[0m     @     0x7efa3d487b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25490)[0m     @     0x7efa3d4aac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25490)[0m     @     0x7efa3c94ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25490)[0m     @     0x7efa3c94a388 at::native::copy_impl()
[2m[36m(pid=25490)[0m     @     0x7efa3c94c5a4 at::native::copy_()
[2m[36m(pid=25525)[0m     @     0x7fb4f3ebe5a4 at::native::copy_()
[2m[36m(pid=25525)[0m     @     0x7fb4f45a94f5 at::Tensor::copy_()
[2m[36m(pid=25484)[0m     @     0x7f71ad2fa5a4 at::native::copy_()
[2m[36m(pid=25484)[0m     @     0x7f71ad9e54f5 at::Tensor::copy_()
[2m[36m(pid=25486)[0m     @     0x7f7effcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25486)[0m     @     0x7f7effcf9388 at::native::copy_impl()
[2m[36m(pid=25509)[0m     @     0x7f42210e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25509)[0m     @     0x7f42210e1388 at::native::copy_impl()
[2m[36m(pid=25405)[0m     @     0x7f26949085a4 at::native::copy_()
[2m[36m(pid=25405)[0m     @     0x7f2694ff34f5 at::Tensor::copy_()
[2m[36m(pid=25409)[0m     @     0x7ed827802a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25409)[0m     @     0x7ed827800388 at::native::copy_impl()
[2m[36m(pid=25477)[0m     @     0x7f0450cadd91 at::TensorIterator::for_each()
[2m[36m(pid=25477)[0m     @     0x7f0451590b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25477)[0m     @     0x7f04515b3c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25491)[0m     @     0x7f2cbae99388 at::native::copy_impl()
[2m[36m(pid=25491)[0m     @     0x7f2cbae9b5a4 at::native::copy_()
[2m[36m(pid=25422)[0m     @     0x7fc065550a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25422)[0m     @     0x7fc06554e388 at::native::copy_impl()
[2m[36m(pid=25422)[0m     @     0x7fc0655505a4 at::native::copy_()
[2m[36m(pid=25413)[0m     @     0x7ee4fac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25413)[0m     @     0x7ee4fac25388 at::native::copy_impl()
[2m[36m(pid=25520)[0m     @     0x7f9d2fca0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25520)[0m     @     0x7f9d2fc9e388 at::native::copy_impl()
[2m[36m(pid=25482)[0m     @     0x7ef67ea88a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25482)[0m     @     0x7ef67ea86388 at::native::copy_impl()
[2m[36m(pid=25482)[0m     @     0x7ef67ea885a4 at::native::copy_()
[2m[36m(pid=25497)[0m     @     0x7ef97d9cf5a4 at::native::copy_()
[2m[36m(pid=25487)[0m     @     0x7f70d79ad388 at::native::copy_impl()
[2m[36m(pid=25487)[0m     @     0x7f70d79af5a4 at::native::copy_()
[2m[36m(pid=25421)[0m     @     0x7fbfaeaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25421)[0m     @     0x7fbfaeaf3388 at::native::copy_impl()
[2m[36m(pid=25421)[0m     @     0x7fbfaeaf55a4 at::native::copy_()
[2m[36m(pid=25518)[0m     @     0x7faf9120da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25518)[0m     @     0x7faf9120b388 at::native::copy_impl()
[2m[36m(pid=25403)[0m     @     0x7f09c1ce1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25403)[0m     @     0x7f09c1cdf388 at::native::copy_impl()
[2m[36m(pid=25403)[0m     @     0x7f09c1ce15a4 at::native::copy_()
[2m[36m(pid=25432)[0m     @     0x7fbfc928da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25432)[0m     @     0x7fbfc928b388 at::native::copy_impl()
[2m[36m(pid=25508)[0m     @     0x7efda884da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25508)[0m     @     0x7efda884b388 at::native::copy_impl()
[2m[36m(pid=25508)[0m     @     0x7efda884d5a4 at::native::copy_()
[2m[36m(pid=25505)[0m     @     0x7f5430ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25505)[0m     @     0x7f5430ccd388 at::native::copy_impl()
[2m[36m(pid=25505)[0m     @     0x7f5430ccf5a4 at::native::copy_()
[2m[36m(pid=25430)[0m     @     0x7f71bd2fa5a4 at::native::copy_()
[2m[36m(pid=25430)[0m     @     0x7f71bd9e54f5 at::Tensor::copy_()
[2m[36m(pid=25538)[0m     @     0x7f081f539d91 at::TensorIterator::for_each()
[2m[36m(pid=25538)[0m     @     0x7f081fe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25538)[0m     @     0x7f081fe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25538)[0m     @     0x7f081f2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25470)[0m     @     0x7f186b00cd91 at::TensorIterator::for_each()
[2m[36m(pid=25470)[0m     @     0x7f186b8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25442)[0m     @     0x7f8e1bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=25442)[0m     @     0x7f8e1c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25442)[0m     @     0x7f8e1c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25442)[0m     @     0x7f8e1ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25442)[0m     @     0x7f8e1ba37388 at::native::copy_impl()
[2m[36m(pid=25443)[0m     @     0x7edb52b7eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25443)[0m     @     0x7edb52ba1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25443)[0m     @     0x7edb52043a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25443)[0m     @     0x7edb52041388 at::native::copy_impl()
[2m[36m(pid=25464)[0m     @     0x7f949133fd91 at::TensorIterator::for_each()
[2m[36m(pid=25464)[0m     @     0x7f9491c22b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25464)[0m     @     0x7f9491c45c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25464)[0m     @     0x7f94910e7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25464)[0m     @     0x7f94910e5388 at::native::copy_impl()
[2m[36m(pid=25467)[0m     @     0x7fa75bd12b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25467)[0m     @     0x7fa75bd35c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25467)[0m     @     0x7fa75b1d7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25467)[0m     @     0x7fa75b1d5388 at::native::copy_impl()
[2m[36m(pid=25402)[0m     @     0x7ef67cb8aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25402)[0m     @     0x7ef67cb88388 at::native::copy_impl()
[2m[36m(pid=25402)[0m     @     0x7ef67cb8a5a4 at::native::copy_()
[2m[36m(pid=25534)[0m     @     0x7fae50e88b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25534)[0m     @     0x7fae50eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25534)[0m     @     0x7fae5034da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25534)[0m     @     0x7fae5034b388 at::native::copy_impl()
[2m[36m(pid=25416)[0m     @     0x7fb1250e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25416)[0m     @     0x7fb1250e1388 at::native::copy_impl()
[2m[36m(pid=25416)[0m     @     0x7fb1250e35a4 at::native::copy_()
[2m[36m(pid=25408)[0m     @     0x7f37a7747a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25408)[0m     @     0x7f37a7745388 at::native::copy_impl()
[2m[36m(pid=25408)[0m     @     0x7f37a77475a4 at::native::copy_()
[2m[36m(pid=25475)[0m     @     0x7fb304eabc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25475)[0m     @     0x7fb30434da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25475)[0m     @     0x7fb30434b388 at::native::copy_impl()
[2m[36m(pid=25475)[0m     @     0x7fb30434d5a4 at::native::copy_()
[2m[36m(pid=25434)[0m     @     0x7ee337a67d91 at::TensorIterator::for_each()
[2m[36m(pid=25434)[0m     @     0x7ee33834ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25434)[0m     @     0x7ee33836dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25434)[0m     @     0x7ee33780fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25434)[0m     @     0x7ee33780d388 at::native::copy_impl()
[2m[36m(pid=25435)[0m     @     0x7edeacdbbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25435)[0m     @     0x7edeac25da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25435)[0m     @     0x7edeac25b388 at::native::copy_impl()
[2m[36m(pid=25435)[0m     @     0x7edeac25d5a4 at::native::copy_()
[2m[36m(pid=25433)[0m     @     0x7f4d5b0f3d91 at::TensorIterator::for_each()
[2m[36m(pid=25433)[0m     @     0x7f4d5b9d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25433)[0m     @     0x7f4d5b9f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25433)[0m     @     0x7f4d5ae9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25433)[0m     @     0x7f4d5ae99388 at::native::copy_impl()
[2m[36m(pid=25437)[0m     @     0x7f8862957d91 at::TensorIterator::for_each()
[2m[36m(pid=25437)[0m     @     0x7f886323ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25437)[0m     @     0x7f886325dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25437)[0m     @     0x7f88626ffa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25437)[0m     @     0x7f88626fd388 at::native::copy_impl()
[2m[36m(pid=25404)[0m     @     0x7ef754e2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=25404)[0m     @     0x7ef754e2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25493)[0m     @     0x7ed73ccd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=25493)[0m     @     0x7ed73ccd2d91 at::TensorIterator::for_each()
[2m[36m(pid=25493)[0m     @     0x7ed73d5b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25493)[0m     @     0x7ed73d5d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25512)[0m     @     0x7f7419da7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25512)[0m     @     0x7f7419249a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25512)[0m     @     0x7f7419247388 at::native::copy_impl()
[2m[36m(pid=25512)[0m     @     0x7f74192495a4 at::native::copy_()
[2m[36m(pid=25494)[0m     @     0x7ef14242ad91 at::TensorIterator::for_each()
[2m[36m(pid=25494)[0m     @     0x7ef142d0db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25494)[0m     @     0x7ef142d30c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25494)[0m     @     0x7ef1421d2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25494)[0m     @     0x7ef1421d0388 at::native::copy_impl()
[2m[36m(pid=25469)[0m     @     0x7fbbcb4048f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25414)[0m     @     0x7f7f277fbad3 at::TensorIterator::for_each()
[2m[36m(pid=25492)[0m     @     0x7f2f048a0388 at::native::copy_impl()
[2m[36m(pid=25492)[0m     @     0x7f2f048a25a4 at::native::copy_()
[2m[36m(pid=25472)[0m     @     0x7efb56614ad3 at::TensorIterator::for_each()
[2m[36m(pid=25507)[0m     @     0x7f1f244b95a4 at::native::copy_()
[2m[36m(pid=25471)[0m     @     0x7f884e0e6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25471)[0m     @     0x7f884e0e4388 at::native::copy_impl()
[2m[36m(pid=25471)[0m     @     0x7f884e0e65a4 at::native::copy_()
[2m[36m(pid=25439)[0m     @     0x7f39bfa395a4 at::native::copy_()
[2m[36m(pid=25406)[0m     @     0x7ef7b3e165a4 at::native::copy_()
[2m[36m(pid=25406)[0m     @     0x7ef7b45014f5 at::Tensor::copy_()
[2m[36m(pid=25466)[0m     @     0x7ece266ff5a4 at::native::copy_()
[2m[36m(pid=25466)[0m     @     0x7ece26dea4f5 at::Tensor::copy_()
[2m[36m(pid=25466)[0m     @     0x7ece292bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25466)[0m     @     0x7ece26dea4f5 at::Tensor::copy_()
[2m[36m(pid=25412)[0m     @     0x7ee8759cf5a4 at::native::copy_()
[2m[36m(pid=25412)[0m     @     0x7ee8760ba4f5 at::Tensor::copy_()
[2m[36m(pid=25412)[0m     @     0x7ee87858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25419)[0m     @     0x7ee9a48105a4 at::native::copy_()
[2m[36m(pid=25419)[0m     @     0x7ee9a4efb4f5 at::Tensor::copy_()
[2m[36m(pid=25419)[0m     @     0x7ee9a73ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25523)[0m     @     0x7fb5c52fa5a4 at::native::copy_()
[2m[36m(pid=25523)[0m     @     0x7fb5c59e54f5 at::Tensor::copy_()
[2m[36m(pid=25523)[0m     @     0x7fb5c7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25537)[0m     @     0x7f57319e54f5 at::Tensor::copy_()
[2m[36m(pid=25537)[0m     @     0x7f5733eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25537)[0m     @     0x7f57319e54f5 at::Tensor::copy_()
[2m[36m(pid=25537)[0m     @     0x7f5737a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25537)[0m     @     0x55efc2842fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25537)[0m     @     0x55efc279db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25537)[0m     @     0x55efc2828baf _PyEval_EvalCodeWithName
[2m[36m(pid=25537)[0m     @     0x55efc2829a20 method_vectorcall
[2m[36m(pid=25537)[0m     @     0x55efc279dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25537)[0m     @     0x55efc2828baf _PyEval_EvalCodeWithName
[2m[36m(pid=25537)[0m     @     0x55efc2829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25537)[0m     @     0x55efc279e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25537)[0m     @     0x55efc2828baf _PyEval_EvalCodeWithName
[2m[36m(pid=25537)[0m     @     0x55efc2829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25537)[0m     @     0x55efc279e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25424)[0m     @     0x7fa0c9e9f4f5 at::Tensor::copy_()
[2m[36m(pid=25424)[0m     @     0x7fa0cc3728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25424)[0m     @     0x7fa0c9e9f4f5 at::Tensor::copy_()
[2m[36m(pid=25424)[0m     @     0x7fa0cff4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25424)[0m     @     0x55c9f45a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25424)[0m     @     0x55c9f4503b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25424)[0m     @     0x55c9f458ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25424)[0m     @     0x55c9f458fa20 method_vectorcall
[2m[36m(pid=25424)[0m     @     0x55c9f4503bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25424)[0m     @     0x55c9f458ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25424)[0m     @     0x55c9f458f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25424)[0m     @     0x55c9f4504689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25424)[0m     @     0x55c9f458ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25424)[0m     @     0x55c9f458f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25424)[0m     @     0x55c9f4504689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25530)[0m     @     0x7fc3df274a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25530)[0m     @     0x7fc3df272388 at::native::copy_impl()
[2m[36m(pid=25530)[0m     @     0x7fc3df2745a4 at::native::copy_()
[2m[36m(pid=25530)[0m     @     0x7fc3df95f4f5 at::Tensor::copy_()
[2m[36m(pid=25510)[0m     @     0x7f01caedac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25510)[0m     @     0x7f01ca37ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25510)[0m     @     0x7f01ca37a388 at::native::copy_impl()
[2m[36m(pid=25510)[0m     @     0x7f01ca37c5a4 at::native::copy_()
[2m[36m(pid=25418)[0m     @     0x7f4cb6d115a4 at::native::copy_()
[2m[36m(pid=25418)[0m     @     0x7f4cb73fc4f5 at::Tensor::copy_()
[2m[36m(pid=25418)[0m     @     0x7f4cb98cf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25410)[0m     @     0x7f973fae45a4 at::native::copy_()
[2m[36m(pid=25410)[0m     @     0x7f97401cf4f5 at::Tensor::copy_()
[2m[36m(pid=25410)[0m     @     0x7f97426a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25417)[0m     @     0x7f4448ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25417)[0m     @     0x7f4448ede388 at::native::copy_impl()
[2m[36m(pid=25417)[0m     @     0x7f4448ee05a4 at::native::copy_()
[2m[36m(pid=25417)[0m     @     0x7f44495cb4f5 at::Tensor::copy_()
[2m[36m(pid=25476)[0m     @     0x7f600f4724f5 at::Tensor::copy_()
[2m[36m(pid=25476)[0m     @     0x7f60119458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25476)[0m     @     0x7f600f4724f5 at::Tensor::copy_()
[2m[36m(pid=25476)[0m     @     0x7f601551d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25476)[0m     @     0x55dc27fa9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25476)[0m     @     0x55dc27f04b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25476)[0m     @     0x55dc27f8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25476)[0m     @     0x55dc27f90a20 method_vectorcall
[2m[36m(pid=25476)[0m     @     0x55dc27f04bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25476)[0m     @     0x55dc27f8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25476)[0m     @     0x55dc27f90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25476)[0m     @     0x55dc27f05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25476)[0m     @     0x55dc27f8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25476)[0m     @     0x55dc27f90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25476)[0m     @     0x55dc27f05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25476)[0m     @     0x55dc27f8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25476)[0m     @     0x55dc27f90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25476)[0m     @     0x55dc27f05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25476)[0m     @     0x55dc27f8fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25476)[0m     @     0x55dc27f90643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25476)[0m     @     0x55dc27f05689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25441)[0m     @     0x7ed53858b5a4 at::native::copy_()
[2m[36m(pid=25441)[0m     @     0x7ed538c764f5 at::Tensor::copy_()
[2m[36m(pid=25441)[0m     @     0x7ed53b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25407)[0m     @     0x7ed308ccf5a4 at::native::copy_()
[2m[36m(pid=25407)[0m     @     0x7ed3093ba4f5 at::Tensor::copy_()
[2m[36m(pid=25407)[0m     @     0x7ed30b88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25489)[0m     @     0x7f73426ff5a4 at::native::copy_()
[2m[36m(pid=25489)[0m     @     0x7f7342dea4f5 at::Tensor::copy_()
[2m[36m(pid=25489)[0m     @     0x7f73452bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25521)[0m     @     0x7f2ef9be05a4 at::native::copy_()
[2m[36m(pid=25521)[0m     @     0x7f2efa2cb4f5 at::Tensor::copy_()
[2m[36m(pid=25521)[0m     @     0x7f2efc79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25490)[0m     @     0x7efa3d0374f5 at::Tensor::copy_()
[2m[36m(pid=25490)[0m     @     0x7efa3f50a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25490)[0m     @     0x7efa3d0374f5 at::Tensor::copy_()
[2m[36m(pid=25490)[0m     @     0x7efa430e279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25490)[0m     @     0x5556d9027fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25525)[0m     @     0x7fb4f6a7c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25525)[0m     @     0x7fb4f45a94f5 at::Tensor::copy_()
[2m[36m(pid=25525)[0m     @     0x7fb4fa65479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25525)[0m     @     0x55e53ec47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25525)[0m     @     0x55e53eba2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25525)[0m     @     0x55e53ec2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25525)[0m     @     0x55e53ec2ea20 method_vectorcall
[2m[36m(pid=25525)[0m     @     0x55e53eba2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25525)[0m     @     0x55e53ec2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25525)[0m     @     0x55e53ec2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25525)[0m     @     0x55e53eba3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25525)[0m     @     0x55e53ec2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25525)[0m     @     0x55e53ec2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25525)[0m     @     0x55e53eba3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25525)[0m     @     0x55e53ec2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25525)[0m     @     0x55e53ec2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25525)[0m     @     0x55e53eba3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25525)[0m     @     0x55e53ec2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25525)[0m     @     0x55e53ec2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25525)[0m     @     0x55e53eba3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25484)[0m     @     0x7f71afeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25484)[0m     @     0x7f71ad9e54f5 at::Tensor::copy_()
[2m[36m(pid=25484)[0m     @     0x7f71b3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25484)[0m     @     0x56211cc17fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25484)[0m     @     0x56211cb72b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25484)[0m     @     0x56211cbfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25484)[0m     @     0x56211cbfea20 method_vectorcall
[2m[36m(pid=25484)[0m     @     0x56211cb72bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25484)[0m     @     0x56211cbfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25484)[0m     @     0x56211cbfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25484)[0m     @     0x56211cb73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25484)[0m     @     0x56211cbfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25484)[0m     @     0x56211cbfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25484)[0m     @     0x56211cb73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25484)[0m     @     0x56211cbfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25484)[0m     @     0x56211cbfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25484)[0m     @     0x56211cb73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25484)[0m     @     0x56211cbfdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25484)[0m     @     0x56211cbfe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25484)[0m     @     0x56211cb73689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25486)[0m     @     0x7f7effcfb5a4 at::native::copy_()
[2m[36m(pid=25486)[0m     @     0x7f7f003e64f5 at::Tensor::copy_()
[2m[36m(pid=25486)[0m     @     0x7f7f028b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25509)[0m     @     0x7f42210e35a4 at::native::copy_()
[2m[36m(pid=25509)[0m     @     0x7f42217ce4f5 at::Tensor::copy_()
[2m[36m(pid=25509)[0m     @     0x7f4223ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25405)[0m     @     0x7f26974c68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25405)[0m     @     0x7f2694ff34f5 at::Tensor::copy_()
[2m[36m(pid=25405)[0m     @     0x7f269b09e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25405)[0m     @     0x55ae022c3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25405)[0m     @     0x55ae0221eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25405)[0m     @     0x55ae022a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25405)[0m     @     0x55ae022aaa20 method_vectorcall
[2m[36m(pid=25405)[0m     @     0x55ae0221ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25405)[0m     @     0x55ae022a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25405)[0m     @     0x55ae022aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25405)[0m     @     0x55ae0221f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25405)[0m     @     0x55ae022a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25405)[0m     @     0x55ae022aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25405)[0m     @     0x55ae0221f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25405)[0m     @     0x55ae022a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25405)[0m     @     0x55ae022aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25405)[0m     @     0x55ae0221f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25405)[0m     @     0x55ae022a9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25405)[0m     @     0x55ae022aa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25405)[0m     @     0x55ae0221f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25409)[0m     @     0x7ed8278025a4 at::native::copy_()
[2m[36m(pid=25409)[0m     @     0x7ed827eed4f5 at::Tensor::copy_()
[2m[36m(pid=25409)[0m     @     0x7ed82a3c08de torch::autograd::VariableType::(anonymous namespace)::copy_()
2020-11-05 10:36:08,957	WARNING worker.py:945 -- The driver may not be able to keep up with the stdout/stderr of the workers. To avoid forwarding logs to the driver, use 'ray.init(log_to_driver=False)'.
[2m[36m(pid=25477)[0m     @     0x7f0450a55a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25477)[0m     @     0x7f0450a53388 at::native::copy_impl()
[2m[36m(pid=25477)[0m     @     0x7f0450a555a4 at::native::copy_()
[2m[36m(pid=25477)[0m     @     0x7f04511404f5 at::Tensor::copy_()
[2m[36m(pid=25491)[0m     @     0x7f2cbb5864f5 at::Tensor::copy_()
[2m[36m(pid=25491)[0m     @     0x7f2cbda598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25491)[0m     @     0x7f2cbb5864f5 at::Tensor::copy_()
[2m[36m(pid=25491)[0m     @     0x7f2cc163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25491)[0m     @     0x55cd84ef0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25491)[0m     @     0x55cd84e4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25491)[0m     @     0x55cd84ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25491)[0m     @     0x55cd84ed7a20 method_vectorcall
[2m[36m(pid=25491)[0m     @     0x55cd84e4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25491)[0m     @     0x55cd84ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25491)[0m     @     0x55cd84ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25491)[0m     @     0x55cd84e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25491)[0m     @     0x55cd84ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25491)[0m     @     0x55cd84ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25491)[0m     @     0x55cd84e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25491)[0m     @     0x55cd84ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25491)[0m     @     0x55cd84ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25491)[0m     @     0x55cd84e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25491)[0m     @     0x55cd84ed6baf _PyEval_EvalCodeWithName
[2m[36m(pid=25491)[0m     @     0x55cd84ed7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25491)[0m     @     0x55cd84e4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25422)[0m     @     0x7fc065c3b4f5 at::Tensor::copy_()
[2m[36m(pid=25422)[0m     @     0x7fc06810e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25422)[0m     @     0x7fc065c3b4f5 at::Tensor::copy_()
[2m[36m(pid=25422)[0m     @     0x7fc06bce679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25422)[0m     @     0x55f764a56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25422)[0m     @     0x55f7649b1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25422)[0m     @     0x55f764a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25422)[0m     @     0x55f764a3da20 method_vectorcall
[2m[36m(pid=25422)[0m     @     0x55f7649b1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25413)[0m     @     0x7ee4fac275a4 at::native::copy_()
[2m[36m(pid=25413)[0m     @     0x7ee4fb3124f5 at::Tensor::copy_()
[2m[36m(pid=25413)[0m     @     0x7ee4fd7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25520)[0m     @     0x7f9d2fca05a4 at::native::copy_()
[2m[36m(pid=25520)[0m     @     0x7f9d3038b4f5 at::Tensor::copy_()
[2m[36m(pid=25520)[0m     @     0x7f9d3285e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25482)[0m     @     0x7ef67f1734f5 at::Tensor::copy_()
[2m[36m(pid=25482)[0m     @     0x7ef6816468de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25482)[0m     @     0x7ef67f1734f5 at::Tensor::copy_()
[2m[36m(pid=25482)[0m     @     0x7ef68521e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25482)[0m     @     0x56422a6b0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25482)[0m     @     0x56422a60bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25482)[0m     @     0x56422a696baf _PyEval_EvalCodeWithName
[2m[36m(pid=25482)[0m     @     0x56422a697a20 method_vectorcall
[2m[36m(pid=25482)[0m     @     0x56422a60bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25482)[0m     @     0x56422a696baf _PyEval_EvalCodeWithName
[2m[36m(pid=25482)[0m     @     0x56422a697643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25482)[0m     @     0x56422a60c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25482)[0m     @     0x56422a696baf _PyEval_EvalCodeWithName
[2m[36m(pid=25482)[0m     @     0x56422a697643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25482)[0m     @     0x56422a60c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25482)[0m     @     0x56422a696baf _PyEval_EvalCodeWithName
[2m[36m(pid=25497)[0m     @     0x7ef97e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=25497)[0m     @     0x7ef98058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25497)[0m     @     0x7ef97e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=25497)[0m     @     0x7ef98416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25497)[0m     @     0x56254b10bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25497)[0m     @     0x56254b066b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25497)[0m     @     0x56254b0f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25497)[0m     @     0x56254b0f2a20 method_vectorcall
[2m[36m(pid=25497)[0m     @     0x56254b066bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25497)[0m     @     0x56254b0f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25497)[0m     @     0x56254b0f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25497)[0m     @     0x56254b067689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25497)[0m     @     0x56254b0f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25497)[0m     @     0x56254b0f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25497)[0m     @     0x56254b067689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25497)[0m     @     0x56254b0f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25497)[0m     @     0x56254b0f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25497)[0m     @     0x56254b067689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25497)[0m     @     0x56254b0f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=25497)[0m     @     0x56254b0f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25497)[0m     @     0x56254b067689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25487)[0m     @     0x7f70d809a4f5 at::Tensor::copy_()
[2m[36m(pid=25487)[0m     @     0x7f70da56d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25487)[0m     @     0x7f70d809a4f5 at::Tensor::copy_()
[2m[36m(pid=25487)[0m     @     0x7f70de14579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25487)[0m     @     0x5634f1967fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25487)[0m     @     0x5634f18c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25487)[0m     @     0x5634f194dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25487)[0m     @     0x5634f194ea20 method_vectorcall
[2m[36m(pid=25487)[0m     @     0x5634f18c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25487)[0m     @     0x5634f194dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25487)[0m     @     0x5634f194e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25487)[0m     @     0x5634f18c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25487)[0m     @     0x5634f194dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25487)[0m     @     0x5634f194e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25487)[0m     @     0x5634f18c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25487)[0m     @     0x5634f194dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25487)[0m     @     0x5634f194e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25487)[0m     @     0x5634f18c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25487)[0m     @     0x5634f194dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25487)[0m     @     0x5634f194e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25487)[0m     @     0x5634f18c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25421)[0m     @     0x7fbfaf1e04f5 at::Tensor::copy_()
[2m[36m(pid=25421)[0m     @     0x7fbfb16b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25421)[0m     @     0x7fbfaf1e04f5 at::Tensor::copy_()
[2m[36m(pid=25421)[0m     @     0x7fbfb528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25421)[0m     @     0x5570ee93efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25421)[0m     @     0x5570ee899b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25421)[0m     @     0x5570ee924baf _PyEval_EvalCodeWithName
[2m[36m(pid=25421)[0m     @     0x5570ee925a20 method_vectorcall
[2m[36m(pid=25421)[0m     @     0x5570ee899bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25421)[0m     @     0x5570ee924baf _PyEval_EvalCodeWithName
[2m[36m(pid=25421)[0m     @     0x5570ee925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25421)[0m     @     0x5570ee89a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25421)[0m     @     0x5570ee924baf _PyEval_EvalCodeWithName
[2m[36m(pid=25421)[0m     @     0x5570ee925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25421)[0m     @     0x5570ee89a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25421)[0m     @     0x5570ee924baf _PyEval_EvalCodeWithName
[2m[36m(pid=25421)[0m     @     0x5570ee925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25421)[0m     @     0x5570ee89a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25421)[0m     @     0x5570ee924baf _PyEval_EvalCodeWithName
[2m[36m(pid=25421)[0m     @     0x5570ee925643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25518)[0m     @     0x7faf9120d5a4 at::native::copy_()
[2m[36m(pid=25518)[0m     @     0x7faf918f84f5 at::Tensor::copy_()
[2m[36m(pid=25518)[0m     @     0x7faf93dcb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25518)[0m     @     0x7faf918f84f5 at::Tensor::copy_()
[2m[36m(pid=25403)[0m     @     0x7f09c23cc4f5 at::Tensor::copy_()
[2m[36m(pid=25403)[0m     @     0x7f09c489f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25403)[0m     @     0x7f09c23cc4f5 at::Tensor::copy_()
[2m[36m(pid=25403)[0m     @     0x7f09c847779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25403)[0m     @     0x561ac121efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25403)[0m     @     0x561ac1179b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25403)[0m     @     0x561ac1204baf _PyEval_EvalCodeWithName
[2m[36m(pid=25403)[0m     @     0x561ac1205a20 method_vectorcall
[2m[36m(pid=25403)[0m     @     0x561ac1179bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25403)[0m     @     0x561ac1204baf _PyEval_EvalCodeWithName
[2m[36m(pid=25403)[0m     @     0x561ac1205643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25403)[0m     @     0x561ac117a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25403)[0m     @     0x561ac1204baf _PyEval_EvalCodeWithName
[2m[36m(pid=25403)[0m     @     0x561ac1205643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25403)[0m     @     0x561ac117a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25403)[0m     @     0x561ac1204baf _PyEval_EvalCodeWithName
[2m[36m(pid=25403)[0m     @     0x561ac1205643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25403)[0m     @     0x561ac117a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25403)[0m     @     0x561ac1204baf _PyEval_EvalCodeWithName
[2m[36m(pid=25403)[0m     @     0x561ac1205643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25432)[0m     @     0x7fbfc928d5a4 at::native::copy_()
[2m[36m(pid=25432)[0m     @     0x7fbfc99784f5 at::Tensor::copy_()
[2m[36m(pid=25432)[0m     @     0x7fbfcbe4b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25432)[0m     @     0x7fbfc99784f5 at::Tensor::copy_()
[2m[36m(pid=25508)[0m     @     0x7efda8f384f5 at::Tensor::copy_()
[2m[36m(pid=25508)[0m     @     0x7efdab40b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25508)[0m     @     0x7efda8f384f5 at::Tensor::copy_()
[2m[36m(pid=25508)[0m     @     0x7efdaefe379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25508)[0m     @     0x563c491f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25508)[0m     @     0x563c4914cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25508)[0m     @     0x563c491d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25508)[0m     @     0x563c491d8a20 method_vectorcall
[2m[36m(pid=25508)[0m     @     0x563c4914cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25508)[0m     @     0x563c491d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25508)[0m     @     0x563c491d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25508)[0m     @     0x563c4914d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25508)[0m     @     0x563c491d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25508)[0m     @     0x563c491d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25508)[0m     @     0x563c4914d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25508)[0m     @     0x563c491d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25508)[0m     @     0x563c491d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25508)[0m     @     0x563c4914d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25508)[0m     @     0x563c491d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=25505)[0m     @     0x7f54313ba4f5 at::Tensor::copy_()
[2m[36m(pid=25505)[0m     @     0x7f543388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25505)[0m     @     0x7f54313ba4f5 at::Tensor::copy_()
[2m[36m(pid=25505)[0m     @     0x7f543746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25505)[0m     @     0x557a391a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25505)[0m     @     0x557a390ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25505)[0m     @     0x557a3918abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25505)[0m     @     0x557a3918ba20 method_vectorcall
[2m[36m(pid=25505)[0m     @     0x557a390ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25505)[0m     @     0x557a3918abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25505)[0m     @     0x557a3918b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25505)[0m     @     0x557a39100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25505)[0m     @     0x557a3918abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25505)[0m     @     0x557a3918b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25505)[0m     @     0x557a39100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25505)[0m     @     0x557a3918abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25505)[0m     @     0x557a3918b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25505)[0m     @     0x557a39100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25505)[0m     @     0x557a3918abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25505)[0m     @     0x557a3918b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25505)[0m     @     0x557a39100689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25430)[0m     @     0x7f71bfeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25430)[0m     @     0x7f71bd9e54f5 at::Tensor::copy_()
[2m[36m(pid=25430)[0m     @     0x7f71c3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25430)[0m     @     0x55f61a37dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25430)[0m     @     0x55f61a2d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25430)[0m     @     0x55f61a363baf _PyEval_EvalCodeWithName
[2m[36m(pid=25430)[0m     @     0x55f61a364a20 method_vectorcall
[2m[36m(pid=25430)[0m     @     0x55f61a2d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25430)[0m     @     0x55f61a363baf _PyEval_EvalCodeWithName
[2m[36m(pid=25430)[0m     @     0x55f61a364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25430)[0m     @     0x55f61a2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25430)[0m     @     0x55f61a363baf _PyEval_EvalCodeWithName
[2m[36m(pid=25430)[0m     @     0x55f61a364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25430)[0m     @     0x55f61a2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25430)[0m     @     0x55f61a363baf _PyEval_EvalCodeWithName
[2m[36m(pid=25430)[0m     @     0x55f61a364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25430)[0m     @     0x55f61a2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25430)[0m     @     0x55f61a363baf _PyEval_EvalCodeWithName
[2m[36m(pid=25430)[0m     @     0x55f61a364643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25430)[0m     @     0x55f61a2d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25538)[0m     @     0x7f081f2df388 at::native::copy_impl()
[2m[36m(pid=25538)[0m     @     0x7f081f2e15a4 at::native::copy_()
[2m[36m(pid=25538)[0m     @     0x7f081f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=25538)[0m     @     0x7f0821e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25470)[0m     @     0x7f186b912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25470)[0m     @     0x7f186adb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25470)[0m     @     0x7f186adb2388 at::native::copy_impl()
[2m[36m(pid=25470)[0m     @     0x7f186adb45a4 at::native::copy_()
[2m[36m(pid=25442)[0m     @     0x7f8e1ba395a4 at::native::copy_()
[2m[36m(pid=25442)[0m     @     0x7f8e1c1244f5 at::Tensor::copy_()
[2m[36m(pid=25442)[0m     @     0x7f8e1e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25420)[0m     @     0x7ed0c0f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=25420)[0m     @     0x7ed0c0f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=25420)[0m     @     0x7ed0c0f27d91 at::TensorIterator::for_each()
[2m[36m(pid=25443)[0m     @     0x7edb520435a4 at::native::copy_()
[2m[36m(pid=25443)[0m     @     0x7edb5272e4f5 at::Tensor::copy_()
[2m[36m(pid=25443)[0m     @     0x7edb54c018de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25464)[0m     @     0x7f94910e75a4 at::native::copy_()
[2m[36m(pid=25464)[0m     @     0x7f94917d24f5 at::Tensor::copy_()
[2m[36m(pid=25464)[0m     @     0x7f9493ca58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25467)[0m     @     0x7fa75b1d75a4 at::native::copy_()
[2m[36m(pid=25467)[0m     @     0x7fa75b8c24f5 at::Tensor::copy_()
[2m[36m(pid=25467)[0m     @     0x7fa75dd958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25402)[0m     @     0x7ef67d2754f5 at::Tensor::copy_()
[2m[36m(pid=25402)[0m     @     0x7ef67f7488de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25402)[0m     @     0x7ef67d2754f5 at::Tensor::copy_()
[2m[36m(pid=25402)[0m     @     0x7ef68332079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25402)[0m     @     0x55c80a571fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25402)[0m     @     0x55c80a4ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25402)[0m     @     0x55c80a557baf _PyEval_EvalCodeWithName
[2m[36m(pid=25402)[0m     @     0x55c80a558a20 method_vectorcall
[2m[36m(pid=25402)[0m     @     0x55c80a4ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25534)[0m     @     0x7fae5034d5a4 at::native::copy_()
[2m[36m(pid=25534)[0m     @     0x7fae50a384f5 at::Tensor::copy_()
[2m[36m(pid=25534)[0m     @     0x7fae52f0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25416)[0m     @     0x7fb1257ce4f5 at::Tensor::copy_()
[2m[36m(pid=25416)[0m     @     0x7fb127ca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25416)[0m     @     0x7fb1257ce4f5 at::Tensor::copy_()
[2m[36m(pid=25416)[0m     @     0x7fb12b87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25416)[0m     @     0x55a7b023afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25416)[0m     @     0x55a7b0195b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25416)[0m     @     0x55a7b0220baf _PyEval_EvalCodeWithName
[2m[36m(pid=25416)[0m     @     0x55a7b0221a20 method_vectorcall
[2m[36m(pid=25416)[0m     @     0x55a7b0195bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25416)[0m     @     0x55a7b0220baf _PyEval_EvalCodeWithName
[2m[36m(pid=25416)[0m     @     0x55a7b0221643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25416)[0m     @     0x55a7b0196689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25416)[0m     @     0x55a7b0220baf _PyEval_EvalCodeWithName
[2m[36m(pid=25416)[0m     @     0x55a7b0221643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25416)[0m     @     0x55a7b0196689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25416)[0m     @     0x55a7b0220baf _PyEval_EvalCodeWithName
[2m[36m(pid=25416)[0m     @     0x55a7b0221643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25416)[0m     @     0x55a7b0196689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25416)[0m     @     0x55a7b0220baf _PyEval_EvalCodeWithName
[2m[36m(pid=25416)[0m     @     0x55a7b0221643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25416)[0m     @     0x55a7b0196689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25408)[0m     @     0x7f37a7e324f5 at::Tensor::copy_()
[2m[36m(pid=25408)[0m     @     0x7f37aa3058de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25408)[0m     @     0x7f37a7e324f5 at::Tensor::copy_()
[2m[36m(pid=25408)[0m     @     0x7f37adedd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25408)[0m     @     0x55f95a231fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25408)[0m     @     0x55f95a18cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25408)[0m     @     0x55f95a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=25408)[0m     @     0x55f95a218a20 method_vectorcall
[2m[36m(pid=25408)[0m     @     0x55f95a18cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25408)[0m     @     0x55f95a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=25408)[0m     @     0x55f95a218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25408)[0m     @     0x55f95a18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25408)[0m     @     0x55f95a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=25408)[0m     @     0x55f95a218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25408)[0m     @     0x55f95a18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25408)[0m     @     0x55f95a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=25408)[0m     @     0x55f95a218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25408)[0m     @     0x55f95a18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25408)[0m     @     0x55f95a217baf _PyEval_EvalCodeWithName
[2m[36m(pid=25408)[0m     @     0x55f95a218643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25408)[0m     @     0x55f95a18d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25475)[0m     @     0x7fb304a384f5 at::Tensor::copy_()
[2m[36m(pid=25475)[0m     @     0x7fb306f0b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25475)[0m     @     0x7fb304a384f5 at::Tensor::copy_()
[2m[36m(pid=25475)[0m     @     0x7fb30aae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25475)[0m     @     0x55b4ad117fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25475)[0m     @     0x55b4ad072b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25475)[0m     @     0x55b4ad0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25475)[0m     @     0x55b4ad0fea20 method_vectorcall
[2m[36m(pid=25475)[0m     @     0x55b4ad072bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25475)[0m     @     0x55b4ad0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25475)[0m     @     0x55b4ad0fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25475)[0m     @     0x55b4ad073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25475)[0m     @     0x55b4ad0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25475)[0m     @     0x55b4ad0fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25475)[0m     @     0x55b4ad073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25475)[0m     @     0x55b4ad0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25475)[0m     @     0x55b4ad0fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25475)[0m     @     0x55b4ad073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25475)[0m     @     0x55b4ad0fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25475)[0m     @     0x55b4ad0fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25475)[0m     @     0x55b4ad073689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25434)[0m     @     0x7ee33780f5a4 at::native::copy_()
[2m[36m(pid=25434)[0m     @     0x7ee337efa4f5 at::Tensor::copy_()
[2m[36m(pid=25434)[0m     @     0x7ee33a3cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25434)[0m     @     0x7ee337efa4f5 at::Tensor::copy_()
[2m[36m(pid=25434)[0m     @     0x7ee33dfa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25434)[0m     @     0x558a61e26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25434)[0m     @     0x558a61d81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25435)[0m     @     0x7edeac9484f5 at::Tensor::copy_()
[2m[36m(pid=25435)[0m     @     0x7edeaee1b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25435)[0m     @     0x7edeac9484f5 at::Tensor::copy_()
[2m[36m(pid=25435)[0m     @     0x7edeb29f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25435)[0m     @     0x56377a24cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25435)[0m     @     0x56377a1a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25435)[0m     @     0x56377a232baf _PyEval_EvalCodeWithName
[2m[36m(pid=25435)[0m     @     0x56377a233a20 method_vectorcall
[2m[36m(pid=25435)[0m     @     0x56377a1a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25435)[0m     @     0x56377a232baf _PyEval_EvalCodeWithName
[2m[36m(pid=25435)[0m     @     0x56377a233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25435)[0m     @     0x56377a1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25435)[0m     @     0x56377a232baf _PyEval_EvalCodeWithName
[2m[36m(pid=25435)[0m     @     0x56377a233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25435)[0m     @     0x56377a1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25435)[0m     @     0x56377a232baf _PyEval_EvalCodeWithName
[2m[36m(pid=25435)[0m     @     0x56377a233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25435)[0m     @     0x56377a1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25435)[0m     @     0x56377a232baf _PyEval_EvalCodeWithName
[2m[36m(pid=25435)[0m     @     0x56377a233643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25435)[0m     @     0x56377a1a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25433)[0m     @     0x7f4d5ae9b5a4 at::native::copy_()
[2m[36m(pid=25433)[0m     @     0x7f4d5b5864f5 at::Tensor::copy_()
[2m[36m(pid=25433)[0m     @     0x7f4d5da598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25433)[0m     @     0x7f4d5b5864f5 at::Tensor::copy_()
[2m[36m(pid=25433)[0m     @     0x7f4d6163179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25433)[0m     @     0x559aa6190fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25433)[0m     @     0x559aa60ebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25433)[0m     @     0x559aa6176baf _PyEval_EvalCodeWithName
[2m[36m(pid=25433)[0m     @     0x559aa6177a20 method_vectorcall
[2m[36m(pid=25433)[0m     @     0x559aa60ebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25433)[0m     @     0x559aa6176baf _PyEval_EvalCodeWithName
[2m[36m(pid=25433)[0m     @     0x559aa6177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25433)[0m     @     0x559aa60ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25433)[0m     @     0x559aa6176baf _PyEval_EvalCodeWithName
[2m[36m(pid=25433)[0m     @     0x559aa6177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25433)[0m     @     0x559aa60ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25433)[0m     @     0x559aa6176baf _PyEval_EvalCodeWithName
[2m[36m(pid=25437)[0m     @     0x7f88626ff5a4 at::native::copy_()
[2m[36m(pid=25437)[0m     @     0x7f8862dea4f5 at::Tensor::copy_()
[2m[36m(pid=25437)[0m     @     0x7f88652bd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25437)[0m     @     0x7f8862dea4f5 at::Tensor::copy_()
[2m[36m(pid=25437)[0m     @     0x7f8868e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25437)[0m     @     0x55e77fb63fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25437)[0m     @     0x55e77fabeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25437)[0m     @     0x55e77fb49baf _PyEval_EvalCodeWithName
[2m[36m(pid=25437)[0m     @     0x55e77fb4aa20 method_vectorcall
[2m[36m(pid=25437)[0m     @     0x55e77fabebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25404)[0m     @     0x7ef754e2fad3 at::TensorIterator::for_each()
[2m[36m(pid=25493)[0m     @     0x7ed73ca7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25493)[0m     @     0x7ed73ca78388 at::native::copy_impl()
[2m[36m(pid=25493)[0m     @     0x7ed73ca7a5a4 at::native::copy_()
[2m[36m(pid=25493)[0m     @     0x7ed73d1654f5 at::Tensor::copy_()
[2m[36m(pid=25493)[0m     @     0x7ed73f6388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25512)[0m     @     0x7f74199344f5 at::Tensor::copy_()
[2m[36m(pid=25512)[0m     @     0x7f741be078de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25512)[0m     @     0x7f74199344f5 at::Tensor::copy_()
[2m[36m(pid=25512)[0m     @     0x7f741f9df79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25512)[0m     @     0x55c976549fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25512)[0m     @     0x55c9764a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25512)[0m     @     0x55c97652fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25512)[0m     @     0x55c976530a20 method_vectorcall
[2m[36m(pid=25512)[0m     @     0x55c9764a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25512)[0m     @     0x55c97652fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25512)[0m     @     0x55c976530643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25512)[0m     @     0x55c9764a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25512)[0m     @     0x55c97652fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25512)[0m     @     0x55c976530643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25512)[0m     @     0x55c9764a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25512)[0m     @     0x55c97652fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25512)[0m     @     0x55c976530643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25512)[0m     @     0x55c9764a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25512)[0m     @     0x55c97652fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25512)[0m     @     0x55c976530643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25512)[0m     @     0x55c9764a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25494)[0m     @     0x7ef1421d25a4 at::native::copy_()
[2m[36m(pid=25494)[0m     @     0x7ef1428bd4f5 at::Tensor::copy_()
[2m[36m(pid=25494)[0m     @     0x7ef144d908de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25494)[0m     @     0x7ef1428bd4f5 at::Tensor::copy_()
[2m[36m(pid=25469)[0m     @     0x7fbbcb404ad3 at::TensorIterator::for_each()
[2m[36m(pid=25469)[0m     @     0x7fbbcb404d91 at::TensorIterator::for_each()
[2m[36m(pid=25469)[0m     @     0x7fbbcbce7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25469)[0m     @     0x7fbbcbd0ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25469)[0m     @     0x7fbbcb1aca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25469)[0m     @     0x7fbbcb1aa388 at::native::copy_impl()
[2m[36m(pid=25414)[0m     @     0x7f7f277fbd91 at::TensorIterator::for_each()
[2m[36m(pid=25414)[0m     @     0x7f7f280deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25414)[0m     @     0x7f7f28101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25492)[0m     @     0x7f2f04f8d4f5 at::Tensor::copy_()
[2m[36m(pid=25492)[0m     @     0x7f2f074608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25492)[0m     @     0x7f2f04f8d4f5 at::Tensor::copy_()
[2m[36m(pid=25492)[0m     @     0x7f2f0b03879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25492)[0m     @     0x55c54f76afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25492)[0m     @     0x55c54f6c5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25492)[0m     @     0x55c54f750baf _PyEval_EvalCodeWithName
[2m[36m(pid=25492)[0m     @     0x55c54f751a20 method_vectorcall
[2m[36m(pid=25492)[0m     @     0x55c54f6c5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25492)[0m     @     0x55c54f750baf _PyEval_EvalCodeWithName
[2m[36m(pid=25492)[0m     @     0x55c54f751643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25492)[0m     @     0x55c54f6c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25492)[0m     @     0x55c54f750baf _PyEval_EvalCodeWithName
[2m[36m(pid=25492)[0m     @     0x55c54f751643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25492)[0m     @     0x55c54f6c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25492)[0m     @     0x55c54f750baf _PyEval_EvalCodeWithName
[2m[36m(pid=25492)[0m     @     0x55c54f751643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25492)[0m     @     0x55c54f6c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25492)[0m     @     0x55c54f750baf _PyEval_EvalCodeWithName
[2m[36m(pid=25492)[0m     @     0x55c54f751643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25492)[0m     @     0x55c54f6c6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25472)[0m     @     0x7efb56614d91 at::TensorIterator::for_each()
[2m[36m(pid=25507)[0m     @     0x7f1f24ba44f5 at::Tensor::copy_()
[2m[36m(pid=25507)[0m     @     0x7f1f270778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25507)[0m     @     0x7f1f24ba44f5 at::Tensor::copy_()
[2m[36m(pid=25507)[0m     @     0x7f1f2ac4f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25507)[0m     @     0x55c9d1f8ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25507)[0m     @     0x55c9d1eeab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25507)[0m     @     0x55c9d1f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25507)[0m     @     0x55c9d1f76a20 method_vectorcall
[2m[36m(pid=25507)[0m     @     0x55c9d1eeabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25507)[0m     @     0x55c9d1f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25507)[0m     @     0x55c9d1f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25507)[0m     @     0x55c9d1eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25507)[0m     @     0x55c9d1f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25507)[0m     @     0x55c9d1f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25507)[0m     @     0x55c9d1eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25507)[0m     @     0x55c9d1f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25507)[0m     @     0x55c9d1f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25507)[0m     @     0x55c9d1eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25507)[0m     @     0x55c9d1f75baf _PyEval_EvalCodeWithName
[2m[36m(pid=25507)[0m     @     0x55c9d1f76643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25507)[0m     @     0x55c9d1eeb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25471)[0m     @     0x7f884e7d14f5 at::Tensor::copy_()
[2m[36m(pid=25471)[0m     @     0x7f8850ca48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25471)[0m     @     0x7f884e7d14f5 at::Tensor::copy_()
[2m[36m(pid=25471)[0m     @     0x7f885487c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25471)[0m     @     0x556f2f2e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25471)[0m     @     0x556f2f240b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25471)[0m     @     0x556f2f2cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25471)[0m     @     0x556f2f2cca20 method_vectorcall
[2m[36m(pid=25471)[0m     @     0x556f2f240bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25471)[0m     @     0x556f2f2cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25471)[0m     @     0x556f2f2cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25471)[0m     @     0x556f2f241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25471)[0m     @     0x556f2f2cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25471)[0m     @     0x556f2f2cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25471)[0m     @     0x556f2f241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25471)[0m     @     0x556f2f2cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25471)[0m     @     0x556f2f2cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25471)[0m     @     0x556f2f241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25471)[0m     @     0x556f2f2cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25471)[0m     @     0x556f2f2cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25471)[0m     @     0x556f2f241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25439)[0m     @     0x7f39c01244f5 at::Tensor::copy_()
[2m[36m(pid=25439)[0m     @     0x7f39c25f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25439)[0m     @     0x7f39c01244f5 at::Tensor::copy_()
[2m[36m(pid=25439)[0m     @     0x7f39c61cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25439)[0m     @     0x55d2428dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25439)[0m     @     0x55d24283ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25439)[0m     @     0x55d2428c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25439)[0m     @     0x55d2428c6a20 method_vectorcall
[2m[36m(pid=25439)[0m     @     0x55d24283abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25439)[0m     @     0x55d2428c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25439)[0m     @     0x55d2428c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25439)[0m     @     0x55d24283b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25439)[0m     @     0x55d2428c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25439)[0m     @     0x55d2428c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25439)[0m     @     0x55d24283b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25439)[0m     @     0x55d2428c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25439)[0m     @     0x55d2428c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25439)[0m     @     0x55d24283b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25439)[0m     @     0x55d2428c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25439)[0m     @     0x55d2428c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25439)[0m     @     0x55d24283b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25406)[0m     @     0x7ef7b69d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25406)[0m     @     0x7ef7b45014f5 at::Tensor::copy_()
[2m[36m(pid=25406)[0m     @     0x7ef7ba1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25406)[0m     @     0x55de8b279fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25406)[0m     @     0x55de8b1d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25406)[0m     @     0x55de8b25fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25406)[0m     @     0x55de8b260a20 method_vectorcall
[2m[36m(pid=25406)[0m     @     0x55de8b1d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25406)[0m     @     0x55de8b25fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25406)[0m     @     0x55de8b260643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25406)[0m     @     0x55de8b1d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25406)[0m     @     0x55de8b25fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25406)[0m     @     0x55de8b260643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25406)[0m     @     0x55de8b1d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25406)[0m     @     0x55de8b25fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25406)[0m     @     0x55de8b260643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25406)[0m     @     0x55de8b1d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25406)[0m     @     0x55de8b25fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25406)[0m     @     0x55de8b260643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25406)[0m     @     0x55de8b1d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x7ece2ce9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25466)[0m     @     0x55cc0b7f2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25466)[0m     @     0x55cc0b74db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x55cc0b7d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25466)[0m     @     0x55cc0b7d9a20 method_vectorcall
[2m[36m(pid=25466)[0m     @     0x55cc0b74dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x55cc0b7d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25466)[0m     @     0x55cc0b7d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25466)[0m     @     0x55cc0b74e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x55cc0b7d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25466)[0m     @     0x55cc0b7d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25466)[0m     @     0x55cc0b74e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x55cc0b7d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25466)[0m     @     0x55cc0b7d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25466)[0m     @     0x55cc0b74e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25466)[0m     @     0x55cc0b7d8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25466)[0m     @     0x55cc0b7d9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25466)[0m     @     0x55cc0b74e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25412)[0m     @     0x7ee8760ba4f5 at::Tensor::copy_()
[2m[36m(pid=25412)[0m     @     0x7ee87c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25412)[0m     @     0x5653db515fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25412)[0m     @     0x5653db470b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25412)[0m     @     0x5653db4fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25412)[0m     @     0x5653db4fca20 method_vectorcall
[2m[36m(pid=25412)[0m     @     0x5653db470bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25412)[0m     @     0x5653db4fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25412)[0m     @     0x5653db4fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25412)[0m     @     0x5653db471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25412)[0m     @     0x5653db4fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25412)[0m     @     0x5653db4fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25412)[0m     @     0x5653db471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25412)[0m     @     0x5653db4fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25412)[0m     @     0x5653db4fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25412)[0m     @     0x5653db471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25412)[0m     @     0x5653db4fbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25412)[0m     @     0x5653db4fc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25412)[0m     @     0x5653db471689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25419)[0m     @     0x7ee9a4efb4f5 at::Tensor::copy_()
[2m[36m(pid=25419)[0m     @     0x7ee9aafa679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25419)[0m     @     0x5653df724fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25419)[0m     @     0x5653df67fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25419)[0m     @     0x5653df70abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25419)[0m     @     0x5653df70ba20 method_vectorcall
[2m[36m(pid=25419)[0m     @     0x5653df67fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25419)[0m     @     0x5653df70abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25419)[0m     @     0x5653df70b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25419)[0m     @     0x5653df680689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25419)[0m     @     0x5653df70abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25419)[0m     @     0x5653df70b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25419)[0m     @     0x5653df680689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25419)[0m     @     0x5653df70abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25419)[0m     @     0x5653df70b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25419)[0m     @     0x5653df680689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25419)[0m     @     0x5653df70abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25419)[0m     @     0x5653df70b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25419)[0m     @     0x5653df680689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25523)[0m     @     0x7fb5c59e54f5 at::Tensor::copy_()
[2m[36m(pid=25523)[0m     @     0x7fb5cba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25523)[0m     @     0x5644178e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25523)[0m     @     0x564417840b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25523)[0m     @     0x5644178cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25523)[0m     @     0x5644178cca20 method_vectorcall
[2m[36m(pid=25523)[0m     @     0x564417840bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25523)[0m     @     0x5644178cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25523)[0m     @     0x5644178cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25523)[0m     @     0x564417841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25523)[0m     @     0x5644178cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25523)[0m     @     0x5644178cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25523)[0m     @     0x564417841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25523)[0m     @     0x5644178cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25523)[0m     @     0x5644178cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25523)[0m     @     0x564417841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25523)[0m     @     0x5644178cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25523)[0m     @     0x5644178cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25523)[0m     @     0x564417841689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25537)[0m     @     0x55efc2828baf _PyEval_EvalCodeWithName
[2m[36m(pid=25537)[0m     @     0x55efc2829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25537)[0m     @     0x55efc279e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25537)[0m     @     0x55efc2828baf _PyEval_EvalCodeWithName
[2m[36m(pid=25537)[0m     @     0x55efc2829643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25537)[0m     @     0x55efc279e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25424)[0m     @     0x55c9f458ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25424)[0m     @     0x55c9f458f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25424)[0m     @     0x55c9f4504689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25424)[0m     @     0x55c9f458ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25424)[0m     @     0x55c9f458f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25424)[0m     @     0x55c9f4504689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25530)[0m     @     0x7fc3e1e328de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25530)[0m     @     0x7fc3df95f4f5 at::Tensor::copy_()
[2m[36m(pid=25530)[0m     @     0x7fc3e5a0a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25530)[0m     @     0x55b0cb46dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25530)[0m     @     0x55b0cb3c8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25530)[0m     @     0x55b0cb453baf _PyEval_EvalCodeWithName
[2m[36m(pid=25530)[0m     @     0x55b0cb454a20 method_vectorcall
[2m[36m(pid=25530)[0m     @     0x55b0cb3c8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25530)[0m     @     0x55b0cb453baf _PyEval_EvalCodeWithName
[2m[36m(pid=25530)[0m     @     0x55b0cb454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25530)[0m     @     0x55b0cb3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25530)[0m     @     0x55b0cb453baf _PyEval_EvalCodeWithName
[2m[36m(pid=25530)[0m     @     0x55b0cb454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25530)[0m     @     0x55b0cb3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25530)[0m     @     0x55b0cb453baf _PyEval_EvalCodeWithName
[2m[36m(pid=25530)[0m     @     0x55b0cb454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25530)[0m     @     0x55b0cb3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25530)[0m     @     0x55b0cb453baf _PyEval_EvalCodeWithName
[2m[36m(pid=25530)[0m     @     0x55b0cb454643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25530)[0m     @     0x55b0cb3c9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25418)[0m     @     0x7f4cb73fc4f5 at::Tensor::copy_()
[2m[36m(pid=25418)[0m     @     0x7f4cbd4a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25418)[0m     @     0x55ab293ccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25418)[0m     @     0x55ab29327b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25418)[0m     @     0x55ab293b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25418)[0m     @     0x55ab293b3a20 method_vectorcall
[2m[36m(pid=25418)[0m     @     0x55ab29327bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25418)[0m     @     0x55ab293b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25418)[0m     @     0x55ab293b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25418)[0m     @     0x55ab29328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25418)[0m     @     0x55ab293b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25418)[0m     @     0x55ab293b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25418)[0m     @     0x55ab29328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25418)[0m     @     0x55ab293b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25418)[0m     @     0x55ab293b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25418)[0m     @     0x55ab29328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25418)[0m     @     0x55ab293b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=25418)[0m     @     0x55ab293b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25418)[0m     @     0x55ab29328689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25410)[0m     @     0x7f97401cf4f5 at::Tensor::copy_()
[2m[36m(pid=25410)[0m     @     0x7f974627a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25410)[0m     @     0x562cc1aeafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25410)[0m     @     0x562cc1a45b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25410)[0m     @     0x562cc1ad0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25410)[0m     @     0x562cc1ad1a20 method_vectorcall
[2m[36m(pid=25410)[0m     @     0x562cc1a45bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25410)[0m     @     0x562cc1ad0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25410)[0m     @     0x562cc1ad1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25410)[0m     @     0x562cc1a46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25410)[0m     @     0x562cc1ad0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25410)[0m     @     0x562cc1ad1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25410)[0m     @     0x562cc1a46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25410)[0m     @     0x562cc1ad0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25410)[0m     @     0x562cc1ad1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25410)[0m     @     0x562cc1a46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25410)[0m     @     0x562cc1ad0baf _PyEval_EvalCodeWithName
[2m[36m(pid=25410)[0m     @     0x562cc1ad1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25410)[0m     @     0x562cc1a46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25417)[0m     @     0x7f444ba9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25417)[0m     @     0x7f44495cb4f5 at::Tensor::copy_()
[2m[36m(pid=25417)[0m     @     0x7f444f67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25417)[0m     @     0x5586a9467fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25417)[0m     @     0x5586a93c2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25417)[0m     @     0x5586a944dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25417)[0m     @     0x5586a944ea20 method_vectorcall
[2m[36m(pid=25417)[0m     @     0x5586a93c2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25417)[0m     @     0x5586a944dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25417)[0m     @     0x5586a944e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25417)[0m     @     0x5586a93c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25441)[0m     @     0x7ed538c764f5 at::Tensor::copy_()
[2m[36m(pid=25441)[0m     @     0x7ed53ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25441)[0m     @     0x5558a9a13fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25441)[0m     @     0x5558a996eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25441)[0m     @     0x5558a99f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25441)[0m     @     0x5558a99faa20 method_vectorcall
[2m[36m(pid=25441)[0m     @     0x5558a996ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25441)[0m     @     0x5558a99f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25441)[0m     @     0x5558a99fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25441)[0m     @     0x5558a996f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25441)[0m     @     0x5558a99f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25441)[0m     @     0x5558a99fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25441)[0m     @     0x5558a996f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25441)[0m     @     0x5558a99f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25441)[0m     @     0x5558a99fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25441)[0m     @     0x5558a996f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25441)[0m     @     0x5558a99f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=25441)[0m     @     0x5558a99fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25441)[0m     @     0x5558a996f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25407)[0m     @     0x7ed3093ba4f5 at::Tensor::copy_()
[2m[36m(pid=25407)[0m     @     0x7ed30f46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25407)[0m     @     0x5616a8c76fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25407)[0m     @     0x5616a8bd1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25407)[0m     @     0x5616a8c5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25407)[0m     @     0x5616a8c5da20 method_vectorcall
[2m[36m(pid=25407)[0m     @     0x5616a8bd1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25407)[0m     @     0x5616a8c5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25407)[0m     @     0x5616a8c5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25407)[0m     @     0x5616a8bd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25407)[0m     @     0x5616a8c5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25407)[0m     @     0x5616a8c5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25407)[0m     @     0x5616a8bd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25407)[0m     @     0x5616a8c5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25407)[0m     @     0x5616a8c5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25407)[0m     @     0x5616a8bd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25407)[0m     @     0x5616a8c5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25407)[0m     @     0x5616a8c5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25407)[0m     @     0x5616a8bd2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25489)[0m     @     0x7f7342dea4f5 at::Tensor::copy_()
[2m[36m(pid=25489)[0m     @     0x7f7348e9579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25489)[0m     @     0x556f87f49fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25489)[0m     @     0x556f87ea4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25489)[0m     @     0x556f87f2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25489)[0m     @     0x556f87f30a20 method_vectorcall
[2m[36m(pid=25489)[0m     @     0x556f87ea4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25489)[0m     @     0x556f87f2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25489)[0m     @     0x556f87f30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25489)[0m     @     0x556f87ea5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25489)[0m     @     0x556f87f2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25489)[0m     @     0x556f87f30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25489)[0m     @     0x556f87ea5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25489)[0m     @     0x556f87f2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25489)[0m     @     0x556f87f30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25489)[0m     @     0x556f87ea5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25489)[0m     @     0x556f87f2fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25489)[0m     @     0x556f87f30643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25489)[0m     @     0x556f87ea5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25521)[0m     @     0x7f2efa2cb4f5 at::Tensor::copy_()
[2m[36m(pid=25521)[0m     @     0x7f2f0037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25521)[0m     @     0x56254081ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25521)[0m     @     0x56254077ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25521)[0m     @     0x562540805baf _PyEval_EvalCodeWithName
[2m[36m(pid=25521)[0m     @     0x562540806a20 method_vectorcall
[2m[36m(pid=25521)[0m     @     0x56254077abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25521)[0m     @     0x562540805baf _PyEval_EvalCodeWithName
[2m[36m(pid=25521)[0m     @     0x562540806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25521)[0m     @     0x56254077b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25521)[0m     @     0x562540805baf _PyEval_EvalCodeWithName
[2m[36m(pid=25521)[0m     @     0x562540806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25521)[0m     @     0x56254077b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25521)[0m     @     0x562540805baf _PyEval_EvalCodeWithName
[2m[36m(pid=25521)[0m     @     0x562540806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25521)[0m     @     0x56254077b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25521)[0m     @     0x562540805baf _PyEval_EvalCodeWithName
[2m[36m(pid=25521)[0m     @     0x562540806643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25521)[0m     @     0x56254077b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25490)[0m     @     0x5556d8f82b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25490)[0m     @     0x5556d900dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25490)[0m     @     0x5556d900ea20 method_vectorcall
[2m[36m(pid=25490)[0m     @     0x5556d8f82bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25490)[0m     @     0x5556d900dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25490)[0m     @     0x5556d900e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25490)[0m     @     0x5556d8f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25490)[0m     @     0x5556d900dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25490)[0m     @     0x5556d900e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25490)[0m     @     0x5556d8f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25490)[0m     @     0x5556d900dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25490)[0m     @     0x5556d900e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25490)[0m     @     0x5556d8f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25490)[0m     @     0x5556d900dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25490)[0m     @     0x5556d900e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25490)[0m     @     0x5556d8f83689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25486)[0m     @     0x7f7f003e64f5 at::Tensor::copy_()
[2m[36m(pid=25486)[0m     @     0x7f7f0649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25486)[0m     @     0x5591f586efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25486)[0m     @     0x5591f57c9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25486)[0m     @     0x5591f5854baf _PyEval_EvalCodeWithName
[2m[36m(pid=25486)[0m     @     0x5591f5855a20 method_vectorcall
[2m[36m(pid=25486)[0m     @     0x5591f57c9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25486)[0m     @     0x5591f5854baf _PyEval_EvalCodeWithName
[2m[36m(pid=25486)[0m     @     0x5591f5855643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25486)[0m     @     0x5591f57ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25486)[0m     @     0x5591f5854baf _PyEval_EvalCodeWithName
[2m[36m(pid=25486)[0m     @     0x5591f5855643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25486)[0m     @     0x5591f57ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25486)[0m     @     0x5591f5854baf _PyEval_EvalCodeWithName
[2m[36m(pid=25486)[0m     @     0x5591f5855643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25486)[0m     @     0x5591f57ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25486)[0m     @     0x5591f5854baf _PyEval_EvalCodeWithName
[2m[36m(pid=25486)[0m     @     0x5591f5855643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25486)[0m     @     0x5591f57ca689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25509)[0m     @     0x7f42217ce4f5 at::Tensor::copy_()
[2m[36m(pid=25509)[0m     @     0x7f422787979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25509)[0m     @     0x555a54630fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25509)[0m     @     0x555a5458bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25509)[0m     @     0x555a54616baf _PyEval_EvalCodeWithName
[2m[36m(pid=25509)[0m     @     0x555a54617a20 method_vectorcall
[2m[36m(pid=25509)[0m     @     0x555a5458bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25509)[0m     @     0x555a54616baf _PyEval_EvalCodeWithName
[2m[36m(pid=25509)[0m     @     0x555a54617643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25509)[0m     @     0x555a5458c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25509)[0m     @     0x555a54616baf _PyEval_EvalCodeWithName
[2m[36m(pid=25509)[0m     @     0x555a54617643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25509)[0m     @     0x555a5458c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25509)[0m     @     0x555a54616baf _PyEval_EvalCodeWithName
[2m[36m(pid=25509)[0m     @     0x555a54617643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25509)[0m     @     0x555a5458c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25509)[0m     @     0x555a54616baf _PyEval_EvalCodeWithName
[2m[36m(pid=25509)[0m     @     0x555a54617643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25509)[0m     @     0x555a5458c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25409)[0m     @     0x7ed827eed4f5 at::Tensor::copy_()
[2m[36m(pid=25409)[0m     @     0x7ed82df9879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25409)[0m     @     0x5579c6d83fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25409)[0m     @     0x5579c6cdeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25409)[0m     @     0x5579c6d69baf _PyEval_EvalCodeWithName
[2m[36m(pid=25409)[0m     @     0x5579c6d6aa20 method_vectorcall
[2m[36m(pid=25409)[0m     @     0x5579c6cdebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25409)[0m     @     0x5579c6d69baf _PyEval_EvalCodeWithName
[2m[36m(pid=25409)[0m     @     0x5579c6d6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25409)[0m     @     0x5579c6cdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25409)[0m     @     0x5579c6d69baf _PyEval_EvalCodeWithName
[2m[36m(pid=25409)[0m     @     0x5579c6d6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25409)[0m     @     0x5579c6cdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25409)[0m     @     0x5579c6d69baf _PyEval_EvalCodeWithName
[2m[36m(pid=25409)[0m     @     0x5579c6d6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25409)[0m     @     0x5579c6cdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25409)[0m     @     0x5579c6d69baf _PyEval_EvalCodeWithName
[2m[36m(pid=25409)[0m     @     0x5579c6d6a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25409)[0m     @     0x5579c6cdf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25477)[0m     @     0x7f04536138de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25477)[0m     @     0x7f04511404f5 at::Tensor::copy_()
[2m[36m(pid=25422)[0m     @     0x55f764a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25422)[0m     @     0x55f764a3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25422)[0m     @     0x55f7649b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25422)[0m     @     0x55f764a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25422)[0m     @     0x55f764a3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25422)[0m     @     0x55f7649b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25422)[0m     @     0x55f764a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25422)[0m     @     0x55f764a3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25422)[0m     @     0x55f7649b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25422)[0m     @     0x55f764a3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25422)[0m     @     0x55f764a3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25422)[0m     @     0x55f7649b2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25413)[0m     @     0x7ee4fb3124f5 at::Tensor::copy_()
[2m[36m(pid=25413)[0m     @     0x7ee5013bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25413)[0m     @     0x55b114875fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25413)[0m     @     0x55b1147d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25413)[0m     @     0x55b11485bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25413)[0m     @     0x55b11485ca20 method_vectorcall
[2m[36m(pid=25413)[0m     @     0x55b1147d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25413)[0m     @     0x55b11485bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25413)[0m     @     0x55b11485c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25413)[0m     @     0x55b1147d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25413)[0m     @     0x55b11485bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25413)[0m     @     0x55b11485c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25413)[0m     @     0x55b1147d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25413)[0m     @     0x55b11485bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25413)[0m     @     0x55b11485c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25413)[0m     @     0x55b1147d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25413)[0m     @     0x55b11485bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25413)[0m     @     0x55b11485c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25413)[0m     @     0x55b1147d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25520)[0m     @     0x7f9d3038b4f5 at::Tensor::copy_()
[2m[36m(pid=25520)[0m     @     0x7f9d3643679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25520)[0m     @     0x559244aa4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25520)[0m     @     0x5592449ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25520)[0m     @     0x559244a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25520)[0m     @     0x559244a8ba20 method_vectorcall
[2m[36m(pid=25520)[0m     @     0x5592449ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25520)[0m     @     0x559244a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25520)[0m     @     0x559244a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25520)[0m     @     0x559244a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25520)[0m     @     0x559244a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25520)[0m     @     0x559244a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25520)[0m     @     0x559244a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25520)[0m     @     0x559244a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25520)[0m     @     0x559244a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25520)[0m     @     0x559244a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25520)[0m     @     0x559244a8abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25520)[0m     @     0x559244a8b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25520)[0m     @     0x559244a00689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25482)[0m     @     0x56422a697643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25482)[0m     @     0x56422a60c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25482)[0m     @     0x56422a696baf _PyEval_EvalCodeWithName
[2m[36m(pid=25482)[0m     @     0x56422a697643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25482)[0m     @     0x56422a60c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25421)[0m     @     0x5570ee89a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25518)[0m     @     0x7faf979a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25518)[0m     @     0x55e78f9a4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25518)[0m     @     0x55e78f8ffb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25518)[0m     @     0x55e78f98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25518)[0m     @     0x55e78f98ba20 method_vectorcall
[2m[36m(pid=25518)[0m     @     0x55e78f8ffbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25518)[0m     @     0x55e78f98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25518)[0m     @     0x55e78f98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25518)[0m     @     0x55e78f900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25518)[0m     @     0x55e78f98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25518)[0m     @     0x55e78f98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25518)[0m     @     0x55e78f900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25518)[0m     @     0x55e78f98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25518)[0m     @     0x55e78f98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25518)[0m     @     0x55e78f900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25518)[0m     @     0x55e78f98abaf _PyEval_EvalCodeWithName
[2m[36m(pid=25518)[0m     @     0x55e78f98b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25518)[0m     @     0x55e78f900689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25403)[0m     @     0x561ac117a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25432)[0m     @     0x7fbfcfa2379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25432)[0m     @     0x56201658ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25432)[0m     @     0x5620164eab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25432)[0m     @     0x562016575baf _PyEval_EvalCodeWithName
[2m[36m(pid=25432)[0m     @     0x562016576a20 method_vectorcall
[2m[36m(pid=25432)[0m     @     0x5620164eabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25432)[0m     @     0x562016575baf _PyEval_EvalCodeWithName
[2m[36m(pid=25432)[0m     @     0x562016576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25432)[0m     @     0x5620164eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25432)[0m     @     0x562016575baf _PyEval_EvalCodeWithName
[2m[36m(pid=25432)[0m     @     0x562016576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25432)[0m     @     0x5620164eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25432)[0m     @     0x562016575baf _PyEval_EvalCodeWithName
[2m[36m(pid=25432)[0m     @     0x562016576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25432)[0m     @     0x5620164eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25432)[0m     @     0x562016575baf _PyEval_EvalCodeWithName
[2m[36m(pid=25432)[0m     @     0x562016576643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25432)[0m     @     0x5620164eb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25508)[0m     @     0x563c491d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25508)[0m     @     0x563c4914d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25538)[0m     @     0x7f081f9cc4f5 at::Tensor::copy_()
[2m[36m(pid=25538)[0m     @     0x7f0825a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25538)[0m     @     0x559815a4dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25538)[0m     @     0x5598159a8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25538)[0m     @     0x559815a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=25538)[0m     @     0x559815a34a20 method_vectorcall
[2m[36m(pid=25538)[0m     @     0x5598159a8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25538)[0m     @     0x559815a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=25538)[0m     @     0x559815a34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25538)[0m     @     0x5598159a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25538)[0m     @     0x559815a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=25538)[0m     @     0x559815a34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25538)[0m     @     0x5598159a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25538)[0m     @     0x559815a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=25538)[0m     @     0x559815a34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25538)[0m     @     0x5598159a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25538)[0m     @     0x559815a33baf _PyEval_EvalCodeWithName
[2m[36m(pid=25538)[0m     @     0x559815a34643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25538)[0m     @     0x5598159a9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25470)[0m     @     0x7f186b49f4f5 at::Tensor::copy_()
[2m[36m(pid=25470)[0m     @     0x7f186d9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25442)[0m     @     0x7f8e1c1244f5 at::Tensor::copy_()
[2m[36m(pid=25442)[0m     @     0x7f8e221cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25442)[0m     @     0x56280c752fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25442)[0m     @     0x56280c6adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25442)[0m     @     0x56280c738baf _PyEval_EvalCodeWithName
[2m[36m(pid=25442)[0m     @     0x56280c739a20 method_vectorcall
[2m[36m(pid=25442)[0m     @     0x56280c6adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25442)[0m     @     0x56280c738baf _PyEval_EvalCodeWithName
[2m[36m(pid=25442)[0m     @     0x56280c739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25442)[0m     @     0x56280c6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25442)[0m     @     0x56280c738baf _PyEval_EvalCodeWithName
[2m[36m(pid=25442)[0m     @     0x56280c739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25442)[0m     @     0x56280c6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25442)[0m     @     0x56280c738baf _PyEval_EvalCodeWithName
[2m[36m(pid=25442)[0m     @     0x56280c739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25442)[0m     @     0x56280c6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25442)[0m     @     0x56280c738baf _PyEval_EvalCodeWithName
[2m[36m(pid=25442)[0m     @     0x56280c739643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25442)[0m     @     0x56280c6ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25420)[0m     @     0x7ed0c180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25420)[0m     @     0x7ed0c182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25420)[0m     @     0x7ed0c0ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25420)[0m     @     0x7ed0c0ccd388 at::native::copy_impl()
[2m[36m(pid=25420)[0m     @     0x7ed0c0ccf5a4 at::native::copy_()
[2m[36m(pid=25443)[0m     @     0x7edb5272e4f5 at::Tensor::copy_()
[2m[36m(pid=25443)[0m     @     0x7edb587d979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25443)[0m     @     0x55b1503bffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25443)[0m     @     0x55b15031ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25443)[0m     @     0x55b1503a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25443)[0m     @     0x55b1503a6a20 method_vectorcall
[2m[36m(pid=25443)[0m     @     0x55b15031abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25443)[0m     @     0x55b1503a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25443)[0m     @     0x55b1503a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25443)[0m     @     0x55b15031b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25443)[0m     @     0x55b1503a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25443)[0m     @     0x55b1503a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25443)[0m     @     0x55b15031b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25443)[0m     @     0x55b1503a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25443)[0m     @     0x55b1503a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25443)[0m     @     0x55b15031b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25443)[0m     @     0x55b1503a5baf _PyEval_EvalCodeWithName
[2m[36m(pid=25443)[0m     @     0x55b1503a6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25443)[0m     @     0x55b15031b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25464)[0m     @     0x7f94917d24f5 at::Tensor::copy_()
[2m[36m(pid=25464)[0m     @     0x7f949787d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25464)[0m     @     0x55cdfd96cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25464)[0m     @     0x55cdfd8c7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25464)[0m     @     0x55cdfd952baf _PyEval_EvalCodeWithName
[2m[36m(pid=25464)[0m     @     0x55cdfd953a20 method_vectorcall
[2m[36m(pid=25464)[0m     @     0x55cdfd8c7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25464)[0m     @     0x55cdfd952baf _PyEval_EvalCodeWithName
[2m[36m(pid=25464)[0m     @     0x55cdfd953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25464)[0m     @     0x55cdfd8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25464)[0m     @     0x55cdfd952baf _PyEval_EvalCodeWithName
[2m[36m(pid=25464)[0m     @     0x55cdfd953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25464)[0m     @     0x55cdfd8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25464)[0m     @     0x55cdfd952baf _PyEval_EvalCodeWithName
[2m[36m(pid=25464)[0m     @     0x55cdfd953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25464)[0m     @     0x55cdfd8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25464)[0m     @     0x55cdfd952baf _PyEval_EvalCodeWithName
[2m[36m(pid=25464)[0m     @     0x55cdfd953643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25464)[0m     @     0x55cdfd8c8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25467)[0m     @     0x7fa75b8c24f5 at::Tensor::copy_()
[2m[36m(pid=25467)[0m     @     0x7fa76196d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25467)[0m     @     0x56090a6aafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25467)[0m     @     0x56090a605b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25467)[0m     @     0x56090a690baf _PyEval_EvalCodeWithName
[2m[36m(pid=25467)[0m     @     0x56090a691a20 method_vectorcall
[2m[36m(pid=25467)[0m     @     0x56090a605bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25467)[0m     @     0x56090a690baf _PyEval_EvalCodeWithName
[2m[36m(pid=25467)[0m     @     0x56090a691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25467)[0m     @     0x56090a606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25467)[0m     @     0x56090a690baf _PyEval_EvalCodeWithName
[2m[36m(pid=25467)[0m     @     0x56090a691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25467)[0m     @     0x56090a606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25467)[0m     @     0x56090a690baf _PyEval_EvalCodeWithName
[2m[36m(pid=25467)[0m     @     0x56090a691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25467)[0m     @     0x56090a606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25467)[0m     @     0x56090a690baf _PyEval_EvalCodeWithName
[2m[36m(pid=25467)[0m     @     0x56090a691643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25467)[0m     @     0x56090a606689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25402)[0m     @     0x55c80a557baf _PyEval_EvalCodeWithName
[2m[36m(pid=25402)[0m     @     0x55c80a558643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25402)[0m     @     0x55c80a4cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25402)[0m     @     0x55c80a557baf _PyEval_EvalCodeWithName
[2m[36m(pid=25402)[0m     @     0x55c80a558643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25402)[0m     @     0x55c80a4cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25402)[0m     @     0x55c80a557baf _PyEval_EvalCodeWithName
[2m[36m(pid=25402)[0m     @     0x55c80a558643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25402)[0m     @     0x55c80a4cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25402)[0m     @     0x55c80a557baf _PyEval_EvalCodeWithName
[2m[36m(pid=25402)[0m     @     0x55c80a558643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25402)[0m     @     0x55c80a4cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25534)[0m     @     0x7fae50a384f5 at::Tensor::copy_()
[2m[36m(pid=25534)[0m     @     0x7fae56ae379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25534)[0m     @     0x55a72931cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25534)[0m     @     0x55a729277b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25534)[0m     @     0x55a729302baf _PyEval_EvalCodeWithName
[2m[36m(pid=25534)[0m     @     0x55a729303a20 method_vectorcall
[2m[36m(pid=25534)[0m     @     0x55a729277bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25534)[0m     @     0x55a729302baf _PyEval_EvalCodeWithName
[2m[36m(pid=25534)[0m     @     0x55a729303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25534)[0m     @     0x55a729278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25534)[0m     @     0x55a729302baf _PyEval_EvalCodeWithName
[2m[36m(pid=25534)[0m     @     0x55a729303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25534)[0m     @     0x55a729278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25534)[0m     @     0x55a729302baf _PyEval_EvalCodeWithName
[2m[36m(pid=25534)[0m     @     0x55a729303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25534)[0m     @     0x55a729278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25534)[0m     @     0x55a729302baf _PyEval_EvalCodeWithName
[2m[36m(pid=25534)[0m     @     0x55a729303643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25534)[0m     @     0x55a729278689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25434)[0m     @     0x558a61e0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25434)[0m     @     0x558a61e0da20 method_vectorcall
[2m[36m(pid=25434)[0m     @     0x558a61d81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25434)[0m     @     0x558a61e0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25434)[0m     @     0x558a61e0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25434)[0m     @     0x558a61d82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25434)[0m     @     0x558a61e0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25434)[0m     @     0x558a61e0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25434)[0m     @     0x558a61d82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25434)[0m     @     0x558a61e0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25434)[0m     @     0x558a61e0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25434)[0m     @     0x558a61d82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25434)[0m     @     0x558a61e0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25434)[0m     @     0x558a61e0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25434)[0m     @     0x558a61d82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25433)[0m     @     0x559aa6177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25433)[0m     @     0x559aa60ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25433)[0m     @     0x559aa6176baf _PyEval_EvalCodeWithName
[2m[36m(pid=25433)[0m     @     0x559aa6177643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25433)[0m     @     0x559aa60ec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25437)[0m     @     0x55e77fb49baf _PyEval_EvalCodeWithName
[2m[36m(pid=25437)[0m     @     0x55e77fb4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25437)[0m     @     0x55e77fabf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25437)[0m     @     0x55e77fb49baf _PyEval_EvalCodeWithName
[2m[36m(pid=25437)[0m     @     0x55e77fb4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25437)[0m     @     0x55e77fabf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25437)[0m     @     0x55e77fb49baf _PyEval_EvalCodeWithName
[2m[36m(pid=25437)[0m     @     0x55e77fb4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25437)[0m     @     0x55e77fabf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25437)[0m     @     0x55e77fb49baf _PyEval_EvalCodeWithName
[2m[36m(pid=25437)[0m     @     0x55e77fb4a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25437)[0m     @     0x55e77fabf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25404)[0m     @     0x7ef754e2fd91 at::TensorIterator::for_each()
[2m[36m(pid=25404)[0m     @     0x7ef755712b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25404)[0m     @     0x7ef755735c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25493)[0m     @     0x7ed73d1654f5 at::Tensor::copy_()
[2m[36m(pid=25493)[0m     @     0x7ed74321079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25493)[0m     @     0x56403cdd2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25493)[0m     @     0x56403cd2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25493)[0m     @     0x56403cdb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25493)[0m     @     0x56403cdb9a20 method_vectorcall
[2m[36m(pid=25493)[0m     @     0x56403cd2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25493)[0m     @     0x56403cdb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25493)[0m     @     0x56403cdb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25493)[0m     @     0x56403cd2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25493)[0m     @     0x56403cdb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25493)[0m     @     0x56403cdb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25493)[0m     @     0x56403cd2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25493)[0m     @     0x56403cdb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25493)[0m     @     0x56403cdb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25493)[0m     @     0x56403cd2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25493)[0m     @     0x56403cdb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=25493)[0m     @     0x56403cdb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25493)[0m     @     0x56403cd2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25494)[0m     @     0x7ef14896879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25494)[0m     @     0x55db6401dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25494)[0m     @     0x55db63f78b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25494)[0m     @     0x55db64003baf _PyEval_EvalCodeWithName
[2m[36m(pid=25494)[0m     @     0x55db64004a20 method_vectorcall
[2m[36m(pid=25494)[0m     @     0x55db63f78bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25494)[0m     @     0x55db64003baf _PyEval_EvalCodeWithName
[2m[36m(pid=25494)[0m     @     0x55db64004643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25494)[0m     @     0x55db63f79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25494)[0m     @     0x55db64003baf _PyEval_EvalCodeWithName
[2m[36m(pid=25494)[0m     @     0x55db64004643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25494)[0m     @     0x55db63f79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25494)[0m     @     0x55db64003baf _PyEval_EvalCodeWithName
[2m[36m(pid=25494)[0m     @     0x55db64004643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25494)[0m     @     0x55db63f79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25494)[0m     @     0x55db64003baf _PyEval_EvalCodeWithName
[2m[36m(pid=25494)[0m     @     0x55db64004643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25494)[0m     @     0x55db63f79689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25469)[0m     @     0x7fbbcb1ac5a4 at::native::copy_()
[2m[36m(pid=25469)[0m     @     0x7fbbcb8974f5 at::Tensor::copy_()
[2m[36m(pid=25414)[0m     @     0x7f7f275a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25414)[0m     @     0x7f7f275a1388 at::native::copy_impl()
[2m[36m(pid=25472)[0m     @     0x7efb56ef7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=25472)[0m     @     0x7efb56f1ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=25472)[0m     @     0x7efb563bca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25472)[0m     @     0x7efb563ba388 at::native::copy_impl()
[2m[36m(pid=25510)[0m     @     0x7f01caa674f5 at::Tensor::copy_()
[2m[36m(pid=25510)[0m     @     0x7f01ccf3a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25510)[0m     @     0x7f01caa674f5 at::Tensor::copy_()
[2m[36m(pid=25510)[0m     @     0x7f01d0b1279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25510)[0m     @     0x55ab0f069fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25510)[0m     @     0x55ab0efc4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25510)[0m     @     0x55ab0f04fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25510)[0m     @     0x55ab0f050a20 method_vectorcall
[2m[36m(pid=25510)[0m     @     0x55ab0efc4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25510)[0m     @     0x55ab0f04fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25510)[0m     @     0x55ab0f050643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25510)[0m     @     0x55ab0efc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25510)[0m     @     0x55ab0f04fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25510)[0m     @     0x55ab0f050643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25510)[0m     @     0x55ab0efc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25510)[0m     @     0x55ab0f04fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25510)[0m     @     0x55ab0f050643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25510)[0m     @     0x55ab0efc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25510)[0m     @     0x55ab0f04fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25510)[0m     @     0x55ab0f050643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25510)[0m     @     0x55ab0efc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25417)[0m     @     0x5586a944dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25417)[0m     @     0x5586a944e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25417)[0m     @     0x5586a93c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25417)[0m     @     0x5586a944dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25417)[0m     @     0x5586a944e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25417)[0m     @     0x5586a93c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25417)[0m     @     0x5586a944dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25417)[0m     @     0x5586a944e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25417)[0m     @     0x5586a93c3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25477)[0m     @     0x7f04571eb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25477)[0m     @     0x5635e95a3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25477)[0m     @     0x5635e94feb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25477)[0m     @     0x5635e9589baf _PyEval_EvalCodeWithName
[2m[36m(pid=25477)[0m     @     0x5635e958aa20 method_vectorcall
[2m[36m(pid=25477)[0m     @     0x5635e94febfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25477)[0m     @     0x5635e9589baf _PyEval_EvalCodeWithName
[2m[36m(pid=25477)[0m     @     0x5635e958a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25477)[0m     @     0x5635e94ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25477)[0m     @     0x5635e9589baf _PyEval_EvalCodeWithName
[2m[36m(pid=25477)[0m     @     0x5635e958a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25477)[0m     @     0x5635e94ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25477)[0m     @     0x5635e9589baf _PyEval_EvalCodeWithName
[2m[36m(pid=25477)[0m     @     0x5635e958a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25477)[0m     @     0x5635e94ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25477)[0m     @     0x5635e9589baf _PyEval_EvalCodeWithName
[2m[36m(pid=25477)[0m     @     0x5635e958a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25477)[0m     @     0x5635e94ff689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25470)[0m     @     0x7f186b49f4f5 at::Tensor::copy_()
[2m[36m(pid=25470)[0m     @     0x7f187154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25470)[0m     @     0x55f8644b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25470)[0m     @     0x55f864410b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25470)[0m     @     0x55f86449bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25470)[0m     @     0x55f86449ca20 method_vectorcall
[2m[36m(pid=25470)[0m     @     0x55f864410bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25470)[0m     @     0x55f86449bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25470)[0m     @     0x55f86449c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25470)[0m     @     0x55f864411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25470)[0m     @     0x55f86449bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25470)[0m     @     0x55f86449c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25470)[0m     @     0x55f864411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25470)[0m     @     0x55f86449bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25470)[0m     @     0x55f86449c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25470)[0m     @     0x55f864411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25470)[0m     @     0x55f86449bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25470)[0m     @     0x55f86449c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25470)[0m     @     0x55f864411689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25420)[0m     @     0x7ed0c13ba4f5 at::Tensor::copy_()
[2m[36m(pid=25420)[0m     @     0x7ed0c388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25404)[0m     @     0x7ef754bd7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=25404)[0m     @     0x7ef754bd5388 at::native::copy_impl()
[2m[36m(pid=25469)[0m     @     0x7fbbcdd6a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25469)[0m     @     0x7fbbcb8974f5 at::Tensor::copy_()
[2m[36m(pid=25469)[0m     @     0x7fbbd194279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25469)[0m     @     0x5609bba6ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25469)[0m     @     0x5609bb9cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25469)[0m     @     0x5609bba55baf _PyEval_EvalCodeWithName
[2m[36m(pid=25469)[0m     @     0x5609bba56a20 method_vectorcall
[2m[36m(pid=25469)[0m     @     0x5609bb9cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25469)[0m     @     0x5609bba55baf _PyEval_EvalCodeWithName
[2m[36m(pid=25469)[0m     @     0x5609bba56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25469)[0m     @     0x5609bb9cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25469)[0m     @     0x5609bba55baf _PyEval_EvalCodeWithName
[2m[36m(pid=25469)[0m     @     0x5609bba56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25469)[0m     @     0x5609bb9cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25469)[0m     @     0x5609bba55baf _PyEval_EvalCodeWithName
[2m[36m(pid=25469)[0m     @     0x5609bba56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25469)[0m     @     0x5609bb9cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25469)[0m     @     0x5609bba55baf _PyEval_EvalCodeWithName
[2m[36m(pid=25469)[0m     @     0x5609bba56643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25469)[0m     @     0x5609bb9cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25472)[0m     @     0x7efb563bc5a4 at::native::copy_()
[2m[36m(pid=25420)[0m     @     0x7ed0c13ba4f5 at::Tensor::copy_()
[2m[36m(pid=25420)[0m     @     0x7ed0c746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25420)[0m     @     0x558c82dd7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25420)[0m     @     0x558c82d32b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25420)[0m     @     0x558c82dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25420)[0m     @     0x558c82dbea20 method_vectorcall
[2m[36m(pid=25420)[0m     @     0x558c82d32bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25420)[0m     @     0x558c82dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25420)[0m     @     0x558c82dbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25420)[0m     @     0x558c82d33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25420)[0m     @     0x558c82dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25420)[0m     @     0x558c82dbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25420)[0m     @     0x558c82d33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25420)[0m     @     0x558c82dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25420)[0m     @     0x558c82dbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25420)[0m     @     0x558c82d33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25420)[0m     @     0x558c82dbdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=25420)[0m     @     0x558c82dbe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25420)[0m     @     0x558c82d33689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25404)[0m     @     0x7ef754bd75a4 at::native::copy_()
[2m[36m(pid=25414)[0m     @     0x7f7f275a35a4 at::native::copy_()
[2m[36m(pid=25414)[0m     @     0x7f7f27c8e4f5 at::Tensor::copy_()
[2m[36m(pid=25472)[0m     @     0x7efb56aa74f5 at::Tensor::copy_()
[2m[36m(pid=25472)[0m     @     0x7efb58f7a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25472)[0m     @     0x7efb56aa74f5 at::Tensor::copy_()
[2m[36m(pid=25472)[0m     @     0x7efb5cb5279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25472)[0m     @     0x55e3eacbefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25472)[0m     @     0x55e3eac19b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25472)[0m     @     0x55e3eaca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25472)[0m     @     0x55e3eaca5a20 method_vectorcall
[2m[36m(pid=25472)[0m     @     0x55e3eac19bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25472)[0m     @     0x55e3eaca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25472)[0m     @     0x55e3eaca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25472)[0m     @     0x55e3eac1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25472)[0m     @     0x55e3eaca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25472)[0m     @     0x55e3eaca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25472)[0m     @     0x55e3eac1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25472)[0m     @     0x55e3eaca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25472)[0m     @     0x55e3eaca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25472)[0m     @     0x55e3eac1a689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:36:09,076	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffe0497dac01000000.
2020-11-05 10:36:09,078	ERROR trial_runner.py:567 -- Trial PPO_jss_env_b316e_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=25527, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=25404)[0m     @     0x7ef7552c24f5 at::Tensor::copy_()
[2m[36m(pid=25404)[0m     @     0x7ef7577958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25414)[0m     @     0x7f7f2a1618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=25414)[0m     @     0x7f7f27c8e4f5 at::Tensor::copy_()
[2m[36m(pid=25414)[0m     @     0x7f7f2dd3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=25414)[0m     @     0x55dad6248fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=25414)[0m     @     0x55dad61a3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25414)[0m     @     0x55dad622ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25414)[0m     @     0x55dad622fa20 method_vectorcall
[2m[36m(pid=25414)[0m     @     0x55dad61a3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25414)[0m     @     0x55dad622ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25414)[0m     @     0x55dad622f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25414)[0m     @     0x55dad61a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25414)[0m     @     0x55dad622ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25414)[0m     @     0x55dad622f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25414)[0m     @     0x55dad61a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25414)[0m     @     0x55dad622ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25414)[0m     @     0x55dad622f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25414)[0m     @     0x55dad61a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25414)[0m     @     0x55dad622ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=25414)[0m     @     0x55dad622f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25414)[0m     @     0x55dad61a4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25472)[0m     @     0x55e3eaca4baf _PyEval_EvalCodeWithName
[2m[36m(pid=25472)[0m     @     0x55e3eaca5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=25472)[0m     @     0x55e3eac1a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=25527)[0m E1105 10:36:09.070443 25527 26592 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=170fdfd5d34985a7e0497dac01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=25527)[0m E1105 10:36:09.070627 25527 26592 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=89f63fee54d6858ee0497dac01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=e0497dac01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
== Status ==
Memory usage on this node: 26.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b316e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b316e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b316e_00000_0_2020-11-05_10-36-01/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 26.1/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/558.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_b316e_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_b316e_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_b316e_00000_0_2020-11-05_10-36-01/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_b316e_00000])
